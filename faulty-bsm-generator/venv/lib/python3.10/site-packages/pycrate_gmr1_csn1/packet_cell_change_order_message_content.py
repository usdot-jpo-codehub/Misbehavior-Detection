# -*- coding: UTF-8 -*-
#/**
# * Software Name : pycrate
# * Version : 0.4
# *
# * Copyright 2018. Benoit Michau. P1sec.
# *
# * This library is free software; you can redistribute it and/or
# * modify it under the terms of the GNU Lesser General Public
# * License as published by the Free Software Foundation; either
# * version 2.1 of the License, or (at your option) any later version.
# *
# * This library is distributed in the hope that it will be useful,
# * but WITHOUT ANY WARRANTY; without even the implied warranty of
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# * Lesser General Public License for more details.
# *
# * You should have received a copy of the GNU Lesser General Public
# * License along with this library; if not, write to the Free Software
# * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
# * MA 02110-1301  USA
# *
# *--------------------------------------------------------
# * File Name : pycrate_gmr1_csn1/packet_cell_change_order_message_content.py
# * Created : 2023-10-24
# * Authors : Benoit Michau
# *--------------------------------------------------------
#*/
# specification: ETSI TS 101 376-04-12
# section: 11.2.4           Packet cell change order (Iu mode only)
# top-level object: Packet Cell Change Order message content

# external references
from pycrate_gmr1_csn1.utran_fdd_target_cell_ie import utran_fdd_target_cell_ie
from pycrate_gmr1_csn1.global_tfi_ie import global_tfi_ie
from pycrate_gmr1_csn1.utran_fdd_target_cell_ie import utran_tdd_target_cell_ie
from pycrate_gmr1_csn1.padding_bits import padding_bits

# code automatically generated by pycrate_csn1
# change object type with type=CSN1T_BSTR (default type is CSN1T_UINT) in init
# add dict for value interpretation with dic={...} in CSN1Bit init
# add dict for key interpretation with kdic={...} in CSN1Alt init

from pycrate_csn1.csnobj import *

gmr_target_cell_struct = CSN1List(name='gmr_target_cell_struct', list=[
  CSN1Bit(name='arfcn', bit=11),
  CSN1Bit(name='bcch_tn', bit=5),
  CSN1Bit(name='spotbeam_id', bit=10)])

removed_3gcell_description_struct = CSN1List(name='removed_3gcell_description_struct', list=[
  CSN1Bit(name='n1', bit=2),
  CSN1List(num=([0], lambda x: x + 1), list=[
    CSN1Bit(name='n2', bit=5),
    CSN1List(num=([0], lambda x: x + 1), list=[
      CSN1Bit(name='removed_3gcell_index', bit=7),
      CSN1Bit(name='_3g_cell_diff_length', bit=3),
      CSN1Bit(name='_3gcell_diff', bit=([1], lambda x: x))])])])

repeated_utran_fdd_neighbour_cells_struct = CSN1List(name='repeated_utran_fdd_neighbour_cells_struct', list=[
  CSN1Val(name='', val='0'),
  CSN1Bit(name='fdd_arfcn', bit=14),
  CSN1Bit(name='fdd_indic0'),
  CSN1Bit(name='nr_of_fdd_cells', bit=5),
  CSN1Bit(name='fdd_cell_information_field', bit=('# unprocessed: (p(NR_OF_FDD_CELLS))', lambda: 0))])

repeated_utran_tdd_neighbour_cells_struct = CSN1List(name='repeated_utran_tdd_neighbour_cells_struct', list=[
  CSN1Val(name='', val='0'),
  CSN1Bit(name='tdd_arfcn', bit=14),
  CSN1Bit(name='tdd_indic0'),
  CSN1Bit(name='nr_of_tdd_cells', bit=5),
  CSN1Bit(name='tdd_cell_information_field', bit=('# unprocessed: (q(NR_OF_TDD_CELLS))', lambda: 0))])

packet_cell_change_order_message_content = CSN1List(name='packet_cell_change_order_message_content', list=[
  CSN1Alt(alt={
    '0': ('', [
    CSN1Ref(name='global_tfi', obj=global_tfi_ie)]),
    '10': ('', [
    CSN1Bit(name='g_rnti', bit=32)])}),
  CSN1Alt(alt={
    '0': ('', [
    CSN1List(list=[
      CSN1Bit(name='immediate_rel'),
      CSN1Ref(name='target_cell', obj=gmr_target_cell_struct)])]),
    '1': ('', [
    CSN1List(list=[
      CSN1Val(name='', val='00'),
      CSN1List(list=[
        CSN1Bit(name='immediate_rel'),
        CSN1Alt(alt={
          '0': ('', []),
          '1': ('', [
          CSN1Ref(name='utran_fdd_target_cell', obj=utran_fdd_target_cell_ie)])}),
        CSN1Alt(alt={
          '0': ('', []),
          '1': ('', [
          CSN1Ref(name='utran_tdd_target_cell', obj=utran_tdd_target_cell_ie)])}),
        CSN1Ref(obj=padding_bits)])])])})])

utran_fdd_description_struct = CSN1List(name='utran_fdd_description_struct', list=[
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Bit(name='bandwidth_fdd', bit=3)])}),
  CSN1List(num=-1, list=[
    CSN1Val(name='', val='1'),
    CSN1Ref(name='repeated_utran_fdd_neighbour_cells', obj=repeated_utran_fdd_neighbour_cells_struct)]),
  CSN1Val(name='', val='0')])

utran_tdd_description_struct = CSN1List(name='utran_tdd_description_struct', list=[
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Bit(name='bandwidth_tdd', bit=3)])}),
  CSN1List(num=-1, list=[
    CSN1Val(name='', val='1'),
    CSN1Ref(name='repeated_utran_tdd_neighbour_cells', obj=repeated_utran_tdd_neighbour_cells_struct)]),
  CSN1Val(name='', val='0')])

_3g_neighbour_cell_description_struct = CSN1List(name='_3g_neighbour_cell_description_struct', list=[
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Bit(name='index_start_3g', bit=7)])}),
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Bit(name='absolute_index_start_emr', bit=7)])}),
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Ref(name='utran_fdd_description', obj=utran_fdd_description_struct)])}),
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Ref(name='utran_tdd_description', obj=utran_tdd_description_struct)])}),
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Ref(name='removed_3gcell_description', obj=removed_3gcell_description_struct)])})])

