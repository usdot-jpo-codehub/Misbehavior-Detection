# -*- coding: UTF-8 -*-
#/**
# * Software Name : pycrate
# * Version : 0.4
# *
# * Copyright 2018. Benoit Michau. P1sec.
# *
# * This library is free software; you can redistribute it and/or
# * modify it under the terms of the GNU Lesser General Public
# * License as published by the Free Software Foundation; either
# * version 2.1 of the License, or (at your option) any later version.
# *
# * This library is distributed in the hope that it will be useful,
# * but WITHOUT ANY WARRANTY; without even the implied warranty of
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# * Lesser General Public License for more details.
# *
# * You should have received a copy of the GNU Lesser General Public
# * License along with this library; if not, write to the Free Software
# * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
# * MA 02110-1301  USA
# *
# *--------------------------------------------------------
# * File Name : pycrate_gmr1_csn1/mes_geran_iu_mode_radio_access_capability_ie.py
# * Created : 2023-10-24
# * Authors : Benoit Michau
# *--------------------------------------------------------
#*/
# specification: ETSI TS 101 376-04-13
# section: 9.3.45        MES GERAN Iu mode Radio Access Capability
# top-level object: MES GERAN Iu mode Radio Access Capability IE

# external references
from pycrate_gmr1_csn1.mes_measurement_capability_ie import mes_measurement_capability_ie
from pycrate_gmr1_csn1.mes_multi_mode_and_multi_rat_capability_ie import mes_multi_mode_and_multi_rat_capability_ie
from pycrate_gmr1_csn1.mes_positioning_capability_ie import mes_positioning_capability_ie
from pycrate_gmr1_csn1.security_capability_ie import security_capability_ie
from pycrate_gmr1_csn1.mes_geran_iu_mode_rlc_capability_ie import mes_geran_iu_mode_rlc_capability_ie
from pycrate_gmr1_csn1.pdcp_capability_ie import pdcp_capability_ie
from pycrate_gmr1_csn1.mes_rf_capability_gsm_ie import mes_rf_capability_gsm_ie
from pycrate_gmr1_csn1.gmprs_terminal_type_identifier_ie import gmprs_terminal_type_identifier_ie

# code automatically generated by pycrate_csn1
# change object type with type=CSN1T_BSTR (default type is CSN1T_UINT) in init
# add dict for value interpretation with dic={...} in CSN1Bit init
# add dict for key interpretation with kdic={...} in CSN1Alt init

from pycrate_csn1.csnobj import *

spare_bit = CSN1Bit(name='spare_bit')
Spare_bit = spare_bit
Spare_Bit = spare_bit

mes_geran_iu_mode_radio_access_capability_ie = CSN1List(name='mes_geran_iu_mode_radio_access_capability_ie', list=[
  CSN1Bit(name='mes_geran_iu_mode_radio_access_capability_length', bit=10),
  CSN1Ref(name='mes_rf_capability_gsm', obj=mes_rf_capability_gsm_ie),
  CSN1Ref(name='mes_geran_iu_mode_rlc_capability', obj=mes_geran_iu_mode_rlc_capability_ie),
  CSN1Ref(name='mes_pdcp_capability', obj=pdcp_capability_ie),
  CSN1Ref(name='mes_multi_mode_and_multi_rat_capability', obj=mes_multi_mode_and_multi_rat_capability_ie),
  CSN1Ref(name='security_capability', obj=security_capability_ie),
  CSN1Ref(name='mes_positioning_capability', obj=mes_positioning_capability_ie),
  CSN1Ref(name='mes_measurement_capability', obj=mes_measurement_capability_ie),
  CSN1Ref(name='mes_terminal_type', obj=gmprs_terminal_type_identifier_ie),
  CSN1Bit(name='flo_iu_capability'),
  CSN1Ref(obj=spare_bit, num=-1)])

