# -*- coding: UTF-8 -*-
#/**
# * Software Name : pycrate
# * Version : 0.4
# *
# * Copyright 2018. Benoit Michau. P1sec.
# *
# * This library is free software; you can redistribute it and/or
# * modify it under the terms of the GNU Lesser General Public
# * License as published by the Free Software Foundation; either
# * version 2.1 of the License, or (at your option) any later version.
# *
# * This library is distributed in the hope that it will be useful,
# * but WITHOUT ANY WARRANTY; without even the implied warranty of
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# * Lesser General Public License for more details.
# *
# * You should have received a copy of the GNU Lesser General Public
# * License along with this library; if not, write to the Free Software
# * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
# * MA 02110-1301  USA
# *
# *--------------------------------------------------------
# * File Name : pycrate_gmr1_csn1/sbss_relocation_information_message_content.py
# * Created : 2023-10-24
# * Authors : Benoit Michau
# *--------------------------------------------------------
#*/
# specification: ETSI TS 101 376-04-13
# section: 11.1.5.2         SBSS RELOCATION INFO
# top-level object: SBSS Relocation Information message content

# external references
from pycrate_gmr1_csn1.gmr_1_cell_identity_ie import gmr_1_cell_identity_ie
from pycrate_gmr1_csn1.gps_position_ie import gps_position_ie
from pycrate_gmr1_csn1.mes_geran_a_gb_mode_radio_access_capability_ie import mes_geran_a_gb_mode_radio_access_capability_ie
from pycrate_gmr1_csn1.rab_information_for_setup_ie import rab_information_for_setup_ie
from pycrate_gmr1_csn1.rrc_state_indicator_ie import rrc_state_indicator_ie
from pycrate_gmr1_csn1.gra_identity_ie import gra_identity_ie
from pycrate_gmr1_csn1.geran_a_gb_security_info_ie import geran_a_gb_security_info_ie
from pycrate_gmr1_csn1.rb_information_to_reconfigure_ie import rb_information_to_reconfigure_ie
from pycrate_gmr1_csn1.failure_cause_and_error_information_ie import failure_cause_and_error_information_ie
from pycrate_gmr1_csn1.start_ie import start_ie
from pycrate_gmr1_csn1.ue_cdma2000_radio_access_capability_ie import ue_cdma2000_radio_access_capability_ie
from pycrate_gmr1_csn1.extension_ie import extension_ie
from pycrate_gmr1_csn1.cn_domain_identity_ie import cn_domain_identity_ie
from pycrate_gmr1_csn1.rab_information_for_handover_ie import rab_information_for_handover_ie
from pycrate_gmr1_csn1.ue_utran_radio_access_capability_extension_ie import ue_utran_radio_access_capability_extension_ie
from pycrate_gmr1_csn1.ue_utran_radio_access_capability_ie import ue_utran_radio_access_capability_ie
from pycrate_gmr1_csn1.g_rnti_ie import g_rnti_ie
from pycrate_gmr1_csn1.mes_geran_iu_mode_radio_access_capability_ie import mes_geran_iu_mode_radio_access_capability_ie
from pycrate_gmr1_csn1.signalling_rb_information_to_setup_ie import signalling_rb_information_to_setup_ie
from pycrate_gmr1_csn1.nas_system_information_gsm_map_ie import nas_system_information_gsm_map_ie

# code automatically generated by pycrate_csn1
# change object type with type=CSN1T_BSTR (default type is CSN1T_UINT) in init
# add dict for value interpretation with dic={...} in CSN1Bit init
# add dict for key interpretation with kdic={...} in CSN1Alt init

from pycrate_csn1.csnobj import *

sbss_relocation_information_message_content = CSN1List(name='sbss_relocation_information_message_content', list=[
  CSN1Ref(name='rrc_state_indicator', obj=rrc_state_indicator_ie),
  CSN1Bit(name='state_of_rrc_procedure', bit=4),
  CSN1Alt(alt={
    '00': ('', [
    CSN1Ref(name='geran_a_gb_security_info', obj=geran_a_gb_security_info_ie)]),
    '01': ('', [
    CSN1Val(name='geran_iu_security_info', val='null')]),
    '10': ('', [
    CSN1List(list=[
      CSN1Val(name='geran_iu_security_info', val='null'),
      CSN1Bit(name='active_aes_256_ciphering_key', bit=256),
      CSN1Bit(name='active_key_age', bit=16),
      CSN1Alt(alt={
        '0': ('', []),
        '1': ('', [
        CSN1Bit(name='pending_aes_256_ciphering_key', bit=256)])}),
      CSN1Bit(name='nonce', bit=64)])]),
    '11': ('', [
    CSN1Ref(name='extension', obj=extension_ie)])}),
  CSN1Ref(name='g_rnti', obj=g_rnti_ie),
  CSN1Ref(name='start', obj=start_ie),
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Ref(name='mes_geran_iu_mode_radio_access_capability', obj=mes_geran_iu_mode_radio_access_capability_ie)])}),
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Ref(name='mes_geran_a_gb_mode_radio_access_capability', obj=mes_geran_a_gb_mode_radio_access_capability_ie)])}),
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Ref(name='ue_utran_radio_access_capability', obj=ue_utran_radio_access_capability_ie)])}),
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Ref(name='ue_utran_radio_access_capability_extension', obj=ue_utran_radio_access_capability_extension_ie)])}),
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Ref(name='ue_cdma2000_radio_access_capability', obj=ue_cdma2000_radio_access_capability_ie)])}),
  CSN1Ref(name='gra_id', obj=gra_identity_ie),
  CSN1Ref(name='cn_common_gsm_map_nas_system_info', obj=nas_system_information_gsm_map_ie),
  CSN1Bit(name='length_of_cn_domain_related_information', bit=2),
  CSN1List(num=([12], lambda x: x + 1), list=[
    CSN1Ref(name='cn_domain_identity', obj=cn_domain_identity_ie),
    CSN1Ref(name='cn_domain_specific_gsm_map_nas_system_info', obj=nas_system_information_gsm_map_ie)]),
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Bit(name='signalling_rb_information_to_setup_list', bit=3),
    CSN1Ref(name='signalling_rb_information_to_setup', obj=signalling_rb_information_to_setup_ie, num=([1], lambda x: x + 1))])}),
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Bit(name='rab_information_for_setup_list', bit=4),
    CSN1Ref(name='rab_information_for_setup', obj=rab_information_for_setup_ie, num=([1], lambda x: x + 1))])}),
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Bit(name='rb_information_to_reconfigure_list', bit=5),
    CSN1Ref(name='rb_information_to_reconfigure', obj=rb_information_to_reconfigure_ie, num=([1], lambda x: x + 1)),
    CSN1Alt(alt={
      '0': ('', []),
      '1': ('', [
      CSN1Bit(name='rab_information_for_handover_list', bit=4),
      CSN1Ref(name='rab_information_for_handover', obj=rab_information_for_handover_ie, num=([1], lambda x: x + 1))])}),
    CSN1Alt(alt={
      '0': ('', []),
      '1': ('', [
      CSN1Val(name='multirate_configuration', val='null')])}),
    CSN1Alt(alt={
      '0': ('', []),
      '1': ('', [
      CSN1Bit(name='tdmafn', bit=22)])}),
    CSN1Alt(alt={
      '0': ('', []),
      '1': ('', [
      CSN1Ref(name='failure_cause_and_error_information', obj=failure_cause_and_error_information_ie)])}),
    CSN1Alt(alt={
      '0': ('', []),
      '1': ('', [
      CSN1Ref(name='mes_gps_position', obj=gps_position_ie)])}),
    CSN1Alt(alt={
      '0': ('', []),
      '1': ('', [
      CSN1Ref(name='source_traffic_cell_identity', obj=gmr_1_cell_identity_ie)])}),
    CSN1Alt(alt={
      '0': ('', []),
      '1': ('', [
      CSN1Bit(name='dl_traffic_arfcn', bit=11)])}),
    CSN1Alt(alt={
      '0': ('', [
      CSN1Bit(bit=-1)]),
      '1': ('', [
      CSN1List(list=[
        CSN1Alt(alt={
          '0': ('', []),
          '1': ('', [
          CSN1Val(name='ul_trch_information_common_for_all_transport_channels', val='null')])}),
        CSN1Alt(alt={
          '0': ('', []),
          '1': ('', [
          CSN1Bit(name='added_or_reconfigured_ul_trch_information_list', bit=3),
          CSN1Val(name='added_or_reconfigured_ul_trch_information', val='null', num=([1], lambda x: x + 1))])}),
        CSN1Alt(alt={
          '0': ('', []),
          '1': ('', [
          CSN1Val(name='dl_trch_information_common_for_all_transport_channels', val='null')])}),
        CSN1Alt(alt={
          '0': ('', []),
          '1': ('', [
          CSN1Bit(name='added_or_reconfigured_dl_trch_information_list', bit=3),
          CSN1Val(name='added_or_reconfigured_dl_trch_information', val='null', num=([1], lambda x: x + 1))])})])]),
      None: ('', [])})])})])

