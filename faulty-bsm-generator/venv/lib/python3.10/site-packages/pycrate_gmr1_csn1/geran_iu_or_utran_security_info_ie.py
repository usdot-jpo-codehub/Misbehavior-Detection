# -*- coding: UTF-8 -*-
#/**
# * Software Name : pycrate
# * Version : 0.4
# *
# * Copyright 2018. Benoit Michau. P1sec.
# *
# * This library is free software; you can redistribute it and/or
# * modify it under the terms of the GNU Lesser General Public
# * License as published by the Free Software Foundation; either
# * version 2.1 of the License, or (at your option) any later version.
# *
# * This library is distributed in the hope that it will be useful,
# * but WITHOUT ANY WARRANTY; without even the implied warranty of
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# * Lesser General Public License for more details.
# *
# * You should have received a copy of the GNU Lesser General Public
# * License along with this library; if not, write to the Free Software
# * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
# * MA 02110-1301  USA
# *
# *--------------------------------------------------------
# * File Name : pycrate_gmr1_csn1/geran_iu_or_utran_security_info_ie.py
# * Created : 2023-10-24
# * Authors : Benoit Michau
# *--------------------------------------------------------
#*/
# specification: ETSI TS 101 376-04-13
# section: 11.2.3         RRC Security Information, from GERAN Iu mode/UTRAN to GERAN
# top-level object: GERAN Iu or UTRAN Security Info IE

# external references
from pycrate_gmr1_csn1.rlc_hfn_ie import rlc_hfn_ie
from pycrate_gmr1_csn1.cn_domain_identity_ie import cn_domain_identity_ie
from pycrate_gmr1_csn1.rb_identity_ie import rb_identity_ie

# code automatically generated by pycrate_csn1
# change object type with type=CSN1T_BSTR (default type is CSN1T_UINT) in init
# add dict for value interpretation with dic={...} in CSN1Bit init
# add dict for key interpretation with kdic={...} in CSN1Alt init

from pycrate_csn1.csnobj import *

geran_iu_or_utran_security_info_ie = CSN1List(name='geran_iu_or_utran_security_info_ie', list=[
  CSN1Bit(name='ciphering_status_for_each_cn_domain', bit=2),
  CSN1List(num=([0], lambda x: x + 1), list=[
    CSN1Ref(name='cn_domain_identity', obj=cn_domain_identity_ie),
    CSN1Bit(name='ciphering_status')]),
  CSN1Bit(name='latest_configured_cn_domain', bit=2),
  CSN1Bit(name='ciphering_info_for_transparent_rb', bit=2),
  CSN1List(num=([3], lambda x: x + 1), list=[
    CSN1Ref(name='cn_domain_identity', obj=cn_domain_identity_ie),
    CSN1Bit(name='mac_hfn', bit=11)]),
  CSN1Bit(name='ciphering_info_for_non_transparent_rb', bit=5),
  CSN1List(num=([5], lambda x: x + 1), list=[
    CSN1Ref(name='rb_id', obj=rb_identity_ie),
    CSN1Ref(name='dl_hfn', obj=rlc_hfn_ie),
    CSN1Ref(name='ul_hfn', obj=rlc_hfn_ie)]),
  CSN1Alt(alt={
    '0': ('integrity_protection_status', []),
    '1': ('integrity_protection_status', [
    CSN1List(list=[
      CSN1Bit(name='srb_id', bit=2),
      CSN1Bit(name='ul_rrc_hfn', bit=28),
      CSN1Bit(name='dl_rrc_hfn', bit=28),
      CSN1Bit(name='uplink_rrc_message_sequence_number', bit=16),
      CSN1Bit(name='downlink_rrc_message_sequence_number', bit=16)])])})])

