# -*- coding: UTF-8 -*-
#/**
# * Software Name : pycrate
# * Version : 0.4
# *
# * Copyright 2018. Benoit Michau. P1sec.
# *
# * This library is free software; you can redistribute it and/or
# * modify it under the terms of the GNU Lesser General Public
# * License as published by the Free Software Foundation; either
# * version 2.1 of the License, or (at your option) any later version.
# *
# * This library is distributed in the hope that it will be useful,
# * but WITHOUT ANY WARRANTY; without even the implied warranty of
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# * Lesser General Public License for more details.
# *
# * You should have received a copy of the GNU Lesser General Public
# * License along with this library; if not, write to the Free Software
# * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
# * MA 02110-1301  USA
# *
# *--------------------------------------------------------
# * File Name : pycrate_gmr1_csn1/packet_measurement_order_message_content.py
# * Created : 2023-10-24
# * Authors : Benoit Michau
# *--------------------------------------------------------
#*/
# specification: ETSI TS 101 376-04-12
# section: 11.2.9b Packet Measurement Order (Iu mode only)
# top-level object: Packet Measurement Order message content

# external references
from pycrate_gmr1_csn1.packet_cell_change_order_message_content import utran_fdd_description_struct
from pycrate_gmr1_csn1.global_tfi_ie import global_tfi_ie
from pycrate_gmr1_csn1.packet_cell_change_order_message_content import utran_tdd_description_struct

# code automatically generated by pycrate_csn1
# change object type with type=CSN1T_BSTR (default type is CSN1T_UINT) in init
# add dict for value interpretation with dic={...} in CSN1Bit init
# add dict for key interpretation with kdic={...} in CSN1Alt init

from pycrate_csn1.csnobj import *

spot_beam_coordinates_ie = CSN1Val(name='spot_beam_coordinates_ie', val='null')

gps_assist_ie = CSN1Val(name='gps_assist_ie', val='null')

nc_measurement_parameters_struct = CSN1Bit(name='nc_measurement_parameters_struct', bit=3)

gmr_frequency_list_struct = CSN1List(name='gmr_frequency_list_struct', list=[
  CSN1Bit(name='arfcn', bit=11),
  CSN1Bit(name='satellite_id', bit=2),
  CSN1Bit(name='spotbeam_id', bit=10),
  CSN1Bit(name='bcch_tn', bit=5)])

_3g_neighbour_cell_description_struct = CSN1List(name='_3g_neighbour_cell_description_struct', list=[
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Ref(name='utran_fdd_description', obj=utran_fdd_description_struct)])}),
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Ref(name='utran_tdd_description', obj=utran_tdd_description_struct)])})])

position_measurement_struct = CSN1List(name='position_measurement_struct', list=[
  CSN1Bit(name='position_report_type', bit=2),
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Ref(name='serving_spot_beam_coordinates', obj=spot_beam_coordinates_ie)])}),
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Ref(name='gps_assist_information', obj=gps_assist_ie)])})])

gmr_neighbour_cell_description_struct = CSN1List(name='gmr_neighbour_cell_description_struct', list=[
  CSN1List(num=-1, list=[
    CSN1Val(name='', val='1'),
    CSN1Ref(name='gmr_cell', obj=gmr_frequency_list_struct)]),
  CSN1Val(name='', val='0')])

gmr_3g_neighbour_cell_description_struct = CSN1List(name='gmr_3g_neighbour_cell_description_struct', list=[
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Ref(name='nc_measurement_parameters', obj=nc_measurement_parameters_struct)])}),
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Ref(name='gmr_neighbour_cell_description', obj=gmr_neighbour_cell_description_struct)])}),
  CSN1Alt(alt={
    '0': ('', []),
    '1': ('', [
    CSN1Ref(name='_3g_neighbour_cell_description', obj=_3g_neighbour_cell_description_struct)])})])

packet_measurement_order_message_content = CSN1List(name='packet_measurement_order_message_content', list=[
  CSN1Alt(alt={
    '0': ('', [
    CSN1Ref(name='global_tfi', obj=global_tfi_ie)]),
    '10': ('', [
    CSN1Bit(name='g_rnti', bit=32)])}),
  CSN1List(list=[
    CSN1Bit(name='measurement_request_reference', bit=8),
    CSN1Alt(alt={
      '0': ('', [
      CSN1Ref(name='position_measurement', obj=position_measurement_struct)]),
      '10': ('', [
      CSN1Ref(name='gmr_3g_neighbour_cell', obj=gmr_3g_neighbour_cell_description_struct)])})])])

