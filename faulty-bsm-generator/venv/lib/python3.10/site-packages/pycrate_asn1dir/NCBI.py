# -*- coding: UTF-8 -*-
# Code automatically generated by pycrate_asn1c

from pycrate_asn1rt.utils            import *
from pycrate_asn1rt.err              import *
from pycrate_asn1rt.glob             import make_GLOBAL, GLOBAL
from pycrate_asn1rt.dictobj          import ASN1Dict
from pycrate_asn1rt.refobj           import *
from pycrate_asn1rt.setobj           import *
from pycrate_asn1rt.asnobj_basic     import *
from pycrate_asn1rt.asnobj_str       import *
from pycrate_asn1rt.asnobj_construct import *
from pycrate_asn1rt.asnobj_class     import *
from pycrate_asn1rt.asnobj_ext       import *
from pycrate_asn1rt.init             import init_modules

class NCBI_Access:

    _name_  = 'NCBI-Access'
    _oid_   = []
    
    _obj_ = [
        'Link-set',
        ]
    _type_ = [
        'Link-set',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Link-set >-----#
    Link_set = SEQ(name='Link-set', mode=MODE_TYPE)
    _Link_set_num = INT(name='num', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Link_set_uids = SEQ_OF(name='uids', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Link_set_uids__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Link_set_uids._cont = __Link_set_uids__item_
    _Link_set_weights = SEQ_OF(name='weights', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Link_set_weights__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Link_set_weights._cont = __Link_set_weights__item_
    Link_set._cont = ASN1Dict([
        ('num', _Link_set_num),
        ('uids', _Link_set_uids),
        ('weights', _Link_set_weights),
        ])
    Link_set._ext = None
    
    _all_ = [
        _Link_set_num,
        __Link_set_uids__item_,
        _Link_set_uids,
        __Link_set_weights__item_,
        _Link_set_weights,
        Link_set,
    ]

class NCBI_Biblio:

    _name_  = 'NCBI-Biblio'
    _oid_   = []
    
    _obj_ = [
        'ArticleId',
        'PubMedId',
        'MedlineUID',
        'DOI',
        'PII',
        'PmcID',
        'PmcPid',
        'PmPid',
        'ArticleIdSet',
        'PubStatus',
        'PubStatusDate',
        'PubStatusDateSet',
        'Cit-art',
        'Cit-jour',
        'Cit-book',
        'Cit-proc',
        'Cit-pat',
        'Patent-priority',
        'Id-pat',
        'Cit-let',
        'Cit-sub',
        'Cit-gen',
        'Auth-list',
        'Author',
        'Affil',
        'Title',
        'Imprint',
        'CitRetract',
        'Meeting',
        ]
    _type_ = [
        'ArticleId',
        'PubMedId',
        'MedlineUID',
        'DOI',
        'PII',
        'PmcID',
        'PmcPid',
        'PmPid',
        'ArticleIdSet',
        'PubStatus',
        'PubStatusDate',
        'PubStatusDateSet',
        'Cit-art',
        'Cit-jour',
        'Cit-book',
        'Cit-proc',
        'Cit-pat',
        'Patent-priority',
        'Id-pat',
        'Cit-let',
        'Cit-sub',
        'Cit-gen',
        'Auth-list',
        'Author',
        'Affil',
        'Title',
        'Imprint',
        'CitRetract',
        'Meeting',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< ArticleId >-----#
    ArticleId = CHOICE(name='ArticleId', mode=MODE_TYPE)
    _ArticleId_pubmed = INT(name='pubmed', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'PubMedId')))
    _ArticleId_medline = INT(name='medline', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'MedlineUID')))
    _ArticleId_doi = STR_VIS(name='doi', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'DOI')))
    _ArticleId_pii = STR_VIS(name='pii', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'PII')))
    _ArticleId_pmcid = INT(name='pmcid', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'PmcID')))
    _ArticleId_pmcpid = STR_VIS(name='pmcpid', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'PmcPid')))
    _ArticleId_pmpid = STR_VIS(name='pmpid', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'PmPid')))
    _ArticleId_other = SEQ(name='other', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    ArticleId._cont = ASN1Dict([
        ('pubmed', _ArticleId_pubmed),
        ('medline', _ArticleId_medline),
        ('doi', _ArticleId_doi),
        ('pii', _ArticleId_pii),
        ('pmcid', _ArticleId_pmcid),
        ('pmcpid', _ArticleId_pmcpid),
        ('pmpid', _ArticleId_pmpid),
        ('other', _ArticleId_other),
        ])
    ArticleId._ext = None
    
    #-----< PubMedId >-----#
    PubMedId = INT(name='PubMedId', mode=MODE_TYPE)
    
    #-----< MedlineUID >-----#
    MedlineUID = INT(name='MedlineUID', mode=MODE_TYPE)
    
    #-----< DOI >-----#
    DOI = STR_VIS(name='DOI', mode=MODE_TYPE)
    
    #-----< PII >-----#
    PII = STR_VIS(name='PII', mode=MODE_TYPE)
    
    #-----< PmcID >-----#
    PmcID = INT(name='PmcID', mode=MODE_TYPE)
    
    #-----< PmcPid >-----#
    PmcPid = STR_VIS(name='PmcPid', mode=MODE_TYPE)
    
    #-----< PmPid >-----#
    PmPid = STR_VIS(name='PmPid', mode=MODE_TYPE)
    
    #-----< ArticleIdSet >-----#
    ArticleIdSet = SET_OF(name='ArticleIdSet', mode=MODE_TYPE)
    _ArticleIdSet__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Biblio', 'ArticleId')))
    ArticleIdSet._cont = _ArticleIdSet__item_
    
    #-----< PubStatus >-----#
    PubStatus = INT(name='PubStatus', mode=MODE_TYPE)
    PubStatus._cont = ASN1Dict([('received', 1), ('accepted', 2), ('epublish', 3), ('ppublish', 4), ('revised', 5), ('pmc', 6), ('pmcr', 7), ('pubmed', 8), ('pubmedr', 9), ('aheadofprint', 10), ('premedline', 11), ('medline', 12), ('other', 255)])
    
    #-----< PubStatusDate >-----#
    PubStatusDate = SEQ(name='PubStatusDate', mode=MODE_TYPE)
    _PubStatusDate_pubstatus = INT(name='pubstatus', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'PubStatus')))
    _PubStatusDate_date = CHOICE(name='date', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    PubStatusDate._cont = ASN1Dict([
        ('pubstatus', _PubStatusDate_pubstatus),
        ('date', _PubStatusDate_date),
        ])
    PubStatusDate._ext = None
    
    #-----< PubStatusDateSet >-----#
    PubStatusDateSet = SET_OF(name='PubStatusDateSet', mode=MODE_TYPE)
    _PubStatusDateSet__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Biblio', 'PubStatusDate')))
    PubStatusDateSet._cont = _PubStatusDateSet__item_
    
    #-----< Cit-art >-----#
    Cit_art = SEQ(name='Cit-art', mode=MODE_TYPE)
    _Cit_art_title = SET_OF(name='title', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Title')), opt=True)
    _Cit_art_authors = SEQ(name='authors', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Auth-list')), opt=True)
    _Cit_art_from_ = CHOICE(name='from', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __Cit_art_from__journal = SEQ(name='journal', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Cit-jour')))
    __Cit_art_from__book = SEQ(name='book', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Cit-book')))
    __Cit_art_from__proc = SEQ(name='proc', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Cit-proc')))
    _Cit_art_from_._cont = ASN1Dict([
        ('journal', __Cit_art_from__journal),
        ('book', __Cit_art_from__book),
        ('proc', __Cit_art_from__proc),
        ])
    _Cit_art_from_._ext = None
    _Cit_art_ids = SET_OF(name='ids', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'ArticleIdSet')), opt=True)
    Cit_art._cont = ASN1Dict([
        ('title', _Cit_art_title),
        ('authors', _Cit_art_authors),
        ('from', _Cit_art_from_),
        ('ids', _Cit_art_ids),
        ])
    Cit_art._ext = None
    
    #-----< Cit-jour >-----#
    Cit_jour = SEQ(name='Cit-jour', mode=MODE_TYPE)
    _Cit_jour_title = SET_OF(name='title', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Title')))
    _Cit_jour_imp = SEQ(name='imp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Imprint')))
    Cit_jour._cont = ASN1Dict([
        ('title', _Cit_jour_title),
        ('imp', _Cit_jour_imp),
        ])
    Cit_jour._ext = None
    
    #-----< Cit-book >-----#
    Cit_book = SEQ(name='Cit-book', mode=MODE_TYPE)
    _Cit_book_title = SET_OF(name='title', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Title')))
    _Cit_book_coll = SET_OF(name='coll', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Title')), opt=True)
    _Cit_book_authors = SEQ(name='authors', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Auth-list')))
    _Cit_book_imp = SEQ(name='imp', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Imprint')))
    Cit_book._cont = ASN1Dict([
        ('title', _Cit_book_title),
        ('coll', _Cit_book_coll),
        ('authors', _Cit_book_authors),
        ('imp', _Cit_book_imp),
        ])
    Cit_book._ext = None
    
    #-----< Cit-proc >-----#
    Cit_proc = SEQ(name='Cit-proc', mode=MODE_TYPE)
    _Cit_proc_book = SEQ(name='book', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Cit-book')))
    _Cit_proc_meet = SEQ(name='meet', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Meeting')))
    Cit_proc._cont = ASN1Dict([
        ('book', _Cit_proc_book),
        ('meet', _Cit_proc_meet),
        ])
    Cit_proc._ext = None
    
    #-----< Cit-pat >-----#
    Cit_pat = SEQ(name='Cit-pat', mode=MODE_TYPE)
    _Cit_pat_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cit_pat_authors = SEQ(name='authors', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Auth-list')))
    _Cit_pat_country = STR_VIS(name='country', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cit_pat_doc_type = STR_VIS(name='doc-type', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cit_pat_number = STR_VIS(name='number', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cit_pat_date_issue = CHOICE(name='date-issue', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    _Cit_pat_class_ = SEQ_OF(name='class', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Cit_pat_class___item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Cit_pat_class_._cont = __Cit_pat_class___item_
    _Cit_pat_app_number = STR_VIS(name='app-number', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cit_pat_app_date = CHOICE(name='app-date', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    _Cit_pat_applicants = SEQ(name='applicants', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Auth-list')), opt=True)
    _Cit_pat_assignees = SEQ(name='assignees', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Auth-list')), opt=True)
    _Cit_pat_priority = SEQ_OF(name='priority', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Cit_pat_priority__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Biblio', 'Patent-priority')))
    _Cit_pat_priority._cont = __Cit_pat_priority__item_
    _Cit_pat_abstract = STR_VIS(name='abstract', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Cit_pat._cont = ASN1Dict([
        ('title', _Cit_pat_title),
        ('authors', _Cit_pat_authors),
        ('country', _Cit_pat_country),
        ('doc-type', _Cit_pat_doc_type),
        ('number', _Cit_pat_number),
        ('date-issue', _Cit_pat_date_issue),
        ('class', _Cit_pat_class_),
        ('app-number', _Cit_pat_app_number),
        ('app-date', _Cit_pat_app_date),
        ('applicants', _Cit_pat_applicants),
        ('assignees', _Cit_pat_assignees),
        ('priority', _Cit_pat_priority),
        ('abstract', _Cit_pat_abstract),
        ])
    Cit_pat._ext = None
    
    #-----< Patent-priority >-----#
    Patent_priority = SEQ(name='Patent-priority', mode=MODE_TYPE)
    _Patent_priority_country = STR_VIS(name='country', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Patent_priority_number = STR_VIS(name='number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Patent_priority_date = CHOICE(name='date', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    Patent_priority._cont = ASN1Dict([
        ('country', _Patent_priority_country),
        ('number', _Patent_priority_number),
        ('date', _Patent_priority_date),
        ])
    Patent_priority._ext = None
    
    #-----< Id-pat >-----#
    Id_pat = SEQ(name='Id-pat', mode=MODE_TYPE)
    _Id_pat_country = STR_VIS(name='country', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Id_pat_id = CHOICE(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __Id_pat_id_number = STR_VIS(name='number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Id_pat_id_app_number = STR_VIS(name='app-number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Id_pat_id._cont = ASN1Dict([
        ('number', __Id_pat_id_number),
        ('app-number', __Id_pat_id_app_number),
        ])
    _Id_pat_id._ext = None
    _Id_pat_doc_type = STR_VIS(name='doc-type', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Id_pat._cont = ASN1Dict([
        ('country', _Id_pat_country),
        ('id', _Id_pat_id),
        ('doc-type', _Id_pat_doc_type),
        ])
    Id_pat._ext = None
    
    #-----< Cit-let >-----#
    Cit_let = SEQ(name='Cit-let', mode=MODE_TYPE)
    _Cit_let_cit = SEQ(name='cit', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Cit-book')))
    _Cit_let_man_id = STR_VIS(name='man-id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cit_let_type = ENUM(name='type', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cit_let_type._cont = ASN1Dict([('manuscript', 1), ('letter', 2), ('thesis', 3)])
    _Cit_let_type._ext = None
    Cit_let._cont = ASN1Dict([
        ('cit', _Cit_let_cit),
        ('man-id', _Cit_let_man_id),
        ('type', _Cit_let_type),
        ])
    Cit_let._ext = None
    
    #-----< Cit-sub >-----#
    Cit_sub = SEQ(name='Cit-sub', mode=MODE_TYPE)
    _Cit_sub_authors = SEQ(name='authors', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Auth-list')))
    _Cit_sub_imp = SEQ(name='imp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Imprint')), opt=True)
    _Cit_sub_medium = ENUM(name='medium', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cit_sub_medium._cont = ASN1Dict([('paper', 1), ('tape', 2), ('floppy', 3), ('email', 4), ('other', 255)])
    _Cit_sub_medium._ext = None
    _Cit_sub_date = CHOICE(name='date', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    _Cit_sub_descr = STR_VIS(name='descr', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Cit_sub._cont = ASN1Dict([
        ('authors', _Cit_sub_authors),
        ('imp', _Cit_sub_imp),
        ('medium', _Cit_sub_medium),
        ('date', _Cit_sub_date),
        ('descr', _Cit_sub_descr),
        ])
    Cit_sub._ext = None
    
    #-----< Cit-gen >-----#
    Cit_gen = SEQ(name='Cit-gen', mode=MODE_TYPE)
    _Cit_gen_cit = STR_VIS(name='cit', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cit_gen_authors = SEQ(name='authors', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Auth-list')), opt=True)
    _Cit_gen_muid = INT(name='muid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cit_gen_journal = SET_OF(name='journal', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Title')), opt=True)
    _Cit_gen_volume = STR_VIS(name='volume', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cit_gen_issue = STR_VIS(name='issue', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cit_gen_pages = STR_VIS(name='pages', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cit_gen_date = CHOICE(name='date', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    _Cit_gen_serial_number = INT(name='serial-number', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cit_gen_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cit_gen_pmid = INT(name='pmid', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'PubMedId')), opt=True)
    Cit_gen._cont = ASN1Dict([
        ('cit', _Cit_gen_cit),
        ('authors', _Cit_gen_authors),
        ('muid', _Cit_gen_muid),
        ('journal', _Cit_gen_journal),
        ('volume', _Cit_gen_volume),
        ('issue', _Cit_gen_issue),
        ('pages', _Cit_gen_pages),
        ('date', _Cit_gen_date),
        ('serial-number', _Cit_gen_serial_number),
        ('title', _Cit_gen_title),
        ('pmid', _Cit_gen_pmid),
        ])
    Cit_gen._ext = None
    
    #-----< Auth-list >-----#
    Auth_list = SEQ(name='Auth-list', mode=MODE_TYPE)
    _Auth_list_names = CHOICE(name='names', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __Auth_list_names_std = SEQ_OF(name='std', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Auth_list_names_std__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Biblio', 'Author')))
    __Auth_list_names_std._cont = ___Auth_list_names_std__item_
    __Auth_list_names_ml = SEQ_OF(name='ml', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Auth_list_names_ml__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    __Auth_list_names_ml._cont = ___Auth_list_names_ml__item_
    __Auth_list_names_str = SEQ_OF(name='str', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Auth_list_names_str__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    __Auth_list_names_str._cont = ___Auth_list_names_str__item_
    _Auth_list_names._cont = ASN1Dict([
        ('std', __Auth_list_names_std),
        ('ml', __Auth_list_names_ml),
        ('str', __Auth_list_names_str),
        ])
    _Auth_list_names._ext = None
    _Auth_list_affil = CHOICE(name='affil', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Affil')), opt=True)
    Auth_list._cont = ASN1Dict([
        ('names', _Auth_list_names),
        ('affil', _Auth_list_affil),
        ])
    Auth_list._ext = None
    
    #-----< Author >-----#
    Author = SEQ(name='Author', mode=MODE_TYPE)
    _Author_name = CHOICE(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Person-id')))
    _Author_level = ENUM(name='level', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Author_level._cont = ASN1Dict([('primary', 1), ('secondary', 2)])
    _Author_level._ext = None
    _Author_role = ENUM(name='role', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Author_role._cont = ASN1Dict([('compiler', 1), ('editor', 2), ('patent-assignee', 3), ('translator', 4)])
    _Author_role._ext = None
    _Author_affil = CHOICE(name='affil', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Affil')), opt=True)
    _Author_is_corr = BOOL(name='is-corr', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Author._cont = ASN1Dict([
        ('name', _Author_name),
        ('level', _Author_level),
        ('role', _Author_role),
        ('affil', _Author_affil),
        ('is-corr', _Author_is_corr),
        ])
    Author._ext = None
    
    #-----< Affil >-----#
    Affil = CHOICE(name='Affil', mode=MODE_TYPE)
    _Affil_str = STR_VIS(name='str', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Affil_std = SEQ(name='std', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Affil_std_affil = STR_VIS(name='affil', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Affil_std_div = STR_VIS(name='div', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Affil_std_city = STR_VIS(name='city', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Affil_std_sub = STR_VIS(name='sub', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Affil_std_country = STR_VIS(name='country', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Affil_std_street = STR_VIS(name='street', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Affil_std_email = STR_VIS(name='email', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Affil_std_fax = STR_VIS(name='fax', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Affil_std_phone = STR_VIS(name='phone', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Affil_std_postal_code = STR_VIS(name='postal-code', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Affil_std._cont = ASN1Dict([
        ('affil', __Affil_std_affil),
        ('div', __Affil_std_div),
        ('city', __Affil_std_city),
        ('sub', __Affil_std_sub),
        ('country', __Affil_std_country),
        ('street', __Affil_std_street),
        ('email', __Affil_std_email),
        ('fax', __Affil_std_fax),
        ('phone', __Affil_std_phone),
        ('postal-code', __Affil_std_postal_code),
        ])
    _Affil_std._ext = None
    Affil._cont = ASN1Dict([
        ('str', _Affil_str),
        ('std', _Affil_std),
        ])
    Affil._ext = None
    
    #-----< Title >-----#
    Title = SET_OF(name='Title', mode=MODE_TYPE)
    _Title__item_ = CHOICE(name='_item_', mode=MODE_TYPE)
    __Title__item__name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Title__item__tsub = STR_VIS(name='tsub', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Title__item__trans = STR_VIS(name='trans', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Title__item__jta = STR_VIS(name='jta', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Title__item__iso_jta = STR_VIS(name='iso-jta', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Title__item__ml_jta = STR_VIS(name='ml-jta', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Title__item__coden = STR_VIS(name='coden', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Title__item__issn = STR_VIS(name='issn', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Title__item__abr = STR_VIS(name='abr', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Title__item__isbn = STR_VIS(name='isbn', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Title__item_._cont = ASN1Dict([
        ('name', __Title__item__name),
        ('tsub', __Title__item__tsub),
        ('trans', __Title__item__trans),
        ('jta', __Title__item__jta),
        ('iso-jta', __Title__item__iso_jta),
        ('ml-jta', __Title__item__ml_jta),
        ('coden', __Title__item__coden),
        ('issn', __Title__item__issn),
        ('abr', __Title__item__abr),
        ('isbn', __Title__item__isbn),
        ])
    _Title__item_._ext = None
    Title._cont = _Title__item_
    
    #-----< Imprint >-----#
    Imprint = SEQ(name='Imprint', mode=MODE_TYPE)
    _Imprint_date = CHOICE(name='date', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    _Imprint_volume = STR_VIS(name='volume', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Imprint_issue = STR_VIS(name='issue', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Imprint_pages = STR_VIS(name='pages', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Imprint_section = STR_VIS(name='section', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Imprint_pub = CHOICE(name='pub', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Affil')), opt=True)
    _Imprint_cprt = CHOICE(name='cprt', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    _Imprint_part_sup = STR_VIS(name='part-sup', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Imprint_language = STR_VIS(name='language', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default='ENG')
    _Imprint_prepub = ENUM(name='prepub', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Imprint_prepub._cont = ASN1Dict([('submitted', 1), ('in-press', 2), ('other', 255)])
    _Imprint_prepub._ext = None
    _Imprint_part_supi = STR_VIS(name='part-supi', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Imprint_retract = SEQ(name='retract', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'CitRetract')), opt=True)
    _Imprint_pubstatus = INT(name='pubstatus', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'PubStatus')), opt=True)
    _Imprint_history = SET_OF(name='history', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'PubStatusDateSet')), opt=True)
    Imprint._cont = ASN1Dict([
        ('date', _Imprint_date),
        ('volume', _Imprint_volume),
        ('issue', _Imprint_issue),
        ('pages', _Imprint_pages),
        ('section', _Imprint_section),
        ('pub', _Imprint_pub),
        ('cprt', _Imprint_cprt),
        ('part-sup', _Imprint_part_sup),
        ('language', _Imprint_language),
        ('prepub', _Imprint_prepub),
        ('part-supi', _Imprint_part_supi),
        ('retract', _Imprint_retract),
        ('pubstatus', _Imprint_pubstatus),
        ('history', _Imprint_history),
        ])
    Imprint._ext = None
    
    #-----< CitRetract >-----#
    CitRetract = SEQ(name='CitRetract', mode=MODE_TYPE)
    _CitRetract_type = ENUM(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CitRetract_type._cont = ASN1Dict([('retracted', 1), ('notice', 2), ('in-error', 3), ('erratum', 4)])
    _CitRetract_type._ext = None
    _CitRetract_exp = STR_VIS(name='exp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    CitRetract._cont = ASN1Dict([
        ('type', _CitRetract_type),
        ('exp', _CitRetract_exp),
        ])
    CitRetract._ext = None
    
    #-----< Meeting >-----#
    Meeting = SEQ(name='Meeting', mode=MODE_TYPE)
    _Meeting_number = STR_VIS(name='number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Meeting_date = CHOICE(name='date', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    _Meeting_place = CHOICE(name='place', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Affil')), opt=True)
    Meeting._cont = ASN1Dict([
        ('number', _Meeting_number),
        ('date', _Meeting_date),
        ('place', _Meeting_place),
        ])
    Meeting._ext = None
    
    _all_ = [
        _ArticleId_pubmed,
        _ArticleId_medline,
        _ArticleId_doi,
        _ArticleId_pii,
        _ArticleId_pmcid,
        _ArticleId_pmcpid,
        _ArticleId_pmpid,
        _ArticleId_other,
        ArticleId,
        PubMedId,
        MedlineUID,
        DOI,
        PII,
        PmcID,
        PmcPid,
        PmPid,
        _ArticleIdSet__item_,
        ArticleIdSet,
        PubStatus,
        _PubStatusDate_pubstatus,
        _PubStatusDate_date,
        PubStatusDate,
        _PubStatusDateSet__item_,
        PubStatusDateSet,
        _Cit_art_title,
        _Cit_art_authors,
        __Cit_art_from__journal,
        __Cit_art_from__book,
        __Cit_art_from__proc,
        _Cit_art_from_,
        _Cit_art_ids,
        Cit_art,
        _Cit_jour_title,
        _Cit_jour_imp,
        Cit_jour,
        _Cit_book_title,
        _Cit_book_coll,
        _Cit_book_authors,
        _Cit_book_imp,
        Cit_book,
        _Cit_proc_book,
        _Cit_proc_meet,
        Cit_proc,
        _Cit_pat_title,
        _Cit_pat_authors,
        _Cit_pat_country,
        _Cit_pat_doc_type,
        _Cit_pat_number,
        _Cit_pat_date_issue,
        __Cit_pat_class___item_,
        _Cit_pat_class_,
        _Cit_pat_app_number,
        _Cit_pat_app_date,
        _Cit_pat_applicants,
        _Cit_pat_assignees,
        __Cit_pat_priority__item_,
        _Cit_pat_priority,
        _Cit_pat_abstract,
        Cit_pat,
        _Patent_priority_country,
        _Patent_priority_number,
        _Patent_priority_date,
        Patent_priority,
        _Id_pat_country,
        __Id_pat_id_number,
        __Id_pat_id_app_number,
        _Id_pat_id,
        _Id_pat_doc_type,
        Id_pat,
        _Cit_let_cit,
        _Cit_let_man_id,
        _Cit_let_type,
        Cit_let,
        _Cit_sub_authors,
        _Cit_sub_imp,
        _Cit_sub_medium,
        _Cit_sub_date,
        _Cit_sub_descr,
        Cit_sub,
        _Cit_gen_cit,
        _Cit_gen_authors,
        _Cit_gen_muid,
        _Cit_gen_journal,
        _Cit_gen_volume,
        _Cit_gen_issue,
        _Cit_gen_pages,
        _Cit_gen_date,
        _Cit_gen_serial_number,
        _Cit_gen_title,
        _Cit_gen_pmid,
        Cit_gen,
        ___Auth_list_names_std__item_,
        __Auth_list_names_std,
        ___Auth_list_names_ml__item_,
        __Auth_list_names_ml,
        ___Auth_list_names_str__item_,
        __Auth_list_names_str,
        _Auth_list_names,
        _Auth_list_affil,
        Auth_list,
        _Author_name,
        _Author_level,
        _Author_role,
        _Author_affil,
        _Author_is_corr,
        Author,
        _Affil_str,
        __Affil_std_affil,
        __Affil_std_div,
        __Affil_std_city,
        __Affil_std_sub,
        __Affil_std_country,
        __Affil_std_street,
        __Affil_std_email,
        __Affil_std_fax,
        __Affil_std_phone,
        __Affil_std_postal_code,
        _Affil_std,
        Affil,
        __Title__item__name,
        __Title__item__tsub,
        __Title__item__trans,
        __Title__item__jta,
        __Title__item__iso_jta,
        __Title__item__ml_jta,
        __Title__item__coden,
        __Title__item__issn,
        __Title__item__abr,
        __Title__item__isbn,
        _Title__item_,
        Title,
        _Imprint_date,
        _Imprint_volume,
        _Imprint_issue,
        _Imprint_pages,
        _Imprint_section,
        _Imprint_pub,
        _Imprint_cprt,
        _Imprint_part_sup,
        _Imprint_language,
        _Imprint_prepub,
        _Imprint_part_supi,
        _Imprint_retract,
        _Imprint_pubstatus,
        _Imprint_history,
        Imprint,
        _CitRetract_type,
        _CitRetract_exp,
        CitRetract,
        _Meeting_number,
        _Meeting_date,
        _Meeting_place,
        Meeting,
    ]

class NCBI_BioTree:

    _name_  = 'NCBI-BioTree'
    _oid_   = []
    
    _obj_ = [
        'BioTreeContainer',
        'NodeSet',
        'Node',
        'NodeFeatureSet',
        'NodeFeature',
        'FeatureDictSet',
        'FeatureDescr',
        'DistanceMatrix',
        ]
    _type_ = [
        'BioTreeContainer',
        'NodeSet',
        'Node',
        'NodeFeatureSet',
        'NodeFeature',
        'FeatureDictSet',
        'FeatureDescr',
        'DistanceMatrix',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< BioTreeContainer >-----#
    BioTreeContainer = SEQ(name='BioTreeContainer', mode=MODE_TYPE)
    _BioTreeContainer_treetype = STR_VIS(name='treetype', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BioTreeContainer_fdict = SET_OF(name='fdict', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BioTree', 'FeatureDictSet')))
    _BioTreeContainer_nodes = SET_OF(name='nodes', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BioTree', 'NodeSet')))
    _BioTreeContainer_label = STR_VIS(name='label', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BioTreeContainer_user = SEQ(name='user', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'User-object')), opt=True)
    BioTreeContainer._cont = ASN1Dict([
        ('treetype', _BioTreeContainer_treetype),
        ('fdict', _BioTreeContainer_fdict),
        ('nodes', _BioTreeContainer_nodes),
        ('label', _BioTreeContainer_label),
        ('user', _BioTreeContainer_user),
        ])
    BioTreeContainer._ext = None
    
    #-----< NodeSet >-----#
    NodeSet = SET_OF(name='NodeSet', mode=MODE_TYPE)
    _NodeSet__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-BioTree', 'Node')))
    NodeSet._cont = _NodeSet__item_
    
    #-----< Node >-----#
    Node = SEQ(name='Node', mode=MODE_TYPE)
    _Node_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Node_parent = INT(name='parent', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Node_features = SET_OF(name='features', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BioTree', 'NodeFeatureSet')), opt=True)
    Node._cont = ASN1Dict([
        ('id', _Node_id),
        ('parent', _Node_parent),
        ('features', _Node_features),
        ])
    Node._ext = None
    
    #-----< NodeFeatureSet >-----#
    NodeFeatureSet = SET_OF(name='NodeFeatureSet', mode=MODE_TYPE)
    _NodeFeatureSet__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-BioTree', 'NodeFeature')))
    NodeFeatureSet._cont = _NodeFeatureSet__item_
    
    #-----< NodeFeature >-----#
    NodeFeature = SEQ(name='NodeFeature', mode=MODE_TYPE)
    _NodeFeature_featureid = INT(name='featureid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NodeFeature_value = STR_UTF8(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    NodeFeature._cont = ASN1Dict([
        ('featureid', _NodeFeature_featureid),
        ('value', _NodeFeature_value),
        ])
    NodeFeature._ext = None
    
    #-----< FeatureDictSet >-----#
    FeatureDictSet = SET_OF(name='FeatureDictSet', mode=MODE_TYPE)
    _FeatureDictSet__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-BioTree', 'FeatureDescr')))
    FeatureDictSet._cont = _FeatureDictSet__item_
    
    #-----< FeatureDescr >-----#
    FeatureDescr = SEQ(name='FeatureDescr', mode=MODE_TYPE)
    _FeatureDescr_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FeatureDescr_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    FeatureDescr._cont = ASN1Dict([
        ('id', _FeatureDescr_id),
        ('name', _FeatureDescr_name),
        ])
    FeatureDescr._ext = None
    
    #-----< DistanceMatrix >-----#
    DistanceMatrix = SEQ(name='DistanceMatrix', mode=MODE_TYPE)
    _DistanceMatrix_labels = SEQ_OF(name='labels', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DistanceMatrix_labels__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _DistanceMatrix_labels._cont = __DistanceMatrix_labels__item_
    _DistanceMatrix_distances = SEQ_OF(name='distances', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DistanceMatrix_distances__item_ = REAL(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _DistanceMatrix_distances._cont = __DistanceMatrix_distances__item_
    DistanceMatrix._cont = ASN1Dict([
        ('labels', _DistanceMatrix_labels),
        ('distances', _DistanceMatrix_distances),
        ])
    DistanceMatrix._ext = None
    
    _all_ = [
        _BioTreeContainer_treetype,
        _BioTreeContainer_fdict,
        _BioTreeContainer_nodes,
        _BioTreeContainer_label,
        _BioTreeContainer_user,
        BioTreeContainer,
        _NodeSet__item_,
        NodeSet,
        _Node_id,
        _Node_parent,
        _Node_features,
        Node,
        _NodeFeatureSet__item_,
        NodeFeatureSet,
        _NodeFeature_featureid,
        _NodeFeature_value,
        NodeFeature,
        _FeatureDictSet__item_,
        FeatureDictSet,
        _FeatureDescr_id,
        _FeatureDescr_name,
        FeatureDescr,
        __DistanceMatrix_labels__item_,
        _DistanceMatrix_labels,
        __DistanceMatrix_distances__item_,
        _DistanceMatrix_distances,
        DistanceMatrix,
    ]

class NCBI_Blast4:

    _name_  = 'NCBI-Blast4'
    _oid_   = []
    
    _obj_ = [
        'BigInt',
        'Blast4-request',
        'Blast4-archive',
        'Blast4-request-body',
        'Blast4-get-databases-ex-request',
        'Blast4-finish-params-request',
        'Blast4-result-types',
        'Blast4-get-search-results-request',
        'Blast4-queries',
        'Blast4-queue-search-request',
        'Blast4-get-search-status-request',
        'Blast4-get-search-status-reply',
        'Blast4-get-request-info-request',
        'Blast4-get-request-info-reply',
        'Blast4-get-search-strategy-request',
        'Blast4-get-search-strategy-reply',
        'Blast4-get-sequences-request',
        'Blast4-get-seq-parts-request',
        'Blast4-get-protocol-info-request',
        'Blast4-get-search-info-request',
        'Blast4-reply',
        'Blast4-reply-body',
        'Blast4-finish-params-reply',
        'Blast4-get-windowmasked-taxids-reply',
        'Blast4-get-databases-reply',
        'Blast4-get-databases-ex-reply',
        'Blast4-get-matrices-reply',
        'Blast4-get-parameters-reply',
        'Blast4-get-paramsets-reply',
        'Blast4-get-programs-reply',
        'Blast4-get-search-results-reply',
        'Blast4-get-sequences-reply',
        'Blast4-seq-part-data',
        'Blast4-get-seq-parts-reply',
        'Blast4-queue-search-reply',
        'Blast4-get-queries-reply',
        'Blast4-get-protocol-info-reply',
        'Blast4-get-search-info-reply',
        'Blast4-error',
        'Blast4-error-flags',
        'Blast4-error-code',
        'Blast4-cutoff',
        'Blast4-database',
        'Blast4-seqtech',
        'Blast4-database-info',
        'Blast4-frame-type',
        'Blast4-ka-block',
        'Blast4-mask',
        'Blast4-matrix-id',
        'Blast4-parameter',
        'Blast4-parameter-info',
        'Blast4-task-info',
        'Blast4-program-info',
        'Blast4-residue-type',
        'Blast4-strand-type',
        'Blast4-subject',
        'Blast4-parameters',
        'Blast4-phi-alignments',
        'Blast4-value',
        'Blast4-simple-results',
        'Blast4-alignments-for-query',
        'Blast4-simple-alignment',
        'Blast4-range',
        ]
    _type_ = [
        'BigInt',
        'Blast4-request',
        'Blast4-archive',
        'Blast4-request-body',
        'Blast4-get-databases-ex-request',
        'Blast4-finish-params-request',
        'Blast4-result-types',
        'Blast4-get-search-results-request',
        'Blast4-queries',
        'Blast4-queue-search-request',
        'Blast4-get-search-status-request',
        'Blast4-get-search-status-reply',
        'Blast4-get-request-info-request',
        'Blast4-get-request-info-reply',
        'Blast4-get-search-strategy-request',
        'Blast4-get-search-strategy-reply',
        'Blast4-get-sequences-request',
        'Blast4-get-seq-parts-request',
        'Blast4-get-protocol-info-request',
        'Blast4-get-search-info-request',
        'Blast4-reply',
        'Blast4-reply-body',
        'Blast4-finish-params-reply',
        'Blast4-get-windowmasked-taxids-reply',
        'Blast4-get-databases-reply',
        'Blast4-get-databases-ex-reply',
        'Blast4-get-matrices-reply',
        'Blast4-get-parameters-reply',
        'Blast4-get-paramsets-reply',
        'Blast4-get-programs-reply',
        'Blast4-get-search-results-reply',
        'Blast4-get-sequences-reply',
        'Blast4-seq-part-data',
        'Blast4-get-seq-parts-reply',
        'Blast4-queue-search-reply',
        'Blast4-get-queries-reply',
        'Blast4-get-protocol-info-reply',
        'Blast4-get-search-info-reply',
        'Blast4-error',
        'Blast4-error-flags',
        'Blast4-error-code',
        'Blast4-cutoff',
        'Blast4-database',
        'Blast4-seqtech',
        'Blast4-database-info',
        'Blast4-frame-type',
        'Blast4-ka-block',
        'Blast4-mask',
        'Blast4-matrix-id',
        'Blast4-parameter',
        'Blast4-parameter-info',
        'Blast4-task-info',
        'Blast4-program-info',
        'Blast4-residue-type',
        'Blast4-strand-type',
        'Blast4-subject',
        'Blast4-parameters',
        'Blast4-phi-alignments',
        'Blast4-value',
        'Blast4-simple-results',
        'Blast4-alignments-for-query',
        'Blast4-simple-alignment',
        'Blast4-range',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< BigInt >-----#
    BigInt = INT(name='BigInt', mode=MODE_TYPE, tag=(2, TAG_APPLICATION, TAG_IMPLICIT))
    
    #-----< Blast4-request >-----#
    Blast4_request = SEQ(name='Blast4-request', mode=MODE_TYPE)
    _Blast4_request_ident = STR_VIS(name='ident', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Blast4_request_body = CHOICE(name='body', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-request-body')))
    Blast4_request._cont = ASN1Dict([
        ('ident', _Blast4_request_ident),
        ('body', _Blast4_request_body),
        ])
    Blast4_request._ext = None
    
    #-----< Blast4-archive >-----#
    Blast4_archive = SEQ(name='Blast4-archive', mode=MODE_TYPE)
    _Blast4_archive_request = SEQ(name='request', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-request')))
    _Blast4_archive_results = SEQ(name='results', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-search-results-reply')))
    _Blast4_archive_messages = SEQ_OF(name='messages', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Blast4_archive_messages__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-error')))
    _Blast4_archive_messages._cont = __Blast4_archive_messages__item_
    Blast4_archive._cont = ASN1Dict([
        ('request', _Blast4_archive_request),
        ('results', _Blast4_archive_results),
        ('messages', _Blast4_archive_messages),
        ])
    Blast4_archive._ext = None
    
    #-----< Blast4-request-body >-----#
    Blast4_request_body = CHOICE(name='Blast4-request-body', mode=MODE_TYPE)
    _Blast4_request_body_finish_params = SEQ(name='finish-params', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-finish-params-request')))
    _Blast4_request_body_get_databases = NULL(name='get-databases', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_request_body_get_matrices = NULL(name='get-matrices', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_request_body_get_parameters = NULL(name='get-parameters', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_request_body_get_paramsets = NULL(name='get-paramsets', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_request_body_get_programs = NULL(name='get-programs', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_request_body_get_search_results = SEQ(name='get-search-results', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-search-results-request')))
    _Blast4_request_body_get_sequences = SEQ(name='get-sequences', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-sequences-request')))
    _Blast4_request_body_queue_search = SEQ(name='queue-search', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-queue-search-request')))
    _Blast4_request_body_get_request_info = SEQ(name='get-request-info', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-request-info-request')))
    _Blast4_request_body_get_sequence_parts = SEQ(name='get-sequence-parts', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-seq-parts-request')))
    _Blast4_request_body_get_windowmasked_taxids = NULL(name='get-windowmasked-taxids', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_request_body_get_protocol_info = SEQ_OF(name='get-protocol-info', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-protocol-info-request')))
    _Blast4_request_body_get_search_info = SEQ(name='get-search-info', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-search-info-request')))
    _Blast4_request_body_get_databases_ex = SEQ(name='get-databases-ex', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-databases-ex-request')))
    Blast4_request_body._cont = ASN1Dict([
        ('finish-params', _Blast4_request_body_finish_params),
        ('get-databases', _Blast4_request_body_get_databases),
        ('get-matrices', _Blast4_request_body_get_matrices),
        ('get-parameters', _Blast4_request_body_get_parameters),
        ('get-paramsets', _Blast4_request_body_get_paramsets),
        ('get-programs', _Blast4_request_body_get_programs),
        ('get-search-results', _Blast4_request_body_get_search_results),
        ('get-sequences', _Blast4_request_body_get_sequences),
        ('queue-search', _Blast4_request_body_queue_search),
        ('get-request-info', _Blast4_request_body_get_request_info),
        ('get-sequence-parts', _Blast4_request_body_get_sequence_parts),
        ('get-windowmasked-taxids', _Blast4_request_body_get_windowmasked_taxids),
        ('get-protocol-info', _Blast4_request_body_get_protocol_info),
        ('get-search-info', _Blast4_request_body_get_search_info),
        ('get-databases-ex', _Blast4_request_body_get_databases_ex),
        ])
    Blast4_request_body._ext = None
    
    #-----< Blast4-get-databases-ex-request >-----#
    Blast4_get_databases_ex_request = SEQ(name='Blast4-get-databases-ex-request', mode=MODE_TYPE)
    _Blast4_get_databases_ex_request_params = SEQ_OF(name='params', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-parameters')), opt=True)
    Blast4_get_databases_ex_request._cont = ASN1Dict([
        ('params', _Blast4_get_databases_ex_request_params),
        ])
    Blast4_get_databases_ex_request._ext = None
    
    #-----< Blast4-finish-params-request >-----#
    Blast4_finish_params_request = SEQ(name='Blast4-finish-params-request', mode=MODE_TYPE)
    _Blast4_finish_params_request_program = STR_VIS(name='program', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_finish_params_request_service = STR_VIS(name='service', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_finish_params_request_paramset = STR_VIS(name='paramset', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Blast4_finish_params_request_params = SEQ_OF(name='params', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-parameters')), opt=True)
    Blast4_finish_params_request._cont = ASN1Dict([
        ('program', _Blast4_finish_params_request_program),
        ('service', _Blast4_finish_params_request_service),
        ('paramset', _Blast4_finish_params_request_paramset),
        ('params', _Blast4_finish_params_request_params),
        ])
    Blast4_finish_params_request._ext = None
    
    #-----< Blast4-result-types >-----#
    Blast4_result_types = ENUM(name='Blast4-result-types', mode=MODE_TYPE)
    Blast4_result_types._cont = ASN1Dict([('alignments', 1), ('phi-alignments', 2), ('masks', 4), ('ka-blocks', 8), ('search-stats', 16), ('pssm', 32), ('default', 63), ('simple-results', 64)])
    Blast4_result_types._ext = None
    
    #-----< Blast4-get-search-results-request >-----#
    Blast4_get_search_results_request = SEQ(name='Blast4-get-search-results-request', mode=MODE_TYPE)
    _Blast4_get_search_results_request_request_id = STR_VIS(name='request-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_get_search_results_request_result_types = INT(name='result-types', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Blast4_get_search_results_request._cont = ASN1Dict([
        ('request-id', _Blast4_get_search_results_request_request_id),
        ('result-types', _Blast4_get_search_results_request_result_types),
        ])
    Blast4_get_search_results_request._ext = None
    
    #-----< Blast4-queries >-----#
    Blast4_queries = CHOICE(name='Blast4-queries', mode=MODE_TYPE)
    _Blast4_queries_pssm = SEQ(name='pssm', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ScoreMat', 'PssmWithParameters')))
    _Blast4_queries_seq_loc_list = SEQ_OF(name='seq-loc-list', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_queries_seq_loc_list__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Blast4_queries_seq_loc_list._cont = __Blast4_queries_seq_loc_list__item_
    _Blast4_queries_bioseq_set = SEQ(name='bioseq-set', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqset', 'Bioseq-set')))
    Blast4_queries._cont = ASN1Dict([
        ('pssm', _Blast4_queries_pssm),
        ('seq-loc-list', _Blast4_queries_seq_loc_list),
        ('bioseq-set', _Blast4_queries_bioseq_set),
        ])
    Blast4_queries._ext = None
    
    #-----< Blast4-queue-search-request >-----#
    Blast4_queue_search_request = SEQ(name='Blast4-queue-search-request', mode=MODE_TYPE)
    _Blast4_queue_search_request_program = STR_VIS(name='program', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_queue_search_request_service = STR_VIS(name='service', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_queue_search_request_queries = CHOICE(name='queries', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-queries')))
    _Blast4_queue_search_request_subject = CHOICE(name='subject', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-subject')))
    _Blast4_queue_search_request_paramset = STR_VIS(name='paramset', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Blast4_queue_search_request_algorithm_options = SEQ_OF(name='algorithm-options', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-parameters')), opt=True)
    _Blast4_queue_search_request_program_options = SEQ_OF(name='program-options', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-parameters')), opt=True)
    _Blast4_queue_search_request_format_options = SEQ_OF(name='format-options', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-parameters')), opt=True)
    Blast4_queue_search_request._cont = ASN1Dict([
        ('program', _Blast4_queue_search_request_program),
        ('service', _Blast4_queue_search_request_service),
        ('queries', _Blast4_queue_search_request_queries),
        ('subject', _Blast4_queue_search_request_subject),
        ('paramset', _Blast4_queue_search_request_paramset),
        ('algorithm-options', _Blast4_queue_search_request_algorithm_options),
        ('program-options', _Blast4_queue_search_request_program_options),
        ('format-options', _Blast4_queue_search_request_format_options),
        ])
    Blast4_queue_search_request._ext = None
    
    #-----< Blast4-get-search-status-request >-----#
    Blast4_get_search_status_request = SEQ(name='Blast4-get-search-status-request', mode=MODE_TYPE)
    _Blast4_get_search_status_request_request_id = STR_VIS(name='request-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Blast4_get_search_status_request._cont = ASN1Dict([
        ('request-id', _Blast4_get_search_status_request_request_id),
        ])
    Blast4_get_search_status_request._ext = None
    
    #-----< Blast4-get-search-status-reply >-----#
    Blast4_get_search_status_reply = SEQ(name='Blast4-get-search-status-reply', mode=MODE_TYPE)
    _Blast4_get_search_status_reply_status = STR_VIS(name='status', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Blast4_get_search_status_reply._cont = ASN1Dict([
        ('status', _Blast4_get_search_status_reply_status),
        ])
    Blast4_get_search_status_reply._ext = None
    
    #-----< Blast4-get-request-info-request >-----#
    Blast4_get_request_info_request = SEQ(name='Blast4-get-request-info-request', mode=MODE_TYPE)
    _Blast4_get_request_info_request_request_id = STR_VIS(name='request-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Blast4_get_request_info_request._cont = ASN1Dict([
        ('request-id', _Blast4_get_request_info_request_request_id),
        ])
    Blast4_get_request_info_request._ext = None
    
    #-----< Blast4-get-request-info-reply >-----#
    Blast4_get_request_info_reply = SEQ(name='Blast4-get-request-info-reply', mode=MODE_TYPE)
    _Blast4_get_request_info_reply_database = SEQ(name='database', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-database')))
    _Blast4_get_request_info_reply_program = STR_VIS(name='program', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_get_request_info_reply_service = STR_VIS(name='service', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_get_request_info_reply_created_by = STR_VIS(name='created-by', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_get_request_info_reply_queries = CHOICE(name='queries', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-queries')))
    _Blast4_get_request_info_reply_algorithm_options = SEQ_OF(name='algorithm-options', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-parameters')))
    _Blast4_get_request_info_reply_program_options = SEQ_OF(name='program-options', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-parameters')))
    _Blast4_get_request_info_reply_format_options = SEQ_OF(name='format-options', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-parameters')), opt=True)
    _Blast4_get_request_info_reply_subjects = CHOICE(name='subjects', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-subject')), opt=True)
    Blast4_get_request_info_reply._cont = ASN1Dict([
        ('database', _Blast4_get_request_info_reply_database),
        ('program', _Blast4_get_request_info_reply_program),
        ('service', _Blast4_get_request_info_reply_service),
        ('created-by', _Blast4_get_request_info_reply_created_by),
        ('queries', _Blast4_get_request_info_reply_queries),
        ('algorithm-options', _Blast4_get_request_info_reply_algorithm_options),
        ('program-options', _Blast4_get_request_info_reply_program_options),
        ('format-options', _Blast4_get_request_info_reply_format_options),
        ('subjects', _Blast4_get_request_info_reply_subjects),
        ])
    Blast4_get_request_info_reply._ext = None
    
    #-----< Blast4-get-search-strategy-request >-----#
    Blast4_get_search_strategy_request = SEQ(name='Blast4-get-search-strategy-request', mode=MODE_TYPE)
    _Blast4_get_search_strategy_request_request_id = STR_VIS(name='request-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Blast4_get_search_strategy_request._cont = ASN1Dict([
        ('request-id', _Blast4_get_search_strategy_request_request_id),
        ])
    Blast4_get_search_strategy_request._ext = None
    
    #-----< Blast4-get-search-strategy-reply >-----#
    Blast4_get_search_strategy_reply = SEQ(name='Blast4-get-search-strategy-reply', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-request')))
    
    #-----< Blast4-get-sequences-request >-----#
    Blast4_get_sequences_request = SEQ(name='Blast4-get-sequences-request', mode=MODE_TYPE)
    _Blast4_get_sequences_request_database = SEQ(name='database', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-database')))
    _Blast4_get_sequences_request_seq_ids = SEQ_OF(name='seq-ids', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_get_sequences_request_seq_ids__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Blast4_get_sequences_request_seq_ids._cont = __Blast4_get_sequences_request_seq_ids__item_
    _Blast4_get_sequences_request_skip_seq_data = BOOL(name='skip-seq-data', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _Blast4_get_sequences_request_target_only = BOOL(name='target-only', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Blast4_get_sequences_request._cont = ASN1Dict([
        ('database', _Blast4_get_sequences_request_database),
        ('seq-ids', _Blast4_get_sequences_request_seq_ids),
        ('skip-seq-data', _Blast4_get_sequences_request_skip_seq_data),
        ('target-only', _Blast4_get_sequences_request_target_only),
        ])
    Blast4_get_sequences_request._ext = None
    
    #-----< Blast4-get-seq-parts-request >-----#
    Blast4_get_seq_parts_request = SEQ(name='Blast4-get-seq-parts-request', mode=MODE_TYPE)
    _Blast4_get_seq_parts_request_database = SEQ(name='database', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-database')))
    _Blast4_get_seq_parts_request_seq_locations = SEQ_OF(name='seq-locations', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_get_seq_parts_request_seq_locations__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-interval')))
    _Blast4_get_seq_parts_request_seq_locations._cont = __Blast4_get_seq_parts_request_seq_locations__item_
    Blast4_get_seq_parts_request._cont = ASN1Dict([
        ('database', _Blast4_get_seq_parts_request_database),
        ('seq-locations', _Blast4_get_seq_parts_request_seq_locations),
        ])
    Blast4_get_seq_parts_request._ext = None
    
    #-----< Blast4-get-protocol-info-request >-----#
    Blast4_get_protocol_info_request = SEQ_OF(name='Blast4-get-protocol-info-request', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-parameters')))
    
    #-----< Blast4-get-search-info-request >-----#
    Blast4_get_search_info_request = SEQ(name='Blast4-get-search-info-request', mode=MODE_TYPE)
    _Blast4_get_search_info_request_request_id = STR_VIS(name='request-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_get_search_info_request_info = SEQ_OF(name='info', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-parameters')), opt=True)
    Blast4_get_search_info_request._cont = ASN1Dict([
        ('request-id', _Blast4_get_search_info_request_request_id),
        ('info', _Blast4_get_search_info_request_info),
        ])
    Blast4_get_search_info_request._ext = None
    
    #-----< Blast4-reply >-----#
    Blast4_reply = SEQ(name='Blast4-reply', mode=MODE_TYPE)
    _Blast4_reply_errors = SEQ_OF(name='errors', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Blast4_reply_errors__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-error')))
    _Blast4_reply_errors._cont = __Blast4_reply_errors__item_
    _Blast4_reply_body = CHOICE(name='body', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-reply-body')))
    Blast4_reply._cont = ASN1Dict([
        ('errors', _Blast4_reply_errors),
        ('body', _Blast4_reply_body),
        ])
    Blast4_reply._ext = None
    
    #-----< Blast4-reply-body >-----#
    Blast4_reply_body = CHOICE(name='Blast4-reply-body', mode=MODE_TYPE)
    _Blast4_reply_body_finish_params = SEQ_OF(name='finish-params', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-finish-params-reply')))
    _Blast4_reply_body_get_databases = SEQ_OF(name='get-databases', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-databases-reply')))
    _Blast4_reply_body_get_matrices = SEQ_OF(name='get-matrices', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-matrices-reply')))
    _Blast4_reply_body_get_parameters = SEQ_OF(name='get-parameters', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-parameters-reply')))
    _Blast4_reply_body_get_paramsets = SEQ_OF(name='get-paramsets', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-paramsets-reply')))
    _Blast4_reply_body_get_programs = SEQ_OF(name='get-programs', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-programs-reply')))
    _Blast4_reply_body_get_search_results = SEQ(name='get-search-results', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-search-results-reply')))
    _Blast4_reply_body_get_sequences = SEQ_OF(name='get-sequences', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-sequences-reply')))
    _Blast4_reply_body_queue_search = SEQ(name='queue-search', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-queue-search-reply')))
    _Blast4_reply_body_get_queries = SEQ(name='get-queries', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-queries-reply')))
    _Blast4_reply_body_get_request_info = SEQ(name='get-request-info', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-request-info-reply')))
    _Blast4_reply_body_get_sequence_parts = SEQ_OF(name='get-sequence-parts', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-seq-parts-reply')))
    _Blast4_reply_body_get_windowmasked_taxids = SEQ_OF(name='get-windowmasked-taxids', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-windowmasked-taxids-reply')))
    _Blast4_reply_body_get_protocol_info = SEQ_OF(name='get-protocol-info', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-protocol-info-reply')))
    _Blast4_reply_body_get_search_info = SEQ(name='get-search-info', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-search-info-reply')))
    _Blast4_reply_body_get_databases_ex = SEQ_OF(name='get-databases-ex', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-get-databases-ex-reply')))
    Blast4_reply_body._cont = ASN1Dict([
        ('finish-params', _Blast4_reply_body_finish_params),
        ('get-databases', _Blast4_reply_body_get_databases),
        ('get-matrices', _Blast4_reply_body_get_matrices),
        ('get-parameters', _Blast4_reply_body_get_parameters),
        ('get-paramsets', _Blast4_reply_body_get_paramsets),
        ('get-programs', _Blast4_reply_body_get_programs),
        ('get-search-results', _Blast4_reply_body_get_search_results),
        ('get-sequences', _Blast4_reply_body_get_sequences),
        ('queue-search', _Blast4_reply_body_queue_search),
        ('get-queries', _Blast4_reply_body_get_queries),
        ('get-request-info', _Blast4_reply_body_get_request_info),
        ('get-sequence-parts', _Blast4_reply_body_get_sequence_parts),
        ('get-windowmasked-taxids', _Blast4_reply_body_get_windowmasked_taxids),
        ('get-protocol-info', _Blast4_reply_body_get_protocol_info),
        ('get-search-info', _Blast4_reply_body_get_search_info),
        ('get-databases-ex', _Blast4_reply_body_get_databases_ex),
        ])
    Blast4_reply_body._ext = None
    
    #-----< Blast4-finish-params-reply >-----#
    Blast4_finish_params_reply = SEQ_OF(name='Blast4-finish-params-reply', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-parameters')))
    
    #-----< Blast4-get-windowmasked-taxids-reply >-----#
    Blast4_get_windowmasked_taxids_reply = SEQ_OF(name='Blast4-get-windowmasked-taxids-reply', mode=MODE_TYPE)
    _Blast4_get_windowmasked_taxids_reply__item_ = INT(name='_item_', mode=MODE_TYPE)
    Blast4_get_windowmasked_taxids_reply._cont = _Blast4_get_windowmasked_taxids_reply__item_
    
    #-----< Blast4-get-databases-reply >-----#
    Blast4_get_databases_reply = SEQ_OF(name='Blast4-get-databases-reply', mode=MODE_TYPE)
    _Blast4_get_databases_reply__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-database-info')))
    Blast4_get_databases_reply._cont = _Blast4_get_databases_reply__item_
    
    #-----< Blast4-get-databases-ex-reply >-----#
    Blast4_get_databases_ex_reply = SEQ_OF(name='Blast4-get-databases-ex-reply', mode=MODE_TYPE)
    _Blast4_get_databases_ex_reply__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-database-info')))
    Blast4_get_databases_ex_reply._cont = _Blast4_get_databases_ex_reply__item_
    
    #-----< Blast4-get-matrices-reply >-----#
    Blast4_get_matrices_reply = SEQ_OF(name='Blast4-get-matrices-reply', mode=MODE_TYPE)
    _Blast4_get_matrices_reply__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-matrix-id')))
    Blast4_get_matrices_reply._cont = _Blast4_get_matrices_reply__item_
    
    #-----< Blast4-get-parameters-reply >-----#
    Blast4_get_parameters_reply = SEQ_OF(name='Blast4-get-parameters-reply', mode=MODE_TYPE)
    _Blast4_get_parameters_reply__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-parameter-info')))
    Blast4_get_parameters_reply._cont = _Blast4_get_parameters_reply__item_
    
    #-----< Blast4-get-paramsets-reply >-----#
    Blast4_get_paramsets_reply = SEQ_OF(name='Blast4-get-paramsets-reply', mode=MODE_TYPE)
    _Blast4_get_paramsets_reply__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-task-info')))
    Blast4_get_paramsets_reply._cont = _Blast4_get_paramsets_reply__item_
    
    #-----< Blast4-get-programs-reply >-----#
    Blast4_get_programs_reply = SEQ_OF(name='Blast4-get-programs-reply', mode=MODE_TYPE)
    _Blast4_get_programs_reply__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-program-info')))
    Blast4_get_programs_reply._cont = _Blast4_get_programs_reply__item_
    
    #-----< Blast4-get-search-results-reply >-----#
    Blast4_get_search_results_reply = SEQ(name='Blast4-get-search-results-reply', mode=MODE_TYPE)
    _Blast4_get_search_results_reply_alignments = SET_OF(name='alignments', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqalign', 'Seq-align-set')), opt=True)
    _Blast4_get_search_results_reply_phi_alignments = SEQ(name='phi-alignments', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-phi-alignments')), opt=True)
    _Blast4_get_search_results_reply_masks = SEQ_OF(name='masks', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Blast4_get_search_results_reply_masks__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-mask')))
    _Blast4_get_search_results_reply_masks._cont = __Blast4_get_search_results_reply_masks__item_
    _Blast4_get_search_results_reply_ka_blocks = SEQ_OF(name='ka-blocks', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Blast4_get_search_results_reply_ka_blocks__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-ka-block')))
    _Blast4_get_search_results_reply_ka_blocks._cont = __Blast4_get_search_results_reply_ka_blocks__item_
    _Blast4_get_search_results_reply_search_stats = SEQ_OF(name='search-stats', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Blast4_get_search_results_reply_search_stats__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Blast4_get_search_results_reply_search_stats._cont = __Blast4_get_search_results_reply_search_stats__item_
    _Blast4_get_search_results_reply_pssm = SEQ(name='pssm', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ScoreMat', 'PssmWithParameters')), opt=True)
    _Blast4_get_search_results_reply_simple_results = SEQ(name='simple-results', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-simple-results')), opt=True)
    Blast4_get_search_results_reply._cont = ASN1Dict([
        ('alignments', _Blast4_get_search_results_reply_alignments),
        ('phi-alignments', _Blast4_get_search_results_reply_phi_alignments),
        ('masks', _Blast4_get_search_results_reply_masks),
        ('ka-blocks', _Blast4_get_search_results_reply_ka_blocks),
        ('search-stats', _Blast4_get_search_results_reply_search_stats),
        ('pssm', _Blast4_get_search_results_reply_pssm),
        ('simple-results', _Blast4_get_search_results_reply_simple_results),
        ])
    Blast4_get_search_results_reply._ext = None
    
    #-----< Blast4-get-sequences-reply >-----#
    Blast4_get_sequences_reply = SEQ_OF(name='Blast4-get-sequences-reply', mode=MODE_TYPE)
    _Blast4_get_sequences_reply__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Bioseq')))
    Blast4_get_sequences_reply._cont = _Blast4_get_sequences_reply__item_
    
    #-----< Blast4-seq-part-data >-----#
    Blast4_seq_part_data = SEQ(name='Blast4-seq-part-data', mode=MODE_TYPE)
    _Blast4_seq_part_data_id = CHOICE(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Blast4_seq_part_data_data = CHOICE(name='data', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Seq-data')))
    Blast4_seq_part_data._cont = ASN1Dict([
        ('id', _Blast4_seq_part_data_id),
        ('data', _Blast4_seq_part_data_data),
        ])
    Blast4_seq_part_data._ext = None
    
    #-----< Blast4-get-seq-parts-reply >-----#
    Blast4_get_seq_parts_reply = SEQ_OF(name='Blast4-get-seq-parts-reply', mode=MODE_TYPE)
    _Blast4_get_seq_parts_reply__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-seq-part-data')))
    Blast4_get_seq_parts_reply._cont = _Blast4_get_seq_parts_reply__item_
    
    #-----< Blast4-queue-search-reply >-----#
    Blast4_queue_search_reply = SEQ(name='Blast4-queue-search-reply', mode=MODE_TYPE)
    _Blast4_queue_search_reply_request_id = STR_VIS(name='request-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Blast4_queue_search_reply._cont = ASN1Dict([
        ('request-id', _Blast4_queue_search_reply_request_id),
        ])
    Blast4_queue_search_reply._ext = None
    
    #-----< Blast4-get-queries-reply >-----#
    Blast4_get_queries_reply = SEQ(name='Blast4-get-queries-reply', mode=MODE_TYPE)
    _Blast4_get_queries_reply_queries = CHOICE(name='queries', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-queries')))
    Blast4_get_queries_reply._cont = ASN1Dict([
        ('queries', _Blast4_get_queries_reply_queries),
        ])
    Blast4_get_queries_reply._ext = None
    
    #-----< Blast4-get-protocol-info-reply >-----#
    Blast4_get_protocol_info_reply = SEQ_OF(name='Blast4-get-protocol-info-reply', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-parameters')))
    
    #-----< Blast4-get-search-info-reply >-----#
    Blast4_get_search_info_reply = SEQ(name='Blast4-get-search-info-reply', mode=MODE_TYPE)
    _Blast4_get_search_info_reply_request_id = STR_VIS(name='request-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_get_search_info_reply_info = SEQ_OF(name='info', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-parameters')), opt=True)
    Blast4_get_search_info_reply._cont = ASN1Dict([
        ('request-id', _Blast4_get_search_info_reply_request_id),
        ('info', _Blast4_get_search_info_reply_info),
        ])
    Blast4_get_search_info_reply._ext = None
    
    #-----< Blast4-error >-----#
    Blast4_error = SEQ(name='Blast4-error', mode=MODE_TYPE)
    _Blast4_error_code = INT(name='code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_error_message = STR_VIS(name='message', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Blast4_error._cont = ASN1Dict([
        ('code', _Blast4_error_code),
        ('message', _Blast4_error_message),
        ])
    Blast4_error._ext = None
    
    #-----< Blast4-error-flags >-----#
    Blast4_error_flags = ENUM(name='Blast4-error-flags', mode=MODE_TYPE)
    Blast4_error_flags._cont = ASN1Dict([('warning', 1024), ('error', 2048)])
    Blast4_error_flags._ext = None
    
    #-----< Blast4-error-code >-----#
    Blast4_error_code = INT(name='Blast4-error-code', mode=MODE_TYPE)
    Blast4_error_code._cont = ASN1Dict([('conversion-warning', 1024), ('internal-error', 2048), ('not-implemented', 2049), ('not-allowed', 2050), ('bad-request', 2051), ('bad-request-id', 2052), ('search-pending', 2053)])
    
    #-----< Blast4-cutoff >-----#
    Blast4_cutoff = CHOICE(name='Blast4-cutoff', mode=MODE_TYPE)
    _Blast4_cutoff_e_value = REAL(name='e-value', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Blast4_cutoff_raw_score = INT(name='raw-score', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Blast4_cutoff._cont = ASN1Dict([
        ('e-value', _Blast4_cutoff_e_value),
        ('raw-score', _Blast4_cutoff_raw_score),
        ])
    Blast4_cutoff._ext = None
    
    #-----< Blast4-database >-----#
    Blast4_database = SEQ(name='Blast4-database', mode=MODE_TYPE)
    _Blast4_database_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_database_type = ENUM(name='type', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-residue-type')))
    Blast4_database._cont = ASN1Dict([
        ('name', _Blast4_database_name),
        ('type', _Blast4_database_type),
        ])
    Blast4_database._ext = None
    
    #-----< Blast4-seqtech >-----#
    Blast4_seqtech = INT(name='Blast4-seqtech', mode=MODE_TYPE)
    Blast4_seqtech._cont = ASN1Dict([('unknown', 0), ('standard', 1), ('est', 2), ('sts', 3), ('survey', 4), ('genemap', 5), ('physmap', 6), ('derived', 7), ('concept-trans', 8), ('seq-pept', 9), ('both', 10), ('seq-pept-overlap', 11), ('seq-pept-homol', 12), ('concept-trans-a', 13), ('htgs-1', 14), ('htgs-2', 15), ('htgs-3', 16), ('fli-cdna', 17), ('htgs-0', 18), ('htc', 19), ('wgs', 20), ('other', 255)])
    
    #-----< Blast4-database-info >-----#
    Blast4_database_info = SEQ(name='Blast4-database-info', mode=MODE_TYPE)
    _Blast4_database_info_database = SEQ(name='database', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-database')))
    _Blast4_database_info_description = STR_VIS(name='description', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_database_info_last_updated = STR_VIS(name='last-updated', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_database_info_total_length = INT(name='total-length', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'BigInt')))
    _Blast4_database_info_num_sequences = INT(name='num-sequences', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'BigInt')))
    _Blast4_database_info_seqtech = INT(name='seqtech', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-seqtech')))
    _Blast4_database_info_taxid = INT(name='taxid', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_database_info_extended = SEQ_OF(name='extended', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-parameters')), opt=True)
    Blast4_database_info._cont = ASN1Dict([
        ('database', _Blast4_database_info_database),
        ('description', _Blast4_database_info_description),
        ('last-updated', _Blast4_database_info_last_updated),
        ('total-length', _Blast4_database_info_total_length),
        ('num-sequences', _Blast4_database_info_num_sequences),
        ('seqtech', _Blast4_database_info_seqtech),
        ('taxid', _Blast4_database_info_taxid),
        ('extended', _Blast4_database_info_extended),
        ])
    Blast4_database_info._ext = None
    
    #-----< Blast4-frame-type >-----#
    Blast4_frame_type = ENUM(name='Blast4-frame-type', mode=MODE_TYPE)
    Blast4_frame_type._cont = ASN1Dict([('notset', 0), ('plus1', 1), ('plus2', 2), ('plus3', 3), ('minus1', 4), ('minus2', 5), ('minus3', 6)])
    Blast4_frame_type._ext = None
    
    #-----< Blast4-ka-block >-----#
    Blast4_ka_block = SEQ(name='Blast4-ka-block', mode=MODE_TYPE)
    _Blast4_ka_block_lambda_ = REAL(name='lambda', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Blast4_ka_block_k = REAL(name='k', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Blast4_ka_block_h = REAL(name='h', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Blast4_ka_block_gapped = BOOL(name='gapped', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Blast4_ka_block._cont = ASN1Dict([
        ('lambda', _Blast4_ka_block_lambda_),
        ('k', _Blast4_ka_block_k),
        ('h', _Blast4_ka_block_h),
        ('gapped', _Blast4_ka_block_gapped),
        ])
    Blast4_ka_block._ext = None
    
    #-----< Blast4-mask >-----#
    Blast4_mask = SEQ(name='Blast4-mask', mode=MODE_TYPE)
    _Blast4_mask_locations = SEQ_OF(name='locations', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_mask_locations__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Blast4_mask_locations._cont = __Blast4_mask_locations__item_
    _Blast4_mask_frame = ENUM(name='frame', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-frame-type')))
    Blast4_mask._cont = ASN1Dict([
        ('locations', _Blast4_mask_locations),
        ('frame', _Blast4_mask_frame),
        ])
    Blast4_mask._ext = None
    
    #-----< Blast4-matrix-id >-----#
    Blast4_matrix_id = SEQ(name='Blast4-matrix-id', mode=MODE_TYPE)
    _Blast4_matrix_id_residue_type = ENUM(name='residue-type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-residue-type')))
    _Blast4_matrix_id_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Blast4_matrix_id._cont = ASN1Dict([
        ('residue-type', _Blast4_matrix_id_residue_type),
        ('name', _Blast4_matrix_id_name),
        ])
    Blast4_matrix_id._ext = None
    
    #-----< Blast4-parameter >-----#
    Blast4_parameter = SEQ(name='Blast4-parameter', mode=MODE_TYPE)
    _Blast4_parameter_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_parameter_value = CHOICE(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-value')))
    Blast4_parameter._cont = ASN1Dict([
        ('name', _Blast4_parameter_name),
        ('value', _Blast4_parameter_value),
        ])
    Blast4_parameter._ext = None
    
    #-----< Blast4-parameter-info >-----#
    Blast4_parameter_info = SEQ(name='Blast4-parameter-info', mode=MODE_TYPE)
    _Blast4_parameter_info_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_parameter_info_type = STR_VIS(name='type', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Blast4_parameter_info._cont = ASN1Dict([
        ('name', _Blast4_parameter_info_name),
        ('type', _Blast4_parameter_info_type),
        ])
    Blast4_parameter_info._ext = None
    
    #-----< Blast4-task-info >-----#
    Blast4_task_info = SEQ(name='Blast4-task-info', mode=MODE_TYPE)
    _Blast4_task_info_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_task_info_documentation = STR_VIS(name='documentation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Blast4_task_info._cont = ASN1Dict([
        ('name', _Blast4_task_info_name),
        ('documentation', _Blast4_task_info_documentation),
        ])
    Blast4_task_info._ext = None
    
    #-----< Blast4-program-info >-----#
    Blast4_program_info = SEQ(name='Blast4-program-info', mode=MODE_TYPE)
    _Blast4_program_info_program = STR_VIS(name='program', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_program_info_services = SEQ_OF(name='services', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_program_info_services__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Blast4_program_info_services._cont = __Blast4_program_info_services__item_
    Blast4_program_info._cont = ASN1Dict([
        ('program', _Blast4_program_info_program),
        ('services', _Blast4_program_info_services),
        ])
    Blast4_program_info._ext = None
    
    #-----< Blast4-residue-type >-----#
    Blast4_residue_type = ENUM(name='Blast4-residue-type', mode=MODE_TYPE)
    Blast4_residue_type._cont = ASN1Dict([('unknown', 0), ('protein', 1), ('nucleotide', 2)])
    Blast4_residue_type._ext = None
    
    #-----< Blast4-strand-type >-----#
    Blast4_strand_type = ENUM(name='Blast4-strand-type', mode=MODE_TYPE)
    Blast4_strand_type._cont = ASN1Dict([('forward-strand', 1), ('reverse-strand', 2), ('both-strands', 3)])
    Blast4_strand_type._ext = None
    
    #-----< Blast4-subject >-----#
    Blast4_subject = CHOICE(name='Blast4-subject', mode=MODE_TYPE)
    _Blast4_subject_database = STR_VIS(name='database', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_subject_sequences = SEQ_OF(name='sequences', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_subject_sequences__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Bioseq')))
    _Blast4_subject_sequences._cont = __Blast4_subject_sequences__item_
    _Blast4_subject_seq_loc_list = SEQ_OF(name='seq-loc-list', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_subject_seq_loc_list__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Blast4_subject_seq_loc_list._cont = __Blast4_subject_seq_loc_list__item_
    Blast4_subject._cont = ASN1Dict([
        ('database', _Blast4_subject_database),
        ('sequences', _Blast4_subject_sequences),
        ('seq-loc-list', _Blast4_subject_seq_loc_list),
        ])
    Blast4_subject._ext = None
    
    #-----< Blast4-parameters >-----#
    Blast4_parameters = SEQ_OF(name='Blast4-parameters', mode=MODE_TYPE)
    _Blast4_parameters__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-parameter')))
    Blast4_parameters._cont = _Blast4_parameters__item_
    
    #-----< Blast4-phi-alignments >-----#
    Blast4_phi_alignments = SEQ(name='Blast4-phi-alignments', mode=MODE_TYPE)
    _Blast4_phi_alignments_num_alignments = INT(name='num-alignments', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_phi_alignments_seq_locs = SEQ_OF(name='seq-locs', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_phi_alignments_seq_locs__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Blast4_phi_alignments_seq_locs._cont = __Blast4_phi_alignments_seq_locs__item_
    Blast4_phi_alignments._cont = ASN1Dict([
        ('num-alignments', _Blast4_phi_alignments_num_alignments),
        ('seq-locs', _Blast4_phi_alignments_seq_locs),
        ])
    Blast4_phi_alignments._ext = None
    
    #-----< Blast4-value >-----#
    Blast4_value = CHOICE(name='Blast4-value', mode=MODE_TYPE)
    _Blast4_value_big_integer = INT(name='big-integer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'BigInt')))
    _Blast4_value_bioseq = SEQ(name='bioseq', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Bioseq')))
    _Blast4_value_boolean = BOOL(name='boolean', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_value_cutoff = CHOICE(name='cutoff', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-cutoff')))
    _Blast4_value_integer = INT(name='integer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_value_matrix = SEQ(name='matrix', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ScoreMat', 'PssmWithParameters')))
    _Blast4_value_real = REAL(name='real', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Blast4_value_seq_align = SEQ(name='seq-align', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqalign', 'Seq-align')))
    _Blast4_value_seq_id = CHOICE(name='seq-id', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Blast4_value_seq_loc = CHOICE(name='seq-loc', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Blast4_value_strand_type = ENUM(name='strand-type', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-strand-type')))
    _Blast4_value_string = STR_VIS(name='string', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_value_big_integer_list = SEQ_OF(name='big-integer-list', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_value_big_integer_list__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'BigInt')))
    _Blast4_value_big_integer_list._cont = __Blast4_value_big_integer_list__item_
    _Blast4_value_bioseq_list = SEQ_OF(name='bioseq-list', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_value_bioseq_list__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Bioseq')))
    _Blast4_value_bioseq_list._cont = __Blast4_value_bioseq_list__item_
    _Blast4_value_boolean_list = SEQ_OF(name='boolean-list', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_value_boolean_list__item_ = BOOL(name='_item_', mode=MODE_TYPE)
    _Blast4_value_boolean_list._cont = __Blast4_value_boolean_list__item_
    _Blast4_value_cutoff_list = SEQ_OF(name='cutoff-list', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_value_cutoff_list__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-cutoff')))
    _Blast4_value_cutoff_list._cont = __Blast4_value_cutoff_list__item_
    _Blast4_value_integer_list = SEQ_OF(name='integer-list', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_value_integer_list__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Blast4_value_integer_list._cont = __Blast4_value_integer_list__item_
    _Blast4_value_matrix_list = SEQ_OF(name='matrix-list', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_value_matrix_list__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-ScoreMat', 'PssmWithParameters')))
    _Blast4_value_matrix_list._cont = __Blast4_value_matrix_list__item_
    _Blast4_value_real_list = SEQ_OF(name='real-list', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_value_real_list__item_ = REAL(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Blast4_value_real_list._cont = __Blast4_value_real_list__item_
    _Blast4_value_seq_align_list = SEQ_OF(name='seq-align-list', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_value_seq_align_list__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Seq-align')))
    _Blast4_value_seq_align_list._cont = __Blast4_value_seq_align_list__item_
    _Blast4_value_seq_id_list = SEQ_OF(name='seq-id-list', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_value_seq_id_list__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Blast4_value_seq_id_list._cont = __Blast4_value_seq_id_list__item_
    _Blast4_value_seq_loc_list = SEQ_OF(name='seq-loc-list', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_value_seq_loc_list__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Blast4_value_seq_loc_list._cont = __Blast4_value_seq_loc_list__item_
    _Blast4_value_strand_type_list = SEQ_OF(name='strand-type-list', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_value_strand_type_list__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-strand-type')))
    _Blast4_value_strand_type_list._cont = __Blast4_value_strand_type_list__item_
    _Blast4_value_string_list = SEQ_OF(name='string-list', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_value_string_list__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Blast4_value_string_list._cont = __Blast4_value_string_list__item_
    _Blast4_value_bioseq_set = SEQ(name='bioseq-set', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqset', 'Bioseq-set')))
    _Blast4_value_seq_align_set = SET_OF(name='seq-align-set', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqalign', 'Seq-align-set')))
    _Blast4_value_query_mask = SEQ(name='query-mask', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-mask')))
    Blast4_value._cont = ASN1Dict([
        ('big-integer', _Blast4_value_big_integer),
        ('bioseq', _Blast4_value_bioseq),
        ('boolean', _Blast4_value_boolean),
        ('cutoff', _Blast4_value_cutoff),
        ('integer', _Blast4_value_integer),
        ('matrix', _Blast4_value_matrix),
        ('real', _Blast4_value_real),
        ('seq-align', _Blast4_value_seq_align),
        ('seq-id', _Blast4_value_seq_id),
        ('seq-loc', _Blast4_value_seq_loc),
        ('strand-type', _Blast4_value_strand_type),
        ('string', _Blast4_value_string),
        ('big-integer-list', _Blast4_value_big_integer_list),
        ('bioseq-list', _Blast4_value_bioseq_list),
        ('boolean-list', _Blast4_value_boolean_list),
        ('cutoff-list', _Blast4_value_cutoff_list),
        ('integer-list', _Blast4_value_integer_list),
        ('matrix-list', _Blast4_value_matrix_list),
        ('real-list', _Blast4_value_real_list),
        ('seq-align-list', _Blast4_value_seq_align_list),
        ('seq-id-list', _Blast4_value_seq_id_list),
        ('seq-loc-list', _Blast4_value_seq_loc_list),
        ('strand-type-list', _Blast4_value_strand_type_list),
        ('string-list', _Blast4_value_string_list),
        ('bioseq-set', _Blast4_value_bioseq_set),
        ('seq-align-set', _Blast4_value_seq_align_set),
        ('query-mask', _Blast4_value_query_mask),
        ])
    Blast4_value._ext = None
    
    #-----< Blast4-simple-results >-----#
    Blast4_simple_results = SEQ(name='Blast4-simple-results', mode=MODE_TYPE)
    _Blast4_simple_results_all_alignments = SEQ_OF(name='all-alignments', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_simple_results_all_alignments__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-alignments-for-query')))
    _Blast4_simple_results_all_alignments._cont = __Blast4_simple_results_all_alignments__item_
    Blast4_simple_results._cont = ASN1Dict([
        ('all-alignments', _Blast4_simple_results_all_alignments),
        ])
    Blast4_simple_results._ext = None
    
    #-----< Blast4-alignments-for-query >-----#
    Blast4_alignments_for_query = SEQ(name='Blast4-alignments-for-query', mode=MODE_TYPE)
    _Blast4_alignments_for_query_query_id = STR_VIS(name='query-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_alignments_for_query_alignments = SEQ_OF(name='alignments', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast4_alignments_for_query_alignments__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-simple-alignment')))
    _Blast4_alignments_for_query_alignments._cont = __Blast4_alignments_for_query_alignments__item_
    Blast4_alignments_for_query._cont = ASN1Dict([
        ('query-id', _Blast4_alignments_for_query_query_id),
        ('alignments', _Blast4_alignments_for_query_alignments),
        ])
    Blast4_alignments_for_query._ext = None
    
    #-----< Blast4-simple-alignment >-----#
    Blast4_simple_alignment = SEQ(name='Blast4-simple-alignment', mode=MODE_TYPE)
    _Blast4_simple_alignment_subject_id = STR_VIS(name='subject-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast4_simple_alignment_e_value = REAL(name='e-value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Blast4_simple_alignment_bit_score = REAL(name='bit-score', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Blast4_simple_alignment_num_identities = INT(name='num-identities', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Blast4_simple_alignment_num_indels = INT(name='num-indels', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Blast4_simple_alignment_full_query_range = SEQ(name='full-query-range', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-range')))
    _Blast4_simple_alignment_full_subject_range = SEQ(name='full-subject-range', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Blast4', 'Blast4-range')))
    Blast4_simple_alignment._cont = ASN1Dict([
        ('subject-id', _Blast4_simple_alignment_subject_id),
        ('e-value', _Blast4_simple_alignment_e_value),
        ('bit-score', _Blast4_simple_alignment_bit_score),
        ('num-identities', _Blast4_simple_alignment_num_identities),
        ('num-indels', _Blast4_simple_alignment_num_indels),
        ('full-query-range', _Blast4_simple_alignment_full_query_range),
        ('full-subject-range', _Blast4_simple_alignment_full_subject_range),
        ])
    Blast4_simple_alignment._ext = None
    
    #-----< Blast4-range >-----#
    Blast4_range = SEQ(name='Blast4-range', mode=MODE_TYPE)
    _Blast4_range_start = INT(name='start', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Blast4_range_end = INT(name='end', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Blast4_range_strand = INT(name='strand', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Blast4_range._cont = ASN1Dict([
        ('start', _Blast4_range_start),
        ('end', _Blast4_range_end),
        ('strand', _Blast4_range_strand),
        ])
    Blast4_range._ext = None
    
    _all_ = [
        BigInt,
        _Blast4_request_ident,
        _Blast4_request_body,
        Blast4_request,
        _Blast4_archive_request,
        _Blast4_archive_results,
        __Blast4_archive_messages__item_,
        _Blast4_archive_messages,
        Blast4_archive,
        _Blast4_request_body_finish_params,
        _Blast4_request_body_get_databases,
        _Blast4_request_body_get_matrices,
        _Blast4_request_body_get_parameters,
        _Blast4_request_body_get_paramsets,
        _Blast4_request_body_get_programs,
        _Blast4_request_body_get_search_results,
        _Blast4_request_body_get_sequences,
        _Blast4_request_body_queue_search,
        _Blast4_request_body_get_request_info,
        _Blast4_request_body_get_sequence_parts,
        _Blast4_request_body_get_windowmasked_taxids,
        _Blast4_request_body_get_protocol_info,
        _Blast4_request_body_get_search_info,
        _Blast4_request_body_get_databases_ex,
        Blast4_request_body,
        _Blast4_get_databases_ex_request_params,
        Blast4_get_databases_ex_request,
        _Blast4_finish_params_request_program,
        _Blast4_finish_params_request_service,
        _Blast4_finish_params_request_paramset,
        _Blast4_finish_params_request_params,
        Blast4_finish_params_request,
        Blast4_result_types,
        _Blast4_get_search_results_request_request_id,
        _Blast4_get_search_results_request_result_types,
        Blast4_get_search_results_request,
        _Blast4_queries_pssm,
        __Blast4_queries_seq_loc_list__item_,
        _Blast4_queries_seq_loc_list,
        _Blast4_queries_bioseq_set,
        Blast4_queries,
        _Blast4_queue_search_request_program,
        _Blast4_queue_search_request_service,
        _Blast4_queue_search_request_queries,
        _Blast4_queue_search_request_subject,
        _Blast4_queue_search_request_paramset,
        _Blast4_queue_search_request_algorithm_options,
        _Blast4_queue_search_request_program_options,
        _Blast4_queue_search_request_format_options,
        Blast4_queue_search_request,
        _Blast4_get_search_status_request_request_id,
        Blast4_get_search_status_request,
        _Blast4_get_search_status_reply_status,
        Blast4_get_search_status_reply,
        _Blast4_get_request_info_request_request_id,
        Blast4_get_request_info_request,
        _Blast4_get_request_info_reply_database,
        _Blast4_get_request_info_reply_program,
        _Blast4_get_request_info_reply_service,
        _Blast4_get_request_info_reply_created_by,
        _Blast4_get_request_info_reply_queries,
        _Blast4_get_request_info_reply_algorithm_options,
        _Blast4_get_request_info_reply_program_options,
        _Blast4_get_request_info_reply_format_options,
        _Blast4_get_request_info_reply_subjects,
        Blast4_get_request_info_reply,
        _Blast4_get_search_strategy_request_request_id,
        Blast4_get_search_strategy_request,
        Blast4_get_search_strategy_reply,
        _Blast4_get_sequences_request_database,
        __Blast4_get_sequences_request_seq_ids__item_,
        _Blast4_get_sequences_request_seq_ids,
        _Blast4_get_sequences_request_skip_seq_data,
        _Blast4_get_sequences_request_target_only,
        Blast4_get_sequences_request,
        _Blast4_get_seq_parts_request_database,
        __Blast4_get_seq_parts_request_seq_locations__item_,
        _Blast4_get_seq_parts_request_seq_locations,
        Blast4_get_seq_parts_request,
        Blast4_get_protocol_info_request,
        _Blast4_get_search_info_request_request_id,
        _Blast4_get_search_info_request_info,
        Blast4_get_search_info_request,
        __Blast4_reply_errors__item_,
        _Blast4_reply_errors,
        _Blast4_reply_body,
        Blast4_reply,
        _Blast4_reply_body_finish_params,
        _Blast4_reply_body_get_databases,
        _Blast4_reply_body_get_matrices,
        _Blast4_reply_body_get_parameters,
        _Blast4_reply_body_get_paramsets,
        _Blast4_reply_body_get_programs,
        _Blast4_reply_body_get_search_results,
        _Blast4_reply_body_get_sequences,
        _Blast4_reply_body_queue_search,
        _Blast4_reply_body_get_queries,
        _Blast4_reply_body_get_request_info,
        _Blast4_reply_body_get_sequence_parts,
        _Blast4_reply_body_get_windowmasked_taxids,
        _Blast4_reply_body_get_protocol_info,
        _Blast4_reply_body_get_search_info,
        _Blast4_reply_body_get_databases_ex,
        Blast4_reply_body,
        Blast4_finish_params_reply,
        _Blast4_get_windowmasked_taxids_reply__item_,
        Blast4_get_windowmasked_taxids_reply,
        _Blast4_get_databases_reply__item_,
        Blast4_get_databases_reply,
        _Blast4_get_databases_ex_reply__item_,
        Blast4_get_databases_ex_reply,
        _Blast4_get_matrices_reply__item_,
        Blast4_get_matrices_reply,
        _Blast4_get_parameters_reply__item_,
        Blast4_get_parameters_reply,
        _Blast4_get_paramsets_reply__item_,
        Blast4_get_paramsets_reply,
        _Blast4_get_programs_reply__item_,
        Blast4_get_programs_reply,
        _Blast4_get_search_results_reply_alignments,
        _Blast4_get_search_results_reply_phi_alignments,
        __Blast4_get_search_results_reply_masks__item_,
        _Blast4_get_search_results_reply_masks,
        __Blast4_get_search_results_reply_ka_blocks__item_,
        _Blast4_get_search_results_reply_ka_blocks,
        __Blast4_get_search_results_reply_search_stats__item_,
        _Blast4_get_search_results_reply_search_stats,
        _Blast4_get_search_results_reply_pssm,
        _Blast4_get_search_results_reply_simple_results,
        Blast4_get_search_results_reply,
        _Blast4_get_sequences_reply__item_,
        Blast4_get_sequences_reply,
        _Blast4_seq_part_data_id,
        _Blast4_seq_part_data_data,
        Blast4_seq_part_data,
        _Blast4_get_seq_parts_reply__item_,
        Blast4_get_seq_parts_reply,
        _Blast4_queue_search_reply_request_id,
        Blast4_queue_search_reply,
        _Blast4_get_queries_reply_queries,
        Blast4_get_queries_reply,
        Blast4_get_protocol_info_reply,
        _Blast4_get_search_info_reply_request_id,
        _Blast4_get_search_info_reply_info,
        Blast4_get_search_info_reply,
        _Blast4_error_code,
        _Blast4_error_message,
        Blast4_error,
        Blast4_error_flags,
        Blast4_error_code,
        _Blast4_cutoff_e_value,
        _Blast4_cutoff_raw_score,
        Blast4_cutoff,
        _Blast4_database_name,
        _Blast4_database_type,
        Blast4_database,
        Blast4_seqtech,
        _Blast4_database_info_database,
        _Blast4_database_info_description,
        _Blast4_database_info_last_updated,
        _Blast4_database_info_total_length,
        _Blast4_database_info_num_sequences,
        _Blast4_database_info_seqtech,
        _Blast4_database_info_taxid,
        _Blast4_database_info_extended,
        Blast4_database_info,
        Blast4_frame_type,
        _Blast4_ka_block_lambda_,
        _Blast4_ka_block_k,
        _Blast4_ka_block_h,
        _Blast4_ka_block_gapped,
        Blast4_ka_block,
        __Blast4_mask_locations__item_,
        _Blast4_mask_locations,
        _Blast4_mask_frame,
        Blast4_mask,
        _Blast4_matrix_id_residue_type,
        _Blast4_matrix_id_name,
        Blast4_matrix_id,
        _Blast4_parameter_name,
        _Blast4_parameter_value,
        Blast4_parameter,
        _Blast4_parameter_info_name,
        _Blast4_parameter_info_type,
        Blast4_parameter_info,
        _Blast4_task_info_name,
        _Blast4_task_info_documentation,
        Blast4_task_info,
        _Blast4_program_info_program,
        __Blast4_program_info_services__item_,
        _Blast4_program_info_services,
        Blast4_program_info,
        Blast4_residue_type,
        Blast4_strand_type,
        _Blast4_subject_database,
        __Blast4_subject_sequences__item_,
        _Blast4_subject_sequences,
        __Blast4_subject_seq_loc_list__item_,
        _Blast4_subject_seq_loc_list,
        Blast4_subject,
        _Blast4_parameters__item_,
        Blast4_parameters,
        _Blast4_phi_alignments_num_alignments,
        __Blast4_phi_alignments_seq_locs__item_,
        _Blast4_phi_alignments_seq_locs,
        Blast4_phi_alignments,
        _Blast4_value_big_integer,
        _Blast4_value_bioseq,
        _Blast4_value_boolean,
        _Blast4_value_cutoff,
        _Blast4_value_integer,
        _Blast4_value_matrix,
        _Blast4_value_real,
        _Blast4_value_seq_align,
        _Blast4_value_seq_id,
        _Blast4_value_seq_loc,
        _Blast4_value_strand_type,
        _Blast4_value_string,
        __Blast4_value_big_integer_list__item_,
        _Blast4_value_big_integer_list,
        __Blast4_value_bioseq_list__item_,
        _Blast4_value_bioseq_list,
        __Blast4_value_boolean_list__item_,
        _Blast4_value_boolean_list,
        __Blast4_value_cutoff_list__item_,
        _Blast4_value_cutoff_list,
        __Blast4_value_integer_list__item_,
        _Blast4_value_integer_list,
        __Blast4_value_matrix_list__item_,
        _Blast4_value_matrix_list,
        __Blast4_value_real_list__item_,
        _Blast4_value_real_list,
        __Blast4_value_seq_align_list__item_,
        _Blast4_value_seq_align_list,
        __Blast4_value_seq_id_list__item_,
        _Blast4_value_seq_id_list,
        __Blast4_value_seq_loc_list__item_,
        _Blast4_value_seq_loc_list,
        __Blast4_value_strand_type_list__item_,
        _Blast4_value_strand_type_list,
        __Blast4_value_string_list__item_,
        _Blast4_value_string_list,
        _Blast4_value_bioseq_set,
        _Blast4_value_seq_align_set,
        _Blast4_value_query_mask,
        Blast4_value,
        __Blast4_simple_results_all_alignments__item_,
        _Blast4_simple_results_all_alignments,
        Blast4_simple_results,
        _Blast4_alignments_for_query_query_id,
        __Blast4_alignments_for_query_alignments__item_,
        _Blast4_alignments_for_query_alignments,
        Blast4_alignments_for_query,
        _Blast4_simple_alignment_subject_id,
        _Blast4_simple_alignment_e_value,
        _Blast4_simple_alignment_bit_score,
        _Blast4_simple_alignment_num_identities,
        _Blast4_simple_alignment_num_indels,
        _Blast4_simple_alignment_full_query_range,
        _Blast4_simple_alignment_full_subject_range,
        Blast4_simple_alignment,
        _Blast4_range_start,
        _Blast4_range_end,
        _Blast4_range_strand,
        Blast4_range,
    ]

class NCBI_BlastDL:

    _name_  = 'NCBI-BlastDL'
    _oid_   = []
    
    _obj_ = [
        'Blast-def-line-set',
        'Blast-def-line',
        'Blast-filter-program',
        'Blast-mask-list',
        'Blast-db-mask-info',
        ]
    _type_ = [
        'Blast-def-line-set',
        'Blast-def-line',
        'Blast-filter-program',
        'Blast-mask-list',
        'Blast-db-mask-info',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Blast-def-line-set >-----#
    Blast_def_line_set = SEQ_OF(name='Blast-def-line-set', mode=MODE_TYPE)
    _Blast_def_line_set__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-BlastDL', 'Blast-def-line')))
    Blast_def_line_set._cont = _Blast_def_line_set__item_
    
    #-----< Blast-def-line >-----#
    Blast_def_line = SEQ(name='Blast-def-line', mode=MODE_TYPE)
    _Blast_def_line_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Blast_def_line_seqid = SEQ_OF(name='seqid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast_def_line_seqid__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Blast_def_line_seqid._cont = __Blast_def_line_seqid__item_
    _Blast_def_line_taxid = INT(name='taxid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Blast_def_line_memberships = SEQ_OF(name='memberships', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Blast_def_line_memberships__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Blast_def_line_memberships._cont = __Blast_def_line_memberships__item_
    _Blast_def_line_links = SEQ_OF(name='links', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Blast_def_line_links__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Blast_def_line_links._cont = __Blast_def_line_links__item_
    _Blast_def_line_other_info = SEQ_OF(name='other-info', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Blast_def_line_other_info__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Blast_def_line_other_info._cont = __Blast_def_line_other_info__item_
    Blast_def_line._cont = ASN1Dict([
        ('title', _Blast_def_line_title),
        ('seqid', _Blast_def_line_seqid),
        ('taxid', _Blast_def_line_taxid),
        ('memberships', _Blast_def_line_memberships),
        ('links', _Blast_def_line_links),
        ('other-info', _Blast_def_line_other_info),
        ])
    Blast_def_line._ext = None
    
    #-----< Blast-filter-program >-----#
    Blast_filter_program = INT(name='Blast-filter-program', mode=MODE_TYPE)
    Blast_filter_program._cont = ASN1Dict([('not-set', 0), ('dust', 10), ('seg', 20), ('windowmasker', 30), ('repeat', 40), ('other', 100), ('max', 255)])
    
    #-----< Blast-mask-list >-----#
    Blast_mask_list = SEQ(name='Blast-mask-list', mode=MODE_TYPE)
    _Blast_mask_list_masks = SEQ_OF(name='masks', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Blast_mask_list_masks__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Blast_mask_list_masks._cont = __Blast_mask_list_masks__item_
    _Blast_mask_list_more = BOOL(name='more', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Blast_mask_list._cont = ASN1Dict([
        ('masks', _Blast_mask_list_masks),
        ('more', _Blast_mask_list_more),
        ])
    Blast_mask_list._ext = None
    
    #-----< Blast-db-mask-info >-----#
    Blast_db_mask_info = SEQ(name='Blast-db-mask-info', mode=MODE_TYPE)
    _Blast_db_mask_info_algo_id = INT(name='algo-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast_db_mask_info_algo_program = INT(name='algo-program', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BlastDL', 'Blast-filter-program')))
    _Blast_db_mask_info_algo_options = STR_VIS(name='algo-options', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Blast_db_mask_info_masks = SEQ(name='masks', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BlastDL', 'Blast-mask-list')))
    Blast_db_mask_info._cont = ASN1Dict([
        ('algo-id', _Blast_db_mask_info_algo_id),
        ('algo-program', _Blast_db_mask_info_algo_program),
        ('algo-options', _Blast_db_mask_info_algo_options),
        ('masks', _Blast_db_mask_info_masks),
        ])
    Blast_db_mask_info._ext = None
    
    _all_ = [
        _Blast_def_line_set__item_,
        Blast_def_line_set,
        _Blast_def_line_title,
        __Blast_def_line_seqid__item_,
        _Blast_def_line_seqid,
        _Blast_def_line_taxid,
        __Blast_def_line_memberships__item_,
        _Blast_def_line_memberships,
        __Blast_def_line_links__item_,
        _Blast_def_line_links,
        __Blast_def_line_other_info__item_,
        _Blast_def_line_other_info,
        Blast_def_line,
        Blast_filter_program,
        __Blast_mask_list_masks__item_,
        _Blast_mask_list_masks,
        _Blast_mask_list_more,
        Blast_mask_list,
        _Blast_db_mask_info_algo_id,
        _Blast_db_mask_info_algo_program,
        _Blast_db_mask_info_algo_options,
        _Blast_db_mask_info_masks,
        Blast_db_mask_info,
    ]

class NCBI_BlastOutput2:

    _name_  = 'NCBI-BlastOutput2'
    _oid_   = []
    
    _obj_ = [
        'BigInt',
        'BlastOutput2',
        'BlastXML2',
        'Report',
        'Err',
        'Target',
        'Results',
        'Iteration',
        'Search',
        'Parameters',
        'Range',
        'Statistics',
        'HitDescr',
        'Hit',
        'Hsp',
        ]
    _type_ = [
        'BigInt',
        'BlastOutput2',
        'BlastXML2',
        'Report',
        'Err',
        'Target',
        'Results',
        'Iteration',
        'Search',
        'Parameters',
        'Range',
        'Statistics',
        'HitDescr',
        'Hit',
        'Hsp',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< BigInt >-----#
    BigInt = INT(name='BigInt', mode=MODE_TYPE, tag=(2, TAG_APPLICATION, TAG_IMPLICIT))
    
    #-----< BlastOutput2 >-----#
    BlastOutput2 = SEQ(name='BlastOutput2', mode=MODE_TYPE)
    _BlastOutput2_report = SEQ(name='report', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BlastOutput2', 'Report')), opt=True)
    _BlastOutput2_error = SEQ(name='error', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BlastOutput2', 'Err')), opt=True)
    BlastOutput2._cont = ASN1Dict([
        ('report', _BlastOutput2_report),
        ('error', _BlastOutput2_error),
        ])
    BlastOutput2._ext = None
    
    #-----< BlastXML2 >-----#
    BlastXML2 = SET_OF(name='BlastXML2', mode=MODE_TYPE)
    _BlastXML2__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-BlastOutput2', 'BlastOutput2')))
    BlastXML2._cont = _BlastXML2__item_
    
    #-----< Report >-----#
    Report = SEQ(name='Report', mode=MODE_TYPE)
    _Report_program = STR_VIS(name='program', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Report_version = STR_VIS(name='version', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Report_reference = STR_VIS(name='reference', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Report_search_target = CHOICE(name='search-target', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-BlastOutput2', 'Target')))
    _Report_params = SEQ(name='params', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BlastOutput2', 'Parameters')))
    _Report_results = CHOICE(name='results', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-BlastOutput2', 'Results')))
    Report._cont = ASN1Dict([
        ('program', _Report_program),
        ('version', _Report_version),
        ('reference', _Report_reference),
        ('search-target', _Report_search_target),
        ('params', _Report_params),
        ('results', _Report_results),
        ])
    Report._ext = None
    
    #-----< Err >-----#
    Err = SEQ(name='Err', mode=MODE_TYPE)
    _Err_code = INT(name='code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Err_message = STR_VIS(name='message', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Err._cont = ASN1Dict([
        ('code', _Err_code),
        ('message', _Err_message),
        ])
    Err._ext = None
    
    #-----< Target >-----#
    Target = CHOICE(name='Target', mode=MODE_TYPE)
    _Target_db = STR_VIS(name='db', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Target_subjects = SEQ_OF(name='subjects', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Target_subjects__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Target_subjects._cont = __Target_subjects__item_
    Target._cont = ASN1Dict([
        ('db', _Target_db),
        ('subjects', _Target_subjects),
        ])
    Target._ext = None
    
    #-----< Results >-----#
    Results = CHOICE(name='Results', mode=MODE_TYPE)
    _Results_iterations = SEQ_OF(name='iterations', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Results_iterations__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-BlastOutput2', 'Iteration')))
    _Results_iterations._cont = __Results_iterations__item_
    _Results_search = SEQ(name='search', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BlastOutput2', 'Search')))
    _Results_bl2seq = SEQ_OF(name='bl2seq', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Results_bl2seq__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-BlastOutput2', 'Search')))
    _Results_bl2seq._cont = __Results_bl2seq__item_
    Results._cont = ASN1Dict([
        ('iterations', _Results_iterations),
        ('search', _Results_search),
        ('bl2seq', _Results_bl2seq),
        ])
    Results._ext = None
    
    #-----< Iteration >-----#
    Iteration = SEQ(name='Iteration', mode=MODE_TYPE)
    _Iteration_iter_num = INT(name='iter-num', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Iteration_search = SEQ(name='search', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BlastOutput2', 'Search')))
    Iteration._cont = ASN1Dict([
        ('iter-num', _Iteration_iter_num),
        ('search', _Iteration_search),
        ])
    Iteration._ext = None
    
    #-----< Search >-----#
    Search = SEQ(name='Search', mode=MODE_TYPE)
    _Search_query_id = STR_VIS(name='query-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Search_query_title = STR_VIS(name='query-title', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Search_query_len = INT(name='query-len', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Search_query_masking = SEQ_OF(name='query-masking', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Search_query_masking__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-BlastOutput2', 'Range')))
    _Search_query_masking._cont = __Search_query_masking__item_
    _Search_hits = SEQ_OF(name='hits', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Search_hits__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-BlastOutput2', 'Hit')))
    _Search_hits._cont = __Search_hits__item_
    _Search_stat = SEQ(name='stat', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BlastOutput2', 'Statistics')), opt=True)
    _Search_message = STR_VIS(name='message', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Search._cont = ASN1Dict([
        ('query-id', _Search_query_id),
        ('query-title', _Search_query_title),
        ('query-len', _Search_query_len),
        ('query-masking', _Search_query_masking),
        ('hits', _Search_hits),
        ('stat', _Search_stat),
        ('message', _Search_message),
        ])
    Search._ext = None
    
    #-----< Parameters >-----#
    Parameters = SEQ(name='Parameters', mode=MODE_TYPE)
    _Parameters_matrix = STR_VIS(name='matrix', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Parameters_expect = REAL(name='expect', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Parameters_include = REAL(name='include', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    _Parameters_sc_match = INT(name='sc-match', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Parameters_sc_mismatch = INT(name='sc-mismatch', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Parameters_gap_open = INT(name='gap-open', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Parameters_gap_extend = INT(name='gap-extend', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Parameters_filter = STR_VIS(name='filter', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Parameters_pattern = STR_VIS(name='pattern', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Parameters_entrez_query = STR_VIS(name='entrez-query', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Parameters_cbs = INT(name='cbs', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Parameters_query_gencode = INT(name='query-gencode', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Parameters_db_gencode = INT(name='db-gencode', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Parameters_bl2seq_mode = STR_VIS(name='bl2seq-mode', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Parameters._cont = ASN1Dict([
        ('matrix', _Parameters_matrix),
        ('expect', _Parameters_expect),
        ('include', _Parameters_include),
        ('sc-match', _Parameters_sc_match),
        ('sc-mismatch', _Parameters_sc_mismatch),
        ('gap-open', _Parameters_gap_open),
        ('gap-extend', _Parameters_gap_extend),
        ('filter', _Parameters_filter),
        ('pattern', _Parameters_pattern),
        ('entrez-query', _Parameters_entrez_query),
        ('cbs', _Parameters_cbs),
        ('query-gencode', _Parameters_query_gencode),
        ('db-gencode', _Parameters_db_gencode),
        ('bl2seq-mode', _Parameters_bl2seq_mode),
        ])
    Parameters._ext = None
    
    #-----< Range >-----#
    Range = SEQ(name='Range', mode=MODE_TYPE)
    _Range_from_ = INT(name='from', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Range_to = INT(name='to', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Range._cont = ASN1Dict([
        ('from', _Range_from_),
        ('to', _Range_to),
        ])
    Range._ext = None
    
    #-----< Statistics >-----#
    Statistics = SEQ(name='Statistics', mode=MODE_TYPE)
    _Statistics_db_num = INT(name='db-num', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BlastOutput2', 'BigInt')), opt=True)
    _Statistics_db_len = INT(name='db-len', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BlastOutput2', 'BigInt')), opt=True)
    _Statistics_hsp_len = INT(name='hsp-len', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Statistics_eff_space = INT(name='eff-space', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BlastOutput2', 'BigInt')))
    _Statistics_kappa = REAL(name='kappa', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Statistics_lambda_ = REAL(name='lambda', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Statistics_entropy = REAL(name='entropy', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    Statistics._cont = ASN1Dict([
        ('db-num', _Statistics_db_num),
        ('db-len', _Statistics_db_len),
        ('hsp-len', _Statistics_hsp_len),
        ('eff-space', _Statistics_eff_space),
        ('kappa', _Statistics_kappa),
        ('lambda', _Statistics_lambda_),
        ('entropy', _Statistics_entropy),
        ])
    Statistics._ext = None
    
    #-----< HitDescr >-----#
    HitDescr = SEQ(name='HitDescr', mode=MODE_TYPE)
    _HitDescr_id = STR_VIS(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HitDescr_accession = STR_VIS(name='accession', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HitDescr_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HitDescr_taxid = INT(name='taxid', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HitDescr_sciname = STR_VIS(name='sciname', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    HitDescr._cont = ASN1Dict([
        ('id', _HitDescr_id),
        ('accession', _HitDescr_accession),
        ('title', _HitDescr_title),
        ('taxid', _HitDescr_taxid),
        ('sciname', _HitDescr_sciname),
        ])
    HitDescr._ext = None
    
    #-----< Hit >-----#
    Hit = SEQ(name='Hit', mode=MODE_TYPE)
    _Hit_num = INT(name='num', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hit_description = SEQ_OF(name='description', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Hit_description__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-BlastOutput2', 'HitDescr')))
    _Hit_description._cont = __Hit_description__item_
    _Hit_len = INT(name='len', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hit_hsps = SEQ_OF(name='hsps', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Hit_hsps__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-BlastOutput2', 'Hsp')))
    _Hit_hsps._cont = __Hit_hsps__item_
    Hit._cont = ASN1Dict([
        ('num', _Hit_num),
        ('description', _Hit_description),
        ('len', _Hit_len),
        ('hsps', _Hit_hsps),
        ])
    Hit._ext = None
    
    #-----< Hsp >-----#
    Hsp = SEQ(name='Hsp', mode=MODE_TYPE)
    _Hsp_num = INT(name='num', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hsp_bit_score = REAL(name='bit-score', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Hsp_score = REAL(name='score', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Hsp_evalue = REAL(name='evalue', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Hsp_identity = INT(name='identity', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_positive = INT(name='positive', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_density = INT(name='density', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_pattern_from = INT(name='pattern-from', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_pattern_to = INT(name='pattern-to', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_query_from = INT(name='query-from', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hsp_query_to = INT(name='query-to', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hsp_query_strand = STR_VIS(name='query-strand', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_query_frame = INT(name='query-frame', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_hit_from = INT(name='hit-from', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hsp_hit_to = INT(name='hit-to', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hsp_hit_strand = STR_VIS(name='hit-strand', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_hit_frame = INT(name='hit-frame', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_align_len = INT(name='align-len', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_gaps = INT(name='gaps', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_qseq = STR_VIS(name='qseq', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hsp_hseq = STR_VIS(name='hseq', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hsp_midline = STR_VIS(name='midline', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Hsp._cont = ASN1Dict([
        ('num', _Hsp_num),
        ('bit-score', _Hsp_bit_score),
        ('score', _Hsp_score),
        ('evalue', _Hsp_evalue),
        ('identity', _Hsp_identity),
        ('positive', _Hsp_positive),
        ('density', _Hsp_density),
        ('pattern-from', _Hsp_pattern_from),
        ('pattern-to', _Hsp_pattern_to),
        ('query-from', _Hsp_query_from),
        ('query-to', _Hsp_query_to),
        ('query-strand', _Hsp_query_strand),
        ('query-frame', _Hsp_query_frame),
        ('hit-from', _Hsp_hit_from),
        ('hit-to', _Hsp_hit_to),
        ('hit-strand', _Hsp_hit_strand),
        ('hit-frame', _Hsp_hit_frame),
        ('align-len', _Hsp_align_len),
        ('gaps', _Hsp_gaps),
        ('qseq', _Hsp_qseq),
        ('hseq', _Hsp_hseq),
        ('midline', _Hsp_midline),
        ])
    Hsp._ext = None
    
    _all_ = [
        BigInt,
        _BlastOutput2_report,
        _BlastOutput2_error,
        BlastOutput2,
        _BlastXML2__item_,
        BlastXML2,
        _Report_program,
        _Report_version,
        _Report_reference,
        _Report_search_target,
        _Report_params,
        _Report_results,
        Report,
        _Err_code,
        _Err_message,
        Err,
        _Target_db,
        __Target_subjects__item_,
        _Target_subjects,
        Target,
        __Results_iterations__item_,
        _Results_iterations,
        _Results_search,
        __Results_bl2seq__item_,
        _Results_bl2seq,
        Results,
        _Iteration_iter_num,
        _Iteration_search,
        Iteration,
        _Search_query_id,
        _Search_query_title,
        _Search_query_len,
        __Search_query_masking__item_,
        _Search_query_masking,
        __Search_hits__item_,
        _Search_hits,
        _Search_stat,
        _Search_message,
        Search,
        _Parameters_matrix,
        _Parameters_expect,
        _Parameters_include,
        _Parameters_sc_match,
        _Parameters_sc_mismatch,
        _Parameters_gap_open,
        _Parameters_gap_extend,
        _Parameters_filter,
        _Parameters_pattern,
        _Parameters_entrez_query,
        _Parameters_cbs,
        _Parameters_query_gencode,
        _Parameters_db_gencode,
        _Parameters_bl2seq_mode,
        Parameters,
        _Range_from_,
        _Range_to,
        Range,
        _Statistics_db_num,
        _Statistics_db_len,
        _Statistics_hsp_len,
        _Statistics_eff_space,
        _Statistics_kappa,
        _Statistics_lambda_,
        _Statistics_entropy,
        Statistics,
        _HitDescr_id,
        _HitDescr_accession,
        _HitDescr_title,
        _HitDescr_taxid,
        _HitDescr_sciname,
        HitDescr,
        _Hit_num,
        __Hit_description__item_,
        _Hit_description,
        _Hit_len,
        __Hit_hsps__item_,
        _Hit_hsps,
        Hit,
        _Hsp_num,
        _Hsp_bit_score,
        _Hsp_score,
        _Hsp_evalue,
        _Hsp_identity,
        _Hsp_positive,
        _Hsp_density,
        _Hsp_pattern_from,
        _Hsp_pattern_to,
        _Hsp_query_from,
        _Hsp_query_to,
        _Hsp_query_strand,
        _Hsp_query_frame,
        _Hsp_hit_from,
        _Hsp_hit_to,
        _Hsp_hit_strand,
        _Hsp_hit_frame,
        _Hsp_align_len,
        _Hsp_gaps,
        _Hsp_qseq,
        _Hsp_hseq,
        _Hsp_midline,
        Hsp,
    ]

class NCBI_BlastOutput:

    _name_  = 'NCBI-BlastOutput'
    _oid_   = []
    
    _obj_ = [
        'BigInt',
        'BlastOutput',
        'Iteration',
        'Parameters',
        'Statistics',
        'Hit',
        'Hsp',
        ]
    _type_ = [
        'BigInt',
        'BlastOutput',
        'Iteration',
        'Parameters',
        'Statistics',
        'Hit',
        'Hsp',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< BigInt >-----#
    BigInt = INT(name='BigInt', mode=MODE_TYPE, tag=(2, TAG_APPLICATION, TAG_IMPLICIT))
    
    #-----< BlastOutput >-----#
    BlastOutput = SEQ(name='BlastOutput', mode=MODE_TYPE)
    _BlastOutput_program = STR_VIS(name='program', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BlastOutput_version = STR_VIS(name='version', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BlastOutput_reference = STR_VIS(name='reference', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BlastOutput_db = STR_VIS(name='db', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BlastOutput_query_ID = STR_VIS(name='query-ID', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BlastOutput_query_def = STR_VIS(name='query-def', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BlastOutput_query_len = INT(name='query-len', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BlastOutput_query_seq = STR_VIS(name='query-seq', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BlastOutput_param = SEQ(name='param', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BlastOutput', 'Parameters')))
    _BlastOutput_iterations = SEQ_OF(name='iterations', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BlastOutput_iterations__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-BlastOutput', 'Iteration')))
    _BlastOutput_iterations._cont = __BlastOutput_iterations__item_
    _BlastOutput_mbstat = SEQ(name='mbstat', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BlastOutput', 'Statistics')), opt=True)
    BlastOutput._cont = ASN1Dict([
        ('program', _BlastOutput_program),
        ('version', _BlastOutput_version),
        ('reference', _BlastOutput_reference),
        ('db', _BlastOutput_db),
        ('query-ID', _BlastOutput_query_ID),
        ('query-def', _BlastOutput_query_def),
        ('query-len', _BlastOutput_query_len),
        ('query-seq', _BlastOutput_query_seq),
        ('param', _BlastOutput_param),
        ('iterations', _BlastOutput_iterations),
        ('mbstat', _BlastOutput_mbstat),
        ])
    BlastOutput._ext = None
    
    #-----< Iteration >-----#
    Iteration = SEQ(name='Iteration', mode=MODE_TYPE)
    _Iteration_iter_num = INT(name='iter-num', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Iteration_query_ID = STR_VIS(name='query-ID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Iteration_query_def = STR_VIS(name='query-def', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Iteration_query_len = INT(name='query-len', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Iteration_hits = SEQ_OF(name='hits', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Iteration_hits__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-BlastOutput', 'Hit')))
    _Iteration_hits._cont = __Iteration_hits__item_
    _Iteration_stat = SEQ(name='stat', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BlastOutput', 'Statistics')), opt=True)
    _Iteration_message = STR_VIS(name='message', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Iteration._cont = ASN1Dict([
        ('iter-num', _Iteration_iter_num),
        ('query-ID', _Iteration_query_ID),
        ('query-def', _Iteration_query_def),
        ('query-len', _Iteration_query_len),
        ('hits', _Iteration_hits),
        ('stat', _Iteration_stat),
        ('message', _Iteration_message),
        ])
    Iteration._ext = None
    
    #-----< Parameters >-----#
    Parameters = SEQ(name='Parameters', mode=MODE_TYPE)
    _Parameters_matrix = STR_VIS(name='matrix', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Parameters_expect = REAL(name='expect', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Parameters_include = REAL(name='include', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    _Parameters_sc_match = INT(name='sc-match', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Parameters_sc_mismatch = INT(name='sc-mismatch', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Parameters_gap_open = INT(name='gap-open', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Parameters_gap_extend = INT(name='gap-extend', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Parameters_filter = STR_VIS(name='filter', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Parameters_pattern = STR_VIS(name='pattern', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Parameters_entrez_query = STR_VIS(name='entrez-query', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Parameters._cont = ASN1Dict([
        ('matrix', _Parameters_matrix),
        ('expect', _Parameters_expect),
        ('include', _Parameters_include),
        ('sc-match', _Parameters_sc_match),
        ('sc-mismatch', _Parameters_sc_mismatch),
        ('gap-open', _Parameters_gap_open),
        ('gap-extend', _Parameters_gap_extend),
        ('filter', _Parameters_filter),
        ('pattern', _Parameters_pattern),
        ('entrez-query', _Parameters_entrez_query),
        ])
    Parameters._ext = None
    
    #-----< Statistics >-----#
    Statistics = SEQ(name='Statistics', mode=MODE_TYPE)
    _Statistics_db_num = INT(name='db-num', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Statistics_db_len = INT(name='db-len', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BlastOutput', 'BigInt')))
    _Statistics_hsp_len = INT(name='hsp-len', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Statistics_eff_space = REAL(name='eff-space', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Statistics_kappa = REAL(name='kappa', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Statistics_lambda_ = REAL(name='lambda', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Statistics_entropy = REAL(name='entropy', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    Statistics._cont = ASN1Dict([
        ('db-num', _Statistics_db_num),
        ('db-len', _Statistics_db_len),
        ('hsp-len', _Statistics_hsp_len),
        ('eff-space', _Statistics_eff_space),
        ('kappa', _Statistics_kappa),
        ('lambda', _Statistics_lambda_),
        ('entropy', _Statistics_entropy),
        ])
    Statistics._ext = None
    
    #-----< Hit >-----#
    Hit = SEQ(name='Hit', mode=MODE_TYPE)
    _Hit_num = INT(name='num', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hit_id = STR_VIS(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hit_def_ = STR_VIS(name='def', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hit_accession = STR_VIS(name='accession', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hit_len = INT(name='len', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hit_hsps = SEQ_OF(name='hsps', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Hit_hsps__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-BlastOutput', 'Hsp')))
    _Hit_hsps._cont = __Hit_hsps__item_
    Hit._cont = ASN1Dict([
        ('num', _Hit_num),
        ('id', _Hit_id),
        ('def', _Hit_def_),
        ('accession', _Hit_accession),
        ('len', _Hit_len),
        ('hsps', _Hit_hsps),
        ])
    Hit._ext = None
    
    #-----< Hsp >-----#
    Hsp = SEQ(name='Hsp', mode=MODE_TYPE)
    _Hsp_num = INT(name='num', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hsp_bit_score = REAL(name='bit-score', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Hsp_score = REAL(name='score', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Hsp_evalue = REAL(name='evalue', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Hsp_query_from = INT(name='query-from', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hsp_query_to = INT(name='query-to', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hsp_hit_from = INT(name='hit-from', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hsp_hit_to = INT(name='hit-to', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hsp_pattern_from = INT(name='pattern-from', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_pattern_to = INT(name='pattern-to', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_query_frame = INT(name='query-frame', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_hit_frame = INT(name='hit-frame', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_identity = INT(name='identity', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_positive = INT(name='positive', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_gaps = INT(name='gaps', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_align_len = INT(name='align-len', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_density = INT(name='density', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Hsp_qseq = STR_VIS(name='qseq', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hsp_hseq = STR_VIS(name='hseq', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Hsp_midline = STR_VIS(name='midline', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Hsp._cont = ASN1Dict([
        ('num', _Hsp_num),
        ('bit-score', _Hsp_bit_score),
        ('score', _Hsp_score),
        ('evalue', _Hsp_evalue),
        ('query-from', _Hsp_query_from),
        ('query-to', _Hsp_query_to),
        ('hit-from', _Hsp_hit_from),
        ('hit-to', _Hsp_hit_to),
        ('pattern-from', _Hsp_pattern_from),
        ('pattern-to', _Hsp_pattern_to),
        ('query-frame', _Hsp_query_frame),
        ('hit-frame', _Hsp_hit_frame),
        ('identity', _Hsp_identity),
        ('positive', _Hsp_positive),
        ('gaps', _Hsp_gaps),
        ('align-len', _Hsp_align_len),
        ('density', _Hsp_density),
        ('qseq', _Hsp_qseq),
        ('hseq', _Hsp_hseq),
        ('midline', _Hsp_midline),
        ])
    Hsp._ext = None
    
    _all_ = [
        BigInt,
        _BlastOutput_program,
        _BlastOutput_version,
        _BlastOutput_reference,
        _BlastOutput_db,
        _BlastOutput_query_ID,
        _BlastOutput_query_def,
        _BlastOutput_query_len,
        _BlastOutput_query_seq,
        _BlastOutput_param,
        __BlastOutput_iterations__item_,
        _BlastOutput_iterations,
        _BlastOutput_mbstat,
        BlastOutput,
        _Iteration_iter_num,
        _Iteration_query_ID,
        _Iteration_query_def,
        _Iteration_query_len,
        __Iteration_hits__item_,
        _Iteration_hits,
        _Iteration_stat,
        _Iteration_message,
        Iteration,
        _Parameters_matrix,
        _Parameters_expect,
        _Parameters_include,
        _Parameters_sc_match,
        _Parameters_sc_mismatch,
        _Parameters_gap_open,
        _Parameters_gap_extend,
        _Parameters_filter,
        _Parameters_pattern,
        _Parameters_entrez_query,
        Parameters,
        _Statistics_db_num,
        _Statistics_db_len,
        _Statistics_hsp_len,
        _Statistics_eff_space,
        _Statistics_kappa,
        _Statistics_lambda_,
        _Statistics_entropy,
        Statistics,
        _Hit_num,
        _Hit_id,
        _Hit_def_,
        _Hit_accession,
        _Hit_len,
        __Hit_hsps__item_,
        _Hit_hsps,
        Hit,
        _Hsp_num,
        _Hsp_bit_score,
        _Hsp_score,
        _Hsp_evalue,
        _Hsp_query_from,
        _Hsp_query_to,
        _Hsp_hit_from,
        _Hsp_hit_to,
        _Hsp_pattern_from,
        _Hsp_pattern_to,
        _Hsp_query_frame,
        _Hsp_hit_frame,
        _Hsp_identity,
        _Hsp_positive,
        _Hsp_gaps,
        _Hsp_align_len,
        _Hsp_density,
        _Hsp_qseq,
        _Hsp_hseq,
        _Hsp_midline,
        Hsp,
    ]

class NCBI_Cdd:

    _name_  = 'NCBI-Cdd'
    _oid_   = []
    
    _obj_ = [
        'Cdd-org-ref',
        'Cdd-org-ref-set',
        'Cdd-pref-node-descr',
        'Cdd-pref-node-descr-set',
        'Cdd-pref-nodes',
        'Global-id',
        'Cdd-id',
        'Cdd-id-set',
        'Cdd-repeat',
        'Cdd-book-ref',
        'Cdd-descr',
        'Cdd-descr-set',
        'Cdd-tree',
        'Cdd-tree-set',
        'Matrix',
        'Triangle',
        'Update-comment',
        'Update-align',
        'Reject-id',
        'Feature-evidence',
        'Align-annot',
        'Align-annot-set',
        'Domain-parent',
        'Sequence-tree',
        'SeqTree-node',
        'Algorithm-type',
        'Node-annotation',
        'Cdd',
        'Cdd-set',
        'Cdd-Viewer-Rect',
        'Cdd-Viewer',
        'Cdd-Script',
        'Cdd-Project',
        ]
    _type_ = [
        'Cdd-org-ref',
        'Cdd-org-ref-set',
        'Cdd-pref-node-descr',
        'Cdd-pref-node-descr-set',
        'Cdd-pref-nodes',
        'Global-id',
        'Cdd-id',
        'Cdd-id-set',
        'Cdd-repeat',
        'Cdd-book-ref',
        'Cdd-descr',
        'Cdd-descr-set',
        'Cdd-tree',
        'Cdd-tree-set',
        'Matrix',
        'Triangle',
        'Update-comment',
        'Update-align',
        'Reject-id',
        'Feature-evidence',
        'Align-annot',
        'Align-annot-set',
        'Domain-parent',
        'Sequence-tree',
        'SeqTree-node',
        'Algorithm-type',
        'Node-annotation',
        'Cdd',
        'Cdd-set',
        'Cdd-Viewer-Rect',
        'Cdd-Viewer',
        'Cdd-Script',
        'Cdd-Project',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Cdd-org-ref >-----#
    Cdd_org_ref = SEQ(name='Cdd-org-ref', mode=MODE_TYPE)
    _Cdd_org_ref_reference = SEQ(name='reference', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Organism', 'Org-ref')))
    _Cdd_org_ref_active = BOOL(name='active', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=True)
    _Cdd_org_ref_parent_tax_id = INT(name='parent-tax-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cdd_org_ref_rank = STR_VIS(name='rank', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Cdd_org_ref._cont = ASN1Dict([
        ('reference', _Cdd_org_ref_reference),
        ('active', _Cdd_org_ref_active),
        ('parent-tax-id', _Cdd_org_ref_parent_tax_id),
        ('rank', _Cdd_org_ref_rank),
        ])
    Cdd_org_ref._ext = None
    
    #-----< Cdd-org-ref-set >-----#
    Cdd_org_ref_set = SET_OF(name='Cdd-org-ref-set', mode=MODE_TYPE)
    _Cdd_org_ref_set__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-org-ref')))
    Cdd_org_ref_set._cont = _Cdd_org_ref_set__item_
    
    #-----< Cdd-pref-node-descr >-----#
    Cdd_pref_node_descr = CHOICE(name='Cdd-pref-node-descr', mode=MODE_TYPE)
    _Cdd_pref_node_descr_create_date = CHOICE(name='create-date', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    _Cdd_pref_node_descr_description = STR_VIS(name='description', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Cdd_pref_node_descr._cont = ASN1Dict([
        ('create-date', _Cdd_pref_node_descr_create_date),
        ('description', _Cdd_pref_node_descr_description),
        ])
    Cdd_pref_node_descr._ext = None
    
    #-----< Cdd-pref-node-descr-set >-----#
    Cdd_pref_node_descr_set = SET_OF(name='Cdd-pref-node-descr-set', mode=MODE_TYPE)
    _Cdd_pref_node_descr_set__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-pref-node-descr')))
    Cdd_pref_node_descr_set._cont = _Cdd_pref_node_descr_set__item_
    
    #-----< Cdd-pref-nodes >-----#
    Cdd_pref_nodes = SEQ(name='Cdd-pref-nodes', mode=MODE_TYPE)
    _Cdd_pref_nodes_preferred_nodes = SET_OF(name='preferred-nodes', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-org-ref-set')))
    _Cdd_pref_nodes_model_organisms = SET_OF(name='model-organisms', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-org-ref-set')), opt=True)
    _Cdd_pref_nodes_optional_nodes = SET_OF(name='optional-nodes', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-org-ref-set')), opt=True)
    _Cdd_pref_nodes_description = SET_OF(name='description', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-pref-node-descr-set')), opt=True)
    Cdd_pref_nodes._cont = ASN1Dict([
        ('preferred-nodes', _Cdd_pref_nodes_preferred_nodes),
        ('model-organisms', _Cdd_pref_nodes_model_organisms),
        ('optional-nodes', _Cdd_pref_nodes_optional_nodes),
        ('description', _Cdd_pref_nodes_description),
        ])
    Cdd_pref_nodes._ext = None
    
    #-----< Global-id >-----#
    Global_id = SEQ(name='Global-id', mode=MODE_TYPE)
    _Global_id_accession = STR_VIS(name='accession', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Global_id_release = STR_VIS(name='release', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Global_id_version = INT(name='version', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Global_id_database = STR_VIS(name='database', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Global_id._cont = ASN1Dict([
        ('accession', _Global_id_accession),
        ('release', _Global_id_release),
        ('version', _Global_id_version),
        ('database', _Global_id_database),
        ])
    Global_id._ext = None
    
    #-----< Cdd-id >-----#
    Cdd_id = CHOICE(name='Cdd-id', mode=MODE_TYPE)
    _Cdd_id_uid = INT(name='uid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cdd_id_gid = SEQ(name='gid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Global-id')))
    Cdd_id._cont = ASN1Dict([
        ('uid', _Cdd_id_uid),
        ('gid', _Cdd_id_gid),
        ])
    Cdd_id._ext = None
    
    #-----< Cdd-id-set >-----#
    Cdd_id_set = SEQ_OF(name='Cdd-id-set', mode=MODE_TYPE)
    _Cdd_id_set__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-id')))
    Cdd_id_set._cont = _Cdd_id_set__item_
    
    #-----< Cdd-repeat >-----#
    Cdd_repeat = SEQ(name='Cdd-repeat', mode=MODE_TYPE)
    _Cdd_repeat_count = INT(name='count', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cdd_repeat_location = CHOICE(name='location', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')), opt=True)
    _Cdd_repeat_avglen = INT(name='avglen', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Cdd_repeat._cont = ASN1Dict([
        ('count', _Cdd_repeat_count),
        ('location', _Cdd_repeat_location),
        ('avglen', _Cdd_repeat_avglen),
        ])
    Cdd_repeat._ext = None
    
    #-----< Cdd-book-ref >-----#
    Cdd_book_ref = SEQ(name='Cdd-book-ref', mode=MODE_TYPE)
    _Cdd_book_ref_bookname = STR_VIS(name='bookname', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cdd_book_ref_textelement = ENUM(name='textelement', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cdd_book_ref_textelement._cont = ASN1Dict([('unassigned', 0), ('section', 1), ('figgrp', 2), ('table', 3), ('chapter', 4), ('biblist', 5), ('box', 6), ('glossary', 7), ('appendix', 8), ('other', 255)])
    _Cdd_book_ref_textelement._ext = None
    _Cdd_book_ref_elementid = INT(name='elementid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cdd_book_ref_subelementid = INT(name='subelementid', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cdd_book_ref_celementid = STR_VIS(name='celementid', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cdd_book_ref_csubelementid = STR_VIS(name='csubelementid', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Cdd_book_ref._cont = ASN1Dict([
        ('bookname', _Cdd_book_ref_bookname),
        ('textelement', _Cdd_book_ref_textelement),
        ('elementid', _Cdd_book_ref_elementid),
        ('subelementid', _Cdd_book_ref_subelementid),
        ('celementid', _Cdd_book_ref_celementid),
        ('csubelementid', _Cdd_book_ref_csubelementid),
        ])
    Cdd_book_ref._ext = None
    
    #-----< Cdd-descr >-----#
    Cdd_descr = CHOICE(name='Cdd-descr', mode=MODE_TYPE)
    _Cdd_descr_othername = STR_VIS(name='othername', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cdd_descr_category = STR_VIS(name='category', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cdd_descr_comment = STR_VIS(name='comment', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cdd_descr_reference = CHOICE(name='reference', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Pub', 'Pub')))
    _Cdd_descr_create_date = CHOICE(name='create-date', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    _Cdd_descr_tax_source = SEQ(name='tax-source', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Organism', 'Org-ref')))
    _Cdd_descr_source = STR_VIS(name='source', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cdd_descr_status = INT(name='status', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cdd_descr_status._cont = ASN1Dict([('unassigned', 0), ('finished-ok', 1), ('pending-release', 2), ('other-asis', 3), ('matrix-only', 4), ('update-running', 5), ('auto-updated', 6), ('claimed', 7), ('curated-complete', 8), ('other', 255)])
    _Cdd_descr_update_date = CHOICE(name='update-date', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    _Cdd_descr_scrapbook = SEQ_OF(name='scrapbook', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Cdd_descr_scrapbook__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Cdd_descr_scrapbook._cont = __Cdd_descr_scrapbook__item_
    _Cdd_descr_source_id = SEQ_OF(name='source-id', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-id-set')))
    _Cdd_descr_repeats = SEQ(name='repeats', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-repeat')))
    _Cdd_descr_old_root = SEQ_OF(name='old-root', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-id-set')))
    _Cdd_descr_curation_status = INT(name='curation-status', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cdd_descr_curation_status._cont = ASN1Dict([('unassigned', 0), ('prein', 1), ('ofc', 2), ('iac', 3), ('ofv1', 4), ('iav1', 5), ('ofv2', 6), ('iav2', 7), ('postin', 8), ('other', 255)])
    _Cdd_descr_readonly_status = INT(name='readonly-status', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cdd_descr_readonly_status._cont = ASN1Dict([('unassigned', 0), ('readonly', 1), ('readwrite', 2), ('other', 255)])
    _Cdd_descr_book_ref = SEQ(name='book-ref', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-book-ref')))
    _Cdd_descr_attribution = CHOICE(name='attribution', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Pub', 'Pub')))
    _Cdd_descr_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Cdd_descr._cont = ASN1Dict([
        ('othername', _Cdd_descr_othername),
        ('category', _Cdd_descr_category),
        ('comment', _Cdd_descr_comment),
        ('reference', _Cdd_descr_reference),
        ('create-date', _Cdd_descr_create_date),
        ('tax-source', _Cdd_descr_tax_source),
        ('source', _Cdd_descr_source),
        ('status', _Cdd_descr_status),
        ('update-date', _Cdd_descr_update_date),
        ('scrapbook', _Cdd_descr_scrapbook),
        ('source-id', _Cdd_descr_source_id),
        ('repeats', _Cdd_descr_repeats),
        ('old-root', _Cdd_descr_old_root),
        ('curation-status', _Cdd_descr_curation_status),
        ('readonly-status', _Cdd_descr_readonly_status),
        ('book-ref', _Cdd_descr_book_ref),
        ('attribution', _Cdd_descr_attribution),
        ('title', _Cdd_descr_title),
        ])
    Cdd_descr._ext = None
    
    #-----< Cdd-descr-set >-----#
    Cdd_descr_set = SET_OF(name='Cdd-descr-set', mode=MODE_TYPE)
    _Cdd_descr_set__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-descr')))
    Cdd_descr_set._cont = _Cdd_descr_set__item_
    
    #-----< Cdd-tree >-----#
    Cdd_tree = SEQ(name='Cdd-tree', mode=MODE_TYPE)
    _Cdd_tree_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cdd_tree_id = SEQ_OF(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-id-set')))
    _Cdd_tree_description = SET_OF(name='description', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-descr-set')), opt=True)
    _Cdd_tree_parent = CHOICE(name='parent', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-id')), opt=True)
    _Cdd_tree_children = SEQ_OF(name='children', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-id-set')), opt=True)
    _Cdd_tree_siblings = SEQ_OF(name='siblings', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-id-set')), opt=True)
    _Cdd_tree_neighbors = SEQ_OF(name='neighbors', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-id-set')), opt=True)
    Cdd_tree._cont = ASN1Dict([
        ('name', _Cdd_tree_name),
        ('id', _Cdd_tree_id),
        ('description', _Cdd_tree_description),
        ('parent', _Cdd_tree_parent),
        ('children', _Cdd_tree_children),
        ('siblings', _Cdd_tree_siblings),
        ('neighbors', _Cdd_tree_neighbors),
        ])
    Cdd_tree._ext = None
    
    #-----< Cdd-tree-set >-----#
    Cdd_tree_set = SEQ_OF(name='Cdd-tree-set', mode=MODE_TYPE)
    _Cdd_tree_set__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-tree')))
    Cdd_tree_set._cont = _Cdd_tree_set__item_
    
    #-----< Matrix >-----#
    Matrix = SEQ(name='Matrix', mode=MODE_TYPE)
    _Matrix_ncolumns = INT(name='ncolumns', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Matrix_nrows = INT(name='nrows', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Matrix_row_labels = SEQ_OF(name='row-labels', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Matrix_row_labels__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Matrix_row_labels._cont = __Matrix_row_labels__item_
    _Matrix_scale_factor = INT(name='scale-factor', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Matrix_columns = SEQ_OF(name='columns', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Matrix_columns__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Matrix_columns._cont = __Matrix_columns__item_
    Matrix._cont = ASN1Dict([
        ('ncolumns', _Matrix_ncolumns),
        ('nrows', _Matrix_nrows),
        ('row-labels', _Matrix_row_labels),
        ('scale-factor', _Matrix_scale_factor),
        ('columns', _Matrix_columns),
        ])
    Matrix._ext = None
    
    #-----< Triangle >-----#
    Triangle = SEQ(name='Triangle', mode=MODE_TYPE)
    _Triangle_nelements = INT(name='nelements', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Triangle_scores = SET_OF(name='scores', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqalign', 'Score-set')), opt=True)
    _Triangle_div_ranks = SEQ_OF(name='div-ranks', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Triangle_div_ranks__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Triangle_div_ranks._cont = __Triangle_div_ranks__item_
    Triangle._cont = ASN1Dict([
        ('nelements', _Triangle_nelements),
        ('scores', _Triangle_scores),
        ('div-ranks', _Triangle_div_ranks),
        ])
    Triangle._ext = None
    
    #-----< Update-comment >-----#
    Update_comment = CHOICE(name='Update-comment', mode=MODE_TYPE)
    _Update_comment_comment = STR_VIS(name='comment', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Update_comment_addthis = CHOICE(name='addthis', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Update_comment_replaces = CHOICE(name='replaces', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Update_comment_reject_loc = CHOICE(name='reject-loc', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Update_comment_reference = CHOICE(name='reference', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Pub', 'Pub')))
    Update_comment._cont = ASN1Dict([
        ('comment', _Update_comment_comment),
        ('addthis', _Update_comment_addthis),
        ('replaces', _Update_comment_replaces),
        ('reject-loc', _Update_comment_reject_loc),
        ('reference', _Update_comment_reference),
        ])
    Update_comment._ext = None
    
    #-----< Update-align >-----#
    Update_align = SEQ(name='Update-align', mode=MODE_TYPE)
    _Update_align_description = SEQ_OF(name='description', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Update_align_description__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cdd', 'Update-comment')))
    _Update_align_description._cont = __Update_align_description__item_
    _Update_align_seqannot = SEQ(name='seqannot', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Seq-annot')), opt=True)
    _Update_align_type = INT(name='type', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Update_align_type._cont = ASN1Dict([('unassigned', 0), ('update', 1), ('update-3d', 2), ('demoted', 51), ('demoted-3d', 52), ('other', 255)])
    Update_align._cont = ASN1Dict([
        ('description', _Update_align_description),
        ('seqannot', _Update_align_seqannot),
        ('type', _Update_align_type),
        ])
    Update_align._ext = None
    
    #-----< Reject-id >-----#
    Reject_id = SEQ(name='Reject-id', mode=MODE_TYPE)
    _Reject_id_description = SEQ_OF(name='description', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Reject_id_description__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cdd', 'Update-comment')))
    _Reject_id_description._cont = __Reject_id_description__item_
    _Reject_id_ids = SET_OF(name='ids', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Reject_id_ids__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Reject_id_ids._cont = __Reject_id_ids__item_
    Reject_id._cont = ASN1Dict([
        ('description', _Reject_id_description),
        ('ids', _Reject_id_ids),
        ])
    Reject_id._ext = None
    
    #-----< Feature-evidence >-----#
    Feature_evidence = CHOICE(name='Feature-evidence', mode=MODE_TYPE)
    _Feature_evidence_comment = STR_VIS(name='comment', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Feature_evidence_reference = CHOICE(name='reference', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Pub', 'Pub')))
    _Feature_evidence_bsannot = SEQ(name='bsannot', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc-annot-set')))
    _Feature_evidence_seqfeat = SEQ(name='seqfeat', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqfeat', 'Seq-feat')))
    _Feature_evidence_book_ref = SEQ(name='book-ref', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-book-ref')))
    Feature_evidence._cont = ASN1Dict([
        ('comment', _Feature_evidence_comment),
        ('reference', _Feature_evidence_reference),
        ('bsannot', _Feature_evidence_bsannot),
        ('seqfeat', _Feature_evidence_seqfeat),
        ('book-ref', _Feature_evidence_book_ref),
        ])
    Feature_evidence._ext = None
    
    #-----< Align-annot >-----#
    Align_annot = SEQ(name='Align-annot', mode=MODE_TYPE)
    _Align_annot_location = CHOICE(name='location', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Align_annot_description = STR_VIS(name='description', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Align_annot_evidence = SEQ_OF(name='evidence', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Align_annot_evidence__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cdd', 'Feature-evidence')))
    _Align_annot_evidence._cont = __Align_annot_evidence__item_
    _Align_annot_type = INT(name='type', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Align_annot_aliases = SEQ_OF(name='aliases', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Align_annot_aliases__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Align_annot_aliases._cont = __Align_annot_aliases__item_
    _Align_annot_motif = STR_VIS(name='motif', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Align_annot_motifuse = INT(name='motifuse', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Align_annot._cont = ASN1Dict([
        ('location', _Align_annot_location),
        ('description', _Align_annot_description),
        ('evidence', _Align_annot_evidence),
        ('type', _Align_annot_type),
        ('aliases', _Align_annot_aliases),
        ('motif', _Align_annot_motif),
        ('motifuse', _Align_annot_motifuse),
        ])
    Align_annot._ext = None
    
    #-----< Align-annot-set >-----#
    Align_annot_set = SEQ_OF(name='Align-annot-set', mode=MODE_TYPE)
    _Align_annot_set__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cdd', 'Align-annot')))
    Align_annot_set._cont = _Align_annot_set__item_
    
    #-----< Domain-parent >-----#
    Domain_parent = SEQ(name='Domain-parent', mode=MODE_TYPE)
    _Domain_parent_parent_type = INT(name='parent-type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Domain_parent_parent_type._cont = ASN1Dict([('classical', 0), ('fusion', 1), ('deletion', 2), ('permutation', 3), ('other', 255)])
    _Domain_parent_parentid = CHOICE(name='parentid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-id')))
    _Domain_parent_seqannot = SEQ(name='seqannot', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Seq-annot')), opt=True)
    Domain_parent._cont = ASN1Dict([
        ('parent-type', _Domain_parent_parent_type),
        ('parentid', _Domain_parent_parentid),
        ('seqannot', _Domain_parent_seqannot),
        ])
    Domain_parent._ext = None
    
    #-----< Sequence-tree >-----#
    Sequence_tree = SEQ(name='Sequence-tree', mode=MODE_TYPE)
    _Sequence_tree_cdAccession = STR_VIS(name='cdAccession', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Sequence_tree_algorithm = SEQ(name='algorithm', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Algorithm-type')))
    _Sequence_tree_isAnnotated = BOOL(name='isAnnotated', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _Sequence_tree_root = SEQ(name='root', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'SeqTree-node')))
    Sequence_tree._cont = ASN1Dict([
        ('cdAccession', _Sequence_tree_cdAccession),
        ('algorithm', _Sequence_tree_algorithm),
        ('isAnnotated', _Sequence_tree_isAnnotated),
        ('root', _Sequence_tree_root),
        ])
    Sequence_tree._ext = None
    
    #-----< SeqTree-node >-----#
    SeqTree_node = SEQ(name='SeqTree-node', mode=MODE_TYPE)
    _SeqTree_node_isAnnotated = BOOL(name='isAnnotated', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _SeqTree_node_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SeqTree_node_distance = REAL(name='distance', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    _SeqTree_node_children = CHOICE(name='children', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __SeqTree_node_children_children = SEQ_OF(name='children', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SeqTree_node_children_children__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cdd', 'SeqTree-node')))
    __SeqTree_node_children_children._cont = ___SeqTree_node_children_children__item_
    __SeqTree_node_children_footprint = SEQ(name='footprint', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SeqTree_node_children_footprint_seqRange = SEQ(name='seqRange', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-interval')))
    ___SeqTree_node_children_footprint_rowId = INT(name='rowId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SeqTree_node_children_footprint._cont = ASN1Dict([
        ('seqRange', ___SeqTree_node_children_footprint_seqRange),
        ('rowId', ___SeqTree_node_children_footprint_rowId),
        ])
    __SeqTree_node_children_footprint._ext = None
    _SeqTree_node_children._cont = ASN1Dict([
        ('children', __SeqTree_node_children_children),
        ('footprint', __SeqTree_node_children_footprint),
        ])
    _SeqTree_node_children._ext = None
    _SeqTree_node_annotation = SEQ(name='annotation', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Node-annotation')), opt=True)
    SeqTree_node._cont = ASN1Dict([
        ('isAnnotated', _SeqTree_node_isAnnotated),
        ('name', _SeqTree_node_name),
        ('distance', _SeqTree_node_distance),
        ('children', _SeqTree_node_children),
        ('annotation', _SeqTree_node_annotation),
        ])
    SeqTree_node._ext = None
    
    #-----< Algorithm-type >-----#
    Algorithm_type = SEQ(name='Algorithm-type', mode=MODE_TYPE)
    _Algorithm_type_scoring_Scheme = INT(name='scoring-Scheme', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Algorithm_type_scoring_Scheme._cont = ASN1Dict([('unassigned', 0), ('percent-id', 1), ('kimura-corrected', 2), ('aligned-score', 3), ('aligned-score-ext', 4), ('aligned-score-filled', 5), ('blast-footprint', 6), ('blast-full', 7), ('hybrid-aligned-score', 8), ('other', 255)])
    _Algorithm_type_clustering_Method = INT(name='clustering-Method', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Algorithm_type_clustering_Method._cont = ASN1Dict([('unassigned', 0), ('single-linkage', 1), ('neighbor-joining', 2), ('fast-minimum-evolution', 3), ('other', 255)])
    _Algorithm_type_score_Matrix = INT(name='score-Matrix', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Algorithm_type_score_Matrix._cont = ASN1Dict([('unassigned', 0), ('blosum45', 1), ('blosum62', 2), ('blosum80', 3), ('pam30', 4), ('pam70', 5), ('pam250', 6), ('other', 255)])
    _Algorithm_type_gapOpen = INT(name='gapOpen', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Algorithm_type_gapExtend = INT(name='gapExtend', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Algorithm_type_gapScaleFactor = INT(name='gapScaleFactor', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Algorithm_type_nTerminalExt = INT(name='nTerminalExt', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Algorithm_type_cTerminalExt = INT(name='cTerminalExt', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Algorithm_type_tree_scope = INT(name='tree-scope', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Algorithm_type_tree_scope._cont = ASN1Dict([('allDescendants', 0), ('immediateChildrenOnly', 1), ('selfOnly', 2), ('other', 255)])
    _Algorithm_type_coloring_scope = INT(name='coloring-scope', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Algorithm_type_coloring_scope._cont = ASN1Dict([('allDescendants', 0), ('immediateChildrenOnly', 1), ('other', 255)])
    Algorithm_type._cont = ASN1Dict([
        ('scoring-Scheme', _Algorithm_type_scoring_Scheme),
        ('clustering-Method', _Algorithm_type_clustering_Method),
        ('score-Matrix', _Algorithm_type_score_Matrix),
        ('gapOpen', _Algorithm_type_gapOpen),
        ('gapExtend', _Algorithm_type_gapExtend),
        ('gapScaleFactor', _Algorithm_type_gapScaleFactor),
        ('nTerminalExt', _Algorithm_type_nTerminalExt),
        ('cTerminalExt', _Algorithm_type_cTerminalExt),
        ('tree-scope', _Algorithm_type_tree_scope),
        ('coloring-scope', _Algorithm_type_coloring_scope),
        ])
    Algorithm_type._ext = None
    
    #-----< Node-annotation >-----#
    Node_annotation = SEQ(name='Node-annotation', mode=MODE_TYPE)
    _Node_annotation_presentInChildCD = STR_VIS(name='presentInChildCD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Node_annotation_note = STR_VIS(name='note', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Node_annotation._cont = ASN1Dict([
        ('presentInChildCD', _Node_annotation_presentInChildCD),
        ('note', _Node_annotation_note),
        ])
    Node_annotation._ext = None
    
    #-----< Cdd >-----#
    Cdd = SEQ(name='Cdd', mode=MODE_TYPE)
    _Cdd_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cdd_id = SEQ_OF(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-id-set')))
    _Cdd_description = SET_OF(name='description', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-descr-set')), opt=True)
    _Cdd_seqannot = SEQ_OF(name='seqannot', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Cdd_seqannot__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Seq-annot')))
    _Cdd_seqannot._cont = __Cdd_seqannot__item_
    _Cdd_features = SEQ(name='features', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc-annot-set')), opt=True)
    _Cdd_sequences = CHOICE(name='sequences', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')), opt=True)
    _Cdd_profile_range = SEQ(name='profile-range', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-interval')), opt=True)
    _Cdd_trunc_master = SEQ(name='trunc-master', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Bioseq')), opt=True)
    _Cdd_posfreq = SEQ(name='posfreq', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Matrix')), opt=True)
    _Cdd_scoremat = SEQ(name='scoremat', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Matrix')), opt=True)
    _Cdd_distance = SEQ(name='distance', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Triangle')), opt=True)
    _Cdd_parent = CHOICE(name='parent', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-id')), opt=True)
    _Cdd_children = SEQ_OF(name='children', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-id-set')), opt=True)
    _Cdd_siblings = SEQ_OF(name='siblings', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-id-set')), opt=True)
    _Cdd_neighbors = SEQ_OF(name='neighbors', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-id-set')), opt=True)
    _Cdd_pending = SEQ_OF(name='pending', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Cdd_pending__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cdd', 'Update-align')))
    _Cdd_pending._cont = __Cdd_pending__item_
    _Cdd_rejects = SEQ_OF(name='rejects', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Cdd_rejects__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cdd', 'Reject-id')))
    _Cdd_rejects._cont = __Cdd_rejects__item_
    _Cdd_master3d = SET_OF(name='master3d', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Cdd_master3d__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Cdd_master3d._cont = __Cdd_master3d__item_
    _Cdd_alignannot = SEQ_OF(name='alignannot', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Align-annot-set')), opt=True)
    _Cdd_style_dictionary = SEQ(name='style-dictionary', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-style-dictionary')), opt=True)
    _Cdd_user_annotations = SEQ(name='user-annotations', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-user-annotations')), opt=True)
    _Cdd_ancestors = SEQ_OF(name='ancestors', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Cdd_ancestors__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cdd', 'Domain-parent')))
    _Cdd_ancestors._cont = __Cdd_ancestors__item_
    _Cdd_scoreparams = SEQ(name='scoreparams', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ScoreMat', 'PssmWithParameters')), opt=True)
    _Cdd_seqtree = SEQ(name='seqtree', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Sequence-tree')), opt=True)
    Cdd._cont = ASN1Dict([
        ('name', _Cdd_name),
        ('id', _Cdd_id),
        ('description', _Cdd_description),
        ('seqannot', _Cdd_seqannot),
        ('features', _Cdd_features),
        ('sequences', _Cdd_sequences),
        ('profile-range', _Cdd_profile_range),
        ('trunc-master', _Cdd_trunc_master),
        ('posfreq', _Cdd_posfreq),
        ('scoremat', _Cdd_scoremat),
        ('distance', _Cdd_distance),
        ('parent', _Cdd_parent),
        ('children', _Cdd_children),
        ('siblings', _Cdd_siblings),
        ('neighbors', _Cdd_neighbors),
        ('pending', _Cdd_pending),
        ('rejects', _Cdd_rejects),
        ('master3d', _Cdd_master3d),
        ('alignannot', _Cdd_alignannot),
        ('style-dictionary', _Cdd_style_dictionary),
        ('user-annotations', _Cdd_user_annotations),
        ('ancestors', _Cdd_ancestors),
        ('scoreparams', _Cdd_scoreparams),
        ('seqtree', _Cdd_seqtree),
        ])
    Cdd._ext = None
    
    #-----< Cdd-set >-----#
    Cdd_set = SET_OF(name='Cdd-set', mode=MODE_TYPE)
    _Cdd_set__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cdd', 'Cdd')))
    Cdd_set._cont = _Cdd_set__item_
    
    #-----< Cdd-Viewer-Rect >-----#
    Cdd_Viewer_Rect = SEQ(name='Cdd-Viewer-Rect', mode=MODE_TYPE)
    _Cdd_Viewer_Rect_top = INT(name='top', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cdd_Viewer_Rect_left = INT(name='left', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cdd_Viewer_Rect_width = INT(name='width', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cdd_Viewer_Rect_height = INT(name='height', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Cdd_Viewer_Rect._cont = ASN1Dict([
        ('top', _Cdd_Viewer_Rect_top),
        ('left', _Cdd_Viewer_Rect_left),
        ('width', _Cdd_Viewer_Rect_width),
        ('height', _Cdd_Viewer_Rect_height),
        ])
    Cdd_Viewer_Rect._ext = None
    
    #-----< Cdd-Viewer >-----#
    Cdd_Viewer = SEQ(name='Cdd-Viewer', mode=MODE_TYPE)
    _Cdd_Viewer_ctrl = INT(name='ctrl', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cdd_Viewer_ctrl._cont = ASN1Dict([('unassigned', 0), ('cd-info', 1), ('align-annot', 2), ('seq-list', 3), ('seq-tree', 4), ('merge-preview', 5), ('cross-hits', 6), ('notes', 7), ('tax-tree', 8), ('dart', 9), ('dart-selected-rows', 10), ('other', 255)])
    _Cdd_Viewer_rect = SEQ(name='rect', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-Viewer-Rect')), opt=True)
    _Cdd_Viewer_accessions = SEQ_OF(name='accessions', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Cdd_Viewer_accessions__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Cdd_Viewer_accessions._cont = __Cdd_Viewer_accessions__item_
    Cdd_Viewer._cont = ASN1Dict([
        ('ctrl', _Cdd_Viewer_ctrl),
        ('rect', _Cdd_Viewer_rect),
        ('accessions', _Cdd_Viewer_accessions),
        ])
    Cdd_Viewer._ext = None
    
    #-----< Cdd-Script >-----#
    Cdd_Script = SEQ(name='Cdd-Script', mode=MODE_TYPE)
    _Cdd_Script_type = INT(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cdd_Script_type._cont = ASN1Dict([('unassigned', 0), ('user-recorded', 1), ('server-generated', 2), ('other', 255)])
    _Cdd_Script_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cdd_Script_commands = STR_VIS(name='commands', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Cdd_Script._cont = ASN1Dict([
        ('type', _Cdd_Script_type),
        ('name', _Cdd_Script_name),
        ('commands', _Cdd_Script_commands),
        ])
    Cdd_Script._ext = None
    
    #-----< Cdd-Project >-----#
    Cdd_Project = SEQ(name='Cdd-Project', mode=MODE_TYPE)
    _Cdd_Project_cds = SEQ_OF(name='cds', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Cdd_Project_cds__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cdd', 'Cdd')))
    _Cdd_Project_cds._cont = __Cdd_Project_cds__item_
    _Cdd_Project_cdcolor = SEQ_OF(name='cdcolor', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Cdd_Project_cdcolor__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Cdd_Project_cdcolor._cont = __Cdd_Project_cdcolor__item_
    _Cdd_Project_viewers = SEQ_OF(name='viewers', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Cdd_Project_viewers__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-Viewer')))
    _Cdd_Project_viewers._cont = __Cdd_Project_viewers__item_
    _Cdd_Project_log = STR_VIS(name='log', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cdd_Project_scripts = SEQ_OF(name='scripts', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Cdd_Project_scripts__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-Script')))
    _Cdd_Project_scripts._cont = __Cdd_Project_scripts__item_
    _Cdd_Project_id = SEQ_OF(name='id', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd-id-set')), opt=True)
    _Cdd_Project_rids = SEQ_OF(name='rids', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Cdd_Project_rids__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Cdd_Project_rids._cont = __Cdd_Project_rids__item_
    _Cdd_Project_create_date = CHOICE(name='create-date', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    _Cdd_Project_update_date = CHOICE(name='update-date', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    _Cdd_Project_project_id = INT(name='project-id', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Cdd_Project._cont = ASN1Dict([
        ('cds', _Cdd_Project_cds),
        ('cdcolor', _Cdd_Project_cdcolor),
        ('viewers', _Cdd_Project_viewers),
        ('log', _Cdd_Project_log),
        ('scripts', _Cdd_Project_scripts),
        ('id', _Cdd_Project_id),
        ('rids', _Cdd_Project_rids),
        ('create-date', _Cdd_Project_create_date),
        ('update-date', _Cdd_Project_update_date),
        ('project-id', _Cdd_Project_project_id),
        ])
    Cdd_Project._ext = None
    
    _all_ = [
        _Cdd_org_ref_reference,
        _Cdd_org_ref_active,
        _Cdd_org_ref_parent_tax_id,
        _Cdd_org_ref_rank,
        Cdd_org_ref,
        _Cdd_org_ref_set__item_,
        Cdd_org_ref_set,
        _Cdd_pref_node_descr_create_date,
        _Cdd_pref_node_descr_description,
        Cdd_pref_node_descr,
        _Cdd_pref_node_descr_set__item_,
        Cdd_pref_node_descr_set,
        _Cdd_pref_nodes_preferred_nodes,
        _Cdd_pref_nodes_model_organisms,
        _Cdd_pref_nodes_optional_nodes,
        _Cdd_pref_nodes_description,
        Cdd_pref_nodes,
        _Global_id_accession,
        _Global_id_release,
        _Global_id_version,
        _Global_id_database,
        Global_id,
        _Cdd_id_uid,
        _Cdd_id_gid,
        Cdd_id,
        _Cdd_id_set__item_,
        Cdd_id_set,
        _Cdd_repeat_count,
        _Cdd_repeat_location,
        _Cdd_repeat_avglen,
        Cdd_repeat,
        _Cdd_book_ref_bookname,
        _Cdd_book_ref_textelement,
        _Cdd_book_ref_elementid,
        _Cdd_book_ref_subelementid,
        _Cdd_book_ref_celementid,
        _Cdd_book_ref_csubelementid,
        Cdd_book_ref,
        _Cdd_descr_othername,
        _Cdd_descr_category,
        _Cdd_descr_comment,
        _Cdd_descr_reference,
        _Cdd_descr_create_date,
        _Cdd_descr_tax_source,
        _Cdd_descr_source,
        _Cdd_descr_status,
        _Cdd_descr_update_date,
        __Cdd_descr_scrapbook__item_,
        _Cdd_descr_scrapbook,
        _Cdd_descr_source_id,
        _Cdd_descr_repeats,
        _Cdd_descr_old_root,
        _Cdd_descr_curation_status,
        _Cdd_descr_readonly_status,
        _Cdd_descr_book_ref,
        _Cdd_descr_attribution,
        _Cdd_descr_title,
        Cdd_descr,
        _Cdd_descr_set__item_,
        Cdd_descr_set,
        _Cdd_tree_name,
        _Cdd_tree_id,
        _Cdd_tree_description,
        _Cdd_tree_parent,
        _Cdd_tree_children,
        _Cdd_tree_siblings,
        _Cdd_tree_neighbors,
        Cdd_tree,
        _Cdd_tree_set__item_,
        Cdd_tree_set,
        _Matrix_ncolumns,
        _Matrix_nrows,
        __Matrix_row_labels__item_,
        _Matrix_row_labels,
        _Matrix_scale_factor,
        __Matrix_columns__item_,
        _Matrix_columns,
        Matrix,
        _Triangle_nelements,
        _Triangle_scores,
        __Triangle_div_ranks__item_,
        _Triangle_div_ranks,
        Triangle,
        _Update_comment_comment,
        _Update_comment_addthis,
        _Update_comment_replaces,
        _Update_comment_reject_loc,
        _Update_comment_reference,
        Update_comment,
        __Update_align_description__item_,
        _Update_align_description,
        _Update_align_seqannot,
        _Update_align_type,
        Update_align,
        __Reject_id_description__item_,
        _Reject_id_description,
        __Reject_id_ids__item_,
        _Reject_id_ids,
        Reject_id,
        _Feature_evidence_comment,
        _Feature_evidence_reference,
        _Feature_evidence_bsannot,
        _Feature_evidence_seqfeat,
        _Feature_evidence_book_ref,
        Feature_evidence,
        _Align_annot_location,
        _Align_annot_description,
        __Align_annot_evidence__item_,
        _Align_annot_evidence,
        _Align_annot_type,
        __Align_annot_aliases__item_,
        _Align_annot_aliases,
        _Align_annot_motif,
        _Align_annot_motifuse,
        Align_annot,
        _Align_annot_set__item_,
        Align_annot_set,
        _Domain_parent_parent_type,
        _Domain_parent_parentid,
        _Domain_parent_seqannot,
        Domain_parent,
        _Sequence_tree_cdAccession,
        _Sequence_tree_algorithm,
        _Sequence_tree_isAnnotated,
        _Sequence_tree_root,
        Sequence_tree,
        _SeqTree_node_isAnnotated,
        _SeqTree_node_name,
        _SeqTree_node_distance,
        ___SeqTree_node_children_children__item_,
        __SeqTree_node_children_children,
        ___SeqTree_node_children_footprint_seqRange,
        ___SeqTree_node_children_footprint_rowId,
        __SeqTree_node_children_footprint,
        _SeqTree_node_children,
        _SeqTree_node_annotation,
        SeqTree_node,
        _Algorithm_type_scoring_Scheme,
        _Algorithm_type_clustering_Method,
        _Algorithm_type_score_Matrix,
        _Algorithm_type_gapOpen,
        _Algorithm_type_gapExtend,
        _Algorithm_type_gapScaleFactor,
        _Algorithm_type_nTerminalExt,
        _Algorithm_type_cTerminalExt,
        _Algorithm_type_tree_scope,
        _Algorithm_type_coloring_scope,
        Algorithm_type,
        _Node_annotation_presentInChildCD,
        _Node_annotation_note,
        Node_annotation,
        _Cdd_name,
        _Cdd_id,
        _Cdd_description,
        __Cdd_seqannot__item_,
        _Cdd_seqannot,
        _Cdd_features,
        _Cdd_sequences,
        _Cdd_profile_range,
        _Cdd_trunc_master,
        _Cdd_posfreq,
        _Cdd_scoremat,
        _Cdd_distance,
        _Cdd_parent,
        _Cdd_children,
        _Cdd_siblings,
        _Cdd_neighbors,
        __Cdd_pending__item_,
        _Cdd_pending,
        __Cdd_rejects__item_,
        _Cdd_rejects,
        __Cdd_master3d__item_,
        _Cdd_master3d,
        _Cdd_alignannot,
        _Cdd_style_dictionary,
        _Cdd_user_annotations,
        __Cdd_ancestors__item_,
        _Cdd_ancestors,
        _Cdd_scoreparams,
        _Cdd_seqtree,
        Cdd,
        _Cdd_set__item_,
        Cdd_set,
        _Cdd_Viewer_Rect_top,
        _Cdd_Viewer_Rect_left,
        _Cdd_Viewer_Rect_width,
        _Cdd_Viewer_Rect_height,
        Cdd_Viewer_Rect,
        _Cdd_Viewer_ctrl,
        _Cdd_Viewer_rect,
        __Cdd_Viewer_accessions__item_,
        _Cdd_Viewer_accessions,
        Cdd_Viewer,
        _Cdd_Script_type,
        _Cdd_Script_name,
        _Cdd_Script_commands,
        Cdd_Script,
        __Cdd_Project_cds__item_,
        _Cdd_Project_cds,
        __Cdd_Project_cdcolor__item_,
        _Cdd_Project_cdcolor,
        __Cdd_Project_viewers__item_,
        _Cdd_Project_viewers,
        _Cdd_Project_log,
        __Cdd_Project_scripts__item_,
        _Cdd_Project_scripts,
        _Cdd_Project_id,
        __Cdd_Project_rids__item_,
        _Cdd_Project_rids,
        _Cdd_Project_create_date,
        _Cdd_Project_update_date,
        _Cdd_Project_project_id,
        Cdd_Project,
    ]

class NCBI_Cn3d:

    _name_  = 'NCBI-Cn3d'
    _oid_   = []
    
    _obj_ = [
        'Cn3d-backbone-type',
        'Cn3d-drawing-style',
        'Cn3d-color-scheme',
        'Cn3d-color',
        'Cn3d-backbone-style',
        'Cn3d-general-style',
        'Cn3d-backbone-label-style',
        'Cn3d-style-settings',
        'Cn3d-style-settings-set',
        'Cn3d-style-table-id',
        'Cn3d-style-table-item',
        'Cn3d-style-dictionary',
        'Cn3d-residue-range',
        'Cn3d-molecule-location',
        'Cn3d-object-location',
        'Cn3d-user-annotation',
        'Cn3d-GL-matrix',
        'Cn3d-vector',
        'Cn3d-view-settings',
        'Cn3d-user-annotations',
        ]
    _type_ = [
        'Cn3d-backbone-type',
        'Cn3d-drawing-style',
        'Cn3d-color-scheme',
        'Cn3d-color',
        'Cn3d-backbone-style',
        'Cn3d-general-style',
        'Cn3d-backbone-label-style',
        'Cn3d-style-settings',
        'Cn3d-style-settings-set',
        'Cn3d-style-table-id',
        'Cn3d-style-table-item',
        'Cn3d-style-dictionary',
        'Cn3d-residue-range',
        'Cn3d-molecule-location',
        'Cn3d-object-location',
        'Cn3d-user-annotation',
        'Cn3d-GL-matrix',
        'Cn3d-vector',
        'Cn3d-view-settings',
        'Cn3d-user-annotations',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Cn3d-backbone-type >-----#
    Cn3d_backbone_type = ENUM(name='Cn3d-backbone-type', mode=MODE_TYPE)
    Cn3d_backbone_type._cont = ASN1Dict([('off', 1), ('trace', 2), ('partial', 3), ('complete', 4)])
    Cn3d_backbone_type._ext = None
    
    #-----< Cn3d-drawing-style >-----#
    Cn3d_drawing_style = ENUM(name='Cn3d-drawing-style', mode=MODE_TYPE)
    Cn3d_drawing_style._cont = ASN1Dict([('wire', 1), ('tubes', 2), ('ball-and-stick', 3), ('space-fill', 4), ('wire-worm', 5), ('tube-worm', 6), ('with-arrows', 7), ('without-arrows', 8)])
    Cn3d_drawing_style._ext = None
    
    #-----< Cn3d-color-scheme >-----#
    Cn3d_color_scheme = ENUM(name='Cn3d-color-scheme', mode=MODE_TYPE)
    Cn3d_color_scheme._cont = ASN1Dict([('element', 1), ('object', 2), ('molecule', 3), ('domain', 4), ('secondary-structure', 5), ('user-select', 6), ('aligned', 7), ('identity', 8), ('variety', 9), ('weighted-variety', 10), ('information-content', 11), ('fit', 12), ('temperature', 13), ('hydrophobicity', 14), ('charge', 15), ('rainbow', 16), ('block-fit', 17), ('block-z-fit', 18), ('block-row-fit', 19), ('residue', 20)])
    Cn3d_color_scheme._ext = None
    
    #-----< Cn3d-color >-----#
    Cn3d_color = SEQ(name='Cn3d-color', mode=MODE_TYPE)
    _Cn3d_color_scale_factor = INT(name='scale-factor', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=255)
    _Cn3d_color_red = INT(name='red', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_color_green = INT(name='green', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_color_blue = INT(name='blue', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_color_alpha = INT(name='alpha', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=255)
    Cn3d_color._cont = ASN1Dict([
        ('scale-factor', _Cn3d_color_scale_factor),
        ('red', _Cn3d_color_red),
        ('green', _Cn3d_color_green),
        ('blue', _Cn3d_color_blue),
        ('alpha', _Cn3d_color_alpha),
        ])
    Cn3d_color._ext = None
    
    #-----< Cn3d-backbone-style >-----#
    Cn3d_backbone_style = SEQ(name='Cn3d-backbone-style', mode=MODE_TYPE)
    _Cn3d_backbone_style_type = ENUM(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-backbone-type')))
    _Cn3d_backbone_style_style = ENUM(name='style', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-drawing-style')))
    _Cn3d_backbone_style_color_scheme = ENUM(name='color-scheme', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-color-scheme')))
    _Cn3d_backbone_style_user_color = SEQ(name='user-color', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-color')))
    Cn3d_backbone_style._cont = ASN1Dict([
        ('type', _Cn3d_backbone_style_type),
        ('style', _Cn3d_backbone_style_style),
        ('color-scheme', _Cn3d_backbone_style_color_scheme),
        ('user-color', _Cn3d_backbone_style_user_color),
        ])
    Cn3d_backbone_style._ext = None
    
    #-----< Cn3d-general-style >-----#
    Cn3d_general_style = SEQ(name='Cn3d-general-style', mode=MODE_TYPE)
    _Cn3d_general_style_is_on = BOOL(name='is-on', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_general_style_style = ENUM(name='style', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-drawing-style')))
    _Cn3d_general_style_color_scheme = ENUM(name='color-scheme', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-color-scheme')))
    _Cn3d_general_style_user_color = SEQ(name='user-color', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-color')))
    Cn3d_general_style._cont = ASN1Dict([
        ('is-on', _Cn3d_general_style_is_on),
        ('style', _Cn3d_general_style_style),
        ('color-scheme', _Cn3d_general_style_color_scheme),
        ('user-color', _Cn3d_general_style_user_color),
        ])
    Cn3d_general_style._ext = None
    
    #-----< Cn3d-backbone-label-style >-----#
    Cn3d_backbone_label_style = SEQ(name='Cn3d-backbone-label-style', mode=MODE_TYPE)
    _Cn3d_backbone_label_style_spacing = INT(name='spacing', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_backbone_label_style_type = ENUM(name='type', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_backbone_label_style_type._cont = ASN1Dict([('one-letter', 1), ('three-letter', 2)])
    _Cn3d_backbone_label_style_type._ext = None
    _Cn3d_backbone_label_style_number = ENUM(name='number', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_backbone_label_style_number._cont = ASN1Dict([('none', 0), ('sequential', 1), ('pdb', 2)])
    _Cn3d_backbone_label_style_number._ext = None
    _Cn3d_backbone_label_style_termini = BOOL(name='termini', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_backbone_label_style_white = BOOL(name='white', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Cn3d_backbone_label_style._cont = ASN1Dict([
        ('spacing', _Cn3d_backbone_label_style_spacing),
        ('type', _Cn3d_backbone_label_style_type),
        ('number', _Cn3d_backbone_label_style_number),
        ('termini', _Cn3d_backbone_label_style_termini),
        ('white', _Cn3d_backbone_label_style_white),
        ])
    Cn3d_backbone_label_style._ext = None
    
    #-----< Cn3d-style-settings >-----#
    Cn3d_style_settings = SEQ(name='Cn3d-style-settings', mode=MODE_TYPE)
    _Cn3d_style_settings_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cn3d_style_settings_protein_backbone = SEQ(name='protein-backbone', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-backbone-style')))
    _Cn3d_style_settings_nucleotide_backbone = SEQ(name='nucleotide-backbone', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-backbone-style')))
    _Cn3d_style_settings_protein_sidechains = SEQ(name='protein-sidechains', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-general-style')))
    _Cn3d_style_settings_nucleotide_sidechains = SEQ(name='nucleotide-sidechains', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-general-style')))
    _Cn3d_style_settings_heterogens = SEQ(name='heterogens', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-general-style')))
    _Cn3d_style_settings_solvents = SEQ(name='solvents', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-general-style')))
    _Cn3d_style_settings_connections = SEQ(name='connections', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-general-style')))
    _Cn3d_style_settings_helix_objects = SEQ(name='helix-objects', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-general-style')))
    _Cn3d_style_settings_strand_objects = SEQ(name='strand-objects', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-general-style')))
    _Cn3d_style_settings_virtual_disulfides_on = BOOL(name='virtual-disulfides-on', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_style_settings_virtual_disulfide_color = SEQ(name='virtual-disulfide-color', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-color')))
    _Cn3d_style_settings_hydrogens_on = BOOL(name='hydrogens-on', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_style_settings_background_color = SEQ(name='background-color', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-color')))
    _Cn3d_style_settings_scale_factor = INT(name='scale-factor', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_style_settings_space_fill_proportion = INT(name='space-fill-proportion', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_style_settings_ball_radius = INT(name='ball-radius', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_style_settings_stick_radius = INT(name='stick-radius', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_style_settings_tube_radius = INT(name='tube-radius', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_style_settings_tube_worm_radius = INT(name='tube-worm-radius', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_style_settings_helix_radius = INT(name='helix-radius', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_style_settings_strand_width = INT(name='strand-width', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_style_settings_strand_thickness = INT(name='strand-thickness', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_style_settings_protein_labels = SEQ(name='protein-labels', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-backbone-label-style')), opt=True)
    _Cn3d_style_settings_nucleotide_labels = SEQ(name='nucleotide-labels', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-backbone-label-style')), opt=True)
    _Cn3d_style_settings_ion_labels = BOOL(name='ion-labels', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Cn3d_style_settings._cont = ASN1Dict([
        ('name', _Cn3d_style_settings_name),
        ('protein-backbone', _Cn3d_style_settings_protein_backbone),
        ('nucleotide-backbone', _Cn3d_style_settings_nucleotide_backbone),
        ('protein-sidechains', _Cn3d_style_settings_protein_sidechains),
        ('nucleotide-sidechains', _Cn3d_style_settings_nucleotide_sidechains),
        ('heterogens', _Cn3d_style_settings_heterogens),
        ('solvents', _Cn3d_style_settings_solvents),
        ('connections', _Cn3d_style_settings_connections),
        ('helix-objects', _Cn3d_style_settings_helix_objects),
        ('strand-objects', _Cn3d_style_settings_strand_objects),
        ('virtual-disulfides-on', _Cn3d_style_settings_virtual_disulfides_on),
        ('virtual-disulfide-color', _Cn3d_style_settings_virtual_disulfide_color),
        ('hydrogens-on', _Cn3d_style_settings_hydrogens_on),
        ('background-color', _Cn3d_style_settings_background_color),
        ('scale-factor', _Cn3d_style_settings_scale_factor),
        ('space-fill-proportion', _Cn3d_style_settings_space_fill_proportion),
        ('ball-radius', _Cn3d_style_settings_ball_radius),
        ('stick-radius', _Cn3d_style_settings_stick_radius),
        ('tube-radius', _Cn3d_style_settings_tube_radius),
        ('tube-worm-radius', _Cn3d_style_settings_tube_worm_radius),
        ('helix-radius', _Cn3d_style_settings_helix_radius),
        ('strand-width', _Cn3d_style_settings_strand_width),
        ('strand-thickness', _Cn3d_style_settings_strand_thickness),
        ('protein-labels', _Cn3d_style_settings_protein_labels),
        ('nucleotide-labels', _Cn3d_style_settings_nucleotide_labels),
        ('ion-labels', _Cn3d_style_settings_ion_labels),
        ])
    Cn3d_style_settings._ext = None
    
    #-----< Cn3d-style-settings-set >-----#
    Cn3d_style_settings_set = SET_OF(name='Cn3d-style-settings-set', mode=MODE_TYPE)
    _Cn3d_style_settings_set__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-style-settings')))
    Cn3d_style_settings_set._cont = _Cn3d_style_settings_set__item_
    
    #-----< Cn3d-style-table-id >-----#
    Cn3d_style_table_id = INT(name='Cn3d-style-table-id', mode=MODE_TYPE)
    
    #-----< Cn3d-style-table-item >-----#
    Cn3d_style_table_item = SEQ(name='Cn3d-style-table-item', mode=MODE_TYPE)
    _Cn3d_style_table_item_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-style-table-id')))
    _Cn3d_style_table_item_style = SEQ(name='style', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-style-settings')))
    Cn3d_style_table_item._cont = ASN1Dict([
        ('id', _Cn3d_style_table_item_id),
        ('style', _Cn3d_style_table_item_style),
        ])
    Cn3d_style_table_item._ext = None
    
    #-----< Cn3d-style-dictionary >-----#
    Cn3d_style_dictionary = SEQ(name='Cn3d-style-dictionary', mode=MODE_TYPE)
    _Cn3d_style_dictionary_global_style = SEQ(name='global-style', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-style-settings')))
    _Cn3d_style_dictionary_style_table = SEQ_OF(name='style-table', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Cn3d_style_dictionary_style_table__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-style-table-item')))
    _Cn3d_style_dictionary_style_table._cont = __Cn3d_style_dictionary_style_table__item_
    Cn3d_style_dictionary._cont = ASN1Dict([
        ('global-style', _Cn3d_style_dictionary_global_style),
        ('style-table', _Cn3d_style_dictionary_style_table),
        ])
    Cn3d_style_dictionary._ext = None
    
    #-----< Cn3d-residue-range >-----#
    Cn3d_residue_range = SEQ(name='Cn3d-residue-range', mode=MODE_TYPE)
    _Cn3d_residue_range_from_ = INT(name='from', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Residue-id')))
    _Cn3d_residue_range_to = INT(name='to', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Residue-id')))
    Cn3d_residue_range._cont = ASN1Dict([
        ('from', _Cn3d_residue_range_from_),
        ('to', _Cn3d_residue_range_to),
        ])
    Cn3d_residue_range._ext = None
    
    #-----< Cn3d-molecule-location >-----#
    Cn3d_molecule_location = SEQ(name='Cn3d-molecule-location', mode=MODE_TYPE)
    _Cn3d_molecule_location_molecule_id = INT(name='molecule-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Molecule-id')))
    _Cn3d_molecule_location_residues = SEQ_OF(name='residues', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Cn3d_molecule_location_residues__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-residue-range')))
    _Cn3d_molecule_location_residues._cont = __Cn3d_molecule_location_residues__item_
    Cn3d_molecule_location._cont = ASN1Dict([
        ('molecule-id', _Cn3d_molecule_location_molecule_id),
        ('residues', _Cn3d_molecule_location_residues),
        ])
    Cn3d_molecule_location._ext = None
    
    #-----< Cn3d-object-location >-----#
    Cn3d_object_location = SEQ(name='Cn3d-object-location', mode=MODE_TYPE)
    _Cn3d_object_location_structure_id = CHOICE(name='structure-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc-id')))
    _Cn3d_object_location_residues = SEQ_OF(name='residues', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Cn3d_object_location_residues__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-molecule-location')))
    _Cn3d_object_location_residues._cont = __Cn3d_object_location_residues__item_
    Cn3d_object_location._cont = ASN1Dict([
        ('structure-id', _Cn3d_object_location_structure_id),
        ('residues', _Cn3d_object_location_residues),
        ])
    Cn3d_object_location._ext = None
    
    #-----< Cn3d-user-annotation >-----#
    Cn3d_user_annotation = SEQ(name='Cn3d-user-annotation', mode=MODE_TYPE)
    _Cn3d_user_annotation_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Cn3d_user_annotation_description = STR_VIS(name='description', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cn3d_user_annotation_style_id = INT(name='style-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-style-table-id')))
    _Cn3d_user_annotation_residues = SEQ_OF(name='residues', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Cn3d_user_annotation_residues__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-object-location')))
    _Cn3d_user_annotation_residues._cont = __Cn3d_user_annotation_residues__item_
    _Cn3d_user_annotation_is_on = BOOL(name='is-on', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Cn3d_user_annotation._cont = ASN1Dict([
        ('name', _Cn3d_user_annotation_name),
        ('description', _Cn3d_user_annotation_description),
        ('style-id', _Cn3d_user_annotation_style_id),
        ('residues', _Cn3d_user_annotation_residues),
        ('is-on', _Cn3d_user_annotation_is_on),
        ])
    Cn3d_user_annotation._ext = None
    
    #-----< Cn3d-GL-matrix >-----#
    Cn3d_GL_matrix = SEQ(name='Cn3d-GL-matrix', mode=MODE_TYPE)
    _Cn3d_GL_matrix_m0 = REAL(name='m0', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_GL_matrix_m1 = REAL(name='m1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_GL_matrix_m2 = REAL(name='m2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_GL_matrix_m3 = REAL(name='m3', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_GL_matrix_m4 = REAL(name='m4', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_GL_matrix_m5 = REAL(name='m5', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_GL_matrix_m6 = REAL(name='m6', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_GL_matrix_m7 = REAL(name='m7', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_GL_matrix_m8 = REAL(name='m8', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_GL_matrix_m9 = REAL(name='m9', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_GL_matrix_m10 = REAL(name='m10', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_GL_matrix_m11 = REAL(name='m11', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_GL_matrix_m12 = REAL(name='m12', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_GL_matrix_m13 = REAL(name='m13', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_GL_matrix_m14 = REAL(name='m14', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_GL_matrix_m15 = REAL(name='m15', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    Cn3d_GL_matrix._cont = ASN1Dict([
        ('m0', _Cn3d_GL_matrix_m0),
        ('m1', _Cn3d_GL_matrix_m1),
        ('m2', _Cn3d_GL_matrix_m2),
        ('m3', _Cn3d_GL_matrix_m3),
        ('m4', _Cn3d_GL_matrix_m4),
        ('m5', _Cn3d_GL_matrix_m5),
        ('m6', _Cn3d_GL_matrix_m6),
        ('m7', _Cn3d_GL_matrix_m7),
        ('m8', _Cn3d_GL_matrix_m8),
        ('m9', _Cn3d_GL_matrix_m9),
        ('m10', _Cn3d_GL_matrix_m10),
        ('m11', _Cn3d_GL_matrix_m11),
        ('m12', _Cn3d_GL_matrix_m12),
        ('m13', _Cn3d_GL_matrix_m13),
        ('m14', _Cn3d_GL_matrix_m14),
        ('m15', _Cn3d_GL_matrix_m15),
        ])
    Cn3d_GL_matrix._ext = None
    
    #-----< Cn3d-vector >-----#
    Cn3d_vector = SEQ(name='Cn3d-vector', mode=MODE_TYPE)
    _Cn3d_vector_x = REAL(name='x', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_vector_y = REAL(name='y', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_vector_z = REAL(name='z', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    Cn3d_vector._cont = ASN1Dict([
        ('x', _Cn3d_vector_x),
        ('y', _Cn3d_vector_y),
        ('z', _Cn3d_vector_z),
        ])
    Cn3d_vector._ext = None
    
    #-----< Cn3d-view-settings >-----#
    Cn3d_view_settings = SEQ(name='Cn3d-view-settings', mode=MODE_TYPE)
    _Cn3d_view_settings_camera_distance = REAL(name='camera-distance', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_view_settings_camera_angle_rad = REAL(name='camera-angle-rad', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_view_settings_camera_look_at_X = REAL(name='camera-look-at-X', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_view_settings_camera_look_at_Y = REAL(name='camera-look-at-Y', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_view_settings_camera_clip_near = REAL(name='camera-clip-near', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_view_settings_camera_clip_far = REAL(name='camera-clip-far', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Cn3d_view_settings_matrix = SEQ(name='matrix', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-GL-matrix')))
    _Cn3d_view_settings_rotation_center = SEQ(name='rotation-center', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-vector')))
    Cn3d_view_settings._cont = ASN1Dict([
        ('camera-distance', _Cn3d_view_settings_camera_distance),
        ('camera-angle-rad', _Cn3d_view_settings_camera_angle_rad),
        ('camera-look-at-X', _Cn3d_view_settings_camera_look_at_X),
        ('camera-look-at-Y', _Cn3d_view_settings_camera_look_at_Y),
        ('camera-clip-near', _Cn3d_view_settings_camera_clip_near),
        ('camera-clip-far', _Cn3d_view_settings_camera_clip_far),
        ('matrix', _Cn3d_view_settings_matrix),
        ('rotation-center', _Cn3d_view_settings_rotation_center),
        ])
    Cn3d_view_settings._ext = None
    
    #-----< Cn3d-user-annotations >-----#
    Cn3d_user_annotations = SEQ(name='Cn3d-user-annotations', mode=MODE_TYPE)
    _Cn3d_user_annotations_annotations = SEQ_OF(name='annotations', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Cn3d_user_annotations_annotations__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-user-annotation')))
    _Cn3d_user_annotations_annotations._cont = __Cn3d_user_annotations_annotations__item_
    _Cn3d_user_annotations_view = SEQ(name='view', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-view-settings')), opt=True)
    Cn3d_user_annotations._cont = ASN1Dict([
        ('annotations', _Cn3d_user_annotations_annotations),
        ('view', _Cn3d_user_annotations_view),
        ])
    Cn3d_user_annotations._ext = None
    
    _all_ = [
        Cn3d_backbone_type,
        Cn3d_drawing_style,
        Cn3d_color_scheme,
        _Cn3d_color_scale_factor,
        _Cn3d_color_red,
        _Cn3d_color_green,
        _Cn3d_color_blue,
        _Cn3d_color_alpha,
        Cn3d_color,
        _Cn3d_backbone_style_type,
        _Cn3d_backbone_style_style,
        _Cn3d_backbone_style_color_scheme,
        _Cn3d_backbone_style_user_color,
        Cn3d_backbone_style,
        _Cn3d_general_style_is_on,
        _Cn3d_general_style_style,
        _Cn3d_general_style_color_scheme,
        _Cn3d_general_style_user_color,
        Cn3d_general_style,
        _Cn3d_backbone_label_style_spacing,
        _Cn3d_backbone_label_style_type,
        _Cn3d_backbone_label_style_number,
        _Cn3d_backbone_label_style_termini,
        _Cn3d_backbone_label_style_white,
        Cn3d_backbone_label_style,
        _Cn3d_style_settings_name,
        _Cn3d_style_settings_protein_backbone,
        _Cn3d_style_settings_nucleotide_backbone,
        _Cn3d_style_settings_protein_sidechains,
        _Cn3d_style_settings_nucleotide_sidechains,
        _Cn3d_style_settings_heterogens,
        _Cn3d_style_settings_solvents,
        _Cn3d_style_settings_connections,
        _Cn3d_style_settings_helix_objects,
        _Cn3d_style_settings_strand_objects,
        _Cn3d_style_settings_virtual_disulfides_on,
        _Cn3d_style_settings_virtual_disulfide_color,
        _Cn3d_style_settings_hydrogens_on,
        _Cn3d_style_settings_background_color,
        _Cn3d_style_settings_scale_factor,
        _Cn3d_style_settings_space_fill_proportion,
        _Cn3d_style_settings_ball_radius,
        _Cn3d_style_settings_stick_radius,
        _Cn3d_style_settings_tube_radius,
        _Cn3d_style_settings_tube_worm_radius,
        _Cn3d_style_settings_helix_radius,
        _Cn3d_style_settings_strand_width,
        _Cn3d_style_settings_strand_thickness,
        _Cn3d_style_settings_protein_labels,
        _Cn3d_style_settings_nucleotide_labels,
        _Cn3d_style_settings_ion_labels,
        Cn3d_style_settings,
        _Cn3d_style_settings_set__item_,
        Cn3d_style_settings_set,
        Cn3d_style_table_id,
        _Cn3d_style_table_item_id,
        _Cn3d_style_table_item_style,
        Cn3d_style_table_item,
        _Cn3d_style_dictionary_global_style,
        __Cn3d_style_dictionary_style_table__item_,
        _Cn3d_style_dictionary_style_table,
        Cn3d_style_dictionary,
        _Cn3d_residue_range_from_,
        _Cn3d_residue_range_to,
        Cn3d_residue_range,
        _Cn3d_molecule_location_molecule_id,
        __Cn3d_molecule_location_residues__item_,
        _Cn3d_molecule_location_residues,
        Cn3d_molecule_location,
        _Cn3d_object_location_structure_id,
        __Cn3d_object_location_residues__item_,
        _Cn3d_object_location_residues,
        Cn3d_object_location,
        _Cn3d_user_annotation_name,
        _Cn3d_user_annotation_description,
        _Cn3d_user_annotation_style_id,
        __Cn3d_user_annotation_residues__item_,
        _Cn3d_user_annotation_residues,
        _Cn3d_user_annotation_is_on,
        Cn3d_user_annotation,
        _Cn3d_GL_matrix_m0,
        _Cn3d_GL_matrix_m1,
        _Cn3d_GL_matrix_m2,
        _Cn3d_GL_matrix_m3,
        _Cn3d_GL_matrix_m4,
        _Cn3d_GL_matrix_m5,
        _Cn3d_GL_matrix_m6,
        _Cn3d_GL_matrix_m7,
        _Cn3d_GL_matrix_m8,
        _Cn3d_GL_matrix_m9,
        _Cn3d_GL_matrix_m10,
        _Cn3d_GL_matrix_m11,
        _Cn3d_GL_matrix_m12,
        _Cn3d_GL_matrix_m13,
        _Cn3d_GL_matrix_m14,
        _Cn3d_GL_matrix_m15,
        Cn3d_GL_matrix,
        _Cn3d_vector_x,
        _Cn3d_vector_y,
        _Cn3d_vector_z,
        Cn3d_vector,
        _Cn3d_view_settings_camera_distance,
        _Cn3d_view_settings_camera_angle_rad,
        _Cn3d_view_settings_camera_look_at_X,
        _Cn3d_view_settings_camera_look_at_Y,
        _Cn3d_view_settings_camera_clip_near,
        _Cn3d_view_settings_camera_clip_far,
        _Cn3d_view_settings_matrix,
        _Cn3d_view_settings_rotation_center,
        Cn3d_view_settings,
        __Cn3d_user_annotations_annotations__item_,
        _Cn3d_user_annotations_annotations,
        _Cn3d_user_annotations_view,
        Cn3d_user_annotations,
    ]

class Docsum_3_4:

    _name_  = 'Docsum-3-4'
    _oid_   = []
    
    _obj_ = [
        'Assay',
        'Assembly',
        'BaseURL',
        'Component',
        'ExchangeSet',
        'FxnSet',
        'MapLoc',
        'PrimarySequence',
        'Rs',
        'RsLinkout',
        'RsStruct',
        'Ss',
        ]
    _type_ = [
        'Assay',
        'Assembly',
        'BaseURL',
        'Component',
        'ExchangeSet',
        'FxnSet',
        'MapLoc',
        'PrimarySequence',
        'Rs',
        'RsLinkout',
        'RsStruct',
        'Ss',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Assay >-----#
    Assay = SEQ(name='Assay', mode=MODE_TYPE)
    _Assay_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Assay_attlist_handle = STR_VIS(name='handle', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Assay_attlist_batch = STR_VIS(name='batch', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Assay_attlist_batchId = INT(name='batchId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Assay_attlist_batchType = ENUM(name='batchType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Assay_attlist_batchType._cont = ASN1Dict([('snpassay', 1), ('validation', 2), ('doublehit', 3)])
    __Assay_attlist_batchType._ext = None
    __Assay_attlist_molType = ENUM(name='molType', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Assay_attlist_molType._cont = ASN1Dict([('genomic', 1), ('cDNA', 2), ('mito', 3), ('chloro', 4)])
    __Assay_attlist_molType._ext = None
    __Assay_attlist_sampleSize = INT(name='sampleSize', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Assay_attlist_population = STR_VIS(name='population', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Assay_attlist_linkoutUrl = STR_VIS(name='linkoutUrl', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Assay_attlist._cont = ASN1Dict([
        ('handle', __Assay_attlist_handle),
        ('batch', __Assay_attlist_batch),
        ('batchId', __Assay_attlist_batchId),
        ('batchType', __Assay_attlist_batchType),
        ('molType', __Assay_attlist_molType),
        ('sampleSize', __Assay_attlist_sampleSize),
        ('population', __Assay_attlist_population),
        ('linkoutUrl', __Assay_attlist_linkoutUrl),
        ])
    _Assay_attlist._ext = None
    _Assay_method = SEQ(name='method', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Assay_method_eMethod = SEQ(name='eMethod', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Assay_method_eMethod_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____Assay_method_eMethod_attlist_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____Assay_method_eMethod_attlist_id = STR_VIS(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Assay_method_eMethod_attlist._cont = ASN1Dict([
        ('name', ____Assay_method_eMethod_attlist_name),
        ('id', ____Assay_method_eMethod_attlist_id),
        ])
    ___Assay_method_eMethod_attlist._ext = None
    ___Assay_method_eMethod_exception = STR_VIS(name='exception', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Assay_method_eMethod._cont = ASN1Dict([
        ('attlist', ___Assay_method_eMethod_attlist),
        ('exception', ___Assay_method_eMethod_exception),
        ])
    __Assay_method_eMethod._ext = None
    _Assay_method._cont = ASN1Dict([
        ('eMethod', __Assay_method_eMethod),
        ])
    _Assay_method._ext = None
    _Assay_taxonomy = SEQ(name='taxonomy', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Assay_taxonomy_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Assay_taxonomy_attlist_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Assay_taxonomy_attlist_organism = STR_VIS(name='organism', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Assay_taxonomy_attlist._cont = ASN1Dict([
        ('id', ___Assay_taxonomy_attlist_id),
        ('organism', ___Assay_taxonomy_attlist_organism),
        ])
    __Assay_taxonomy_attlist._ext = None
    __Assay_taxonomy_taxonomy = NULL(name='taxonomy', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Assay_taxonomy._cont = ASN1Dict([
        ('attlist', __Assay_taxonomy_attlist),
        ('taxonomy', __Assay_taxonomy_taxonomy),
        ])
    _Assay_taxonomy._ext = None
    _Assay_strains = SEQ_OF(name='strains', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Assay_strains__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Assay_strains._cont = __Assay_strains__item_
    _Assay_comment = STR_VIS(name='comment', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Assay_citation = SEQ_OF(name='citation', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Assay_citation__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Assay_citation._cont = __Assay_citation__item_
    Assay._cont = ASN1Dict([
        ('attlist', _Assay_attlist),
        ('method', _Assay_method),
        ('taxonomy', _Assay_taxonomy),
        ('strains', _Assay_strains),
        ('comment', _Assay_comment),
        ('citation', _Assay_citation),
        ])
    Assay._ext = None
    
    #-----< Assembly >-----#
    Assembly = SEQ(name='Assembly', mode=MODE_TYPE)
    _Assembly_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Assembly_attlist_dbSnpBuild = INT(name='dbSnpBuild', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Assembly_attlist_genomeBuild = STR_VIS(name='genomeBuild', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Assembly_attlist_groupLabel = STR_VIS(name='groupLabel', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Assembly_attlist_assemblySource = STR_VIS(name='assemblySource', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Assembly_attlist_current = BOOL(name='current', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Assembly_attlist_reference = BOOL(name='reference', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Assembly_attlist._cont = ASN1Dict([
        ('dbSnpBuild', __Assembly_attlist_dbSnpBuild),
        ('genomeBuild', __Assembly_attlist_genomeBuild),
        ('groupLabel', __Assembly_attlist_groupLabel),
        ('assemblySource', __Assembly_attlist_assemblySource),
        ('current', __Assembly_attlist_current),
        ('reference', __Assembly_attlist_reference),
        ])
    _Assembly_attlist._ext = None
    _Assembly_component = SEQ_OF(name='component', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Assembly_component__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Docsum-3-4', 'Component')))
    _Assembly_component._cont = __Assembly_component__item_
    _Assembly_snpStat = SEQ(name='snpStat', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Assembly_snpStat_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Assembly_snpStat_attlist_mapWeight = ENUM(name='mapWeight', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Assembly_snpStat_attlist_mapWeight._cont = ASN1Dict([('unmapped', 1), ('unique-in-contig', 2), ('two-hits-in-contig', 3), ('less-10-hits', 4), ('multiple-hits', 5)])
    ___Assembly_snpStat_attlist_mapWeight._ext = None
    ___Assembly_snpStat_attlist_chromCount = INT(name='chromCount', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Assembly_snpStat_attlist_placedContigCount = INT(name='placedContigCount', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Assembly_snpStat_attlist_unplacedContigCount = INT(name='unplacedContigCount', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Assembly_snpStat_attlist_seqlocCount = INT(name='seqlocCount', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Assembly_snpStat_attlist_hapCount = INT(name='hapCount', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Assembly_snpStat_attlist._cont = ASN1Dict([
        ('mapWeight', ___Assembly_snpStat_attlist_mapWeight),
        ('chromCount', ___Assembly_snpStat_attlist_chromCount),
        ('placedContigCount', ___Assembly_snpStat_attlist_placedContigCount),
        ('unplacedContigCount', ___Assembly_snpStat_attlist_unplacedContigCount),
        ('seqlocCount', ___Assembly_snpStat_attlist_seqlocCount),
        ('hapCount', ___Assembly_snpStat_attlist_hapCount),
        ])
    __Assembly_snpStat_attlist._ext = None
    __Assembly_snpStat_snpStat = NULL(name='snpStat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Assembly_snpStat._cont = ASN1Dict([
        ('attlist', __Assembly_snpStat_attlist),
        ('snpStat', __Assembly_snpStat_snpStat),
        ])
    _Assembly_snpStat._ext = None
    Assembly._cont = ASN1Dict([
        ('attlist', _Assembly_attlist),
        ('component', _Assembly_component),
        ('snpStat', _Assembly_snpStat),
        ])
    Assembly._ext = None
    
    #-----< BaseURL >-----#
    BaseURL = SEQ(name='BaseURL', mode=MODE_TYPE)
    _BaseURL_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BaseURL_attlist_urlId = INT(name='urlId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BaseURL_attlist_resourceName = STR_VIS(name='resourceName', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BaseURL_attlist_resourceId = STR_VIS(name='resourceId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BaseURL_attlist._cont = ASN1Dict([
        ('urlId', __BaseURL_attlist_urlId),
        ('resourceName', __BaseURL_attlist_resourceName),
        ('resourceId', __BaseURL_attlist_resourceId),
        ])
    _BaseURL_attlist._ext = None
    _BaseURL_baseURL = STR_VIS(name='baseURL', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    BaseURL._cont = ASN1Dict([
        ('attlist', _BaseURL_attlist),
        ('baseURL', _BaseURL_baseURL),
        ])
    BaseURL._ext = None
    
    #-----< Component >-----#
    Component = SEQ(name='Component', mode=MODE_TYPE)
    _Component_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Component_attlist_componentType = ENUM(name='componentType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Component_attlist_componentType._cont = ASN1Dict([('contig', 1), ('mrna', 2)])
    __Component_attlist_componentType._ext = None
    __Component_attlist_ctgId = INT(name='ctgId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Component_attlist_accession = STR_VIS(name='accession', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Component_attlist_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Component_attlist_chromosome = STR_VIS(name='chromosome', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Component_attlist_start = INT(name='start', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Component_attlist_end = INT(name='end', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Component_attlist_orientation = ENUM(name='orientation', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Component_attlist_orientation._cont = ASN1Dict([('fwd', 1), ('rev', 2), ('unknown', 3)])
    __Component_attlist_orientation._ext = None
    __Component_attlist_gi = STR_VIS(name='gi', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Component_attlist_groupTerm = STR_VIS(name='groupTerm', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Component_attlist_contigLabel = STR_VIS(name='contigLabel', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Component_attlist._cont = ASN1Dict([
        ('componentType', __Component_attlist_componentType),
        ('ctgId', __Component_attlist_ctgId),
        ('accession', __Component_attlist_accession),
        ('name', __Component_attlist_name),
        ('chromosome', __Component_attlist_chromosome),
        ('start', __Component_attlist_start),
        ('end', __Component_attlist_end),
        ('orientation', __Component_attlist_orientation),
        ('gi', __Component_attlist_gi),
        ('groupTerm', __Component_attlist_groupTerm),
        ('contigLabel', __Component_attlist_contigLabel),
        ])
    _Component_attlist._ext = None
    _Component_mapLoc = SEQ_OF(name='mapLoc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Component_mapLoc__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Docsum-3-4', 'MapLoc')))
    _Component_mapLoc._cont = __Component_mapLoc__item_
    Component._cont = ASN1Dict([
        ('attlist', _Component_attlist),
        ('mapLoc', _Component_mapLoc),
        ])
    Component._ext = None
    
    #-----< ExchangeSet >-----#
    ExchangeSet = SEQ(name='ExchangeSet', mode=MODE_TYPE)
    _ExchangeSet_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ExchangeSet_attlist_setType = STR_VIS(name='setType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ExchangeSet_attlist_setDepth = STR_VIS(name='setDepth', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ExchangeSet_attlist_specVersion = STR_VIS(name='specVersion', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ExchangeSet_attlist_dbSnpBuild = INT(name='dbSnpBuild', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ExchangeSet_attlist_generated = STR_VIS(name='generated', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ExchangeSet_attlist._cont = ASN1Dict([
        ('setType', __ExchangeSet_attlist_setType),
        ('setDepth', __ExchangeSet_attlist_setDepth),
        ('specVersion', __ExchangeSet_attlist_specVersion),
        ('dbSnpBuild', __ExchangeSet_attlist_dbSnpBuild),
        ('generated', __ExchangeSet_attlist_generated),
        ])
    _ExchangeSet_attlist._ext = None
    _ExchangeSet_sourceDatabase = SEQ(name='sourceDatabase', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ExchangeSet_sourceDatabase_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ExchangeSet_sourceDatabase_attlist_taxId = INT(name='taxId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ExchangeSet_sourceDatabase_attlist_organism = STR_VIS(name='organism', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ExchangeSet_sourceDatabase_attlist_dbSnpOrgAbbr = STR_VIS(name='dbSnpOrgAbbr', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___ExchangeSet_sourceDatabase_attlist_gpipeOrgAbbr = STR_VIS(name='gpipeOrgAbbr', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ExchangeSet_sourceDatabase_attlist._cont = ASN1Dict([
        ('taxId', ___ExchangeSet_sourceDatabase_attlist_taxId),
        ('organism', ___ExchangeSet_sourceDatabase_attlist_organism),
        ('dbSnpOrgAbbr', ___ExchangeSet_sourceDatabase_attlist_dbSnpOrgAbbr),
        ('gpipeOrgAbbr', ___ExchangeSet_sourceDatabase_attlist_gpipeOrgAbbr),
        ])
    __ExchangeSet_sourceDatabase_attlist._ext = None
    __ExchangeSet_sourceDatabase_sourceDatabase = NULL(name='sourceDatabase', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ExchangeSet_sourceDatabase._cont = ASN1Dict([
        ('attlist', __ExchangeSet_sourceDatabase_attlist),
        ('sourceDatabase', __ExchangeSet_sourceDatabase_sourceDatabase),
        ])
    _ExchangeSet_sourceDatabase._ext = None
    _ExchangeSet_rs = SEQ_OF(name='rs', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ExchangeSet_rs__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Docsum-3-4', 'Rs')))
    _ExchangeSet_rs._cont = __ExchangeSet_rs__item_
    _ExchangeSet_assay = SEQ(name='assay', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Docsum-3-4', 'Assay')), opt=True)
    _ExchangeSet_query = SEQ(name='query', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ExchangeSet_query_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ExchangeSet_query_attlist_date = STR_VIS(name='date', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___ExchangeSet_query_attlist_string = STR_VIS(name='string', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ExchangeSet_query_attlist._cont = ASN1Dict([
        ('date', ___ExchangeSet_query_attlist_date),
        ('string', ___ExchangeSet_query_attlist_string),
        ])
    __ExchangeSet_query_attlist._ext = None
    __ExchangeSet_query_query = NULL(name='query', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ExchangeSet_query._cont = ASN1Dict([
        ('attlist', __ExchangeSet_query_attlist),
        ('query', __ExchangeSet_query_query),
        ])
    _ExchangeSet_query._ext = None
    _ExchangeSet_summary = SEQ(name='summary', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ExchangeSet_summary_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ExchangeSet_summary_attlist_numRsIds = INT(name='numRsIds', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___ExchangeSet_summary_attlist_totalSeqLength = INT(name='totalSeqLength', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___ExchangeSet_summary_attlist_numContigHits = INT(name='numContigHits', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___ExchangeSet_summary_attlist_numGeneHits = INT(name='numGeneHits', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___ExchangeSet_summary_attlist_numGiHits = INT(name='numGiHits', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___ExchangeSet_summary_attlist_num3dStructs = INT(name='num3dStructs', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___ExchangeSet_summary_attlist_numAlleleFreqs = INT(name='numAlleleFreqs', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___ExchangeSet_summary_attlist_numStsHits = INT(name='numStsHits', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___ExchangeSet_summary_attlist_numUnigeneCids = INT(name='numUnigeneCids', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ExchangeSet_summary_attlist._cont = ASN1Dict([
        ('numRsIds', ___ExchangeSet_summary_attlist_numRsIds),
        ('totalSeqLength', ___ExchangeSet_summary_attlist_totalSeqLength),
        ('numContigHits', ___ExchangeSet_summary_attlist_numContigHits),
        ('numGeneHits', ___ExchangeSet_summary_attlist_numGeneHits),
        ('numGiHits', ___ExchangeSet_summary_attlist_numGiHits),
        ('num3dStructs', ___ExchangeSet_summary_attlist_num3dStructs),
        ('numAlleleFreqs', ___ExchangeSet_summary_attlist_numAlleleFreqs),
        ('numStsHits', ___ExchangeSet_summary_attlist_numStsHits),
        ('numUnigeneCids', ___ExchangeSet_summary_attlist_numUnigeneCids),
        ])
    __ExchangeSet_summary_attlist._ext = None
    __ExchangeSet_summary_summary = NULL(name='summary', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ExchangeSet_summary._cont = ASN1Dict([
        ('attlist', __ExchangeSet_summary_attlist),
        ('summary', __ExchangeSet_summary_summary),
        ])
    _ExchangeSet_summary._ext = None
    _ExchangeSet_baseURL = SEQ_OF(name='baseURL', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ExchangeSet_baseURL__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Docsum-3-4', 'BaseURL')))
    _ExchangeSet_baseURL._cont = __ExchangeSet_baseURL__item_
    ExchangeSet._cont = ASN1Dict([
        ('attlist', _ExchangeSet_attlist),
        ('sourceDatabase', _ExchangeSet_sourceDatabase),
        ('rs', _ExchangeSet_rs),
        ('assay', _ExchangeSet_assay),
        ('query', _ExchangeSet_query),
        ('summary', _ExchangeSet_summary),
        ('baseURL', _ExchangeSet_baseURL),
        ])
    ExchangeSet._ext = None
    
    #-----< FxnSet >-----#
    FxnSet = SEQ(name='FxnSet', mode=MODE_TYPE)
    _FxnSet_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __FxnSet_attlist_geneId = INT(name='geneId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __FxnSet_attlist_symbol = STR_VIS(name='symbol', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __FxnSet_attlist_mrnaAcc = STR_VIS(name='mrnaAcc', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __FxnSet_attlist_mrnaVer = INT(name='mrnaVer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __FxnSet_attlist_protAcc = STR_VIS(name='protAcc', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __FxnSet_attlist_protVer = INT(name='protVer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __FxnSet_attlist_fxnClass = ENUM(name='fxnClass', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __FxnSet_attlist_fxnClass._cont = ASN1Dict([('locus-region', 1), ('coding-unknown', 2), ('synonymous-codon', 3), ('non-synonymous-codon', 4), ('mrna-utr', 5), ('intron-variant', 6), ('splice-region-variant', 7), ('reference', 8), ('coding-exception', 9), ('coding-sequence-variant', 10), ('nc-transcript-variant', 11), ('downstream-variant-500B', 12), ('upstream-variant-2KB', 13), ('nonsense', 14), ('missense', 15), ('frameshift-variant', 16), ('utr-variant-3-prime', 17), ('utr-variant-5-prime', 18), ('splice-acceptor-variant', 19), ('splice-donor-variant', 20), ('cds-indel', 21), ('stop-gained', 22), ('stop-lost', 23), ('complex-change-in-transcript', 24), ('incomplete-terminal-codon-variant', 25), ('nmd-transcript-variant', 26), ('mature-miRNA-variant', 27), ('upstream-variant-5KB', 28), ('downstream-variant-5KB', 29), ('intergenic', 30)])
    __FxnSet_attlist_fxnClass._ext = None
    __FxnSet_attlist_readingFrame = INT(name='readingFrame', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __FxnSet_attlist_allele = STR_VIS(name='allele', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __FxnSet_attlist_residue = STR_VIS(name='residue', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __FxnSet_attlist_aaPosition = INT(name='aaPosition', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __FxnSet_attlist_mrnaPosition = INT(name='mrnaPosition', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __FxnSet_attlist_soTerm = STR_VIS(name='soTerm', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _FxnSet_attlist._cont = ASN1Dict([
        ('geneId', __FxnSet_attlist_geneId),
        ('symbol', __FxnSet_attlist_symbol),
        ('mrnaAcc', __FxnSet_attlist_mrnaAcc),
        ('mrnaVer', __FxnSet_attlist_mrnaVer),
        ('protAcc', __FxnSet_attlist_protAcc),
        ('protVer', __FxnSet_attlist_protVer),
        ('fxnClass', __FxnSet_attlist_fxnClass),
        ('readingFrame', __FxnSet_attlist_readingFrame),
        ('allele', __FxnSet_attlist_allele),
        ('residue', __FxnSet_attlist_residue),
        ('aaPosition', __FxnSet_attlist_aaPosition),
        ('mrnaPosition', __FxnSet_attlist_mrnaPosition),
        ('soTerm', __FxnSet_attlist_soTerm),
        ])
    _FxnSet_attlist._ext = None
    _FxnSet_fxnSet = NULL(name='fxnSet', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    FxnSet._cont = ASN1Dict([
        ('attlist', _FxnSet_attlist),
        ('fxnSet', _FxnSet_fxnSet),
        ])
    FxnSet._ext = None
    
    #-----< MapLoc >-----#
    MapLoc = SEQ(name='MapLoc', mode=MODE_TYPE)
    _MapLoc_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MapLoc_attlist_asnFrom = INT(name='asnFrom', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MapLoc_attlist_asnTo = INT(name='asnTo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MapLoc_attlist_locType = ENUM(name='locType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MapLoc_attlist_locType._cont = ASN1Dict([('insertion', 1), ('exact', 2), ('deletion', 3), ('range-ins', 4), ('range-exact', 5), ('range-del', 6)])
    __MapLoc_attlist_locType._ext = None
    __MapLoc_attlist_alnQuality = REAL(name='alnQuality', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    __MapLoc_attlist_orient = ENUM(name='orient', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MapLoc_attlist_orient._cont = ASN1Dict([('forward', 1), ('reverse', 2)])
    __MapLoc_attlist_orient._ext = None
    __MapLoc_attlist_physMapInt = INT(name='physMapInt', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MapLoc_attlist_leftFlankNeighborPos = INT(name='leftFlankNeighborPos', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MapLoc_attlist_rightFlankNeighborPos = INT(name='rightFlankNeighborPos', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MapLoc_attlist_leftContigNeighborPos = INT(name='leftContigNeighborPos', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MapLoc_attlist_rightContigNeighborPos = INT(name='rightContigNeighborPos', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MapLoc_attlist_numberOfMismatches = INT(name='numberOfMismatches', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MapLoc_attlist_numberOfDeletions = INT(name='numberOfDeletions', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MapLoc_attlist_numberOfInsertions = INT(name='numberOfInsertions', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MapLoc_attlist_refAllele = STR_VIS(name='refAllele', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MapLoc_attlist._cont = ASN1Dict([
        ('asnFrom', __MapLoc_attlist_asnFrom),
        ('asnTo', __MapLoc_attlist_asnTo),
        ('locType', __MapLoc_attlist_locType),
        ('alnQuality', __MapLoc_attlist_alnQuality),
        ('orient', __MapLoc_attlist_orient),
        ('physMapInt', __MapLoc_attlist_physMapInt),
        ('leftFlankNeighborPos', __MapLoc_attlist_leftFlankNeighborPos),
        ('rightFlankNeighborPos', __MapLoc_attlist_rightFlankNeighborPos),
        ('leftContigNeighborPos', __MapLoc_attlist_leftContigNeighborPos),
        ('rightContigNeighborPos', __MapLoc_attlist_rightContigNeighborPos),
        ('numberOfMismatches', __MapLoc_attlist_numberOfMismatches),
        ('numberOfDeletions', __MapLoc_attlist_numberOfDeletions),
        ('numberOfInsertions', __MapLoc_attlist_numberOfInsertions),
        ('refAllele', __MapLoc_attlist_refAllele),
        ])
    _MapLoc_attlist._ext = None
    _MapLoc_fxnSet = SEQ_OF(name='fxnSet', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MapLoc_fxnSet__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Docsum-3-4', 'FxnSet')))
    _MapLoc_fxnSet._cont = __MapLoc_fxnSet__item_
    MapLoc._cont = ASN1Dict([
        ('attlist', _MapLoc_attlist),
        ('fxnSet', _MapLoc_fxnSet),
        ])
    MapLoc._ext = None
    
    #-----< PrimarySequence >-----#
    PrimarySequence = SEQ(name='PrimarySequence', mode=MODE_TYPE)
    _PrimarySequence_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PrimarySequence_attlist_dbSnpBuild = INT(name='dbSnpBuild', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PrimarySequence_attlist_gi = INT(name='gi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PrimarySequence_attlist_source = ENUM(name='source', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PrimarySequence_attlist_source._cont = ASN1Dict([('submitter', 1), ('blastmb', 2), ('xm', 3), ('remap', 4), ('hgvs', 5)])
    __PrimarySequence_attlist_source._ext = None
    __PrimarySequence_attlist_accession = STR_VIS(name='accession', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PrimarySequence_attlist._cont = ASN1Dict([
        ('dbSnpBuild', __PrimarySequence_attlist_dbSnpBuild),
        ('gi', __PrimarySequence_attlist_gi),
        ('source', __PrimarySequence_attlist_source),
        ('accession', __PrimarySequence_attlist_accession),
        ])
    _PrimarySequence_attlist._ext = None
    _PrimarySequence_mapLoc = SEQ_OF(name='mapLoc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PrimarySequence_mapLoc__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Docsum-3-4', 'MapLoc')))
    _PrimarySequence_mapLoc._cont = __PrimarySequence_mapLoc__item_
    PrimarySequence._cont = ASN1Dict([
        ('attlist', _PrimarySequence_attlist),
        ('mapLoc', _PrimarySequence_mapLoc),
        ])
    PrimarySequence._ext = None
    
    #-----< Rs >-----#
    Rs = SEQ(name='Rs', mode=MODE_TYPE)
    _Rs_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Rs_attlist_rsId = INT(name='rsId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Rs_attlist_snpClass = ENUM(name='snpClass', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Rs_attlist_snpClass._cont = ASN1Dict([('snp', 1), ('in-del', 2), ('heterozygous', 3), ('microsatellite', 4), ('named-locus', 5), ('no-variation', 6), ('mixed', 7), ('multinucleotide-polymorphism', 8)])
    __Rs_attlist_snpClass._ext = None
    __Rs_attlist_snpType = ENUM(name='snpType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Rs_attlist_snpType._cont = ASN1Dict([('notwithdrawn', 1), ('artifact', 2), ('gene-duplication', 3), ('duplicate-submission', 4), ('notspecified', 5), ('ambiguous-location', 6), ('low-map-quality', 7)])
    __Rs_attlist_snpType._ext = None
    __Rs_attlist_molType = ENUM(name='molType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Rs_attlist_molType._cont = ASN1Dict([('genomic', 1), ('cDNA', 2), ('mito', 3), ('chloro', 4), ('unknown', 5)])
    __Rs_attlist_molType._ext = None
    __Rs_attlist_validProbMin = INT(name='validProbMin', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_attlist_validProbMax = INT(name='validProbMax', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_attlist_genotype = BOOL(name='genotype', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_attlist_bitField = STR_VIS(name='bitField', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_attlist_taxId = INT(name='taxId', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Rs_attlist._cont = ASN1Dict([
        ('rsId', __Rs_attlist_rsId),
        ('snpClass', __Rs_attlist_snpClass),
        ('snpType', __Rs_attlist_snpType),
        ('molType', __Rs_attlist_molType),
        ('validProbMin', __Rs_attlist_validProbMin),
        ('validProbMax', __Rs_attlist_validProbMax),
        ('genotype', __Rs_attlist_genotype),
        ('bitField', __Rs_attlist_bitField),
        ('taxId', __Rs_attlist_taxId),
        ])
    _Rs_attlist._ext = None
    _Rs_het = SEQ(name='het', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_het_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Rs_het_attlist_type = ENUM(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Rs_het_attlist_type._cont = ASN1Dict([('est', 1), ('obs', 2)])
    ___Rs_het_attlist_type._ext = None
    ___Rs_het_attlist_value = REAL(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    ___Rs_het_attlist_stdError = REAL(name='stdError', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    __Rs_het_attlist._cont = ASN1Dict([
        ('type', ___Rs_het_attlist_type),
        ('value', ___Rs_het_attlist_value),
        ('stdError', ___Rs_het_attlist_stdError),
        ])
    __Rs_het_attlist._ext = None
    __Rs_het_het = NULL(name='het', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Rs_het._cont = ASN1Dict([
        ('attlist', __Rs_het_attlist),
        ('het', __Rs_het_het),
        ])
    _Rs_het._ext = None
    _Rs_validation = SEQ(name='validation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Rs_validation_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Rs_validation_attlist_byCluster = BOOL(name='byCluster', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Rs_validation_attlist_byFrequency = BOOL(name='byFrequency', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Rs_validation_attlist_byOtherPop = BOOL(name='byOtherPop', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Rs_validation_attlist_by2Hit2Allele = BOOL(name='by2Hit2Allele', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Rs_validation_attlist_byHapMap = BOOL(name='byHapMap', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Rs_validation_attlist_by1000G = BOOL(name='by1000G', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Rs_validation_attlist_suspect = BOOL(name='suspect', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_validation_attlist._cont = ASN1Dict([
        ('byCluster', ___Rs_validation_attlist_byCluster),
        ('byFrequency', ___Rs_validation_attlist_byFrequency),
        ('byOtherPop', ___Rs_validation_attlist_byOtherPop),
        ('by2Hit2Allele', ___Rs_validation_attlist_by2Hit2Allele),
        ('byHapMap', ___Rs_validation_attlist_byHapMap),
        ('by1000G', ___Rs_validation_attlist_by1000G),
        ('suspect', ___Rs_validation_attlist_suspect),
        ])
    __Rs_validation_attlist._ext = None
    __Rs_validation_otherPopBatchId = SEQ_OF(name='otherPopBatchId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Rs_validation_otherPopBatchId__item_ = INT(name='_item_', mode=MODE_TYPE)
    __Rs_validation_otherPopBatchId._cont = ___Rs_validation_otherPopBatchId__item_
    __Rs_validation_twoHit2AlleleBatchId = SEQ_OF(name='twoHit2AlleleBatchId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Rs_validation_twoHit2AlleleBatchId__item_ = INT(name='_item_', mode=MODE_TYPE)
    __Rs_validation_twoHit2AlleleBatchId._cont = ___Rs_validation_twoHit2AlleleBatchId__item_
    __Rs_validation_frequencyClass = SEQ_OF(name='frequencyClass', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Rs_validation_frequencyClass__item_ = INT(name='_item_', mode=MODE_TYPE)
    __Rs_validation_frequencyClass._cont = ___Rs_validation_frequencyClass__item_
    __Rs_validation_hapMapPhase = SEQ_OF(name='hapMapPhase', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Rs_validation_hapMapPhase__item_ = INT(name='_item_', mode=MODE_TYPE)
    __Rs_validation_hapMapPhase._cont = ___Rs_validation_hapMapPhase__item_
    __Rs_validation_tGPPhase = SEQ_OF(name='tGPPhase', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Rs_validation_tGPPhase__item_ = INT(name='_item_', mode=MODE_TYPE)
    __Rs_validation_tGPPhase._cont = ___Rs_validation_tGPPhase__item_
    __Rs_validation_suspectEvidence = SEQ_OF(name='suspectEvidence', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Rs_validation_suspectEvidence__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    __Rs_validation_suspectEvidence._cont = ___Rs_validation_suspectEvidence__item_
    _Rs_validation._cont = ASN1Dict([
        ('attlist', __Rs_validation_attlist),
        ('otherPopBatchId', __Rs_validation_otherPopBatchId),
        ('twoHit2AlleleBatchId', __Rs_validation_twoHit2AlleleBatchId),
        ('frequencyClass', __Rs_validation_frequencyClass),
        ('hapMapPhase', __Rs_validation_hapMapPhase),
        ('tGPPhase', __Rs_validation_tGPPhase),
        ('suspectEvidence', __Rs_validation_suspectEvidence),
        ])
    _Rs_validation._ext = None
    _Rs_create = SEQ(name='create', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Rs_create_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Rs_create_attlist_build = INT(name='build', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Rs_create_attlist_date = STR_VIS(name='date', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_create_attlist._cont = ASN1Dict([
        ('build', ___Rs_create_attlist_build),
        ('date', ___Rs_create_attlist_date),
        ])
    __Rs_create_attlist._ext = None
    __Rs_create_create = NULL(name='create', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Rs_create._cont = ASN1Dict([
        ('attlist', __Rs_create_attlist),
        ('create', __Rs_create_create),
        ])
    _Rs_create._ext = None
    _Rs_update = SEQ(name='update', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_update_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Rs_update_attlist_build = INT(name='build', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Rs_update_attlist_date = STR_VIS(name='date', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_update_attlist._cont = ASN1Dict([
        ('build', ___Rs_update_attlist_build),
        ('date', ___Rs_update_attlist_date),
        ])
    __Rs_update_attlist._ext = None
    __Rs_update_update = NULL(name='update', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Rs_update._cont = ASN1Dict([
        ('attlist', __Rs_update_attlist),
        ('update', __Rs_update_update),
        ])
    _Rs_update._ext = None
    _Rs_sequence = SEQ(name='sequence', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Rs_sequence_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Rs_sequence_attlist_exemplarSs = INT(name='exemplarSs', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Rs_sequence_attlist_ancestralAllele = STR_VIS(name='ancestralAllele', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_sequence_attlist._cont = ASN1Dict([
        ('exemplarSs', ___Rs_sequence_attlist_exemplarSs),
        ('ancestralAllele', ___Rs_sequence_attlist_ancestralAllele),
        ])
    __Rs_sequence_attlist._ext = None
    __Rs_sequence_seq5 = STR_VIS(name='seq5', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_sequence_observed = STR_VIS(name='observed', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Rs_sequence_seq3 = STR_VIS(name='seq3', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Rs_sequence._cont = ASN1Dict([
        ('attlist', __Rs_sequence_attlist),
        ('seq5', __Rs_sequence_seq5),
        ('observed', __Rs_sequence_observed),
        ('seq3', __Rs_sequence_seq3),
        ])
    _Rs_sequence._ext = None
    _Rs_ss = SEQ_OF(name='ss', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Rs_ss__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Docsum-3-4', 'Ss')))
    _Rs_ss._cont = __Rs_ss__item_
    _Rs_assembly = SEQ_OF(name='assembly', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_assembly__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Docsum-3-4', 'Assembly')))
    _Rs_assembly._cont = __Rs_assembly__item_
    _Rs_primarySequence = SEQ_OF(name='primarySequence', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_primarySequence__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Docsum-3-4', 'PrimarySequence')))
    _Rs_primarySequence._cont = __Rs_primarySequence__item_
    _Rs_rsStruct = SEQ_OF(name='rsStruct', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_rsStruct__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Docsum-3-4', 'RsStruct')))
    _Rs_rsStruct._cont = __Rs_rsStruct__item_
    _Rs_rsLinkout = SEQ_OF(name='rsLinkout', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_rsLinkout__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Docsum-3-4', 'RsLinkout')))
    _Rs_rsLinkout._cont = __Rs_rsLinkout__item_
    _Rs_mergeHistory = SEQ_OF(name='mergeHistory', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_mergeHistory__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    ___Rs_mergeHistory__item__attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____Rs_mergeHistory__item__attlist_rsId = INT(name='rsId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____Rs_mergeHistory__item__attlist_buildId = INT(name='buildId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____Rs_mergeHistory__item__attlist_orientFlip = BOOL(name='orientFlip', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Rs_mergeHistory__item__attlist._cont = ASN1Dict([
        ('rsId', ____Rs_mergeHistory__item__attlist_rsId),
        ('buildId', ____Rs_mergeHistory__item__attlist_buildId),
        ('orientFlip', ____Rs_mergeHistory__item__attlist_orientFlip),
        ])
    ___Rs_mergeHistory__item__attlist._ext = None
    ___Rs_mergeHistory__item__mergeHistory = NULL(name='mergeHistory', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Rs_mergeHistory__item_._cont = ASN1Dict([
        ('attlist', ___Rs_mergeHistory__item__attlist),
        ('mergeHistory', ___Rs_mergeHistory__item__mergeHistory),
        ])
    __Rs_mergeHistory__item_._ext = None
    _Rs_mergeHistory._cont = __Rs_mergeHistory__item_
    _Rs_hgvs = SEQ_OF(name='hgvs', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_hgvs__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Rs_hgvs._cont = __Rs_hgvs__item_
    _Rs_alleleOrigin = SEQ_OF(name='alleleOrigin', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_alleleOrigin__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    ___Rs_alleleOrigin__item__attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____Rs_alleleOrigin__item__attlist_allele = STR_VIS(name='allele', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Rs_alleleOrigin__item__attlist._cont = ASN1Dict([
        ('allele', ____Rs_alleleOrigin__item__attlist_allele),
        ])
    ___Rs_alleleOrigin__item__attlist._ext = None
    ___Rs_alleleOrigin__item__alleleOrigin = INT(name='alleleOrigin', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Rs_alleleOrigin__item_._cont = ASN1Dict([
        ('attlist', ___Rs_alleleOrigin__item__attlist),
        ('alleleOrigin', ___Rs_alleleOrigin__item__alleleOrigin),
        ])
    __Rs_alleleOrigin__item_._ext = None
    _Rs_alleleOrigin._cont = __Rs_alleleOrigin__item_
    _Rs_phenotype = SEQ_OF(name='phenotype', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_phenotype__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    ___Rs_phenotype__item__clinicalSignificance = SEQ_OF(name='clinicalSignificance', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____Rs_phenotype__item__clinicalSignificance__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    ___Rs_phenotype__item__clinicalSignificance._cont = ____Rs_phenotype__item__clinicalSignificance__item_
    __Rs_phenotype__item_._cont = ASN1Dict([
        ('clinicalSignificance', ___Rs_phenotype__item__clinicalSignificance),
        ])
    __Rs_phenotype__item_._ext = None
    _Rs_phenotype._cont = __Rs_phenotype__item_
    _Rs_bioSource = SEQ_OF(name='bioSource', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_bioSource__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    ___Rs_bioSource__item__genome = SEQ_OF(name='genome', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____Rs_bioSource__item__genome__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    ___Rs_bioSource__item__genome._cont = ____Rs_bioSource__item__genome__item_
    ___Rs_bioSource__item__origin = SEQ_OF(name='origin', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____Rs_bioSource__item__origin__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    ___Rs_bioSource__item__origin._cont = ____Rs_bioSource__item__origin__item_
    __Rs_bioSource__item_._cont = ASN1Dict([
        ('genome', ___Rs_bioSource__item__genome),
        ('origin', ___Rs_bioSource__item__origin),
        ])
    __Rs_bioSource__item_._ext = None
    _Rs_bioSource._cont = __Rs_bioSource__item_
    _Rs_frequency = SEQ_OF(name='frequency', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Rs_frequency__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    ___Rs_frequency__item__attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____Rs_frequency__item__attlist_freq = REAL(name='freq', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    ____Rs_frequency__item__attlist_allele = STR_VIS(name='allele', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____Rs_frequency__item__attlist_popId = INT(name='popId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____Rs_frequency__item__attlist_sampleSize = INT(name='sampleSize', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Rs_frequency__item__attlist._cont = ASN1Dict([
        ('freq', ____Rs_frequency__item__attlist_freq),
        ('allele', ____Rs_frequency__item__attlist_allele),
        ('popId', ____Rs_frequency__item__attlist_popId),
        ('sampleSize', ____Rs_frequency__item__attlist_sampleSize),
        ])
    ___Rs_frequency__item__attlist._ext = None
    ___Rs_frequency__item__frequency = NULL(name='frequency', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Rs_frequency__item_._cont = ASN1Dict([
        ('attlist', ___Rs_frequency__item__attlist),
        ('frequency', ___Rs_frequency__item__frequency),
        ])
    __Rs_frequency__item_._ext = None
    _Rs_frequency._cont = __Rs_frequency__item_
    Rs._cont = ASN1Dict([
        ('attlist', _Rs_attlist),
        ('het', _Rs_het),
        ('validation', _Rs_validation),
        ('create', _Rs_create),
        ('update', _Rs_update),
        ('sequence', _Rs_sequence),
        ('ss', _Rs_ss),
        ('assembly', _Rs_assembly),
        ('primarySequence', _Rs_primarySequence),
        ('rsStruct', _Rs_rsStruct),
        ('rsLinkout', _Rs_rsLinkout),
        ('mergeHistory', _Rs_mergeHistory),
        ('hgvs', _Rs_hgvs),
        ('alleleOrigin', _Rs_alleleOrigin),
        ('phenotype', _Rs_phenotype),
        ('bioSource', _Rs_bioSource),
        ('frequency', _Rs_frequency),
        ])
    Rs._ext = None
    
    #-----< RsLinkout >-----#
    RsLinkout = SEQ(name='RsLinkout', mode=MODE_TYPE)
    _RsLinkout_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RsLinkout_attlist_resourceId = STR_VIS(name='resourceId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RsLinkout_attlist_linkValue = STR_VIS(name='linkValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RsLinkout_attlist._cont = ASN1Dict([
        ('resourceId', __RsLinkout_attlist_resourceId),
        ('linkValue', __RsLinkout_attlist_linkValue),
        ])
    _RsLinkout_attlist._ext = None
    _RsLinkout_rsLinkout = NULL(name='rsLinkout', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    RsLinkout._cont = ASN1Dict([
        ('attlist', _RsLinkout_attlist),
        ('rsLinkout', _RsLinkout_rsLinkout),
        ])
    RsLinkout._ext = None
    
    #-----< RsStruct >-----#
    RsStruct = SEQ(name='RsStruct', mode=MODE_TYPE)
    _RsStruct_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RsStruct_attlist_protAcc = STR_VIS(name='protAcc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RsStruct_attlist_protGi = INT(name='protGi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RsStruct_attlist_protLoc = INT(name='protLoc', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RsStruct_attlist_protResidue = STR_VIS(name='protResidue', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RsStruct_attlist_rsResidue = STR_VIS(name='rsResidue', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RsStruct_attlist_structGi = INT(name='structGi', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RsStruct_attlist_structLoc = INT(name='structLoc', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RsStruct_attlist_structResidue = STR_VIS(name='structResidue', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RsStruct_attlist._cont = ASN1Dict([
        ('protAcc', __RsStruct_attlist_protAcc),
        ('protGi', __RsStruct_attlist_protGi),
        ('protLoc', __RsStruct_attlist_protLoc),
        ('protResidue', __RsStruct_attlist_protResidue),
        ('rsResidue', __RsStruct_attlist_rsResidue),
        ('structGi', __RsStruct_attlist_structGi),
        ('structLoc', __RsStruct_attlist_structLoc),
        ('structResidue', __RsStruct_attlist_structResidue),
        ])
    _RsStruct_attlist._ext = None
    _RsStruct_rsStruct = NULL(name='rsStruct', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    RsStruct._cont = ASN1Dict([
        ('attlist', _RsStruct_attlist),
        ('rsStruct', _RsStruct_rsStruct),
        ])
    RsStruct._ext = None
    
    #-----< Ss >-----#
    Ss = SEQ(name='Ss', mode=MODE_TYPE)
    _Ss_attlist = SET(name='attlist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Ss_attlist_ssId = INT(name='ssId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Ss_attlist_handle = STR_VIS(name='handle', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Ss_attlist_batchId = INT(name='batchId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Ss_attlist_locSnpId = STR_VIS(name='locSnpId', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Ss_attlist_subSnpClass = ENUM(name='subSnpClass', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Ss_attlist_subSnpClass._cont = ASN1Dict([('snp', 1), ('in-del', 2), ('heterozygous', 3), ('microsatellite', 4), ('named-locus', 5), ('no-variation', 6), ('mixed', 7), ('multinucleotide-polymorphism', 8)])
    __Ss_attlist_subSnpClass._ext = None
    __Ss_attlist_orient = ENUM(name='orient', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Ss_attlist_orient._cont = ASN1Dict([('forward', 1), ('reverse', 2)])
    __Ss_attlist_orient._ext = None
    __Ss_attlist_strand = ENUM(name='strand', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Ss_attlist_strand._cont = ASN1Dict([('top', 1), ('bottom', 2)])
    __Ss_attlist_strand._ext = None
    __Ss_attlist_molType = ENUM(name='molType', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Ss_attlist_molType._cont = ASN1Dict([('genomic', 1), ('cDNA', 2), ('mito', 3), ('chloro', 4), ('unknown', 5)])
    __Ss_attlist_molType._ext = None
    __Ss_attlist_buildId = INT(name='buildId', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Ss_attlist_methodClass = ENUM(name='methodClass', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Ss_attlist_methodClass._cont = ASN1Dict([('dHPLC', 1), ('hybridize', 2), ('computed', 3), ('sSCP', 4), ('other', 5), ('unknown', 6), ('rFLP', 7), ('sequence', 8)])
    __Ss_attlist_methodClass._ext = None
    __Ss_attlist_validated = ENUM(name='validated', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Ss_attlist_validated._cont = ASN1Dict([('by-submitter', 1), ('by-frequency', 2), ('by-cluster', 3)])
    __Ss_attlist_validated._ext = None
    __Ss_attlist_linkoutUrl = STR_VIS(name='linkoutUrl', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Ss_attlist_ssAlias = STR_VIS(name='ssAlias', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Ss_attlist_alleleOrigin = INT(name='alleleOrigin', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Ss_attlist_clinicalSignificance = STR_VIS(name='clinicalSignificance', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Ss_attlist._cont = ASN1Dict([
        ('ssId', __Ss_attlist_ssId),
        ('handle', __Ss_attlist_handle),
        ('batchId', __Ss_attlist_batchId),
        ('locSnpId', __Ss_attlist_locSnpId),
        ('subSnpClass', __Ss_attlist_subSnpClass),
        ('orient', __Ss_attlist_orient),
        ('strand', __Ss_attlist_strand),
        ('molType', __Ss_attlist_molType),
        ('buildId', __Ss_attlist_buildId),
        ('methodClass', __Ss_attlist_methodClass),
        ('validated', __Ss_attlist_validated),
        ('linkoutUrl', __Ss_attlist_linkoutUrl),
        ('ssAlias', __Ss_attlist_ssAlias),
        ('alleleOrigin', __Ss_attlist_alleleOrigin),
        ('clinicalSignificance', __Ss_attlist_clinicalSignificance),
        ])
    _Ss_attlist._ext = None
    _Ss_sequence = SEQ(name='sequence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Ss_sequence_seq5 = STR_VIS(name='seq5', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Ss_sequence_observed = STR_VIS(name='observed', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Ss_sequence_seq3 = STR_VIS(name='seq3', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Ss_sequence._cont = ASN1Dict([
        ('seq5', __Ss_sequence_seq5),
        ('observed', __Ss_sequence_observed),
        ('seq3', __Ss_sequence_seq3),
        ])
    _Ss_sequence._ext = None
    Ss._cont = ASN1Dict([
        ('attlist', _Ss_attlist),
        ('sequence', _Ss_sequence),
        ])
    Ss._ext = None
    
    _all_ = [
        __Assay_attlist_handle,
        __Assay_attlist_batch,
        __Assay_attlist_batchId,
        __Assay_attlist_batchType,
        __Assay_attlist_molType,
        __Assay_attlist_sampleSize,
        __Assay_attlist_population,
        __Assay_attlist_linkoutUrl,
        _Assay_attlist,
        ____Assay_method_eMethod_attlist_name,
        ____Assay_method_eMethod_attlist_id,
        ___Assay_method_eMethod_attlist,
        ___Assay_method_eMethod_exception,
        __Assay_method_eMethod,
        _Assay_method,
        ___Assay_taxonomy_attlist_id,
        ___Assay_taxonomy_attlist_organism,
        __Assay_taxonomy_attlist,
        __Assay_taxonomy_taxonomy,
        _Assay_taxonomy,
        __Assay_strains__item_,
        _Assay_strains,
        _Assay_comment,
        __Assay_citation__item_,
        _Assay_citation,
        Assay,
        __Assembly_attlist_dbSnpBuild,
        __Assembly_attlist_genomeBuild,
        __Assembly_attlist_groupLabel,
        __Assembly_attlist_assemblySource,
        __Assembly_attlist_current,
        __Assembly_attlist_reference,
        _Assembly_attlist,
        __Assembly_component__item_,
        _Assembly_component,
        ___Assembly_snpStat_attlist_mapWeight,
        ___Assembly_snpStat_attlist_chromCount,
        ___Assembly_snpStat_attlist_placedContigCount,
        ___Assembly_snpStat_attlist_unplacedContigCount,
        ___Assembly_snpStat_attlist_seqlocCount,
        ___Assembly_snpStat_attlist_hapCount,
        __Assembly_snpStat_attlist,
        __Assembly_snpStat_snpStat,
        _Assembly_snpStat,
        Assembly,
        __BaseURL_attlist_urlId,
        __BaseURL_attlist_resourceName,
        __BaseURL_attlist_resourceId,
        _BaseURL_attlist,
        _BaseURL_baseURL,
        BaseURL,
        __Component_attlist_componentType,
        __Component_attlist_ctgId,
        __Component_attlist_accession,
        __Component_attlist_name,
        __Component_attlist_chromosome,
        __Component_attlist_start,
        __Component_attlist_end,
        __Component_attlist_orientation,
        __Component_attlist_gi,
        __Component_attlist_groupTerm,
        __Component_attlist_contigLabel,
        _Component_attlist,
        __Component_mapLoc__item_,
        _Component_mapLoc,
        Component,
        __ExchangeSet_attlist_setType,
        __ExchangeSet_attlist_setDepth,
        __ExchangeSet_attlist_specVersion,
        __ExchangeSet_attlist_dbSnpBuild,
        __ExchangeSet_attlist_generated,
        _ExchangeSet_attlist,
        ___ExchangeSet_sourceDatabase_attlist_taxId,
        ___ExchangeSet_sourceDatabase_attlist_organism,
        ___ExchangeSet_sourceDatabase_attlist_dbSnpOrgAbbr,
        ___ExchangeSet_sourceDatabase_attlist_gpipeOrgAbbr,
        __ExchangeSet_sourceDatabase_attlist,
        __ExchangeSet_sourceDatabase_sourceDatabase,
        _ExchangeSet_sourceDatabase,
        __ExchangeSet_rs__item_,
        _ExchangeSet_rs,
        _ExchangeSet_assay,
        ___ExchangeSet_query_attlist_date,
        ___ExchangeSet_query_attlist_string,
        __ExchangeSet_query_attlist,
        __ExchangeSet_query_query,
        _ExchangeSet_query,
        ___ExchangeSet_summary_attlist_numRsIds,
        ___ExchangeSet_summary_attlist_totalSeqLength,
        ___ExchangeSet_summary_attlist_numContigHits,
        ___ExchangeSet_summary_attlist_numGeneHits,
        ___ExchangeSet_summary_attlist_numGiHits,
        ___ExchangeSet_summary_attlist_num3dStructs,
        ___ExchangeSet_summary_attlist_numAlleleFreqs,
        ___ExchangeSet_summary_attlist_numStsHits,
        ___ExchangeSet_summary_attlist_numUnigeneCids,
        __ExchangeSet_summary_attlist,
        __ExchangeSet_summary_summary,
        _ExchangeSet_summary,
        __ExchangeSet_baseURL__item_,
        _ExchangeSet_baseURL,
        ExchangeSet,
        __FxnSet_attlist_geneId,
        __FxnSet_attlist_symbol,
        __FxnSet_attlist_mrnaAcc,
        __FxnSet_attlist_mrnaVer,
        __FxnSet_attlist_protAcc,
        __FxnSet_attlist_protVer,
        __FxnSet_attlist_fxnClass,
        __FxnSet_attlist_readingFrame,
        __FxnSet_attlist_allele,
        __FxnSet_attlist_residue,
        __FxnSet_attlist_aaPosition,
        __FxnSet_attlist_mrnaPosition,
        __FxnSet_attlist_soTerm,
        _FxnSet_attlist,
        _FxnSet_fxnSet,
        FxnSet,
        __MapLoc_attlist_asnFrom,
        __MapLoc_attlist_asnTo,
        __MapLoc_attlist_locType,
        __MapLoc_attlist_alnQuality,
        __MapLoc_attlist_orient,
        __MapLoc_attlist_physMapInt,
        __MapLoc_attlist_leftFlankNeighborPos,
        __MapLoc_attlist_rightFlankNeighborPos,
        __MapLoc_attlist_leftContigNeighborPos,
        __MapLoc_attlist_rightContigNeighborPos,
        __MapLoc_attlist_numberOfMismatches,
        __MapLoc_attlist_numberOfDeletions,
        __MapLoc_attlist_numberOfInsertions,
        __MapLoc_attlist_refAllele,
        _MapLoc_attlist,
        __MapLoc_fxnSet__item_,
        _MapLoc_fxnSet,
        MapLoc,
        __PrimarySequence_attlist_dbSnpBuild,
        __PrimarySequence_attlist_gi,
        __PrimarySequence_attlist_source,
        __PrimarySequence_attlist_accession,
        _PrimarySequence_attlist,
        __PrimarySequence_mapLoc__item_,
        _PrimarySequence_mapLoc,
        PrimarySequence,
        __Rs_attlist_rsId,
        __Rs_attlist_snpClass,
        __Rs_attlist_snpType,
        __Rs_attlist_molType,
        __Rs_attlist_validProbMin,
        __Rs_attlist_validProbMax,
        __Rs_attlist_genotype,
        __Rs_attlist_bitField,
        __Rs_attlist_taxId,
        _Rs_attlist,
        ___Rs_het_attlist_type,
        ___Rs_het_attlist_value,
        ___Rs_het_attlist_stdError,
        __Rs_het_attlist,
        __Rs_het_het,
        _Rs_het,
        ___Rs_validation_attlist_byCluster,
        ___Rs_validation_attlist_byFrequency,
        ___Rs_validation_attlist_byOtherPop,
        ___Rs_validation_attlist_by2Hit2Allele,
        ___Rs_validation_attlist_byHapMap,
        ___Rs_validation_attlist_by1000G,
        ___Rs_validation_attlist_suspect,
        __Rs_validation_attlist,
        ___Rs_validation_otherPopBatchId__item_,
        __Rs_validation_otherPopBatchId,
        ___Rs_validation_twoHit2AlleleBatchId__item_,
        __Rs_validation_twoHit2AlleleBatchId,
        ___Rs_validation_frequencyClass__item_,
        __Rs_validation_frequencyClass,
        ___Rs_validation_hapMapPhase__item_,
        __Rs_validation_hapMapPhase,
        ___Rs_validation_tGPPhase__item_,
        __Rs_validation_tGPPhase,
        ___Rs_validation_suspectEvidence__item_,
        __Rs_validation_suspectEvidence,
        _Rs_validation,
        ___Rs_create_attlist_build,
        ___Rs_create_attlist_date,
        __Rs_create_attlist,
        __Rs_create_create,
        _Rs_create,
        ___Rs_update_attlist_build,
        ___Rs_update_attlist_date,
        __Rs_update_attlist,
        __Rs_update_update,
        _Rs_update,
        ___Rs_sequence_attlist_exemplarSs,
        ___Rs_sequence_attlist_ancestralAllele,
        __Rs_sequence_attlist,
        __Rs_sequence_seq5,
        __Rs_sequence_observed,
        __Rs_sequence_seq3,
        _Rs_sequence,
        __Rs_ss__item_,
        _Rs_ss,
        __Rs_assembly__item_,
        _Rs_assembly,
        __Rs_primarySequence__item_,
        _Rs_primarySequence,
        __Rs_rsStruct__item_,
        _Rs_rsStruct,
        __Rs_rsLinkout__item_,
        _Rs_rsLinkout,
        ____Rs_mergeHistory__item__attlist_rsId,
        ____Rs_mergeHistory__item__attlist_buildId,
        ____Rs_mergeHistory__item__attlist_orientFlip,
        ___Rs_mergeHistory__item__attlist,
        ___Rs_mergeHistory__item__mergeHistory,
        __Rs_mergeHistory__item_,
        _Rs_mergeHistory,
        __Rs_hgvs__item_,
        _Rs_hgvs,
        ____Rs_alleleOrigin__item__attlist_allele,
        ___Rs_alleleOrigin__item__attlist,
        ___Rs_alleleOrigin__item__alleleOrigin,
        __Rs_alleleOrigin__item_,
        _Rs_alleleOrigin,
        ____Rs_phenotype__item__clinicalSignificance__item_,
        ___Rs_phenotype__item__clinicalSignificance,
        __Rs_phenotype__item_,
        _Rs_phenotype,
        ____Rs_bioSource__item__genome__item_,
        ___Rs_bioSource__item__genome,
        ____Rs_bioSource__item__origin__item_,
        ___Rs_bioSource__item__origin,
        __Rs_bioSource__item_,
        _Rs_bioSource,
        ____Rs_frequency__item__attlist_freq,
        ____Rs_frequency__item__attlist_allele,
        ____Rs_frequency__item__attlist_popId,
        ____Rs_frequency__item__attlist_sampleSize,
        ___Rs_frequency__item__attlist,
        ___Rs_frequency__item__frequency,
        __Rs_frequency__item_,
        _Rs_frequency,
        Rs,
        __RsLinkout_attlist_resourceId,
        __RsLinkout_attlist_linkValue,
        _RsLinkout_attlist,
        _RsLinkout_rsLinkout,
        RsLinkout,
        __RsStruct_attlist_protAcc,
        __RsStruct_attlist_protGi,
        __RsStruct_attlist_protLoc,
        __RsStruct_attlist_protResidue,
        __RsStruct_attlist_rsResidue,
        __RsStruct_attlist_structGi,
        __RsStruct_attlist_structLoc,
        __RsStruct_attlist_structResidue,
        _RsStruct_attlist,
        _RsStruct_rsStruct,
        RsStruct,
        __Ss_attlist_ssId,
        __Ss_attlist_handle,
        __Ss_attlist_batchId,
        __Ss_attlist_locSnpId,
        __Ss_attlist_subSnpClass,
        __Ss_attlist_orient,
        __Ss_attlist_strand,
        __Ss_attlist_molType,
        __Ss_attlist_buildId,
        __Ss_attlist_methodClass,
        __Ss_attlist_validated,
        __Ss_attlist_linkoutUrl,
        __Ss_attlist_ssAlias,
        __Ss_attlist_alleleOrigin,
        __Ss_attlist_clinicalSignificance,
        _Ss_attlist,
        __Ss_sequence_seq5,
        __Ss_sequence_observed,
        __Ss_sequence_seq3,
        _Ss_sequence,
        Ss,
    ]

class NCBI_Entrez2:

    _name_  = 'NCBI-Entrez2'
    _oid_   = []
    
    _obj_ = [
        'Entrez2-dt',
        'Entrez2-db-id',
        'Entrez2-field-id',
        'Entrez2-link-id',
        'Entrez2-id-list',
        'Entrez2-boolean-exp',
        'Entrez2-boolean-element',
        'Entrez2-boolean-term',
        'Entrez2-operator',
        'Entrez2-request',
        'E2Request',
        'Entrez2-eval-boolean',
        'Entrez2-dt-filter',
        'Entrez2-limits',
        'Entrez2-id',
        'Entrez2-term-query',
        'Entrez2-hier-query',
        'Entrez2-term-pos',
        'Entrez2-get-links',
        'Entrez2-reply',
        'E2Reply',
        'Entrez2-info',
        'Entrez2-db-info',
        'Entrez2-field-info',
        'Entrez2-link-info',
        'Entrez2-docsum-field-type',
        'Entrez2-docsum-field-info',
        'Entrez2-boolean-reply',
        'Entrez2-docsum-list',
        'Entrez2-docsum',
        'Entrez2-docsum-data',
        'Entrez2-term-list',
        'Entrez2-term',
        'Entrez2-hier-node',
        'Entrez2-link-set',
        'Entrez2-link-count-list',
        'Entrez2-link-count',
        ]
    _type_ = [
        'Entrez2-dt',
        'Entrez2-db-id',
        'Entrez2-field-id',
        'Entrez2-link-id',
        'Entrez2-id-list',
        'Entrez2-boolean-exp',
        'Entrez2-boolean-element',
        'Entrez2-boolean-term',
        'Entrez2-operator',
        'Entrez2-request',
        'E2Request',
        'Entrez2-eval-boolean',
        'Entrez2-dt-filter',
        'Entrez2-limits',
        'Entrez2-id',
        'Entrez2-term-query',
        'Entrez2-hier-query',
        'Entrez2-term-pos',
        'Entrez2-get-links',
        'Entrez2-reply',
        'E2Reply',
        'Entrez2-info',
        'Entrez2-db-info',
        'Entrez2-field-info',
        'Entrez2-link-info',
        'Entrez2-docsum-field-type',
        'Entrez2-docsum-field-info',
        'Entrez2-boolean-reply',
        'Entrez2-docsum-list',
        'Entrez2-docsum',
        'Entrez2-docsum-data',
        'Entrez2-term-list',
        'Entrez2-term',
        'Entrez2-hier-node',
        'Entrez2-link-set',
        'Entrez2-link-count-list',
        'Entrez2-link-count',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Entrez2-dt >-----#
    Entrez2_dt = INT(name='Entrez2-dt', mode=MODE_TYPE)
    
    #-----< Entrez2-db-id >-----#
    Entrez2_db_id = STR_VIS(name='Entrez2-db-id', mode=MODE_TYPE)
    
    #-----< Entrez2-field-id >-----#
    Entrez2_field_id = STR_VIS(name='Entrez2-field-id', mode=MODE_TYPE)
    
    #-----< Entrez2-link-id >-----#
    Entrez2_link_id = STR_VIS(name='Entrez2-link-id', mode=MODE_TYPE)
    
    #-----< Entrez2-id-list >-----#
    Entrez2_id_list = SEQ(name='Entrez2-id-list', mode=MODE_TYPE)
    _Entrez2_id_list_db = STR_VIS(name='db', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-db-id')))
    _Entrez2_id_list_num = INT(name='num', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_id_list_uids = OCT_STR(name='uids', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Entrez2_id_list._cont = ASN1Dict([
        ('db', _Entrez2_id_list_db),
        ('num', _Entrez2_id_list_num),
        ('uids', _Entrez2_id_list_uids),
        ])
    Entrez2_id_list._ext = None
    
    #-----< Entrez2-boolean-exp >-----#
    Entrez2_boolean_exp = SEQ(name='Entrez2-boolean-exp', mode=MODE_TYPE)
    _Entrez2_boolean_exp_db = STR_VIS(name='db', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-db-id')))
    _Entrez2_boolean_exp_exp = SEQ_OF(name='exp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Entrez2_boolean_exp_exp__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-boolean-element')))
    _Entrez2_boolean_exp_exp._cont = __Entrez2_boolean_exp_exp__item_
    _Entrez2_boolean_exp_limits = SEQ(name='limits', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-limits')), opt=True)
    Entrez2_boolean_exp._cont = ASN1Dict([
        ('db', _Entrez2_boolean_exp_db),
        ('exp', _Entrez2_boolean_exp_exp),
        ('limits', _Entrez2_boolean_exp_limits),
        ])
    Entrez2_boolean_exp._ext = None
    
    #-----< Entrez2-boolean-element >-----#
    Entrez2_boolean_element = CHOICE(name='Entrez2-boolean-element', mode=MODE_TYPE)
    _Entrez2_boolean_element_str = STR_VIS(name='str', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_boolean_element_op = INT(name='op', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-operator')))
    _Entrez2_boolean_element_term = SEQ(name='term', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-boolean-term')))
    _Entrez2_boolean_element_ids = SEQ(name='ids', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-id-list')))
    _Entrez2_boolean_element_key = STR_VIS(name='key', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Entrez2_boolean_element._cont = ASN1Dict([
        ('str', _Entrez2_boolean_element_str),
        ('op', _Entrez2_boolean_element_op),
        ('term', _Entrez2_boolean_element_term),
        ('ids', _Entrez2_boolean_element_ids),
        ('key', _Entrez2_boolean_element_key),
        ])
    Entrez2_boolean_element._ext = None
    
    #-----< Entrez2-boolean-term >-----#
    Entrez2_boolean_term = SEQ(name='Entrez2-boolean-term', mode=MODE_TYPE)
    _Entrez2_boolean_term_field = STR_VIS(name='field', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-field-id')))
    _Entrez2_boolean_term_term = STR_VIS(name='term', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_boolean_term_term_count = INT(name='term-count', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Entrez2_boolean_term_do_not_explode = BOOL(name='do-not-explode', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _Entrez2_boolean_term_do_not_translate = BOOL(name='do-not-translate', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    Entrez2_boolean_term._cont = ASN1Dict([
        ('field', _Entrez2_boolean_term_field),
        ('term', _Entrez2_boolean_term_term),
        ('term-count', _Entrez2_boolean_term_term_count),
        ('do-not-explode', _Entrez2_boolean_term_do_not_explode),
        ('do-not-translate', _Entrez2_boolean_term_do_not_translate),
        ])
    Entrez2_boolean_term._ext = None
    
    #-----< Entrez2-operator >-----#
    Entrez2_operator = INT(name='Entrez2-operator', mode=MODE_TYPE)
    Entrez2_operator._cont = ASN1Dict([('and', 1), ('or', 2), ('butnot', 3), ('range', 4), ('left-paren', 5), ('right-paren', 6)])
    
    #-----< Entrez2-request >-----#
    Entrez2_request = SEQ(name='Entrez2-request', mode=MODE_TYPE)
    _Entrez2_request_request = CHOICE(name='request', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'E2Request')))
    _Entrez2_request_version = INT(name='version', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_request_tool = STR_VIS(name='tool', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Entrez2_request_cookie = STR_VIS(name='cookie', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Entrez2_request_use_history = BOOL(name='use-history', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    Entrez2_request._cont = ASN1Dict([
        ('request', _Entrez2_request_request),
        ('version', _Entrez2_request_version),
        ('tool', _Entrez2_request_tool),
        ('cookie', _Entrez2_request_cookie),
        ('use-history', _Entrez2_request_use_history),
        ])
    Entrez2_request._ext = None
    
    #-----< E2Request >-----#
    E2Request = CHOICE(name='E2Request', mode=MODE_TYPE)
    _E2Request_get_info = NULL(name='get-info', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _E2Request_eval_boolean = SEQ(name='eval-boolean', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-eval-boolean')))
    _E2Request_get_docsum = SEQ(name='get-docsum', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-id-list')))
    _E2Request_get_term_pos = SEQ(name='get-term-pos', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-term-query')))
    _E2Request_get_term_list = SEQ(name='get-term-list', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-term-pos')))
    _E2Request_get_term_hierarchy = SEQ(name='get-term-hierarchy', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-hier-query')))
    _E2Request_get_links = SEQ(name='get-links', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-get-links')))
    _E2Request_get_linked = SEQ(name='get-linked', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-get-links')))
    _E2Request_get_link_counts = SEQ(name='get-link-counts', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-id')))
    E2Request._cont = ASN1Dict([
        ('get-info', _E2Request_get_info),
        ('eval-boolean', _E2Request_eval_boolean),
        ('get-docsum', _E2Request_get_docsum),
        ('get-term-pos', _E2Request_get_term_pos),
        ('get-term-list', _E2Request_get_term_list),
        ('get-term-hierarchy', _E2Request_get_term_hierarchy),
        ('get-links', _E2Request_get_links),
        ('get-linked', _E2Request_get_linked),
        ('get-link-counts', _E2Request_get_link_counts),
        ])
    E2Request._ext = None
    
    #-----< Entrez2-eval-boolean >-----#
    Entrez2_eval_boolean = SEQ(name='Entrez2-eval-boolean', mode=MODE_TYPE)
    _Entrez2_eval_boolean_return_UIDs = BOOL(name='return-UIDs', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _Entrez2_eval_boolean_return_parse = BOOL(name='return-parse', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _Entrez2_eval_boolean_query = SEQ(name='query', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-boolean-exp')))
    Entrez2_eval_boolean._cont = ASN1Dict([
        ('return-UIDs', _Entrez2_eval_boolean_return_UIDs),
        ('return-parse', _Entrez2_eval_boolean_return_parse),
        ('query', _Entrez2_eval_boolean_query),
        ])
    Entrez2_eval_boolean._ext = None
    
    #-----< Entrez2-dt-filter >-----#
    Entrez2_dt_filter = SEQ(name='Entrez2-dt-filter', mode=MODE_TYPE)
    _Entrez2_dt_filter_begin_date = INT(name='begin-date', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-dt')))
    _Entrez2_dt_filter_end_date = INT(name='end-date', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-dt')))
    _Entrez2_dt_filter_type_date = STR_VIS(name='type-date', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-field-id')))
    Entrez2_dt_filter._cont = ASN1Dict([
        ('begin-date', _Entrez2_dt_filter_begin_date),
        ('end-date', _Entrez2_dt_filter_end_date),
        ('type-date', _Entrez2_dt_filter_type_date),
        ])
    Entrez2_dt_filter._ext = None
    
    #-----< Entrez2-limits >-----#
    Entrez2_limits = SEQ(name='Entrez2-limits', mode=MODE_TYPE)
    _Entrez2_limits_filter_date = SEQ(name='filter-date', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-dt-filter')), opt=True)
    _Entrez2_limits_max_UIDs = INT(name='max-UIDs', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Entrez2_limits_offset_UIDs = INT(name='offset-UIDs', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Entrez2_limits._cont = ASN1Dict([
        ('filter-date', _Entrez2_limits_filter_date),
        ('max-UIDs', _Entrez2_limits_max_UIDs),
        ('offset-UIDs', _Entrez2_limits_offset_UIDs),
        ])
    Entrez2_limits._ext = None
    
    #-----< Entrez2-id >-----#
    Entrez2_id = SEQ(name='Entrez2-id', mode=MODE_TYPE)
    _Entrez2_id_db = STR_VIS(name='db', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-db-id')))
    _Entrez2_id_uid = INT(name='uid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Entrez2_id._cont = ASN1Dict([
        ('db', _Entrez2_id_db),
        ('uid', _Entrez2_id_uid),
        ])
    Entrez2_id._ext = None
    
    #-----< Entrez2-term-query >-----#
    Entrez2_term_query = SEQ(name='Entrez2-term-query', mode=MODE_TYPE)
    _Entrez2_term_query_db = STR_VIS(name='db', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-db-id')))
    _Entrez2_term_query_field = STR_VIS(name='field', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-field-id')))
    _Entrez2_term_query_term = STR_VIS(name='term', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Entrez2_term_query._cont = ASN1Dict([
        ('db', _Entrez2_term_query_db),
        ('field', _Entrez2_term_query_field),
        ('term', _Entrez2_term_query_term),
        ])
    Entrez2_term_query._ext = None
    
    #-----< Entrez2-hier-query >-----#
    Entrez2_hier_query = SEQ(name='Entrez2-hier-query', mode=MODE_TYPE)
    _Entrez2_hier_query_db = STR_VIS(name='db', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-db-id')))
    _Entrez2_hier_query_field = STR_VIS(name='field', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-field-id')))
    _Entrez2_hier_query_term = STR_VIS(name='term', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Entrez2_hier_query_txid = INT(name='txid', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Entrez2_hier_query._cont = ASN1Dict([
        ('db', _Entrez2_hier_query_db),
        ('field', _Entrez2_hier_query_field),
        ('term', _Entrez2_hier_query_term),
        ('txid', _Entrez2_hier_query_txid),
        ])
    Entrez2_hier_query._ext = None
    
    #-----< Entrez2-term-pos >-----#
    Entrez2_term_pos = SEQ(name='Entrez2-term-pos', mode=MODE_TYPE)
    _Entrez2_term_pos_db = STR_VIS(name='db', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-db-id')))
    _Entrez2_term_pos_field = STR_VIS(name='field', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-field-id')))
    _Entrez2_term_pos_first_term_pos = INT(name='first-term-pos', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_term_pos_number_of_terms = INT(name='number-of-terms', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Entrez2_term_pos._cont = ASN1Dict([
        ('db', _Entrez2_term_pos_db),
        ('field', _Entrez2_term_pos_field),
        ('first-term-pos', _Entrez2_term_pos_first_term_pos),
        ('number-of-terms', _Entrez2_term_pos_number_of_terms),
        ])
    Entrez2_term_pos._ext = None
    
    #-----< Entrez2-get-links >-----#
    Entrez2_get_links = SEQ(name='Entrez2-get-links', mode=MODE_TYPE)
    _Entrez2_get_links_uids = SEQ(name='uids', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-id-list')))
    _Entrez2_get_links_linktype = STR_VIS(name='linktype', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-link-id')))
    _Entrez2_get_links_max_UIDS = INT(name='max-UIDS', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Entrez2_get_links_count_only = BOOL(name='count-only', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Entrez2_get_links_parents_persist = BOOL(name='parents-persist', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Entrez2_get_links._cont = ASN1Dict([
        ('uids', _Entrez2_get_links_uids),
        ('linktype', _Entrez2_get_links_linktype),
        ('max-UIDS', _Entrez2_get_links_max_UIDS),
        ('count-only', _Entrez2_get_links_count_only),
        ('parents-persist', _Entrez2_get_links_parents_persist),
        ])
    Entrez2_get_links._ext = None
    
    #-----< Entrez2-reply >-----#
    Entrez2_reply = SEQ(name='Entrez2-reply', mode=MODE_TYPE)
    _Entrez2_reply_reply = CHOICE(name='reply', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'E2Reply')))
    _Entrez2_reply_dt = INT(name='dt', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-dt')))
    _Entrez2_reply_server = STR_VIS(name='server', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_reply_msg = STR_VIS(name='msg', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Entrez2_reply_key = STR_VIS(name='key', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Entrez2_reply_cookie = STR_VIS(name='cookie', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Entrez2_reply._cont = ASN1Dict([
        ('reply', _Entrez2_reply_reply),
        ('dt', _Entrez2_reply_dt),
        ('server', _Entrez2_reply_server),
        ('msg', _Entrez2_reply_msg),
        ('key', _Entrez2_reply_key),
        ('cookie', _Entrez2_reply_cookie),
        ])
    Entrez2_reply._ext = None
    
    #-----< E2Reply >-----#
    E2Reply = CHOICE(name='E2Reply', mode=MODE_TYPE)
    _E2Reply_error = STR_VIS(name='error', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _E2Reply_get_info = SEQ(name='get-info', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-info')))
    _E2Reply_eval_boolean = SEQ(name='eval-boolean', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-boolean-reply')))
    _E2Reply_get_docsum = SEQ(name='get-docsum', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-docsum-list')))
    _E2Reply_get_term_pos = INT(name='get-term-pos', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _E2Reply_get_term_list = SEQ(name='get-term-list', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-term-list')))
    _E2Reply_get_term_hierarchy = SEQ(name='get-term-hierarchy', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-hier-node')))
    _E2Reply_get_links = SEQ(name='get-links', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-link-set')))
    _E2Reply_get_linked = SEQ(name='get-linked', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-id-list')))
    _E2Reply_get_link_counts = SEQ(name='get-link-counts', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-link-count-list')))
    E2Reply._cont = ASN1Dict([
        ('error', _E2Reply_error),
        ('get-info', _E2Reply_get_info),
        ('eval-boolean', _E2Reply_eval_boolean),
        ('get-docsum', _E2Reply_get_docsum),
        ('get-term-pos', _E2Reply_get_term_pos),
        ('get-term-list', _E2Reply_get_term_list),
        ('get-term-hierarchy', _E2Reply_get_term_hierarchy),
        ('get-links', _E2Reply_get_links),
        ('get-linked', _E2Reply_get_linked),
        ('get-link-counts', _E2Reply_get_link_counts),
        ])
    E2Reply._ext = None
    
    #-----< Entrez2-info >-----#
    Entrez2_info = SEQ(name='Entrez2-info', mode=MODE_TYPE)
    _Entrez2_info_db_count = INT(name='db-count', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_info_build_date = INT(name='build-date', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-dt')))
    _Entrez2_info_db_info = SEQ_OF(name='db-info', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Entrez2_info_db_info__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-db-info')))
    _Entrez2_info_db_info._cont = __Entrez2_info_db_info__item_
    Entrez2_info._cont = ASN1Dict([
        ('db-count', _Entrez2_info_db_count),
        ('build-date', _Entrez2_info_build_date),
        ('db-info', _Entrez2_info_db_info),
        ])
    Entrez2_info._ext = None
    
    #-----< Entrez2-db-info >-----#
    Entrez2_db_info = SEQ(name='Entrez2-db-info', mode=MODE_TYPE)
    _Entrez2_db_info_db_name = STR_VIS(name='db-name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-db-id')))
    _Entrez2_db_info_db_menu = STR_VIS(name='db-menu', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_db_info_db_descr = STR_VIS(name='db-descr', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_db_info_doc_count = INT(name='doc-count', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_db_info_field_count = INT(name='field-count', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_db_info_fields = SEQ_OF(name='fields', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Entrez2_db_info_fields__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-field-info')))
    _Entrez2_db_info_fields._cont = __Entrez2_db_info_fields__item_
    _Entrez2_db_info_link_count = INT(name='link-count', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_db_info_links = SEQ_OF(name='links', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Entrez2_db_info_links__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-link-info')))
    _Entrez2_db_info_links._cont = __Entrez2_db_info_links__item_
    _Entrez2_db_info_docsum_field_count = INT(name='docsum-field-count', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_db_info_docsum_fields = SEQ_OF(name='docsum-fields', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Entrez2_db_info_docsum_fields__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-docsum-field-info')))
    _Entrez2_db_info_docsum_fields._cont = __Entrez2_db_info_docsum_fields__item_
    Entrez2_db_info._cont = ASN1Dict([
        ('db-name', _Entrez2_db_info_db_name),
        ('db-menu', _Entrez2_db_info_db_menu),
        ('db-descr', _Entrez2_db_info_db_descr),
        ('doc-count', _Entrez2_db_info_doc_count),
        ('field-count', _Entrez2_db_info_field_count),
        ('fields', _Entrez2_db_info_fields),
        ('link-count', _Entrez2_db_info_link_count),
        ('links', _Entrez2_db_info_links),
        ('docsum-field-count', _Entrez2_db_info_docsum_field_count),
        ('docsum-fields', _Entrez2_db_info_docsum_fields),
        ])
    Entrez2_db_info._ext = None
    
    #-----< Entrez2-field-info >-----#
    Entrez2_field_info = SEQ(name='Entrez2-field-info', mode=MODE_TYPE)
    _Entrez2_field_info_field_name = STR_VIS(name='field-name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-field-id')))
    _Entrez2_field_info_field_menu = STR_VIS(name='field-menu', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_field_info_field_descr = STR_VIS(name='field-descr', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_field_info_term_count = INT(name='term-count', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_field_info_is_date = BOOL(name='is-date', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Entrez2_field_info_is_numerical = BOOL(name='is-numerical', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Entrez2_field_info_single_token = BOOL(name='single-token', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Entrez2_field_info_hierarchy_avail = BOOL(name='hierarchy-avail', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Entrez2_field_info_is_rangable = BOOL(name='is-rangable', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Entrez2_field_info_is_truncatable = BOOL(name='is-truncatable', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Entrez2_field_info._cont = ASN1Dict([
        ('field-name', _Entrez2_field_info_field_name),
        ('field-menu', _Entrez2_field_info_field_menu),
        ('field-descr', _Entrez2_field_info_field_descr),
        ('term-count', _Entrez2_field_info_term_count),
        ('is-date', _Entrez2_field_info_is_date),
        ('is-numerical', _Entrez2_field_info_is_numerical),
        ('single-token', _Entrez2_field_info_single_token),
        ('hierarchy-avail', _Entrez2_field_info_hierarchy_avail),
        ('is-rangable', _Entrez2_field_info_is_rangable),
        ('is-truncatable', _Entrez2_field_info_is_truncatable),
        ])
    Entrez2_field_info._ext = None
    
    #-----< Entrez2-link-info >-----#
    Entrez2_link_info = SEQ(name='Entrez2-link-info', mode=MODE_TYPE)
    _Entrez2_link_info_link_name = STR_VIS(name='link-name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-link-id')))
    _Entrez2_link_info_link_menu = STR_VIS(name='link-menu', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_link_info_link_descr = STR_VIS(name='link-descr', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_link_info_db_to = STR_VIS(name='db-to', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-db-id')))
    _Entrez2_link_info_data_size = INT(name='data-size', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Entrez2_link_info._cont = ASN1Dict([
        ('link-name', _Entrez2_link_info_link_name),
        ('link-menu', _Entrez2_link_info_link_menu),
        ('link-descr', _Entrez2_link_info_link_descr),
        ('db-to', _Entrez2_link_info_db_to),
        ('data-size', _Entrez2_link_info_data_size),
        ])
    Entrez2_link_info._ext = None
    
    #-----< Entrez2-docsum-field-type >-----#
    Entrez2_docsum_field_type = INT(name='Entrez2-docsum-field-type', mode=MODE_TYPE)
    Entrez2_docsum_field_type._cont = ASN1Dict([('string', 1), ('int', 2), ('float', 3), ('date-pubmed', 4)])
    
    #-----< Entrez2-docsum-field-info >-----#
    Entrez2_docsum_field_info = SEQ(name='Entrez2-docsum-field-info', mode=MODE_TYPE)
    _Entrez2_docsum_field_info_field_name = STR_VIS(name='field-name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_docsum_field_info_field_description = STR_VIS(name='field-description', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_docsum_field_info_field_type = INT(name='field-type', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-docsum-field-type')))
    Entrez2_docsum_field_info._cont = ASN1Dict([
        ('field-name', _Entrez2_docsum_field_info_field_name),
        ('field-description', _Entrez2_docsum_field_info_field_description),
        ('field-type', _Entrez2_docsum_field_info_field_type),
        ])
    Entrez2_docsum_field_info._ext = None
    
    #-----< Entrez2-boolean-reply >-----#
    Entrez2_boolean_reply = SEQ(name='Entrez2-boolean-reply', mode=MODE_TYPE)
    _Entrez2_boolean_reply_count = INT(name='count', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_boolean_reply_uids = SEQ(name='uids', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-id-list')), opt=True)
    _Entrez2_boolean_reply_query = SEQ(name='query', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-boolean-exp')), opt=True)
    Entrez2_boolean_reply._cont = ASN1Dict([
        ('count', _Entrez2_boolean_reply_count),
        ('uids', _Entrez2_boolean_reply_uids),
        ('query', _Entrez2_boolean_reply_query),
        ])
    Entrez2_boolean_reply._ext = None
    
    #-----< Entrez2-docsum-list >-----#
    Entrez2_docsum_list = SEQ(name='Entrez2-docsum-list', mode=MODE_TYPE)
    _Entrez2_docsum_list_count = INT(name='count', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_docsum_list_list = SEQ_OF(name='list', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Entrez2_docsum_list_list__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-docsum')))
    _Entrez2_docsum_list_list._cont = __Entrez2_docsum_list_list__item_
    Entrez2_docsum_list._cont = ASN1Dict([
        ('count', _Entrez2_docsum_list_count),
        ('list', _Entrez2_docsum_list_list),
        ])
    Entrez2_docsum_list._ext = None
    
    #-----< Entrez2-docsum >-----#
    Entrez2_docsum = SEQ(name='Entrez2-docsum', mode=MODE_TYPE)
    _Entrez2_docsum_uid = INT(name='uid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_docsum_docsum_data = SEQ_OF(name='docsum-data', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Entrez2_docsum_docsum_data__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-docsum-data')))
    _Entrez2_docsum_docsum_data._cont = __Entrez2_docsum_docsum_data__item_
    Entrez2_docsum._cont = ASN1Dict([
        ('uid', _Entrez2_docsum_uid),
        ('docsum-data', _Entrez2_docsum_docsum_data),
        ])
    Entrez2_docsum._ext = None
    
    #-----< Entrez2-docsum-data >-----#
    Entrez2_docsum_data = SEQ(name='Entrez2-docsum-data', mode=MODE_TYPE)
    _Entrez2_docsum_data_field_name = STR_VIS(name='field-name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_docsum_data_field_value = STR_VIS(name='field-value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Entrez2_docsum_data._cont = ASN1Dict([
        ('field-name', _Entrez2_docsum_data_field_name),
        ('field-value', _Entrez2_docsum_data_field_value),
        ])
    Entrez2_docsum_data._ext = None
    
    #-----< Entrez2-term-list >-----#
    Entrez2_term_list = SEQ(name='Entrez2-term-list', mode=MODE_TYPE)
    _Entrez2_term_list_pos = INT(name='pos', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_term_list_num = INT(name='num', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_term_list_list = SEQ_OF(name='list', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Entrez2_term_list_list__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-term')))
    _Entrez2_term_list_list._cont = __Entrez2_term_list_list__item_
    Entrez2_term_list._cont = ASN1Dict([
        ('pos', _Entrez2_term_list_pos),
        ('num', _Entrez2_term_list_num),
        ('list', _Entrez2_term_list_list),
        ])
    Entrez2_term_list._ext = None
    
    #-----< Entrez2-term >-----#
    Entrez2_term = SEQ(name='Entrez2-term', mode=MODE_TYPE)
    _Entrez2_term_term = STR_VIS(name='term', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_term_txid = INT(name='txid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Entrez2_term_count = INT(name='count', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_term_is_leaf_node = BOOL(name='is-leaf-node', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Entrez2_term._cont = ASN1Dict([
        ('term', _Entrez2_term_term),
        ('txid', _Entrez2_term_txid),
        ('count', _Entrez2_term_count),
        ('is-leaf-node', _Entrez2_term_is_leaf_node),
        ])
    Entrez2_term._ext = None
    
    #-----< Entrez2-hier-node >-----#
    Entrez2_hier_node = SEQ(name='Entrez2-hier-node', mode=MODE_TYPE)
    _Entrez2_hier_node_cannonical_form = STR_VIS(name='cannonical-form', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_hier_node_lineage_count = INT(name='lineage-count', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_hier_node_lineage = SEQ_OF(name='lineage', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Entrez2_hier_node_lineage__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-term')))
    _Entrez2_hier_node_lineage._cont = __Entrez2_hier_node_lineage__item_
    _Entrez2_hier_node_child_count = INT(name='child-count', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_hier_node_children = SEQ_OF(name='children', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Entrez2_hier_node_children__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-term')))
    _Entrez2_hier_node_children._cont = __Entrez2_hier_node_children__item_
    _Entrez2_hier_node_is_ambiguous = BOOL(name='is-ambiguous', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Entrez2_hier_node._cont = ASN1Dict([
        ('cannonical-form', _Entrez2_hier_node_cannonical_form),
        ('lineage-count', _Entrez2_hier_node_lineage_count),
        ('lineage', _Entrez2_hier_node_lineage),
        ('child-count', _Entrez2_hier_node_child_count),
        ('children', _Entrez2_hier_node_children),
        ('is-ambiguous', _Entrez2_hier_node_is_ambiguous),
        ])
    Entrez2_hier_node._ext = None
    
    #-----< Entrez2-link-set >-----#
    Entrez2_link_set = SEQ(name='Entrez2-link-set', mode=MODE_TYPE)
    _Entrez2_link_set_ids = SEQ(name='ids', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-id-list')))
    _Entrez2_link_set_data_size = INT(name='data-size', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Entrez2_link_set_data = OCT_STR(name='data', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Entrez2_link_set._cont = ASN1Dict([
        ('ids', _Entrez2_link_set_ids),
        ('data-size', _Entrez2_link_set_data_size),
        ('data', _Entrez2_link_set_data),
        ])
    Entrez2_link_set._ext = None
    
    #-----< Entrez2-link-count-list >-----#
    Entrez2_link_count_list = SEQ(name='Entrez2-link-count-list', mode=MODE_TYPE)
    _Entrez2_link_count_list_link_type_count = INT(name='link-type-count', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrez2_link_count_list_links = SEQ_OF(name='links', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Entrez2_link_count_list_links__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-link-count')))
    _Entrez2_link_count_list_links._cont = __Entrez2_link_count_list_links__item_
    Entrez2_link_count_list._cont = ASN1Dict([
        ('link-type-count', _Entrez2_link_count_list_link_type_count),
        ('links', _Entrez2_link_count_list_links),
        ])
    Entrez2_link_count_list._ext = None
    
    #-----< Entrez2-link-count >-----#
    Entrez2_link_count = SEQ(name='Entrez2-link-count', mode=MODE_TYPE)
    _Entrez2_link_count_link_type = STR_VIS(name='link-type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrez2', 'Entrez2-link-id')))
    _Entrez2_link_count_link_count = INT(name='link-count', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Entrez2_link_count._cont = ASN1Dict([
        ('link-type', _Entrez2_link_count_link_type),
        ('link-count', _Entrez2_link_count_link_count),
        ])
    Entrez2_link_count._ext = None
    
    _all_ = [
        Entrez2_dt,
        Entrez2_db_id,
        Entrez2_field_id,
        Entrez2_link_id,
        _Entrez2_id_list_db,
        _Entrez2_id_list_num,
        _Entrez2_id_list_uids,
        Entrez2_id_list,
        _Entrez2_boolean_exp_db,
        __Entrez2_boolean_exp_exp__item_,
        _Entrez2_boolean_exp_exp,
        _Entrez2_boolean_exp_limits,
        Entrez2_boolean_exp,
        _Entrez2_boolean_element_str,
        _Entrez2_boolean_element_op,
        _Entrez2_boolean_element_term,
        _Entrez2_boolean_element_ids,
        _Entrez2_boolean_element_key,
        Entrez2_boolean_element,
        _Entrez2_boolean_term_field,
        _Entrez2_boolean_term_term,
        _Entrez2_boolean_term_term_count,
        _Entrez2_boolean_term_do_not_explode,
        _Entrez2_boolean_term_do_not_translate,
        Entrez2_boolean_term,
        Entrez2_operator,
        _Entrez2_request_request,
        _Entrez2_request_version,
        _Entrez2_request_tool,
        _Entrez2_request_cookie,
        _Entrez2_request_use_history,
        Entrez2_request,
        _E2Request_get_info,
        _E2Request_eval_boolean,
        _E2Request_get_docsum,
        _E2Request_get_term_pos,
        _E2Request_get_term_list,
        _E2Request_get_term_hierarchy,
        _E2Request_get_links,
        _E2Request_get_linked,
        _E2Request_get_link_counts,
        E2Request,
        _Entrez2_eval_boolean_return_UIDs,
        _Entrez2_eval_boolean_return_parse,
        _Entrez2_eval_boolean_query,
        Entrez2_eval_boolean,
        _Entrez2_dt_filter_begin_date,
        _Entrez2_dt_filter_end_date,
        _Entrez2_dt_filter_type_date,
        Entrez2_dt_filter,
        _Entrez2_limits_filter_date,
        _Entrez2_limits_max_UIDs,
        _Entrez2_limits_offset_UIDs,
        Entrez2_limits,
        _Entrez2_id_db,
        _Entrez2_id_uid,
        Entrez2_id,
        _Entrez2_term_query_db,
        _Entrez2_term_query_field,
        _Entrez2_term_query_term,
        Entrez2_term_query,
        _Entrez2_hier_query_db,
        _Entrez2_hier_query_field,
        _Entrez2_hier_query_term,
        _Entrez2_hier_query_txid,
        Entrez2_hier_query,
        _Entrez2_term_pos_db,
        _Entrez2_term_pos_field,
        _Entrez2_term_pos_first_term_pos,
        _Entrez2_term_pos_number_of_terms,
        Entrez2_term_pos,
        _Entrez2_get_links_uids,
        _Entrez2_get_links_linktype,
        _Entrez2_get_links_max_UIDS,
        _Entrez2_get_links_count_only,
        _Entrez2_get_links_parents_persist,
        Entrez2_get_links,
        _Entrez2_reply_reply,
        _Entrez2_reply_dt,
        _Entrez2_reply_server,
        _Entrez2_reply_msg,
        _Entrez2_reply_key,
        _Entrez2_reply_cookie,
        Entrez2_reply,
        _E2Reply_error,
        _E2Reply_get_info,
        _E2Reply_eval_boolean,
        _E2Reply_get_docsum,
        _E2Reply_get_term_pos,
        _E2Reply_get_term_list,
        _E2Reply_get_term_hierarchy,
        _E2Reply_get_links,
        _E2Reply_get_linked,
        _E2Reply_get_link_counts,
        E2Reply,
        _Entrez2_info_db_count,
        _Entrez2_info_build_date,
        __Entrez2_info_db_info__item_,
        _Entrez2_info_db_info,
        Entrez2_info,
        _Entrez2_db_info_db_name,
        _Entrez2_db_info_db_menu,
        _Entrez2_db_info_db_descr,
        _Entrez2_db_info_doc_count,
        _Entrez2_db_info_field_count,
        __Entrez2_db_info_fields__item_,
        _Entrez2_db_info_fields,
        _Entrez2_db_info_link_count,
        __Entrez2_db_info_links__item_,
        _Entrez2_db_info_links,
        _Entrez2_db_info_docsum_field_count,
        __Entrez2_db_info_docsum_fields__item_,
        _Entrez2_db_info_docsum_fields,
        Entrez2_db_info,
        _Entrez2_field_info_field_name,
        _Entrez2_field_info_field_menu,
        _Entrez2_field_info_field_descr,
        _Entrez2_field_info_term_count,
        _Entrez2_field_info_is_date,
        _Entrez2_field_info_is_numerical,
        _Entrez2_field_info_single_token,
        _Entrez2_field_info_hierarchy_avail,
        _Entrez2_field_info_is_rangable,
        _Entrez2_field_info_is_truncatable,
        Entrez2_field_info,
        _Entrez2_link_info_link_name,
        _Entrez2_link_info_link_menu,
        _Entrez2_link_info_link_descr,
        _Entrez2_link_info_db_to,
        _Entrez2_link_info_data_size,
        Entrez2_link_info,
        Entrez2_docsum_field_type,
        _Entrez2_docsum_field_info_field_name,
        _Entrez2_docsum_field_info_field_description,
        _Entrez2_docsum_field_info_field_type,
        Entrez2_docsum_field_info,
        _Entrez2_boolean_reply_count,
        _Entrez2_boolean_reply_uids,
        _Entrez2_boolean_reply_query,
        Entrez2_boolean_reply,
        _Entrez2_docsum_list_count,
        __Entrez2_docsum_list_list__item_,
        _Entrez2_docsum_list_list,
        Entrez2_docsum_list,
        _Entrez2_docsum_uid,
        __Entrez2_docsum_docsum_data__item_,
        _Entrez2_docsum_docsum_data,
        Entrez2_docsum,
        _Entrez2_docsum_data_field_name,
        _Entrez2_docsum_data_field_value,
        Entrez2_docsum_data,
        _Entrez2_term_list_pos,
        _Entrez2_term_list_num,
        __Entrez2_term_list_list__item_,
        _Entrez2_term_list_list,
        Entrez2_term_list,
        _Entrez2_term_term,
        _Entrez2_term_txid,
        _Entrez2_term_count,
        _Entrez2_term_is_leaf_node,
        Entrez2_term,
        _Entrez2_hier_node_cannonical_form,
        _Entrez2_hier_node_lineage_count,
        __Entrez2_hier_node_lineage__item_,
        _Entrez2_hier_node_lineage,
        _Entrez2_hier_node_child_count,
        __Entrez2_hier_node_children__item_,
        _Entrez2_hier_node_children,
        _Entrez2_hier_node_is_ambiguous,
        Entrez2_hier_node,
        _Entrez2_link_set_ids,
        _Entrez2_link_set_data_size,
        _Entrez2_link_set_data,
        Entrez2_link_set,
        _Entrez2_link_count_list_link_type_count,
        __Entrez2_link_count_list_links__item_,
        _Entrez2_link_count_list_links,
        Entrez2_link_count_list,
        _Entrez2_link_count_link_type,
        _Entrez2_link_count_link_count,
        Entrez2_link_count,
    ]

class NCBI_Entrezgene:

    _name_  = 'NCBI-Entrezgene'
    _oid_   = []
    
    _obj_ = [
        'Entrezgene',
        'Entrezgene-Set',
        'Gene-track',
        'Gene-source',
        'Gene-commentary',
        'Other-source',
        'Maps',
        'Xtra-Terms',
        ]
    _type_ = [
        'Entrezgene',
        'Entrezgene-Set',
        'Gene-track',
        'Gene-source',
        'Gene-commentary',
        'Other-source',
        'Maps',
        'Xtra-Terms',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Entrezgene >-----#
    Entrezgene = SEQ(name='Entrezgene', mode=MODE_TYPE)
    _Entrezgene_track_info = SEQ(name='track-info', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrezgene', 'Gene-track')), opt=True)
    _Entrezgene_type = INT(name='type', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Entrezgene_type._cont = ASN1Dict([('unknown', 0), ('tRNA', 1), ('rRNA', 2), ('snRNA', 3), ('scRNA', 4), ('snoRNA', 5), ('protein-coding', 6), ('pseudo', 7), ('transposon', 8), ('miscRNA', 9), ('ncRNA', 10), ('biological-region', 11), ('other', 255)])
    _Entrezgene_source = SEQ(name='source', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BioSource', 'BioSource')))
    _Entrezgene_gene = SEQ(name='gene', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Gene', 'Gene-ref')))
    _Entrezgene_prot = SEQ(name='prot', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Protein', 'Prot-ref')), opt=True)
    _Entrezgene_rna = SEQ(name='rna', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-RNA', 'RNA-ref')), opt=True)
    _Entrezgene_summary = STR_VIS(name='summary', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Entrezgene_location = SEQ_OF(name='location', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Entrezgene_location__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrezgene', 'Maps')))
    _Entrezgene_location._cont = __Entrezgene_location__item_
    _Entrezgene_gene_source = SEQ(name='gene-source', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Entrezgene', 'Gene-source')), opt=True)
    _Entrezgene_locus = SEQ_OF(name='locus', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Entrezgene_locus__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrezgene', 'Gene-commentary')))
    _Entrezgene_locus._cont = __Entrezgene_locus__item_
    _Entrezgene_properties = SEQ_OF(name='properties', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Entrezgene_properties__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrezgene', 'Gene-commentary')))
    _Entrezgene_properties._cont = __Entrezgene_properties__item_
    _Entrezgene_refgene = SEQ_OF(name='refgene', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Entrezgene_refgene__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrezgene', 'Gene-commentary')))
    _Entrezgene_refgene._cont = __Entrezgene_refgene__item_
    _Entrezgene_homology = SEQ_OF(name='homology', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Entrezgene_homology__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrezgene', 'Gene-commentary')))
    _Entrezgene_homology._cont = __Entrezgene_homology__item_
    _Entrezgene_comments = SEQ_OF(name='comments', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Entrezgene_comments__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrezgene', 'Gene-commentary')))
    _Entrezgene_comments._cont = __Entrezgene_comments__item_
    _Entrezgene_unique_keys = SEQ_OF(name='unique-keys', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Entrezgene_unique_keys__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    _Entrezgene_unique_keys._cont = __Entrezgene_unique_keys__item_
    _Entrezgene_xtra_index_terms = SEQ_OF(name='xtra-index-terms', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Entrezgene_xtra_index_terms__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Entrezgene_xtra_index_terms._cont = __Entrezgene_xtra_index_terms__item_
    _Entrezgene_xtra_properties = SEQ_OF(name='xtra-properties', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Entrezgene_xtra_properties__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrezgene', 'Xtra-Terms')))
    _Entrezgene_xtra_properties._cont = __Entrezgene_xtra_properties__item_
    _Entrezgene_xtra_iq = SEQ_OF(name='xtra-iq', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Entrezgene_xtra_iq__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrezgene', 'Xtra-Terms')))
    _Entrezgene_xtra_iq._cont = __Entrezgene_xtra_iq__item_
    _Entrezgene_non_unique_keys = SEQ_OF(name='non-unique-keys', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Entrezgene_non_unique_keys__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    _Entrezgene_non_unique_keys._cont = __Entrezgene_non_unique_keys__item_
    Entrezgene._cont = ASN1Dict([
        ('track-info', _Entrezgene_track_info),
        ('type', _Entrezgene_type),
        ('source', _Entrezgene_source),
        ('gene', _Entrezgene_gene),
        ('prot', _Entrezgene_prot),
        ('rna', _Entrezgene_rna),
        ('summary', _Entrezgene_summary),
        ('location', _Entrezgene_location),
        ('gene-source', _Entrezgene_gene_source),
        ('locus', _Entrezgene_locus),
        ('properties', _Entrezgene_properties),
        ('refgene', _Entrezgene_refgene),
        ('homology', _Entrezgene_homology),
        ('comments', _Entrezgene_comments),
        ('unique-keys', _Entrezgene_unique_keys),
        ('xtra-index-terms', _Entrezgene_xtra_index_terms),
        ('xtra-properties', _Entrezgene_xtra_properties),
        ('xtra-iq', _Entrezgene_xtra_iq),
        ('non-unique-keys', _Entrezgene_non_unique_keys),
        ])
    Entrezgene._ext = None
    
    #-----< Entrezgene-Set >-----#
    Entrezgene_Set = SET_OF(name='Entrezgene-Set', mode=MODE_TYPE)
    _Entrezgene_Set__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrezgene', 'Entrezgene')))
    Entrezgene_Set._cont = _Entrezgene_Set__item_
    
    #-----< Gene-track >-----#
    Gene_track = SEQ(name='Gene-track', mode=MODE_TYPE)
    _Gene_track_geneid = INT(name='geneid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Gene_track_status = INT(name='status', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _Gene_track_status._cont = ASN1Dict([('live', 0), ('secondary', 1), ('discontinued', 2)])
    _Gene_track_current_id = SEQ_OF(name='current-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Gene_track_current_id__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    _Gene_track_current_id._cont = __Gene_track_current_id__item_
    _Gene_track_create_date = CHOICE(name='create-date', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    _Gene_track_update_date = CHOICE(name='update-date', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    _Gene_track_discontinue_date = CHOICE(name='discontinue-date', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    Gene_track._cont = ASN1Dict([
        ('geneid', _Gene_track_geneid),
        ('status', _Gene_track_status),
        ('current-id', _Gene_track_current_id),
        ('create-date', _Gene_track_create_date),
        ('update-date', _Gene_track_update_date),
        ('discontinue-date', _Gene_track_discontinue_date),
        ])
    Gene_track._ext = None
    
    #-----< Gene-source >-----#
    Gene_source = SEQ(name='Gene-source', mode=MODE_TYPE)
    _Gene_source_src = STR_VIS(name='src', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Gene_source_src_int = INT(name='src-int', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Gene_source_src_str1 = STR_VIS(name='src-str1', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Gene_source_src_str2 = STR_VIS(name='src-str2', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Gene_source_gene_display = BOOL(name='gene-display', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _Gene_source_locus_display = BOOL(name='locus-display', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _Gene_source_extra_terms = BOOL(name='extra-terms', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    Gene_source._cont = ASN1Dict([
        ('src', _Gene_source_src),
        ('src-int', _Gene_source_src_int),
        ('src-str1', _Gene_source_src_str1),
        ('src-str2', _Gene_source_src_str2),
        ('gene-display', _Gene_source_gene_display),
        ('locus-display', _Gene_source_locus_display),
        ('extra-terms', _Gene_source_extra_terms),
        ])
    Gene_source._ext = None
    
    #-----< Gene-commentary >-----#
    Gene_commentary = SEQ(name='Gene-commentary', mode=MODE_TYPE)
    _Gene_commentary_type = INT(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Gene_commentary_type._cont = ASN1Dict([('genomic', 1), ('pre-RNA', 2), ('mRNA', 3), ('rRNA', 4), ('tRNA', 5), ('snRNA', 6), ('scRNA', 7), ('peptide', 8), ('other-genetic', 9), ('genomic-mRNA', 10), ('cRNA', 11), ('mature-peptide', 12), ('pre-protein', 13), ('miscRNA', 14), ('snoRNA', 15), ('property', 16), ('reference', 17), ('generif', 18), ('phenotype', 19), ('complex', 20), ('compound', 21), ('ncRNA', 22), ('gene-group', 23), ('assembly', 24), ('assembly-unit', 25), ('comment', 254), ('other', 255)])
    _Gene_commentary_heading = STR_VIS(name='heading', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Gene_commentary_label = STR_VIS(name='label', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Gene_commentary_text = STR_VIS(name='text', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Gene_commentary_accession = STR_VIS(name='accession', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Gene_commentary_version = INT(name='version', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Gene_commentary_xtra_properties = SEQ_OF(name='xtra-properties', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Gene_commentary_xtra_properties__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrezgene', 'Xtra-Terms')))
    _Gene_commentary_xtra_properties._cont = __Gene_commentary_xtra_properties__item_
    _Gene_commentary_refs = SEQ_OF(name='refs', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Gene_commentary_refs__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Pub', 'Pub')))
    _Gene_commentary_refs._cont = __Gene_commentary_refs__item_
    _Gene_commentary_source = SEQ_OF(name='source', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Gene_commentary_source__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrezgene', 'Other-source')))
    _Gene_commentary_source._cont = __Gene_commentary_source__item_
    _Gene_commentary_genomic_coords = SEQ_OF(name='genomic-coords', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Gene_commentary_genomic_coords__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Gene_commentary_genomic_coords._cont = __Gene_commentary_genomic_coords__item_
    _Gene_commentary_seqs = SEQ_OF(name='seqs', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Gene_commentary_seqs__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Gene_commentary_seqs._cont = __Gene_commentary_seqs__item_
    _Gene_commentary_products = SEQ_OF(name='products', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Gene_commentary_products__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrezgene', 'Gene-commentary')))
    _Gene_commentary_products._cont = __Gene_commentary_products__item_
    _Gene_commentary_properties = SEQ_OF(name='properties', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Gene_commentary_properties__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrezgene', 'Gene-commentary')))
    _Gene_commentary_properties._cont = __Gene_commentary_properties__item_
    _Gene_commentary_comment = SEQ_OF(name='comment', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Gene_commentary_comment__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Entrezgene', 'Gene-commentary')))
    _Gene_commentary_comment._cont = __Gene_commentary_comment__item_
    _Gene_commentary_create_date = CHOICE(name='create-date', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    _Gene_commentary_update_date = CHOICE(name='update-date', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    _Gene_commentary_rna = SEQ(name='rna', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-RNA', 'RNA-ref')), opt=True)
    Gene_commentary._cont = ASN1Dict([
        ('type', _Gene_commentary_type),
        ('heading', _Gene_commentary_heading),
        ('label', _Gene_commentary_label),
        ('text', _Gene_commentary_text),
        ('accession', _Gene_commentary_accession),
        ('version', _Gene_commentary_version),
        ('xtra-properties', _Gene_commentary_xtra_properties),
        ('refs', _Gene_commentary_refs),
        ('source', _Gene_commentary_source),
        ('genomic-coords', _Gene_commentary_genomic_coords),
        ('seqs', _Gene_commentary_seqs),
        ('products', _Gene_commentary_products),
        ('properties', _Gene_commentary_properties),
        ('comment', _Gene_commentary_comment),
        ('create-date', _Gene_commentary_create_date),
        ('update-date', _Gene_commentary_update_date),
        ('rna', _Gene_commentary_rna),
        ])
    Gene_commentary._ext = None
    
    #-----< Other-source >-----#
    Other_source = SEQ(name='Other-source', mode=MODE_TYPE)
    _Other_source_src = SEQ(name='src', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'Dbtag')), opt=True)
    _Other_source_pre_text = STR_VIS(name='pre-text', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Other_source_anchor = STR_VIS(name='anchor', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Other_source_url = STR_VIS(name='url', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Other_source_post_text = STR_VIS(name='post-text', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Other_source._cont = ASN1Dict([
        ('src', _Other_source_src),
        ('pre-text', _Other_source_pre_text),
        ('anchor', _Other_source_anchor),
        ('url', _Other_source_url),
        ('post-text', _Other_source_post_text),
        ])
    Other_source._ext = None
    
    #-----< Maps >-----#
    Maps = SEQ(name='Maps', mode=MODE_TYPE)
    _Maps_display_str = STR_VIS(name='display-str', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Maps_method = CHOICE(name='method', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __Maps_method_proxy = STR_VIS(name='proxy', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Maps_method_map_type = ENUM(name='map-type', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Maps_method_map_type._cont = ASN1Dict([('cyto', 0), ('bp', 1), ('cM', 2), ('cR', 3), ('min', 4)])
    __Maps_method_map_type._ext = None
    _Maps_method._cont = ASN1Dict([
        ('proxy', __Maps_method_proxy),
        ('map-type', __Maps_method_map_type),
        ])
    _Maps_method._ext = None
    Maps._cont = ASN1Dict([
        ('display-str', _Maps_display_str),
        ('method', _Maps_method),
        ])
    Maps._ext = None
    
    #-----< Xtra-Terms >-----#
    Xtra_Terms = SEQ(name='Xtra-Terms', mode=MODE_TYPE)
    _Xtra_Terms_tag = STR_VIS(name='tag', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Xtra_Terms_value = STR_VIS(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Xtra_Terms._cont = ASN1Dict([
        ('tag', _Xtra_Terms_tag),
        ('value', _Xtra_Terms_value),
        ])
    Xtra_Terms._ext = None
    
    _all_ = [
        _Entrezgene_track_info,
        _Entrezgene_type,
        _Entrezgene_source,
        _Entrezgene_gene,
        _Entrezgene_prot,
        _Entrezgene_rna,
        _Entrezgene_summary,
        __Entrezgene_location__item_,
        _Entrezgene_location,
        _Entrezgene_gene_source,
        __Entrezgene_locus__item_,
        _Entrezgene_locus,
        __Entrezgene_properties__item_,
        _Entrezgene_properties,
        __Entrezgene_refgene__item_,
        _Entrezgene_refgene,
        __Entrezgene_homology__item_,
        _Entrezgene_homology,
        __Entrezgene_comments__item_,
        _Entrezgene_comments,
        __Entrezgene_unique_keys__item_,
        _Entrezgene_unique_keys,
        __Entrezgene_xtra_index_terms__item_,
        _Entrezgene_xtra_index_terms,
        __Entrezgene_xtra_properties__item_,
        _Entrezgene_xtra_properties,
        __Entrezgene_xtra_iq__item_,
        _Entrezgene_xtra_iq,
        __Entrezgene_non_unique_keys__item_,
        _Entrezgene_non_unique_keys,
        Entrezgene,
        _Entrezgene_Set__item_,
        Entrezgene_Set,
        _Gene_track_geneid,
        _Gene_track_status,
        __Gene_track_current_id__item_,
        _Gene_track_current_id,
        _Gene_track_create_date,
        _Gene_track_update_date,
        _Gene_track_discontinue_date,
        Gene_track,
        _Gene_source_src,
        _Gene_source_src_int,
        _Gene_source_src_str1,
        _Gene_source_src_str2,
        _Gene_source_gene_display,
        _Gene_source_locus_display,
        _Gene_source_extra_terms,
        Gene_source,
        _Gene_commentary_type,
        _Gene_commentary_heading,
        _Gene_commentary_label,
        _Gene_commentary_text,
        _Gene_commentary_accession,
        _Gene_commentary_version,
        __Gene_commentary_xtra_properties__item_,
        _Gene_commentary_xtra_properties,
        __Gene_commentary_refs__item_,
        _Gene_commentary_refs,
        __Gene_commentary_source__item_,
        _Gene_commentary_source,
        __Gene_commentary_genomic_coords__item_,
        _Gene_commentary_genomic_coords,
        __Gene_commentary_seqs__item_,
        _Gene_commentary_seqs,
        __Gene_commentary_products__item_,
        _Gene_commentary_products,
        __Gene_commentary_properties__item_,
        _Gene_commentary_properties,
        __Gene_commentary_comment__item_,
        _Gene_commentary_comment,
        _Gene_commentary_create_date,
        _Gene_commentary_update_date,
        _Gene_commentary_rna,
        Gene_commentary,
        _Other_source_src,
        _Other_source_pre_text,
        _Other_source_anchor,
        _Other_source_url,
        _Other_source_post_text,
        Other_source,
        _Maps_display_str,
        __Maps_method_proxy,
        __Maps_method_map_type,
        _Maps_method,
        Maps,
        _Xtra_Terms_tag,
        _Xtra_Terms_value,
        Xtra_Terms,
    ]

class NCBI_FeatDef:

    _name_  = 'NCBI-FeatDef'
    _oid_   = []
    
    _obj_ = [
        'FeatDef',
        'FeatMolType',
        'FeatDefSet',
        'FeatDispGroup',
        'FeatDispGroupSet',
        'FeatDefGroupSet',
        ]
    _type_ = [
        'FeatDef',
        'FeatMolType',
        'FeatDefSet',
        'FeatDispGroup',
        'FeatDispGroupSet',
        'FeatDefGroupSet',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< FeatDef >-----#
    FeatDef = SEQ(name='FeatDef', mode=MODE_TYPE)
    _FeatDef_typelabel = STR_VIS(name='typelabel', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FeatDef_menulabel = STR_VIS(name='menulabel', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FeatDef_featdef_key = INT(name='featdef-key', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FeatDef_seqfeat_key = INT(name='seqfeat-key', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FeatDef_entrygroup = INT(name='entrygroup', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FeatDef_displaygroup = INT(name='displaygroup', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FeatDef_molgroup = ENUM(name='molgroup', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-FeatDef', 'FeatMolType')))
    FeatDef._cont = ASN1Dict([
        ('typelabel', _FeatDef_typelabel),
        ('menulabel', _FeatDef_menulabel),
        ('featdef-key', _FeatDef_featdef_key),
        ('seqfeat-key', _FeatDef_seqfeat_key),
        ('entrygroup', _FeatDef_entrygroup),
        ('displaygroup', _FeatDef_displaygroup),
        ('molgroup', _FeatDef_molgroup),
        ])
    FeatDef._ext = None
    
    #-----< FeatMolType >-----#
    FeatMolType = ENUM(name='FeatMolType', mode=MODE_TYPE)
    FeatMolType._cont = ASN1Dict([('aa', 1), ('na', 2), ('both', 3)])
    FeatMolType._ext = None
    
    #-----< FeatDefSet >-----#
    FeatDefSet = SEQ_OF(name='FeatDefSet', mode=MODE_TYPE)
    _FeatDefSet__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-FeatDef', 'FeatDef')))
    FeatDefSet._cont = _FeatDefSet__item_
    
    #-----< FeatDispGroup >-----#
    FeatDispGroup = SEQ(name='FeatDispGroup', mode=MODE_TYPE)
    _FeatDispGroup_groupkey = INT(name='groupkey', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FeatDispGroup_groupname = STR_VIS(name='groupname', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    FeatDispGroup._cont = ASN1Dict([
        ('groupkey', _FeatDispGroup_groupkey),
        ('groupname', _FeatDispGroup_groupname),
        ])
    FeatDispGroup._ext = None
    
    #-----< FeatDispGroupSet >-----#
    FeatDispGroupSet = SEQ_OF(name='FeatDispGroupSet', mode=MODE_TYPE)
    _FeatDispGroupSet__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-FeatDef', 'FeatDispGroup')))
    FeatDispGroupSet._cont = _FeatDispGroupSet__item_
    
    #-----< FeatDefGroupSet >-----#
    FeatDefGroupSet = SEQ(name='FeatDefGroupSet', mode=MODE_TYPE)
    _FeatDefGroupSet_groups = SEQ_OF(name='groups', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-FeatDef', 'FeatDispGroupSet')))
    _FeatDefGroupSet_defs = SEQ_OF(name='defs', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-FeatDef', 'FeatDefSet')))
    FeatDefGroupSet._cont = ASN1Dict([
        ('groups', _FeatDefGroupSet_groups),
        ('defs', _FeatDefGroupSet_defs),
        ])
    FeatDefGroupSet._ext = None
    
    _all_ = [
        _FeatDef_typelabel,
        _FeatDef_menulabel,
        _FeatDef_featdef_key,
        _FeatDef_seqfeat_key,
        _FeatDef_entrygroup,
        _FeatDef_displaygroup,
        _FeatDef_molgroup,
        FeatDef,
        FeatMolType,
        _FeatDefSet__item_,
        FeatDefSet,
        _FeatDispGroup_groupkey,
        _FeatDispGroup_groupname,
        FeatDispGroup,
        _FeatDispGroupSet__item_,
        FeatDispGroupSet,
        _FeatDefGroupSet_groups,
        _FeatDefGroupSet_defs,
        FeatDefGroupSet,
    ]

class NCBI_GBSeq:

    _name_  = 'NCBI-GBSeq'
    _oid_   = []
    
    _obj_ = [
        'GBSet',
        'GBSeq',
        'GBSeqid',
        'GBSecondary-accn',
        'GBKeyword',
        'GBReference',
        'GBAuthor',
        'GBXref',
        'GBComment',
        'GBCommentParagraph',
        'GBStrucComment',
        'GBStrucCommentItem',
        'GBFeatureSet',
        'GBFeature',
        'GBInterval',
        'GBQualifier',
        'GBAltSeqData',
        'GBAltSeqItem',
        ]
    _type_ = [
        'GBSet',
        'GBSeq',
        'GBSeqid',
        'GBSecondary-accn',
        'GBKeyword',
        'GBReference',
        'GBAuthor',
        'GBXref',
        'GBComment',
        'GBCommentParagraph',
        'GBStrucComment',
        'GBStrucCommentItem',
        'GBFeatureSet',
        'GBFeature',
        'GBInterval',
        'GBQualifier',
        'GBAltSeqData',
        'GBAltSeqItem',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< GBSet >-----#
    GBSet = SEQ_OF(name='GBSet', mode=MODE_TYPE)
    _GBSet__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBSeq')))
    GBSet._cont = _GBSet__item_
    
    #-----< GBSeq >-----#
    GBSeq = SEQ(name='GBSeq', mode=MODE_TYPE)
    _GBSeq_locus = STR_VIS(name='locus', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_length = INT(name='length', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GBSeq_strandedness = STR_VIS(name='strandedness', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_moltype = STR_VIS(name='moltype', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GBSeq_topology = STR_VIS(name='topology', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_division = STR_VIS(name='division', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_update_date = STR_VIS(name='update-date', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_create_date = STR_VIS(name='create-date', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_update_release = STR_VIS(name='update-release', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_create_release = STR_VIS(name='create-release', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_definition = STR_VIS(name='definition', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_primary_accession = STR_VIS(name='primary-accession', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_entry_version = STR_VIS(name='entry-version', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_accession_version = STR_VIS(name='accession-version', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_other_seqids = SEQ_OF(name='other-seqids', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GBSeq_other_seqids__item_ = STR_VIS(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBSeqid')))
    _GBSeq_other_seqids._cont = __GBSeq_other_seqids__item_
    _GBSeq_secondary_accessions = SEQ_OF(name='secondary-accessions', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GBSeq_secondary_accessions__item_ = STR_VIS(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBSecondary-accn')))
    _GBSeq_secondary_accessions._cont = __GBSeq_secondary_accessions__item_
    _GBSeq_project = STR_VIS(name='project', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_keywords = SEQ_OF(name='keywords', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GBSeq_keywords__item_ = STR_VIS(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBKeyword')))
    _GBSeq_keywords._cont = __GBSeq_keywords__item_
    _GBSeq_segment = STR_VIS(name='segment', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_source = STR_VIS(name='source', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_organism = STR_VIS(name='organism', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_taxonomy = STR_VIS(name='taxonomy', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_references = SEQ_OF(name='references', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GBSeq_references__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBReference')))
    _GBSeq_references._cont = __GBSeq_references__item_
    _GBSeq_comment = STR_VIS(name='comment', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_comment_set = SEQ_OF(name='comment-set', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GBSeq_comment_set__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBComment')))
    _GBSeq_comment_set._cont = __GBSeq_comment_set__item_
    _GBSeq_struc_comments = SEQ_OF(name='struc-comments', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GBSeq_struc_comments__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBStrucComment')))
    _GBSeq_struc_comments._cont = __GBSeq_struc_comments__item_
    _GBSeq_primary = STR_VIS(name='primary', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_source_db = STR_VIS(name='source-db', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_database_reference = STR_VIS(name='database-reference', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_feature_table = SEQ_OF(name='feature-table', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GBSeq_feature_table__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBFeature')))
    _GBSeq_feature_table._cont = __GBSeq_feature_table__item_
    _GBSeq_feature_set = SEQ_OF(name='feature-set', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GBSeq_feature_set__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBFeatureSet')))
    _GBSeq_feature_set._cont = __GBSeq_feature_set__item_
    _GBSeq_sequence = STR_VIS(name='sequence', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_contig = STR_VIS(name='contig', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBSeq_alt_seq = SEQ_OF(name='alt-seq', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GBSeq_alt_seq__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBAltSeqData')))
    _GBSeq_alt_seq._cont = __GBSeq_alt_seq__item_
    _GBSeq_xrefs = SEQ_OF(name='xrefs', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GBSeq_xrefs__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBXref')))
    _GBSeq_xrefs._cont = __GBSeq_xrefs__item_
    GBSeq._cont = ASN1Dict([
        ('locus', _GBSeq_locus),
        ('length', _GBSeq_length),
        ('strandedness', _GBSeq_strandedness),
        ('moltype', _GBSeq_moltype),
        ('topology', _GBSeq_topology),
        ('division', _GBSeq_division),
        ('update-date', _GBSeq_update_date),
        ('create-date', _GBSeq_create_date),
        ('update-release', _GBSeq_update_release),
        ('create-release', _GBSeq_create_release),
        ('definition', _GBSeq_definition),
        ('primary-accession', _GBSeq_primary_accession),
        ('entry-version', _GBSeq_entry_version),
        ('accession-version', _GBSeq_accession_version),
        ('other-seqids', _GBSeq_other_seqids),
        ('secondary-accessions', _GBSeq_secondary_accessions),
        ('project', _GBSeq_project),
        ('keywords', _GBSeq_keywords),
        ('segment', _GBSeq_segment),
        ('source', _GBSeq_source),
        ('organism', _GBSeq_organism),
        ('taxonomy', _GBSeq_taxonomy),
        ('references', _GBSeq_references),
        ('comment', _GBSeq_comment),
        ('comment-set', _GBSeq_comment_set),
        ('struc-comments', _GBSeq_struc_comments),
        ('primary', _GBSeq_primary),
        ('source-db', _GBSeq_source_db),
        ('database-reference', _GBSeq_database_reference),
        ('feature-table', _GBSeq_feature_table),
        ('feature-set', _GBSeq_feature_set),
        ('sequence', _GBSeq_sequence),
        ('contig', _GBSeq_contig),
        ('alt-seq', _GBSeq_alt_seq),
        ('xrefs', _GBSeq_xrefs),
        ])
    GBSeq._ext = None
    
    #-----< GBSeqid >-----#
    GBSeqid = STR_VIS(name='GBSeqid', mode=MODE_TYPE)
    
    #-----< GBSecondary-accn >-----#
    GBSecondary_accn = STR_VIS(name='GBSecondary-accn', mode=MODE_TYPE)
    
    #-----< GBKeyword >-----#
    GBKeyword = STR_VIS(name='GBKeyword', mode=MODE_TYPE)
    
    #-----< GBReference >-----#
    GBReference = SEQ(name='GBReference', mode=MODE_TYPE)
    _GBReference_reference = STR_VIS(name='reference', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GBReference_position = STR_VIS(name='position', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBReference_authors = SEQ_OF(name='authors', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GBReference_authors__item_ = STR_VIS(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBAuthor')))
    _GBReference_authors._cont = __GBReference_authors__item_
    _GBReference_consortium = STR_VIS(name='consortium', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBReference_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBReference_journal = STR_VIS(name='journal', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GBReference_xref = SEQ_OF(name='xref', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GBReference_xref__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBXref')))
    _GBReference_xref._cont = __GBReference_xref__item_
    _GBReference_pubmed = INT(name='pubmed', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBReference_remark = STR_VIS(name='remark', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    GBReference._cont = ASN1Dict([
        ('reference', _GBReference_reference),
        ('position', _GBReference_position),
        ('authors', _GBReference_authors),
        ('consortium', _GBReference_consortium),
        ('title', _GBReference_title),
        ('journal', _GBReference_journal),
        ('xref', _GBReference_xref),
        ('pubmed', _GBReference_pubmed),
        ('remark', _GBReference_remark),
        ])
    GBReference._ext = None
    
    #-----< GBAuthor >-----#
    GBAuthor = STR_VIS(name='GBAuthor', mode=MODE_TYPE)
    
    #-----< GBXref >-----#
    GBXref = SEQ(name='GBXref', mode=MODE_TYPE)
    _GBXref_dbname = STR_VIS(name='dbname', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GBXref_id = STR_VIS(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    GBXref._cont = ASN1Dict([
        ('dbname', _GBXref_dbname),
        ('id', _GBXref_id),
        ])
    GBXref._ext = None
    
    #-----< GBComment >-----#
    GBComment = SEQ(name='GBComment', mode=MODE_TYPE)
    _GBComment_type = STR_VIS(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBComment_paragraphs = SEQ_OF(name='paragraphs', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GBComment_paragraphs__item_ = STR_VIS(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBCommentParagraph')))
    _GBComment_paragraphs._cont = __GBComment_paragraphs__item_
    GBComment._cont = ASN1Dict([
        ('type', _GBComment_type),
        ('paragraphs', _GBComment_paragraphs),
        ])
    GBComment._ext = None
    
    #-----< GBCommentParagraph >-----#
    GBCommentParagraph = STR_VIS(name='GBCommentParagraph', mode=MODE_TYPE)
    
    #-----< GBStrucComment >-----#
    GBStrucComment = SEQ(name='GBStrucComment', mode=MODE_TYPE)
    _GBStrucComment_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBStrucComment_items = SEQ_OF(name='items', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GBStrucComment_items__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBStrucCommentItem')))
    _GBStrucComment_items._cont = __GBStrucComment_items__item_
    GBStrucComment._cont = ASN1Dict([
        ('name', _GBStrucComment_name),
        ('items', _GBStrucComment_items),
        ])
    GBStrucComment._ext = None
    
    #-----< GBStrucCommentItem >-----#
    GBStrucCommentItem = SEQ(name='GBStrucCommentItem', mode=MODE_TYPE)
    _GBStrucCommentItem_tag = STR_VIS(name='tag', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBStrucCommentItem_value = STR_VIS(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBStrucCommentItem_url = STR_VIS(name='url', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    GBStrucCommentItem._cont = ASN1Dict([
        ('tag', _GBStrucCommentItem_tag),
        ('value', _GBStrucCommentItem_value),
        ('url', _GBStrucCommentItem_url),
        ])
    GBStrucCommentItem._ext = None
    
    #-----< GBFeatureSet >-----#
    GBFeatureSet = SEQ(name='GBFeatureSet', mode=MODE_TYPE)
    _GBFeatureSet_annot_source = STR_VIS(name='annot-source', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBFeatureSet_features = SEQ_OF(name='features', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GBFeatureSet_features__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBFeature')))
    _GBFeatureSet_features._cont = __GBFeatureSet_features__item_
    GBFeatureSet._cont = ASN1Dict([
        ('annot-source', _GBFeatureSet_annot_source),
        ('features', _GBFeatureSet_features),
        ])
    GBFeatureSet._ext = None
    
    #-----< GBFeature >-----#
    GBFeature = SEQ(name='GBFeature', mode=MODE_TYPE)
    _GBFeature_key = STR_VIS(name='key', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GBFeature_location = STR_VIS(name='location', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GBFeature_intervals = SEQ_OF(name='intervals', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GBFeature_intervals__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBInterval')))
    _GBFeature_intervals._cont = __GBFeature_intervals__item_
    _GBFeature_operator = STR_VIS(name='operator', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBFeature_partial5 = BOOL(name='partial5', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBFeature_partial3 = BOOL(name='partial3', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBFeature_quals = SEQ_OF(name='quals', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GBFeature_quals__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBQualifier')))
    _GBFeature_quals._cont = __GBFeature_quals__item_
    _GBFeature_xrefs = SEQ_OF(name='xrefs', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GBFeature_xrefs__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBXref')))
    _GBFeature_xrefs._cont = __GBFeature_xrefs__item_
    GBFeature._cont = ASN1Dict([
        ('key', _GBFeature_key),
        ('location', _GBFeature_location),
        ('intervals', _GBFeature_intervals),
        ('operator', _GBFeature_operator),
        ('partial5', _GBFeature_partial5),
        ('partial3', _GBFeature_partial3),
        ('quals', _GBFeature_quals),
        ('xrefs', _GBFeature_xrefs),
        ])
    GBFeature._ext = None
    
    #-----< GBInterval >-----#
    GBInterval = SEQ(name='GBInterval', mode=MODE_TYPE)
    _GBInterval_from_ = INT(name='from', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBInterval_to = INT(name='to', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBInterval_point = INT(name='point', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBInterval_iscomp = BOOL(name='iscomp', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBInterval_interbp = BOOL(name='interbp', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBInterval_accession = STR_VIS(name='accession', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    GBInterval._cont = ASN1Dict([
        ('from', _GBInterval_from_),
        ('to', _GBInterval_to),
        ('point', _GBInterval_point),
        ('iscomp', _GBInterval_iscomp),
        ('interbp', _GBInterval_interbp),
        ('accession', _GBInterval_accession),
        ])
    GBInterval._ext = None
    
    #-----< GBQualifier >-----#
    GBQualifier = SEQ(name='GBQualifier', mode=MODE_TYPE)
    _GBQualifier_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GBQualifier_value = STR_VIS(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    GBQualifier._cont = ASN1Dict([
        ('name', _GBQualifier_name),
        ('value', _GBQualifier_value),
        ])
    GBQualifier._ext = None
    
    #-----< GBAltSeqData >-----#
    GBAltSeqData = SEQ(name='GBAltSeqData', mode=MODE_TYPE)
    _GBAltSeqData_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GBAltSeqData_items = SEQ_OF(name='items', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GBAltSeqData_items__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-GBSeq', 'GBAltSeqItem')))
    _GBAltSeqData_items._cont = __GBAltSeqData_items__item_
    GBAltSeqData._cont = ASN1Dict([
        ('name', _GBAltSeqData_name),
        ('items', _GBAltSeqData_items),
        ])
    GBAltSeqData._ext = None
    
    #-----< GBAltSeqItem >-----#
    GBAltSeqItem = SEQ(name='GBAltSeqItem', mode=MODE_TYPE)
    _GBAltSeqItem_interval = SEQ(name='interval', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-GBSeq', 'GBInterval')), opt=True)
    _GBAltSeqItem_isgap = BOOL(name='isgap', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBAltSeqItem_gap_length = INT(name='gap-length', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBAltSeqItem_gap_type = STR_VIS(name='gap-type', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBAltSeqItem_gap_linkage = STR_VIS(name='gap-linkage', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBAltSeqItem_gap_comment = STR_VIS(name='gap-comment', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBAltSeqItem_first_accn = STR_VIS(name='first-accn', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBAltSeqItem_last_accn = STR_VIS(name='last-accn', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GBAltSeqItem_value = STR_VIS(name='value', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    GBAltSeqItem._cont = ASN1Dict([
        ('interval', _GBAltSeqItem_interval),
        ('isgap', _GBAltSeqItem_isgap),
        ('gap-length', _GBAltSeqItem_gap_length),
        ('gap-type', _GBAltSeqItem_gap_type),
        ('gap-linkage', _GBAltSeqItem_gap_linkage),
        ('gap-comment', _GBAltSeqItem_gap_comment),
        ('first-accn', _GBAltSeqItem_first_accn),
        ('last-accn', _GBAltSeqItem_last_accn),
        ('value', _GBAltSeqItem_value),
        ])
    GBAltSeqItem._ext = None
    
    _all_ = [
        _GBSet__item_,
        GBSet,
        _GBSeq_locus,
        _GBSeq_length,
        _GBSeq_strandedness,
        _GBSeq_moltype,
        _GBSeq_topology,
        _GBSeq_division,
        _GBSeq_update_date,
        _GBSeq_create_date,
        _GBSeq_update_release,
        _GBSeq_create_release,
        _GBSeq_definition,
        _GBSeq_primary_accession,
        _GBSeq_entry_version,
        _GBSeq_accession_version,
        __GBSeq_other_seqids__item_,
        _GBSeq_other_seqids,
        __GBSeq_secondary_accessions__item_,
        _GBSeq_secondary_accessions,
        _GBSeq_project,
        __GBSeq_keywords__item_,
        _GBSeq_keywords,
        _GBSeq_segment,
        _GBSeq_source,
        _GBSeq_organism,
        _GBSeq_taxonomy,
        __GBSeq_references__item_,
        _GBSeq_references,
        _GBSeq_comment,
        __GBSeq_comment_set__item_,
        _GBSeq_comment_set,
        __GBSeq_struc_comments__item_,
        _GBSeq_struc_comments,
        _GBSeq_primary,
        _GBSeq_source_db,
        _GBSeq_database_reference,
        __GBSeq_feature_table__item_,
        _GBSeq_feature_table,
        __GBSeq_feature_set__item_,
        _GBSeq_feature_set,
        _GBSeq_sequence,
        _GBSeq_contig,
        __GBSeq_alt_seq__item_,
        _GBSeq_alt_seq,
        __GBSeq_xrefs__item_,
        _GBSeq_xrefs,
        GBSeq,
        GBSeqid,
        GBSecondary_accn,
        GBKeyword,
        _GBReference_reference,
        _GBReference_position,
        __GBReference_authors__item_,
        _GBReference_authors,
        _GBReference_consortium,
        _GBReference_title,
        _GBReference_journal,
        __GBReference_xref__item_,
        _GBReference_xref,
        _GBReference_pubmed,
        _GBReference_remark,
        GBReference,
        GBAuthor,
        _GBXref_dbname,
        _GBXref_id,
        GBXref,
        _GBComment_type,
        __GBComment_paragraphs__item_,
        _GBComment_paragraphs,
        GBComment,
        GBCommentParagraph,
        _GBStrucComment_name,
        __GBStrucComment_items__item_,
        _GBStrucComment_items,
        GBStrucComment,
        _GBStrucCommentItem_tag,
        _GBStrucCommentItem_value,
        _GBStrucCommentItem_url,
        GBStrucCommentItem,
        _GBFeatureSet_annot_source,
        __GBFeatureSet_features__item_,
        _GBFeatureSet_features,
        GBFeatureSet,
        _GBFeature_key,
        _GBFeature_location,
        __GBFeature_intervals__item_,
        _GBFeature_intervals,
        _GBFeature_operator,
        _GBFeature_partial5,
        _GBFeature_partial3,
        __GBFeature_quals__item_,
        _GBFeature_quals,
        __GBFeature_xrefs__item_,
        _GBFeature_xrefs,
        GBFeature,
        _GBInterval_from_,
        _GBInterval_to,
        _GBInterval_point,
        _GBInterval_iscomp,
        _GBInterval_interbp,
        _GBInterval_accession,
        GBInterval,
        _GBQualifier_name,
        _GBQualifier_value,
        GBQualifier,
        _GBAltSeqData_name,
        __GBAltSeqData_items__item_,
        _GBAltSeqData_items,
        GBAltSeqData,
        _GBAltSeqItem_interval,
        _GBAltSeqItem_isgap,
        _GBAltSeqItem_gap_length,
        _GBAltSeqItem_gap_type,
        _GBAltSeqItem_gap_linkage,
        _GBAltSeqItem_gap_comment,
        _GBAltSeqItem_first_accn,
        _GBAltSeqItem_last_accn,
        _GBAltSeqItem_value,
        GBAltSeqItem,
    ]

class NCBI_General:

    _name_  = 'NCBI-General'
    _oid_   = []
    
    _obj_ = [
        'Date',
        'Date-std',
        'Dbtag',
        'Object-id',
        'Person-id',
        'Name-std',
        'Int-fuzz',
        'User-object',
        'User-field',
        ]
    _type_ = [
        'Date',
        'Date-std',
        'Dbtag',
        'Object-id',
        'Person-id',
        'Name-std',
        'Int-fuzz',
        'User-object',
        'User-field',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Date >-----#
    Date = CHOICE(name='Date', mode=MODE_TYPE)
    _Date_str = STR_VIS(name='str', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Date_std = SEQ(name='std', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date-std')))
    Date._cont = ASN1Dict([
        ('str', _Date_str),
        ('std', _Date_std),
        ])
    Date._ext = None
    
    #-----< Date-std >-----#
    Date_std = SEQ(name='Date-std', mode=MODE_TYPE)
    _Date_std_year = INT(name='year', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Date_std_month = INT(name='month', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Date_std_day = INT(name='day', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Date_std_season = STR_VIS(name='season', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Date_std_hour = INT(name='hour', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Date_std_minute = INT(name='minute', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Date_std_second = INT(name='second', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Date_std._cont = ASN1Dict([
        ('year', _Date_std_year),
        ('month', _Date_std_month),
        ('day', _Date_std_day),
        ('season', _Date_std_season),
        ('hour', _Date_std_hour),
        ('minute', _Date_std_minute),
        ('second', _Date_std_second),
        ])
    Date_std._ext = None
    
    #-----< Dbtag >-----#
    Dbtag = SEQ(name='Dbtag', mode=MODE_TYPE)
    _Dbtag_db = STR_VIS(name='db', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Dbtag_tag = CHOICE(name='tag', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Object-id')))
    Dbtag._cont = ASN1Dict([
        ('db', _Dbtag_db),
        ('tag', _Dbtag_tag),
        ])
    Dbtag._ext = None
    
    #-----< Object-id >-----#
    Object_id = CHOICE(name='Object-id', mode=MODE_TYPE)
    _Object_id_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Object_id_str = STR_VIS(name='str', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Object_id._cont = ASN1Dict([
        ('id', _Object_id_id),
        ('str', _Object_id_str),
        ])
    Object_id._ext = None
    
    #-----< Person-id >-----#
    Person_id = CHOICE(name='Person-id', mode=MODE_TYPE)
    _Person_id_dbtag = SEQ(name='dbtag', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    _Person_id_name = SEQ(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'Name-std')))
    _Person_id_ml = STR_VIS(name='ml', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Person_id_str = STR_VIS(name='str', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Person_id_consortium = STR_VIS(name='consortium', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Person_id._cont = ASN1Dict([
        ('dbtag', _Person_id_dbtag),
        ('name', _Person_id_name),
        ('ml', _Person_id_ml),
        ('str', _Person_id_str),
        ('consortium', _Person_id_consortium),
        ])
    Person_id._ext = None
    
    #-----< Name-std >-----#
    Name_std = SEQ(name='Name-std', mode=MODE_TYPE)
    _Name_std_last = STR_VIS(name='last', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Name_std_first = STR_VIS(name='first', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Name_std_middle = STR_VIS(name='middle', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Name_std_full = STR_VIS(name='full', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Name_std_initials = STR_VIS(name='initials', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Name_std_suffix = STR_VIS(name='suffix', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Name_std_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Name_std._cont = ASN1Dict([
        ('last', _Name_std_last),
        ('first', _Name_std_first),
        ('middle', _Name_std_middle),
        ('full', _Name_std_full),
        ('initials', _Name_std_initials),
        ('suffix', _Name_std_suffix),
        ('title', _Name_std_title),
        ])
    Name_std._ext = None
    
    #-----< Int-fuzz >-----#
    Int_fuzz = CHOICE(name='Int-fuzz', mode=MODE_TYPE)
    _Int_fuzz_p_m = INT(name='p-m', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Int_fuzz_range = SEQ(name='range', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Int_fuzz_range_max = INT(name='max', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Int_fuzz_range_min = INT(name='min', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Int_fuzz_range._cont = ASN1Dict([
        ('max', __Int_fuzz_range_max),
        ('min', __Int_fuzz_range_min),
        ])
    _Int_fuzz_range._ext = None
    _Int_fuzz_pct = INT(name='pct', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Int_fuzz_lim = ENUM(name='lim', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Int_fuzz_lim._cont = ASN1Dict([('unk', 0), ('gt', 1), ('lt', 2), ('tr', 3), ('tl', 4), ('circle', 5), ('other', 255)])
    _Int_fuzz_lim._ext = None
    _Int_fuzz_alt = SET_OF(name='alt', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Int_fuzz_alt__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Int_fuzz_alt._cont = __Int_fuzz_alt__item_
    Int_fuzz._cont = ASN1Dict([
        ('p-m', _Int_fuzz_p_m),
        ('range', _Int_fuzz_range),
        ('pct', _Int_fuzz_pct),
        ('lim', _Int_fuzz_lim),
        ('alt', _Int_fuzz_alt),
        ])
    Int_fuzz._ext = None
    
    #-----< User-object >-----#
    User_object = SEQ(name='User-object', mode=MODE_TYPE)
    _User_object_class_ = STR_VIS(name='class', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _User_object_type = CHOICE(name='type', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Object-id')))
    _User_object_data = SEQ_OF(name='data', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __User_object_data__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'User-field')))
    _User_object_data._cont = __User_object_data__item_
    User_object._cont = ASN1Dict([
        ('class', _User_object_class_),
        ('type', _User_object_type),
        ('data', _User_object_data),
        ])
    User_object._ext = None
    
    #-----< User-field >-----#
    User_field = SEQ(name='User-field', mode=MODE_TYPE)
    _User_field_label = CHOICE(name='label', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Object-id')))
    _User_field_num = INT(name='num', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _User_field_data = CHOICE(name='data', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __User_field_data_str = STR_VIS(name='str', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __User_field_data_int = INT(name='int', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __User_field_data_real = REAL(name='real', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    __User_field_data_bool = BOOL(name='bool', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __User_field_data_os = OCT_STR(name='os', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __User_field_data_object = SEQ(name='object', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'User-object')))
    __User_field_data_strs = SEQ_OF(name='strs', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___User_field_data_strs__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    __User_field_data_strs._cont = ___User_field_data_strs__item_
    __User_field_data_ints = SEQ_OF(name='ints', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___User_field_data_ints__item_ = INT(name='_item_', mode=MODE_TYPE)
    __User_field_data_ints._cont = ___User_field_data_ints__item_
    __User_field_data_reals = SEQ_OF(name='reals', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___User_field_data_reals__item_ = REAL(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('_IMPL_', 'REAL')))
    __User_field_data_reals._cont = ___User_field_data_reals__item_
    __User_field_data_oss = SEQ_OF(name='oss', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___User_field_data_oss__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    __User_field_data_oss._cont = ___User_field_data_oss__item_
    __User_field_data_fields = SEQ_OF(name='fields', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___User_field_data_fields__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'User-field')))
    __User_field_data_fields._cont = ___User_field_data_fields__item_
    __User_field_data_objects = SEQ_OF(name='objects', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___User_field_data_objects__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'User-object')))
    __User_field_data_objects._cont = ___User_field_data_objects__item_
    _User_field_data._cont = ASN1Dict([
        ('str', __User_field_data_str),
        ('int', __User_field_data_int),
        ('real', __User_field_data_real),
        ('bool', __User_field_data_bool),
        ('os', __User_field_data_os),
        ('object', __User_field_data_object),
        ('strs', __User_field_data_strs),
        ('ints', __User_field_data_ints),
        ('reals', __User_field_data_reals),
        ('oss', __User_field_data_oss),
        ('fields', __User_field_data_fields),
        ('objects', __User_field_data_objects),
        ])
    _User_field_data._ext = None
    User_field._cont = ASN1Dict([
        ('label', _User_field_label),
        ('num', _User_field_num),
        ('data', _User_field_data),
        ])
    User_field._ext = None
    
    _all_ = [
        _Date_str,
        _Date_std,
        Date,
        _Date_std_year,
        _Date_std_month,
        _Date_std_day,
        _Date_std_season,
        _Date_std_hour,
        _Date_std_minute,
        _Date_std_second,
        Date_std,
        _Dbtag_db,
        _Dbtag_tag,
        Dbtag,
        _Object_id_id,
        _Object_id_str,
        Object_id,
        _Person_id_dbtag,
        _Person_id_name,
        _Person_id_ml,
        _Person_id_str,
        _Person_id_consortium,
        Person_id,
        _Name_std_last,
        _Name_std_first,
        _Name_std_middle,
        _Name_std_full,
        _Name_std_initials,
        _Name_std_suffix,
        _Name_std_title,
        Name_std,
        _Int_fuzz_p_m,
        __Int_fuzz_range_max,
        __Int_fuzz_range_min,
        _Int_fuzz_range,
        _Int_fuzz_pct,
        _Int_fuzz_lim,
        __Int_fuzz_alt__item_,
        _Int_fuzz_alt,
        Int_fuzz,
        _User_object_class_,
        _User_object_type,
        __User_object_data__item_,
        _User_object_data,
        User_object,
        _User_field_label,
        _User_field_num,
        __User_field_data_str,
        __User_field_data_int,
        __User_field_data_real,
        __User_field_data_bool,
        __User_field_data_os,
        __User_field_data_object,
        ___User_field_data_strs__item_,
        __User_field_data_strs,
        ___User_field_data_ints__item_,
        __User_field_data_ints,
        ___User_field_data_reals__item_,
        __User_field_data_reals,
        ___User_field_data_oss__item_,
        __User_field_data_oss,
        ___User_field_data_fields__item_,
        __User_field_data_fields,
        ___User_field_data_objects__item_,
        __User_field_data_objects,
        _User_field_data,
        User_field,
    ]

class HomoloGene:

    _name_  = 'HomoloGene'
    _oid_   = []
    
    _obj_ = [
        'HG-EntrySet',
        'HG-Entry',
        'HG-Gene',
        'HG-Stats',
        'HG-Commentary',
        'HG-CommentarySet',
        'HG-CommentaryContainer',
        'HG-Link',
        'HG-Domain',
        'HG-Node',
        'HG-Node-id',
        'HG-Alignment',
        'HG-AlignmentSet',
        ]
    _type_ = [
        'HG-EntrySet',
        'HG-Entry',
        'HG-Gene',
        'HG-Stats',
        'HG-Commentary',
        'HG-CommentarySet',
        'HG-CommentaryContainer',
        'HG-Link',
        'HG-Domain',
        'HG-Node',
        'HG-Node-id',
        'HG-Alignment',
        'HG-AlignmentSet',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< HG-EntrySet >-----#
    HG_EntrySet = SEQ(name='HG-EntrySet', mode=MODE_TYPE)
    _HG_EntrySet_entries = SET_OF(name='entries', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __HG_EntrySet_entries__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('HomoloGene', 'HG-Entry')))
    _HG_EntrySet_entries._cont = __HG_EntrySet_entries__item_
    HG_EntrySet._cont = ASN1Dict([
        ('entries', _HG_EntrySet_entries),
        ])
    HG_EntrySet._ext = None
    
    #-----< HG-Entry >-----#
    HG_Entry = SEQ(name='HG-Entry', mode=MODE_TYPE)
    _HG_Entry_hg_id = INT(name='hg-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HG_Entry_version = INT(name='version', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Entry_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Entry_caption = STR_VIS(name='caption', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Entry_taxid = INT(name='taxid', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Entry_genes = SET_OF(name='genes', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __HG_Entry_genes__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('HomoloGene', 'HG-Gene')))
    _HG_Entry_genes._cont = __HG_Entry_genes__item_
    _HG_Entry_cr_date = CHOICE(name='cr-date', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    _HG_Entry_up_date = CHOICE(name='up-date', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    _HG_Entry_distances = SET_OF(name='distances', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __HG_Entry_distances__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('HomoloGene', 'HG-Stats')))
    _HG_Entry_distances._cont = __HG_Entry_distances__item_
    _HG_Entry_commentaries = SET_OF(name='commentaries', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __HG_Entry_commentaries__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('HomoloGene', 'HG-CommentarySet')))
    _HG_Entry_commentaries._cont = __HG_Entry_commentaries__item_
    _HG_Entry_warnings = SET_OF(name='warnings', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __HG_Entry_warnings__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _HG_Entry_warnings._cont = __HG_Entry_warnings__item_
    _HG_Entry_node = SEQ(name='node', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HomoloGene', 'HG-Node')), opt=True)
    HG_Entry._cont = ASN1Dict([
        ('hg-id', _HG_Entry_hg_id),
        ('version', _HG_Entry_version),
        ('title', _HG_Entry_title),
        ('caption', _HG_Entry_caption),
        ('taxid', _HG_Entry_taxid),
        ('genes', _HG_Entry_genes),
        ('cr-date', _HG_Entry_cr_date),
        ('up-date', _HG_Entry_up_date),
        ('distances', _HG_Entry_distances),
        ('commentaries', _HG_Entry_commentaries),
        ('warnings', _HG_Entry_warnings),
        ('node', _HG_Entry_node),
        ])
    HG_Entry._ext = None
    
    #-----< HG-Gene >-----#
    HG_Gene = SEQ(name='HG-Gene', mode=MODE_TYPE)
    _HG_Gene_geneid = INT(name='geneid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HG_Gene_otherid = INT(name='otherid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Gene_symbol = STR_VIS(name='symbol', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Gene_aliases = SET_OF(name='aliases', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __HG_Gene_aliases__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _HG_Gene_aliases._cont = __HG_Gene_aliases__item_
    _HG_Gene_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HG_Gene_taxid = INT(name='taxid', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HG_Gene_prot_gi = INT(name='prot-gi', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Gene_prot_acc = STR_VIS(name='prot-acc', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Gene_prot_len = INT(name='prot-len', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Gene_nuc_gi = INT(name='nuc-gi', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Gene_nuc_acc = STR_VIS(name='nuc-acc', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Gene_gene_links = SET_OF(name='gene-links', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __HG_Gene_gene_links__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('HomoloGene', 'HG-Link')))
    _HG_Gene_gene_links._cont = __HG_Gene_gene_links__item_
    _HG_Gene_prot_links = SET_OF(name='prot-links', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __HG_Gene_prot_links__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('HomoloGene', 'HG-Link')))
    _HG_Gene_prot_links._cont = __HG_Gene_prot_links__item_
    _HG_Gene_domains = SET_OF(name='domains', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __HG_Gene_domains__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('HomoloGene', 'HG-Domain')))
    _HG_Gene_domains._cont = __HG_Gene_domains__item_
    _HG_Gene_chr = STR_VIS(name='chr', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Gene_location = CHOICE(name='location', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')), opt=True)
    _HG_Gene_locus_tag = STR_VIS(name='locus-tag', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    HG_Gene._cont = ASN1Dict([
        ('geneid', _HG_Gene_geneid),
        ('otherid', _HG_Gene_otherid),
        ('symbol', _HG_Gene_symbol),
        ('aliases', _HG_Gene_aliases),
        ('title', _HG_Gene_title),
        ('taxid', _HG_Gene_taxid),
        ('prot-gi', _HG_Gene_prot_gi),
        ('prot-acc', _HG_Gene_prot_acc),
        ('prot-len', _HG_Gene_prot_len),
        ('nuc-gi', _HG_Gene_nuc_gi),
        ('nuc-acc', _HG_Gene_nuc_acc),
        ('gene-links', _HG_Gene_gene_links),
        ('prot-links', _HG_Gene_prot_links),
        ('domains', _HG_Gene_domains),
        ('chr', _HG_Gene_chr),
        ('location', _HG_Gene_location),
        ('locus-tag', _HG_Gene_locus_tag),
        ])
    HG_Gene._ext = None
    
    #-----< HG-Stats >-----#
    HG_Stats = SEQ(name='HG-Stats', mode=MODE_TYPE)
    _HG_Stats_gi1 = INT(name='gi1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HG_Stats_gi2 = INT(name='gi2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HG_Stats_nuc_change = REAL(name='nuc-change', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _HG_Stats_nuc_change_jc = REAL(name='nuc-change-jc', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _HG_Stats_prot_change = REAL(name='prot-change', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _HG_Stats_ka = REAL(name='ka', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _HG_Stats_ks = REAL(name='ks', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _HG_Stats_knr = REAL(name='knr', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _HG_Stats_knc = REAL(name='knc', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _HG_Stats_recip_best = BOOL(name='recip-best', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    HG_Stats._cont = ASN1Dict([
        ('gi1', _HG_Stats_gi1),
        ('gi2', _HG_Stats_gi2),
        ('nuc-change', _HG_Stats_nuc_change),
        ('nuc-change-jc', _HG_Stats_nuc_change_jc),
        ('prot-change', _HG_Stats_prot_change),
        ('ka', _HG_Stats_ka),
        ('ks', _HG_Stats_ks),
        ('knr', _HG_Stats_knr),
        ('knc', _HG_Stats_knc),
        ('recip-best', _HG_Stats_recip_best),
        ])
    HG_Stats._ext = None
    
    #-----< HG-Commentary >-----#
    HG_Commentary = SEQ(name='HG-Commentary', mode=MODE_TYPE)
    _HG_Commentary_link = SEQ(name='link', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HomoloGene', 'HG-Link')))
    _HG_Commentary_description = STR_VIS(name='description', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Commentary_caption = STR_VIS(name='caption', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Commentary_provider = STR_VIS(name='provider', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Commentary_other_links = SET_OF(name='other-links', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __HG_Commentary_other_links__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('HomoloGene', 'HG-Link')))
    _HG_Commentary_other_links._cont = __HG_Commentary_other_links__item_
    _HG_Commentary_other_commentaries = SET_OF(name='other-commentaries', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __HG_Commentary_other_commentaries__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('HomoloGene', 'HG-Commentary')))
    _HG_Commentary_other_commentaries._cont = __HG_Commentary_other_commentaries__item_
    _HG_Commentary_taxid = INT(name='taxid', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Commentary_geneid = INT(name='geneid', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    HG_Commentary._cont = ASN1Dict([
        ('link', _HG_Commentary_link),
        ('description', _HG_Commentary_description),
        ('caption', _HG_Commentary_caption),
        ('provider', _HG_Commentary_provider),
        ('other-links', _HG_Commentary_other_links),
        ('other-commentaries', _HG_Commentary_other_commentaries),
        ('taxid', _HG_Commentary_taxid),
        ('geneid', _HG_Commentary_geneid),
        ])
    HG_Commentary._ext = None
    
    #-----< HG-CommentarySet >-----#
    HG_CommentarySet = SEQ(name='HG-CommentarySet', mode=MODE_TYPE)
    _HG_CommentarySet_hg_id = INT(name='hg-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_CommentarySet_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HG_CommentarySet_commentaries = SET_OF(name='commentaries', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __HG_CommentarySet_commentaries__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('HomoloGene', 'HG-Commentary')))
    _HG_CommentarySet_commentaries._cont = __HG_CommentarySet_commentaries__item_
    HG_CommentarySet._cont = ASN1Dict([
        ('hg-id', _HG_CommentarySet_hg_id),
        ('title', _HG_CommentarySet_title),
        ('commentaries', _HG_CommentarySet_commentaries),
        ])
    HG_CommentarySet._ext = None
    
    #-----< HG-CommentaryContainer >-----#
    HG_CommentaryContainer = SET_OF(name='HG-CommentaryContainer', mode=MODE_TYPE)
    _HG_CommentaryContainer__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('HomoloGene', 'HG-CommentarySet')))
    HG_CommentaryContainer._cont = _HG_CommentaryContainer__item_
    
    #-----< HG-Link >-----#
    HG_Link = SEQ(name='HG-Link', mode=MODE_TYPE)
    _HG_Link_hypertext = STR_VIS(name='hypertext', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HG_Link_url = STR_VIS(name='url', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    HG_Link._cont = ASN1Dict([
        ('hypertext', _HG_Link_hypertext),
        ('url', _HG_Link_url),
        ])
    HG_Link._ext = None
    
    #-----< HG-Domain >-----#
    HG_Domain = SEQ(name='HG-Domain', mode=MODE_TYPE)
    _HG_Domain_begin = INT(name='begin', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HG_Domain_end = INT(name='end', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HG_Domain_pssm_id = INT(name='pssm-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Domain_cdd_id = STR_VIS(name='cdd-id', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Domain_cdd_name = STR_VIS(name='cdd-name', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    HG_Domain._cont = ASN1Dict([
        ('begin', _HG_Domain_begin),
        ('end', _HG_Domain_end),
        ('pssm-id', _HG_Domain_pssm_id),
        ('cdd-id', _HG_Domain_cdd_id),
        ('cdd-name', _HG_Domain_cdd_name),
        ])
    HG_Domain._ext = None
    
    #-----< HG-Node >-----#
    HG_Node = SEQ(name='HG-Node', mode=MODE_TYPE)
    _HG_Node_type = ENUM(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HG_Node_type._cont = ASN1Dict([('family', 0), ('ortholog', 1), ('paralog', 2), ('leaf', 3)])
    _HG_Node_type._ext = None
    _HG_Node_id = SEQ(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HomoloGene', 'HG-Node-id')))
    _HG_Node_caption = STR_VIS(name='caption', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Node_current_node = BOOL(name='current-node', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _HG_Node_children = SET_OF(name='children', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __HG_Node_children__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('HomoloGene', 'HG-Node')))
    _HG_Node_children._cont = __HG_Node_children__item_
    _HG_Node_branch_len = INT(name='branch-len', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    HG_Node._cont = ASN1Dict([
        ('type', _HG_Node_type),
        ('id', _HG_Node_id),
        ('caption', _HG_Node_caption),
        ('current-node', _HG_Node_current_node),
        ('children', _HG_Node_children),
        ('branch-len', _HG_Node_branch_len),
        ])
    HG_Node._ext = None
    
    #-----< HG-Node-id >-----#
    HG_Node_id = SEQ(name='HG-Node-id', mode=MODE_TYPE)
    _HG_Node_id_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HG_Node_id_id_type = ENUM(name='id-type', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HG_Node_id_id_type._cont = ASN1Dict([('none', 0), ('geneid', 1), ('hid', 2)])
    _HG_Node_id_id_type._ext = None
    HG_Node_id._cont = ASN1Dict([
        ('id', _HG_Node_id_id),
        ('id-type', _HG_Node_id_id_type),
        ])
    HG_Node_id._ext = None
    
    #-----< HG-Alignment >-----#
    HG_Alignment = SEQ(name='HG-Alignment', mode=MODE_TYPE)
    _HG_Alignment_hg_id = INT(name='hg-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HG_Alignment_alignment = SEQ(name='alignment', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqalign', 'Seq-align')))
    HG_Alignment._cont = ASN1Dict([
        ('hg-id', _HG_Alignment_hg_id),
        ('alignment', _HG_Alignment_alignment),
        ])
    HG_Alignment._ext = None
    
    #-----< HG-AlignmentSet >-----#
    HG_AlignmentSet = SET_OF(name='HG-AlignmentSet', mode=MODE_TYPE)
    _HG_AlignmentSet__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('HomoloGene', 'HG-Alignment')))
    HG_AlignmentSet._cont = _HG_AlignmentSet__item_
    
    _all_ = [
        __HG_EntrySet_entries__item_,
        _HG_EntrySet_entries,
        HG_EntrySet,
        _HG_Entry_hg_id,
        _HG_Entry_version,
        _HG_Entry_title,
        _HG_Entry_caption,
        _HG_Entry_taxid,
        __HG_Entry_genes__item_,
        _HG_Entry_genes,
        _HG_Entry_cr_date,
        _HG_Entry_up_date,
        __HG_Entry_distances__item_,
        _HG_Entry_distances,
        __HG_Entry_commentaries__item_,
        _HG_Entry_commentaries,
        __HG_Entry_warnings__item_,
        _HG_Entry_warnings,
        _HG_Entry_node,
        HG_Entry,
        _HG_Gene_geneid,
        _HG_Gene_otherid,
        _HG_Gene_symbol,
        __HG_Gene_aliases__item_,
        _HG_Gene_aliases,
        _HG_Gene_title,
        _HG_Gene_taxid,
        _HG_Gene_prot_gi,
        _HG_Gene_prot_acc,
        _HG_Gene_prot_len,
        _HG_Gene_nuc_gi,
        _HG_Gene_nuc_acc,
        __HG_Gene_gene_links__item_,
        _HG_Gene_gene_links,
        __HG_Gene_prot_links__item_,
        _HG_Gene_prot_links,
        __HG_Gene_domains__item_,
        _HG_Gene_domains,
        _HG_Gene_chr,
        _HG_Gene_location,
        _HG_Gene_locus_tag,
        HG_Gene,
        _HG_Stats_gi1,
        _HG_Stats_gi2,
        _HG_Stats_nuc_change,
        _HG_Stats_nuc_change_jc,
        _HG_Stats_prot_change,
        _HG_Stats_ka,
        _HG_Stats_ks,
        _HG_Stats_knr,
        _HG_Stats_knc,
        _HG_Stats_recip_best,
        HG_Stats,
        _HG_Commentary_link,
        _HG_Commentary_description,
        _HG_Commentary_caption,
        _HG_Commentary_provider,
        __HG_Commentary_other_links__item_,
        _HG_Commentary_other_links,
        __HG_Commentary_other_commentaries__item_,
        _HG_Commentary_other_commentaries,
        _HG_Commentary_taxid,
        _HG_Commentary_geneid,
        HG_Commentary,
        _HG_CommentarySet_hg_id,
        _HG_CommentarySet_title,
        __HG_CommentarySet_commentaries__item_,
        _HG_CommentarySet_commentaries,
        HG_CommentarySet,
        _HG_CommentaryContainer__item_,
        HG_CommentaryContainer,
        _HG_Link_hypertext,
        _HG_Link_url,
        HG_Link,
        _HG_Domain_begin,
        _HG_Domain_end,
        _HG_Domain_pssm_id,
        _HG_Domain_cdd_id,
        _HG_Domain_cdd_name,
        HG_Domain,
        _HG_Node_type,
        _HG_Node_id,
        _HG_Node_caption,
        _HG_Node_current_node,
        __HG_Node_children__item_,
        _HG_Node_children,
        _HG_Node_branch_len,
        HG_Node,
        _HG_Node_id_id,
        _HG_Node_id_id_type,
        HG_Node_id,
        _HG_Alignment_hg_id,
        _HG_Alignment_alignment,
        HG_Alignment,
        _HG_AlignmentSet__item_,
        HG_AlignmentSet,
    ]

class NCBI_ID1Access:

    _name_  = 'NCBI-ID1Access'
    _oid_   = []
    
    _obj_ = [
        'ID1server-request',
        'ID1server-maxcomplex',
        'Entry-complexities',
        'ID1Seq-hist',
        'ID1server-back',
        'ID1server-debug',
        'ID1blob-info',
        'ID1SeqEntry-info',
        ]
    _type_ = [
        'ID1server-request',
        'ID1server-maxcomplex',
        'Entry-complexities',
        'ID1Seq-hist',
        'ID1server-back',
        'ID1server-debug',
        'ID1blob-info',
        'ID1SeqEntry-info',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< ID1server-request >-----#
    ID1server_request = CHOICE(name='ID1server-request', mode=MODE_TYPE)
    _ID1server_request_init = NULL(name='init', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1server_request_getgi = CHOICE(name='getgi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _ID1server_request_getsefromgi = SEQ(name='getsefromgi', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID1Access', 'ID1server-maxcomplex')))
    _ID1server_request_fini = NULL(name='fini', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1server_request_getseqidsfromgi = INT(name='getseqidsfromgi', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1server_request_getgihist = INT(name='getgihist', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1server_request_getgirev = INT(name='getgirev', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1server_request_getgistate = INT(name='getgistate', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1server_request_getsewithinfo = SEQ(name='getsewithinfo', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID1Access', 'ID1server-maxcomplex')))
    _ID1server_request_getblobinfo = SEQ(name='getblobinfo', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID1Access', 'ID1server-maxcomplex')))
    ID1server_request._cont = ASN1Dict([
        ('init', _ID1server_request_init),
        ('getgi', _ID1server_request_getgi),
        ('getsefromgi', _ID1server_request_getsefromgi),
        ('fini', _ID1server_request_fini),
        ('getseqidsfromgi', _ID1server_request_getseqidsfromgi),
        ('getgihist', _ID1server_request_getgihist),
        ('getgirev', _ID1server_request_getgirev),
        ('getgistate', _ID1server_request_getgistate),
        ('getsewithinfo', _ID1server_request_getsewithinfo),
        ('getblobinfo', _ID1server_request_getblobinfo),
        ])
    ID1server_request._ext = None
    
    #-----< ID1server-maxcomplex >-----#
    ID1server_maxcomplex = SEQ(name='ID1server-maxcomplex', mode=MODE_TYPE)
    _ID1server_maxcomplex_maxplex = INT(name='maxplex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID1Access', 'Entry-complexities')))
    _ID1server_maxcomplex_gi = INT(name='gi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1server_maxcomplex_ent = INT(name='ent', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ID1server_maxcomplex_sat = STR_VIS(name='sat', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ID1server_maxcomplex._cont = ASN1Dict([
        ('maxplex', _ID1server_maxcomplex_maxplex),
        ('gi', _ID1server_maxcomplex_gi),
        ('ent', _ID1server_maxcomplex_ent),
        ('sat', _ID1server_maxcomplex_sat),
        ])
    ID1server_maxcomplex._ext = None
    
    #-----< Entry-complexities >-----#
    Entry_complexities = INT(name='Entry-complexities', mode=MODE_TYPE)
    Entry_complexities._cont = ASN1Dict([('entry', 0), ('bioseq', 1), ('bioseq-set', 2), ('nuc-prot', 3), ('pub-set', 4)])
    
    #-----< ID1Seq-hist >-----#
    ID1Seq_hist = SEQ(name='ID1Seq-hist', mode=MODE_TYPE)
    _ID1Seq_hist_hist = SEQ(name='hist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Seq-hist')))
    ID1Seq_hist._cont = ASN1Dict([
        ('hist', _ID1Seq_hist_hist),
        ])
    ID1Seq_hist._ext = None
    
    #-----< ID1server-back >-----#
    ID1server_back = CHOICE(name='ID1server-back', mode=MODE_TYPE)
    _ID1server_back_init = NULL(name='init', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1server_back_error = INT(name='error', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1server_back_gotgi = INT(name='gotgi', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1server_back_gotseqentry = CHOICE(name='gotseqentry', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')))
    _ID1server_back_gotdeadseqentry = CHOICE(name='gotdeadseqentry', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')))
    _ID1server_back_fini = NULL(name='fini', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1server_back_gistate = INT(name='gistate', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1server_back_ids = SET_OF(name='ids', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID1server_back_ids__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _ID1server_back_ids._cont = __ID1server_back_ids__item_
    _ID1server_back_gihist = SET_OF(name='gihist', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID1server_back_gihist__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-ID1Access', 'ID1Seq-hist')))
    _ID1server_back_gihist._cont = __ID1server_back_gihist__item_
    _ID1server_back_girevhist = SET_OF(name='girevhist', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID1server_back_girevhist__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-ID1Access', 'ID1Seq-hist')))
    _ID1server_back_girevhist._cont = __ID1server_back_girevhist__item_
    _ID1server_back_gotsewithinfo = SEQ(name='gotsewithinfo', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID1Access', 'ID1SeqEntry-info')))
    _ID1server_back_gotblobinfo = SEQ(name='gotblobinfo', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID1Access', 'ID1blob-info')))
    ID1server_back._cont = ASN1Dict([
        ('init', _ID1server_back_init),
        ('error', _ID1server_back_error),
        ('gotgi', _ID1server_back_gotgi),
        ('gotseqentry', _ID1server_back_gotseqentry),
        ('gotdeadseqentry', _ID1server_back_gotdeadseqentry),
        ('fini', _ID1server_back_fini),
        ('gistate', _ID1server_back_gistate),
        ('ids', _ID1server_back_ids),
        ('gihist', _ID1server_back_gihist),
        ('girevhist', _ID1server_back_girevhist),
        ('gotsewithinfo', _ID1server_back_gotsewithinfo),
        ('gotblobinfo', _ID1server_back_gotblobinfo),
        ])
    ID1server_back._ext = None
    
    #-----< ID1server-debug >-----#
    ID1server_debug = SET_OF(name='ID1server-debug', mode=MODE_TYPE)
    _ID1server_debug__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-ID1Access', 'ID1server-back')))
    ID1server_debug._cont = _ID1server_debug__item_
    
    #-----< ID1blob-info >-----#
    ID1blob_info = SEQ(name='ID1blob-info', mode=MODE_TYPE)
    _ID1blob_info_gi = INT(name='gi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1blob_info_sat = INT(name='sat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1blob_info_sat_key = INT(name='sat-key', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1blob_info_satname = STR_VIS(name='satname', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1blob_info_suppress = INT(name='suppress', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1blob_info_withdrawn = INT(name='withdrawn', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1blob_info_confidential = INT(name='confidential', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1blob_info_blob_state = INT(name='blob-state', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID1blob_info_comment = STR_VIS(name='comment', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ID1blob_info_extfeatmask = INT(name='extfeatmask', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ID1blob_info._cont = ASN1Dict([
        ('gi', _ID1blob_info_gi),
        ('sat', _ID1blob_info_sat),
        ('sat-key', _ID1blob_info_sat_key),
        ('satname', _ID1blob_info_satname),
        ('suppress', _ID1blob_info_suppress),
        ('withdrawn', _ID1blob_info_withdrawn),
        ('confidential', _ID1blob_info_confidential),
        ('blob-state', _ID1blob_info_blob_state),
        ('comment', _ID1blob_info_comment),
        ('extfeatmask', _ID1blob_info_extfeatmask),
        ])
    ID1blob_info._ext = None
    
    #-----< ID1SeqEntry-info >-----#
    ID1SeqEntry_info = SEQ(name='ID1SeqEntry-info', mode=MODE_TYPE)
    _ID1SeqEntry_info_blob_info = SEQ(name='blob-info', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID1Access', 'ID1blob-info')))
    _ID1SeqEntry_info_blob = CHOICE(name='blob', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')), opt=True)
    ID1SeqEntry_info._cont = ASN1Dict([
        ('blob-info', _ID1SeqEntry_info_blob_info),
        ('blob', _ID1SeqEntry_info_blob),
        ])
    ID1SeqEntry_info._ext = None
    
    _all_ = [
        _ID1server_request_init,
        _ID1server_request_getgi,
        _ID1server_request_getsefromgi,
        _ID1server_request_fini,
        _ID1server_request_getseqidsfromgi,
        _ID1server_request_getgihist,
        _ID1server_request_getgirev,
        _ID1server_request_getgistate,
        _ID1server_request_getsewithinfo,
        _ID1server_request_getblobinfo,
        ID1server_request,
        _ID1server_maxcomplex_maxplex,
        _ID1server_maxcomplex_gi,
        _ID1server_maxcomplex_ent,
        _ID1server_maxcomplex_sat,
        ID1server_maxcomplex,
        Entry_complexities,
        _ID1Seq_hist_hist,
        ID1Seq_hist,
        _ID1server_back_init,
        _ID1server_back_error,
        _ID1server_back_gotgi,
        _ID1server_back_gotseqentry,
        _ID1server_back_gotdeadseqentry,
        _ID1server_back_fini,
        _ID1server_back_gistate,
        __ID1server_back_ids__item_,
        _ID1server_back_ids,
        __ID1server_back_gihist__item_,
        _ID1server_back_gihist,
        __ID1server_back_girevhist__item_,
        _ID1server_back_girevhist,
        _ID1server_back_gotsewithinfo,
        _ID1server_back_gotblobinfo,
        ID1server_back,
        _ID1server_debug__item_,
        ID1server_debug,
        _ID1blob_info_gi,
        _ID1blob_info_sat,
        _ID1blob_info_sat_key,
        _ID1blob_info_satname,
        _ID1blob_info_suppress,
        _ID1blob_info_withdrawn,
        _ID1blob_info_confidential,
        _ID1blob_info_blob_state,
        _ID1blob_info_comment,
        _ID1blob_info_extfeatmask,
        ID1blob_info,
        _ID1SeqEntry_info_blob_info,
        _ID1SeqEntry_info_blob,
        ID1SeqEntry_info,
    ]

class NCBI_ID2Access:

    _name_  = 'NCBI-ID2Access'
    _oid_   = []
    
    _obj_ = [
        'ID2-Request-Packet',
        'ID2-Request',
        'ID2-Request-Get-Packages',
        'ID2-Request-Get-Seq-id',
        'ID2-Seq-id',
        'ID2-Request-Get-Blob-Id',
        'ID2-Request-Get-Blob-Info',
        'ID2-Request-ReGet-Blob',
        'ID2S-Request-Get-Chunks',
        'ID2-Get-Blob-Details',
        'ID2-Reply',
        'ID2-Error',
        'ID2-Reply-Get-Package',
        'ID2-Reply-Get-Seq-id',
        'ID2-Blob-State',
        'ID2-Reply-Get-Blob-Id',
        'ID2-Reply-Get-Blob-Seq-ids',
        'ID2-Reply-Get-Blob',
        'ID2S-Reply-Get-Split-Info',
        'ID2-Reply-ReGet-Blob',
        'ID2S-Reply-Get-Chunk',
        'ID2-Reply-Data',
        'ID2-Blob-Seq-ids',
        'ID2-Blob-Seq-id',
        'ID2-Blob-Id',
        'ID2-Params',
        'ID2-Param',
        ]
    _type_ = [
        'ID2-Request-Packet',
        'ID2-Request',
        'ID2-Request-Get-Packages',
        'ID2-Request-Get-Seq-id',
        'ID2-Seq-id',
        'ID2-Request-Get-Blob-Id',
        'ID2-Request-Get-Blob-Info',
        'ID2-Request-ReGet-Blob',
        'ID2S-Request-Get-Chunks',
        'ID2-Get-Blob-Details',
        'ID2-Reply',
        'ID2-Error',
        'ID2-Reply-Get-Package',
        'ID2-Reply-Get-Seq-id',
        'ID2-Blob-State',
        'ID2-Reply-Get-Blob-Id',
        'ID2-Reply-Get-Blob-Seq-ids',
        'ID2-Reply-Get-Blob',
        'ID2S-Reply-Get-Split-Info',
        'ID2-Reply-ReGet-Blob',
        'ID2S-Reply-Get-Chunk',
        'ID2-Reply-Data',
        'ID2-Blob-Seq-ids',
        'ID2-Blob-Seq-id',
        'ID2-Blob-Id',
        'ID2-Params',
        'ID2-Param',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< ID2-Request-Packet >-----#
    ID2_Request_Packet = SEQ_OF(name='ID2-Request-Packet', mode=MODE_TYPE)
    _ID2_Request_Packet__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Request')))
    ID2_Request_Packet._cont = _ID2_Request_Packet__item_
    
    #-----< ID2-Request >-----#
    ID2_Request = SEQ(name='ID2-Request', mode=MODE_TYPE)
    _ID2_Request_serial_number = INT(name='serial-number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ID2_Request_params = SEQ_OF(name='params', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Params')), opt=True)
    _ID2_Request_request = CHOICE(name='request', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __ID2_Request_request_init = NULL(name='init', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID2_Request_request_get_packages = SEQ(name='get-packages', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Request-Get-Packages')))
    __ID2_Request_request_get_seq_id = SEQ(name='get-seq-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Request-Get-Seq-id')))
    __ID2_Request_request_get_blob_id = SEQ(name='get-blob-id', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Request-Get-Blob-Id')))
    __ID2_Request_request_get_blob_info = SEQ(name='get-blob-info', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Request-Get-Blob-Info')))
    __ID2_Request_request_reget_blob = SEQ(name='reget-blob', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Request-ReGet-Blob')))
    __ID2_Request_request_get_chunks = SEQ(name='get-chunks', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2S-Request-Get-Chunks')))
    _ID2_Request_request._cont = ASN1Dict([
        ('init', __ID2_Request_request_init),
        ('get-packages', __ID2_Request_request_get_packages),
        ('get-seq-id', __ID2_Request_request_get_seq_id),
        ('get-blob-id', __ID2_Request_request_get_blob_id),
        ('get-blob-info', __ID2_Request_request_get_blob_info),
        ('reget-blob', __ID2_Request_request_reget_blob),
        ('get-chunks', __ID2_Request_request_get_chunks),
        ])
    _ID2_Request_request._ext = None
    ID2_Request._cont = ASN1Dict([
        ('serial-number', _ID2_Request_serial_number),
        ('params', _ID2_Request_params),
        ('request', _ID2_Request_request),
        ])
    ID2_Request._ext = None
    
    #-----< ID2-Request-Get-Packages >-----#
    ID2_Request_Get_Packages = SEQ(name='ID2-Request-Get-Packages', mode=MODE_TYPE)
    _ID2_Request_Get_Packages_names = SEQ_OF(name='names', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ID2_Request_Get_Packages_names__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _ID2_Request_Get_Packages_names._cont = __ID2_Request_Get_Packages_names__item_
    _ID2_Request_Get_Packages_no_contents = NULL(name='no-contents', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ID2_Request_Get_Packages._cont = ASN1Dict([
        ('names', _ID2_Request_Get_Packages_names),
        ('no-contents', _ID2_Request_Get_Packages_no_contents),
        ])
    ID2_Request_Get_Packages._ext = None
    
    #-----< ID2-Request-Get-Seq-id >-----#
    ID2_Request_Get_Seq_id = SEQ(name='ID2-Request-Get-Seq-id', mode=MODE_TYPE)
    _ID2_Request_Get_Seq_id_seq_id = CHOICE(name='seq-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Seq-id')))
    _ID2_Request_Get_Seq_id_seq_id_type = INT(name='seq-id-type', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _ID2_Request_Get_Seq_id_seq_id_type._cont = ASN1Dict([('any', 0), ('gi', 1), ('text', 2), ('general', 4), ('all', 127), ('label', 128), ('taxid', 256), ('hash', 512)])
    ID2_Request_Get_Seq_id._cont = ASN1Dict([
        ('seq-id', _ID2_Request_Get_Seq_id_seq_id),
        ('seq-id-type', _ID2_Request_Get_Seq_id_seq_id_type),
        ])
    ID2_Request_Get_Seq_id._ext = None
    
    #-----< ID2-Seq-id >-----#
    ID2_Seq_id = CHOICE(name='ID2-Seq-id', mode=MODE_TYPE)
    _ID2_Seq_id_string = STR_VIS(name='string', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2_Seq_id_seq_id = CHOICE(name='seq-id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    ID2_Seq_id._cont = ASN1Dict([
        ('string', _ID2_Seq_id_string),
        ('seq-id', _ID2_Seq_id_seq_id),
        ])
    ID2_Seq_id._ext = None
    
    #-----< ID2-Request-Get-Blob-Id >-----#
    ID2_Request_Get_Blob_Id = SEQ(name='ID2-Request-Get-Blob-Id', mode=MODE_TYPE)
    _ID2_Request_Get_Blob_Id_seq_id = SEQ(name='seq-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Request-Get-Seq-id')))
    _ID2_Request_Get_Blob_Id_sources = SEQ_OF(name='sources', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ID2_Request_Get_Blob_Id_sources__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _ID2_Request_Get_Blob_Id_sources._cont = __ID2_Request_Get_Blob_Id_sources__item_
    _ID2_Request_Get_Blob_Id_external = NULL(name='external', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ID2_Request_Get_Blob_Id._cont = ASN1Dict([
        ('seq-id', _ID2_Request_Get_Blob_Id_seq_id),
        ('sources', _ID2_Request_Get_Blob_Id_sources),
        ('external', _ID2_Request_Get_Blob_Id_external),
        ])
    ID2_Request_Get_Blob_Id._ext = None
    
    #-----< ID2-Request-Get-Blob-Info >-----#
    ID2_Request_Get_Blob_Info = SEQ(name='ID2-Request-Get-Blob-Info', mode=MODE_TYPE)
    _ID2_Request_Get_Blob_Info_blob_id = CHOICE(name='blob-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __ID2_Request_Get_Blob_Info_blob_id_blob_id = SEQ(name='blob-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Blob-Id')))
    __ID2_Request_Get_Blob_Info_blob_id_resolve = SEQ(name='resolve', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ID2_Request_Get_Blob_Info_blob_id_resolve_request = SEQ(name='request', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Request-Get-Blob-Id')))
    ___ID2_Request_Get_Blob_Info_blob_id_resolve_exclude_blobs = SEQ_OF(name='exclude-blobs', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____ID2_Request_Get_Blob_Info_blob_id_resolve_exclude_blobs__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Blob-Id')))
    ___ID2_Request_Get_Blob_Info_blob_id_resolve_exclude_blobs._cont = ____ID2_Request_Get_Blob_Info_blob_id_resolve_exclude_blobs__item_
    __ID2_Request_Get_Blob_Info_blob_id_resolve._cont = ASN1Dict([
        ('request', ___ID2_Request_Get_Blob_Info_blob_id_resolve_request),
        ('exclude-blobs', ___ID2_Request_Get_Blob_Info_blob_id_resolve_exclude_blobs),
        ])
    __ID2_Request_Get_Blob_Info_blob_id_resolve._ext = None
    _ID2_Request_Get_Blob_Info_blob_id._cont = ASN1Dict([
        ('blob-id', __ID2_Request_Get_Blob_Info_blob_id_blob_id),
        ('resolve', __ID2_Request_Get_Blob_Info_blob_id_resolve),
        ])
    _ID2_Request_Get_Blob_Info_blob_id._ext = None
    _ID2_Request_Get_Blob_Info_get_seq_ids = NULL(name='get-seq-ids', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ID2_Request_Get_Blob_Info_get_data = SEQ(name='get-data', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Get-Blob-Details')), opt=True)
    ID2_Request_Get_Blob_Info._cont = ASN1Dict([
        ('blob-id', _ID2_Request_Get_Blob_Info_blob_id),
        ('get-seq-ids', _ID2_Request_Get_Blob_Info_get_seq_ids),
        ('get-data', _ID2_Request_Get_Blob_Info_get_data),
        ])
    ID2_Request_Get_Blob_Info._ext = None
    
    #-----< ID2-Request-ReGet-Blob >-----#
    ID2_Request_ReGet_Blob = SEQ(name='ID2-Request-ReGet-Blob', mode=MODE_TYPE)
    _ID2_Request_ReGet_Blob_blob_id = SEQ(name='blob-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Blob-Id')))
    _ID2_Request_ReGet_Blob_split_version = INT(name='split-version', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2_Request_ReGet_Blob_offset = INT(name='offset', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ID2_Request_ReGet_Blob._cont = ASN1Dict([
        ('blob-id', _ID2_Request_ReGet_Blob_blob_id),
        ('split-version', _ID2_Request_ReGet_Blob_split_version),
        ('offset', _ID2_Request_ReGet_Blob_offset),
        ])
    ID2_Request_ReGet_Blob._ext = None
    
    #-----< ID2S-Request-Get-Chunks >-----#
    ID2S_Request_Get_Chunks = SEQ(name='ID2S-Request-Get-Chunks', mode=MODE_TYPE)
    _ID2S_Request_Get_Chunks_blob_id = SEQ(name='blob-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Blob-Id')))
    _ID2S_Request_Get_Chunks_chunks = SEQ_OF(name='chunks', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID2S_Request_Get_Chunks_chunks__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Chunk-Id')))
    _ID2S_Request_Get_Chunks_chunks._cont = __ID2S_Request_Get_Chunks_chunks__item_
    _ID2S_Request_Get_Chunks_split_version = INT(name='split-version', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ID2S_Request_Get_Chunks._cont = ASN1Dict([
        ('blob-id', _ID2S_Request_Get_Chunks_blob_id),
        ('chunks', _ID2S_Request_Get_Chunks_chunks),
        ('split-version', _ID2S_Request_Get_Chunks_split_version),
        ])
    ID2S_Request_Get_Chunks._ext = None
    
    #-----< ID2-Get-Blob-Details >-----#
    ID2_Get_Blob_Details = SEQ(name='ID2-Get-Blob-Details', mode=MODE_TYPE)
    _ID2_Get_Blob_Details_location = CHOICE(name='location', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')), opt=True)
    _ID2_Get_Blob_Details_seq_class_level = INT(name='seq-class-level', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=1)
    _ID2_Get_Blob_Details_descr_level = INT(name='descr-level', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=1)
    _ID2_Get_Blob_Details_descr_type_mask = INT(name='descr-type-mask', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _ID2_Get_Blob_Details_annot_type_mask = INT(name='annot-type-mask', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _ID2_Get_Blob_Details_feat_type_mask = INT(name='feat-type-mask', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _ID2_Get_Blob_Details_sequence_level = ENUM(name='sequence-level', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default='none')
    _ID2_Get_Blob_Details_sequence_level._cont = ASN1Dict([('none', 0), ('seq-map', 1), ('seq-data', 2)])
    _ID2_Get_Blob_Details_sequence_level._ext = None
    ID2_Get_Blob_Details._cont = ASN1Dict([
        ('location', _ID2_Get_Blob_Details_location),
        ('seq-class-level', _ID2_Get_Blob_Details_seq_class_level),
        ('descr-level', _ID2_Get_Blob_Details_descr_level),
        ('descr-type-mask', _ID2_Get_Blob_Details_descr_type_mask),
        ('annot-type-mask', _ID2_Get_Blob_Details_annot_type_mask),
        ('feat-type-mask', _ID2_Get_Blob_Details_feat_type_mask),
        ('sequence-level', _ID2_Get_Blob_Details_sequence_level),
        ])
    ID2_Get_Blob_Details._ext = None
    
    #-----< ID2-Reply >-----#
    ID2_Reply = SEQ(name='ID2-Reply', mode=MODE_TYPE)
    _ID2_Reply_serial_number = INT(name='serial-number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ID2_Reply_params = SEQ_OF(name='params', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Params')), opt=True)
    _ID2_Reply_error = SEQ_OF(name='error', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ID2_Reply_error__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Error')))
    _ID2_Reply_error._cont = __ID2_Reply_error__item_
    _ID2_Reply_end_of_reply = NULL(name='end-of-reply', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ID2_Reply_reply = CHOICE(name='reply', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __ID2_Reply_reply_init = NULL(name='init', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID2_Reply_reply_empty = NULL(name='empty', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID2_Reply_reply_get_package = SEQ(name='get-package', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Reply-Get-Package')))
    __ID2_Reply_reply_get_seq_id = SEQ(name='get-seq-id', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Reply-Get-Seq-id')))
    __ID2_Reply_reply_get_blob_id = SEQ(name='get-blob-id', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Reply-Get-Blob-Id')))
    __ID2_Reply_reply_get_blob_seq_ids = SEQ(name='get-blob-seq-ids', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Reply-Get-Blob-Seq-ids')))
    __ID2_Reply_reply_get_blob = SEQ(name='get-blob', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Reply-Get-Blob')))
    __ID2_Reply_reply_reget_blob = SEQ(name='reget-blob', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Reply-ReGet-Blob')))
    __ID2_Reply_reply_get_split_info = SEQ(name='get-split-info', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2S-Reply-Get-Split-Info')))
    __ID2_Reply_reply_get_chunk = SEQ(name='get-chunk', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2S-Reply-Get-Chunk')))
    _ID2_Reply_reply._cont = ASN1Dict([
        ('init', __ID2_Reply_reply_init),
        ('empty', __ID2_Reply_reply_empty),
        ('get-package', __ID2_Reply_reply_get_package),
        ('get-seq-id', __ID2_Reply_reply_get_seq_id),
        ('get-blob-id', __ID2_Reply_reply_get_blob_id),
        ('get-blob-seq-ids', __ID2_Reply_reply_get_blob_seq_ids),
        ('get-blob', __ID2_Reply_reply_get_blob),
        ('reget-blob', __ID2_Reply_reply_reget_blob),
        ('get-split-info', __ID2_Reply_reply_get_split_info),
        ('get-chunk', __ID2_Reply_reply_get_chunk),
        ])
    _ID2_Reply_reply._ext = None
    _ID2_Reply_discard = ENUM(name='discard', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ID2_Reply_discard._cont = ASN1Dict([('reply', 0), ('last-octet-string', 1), ('nothing', 2)])
    _ID2_Reply_discard._ext = None
    ID2_Reply._cont = ASN1Dict([
        ('serial-number', _ID2_Reply_serial_number),
        ('params', _ID2_Reply_params),
        ('error', _ID2_Reply_error),
        ('end-of-reply', _ID2_Reply_end_of_reply),
        ('reply', _ID2_Reply_reply),
        ('discard', _ID2_Reply_discard),
        ])
    ID2_Reply._ext = None
    
    #-----< ID2-Error >-----#
    ID2_Error = SEQ(name='ID2-Error', mode=MODE_TYPE)
    _ID2_Error_severity = ENUM(name='severity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2_Error_severity._cont = ASN1Dict([('warning', 1), ('failed-command', 2), ('failed-connection', 3), ('failed-server', 4), ('no-data', 5), ('restricted-data', 6), ('unsupported-command', 7), ('invalid-arguments', 8)])
    _ID2_Error_severity._ext = None
    _ID2_Error_retry_delay = INT(name='retry-delay', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ID2_Error_message = STR_VIS(name='message', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ID2_Error._cont = ASN1Dict([
        ('severity', _ID2_Error_severity),
        ('retry-delay', _ID2_Error_retry_delay),
        ('message', _ID2_Error_message),
        ])
    ID2_Error._ext = None
    
    #-----< ID2-Reply-Get-Package >-----#
    ID2_Reply_Get_Package = SEQ(name='ID2-Reply-Get-Package', mode=MODE_TYPE)
    _ID2_Reply_Get_Package_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2_Reply_Get_Package_params = SEQ_OF(name='params', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Params')), opt=True)
    ID2_Reply_Get_Package._cont = ASN1Dict([
        ('name', _ID2_Reply_Get_Package_name),
        ('params', _ID2_Reply_Get_Package_params),
        ])
    ID2_Reply_Get_Package._ext = None
    
    #-----< ID2-Reply-Get-Seq-id >-----#
    ID2_Reply_Get_Seq_id = SEQ(name='ID2-Reply-Get-Seq-id', mode=MODE_TYPE)
    _ID2_Reply_Get_Seq_id_request = SEQ(name='request', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Request-Get-Seq-id')))
    _ID2_Reply_Get_Seq_id_seq_id = SEQ_OF(name='seq-id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ID2_Reply_Get_Seq_id_seq_id__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _ID2_Reply_Get_Seq_id_seq_id._cont = __ID2_Reply_Get_Seq_id_seq_id__item_
    _ID2_Reply_Get_Seq_id_end_of_reply = NULL(name='end-of-reply', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ID2_Reply_Get_Seq_id._cont = ASN1Dict([
        ('request', _ID2_Reply_Get_Seq_id_request),
        ('seq-id', _ID2_Reply_Get_Seq_id_seq_id),
        ('end-of-reply', _ID2_Reply_Get_Seq_id_end_of_reply),
        ])
    ID2_Reply_Get_Seq_id._ext = None
    
    #-----< ID2-Blob-State >-----#
    ID2_Blob_State = ENUM(name='ID2-Blob-State', mode=MODE_TYPE)
    ID2_Blob_State._cont = ASN1Dict([('live', 0), ('suppressed-temp', 1), ('suppressed', 2), ('dead', 3), ('protected', 4), ('withdrawn', 5)])
    ID2_Blob_State._ext = None
    
    #-----< ID2-Reply-Get-Blob-Id >-----#
    ID2_Reply_Get_Blob_Id = SEQ(name='ID2-Reply-Get-Blob-Id', mode=MODE_TYPE)
    _ID2_Reply_Get_Blob_Id_seq_id = CHOICE(name='seq-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _ID2_Reply_Get_Blob_Id_blob_id = SEQ(name='blob-id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Blob-Id')), opt=True)
    _ID2_Reply_Get_Blob_Id_split_version = INT(name='split-version', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _ID2_Reply_Get_Blob_Id_annot_info = SEQ_OF(name='annot-info', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ID2_Reply_Get_Blob_Id_annot_info__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Seq-annot-Info')))
    _ID2_Reply_Get_Blob_Id_annot_info._cont = __ID2_Reply_Get_Blob_Id_annot_info__item_
    _ID2_Reply_Get_Blob_Id_end_of_reply = NULL(name='end-of-reply', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ID2_Reply_Get_Blob_Id_blob_state = INT(name='blob-state', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ID2_Reply_Get_Blob_Id._cont = ASN1Dict([
        ('seq-id', _ID2_Reply_Get_Blob_Id_seq_id),
        ('blob-id', _ID2_Reply_Get_Blob_Id_blob_id),
        ('split-version', _ID2_Reply_Get_Blob_Id_split_version),
        ('annot-info', _ID2_Reply_Get_Blob_Id_annot_info),
        ('end-of-reply', _ID2_Reply_Get_Blob_Id_end_of_reply),
        ('blob-state', _ID2_Reply_Get_Blob_Id_blob_state),
        ])
    ID2_Reply_Get_Blob_Id._ext = None
    
    #-----< ID2-Reply-Get-Blob-Seq-ids >-----#
    ID2_Reply_Get_Blob_Seq_ids = SEQ(name='ID2-Reply-Get-Blob-Seq-ids', mode=MODE_TYPE)
    _ID2_Reply_Get_Blob_Seq_ids_blob_id = SEQ(name='blob-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Blob-Id')))
    _ID2_Reply_Get_Blob_Seq_ids_ids = SEQ(name='ids', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Reply-Data')), opt=True)
    ID2_Reply_Get_Blob_Seq_ids._cont = ASN1Dict([
        ('blob-id', _ID2_Reply_Get_Blob_Seq_ids_blob_id),
        ('ids', _ID2_Reply_Get_Blob_Seq_ids_ids),
        ])
    ID2_Reply_Get_Blob_Seq_ids._ext = None
    
    #-----< ID2-Reply-Get-Blob >-----#
    ID2_Reply_Get_Blob = SEQ(name='ID2-Reply-Get-Blob', mode=MODE_TYPE)
    _ID2_Reply_Get_Blob_blob_id = SEQ(name='blob-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Blob-Id')))
    _ID2_Reply_Get_Blob_split_version = INT(name='split-version', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _ID2_Reply_Get_Blob_data = SEQ(name='data', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Reply-Data')), opt=True)
    _ID2_Reply_Get_Blob_blob_state = INT(name='blob-state', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ID2_Reply_Get_Blob._cont = ASN1Dict([
        ('blob-id', _ID2_Reply_Get_Blob_blob_id),
        ('split-version', _ID2_Reply_Get_Blob_split_version),
        ('data', _ID2_Reply_Get_Blob_data),
        ('blob-state', _ID2_Reply_Get_Blob_blob_state),
        ])
    ID2_Reply_Get_Blob._ext = None
    
    #-----< ID2S-Reply-Get-Split-Info >-----#
    ID2S_Reply_Get_Split_Info = SEQ(name='ID2S-Reply-Get-Split-Info', mode=MODE_TYPE)
    _ID2S_Reply_Get_Split_Info_blob_id = SEQ(name='blob-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Blob-Id')))
    _ID2S_Reply_Get_Split_Info_split_version = INT(name='split-version', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2S_Reply_Get_Split_Info_data = SEQ(name='data', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Reply-Data')), opt=True)
    _ID2S_Reply_Get_Split_Info_blob_state = INT(name='blob-state', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ID2S_Reply_Get_Split_Info._cont = ASN1Dict([
        ('blob-id', _ID2S_Reply_Get_Split_Info_blob_id),
        ('split-version', _ID2S_Reply_Get_Split_Info_split_version),
        ('data', _ID2S_Reply_Get_Split_Info_data),
        ('blob-state', _ID2S_Reply_Get_Split_Info_blob_state),
        ])
    ID2S_Reply_Get_Split_Info._ext = None
    
    #-----< ID2-Reply-ReGet-Blob >-----#
    ID2_Reply_ReGet_Blob = SEQ(name='ID2-Reply-ReGet-Blob', mode=MODE_TYPE)
    _ID2_Reply_ReGet_Blob_blob_id = SEQ(name='blob-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Blob-Id')))
    _ID2_Reply_ReGet_Blob_split_version = INT(name='split-version', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2_Reply_ReGet_Blob_offset = INT(name='offset', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2_Reply_ReGet_Blob_data = SEQ(name='data', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Reply-Data')), opt=True)
    ID2_Reply_ReGet_Blob._cont = ASN1Dict([
        ('blob-id', _ID2_Reply_ReGet_Blob_blob_id),
        ('split-version', _ID2_Reply_ReGet_Blob_split_version),
        ('offset', _ID2_Reply_ReGet_Blob_offset),
        ('data', _ID2_Reply_ReGet_Blob_data),
        ])
    ID2_Reply_ReGet_Blob._ext = None
    
    #-----< ID2S-Reply-Get-Chunk >-----#
    ID2S_Reply_Get_Chunk = SEQ(name='ID2S-Reply-Get-Chunk', mode=MODE_TYPE)
    _ID2S_Reply_Get_Chunk_blob_id = SEQ(name='blob-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Blob-Id')))
    _ID2S_Reply_Get_Chunk_chunk_id = INT(name='chunk-id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Chunk-Id')))
    _ID2S_Reply_Get_Chunk_data = SEQ(name='data', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Reply-Data')), opt=True)
    ID2S_Reply_Get_Chunk._cont = ASN1Dict([
        ('blob-id', _ID2S_Reply_Get_Chunk_blob_id),
        ('chunk-id', _ID2S_Reply_Get_Chunk_chunk_id),
        ('data', _ID2S_Reply_Get_Chunk_data),
        ])
    ID2S_Reply_Get_Chunk._ext = None
    
    #-----< ID2-Reply-Data >-----#
    ID2_Reply_Data = SEQ(name='ID2-Reply-Data', mode=MODE_TYPE)
    _ID2_Reply_Data_data_type = INT(name='data-type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _ID2_Reply_Data_data_type._cont = ASN1Dict([('seq-entry', 0), ('seq-annot', 1), ('id2s-split-info', 2), ('id2s-chunk', 3)])
    _ID2_Reply_Data_data_format = INT(name='data-format', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _ID2_Reply_Data_data_format._cont = ASN1Dict([('asn-binary', 0), ('asn-text', 1), ('xml', 2)])
    _ID2_Reply_Data_data_compression = INT(name='data-compression', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _ID2_Reply_Data_data_compression._cont = ASN1Dict([('none', 0), ('gzip', 1), ('nlmzip', 2), ('bzip2', 3)])
    _ID2_Reply_Data_data = SEQ_OF(name='data', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID2_Reply_Data_data__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _ID2_Reply_Data_data._cont = __ID2_Reply_Data_data__item_
    ID2_Reply_Data._cont = ASN1Dict([
        ('data-type', _ID2_Reply_Data_data_type),
        ('data-format', _ID2_Reply_Data_data_format),
        ('data-compression', _ID2_Reply_Data_data_compression),
        ('data', _ID2_Reply_Data_data),
        ])
    ID2_Reply_Data._ext = None
    
    #-----< ID2-Blob-Seq-ids >-----#
    ID2_Blob_Seq_ids = SEQ_OF(name='ID2-Blob-Seq-ids', mode=MODE_TYPE)
    _ID2_Blob_Seq_ids__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Blob-Seq-id')))
    ID2_Blob_Seq_ids._cont = _ID2_Blob_Seq_ids__item_
    
    #-----< ID2-Blob-Seq-id >-----#
    ID2_Blob_Seq_id = SEQ(name='ID2-Blob-Seq-id', mode=MODE_TYPE)
    _ID2_Blob_Seq_id_seq_id = CHOICE(name='seq-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _ID2_Blob_Seq_id_replaced = NULL(name='replaced', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ID2_Blob_Seq_id._cont = ASN1Dict([
        ('seq-id', _ID2_Blob_Seq_id_seq_id),
        ('replaced', _ID2_Blob_Seq_id_replaced),
        ])
    ID2_Blob_Seq_id._ext = None
    
    #-----< ID2-Blob-Id >-----#
    ID2_Blob_Id = SEQ(name='ID2-Blob-Id', mode=MODE_TYPE)
    _ID2_Blob_Id_sat = INT(name='sat', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2_Blob_Id_sub_sat = INT(name='sub-sat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _ID2_Blob_Id_sub_sat._cont = ASN1Dict([('main', 0), ('snp', 1), ('snp-graph', 4), ('cdd', 8), ('mgc', 16), ('hprd', 32), ('sts', 64), ('trna', 128), ('exon', 512)])
    _ID2_Blob_Id_sat_key = INT(name='sat-key', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2_Blob_Id_version = INT(name='version', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ID2_Blob_Id._cont = ASN1Dict([
        ('sat', _ID2_Blob_Id_sat),
        ('sub-sat', _ID2_Blob_Id_sub_sat),
        ('sat-key', _ID2_Blob_Id_sat_key),
        ('version', _ID2_Blob_Id_version),
        ])
    ID2_Blob_Id._ext = None
    
    #-----< ID2-Params >-----#
    ID2_Params = SEQ_OF(name='ID2-Params', mode=MODE_TYPE)
    _ID2_Params__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-ID2Access', 'ID2-Param')))
    ID2_Params._cont = _ID2_Params__item_
    
    #-----< ID2-Param >-----#
    ID2_Param = SEQ(name='ID2-Param', mode=MODE_TYPE)
    _ID2_Param_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2_Param_value = SEQ_OF(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ID2_Param_value__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _ID2_Param_value._cont = __ID2_Param_value__item_
    _ID2_Param_type = ENUM(name='type', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default='set-value')
    _ID2_Param_type._cont = ASN1Dict([('set-value', 1), ('get-value', 2), ('force-value', 3), ('use-package', 4)])
    _ID2_Param_type._ext = None
    ID2_Param._cont = ASN1Dict([
        ('name', _ID2_Param_name),
        ('value', _ID2_Param_value),
        ('type', _ID2_Param_type),
        ])
    ID2_Param._ext = None
    
    _all_ = [
        _ID2_Request_Packet__item_,
        ID2_Request_Packet,
        _ID2_Request_serial_number,
        _ID2_Request_params,
        __ID2_Request_request_init,
        __ID2_Request_request_get_packages,
        __ID2_Request_request_get_seq_id,
        __ID2_Request_request_get_blob_id,
        __ID2_Request_request_get_blob_info,
        __ID2_Request_request_reget_blob,
        __ID2_Request_request_get_chunks,
        _ID2_Request_request,
        ID2_Request,
        __ID2_Request_Get_Packages_names__item_,
        _ID2_Request_Get_Packages_names,
        _ID2_Request_Get_Packages_no_contents,
        ID2_Request_Get_Packages,
        _ID2_Request_Get_Seq_id_seq_id,
        _ID2_Request_Get_Seq_id_seq_id_type,
        ID2_Request_Get_Seq_id,
        _ID2_Seq_id_string,
        _ID2_Seq_id_seq_id,
        ID2_Seq_id,
        _ID2_Request_Get_Blob_Id_seq_id,
        __ID2_Request_Get_Blob_Id_sources__item_,
        _ID2_Request_Get_Blob_Id_sources,
        _ID2_Request_Get_Blob_Id_external,
        ID2_Request_Get_Blob_Id,
        __ID2_Request_Get_Blob_Info_blob_id_blob_id,
        ___ID2_Request_Get_Blob_Info_blob_id_resolve_request,
        ____ID2_Request_Get_Blob_Info_blob_id_resolve_exclude_blobs__item_,
        ___ID2_Request_Get_Blob_Info_blob_id_resolve_exclude_blobs,
        __ID2_Request_Get_Blob_Info_blob_id_resolve,
        _ID2_Request_Get_Blob_Info_blob_id,
        _ID2_Request_Get_Blob_Info_get_seq_ids,
        _ID2_Request_Get_Blob_Info_get_data,
        ID2_Request_Get_Blob_Info,
        _ID2_Request_ReGet_Blob_blob_id,
        _ID2_Request_ReGet_Blob_split_version,
        _ID2_Request_ReGet_Blob_offset,
        ID2_Request_ReGet_Blob,
        _ID2S_Request_Get_Chunks_blob_id,
        __ID2S_Request_Get_Chunks_chunks__item_,
        _ID2S_Request_Get_Chunks_chunks,
        _ID2S_Request_Get_Chunks_split_version,
        ID2S_Request_Get_Chunks,
        _ID2_Get_Blob_Details_location,
        _ID2_Get_Blob_Details_seq_class_level,
        _ID2_Get_Blob_Details_descr_level,
        _ID2_Get_Blob_Details_descr_type_mask,
        _ID2_Get_Blob_Details_annot_type_mask,
        _ID2_Get_Blob_Details_feat_type_mask,
        _ID2_Get_Blob_Details_sequence_level,
        ID2_Get_Blob_Details,
        _ID2_Reply_serial_number,
        _ID2_Reply_params,
        __ID2_Reply_error__item_,
        _ID2_Reply_error,
        _ID2_Reply_end_of_reply,
        __ID2_Reply_reply_init,
        __ID2_Reply_reply_empty,
        __ID2_Reply_reply_get_package,
        __ID2_Reply_reply_get_seq_id,
        __ID2_Reply_reply_get_blob_id,
        __ID2_Reply_reply_get_blob_seq_ids,
        __ID2_Reply_reply_get_blob,
        __ID2_Reply_reply_reget_blob,
        __ID2_Reply_reply_get_split_info,
        __ID2_Reply_reply_get_chunk,
        _ID2_Reply_reply,
        _ID2_Reply_discard,
        ID2_Reply,
        _ID2_Error_severity,
        _ID2_Error_retry_delay,
        _ID2_Error_message,
        ID2_Error,
        _ID2_Reply_Get_Package_name,
        _ID2_Reply_Get_Package_params,
        ID2_Reply_Get_Package,
        _ID2_Reply_Get_Seq_id_request,
        __ID2_Reply_Get_Seq_id_seq_id__item_,
        _ID2_Reply_Get_Seq_id_seq_id,
        _ID2_Reply_Get_Seq_id_end_of_reply,
        ID2_Reply_Get_Seq_id,
        ID2_Blob_State,
        _ID2_Reply_Get_Blob_Id_seq_id,
        _ID2_Reply_Get_Blob_Id_blob_id,
        _ID2_Reply_Get_Blob_Id_split_version,
        __ID2_Reply_Get_Blob_Id_annot_info__item_,
        _ID2_Reply_Get_Blob_Id_annot_info,
        _ID2_Reply_Get_Blob_Id_end_of_reply,
        _ID2_Reply_Get_Blob_Id_blob_state,
        ID2_Reply_Get_Blob_Id,
        _ID2_Reply_Get_Blob_Seq_ids_blob_id,
        _ID2_Reply_Get_Blob_Seq_ids_ids,
        ID2_Reply_Get_Blob_Seq_ids,
        _ID2_Reply_Get_Blob_blob_id,
        _ID2_Reply_Get_Blob_split_version,
        _ID2_Reply_Get_Blob_data,
        _ID2_Reply_Get_Blob_blob_state,
        ID2_Reply_Get_Blob,
        _ID2S_Reply_Get_Split_Info_blob_id,
        _ID2S_Reply_Get_Split_Info_split_version,
        _ID2S_Reply_Get_Split_Info_data,
        _ID2S_Reply_Get_Split_Info_blob_state,
        ID2S_Reply_Get_Split_Info,
        _ID2_Reply_ReGet_Blob_blob_id,
        _ID2_Reply_ReGet_Blob_split_version,
        _ID2_Reply_ReGet_Blob_offset,
        _ID2_Reply_ReGet_Blob_data,
        ID2_Reply_ReGet_Blob,
        _ID2S_Reply_Get_Chunk_blob_id,
        _ID2S_Reply_Get_Chunk_chunk_id,
        _ID2S_Reply_Get_Chunk_data,
        ID2S_Reply_Get_Chunk,
        _ID2_Reply_Data_data_type,
        _ID2_Reply_Data_data_format,
        _ID2_Reply_Data_data_compression,
        __ID2_Reply_Data_data__item_,
        _ID2_Reply_Data_data,
        ID2_Reply_Data,
        _ID2_Blob_Seq_ids__item_,
        ID2_Blob_Seq_ids,
        _ID2_Blob_Seq_id_seq_id,
        _ID2_Blob_Seq_id_replaced,
        ID2_Blob_Seq_id,
        _ID2_Blob_Id_sat,
        _ID2_Blob_Id_sub_sat,
        _ID2_Blob_Id_sat_key,
        _ID2_Blob_Id_version,
        ID2_Blob_Id,
        _ID2_Params__item_,
        ID2_Params,
        _ID2_Param_name,
        __ID2_Param_value__item_,
        _ID2_Param_value,
        _ID2_Param_type,
        ID2_Param,
    ]

class INSD_INSDSeq:

    _name_  = 'INSD-INSDSeq'
    _oid_   = []
    
    _obj_ = [
        'INSDSet',
        'INSDSeq',
        'INSDSeqid',
        'INSDSecondary-accn',
        'INSDKeyword',
        'INSDReference',
        'INSDAuthor',
        'INSDXref',
        'INSDComment',
        'INSDCommentParagraph',
        'INSDStrucComment',
        'INSDStrucCommentItem',
        'INSDFeatureSet',
        'INSDFeature',
        'INSDInterval',
        'INSDQualifier',
        'INSDAltSeqData',
        'INSDAltSeqItem',
        ]
    _type_ = [
        'INSDSet',
        'INSDSeq',
        'INSDSeqid',
        'INSDSecondary-accn',
        'INSDKeyword',
        'INSDReference',
        'INSDAuthor',
        'INSDXref',
        'INSDComment',
        'INSDCommentParagraph',
        'INSDStrucComment',
        'INSDStrucCommentItem',
        'INSDFeatureSet',
        'INSDFeature',
        'INSDInterval',
        'INSDQualifier',
        'INSDAltSeqData',
        'INSDAltSeqItem',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< INSDSet >-----#
    INSDSet = SEQ_OF(name='INSDSet', mode=MODE_TYPE)
    _INSDSet__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDSeq')))
    INSDSet._cont = _INSDSet__item_
    
    #-----< INSDSeq >-----#
    INSDSeq = SEQ(name='INSDSeq', mode=MODE_TYPE)
    _INSDSeq_locus = STR_VIS(name='locus', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_length = INT(name='length', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _INSDSeq_strandedness = STR_VIS(name='strandedness', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_moltype = STR_VIS(name='moltype', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _INSDSeq_topology = STR_VIS(name='topology', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_division = STR_VIS(name='division', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_update_date = STR_VIS(name='update-date', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_create_date = STR_VIS(name='create-date', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_update_release = STR_VIS(name='update-release', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_create_release = STR_VIS(name='create-release', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_definition = STR_VIS(name='definition', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_primary_accession = STR_VIS(name='primary-accession', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_entry_version = STR_VIS(name='entry-version', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_accession_version = STR_VIS(name='accession-version', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_other_seqids = SEQ_OF(name='other-seqids', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __INSDSeq_other_seqids__item_ = STR_VIS(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDSeqid')))
    _INSDSeq_other_seqids._cont = __INSDSeq_other_seqids__item_
    _INSDSeq_secondary_accessions = SEQ_OF(name='secondary-accessions', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __INSDSeq_secondary_accessions__item_ = STR_VIS(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDSecondary-accn')))
    _INSDSeq_secondary_accessions._cont = __INSDSeq_secondary_accessions__item_
    _INSDSeq_project = STR_VIS(name='project', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_keywords = SEQ_OF(name='keywords', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __INSDSeq_keywords__item_ = STR_VIS(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDKeyword')))
    _INSDSeq_keywords._cont = __INSDSeq_keywords__item_
    _INSDSeq_segment = STR_VIS(name='segment', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_source = STR_VIS(name='source', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_organism = STR_VIS(name='organism', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_taxonomy = STR_VIS(name='taxonomy', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_references = SEQ_OF(name='references', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __INSDSeq_references__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDReference')))
    _INSDSeq_references._cont = __INSDSeq_references__item_
    _INSDSeq_comment = STR_VIS(name='comment', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_comment_set = SEQ_OF(name='comment-set', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __INSDSeq_comment_set__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDComment')))
    _INSDSeq_comment_set._cont = __INSDSeq_comment_set__item_
    _INSDSeq_struc_comments = SEQ_OF(name='struc-comments', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __INSDSeq_struc_comments__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDStrucComment')))
    _INSDSeq_struc_comments._cont = __INSDSeq_struc_comments__item_
    _INSDSeq_primary = STR_VIS(name='primary', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_source_db = STR_VIS(name='source-db', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_database_reference = STR_VIS(name='database-reference', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_feature_table = SEQ_OF(name='feature-table', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __INSDSeq_feature_table__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDFeature')))
    _INSDSeq_feature_table._cont = __INSDSeq_feature_table__item_
    _INSDSeq_feature_set = SEQ_OF(name='feature-set', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __INSDSeq_feature_set__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDFeatureSet')))
    _INSDSeq_feature_set._cont = __INSDSeq_feature_set__item_
    _INSDSeq_sequence = STR_VIS(name='sequence', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_contig = STR_VIS(name='contig', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDSeq_alt_seq = SEQ_OF(name='alt-seq', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __INSDSeq_alt_seq__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDAltSeqData')))
    _INSDSeq_alt_seq._cont = __INSDSeq_alt_seq__item_
    _INSDSeq_xrefs = SEQ_OF(name='xrefs', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __INSDSeq_xrefs__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDXref')))
    _INSDSeq_xrefs._cont = __INSDSeq_xrefs__item_
    INSDSeq._cont = ASN1Dict([
        ('locus', _INSDSeq_locus),
        ('length', _INSDSeq_length),
        ('strandedness', _INSDSeq_strandedness),
        ('moltype', _INSDSeq_moltype),
        ('topology', _INSDSeq_topology),
        ('division', _INSDSeq_division),
        ('update-date', _INSDSeq_update_date),
        ('create-date', _INSDSeq_create_date),
        ('update-release', _INSDSeq_update_release),
        ('create-release', _INSDSeq_create_release),
        ('definition', _INSDSeq_definition),
        ('primary-accession', _INSDSeq_primary_accession),
        ('entry-version', _INSDSeq_entry_version),
        ('accession-version', _INSDSeq_accession_version),
        ('other-seqids', _INSDSeq_other_seqids),
        ('secondary-accessions', _INSDSeq_secondary_accessions),
        ('project', _INSDSeq_project),
        ('keywords', _INSDSeq_keywords),
        ('segment', _INSDSeq_segment),
        ('source', _INSDSeq_source),
        ('organism', _INSDSeq_organism),
        ('taxonomy', _INSDSeq_taxonomy),
        ('references', _INSDSeq_references),
        ('comment', _INSDSeq_comment),
        ('comment-set', _INSDSeq_comment_set),
        ('struc-comments', _INSDSeq_struc_comments),
        ('primary', _INSDSeq_primary),
        ('source-db', _INSDSeq_source_db),
        ('database-reference', _INSDSeq_database_reference),
        ('feature-table', _INSDSeq_feature_table),
        ('feature-set', _INSDSeq_feature_set),
        ('sequence', _INSDSeq_sequence),
        ('contig', _INSDSeq_contig),
        ('alt-seq', _INSDSeq_alt_seq),
        ('xrefs', _INSDSeq_xrefs),
        ])
    INSDSeq._ext = None
    
    #-----< INSDSeqid >-----#
    INSDSeqid = STR_VIS(name='INSDSeqid', mode=MODE_TYPE)
    
    #-----< INSDSecondary-accn >-----#
    INSDSecondary_accn = STR_VIS(name='INSDSecondary-accn', mode=MODE_TYPE)
    
    #-----< INSDKeyword >-----#
    INSDKeyword = STR_VIS(name='INSDKeyword', mode=MODE_TYPE)
    
    #-----< INSDReference >-----#
    INSDReference = SEQ(name='INSDReference', mode=MODE_TYPE)
    _INSDReference_reference = STR_VIS(name='reference', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _INSDReference_position = STR_VIS(name='position', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDReference_authors = SEQ_OF(name='authors', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __INSDReference_authors__item_ = STR_VIS(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDAuthor')))
    _INSDReference_authors._cont = __INSDReference_authors__item_
    _INSDReference_consortium = STR_VIS(name='consortium', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDReference_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDReference_journal = STR_VIS(name='journal', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _INSDReference_xref = SEQ_OF(name='xref', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __INSDReference_xref__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDXref')))
    _INSDReference_xref._cont = __INSDReference_xref__item_
    _INSDReference_pubmed = INT(name='pubmed', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDReference_remark = STR_VIS(name='remark', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    INSDReference._cont = ASN1Dict([
        ('reference', _INSDReference_reference),
        ('position', _INSDReference_position),
        ('authors', _INSDReference_authors),
        ('consortium', _INSDReference_consortium),
        ('title', _INSDReference_title),
        ('journal', _INSDReference_journal),
        ('xref', _INSDReference_xref),
        ('pubmed', _INSDReference_pubmed),
        ('remark', _INSDReference_remark),
        ])
    INSDReference._ext = None
    
    #-----< INSDAuthor >-----#
    INSDAuthor = STR_VIS(name='INSDAuthor', mode=MODE_TYPE)
    
    #-----< INSDXref >-----#
    INSDXref = SEQ(name='INSDXref', mode=MODE_TYPE)
    _INSDXref_dbname = STR_VIS(name='dbname', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _INSDXref_id = STR_VIS(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    INSDXref._cont = ASN1Dict([
        ('dbname', _INSDXref_dbname),
        ('id', _INSDXref_id),
        ])
    INSDXref._ext = None
    
    #-----< INSDComment >-----#
    INSDComment = SEQ(name='INSDComment', mode=MODE_TYPE)
    _INSDComment_type = STR_VIS(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDComment_paragraphs = SEQ_OF(name='paragraphs', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __INSDComment_paragraphs__item_ = STR_VIS(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDCommentParagraph')))
    _INSDComment_paragraphs._cont = __INSDComment_paragraphs__item_
    INSDComment._cont = ASN1Dict([
        ('type', _INSDComment_type),
        ('paragraphs', _INSDComment_paragraphs),
        ])
    INSDComment._ext = None
    
    #-----< INSDCommentParagraph >-----#
    INSDCommentParagraph = STR_VIS(name='INSDCommentParagraph', mode=MODE_TYPE)
    
    #-----< INSDStrucComment >-----#
    INSDStrucComment = SEQ(name='INSDStrucComment', mode=MODE_TYPE)
    _INSDStrucComment_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDStrucComment_items = SEQ_OF(name='items', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __INSDStrucComment_items__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDStrucCommentItem')))
    _INSDStrucComment_items._cont = __INSDStrucComment_items__item_
    INSDStrucComment._cont = ASN1Dict([
        ('name', _INSDStrucComment_name),
        ('items', _INSDStrucComment_items),
        ])
    INSDStrucComment._ext = None
    
    #-----< INSDStrucCommentItem >-----#
    INSDStrucCommentItem = SEQ(name='INSDStrucCommentItem', mode=MODE_TYPE)
    _INSDStrucCommentItem_tag = STR_VIS(name='tag', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDStrucCommentItem_value = STR_VIS(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDStrucCommentItem_url = STR_VIS(name='url', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    INSDStrucCommentItem._cont = ASN1Dict([
        ('tag', _INSDStrucCommentItem_tag),
        ('value', _INSDStrucCommentItem_value),
        ('url', _INSDStrucCommentItem_url),
        ])
    INSDStrucCommentItem._ext = None
    
    #-----< INSDFeatureSet >-----#
    INSDFeatureSet = SEQ(name='INSDFeatureSet', mode=MODE_TYPE)
    _INSDFeatureSet_annot_source = STR_VIS(name='annot-source', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDFeatureSet_features = SEQ_OF(name='features', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __INSDFeatureSet_features__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDFeature')))
    _INSDFeatureSet_features._cont = __INSDFeatureSet_features__item_
    INSDFeatureSet._cont = ASN1Dict([
        ('annot-source', _INSDFeatureSet_annot_source),
        ('features', _INSDFeatureSet_features),
        ])
    INSDFeatureSet._ext = None
    
    #-----< INSDFeature >-----#
    INSDFeature = SEQ(name='INSDFeature', mode=MODE_TYPE)
    _INSDFeature_key = STR_VIS(name='key', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _INSDFeature_location = STR_VIS(name='location', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _INSDFeature_intervals = SEQ_OF(name='intervals', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __INSDFeature_intervals__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDInterval')))
    _INSDFeature_intervals._cont = __INSDFeature_intervals__item_
    _INSDFeature_operator = STR_VIS(name='operator', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDFeature_partial5 = BOOL(name='partial5', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDFeature_partial3 = BOOL(name='partial3', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDFeature_quals = SEQ_OF(name='quals', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __INSDFeature_quals__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDQualifier')))
    _INSDFeature_quals._cont = __INSDFeature_quals__item_
    _INSDFeature_xrefs = SEQ_OF(name='xrefs', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __INSDFeature_xrefs__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDXref')))
    _INSDFeature_xrefs._cont = __INSDFeature_xrefs__item_
    INSDFeature._cont = ASN1Dict([
        ('key', _INSDFeature_key),
        ('location', _INSDFeature_location),
        ('intervals', _INSDFeature_intervals),
        ('operator', _INSDFeature_operator),
        ('partial5', _INSDFeature_partial5),
        ('partial3', _INSDFeature_partial3),
        ('quals', _INSDFeature_quals),
        ('xrefs', _INSDFeature_xrefs),
        ])
    INSDFeature._ext = None
    
    #-----< INSDInterval >-----#
    INSDInterval = SEQ(name='INSDInterval', mode=MODE_TYPE)
    _INSDInterval_from_ = INT(name='from', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDInterval_to = INT(name='to', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDInterval_point = INT(name='point', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDInterval_iscomp = BOOL(name='iscomp', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDInterval_interbp = BOOL(name='interbp', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDInterval_accession = STR_VIS(name='accession', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    INSDInterval._cont = ASN1Dict([
        ('from', _INSDInterval_from_),
        ('to', _INSDInterval_to),
        ('point', _INSDInterval_point),
        ('iscomp', _INSDInterval_iscomp),
        ('interbp', _INSDInterval_interbp),
        ('accession', _INSDInterval_accession),
        ])
    INSDInterval._ext = None
    
    #-----< INSDQualifier >-----#
    INSDQualifier = SEQ(name='INSDQualifier', mode=MODE_TYPE)
    _INSDQualifier_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _INSDQualifier_value = STR_VIS(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    INSDQualifier._cont = ASN1Dict([
        ('name', _INSDQualifier_name),
        ('value', _INSDQualifier_value),
        ])
    INSDQualifier._ext = None
    
    #-----< INSDAltSeqData >-----#
    INSDAltSeqData = SEQ(name='INSDAltSeqData', mode=MODE_TYPE)
    _INSDAltSeqData_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _INSDAltSeqData_items = SEQ_OF(name='items', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __INSDAltSeqData_items__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('INSD-INSDSeq', 'INSDAltSeqItem')))
    _INSDAltSeqData_items._cont = __INSDAltSeqData_items__item_
    INSDAltSeqData._cont = ASN1Dict([
        ('name', _INSDAltSeqData_name),
        ('items', _INSDAltSeqData_items),
        ])
    INSDAltSeqData._ext = None
    
    #-----< INSDAltSeqItem >-----#
    INSDAltSeqItem = SEQ(name='INSDAltSeqItem', mode=MODE_TYPE)
    _INSDAltSeqItem_interval = SEQ(name='interval', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('INSD-INSDSeq', 'INSDInterval')), opt=True)
    _INSDAltSeqItem_isgap = BOOL(name='isgap', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDAltSeqItem_gap_length = INT(name='gap-length', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDAltSeqItem_gap_type = STR_VIS(name='gap-type', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDAltSeqItem_gap_linkage = STR_VIS(name='gap-linkage', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDAltSeqItem_gap_comment = STR_VIS(name='gap-comment', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDAltSeqItem_first_accn = STR_VIS(name='first-accn', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDAltSeqItem_last_accn = STR_VIS(name='last-accn', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _INSDAltSeqItem_value = STR_VIS(name='value', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    INSDAltSeqItem._cont = ASN1Dict([
        ('interval', _INSDAltSeqItem_interval),
        ('isgap', _INSDAltSeqItem_isgap),
        ('gap-length', _INSDAltSeqItem_gap_length),
        ('gap-type', _INSDAltSeqItem_gap_type),
        ('gap-linkage', _INSDAltSeqItem_gap_linkage),
        ('gap-comment', _INSDAltSeqItem_gap_comment),
        ('first-accn', _INSDAltSeqItem_first_accn),
        ('last-accn', _INSDAltSeqItem_last_accn),
        ('value', _INSDAltSeqItem_value),
        ])
    INSDAltSeqItem._ext = None
    
    _all_ = [
        _INSDSet__item_,
        INSDSet,
        _INSDSeq_locus,
        _INSDSeq_length,
        _INSDSeq_strandedness,
        _INSDSeq_moltype,
        _INSDSeq_topology,
        _INSDSeq_division,
        _INSDSeq_update_date,
        _INSDSeq_create_date,
        _INSDSeq_update_release,
        _INSDSeq_create_release,
        _INSDSeq_definition,
        _INSDSeq_primary_accession,
        _INSDSeq_entry_version,
        _INSDSeq_accession_version,
        __INSDSeq_other_seqids__item_,
        _INSDSeq_other_seqids,
        __INSDSeq_secondary_accessions__item_,
        _INSDSeq_secondary_accessions,
        _INSDSeq_project,
        __INSDSeq_keywords__item_,
        _INSDSeq_keywords,
        _INSDSeq_segment,
        _INSDSeq_source,
        _INSDSeq_organism,
        _INSDSeq_taxonomy,
        __INSDSeq_references__item_,
        _INSDSeq_references,
        _INSDSeq_comment,
        __INSDSeq_comment_set__item_,
        _INSDSeq_comment_set,
        __INSDSeq_struc_comments__item_,
        _INSDSeq_struc_comments,
        _INSDSeq_primary,
        _INSDSeq_source_db,
        _INSDSeq_database_reference,
        __INSDSeq_feature_table__item_,
        _INSDSeq_feature_table,
        __INSDSeq_feature_set__item_,
        _INSDSeq_feature_set,
        _INSDSeq_sequence,
        _INSDSeq_contig,
        __INSDSeq_alt_seq__item_,
        _INSDSeq_alt_seq,
        __INSDSeq_xrefs__item_,
        _INSDSeq_xrefs,
        INSDSeq,
        INSDSeqid,
        INSDSecondary_accn,
        INSDKeyword,
        _INSDReference_reference,
        _INSDReference_position,
        __INSDReference_authors__item_,
        _INSDReference_authors,
        _INSDReference_consortium,
        _INSDReference_title,
        _INSDReference_journal,
        __INSDReference_xref__item_,
        _INSDReference_xref,
        _INSDReference_pubmed,
        _INSDReference_remark,
        INSDReference,
        INSDAuthor,
        _INSDXref_dbname,
        _INSDXref_id,
        INSDXref,
        _INSDComment_type,
        __INSDComment_paragraphs__item_,
        _INSDComment_paragraphs,
        INSDComment,
        INSDCommentParagraph,
        _INSDStrucComment_name,
        __INSDStrucComment_items__item_,
        _INSDStrucComment_items,
        INSDStrucComment,
        _INSDStrucCommentItem_tag,
        _INSDStrucCommentItem_value,
        _INSDStrucCommentItem_url,
        INSDStrucCommentItem,
        _INSDFeatureSet_annot_source,
        __INSDFeatureSet_features__item_,
        _INSDFeatureSet_features,
        INSDFeatureSet,
        _INSDFeature_key,
        _INSDFeature_location,
        __INSDFeature_intervals__item_,
        _INSDFeature_intervals,
        _INSDFeature_operator,
        _INSDFeature_partial5,
        _INSDFeature_partial3,
        __INSDFeature_quals__item_,
        _INSDFeature_quals,
        __INSDFeature_xrefs__item_,
        _INSDFeature_xrefs,
        INSDFeature,
        _INSDInterval_from_,
        _INSDInterval_to,
        _INSDInterval_point,
        _INSDInterval_iscomp,
        _INSDInterval_interbp,
        _INSDInterval_accession,
        INSDInterval,
        _INSDQualifier_name,
        _INSDQualifier_value,
        INSDQualifier,
        _INSDAltSeqData_name,
        __INSDAltSeqData_items__item_,
        _INSDAltSeqData_items,
        INSDAltSeqData,
        _INSDAltSeqItem_interval,
        _INSDAltSeqItem_isgap,
        _INSDAltSeqItem_gap_length,
        _INSDAltSeqItem_gap_type,
        _INSDAltSeqItem_gap_linkage,
        _INSDAltSeqItem_gap_comment,
        _INSDAltSeqItem_first_accn,
        _INSDAltSeqItem_last_accn,
        _INSDAltSeqItem_value,
        INSDAltSeqItem,
    ]

class NCBI_Medlars:

    _name_  = 'NCBI-Medlars'
    _oid_   = []
    
    _obj_ = [
        'Medlars-entry',
        'Medlars-record',
        ]
    _type_ = [
        'Medlars-entry',
        'Medlars-record',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Medlars-entry >-----#
    Medlars_entry = SEQ(name='Medlars-entry', mode=MODE_TYPE)
    _Medlars_entry_pmid = INT(name='pmid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'PubMedId')))
    _Medlars_entry_muid = INT(name='muid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Medlars_entry_recs = SET_OF(name='recs', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Medlars_entry_recs__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Medlars', 'Medlars-record')))
    _Medlars_entry_recs._cont = __Medlars_entry_recs__item_
    Medlars_entry._cont = ASN1Dict([
        ('pmid', _Medlars_entry_pmid),
        ('muid', _Medlars_entry_muid),
        ('recs', _Medlars_entry_recs),
        ])
    Medlars_entry._ext = None
    
    #-----< Medlars-record >-----#
    Medlars_record = SEQ(name='Medlars-record', mode=MODE_TYPE)
    _Medlars_record_code = INT(name='code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Medlars_record_abbr = STR_VIS(name='abbr', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Medlars_record_data = STR_VIS(name='data', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Medlars_record._cont = ASN1Dict([
        ('code', _Medlars_record_code),
        ('abbr', _Medlars_record_abbr),
        ('data', _Medlars_record_data),
        ])
    Medlars_record._ext = None
    
    _all_ = [
        _Medlars_entry_pmid,
        _Medlars_entry_muid,
        __Medlars_entry_recs__item_,
        _Medlars_entry_recs,
        Medlars_entry,
        _Medlars_record_code,
        _Medlars_record_abbr,
        _Medlars_record_data,
        Medlars_record,
    ]

class NCBI_Medline:

    _name_  = 'NCBI-Medline'
    _oid_   = []
    
    _obj_ = [
        'Medline-entry',
        'Medline-mesh',
        'Medline-qual',
        'Medline-rn',
        'Medline-si',
        'Medline-field',
        'DocRef',
        ]
    _type_ = [
        'Medline-entry',
        'Medline-mesh',
        'Medline-qual',
        'Medline-rn',
        'Medline-si',
        'Medline-field',
        'DocRef',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Medline-entry >-----#
    Medline_entry = SEQ(name='Medline-entry', mode=MODE_TYPE)
    _Medline_entry_uid = INT(name='uid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Medline_entry_em = CHOICE(name='em', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    _Medline_entry_cit = SEQ(name='cit', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Cit-art')))
    _Medline_entry_abstract = STR_VIS(name='abstract', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Medline_entry_mesh = SET_OF(name='mesh', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Medline_entry_mesh__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Medline', 'Medline-mesh')))
    _Medline_entry_mesh._cont = __Medline_entry_mesh__item_
    _Medline_entry_substance = SET_OF(name='substance', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Medline_entry_substance__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Medline', 'Medline-rn')))
    _Medline_entry_substance._cont = __Medline_entry_substance__item_
    _Medline_entry_xref = SET_OF(name='xref', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Medline_entry_xref__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Medline', 'Medline-si')))
    _Medline_entry_xref._cont = __Medline_entry_xref__item_
    _Medline_entry_idnum = SET_OF(name='idnum', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Medline_entry_idnum__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Medline_entry_idnum._cont = __Medline_entry_idnum__item_
    _Medline_entry_gene = SET_OF(name='gene', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Medline_entry_gene__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Medline_entry_gene._cont = __Medline_entry_gene__item_
    _Medline_entry_pmid = INT(name='pmid', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'PubMedId')), opt=True)
    _Medline_entry_pub_type = SET_OF(name='pub-type', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Medline_entry_pub_type__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Medline_entry_pub_type._cont = __Medline_entry_pub_type__item_
    _Medline_entry_mlfield = SET_OF(name='mlfield', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Medline_entry_mlfield__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Medline', 'Medline-field')))
    _Medline_entry_mlfield._cont = __Medline_entry_mlfield__item_
    _Medline_entry_status = INT(name='status', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=3)
    _Medline_entry_status._cont = ASN1Dict([('publisher', 1), ('premedline', 2), ('medline', 3)])
    Medline_entry._cont = ASN1Dict([
        ('uid', _Medline_entry_uid),
        ('em', _Medline_entry_em),
        ('cit', _Medline_entry_cit),
        ('abstract', _Medline_entry_abstract),
        ('mesh', _Medline_entry_mesh),
        ('substance', _Medline_entry_substance),
        ('xref', _Medline_entry_xref),
        ('idnum', _Medline_entry_idnum),
        ('gene', _Medline_entry_gene),
        ('pmid', _Medline_entry_pmid),
        ('pub-type', _Medline_entry_pub_type),
        ('mlfield', _Medline_entry_mlfield),
        ('status', _Medline_entry_status),
        ])
    Medline_entry._ext = None
    
    #-----< Medline-mesh >-----#
    Medline_mesh = SEQ(name='Medline-mesh', mode=MODE_TYPE)
    _Medline_mesh_mp = BOOL(name='mp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _Medline_mesh_term = STR_VIS(name='term', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Medline_mesh_qual = SET_OF(name='qual', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Medline_mesh_qual__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Medline', 'Medline-qual')))
    _Medline_mesh_qual._cont = __Medline_mesh_qual__item_
    Medline_mesh._cont = ASN1Dict([
        ('mp', _Medline_mesh_mp),
        ('term', _Medline_mesh_term),
        ('qual', _Medline_mesh_qual),
        ])
    Medline_mesh._ext = None
    
    #-----< Medline-qual >-----#
    Medline_qual = SEQ(name='Medline-qual', mode=MODE_TYPE)
    _Medline_qual_mp = BOOL(name='mp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _Medline_qual_subh = STR_VIS(name='subh', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Medline_qual._cont = ASN1Dict([
        ('mp', _Medline_qual_mp),
        ('subh', _Medline_qual_subh),
        ])
    Medline_qual._ext = None
    
    #-----< Medline-rn >-----#
    Medline_rn = SEQ(name='Medline-rn', mode=MODE_TYPE)
    _Medline_rn_type = ENUM(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Medline_rn_type._cont = ASN1Dict([('nameonly', 0), ('cas', 1), ('ec', 2)])
    _Medline_rn_type._ext = None
    _Medline_rn_cit = STR_VIS(name='cit', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Medline_rn_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Medline_rn._cont = ASN1Dict([
        ('type', _Medline_rn_type),
        ('cit', _Medline_rn_cit),
        ('name', _Medline_rn_name),
        ])
    Medline_rn._ext = None
    
    #-----< Medline-si >-----#
    Medline_si = SEQ(name='Medline-si', mode=MODE_TYPE)
    _Medline_si_type = ENUM(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Medline_si_type._cont = ASN1Dict([('ddbj', 1), ('carbbank', 2), ('embl', 3), ('hdb', 4), ('genbank', 5), ('hgml', 6), ('mim', 7), ('msd', 8), ('pdb', 9), ('pir', 10), ('prfseqdb', 11), ('psd', 12), ('swissprot', 13), ('gdb', 14)])
    _Medline_si_type._ext = None
    _Medline_si_cit = STR_VIS(name='cit', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Medline_si._cont = ASN1Dict([
        ('type', _Medline_si_type),
        ('cit', _Medline_si_cit),
        ])
    Medline_si._ext = None
    
    #-----< Medline-field >-----#
    Medline_field = SEQ(name='Medline-field', mode=MODE_TYPE)
    _Medline_field_type = INT(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Medline_field_type._cont = ASN1Dict([('other', 0), ('comment', 1), ('erratum', 2)])
    _Medline_field_str = STR_VIS(name='str', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Medline_field_ids = SEQ_OF(name='ids', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Medline_field_ids__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Medline', 'DocRef')))
    _Medline_field_ids._cont = __Medline_field_ids__item_
    Medline_field._cont = ASN1Dict([
        ('type', _Medline_field_type),
        ('str', _Medline_field_str),
        ('ids', _Medline_field_ids),
        ])
    Medline_field._ext = None
    
    #-----< DocRef >-----#
    DocRef = SEQ(name='DocRef', mode=MODE_TYPE)
    _DocRef_type = INT(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DocRef_type._cont = ASN1Dict([('medline', 1), ('pubmed', 2), ('ncbigi', 3)])
    _DocRef_uid = INT(name='uid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    DocRef._cont = ASN1Dict([
        ('type', _DocRef_type),
        ('uid', _DocRef_uid),
        ])
    DocRef._ext = None
    
    _all_ = [
        _Medline_entry_uid,
        _Medline_entry_em,
        _Medline_entry_cit,
        _Medline_entry_abstract,
        __Medline_entry_mesh__item_,
        _Medline_entry_mesh,
        __Medline_entry_substance__item_,
        _Medline_entry_substance,
        __Medline_entry_xref__item_,
        _Medline_entry_xref,
        __Medline_entry_idnum__item_,
        _Medline_entry_idnum,
        __Medline_entry_gene__item_,
        _Medline_entry_gene,
        _Medline_entry_pmid,
        __Medline_entry_pub_type__item_,
        _Medline_entry_pub_type,
        __Medline_entry_mlfield__item_,
        _Medline_entry_mlfield,
        _Medline_entry_status,
        Medline_entry,
        _Medline_mesh_mp,
        _Medline_mesh_term,
        __Medline_mesh_qual__item_,
        _Medline_mesh_qual,
        Medline_mesh,
        _Medline_qual_mp,
        _Medline_qual_subh,
        Medline_qual,
        _Medline_rn_type,
        _Medline_rn_cit,
        _Medline_rn_name,
        Medline_rn,
        _Medline_si_type,
        _Medline_si_cit,
        Medline_si,
        _Medline_field_type,
        _Medline_field_str,
        __Medline_field_ids__item_,
        _Medline_field_ids,
        Medline_field,
        _DocRef_type,
        _DocRef_uid,
        DocRef,
    ]

class NCBI_Mim:

    _name_  = 'NCBI-Mim'
    _oid_   = []
    
    _obj_ = [
        'Mim-entries',
        'Mim-set',
        'Mim-entry',
        'Mim-text',
        'Mim-allelic-variant',
        'Mim-link',
        'Mim-author',
        'Mim-cit',
        'Mim-reference',
        'Mim-index-term',
        'Mim-edit-item',
        'Mim-date',
        'Mim-page',
        ]
    _type_ = [
        'Mim-entries',
        'Mim-set',
        'Mim-entry',
        'Mim-text',
        'Mim-allelic-variant',
        'Mim-link',
        'Mim-author',
        'Mim-cit',
        'Mim-reference',
        'Mim-index-term',
        'Mim-edit-item',
        'Mim-date',
        'Mim-page',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Mim-entries >-----#
    Mim_entries = SEQ_OF(name='Mim-entries', mode=MODE_TYPE)
    _Mim_entries__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-entry')))
    Mim_entries._cont = _Mim_entries__item_
    
    #-----< Mim-set >-----#
    Mim_set = SEQ(name='Mim-set', mode=MODE_TYPE)
    _Mim_set_releaseDate = SEQ(name='releaseDate', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mim', 'Mim-date')))
    _Mim_set_mimEntries = SEQ_OF(name='mimEntries', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Mim_set_mimEntries__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-entry')))
    _Mim_set_mimEntries._cont = __Mim_set_mimEntries__item_
    Mim_set._cont = ASN1Dict([
        ('releaseDate', _Mim_set_releaseDate),
        ('mimEntries', _Mim_set_mimEntries),
        ])
    Mim_set._ext = None
    
    #-----< Mim-entry >-----#
    Mim_entry = SEQ(name='Mim-entry', mode=MODE_TYPE)
    _Mim_entry_mimNumber = STR_VIS(name='mimNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_entry_mimType = INT(name='mimType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_entry_mimType._cont = ASN1Dict([('none', 0), ('star', 1), ('caret', 2), ('pound', 3), ('plus', 4), ('perc', 5)])
    _Mim_entry_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_entry_copyright = STR_VIS(name='copyright', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Mim_entry_symbol = STR_VIS(name='symbol', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Mim_entry_locus = STR_VIS(name='locus', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Mim_entry_synonyms = SEQ_OF(name='synonyms', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_entry_synonyms__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Mim_entry_synonyms._cont = __Mim_entry_synonyms__item_
    _Mim_entry_aliases = SEQ_OF(name='aliases', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_entry_aliases__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Mim_entry_aliases._cont = __Mim_entry_aliases__item_
    _Mim_entry_included = SEQ_OF(name='included', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_entry_included__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Mim_entry_included._cont = __Mim_entry_included__item_
    _Mim_entry_seeAlso = SEQ_OF(name='seeAlso', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_entry_seeAlso__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-cit')))
    _Mim_entry_seeAlso._cont = __Mim_entry_seeAlso__item_
    _Mim_entry_text = SEQ_OF(name='text', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_entry_text__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-text')))
    _Mim_entry_text._cont = __Mim_entry_text__item_
    _Mim_entry_textfields = SEQ_OF(name='textfields', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_entry_textfields__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-text')))
    _Mim_entry_textfields._cont = __Mim_entry_textfields__item_
    _Mim_entry_hasSummary = BOOL(name='hasSummary', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Mim_entry_summary = SEQ_OF(name='summary', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_entry_summary__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-text')))
    _Mim_entry_summary._cont = __Mim_entry_summary__item_
    _Mim_entry_summaryAttribution = SEQ_OF(name='summaryAttribution', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_entry_summaryAttribution__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-edit-item')))
    _Mim_entry_summaryAttribution._cont = __Mim_entry_summaryAttribution__item_
    _Mim_entry_summaryEditHistory = SEQ_OF(name='summaryEditHistory', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_entry_summaryEditHistory__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-edit-item')))
    _Mim_entry_summaryEditHistory._cont = __Mim_entry_summaryEditHistory__item_
    _Mim_entry_summaryCreationDate = SEQ(name='summaryCreationDate', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mim', 'Mim-edit-item')), opt=True)
    _Mim_entry_allelicVariants = SEQ_OF(name='allelicVariants', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_entry_allelicVariants__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-allelic-variant')))
    _Mim_entry_allelicVariants._cont = __Mim_entry_allelicVariants__item_
    _Mim_entry_hasSynopsis = BOOL(name='hasSynopsis', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Mim_entry_clinicalSynopsis = SEQ_OF(name='clinicalSynopsis', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_entry_clinicalSynopsis__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-index-term')))
    _Mim_entry_clinicalSynopsis._cont = __Mim_entry_clinicalSynopsis__item_
    _Mim_entry_synopsisAttribution = SEQ_OF(name='synopsisAttribution', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_entry_synopsisAttribution__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-edit-item')))
    _Mim_entry_synopsisAttribution._cont = __Mim_entry_synopsisAttribution__item_
    _Mim_entry_synopsisEditHistory = SEQ_OF(name='synopsisEditHistory', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_entry_synopsisEditHistory__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-edit-item')))
    _Mim_entry_synopsisEditHistory._cont = __Mim_entry_synopsisEditHistory__item_
    _Mim_entry_synopsisCreationDate = SEQ(name='synopsisCreationDate', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mim', 'Mim-edit-item')), opt=True)
    _Mim_entry_editHistory = SEQ_OF(name='editHistory', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_entry_editHistory__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-edit-item')))
    _Mim_entry_editHistory._cont = __Mim_entry_editHistory__item_
    _Mim_entry_creationDate = SEQ(name='creationDate', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mim', 'Mim-edit-item')), opt=True)
    _Mim_entry_references = SEQ_OF(name='references', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_entry_references__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-reference')))
    _Mim_entry_references._cont = __Mim_entry_references__item_
    _Mim_entry_attribution = SEQ_OF(name='attribution', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_entry_attribution__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-edit-item')))
    _Mim_entry_attribution._cont = __Mim_entry_attribution__item_
    _Mim_entry_numGeneMaps = INT(name='numGeneMaps', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_entry_medlineLinks = SEQ(name='medlineLinks', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mim', 'Mim-link')), opt=True)
    _Mim_entry_proteinLinks = SEQ(name='proteinLinks', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mim', 'Mim-link')), opt=True)
    _Mim_entry_nucleotideLinks = SEQ(name='nucleotideLinks', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mim', 'Mim-link')), opt=True)
    _Mim_entry_structureLinks = SEQ(name='structureLinks', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mim', 'Mim-link')), opt=True)
    _Mim_entry_genomeLinks = SEQ(name='genomeLinks', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mim', 'Mim-link')), opt=True)
    Mim_entry._cont = ASN1Dict([
        ('mimNumber', _Mim_entry_mimNumber),
        ('mimType', _Mim_entry_mimType),
        ('title', _Mim_entry_title),
        ('copyright', _Mim_entry_copyright),
        ('symbol', _Mim_entry_symbol),
        ('locus', _Mim_entry_locus),
        ('synonyms', _Mim_entry_synonyms),
        ('aliases', _Mim_entry_aliases),
        ('included', _Mim_entry_included),
        ('seeAlso', _Mim_entry_seeAlso),
        ('text', _Mim_entry_text),
        ('textfields', _Mim_entry_textfields),
        ('hasSummary', _Mim_entry_hasSummary),
        ('summary', _Mim_entry_summary),
        ('summaryAttribution', _Mim_entry_summaryAttribution),
        ('summaryEditHistory', _Mim_entry_summaryEditHistory),
        ('summaryCreationDate', _Mim_entry_summaryCreationDate),
        ('allelicVariants', _Mim_entry_allelicVariants),
        ('hasSynopsis', _Mim_entry_hasSynopsis),
        ('clinicalSynopsis', _Mim_entry_clinicalSynopsis),
        ('synopsisAttribution', _Mim_entry_synopsisAttribution),
        ('synopsisEditHistory', _Mim_entry_synopsisEditHistory),
        ('synopsisCreationDate', _Mim_entry_synopsisCreationDate),
        ('editHistory', _Mim_entry_editHistory),
        ('creationDate', _Mim_entry_creationDate),
        ('references', _Mim_entry_references),
        ('attribution', _Mim_entry_attribution),
        ('numGeneMaps', _Mim_entry_numGeneMaps),
        ('medlineLinks', _Mim_entry_medlineLinks),
        ('proteinLinks', _Mim_entry_proteinLinks),
        ('nucleotideLinks', _Mim_entry_nucleotideLinks),
        ('structureLinks', _Mim_entry_structureLinks),
        ('genomeLinks', _Mim_entry_genomeLinks),
        ])
    Mim_entry._ext = None
    
    #-----< Mim-text >-----#
    Mim_text = SEQ(name='Mim-text', mode=MODE_TYPE)
    _Mim_text_label = STR_VIS(name='label', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_text_text = STR_VIS(name='text', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_text_neighbors = SEQ(name='neighbors', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mim', 'Mim-link')), opt=True)
    Mim_text._cont = ASN1Dict([
        ('label', _Mim_text_label),
        ('text', _Mim_text_text),
        ('neighbors', _Mim_text_neighbors),
        ])
    Mim_text._ext = None
    
    #-----< Mim-allelic-variant >-----#
    Mim_allelic_variant = SEQ(name='Mim-allelic-variant', mode=MODE_TYPE)
    _Mim_allelic_variant_number = STR_VIS(name='number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_allelic_variant_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_allelic_variant_aliases = SEQ_OF(name='aliases', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_allelic_variant_aliases__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Mim_allelic_variant_aliases._cont = __Mim_allelic_variant_aliases__item_
    _Mim_allelic_variant_mutation = SEQ_OF(name='mutation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_allelic_variant_mutation__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-text')))
    _Mim_allelic_variant_mutation._cont = __Mim_allelic_variant_mutation__item_
    _Mim_allelic_variant_description = SEQ_OF(name='description', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_allelic_variant_description__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-text')))
    _Mim_allelic_variant_description._cont = __Mim_allelic_variant_description__item_
    _Mim_allelic_variant_snpLinks = SEQ(name='snpLinks', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mim', 'Mim-link')), opt=True)
    Mim_allelic_variant._cont = ASN1Dict([
        ('number', _Mim_allelic_variant_number),
        ('name', _Mim_allelic_variant_name),
        ('aliases', _Mim_allelic_variant_aliases),
        ('mutation', _Mim_allelic_variant_mutation),
        ('description', _Mim_allelic_variant_description),
        ('snpLinks', _Mim_allelic_variant_snpLinks),
        ])
    Mim_allelic_variant._ext = None
    
    #-----< Mim-link >-----#
    Mim_link = SEQ(name='Mim-link', mode=MODE_TYPE)
    _Mim_link_num = INT(name='num', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_link_uids = STR_VIS(name='uids', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_link_numRelevant = INT(name='numRelevant', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Mim_link._cont = ASN1Dict([
        ('num', _Mim_link_num),
        ('uids', _Mim_link_uids),
        ('numRelevant', _Mim_link_numRelevant),
        ])
    Mim_link._ext = None
    
    #-----< Mim-author >-----#
    Mim_author = SEQ(name='Mim-author', mode=MODE_TYPE)
    _Mim_author_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_author_index = INT(name='index', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Mim_author._cont = ASN1Dict([
        ('name', _Mim_author_name),
        ('index', _Mim_author_index),
        ])
    Mim_author._ext = None
    
    #-----< Mim-cit >-----#
    Mim_cit = SEQ(name='Mim-cit', mode=MODE_TYPE)
    _Mim_cit_number = INT(name='number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_cit_author = STR_VIS(name='author', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_cit_others = STR_VIS(name='others', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_cit_year = INT(name='year', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Mim_cit._cont = ASN1Dict([
        ('number', _Mim_cit_number),
        ('author', _Mim_cit_author),
        ('others', _Mim_cit_others),
        ('year', _Mim_cit_year),
        ])
    Mim_cit._ext = None
    
    #-----< Mim-reference >-----#
    Mim_reference = SEQ(name='Mim-reference', mode=MODE_TYPE)
    _Mim_reference_number = INT(name='number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_reference_origNumber = INT(name='origNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Mim_reference_type = ENUM(name='type', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Mim_reference_type._cont = ASN1Dict([('not-set', 0), ('citation', 1), ('book', 2), ('personal-communication', 3), ('book-citation', 4)])
    _Mim_reference_type._ext = None
    _Mim_reference_authors = SEQ_OF(name='authors', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Mim_reference_authors__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-author')))
    _Mim_reference_authors._cont = __Mim_reference_authors__item_
    _Mim_reference_primaryAuthor = STR_VIS(name='primaryAuthor', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_reference_otherAuthors = STR_VIS(name='otherAuthors', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_reference_citationTitle = STR_VIS(name='citationTitle', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_reference_citationType = INT(name='citationType', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Mim_reference_bookTitle = STR_VIS(name='bookTitle', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Mim_reference_editors = SEQ_OF(name='editors', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_reference_editors__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-author')))
    _Mim_reference_editors._cont = __Mim_reference_editors__item_
    _Mim_reference_volume = STR_VIS(name='volume', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Mim_reference_edition = STR_VIS(name='edition', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Mim_reference_journal = STR_VIS(name='journal', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Mim_reference_series = STR_VIS(name='series', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Mim_reference_publisher = STR_VIS(name='publisher', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Mim_reference_place = STR_VIS(name='place', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Mim_reference_commNote = STR_VIS(name='commNote', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Mim_reference_pubDate = SEQ(name='pubDate', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mim', 'Mim-date')))
    _Mim_reference_pages = SEQ_OF(name='pages', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Mim_reference_pages__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Mim', 'Mim-page')))
    _Mim_reference_pages._cont = __Mim_reference_pages__item_
    _Mim_reference_miscInfo = STR_VIS(name='miscInfo', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Mim_reference_pubmedUID = INT(name='pubmedUID', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Mim_reference_ambiguous = BOOL(name='ambiguous', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_reference_noLink = BOOL(name='noLink', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Mim_reference._cont = ASN1Dict([
        ('number', _Mim_reference_number),
        ('origNumber', _Mim_reference_origNumber),
        ('type', _Mim_reference_type),
        ('authors', _Mim_reference_authors),
        ('primaryAuthor', _Mim_reference_primaryAuthor),
        ('otherAuthors', _Mim_reference_otherAuthors),
        ('citationTitle', _Mim_reference_citationTitle),
        ('citationType', _Mim_reference_citationType),
        ('bookTitle', _Mim_reference_bookTitle),
        ('editors', _Mim_reference_editors),
        ('volume', _Mim_reference_volume),
        ('edition', _Mim_reference_edition),
        ('journal', _Mim_reference_journal),
        ('series', _Mim_reference_series),
        ('publisher', _Mim_reference_publisher),
        ('place', _Mim_reference_place),
        ('commNote', _Mim_reference_commNote),
        ('pubDate', _Mim_reference_pubDate),
        ('pages', _Mim_reference_pages),
        ('miscInfo', _Mim_reference_miscInfo),
        ('pubmedUID', _Mim_reference_pubmedUID),
        ('ambiguous', _Mim_reference_ambiguous),
        ('noLink', _Mim_reference_noLink),
        ])
    Mim_reference._ext = None
    
    #-----< Mim-index-term >-----#
    Mim_index_term = SEQ(name='Mim-index-term', mode=MODE_TYPE)
    _Mim_index_term_key = STR_VIS(name='key', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_index_term_terms = SEQ_OF(name='terms', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Mim_index_term_terms__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Mim_index_term_terms._cont = __Mim_index_term_terms__item_
    Mim_index_term._cont = ASN1Dict([
        ('key', _Mim_index_term_key),
        ('terms', _Mim_index_term_terms),
        ])
    Mim_index_term._ext = None
    
    #-----< Mim-edit-item >-----#
    Mim_edit_item = SEQ(name='Mim-edit-item', mode=MODE_TYPE)
    _Mim_edit_item_author = STR_VIS(name='author', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_edit_item_modDate = SEQ(name='modDate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mim', 'Mim-date')))
    Mim_edit_item._cont = ASN1Dict([
        ('author', _Mim_edit_item_author),
        ('modDate', _Mim_edit_item_modDate),
        ])
    Mim_edit_item._ext = None
    
    #-----< Mim-date >-----#
    Mim_date = SEQ(name='Mim-date', mode=MODE_TYPE)
    _Mim_date_year = INT(name='year', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_date_month = INT(name='month', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Mim_date_day = INT(name='day', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Mim_date._cont = ASN1Dict([
        ('year', _Mim_date_year),
        ('month', _Mim_date_month),
        ('day', _Mim_date_day),
        ])
    Mim_date._ext = None
    
    #-----< Mim-page >-----#
    Mim_page = SEQ(name='Mim-page', mode=MODE_TYPE)
    _Mim_page_from_ = STR_VIS(name='from', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mim_page_to = STR_VIS(name='to', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Mim_page._cont = ASN1Dict([
        ('from', _Mim_page_from_),
        ('to', _Mim_page_to),
        ])
    Mim_page._ext = None
    
    _all_ = [
        _Mim_entries__item_,
        Mim_entries,
        _Mim_set_releaseDate,
        __Mim_set_mimEntries__item_,
        _Mim_set_mimEntries,
        Mim_set,
        _Mim_entry_mimNumber,
        _Mim_entry_mimType,
        _Mim_entry_title,
        _Mim_entry_copyright,
        _Mim_entry_symbol,
        _Mim_entry_locus,
        __Mim_entry_synonyms__item_,
        _Mim_entry_synonyms,
        __Mim_entry_aliases__item_,
        _Mim_entry_aliases,
        __Mim_entry_included__item_,
        _Mim_entry_included,
        __Mim_entry_seeAlso__item_,
        _Mim_entry_seeAlso,
        __Mim_entry_text__item_,
        _Mim_entry_text,
        __Mim_entry_textfields__item_,
        _Mim_entry_textfields,
        _Mim_entry_hasSummary,
        __Mim_entry_summary__item_,
        _Mim_entry_summary,
        __Mim_entry_summaryAttribution__item_,
        _Mim_entry_summaryAttribution,
        __Mim_entry_summaryEditHistory__item_,
        _Mim_entry_summaryEditHistory,
        _Mim_entry_summaryCreationDate,
        __Mim_entry_allelicVariants__item_,
        _Mim_entry_allelicVariants,
        _Mim_entry_hasSynopsis,
        __Mim_entry_clinicalSynopsis__item_,
        _Mim_entry_clinicalSynopsis,
        __Mim_entry_synopsisAttribution__item_,
        _Mim_entry_synopsisAttribution,
        __Mim_entry_synopsisEditHistory__item_,
        _Mim_entry_synopsisEditHistory,
        _Mim_entry_synopsisCreationDate,
        __Mim_entry_editHistory__item_,
        _Mim_entry_editHistory,
        _Mim_entry_creationDate,
        __Mim_entry_references__item_,
        _Mim_entry_references,
        __Mim_entry_attribution__item_,
        _Mim_entry_attribution,
        _Mim_entry_numGeneMaps,
        _Mim_entry_medlineLinks,
        _Mim_entry_proteinLinks,
        _Mim_entry_nucleotideLinks,
        _Mim_entry_structureLinks,
        _Mim_entry_genomeLinks,
        Mim_entry,
        _Mim_text_label,
        _Mim_text_text,
        _Mim_text_neighbors,
        Mim_text,
        _Mim_allelic_variant_number,
        _Mim_allelic_variant_name,
        __Mim_allelic_variant_aliases__item_,
        _Mim_allelic_variant_aliases,
        __Mim_allelic_variant_mutation__item_,
        _Mim_allelic_variant_mutation,
        __Mim_allelic_variant_description__item_,
        _Mim_allelic_variant_description,
        _Mim_allelic_variant_snpLinks,
        Mim_allelic_variant,
        _Mim_link_num,
        _Mim_link_uids,
        _Mim_link_numRelevant,
        Mim_link,
        _Mim_author_name,
        _Mim_author_index,
        Mim_author,
        _Mim_cit_number,
        _Mim_cit_author,
        _Mim_cit_others,
        _Mim_cit_year,
        Mim_cit,
        _Mim_reference_number,
        _Mim_reference_origNumber,
        _Mim_reference_type,
        __Mim_reference_authors__item_,
        _Mim_reference_authors,
        _Mim_reference_primaryAuthor,
        _Mim_reference_otherAuthors,
        _Mim_reference_citationTitle,
        _Mim_reference_citationType,
        _Mim_reference_bookTitle,
        __Mim_reference_editors__item_,
        _Mim_reference_editors,
        _Mim_reference_volume,
        _Mim_reference_edition,
        _Mim_reference_journal,
        _Mim_reference_series,
        _Mim_reference_publisher,
        _Mim_reference_place,
        _Mim_reference_commNote,
        _Mim_reference_pubDate,
        __Mim_reference_pages__item_,
        _Mim_reference_pages,
        _Mim_reference_miscInfo,
        _Mim_reference_pubmedUID,
        _Mim_reference_ambiguous,
        _Mim_reference_noLink,
        Mim_reference,
        _Mim_index_term_key,
        __Mim_index_term_terms__item_,
        _Mim_index_term_terms,
        Mim_index_term,
        _Mim_edit_item_author,
        _Mim_edit_item_modDate,
        Mim_edit_item,
        _Mim_date_year,
        _Mim_date_month,
        _Mim_date_day,
        Mim_date,
        _Mim_page_from_,
        _Mim_page_to,
        Mim_page,
    ]

class NCBI_MedArchive:

    _name_  = 'NCBI-MedArchive'
    _oid_   = []
    
    _obj_ = [
        'Mla-request',
        'Title-type',
        'Title-msg',
        'Title-msg-list',
        'Error-val',
        'Mla-back',
        ]
    _type_ = [
        'Mla-request',
        'Title-type',
        'Title-msg',
        'Title-msg-list',
        'Error-val',
        'Mla-back',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Mla-request >-----#
    Mla_request = CHOICE(name='Mla-request', mode=MODE_TYPE)
    _Mla_request_init = NULL(name='init', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mla_request_getmle = INT(name='getmle', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mla_request_getpub = INT(name='getpub', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mla_request_gettitle = SEQ(name='gettitle', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-MedArchive', 'Title-msg')))
    _Mla_request_citmatch = CHOICE(name='citmatch', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Pub', 'Pub')))
    _Mla_request_fini = NULL(name='fini', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mla_request_getmriuids = INT(name='getmriuids', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mla_request_getaccuids = SEQ(name='getaccuids', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Medline', 'Medline-si')))
    _Mla_request_uidtopmid = INT(name='uidtopmid', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mla_request_pmidtouid = INT(name='pmidtouid', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'PubMedId')))
    _Mla_request_getmlepmid = INT(name='getmlepmid', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'PubMedId')))
    _Mla_request_getpubpmid = INT(name='getpubpmid', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'PubMedId')))
    _Mla_request_citmatchpmid = CHOICE(name='citmatchpmid', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Pub', 'Pub')))
    _Mla_request_getmripmids = INT(name='getmripmids', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mla_request_getaccpmids = SEQ(name='getaccpmids', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Medline', 'Medline-si')))
    _Mla_request_citlstpmids = CHOICE(name='citlstpmids', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Pub', 'Pub')))
    _Mla_request_getmleuid = INT(name='getmleuid', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mla_request_getmlrpmid = INT(name='getmlrpmid', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'PubMedId')))
    _Mla_request_getmlruid = INT(name='getmlruid', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Mla_request._cont = ASN1Dict([
        ('init', _Mla_request_init),
        ('getmle', _Mla_request_getmle),
        ('getpub', _Mla_request_getpub),
        ('gettitle', _Mla_request_gettitle),
        ('citmatch', _Mla_request_citmatch),
        ('fini', _Mla_request_fini),
        ('getmriuids', _Mla_request_getmriuids),
        ('getaccuids', _Mla_request_getaccuids),
        ('uidtopmid', _Mla_request_uidtopmid),
        ('pmidtouid', _Mla_request_pmidtouid),
        ('getmlepmid', _Mla_request_getmlepmid),
        ('getpubpmid', _Mla_request_getpubpmid),
        ('citmatchpmid', _Mla_request_citmatchpmid),
        ('getmripmids', _Mla_request_getmripmids),
        ('getaccpmids', _Mla_request_getaccpmids),
        ('citlstpmids', _Mla_request_citlstpmids),
        ('getmleuid', _Mla_request_getmleuid),
        ('getmlrpmid', _Mla_request_getmlrpmid),
        ('getmlruid', _Mla_request_getmlruid),
        ])
    Mla_request._ext = None
    
    #-----< Title-type >-----#
    Title_type = ENUM(name='Title-type', mode=MODE_TYPE)
    Title_type._cont = ASN1Dict([('not-set', 0), ('name', 1), ('tsub', 2), ('trans', 3), ('jta', 4), ('iso-jta', 5), ('ml-jta', 6), ('coden', 7), ('issn', 8), ('abr', 9), ('isbn', 10), ('all', 255)])
    Title_type._ext = None
    
    #-----< Title-msg >-----#
    Title_msg = SEQ(name='Title-msg', mode=MODE_TYPE)
    _Title_msg_type = ENUM(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-MedArchive', 'Title-type')))
    _Title_msg_title = SET_OF(name='title', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Title')))
    Title_msg._cont = ASN1Dict([
        ('type', _Title_msg_type),
        ('title', _Title_msg_title),
        ])
    Title_msg._ext = None
    
    #-----< Title-msg-list >-----#
    Title_msg_list = SEQ(name='Title-msg-list', mode=MODE_TYPE)
    _Title_msg_list_num = INT(name='num', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Title_msg_list_titles = SEQ_OF(name='titles', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Title_msg_list_titles__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-MedArchive', 'Title-msg')))
    _Title_msg_list_titles._cont = __Title_msg_list_titles__item_
    Title_msg_list._cont = ASN1Dict([
        ('num', _Title_msg_list_num),
        ('titles', _Title_msg_list_titles),
        ])
    Title_msg_list._ext = None
    
    #-----< Error-val >-----#
    Error_val = ENUM(name='Error-val', mode=MODE_TYPE)
    Error_val._cont = ASN1Dict([('not-found', 0), ('operational-error', 1), ('cannot-connect-jrsrv', 2), ('cannot-connect-pmdb', 3), ('journal-not-found', 4), ('citation-not-found', 5), ('citation-ambiguous', 6), ('citation-too-many', 7), ('cannot-connect-searchbackend-jrsrv', 8), ('cannot-connect-searchbackend-pmdb', 9), ('cannot-connect-docsumbackend', 10)])
    Error_val._ext = None
    
    #-----< Mla-back >-----#
    Mla_back = CHOICE(name='Mla-back', mode=MODE_TYPE)
    _Mla_back_init = NULL(name='init', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mla_back_error = ENUM(name='error', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-MedArchive', 'Error-val')))
    _Mla_back_getmle = SEQ(name='getmle', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Medline', 'Medline-entry')))
    _Mla_back_getpub = CHOICE(name='getpub', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Pub', 'Pub')))
    _Mla_back_gettitle = SEQ(name='gettitle', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-MedArchive', 'Title-msg-list')))
    _Mla_back_citmatch = INT(name='citmatch', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mla_back_fini = NULL(name='fini', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mla_back_getuids = SEQ_OF(name='getuids', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Mla_back_getuids__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Mla_back_getuids._cont = __Mla_back_getuids__item_
    _Mla_back_getpmids = SEQ_OF(name='getpmids', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Mla_back_getpmids__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Mla_back_getpmids._cont = __Mla_back_getpmids__item_
    _Mla_back_outuid = INT(name='outuid', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Mla_back_outpmid = INT(name='outpmid', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'PubMedId')))
    _Mla_back_getpme = SEQ(name='getpme', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PubMed', 'Pubmed-entry')))
    _Mla_back_getmlr = SEQ(name='getmlr', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Medlars', 'Medlars-entry')))
    Mla_back._cont = ASN1Dict([
        ('init', _Mla_back_init),
        ('error', _Mla_back_error),
        ('getmle', _Mla_back_getmle),
        ('getpub', _Mla_back_getpub),
        ('gettitle', _Mla_back_gettitle),
        ('citmatch', _Mla_back_citmatch),
        ('fini', _Mla_back_fini),
        ('getuids', _Mla_back_getuids),
        ('getpmids', _Mla_back_getpmids),
        ('outuid', _Mla_back_outuid),
        ('outpmid', _Mla_back_outpmid),
        ('getpme', _Mla_back_getpme),
        ('getmlr', _Mla_back_getmlr),
        ])
    Mla_back._ext = None
    
    _all_ = [
        _Mla_request_init,
        _Mla_request_getmle,
        _Mla_request_getpub,
        _Mla_request_gettitle,
        _Mla_request_citmatch,
        _Mla_request_fini,
        _Mla_request_getmriuids,
        _Mla_request_getaccuids,
        _Mla_request_uidtopmid,
        _Mla_request_pmidtouid,
        _Mla_request_getmlepmid,
        _Mla_request_getpubpmid,
        _Mla_request_citmatchpmid,
        _Mla_request_getmripmids,
        _Mla_request_getaccpmids,
        _Mla_request_citlstpmids,
        _Mla_request_getmleuid,
        _Mla_request_getmlrpmid,
        _Mla_request_getmlruid,
        Mla_request,
        Title_type,
        _Title_msg_type,
        _Title_msg_title,
        Title_msg,
        _Title_msg_list_num,
        __Title_msg_list_titles__item_,
        _Title_msg_list_titles,
        Title_msg_list,
        Error_val,
        _Mla_back_init,
        _Mla_back_error,
        _Mla_back_getmle,
        _Mla_back_getpub,
        _Mla_back_gettitle,
        _Mla_back_citmatch,
        _Mla_back_fini,
        __Mla_back_getuids__item_,
        _Mla_back_getuids,
        __Mla_back_getpmids__item_,
        _Mla_back_getpmids,
        _Mla_back_outuid,
        _Mla_back_outpmid,
        _Mla_back_getpme,
        _Mla_back_getmlr,
        Mla_back,
    ]

class MMDB:

    _name_  = 'MMDB'
    _oid_   = []
    
    _obj_ = [
        'Biostruc',
        'Biostruc-id',
        'Mmdb-id',
        'Biostruc-descr',
        'Biostruc-history',
        'Biostruc-replace',
        'Biostruc-source',
        'Biostruc-set',
        'Biostruc-annot-set',
        'Biostruc-residue-graph-set',
        ]
    _type_ = [
        'Biostruc',
        'Biostruc-id',
        'Mmdb-id',
        'Biostruc-descr',
        'Biostruc-history',
        'Biostruc-replace',
        'Biostruc-source',
        'Biostruc-set',
        'Biostruc-annot-set',
        'Biostruc-residue-graph-set',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Biostruc >-----#
    Biostruc = SEQ(name='Biostruc', mode=MODE_TYPE)
    _Biostruc_id = SEQ_OF(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Biostruc_id__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB', 'Biostruc-id')))
    _Biostruc_id._cont = __Biostruc_id__item_
    _Biostruc_descr = SEQ_OF(name='descr', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Biostruc_descr__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB', 'Biostruc-descr')))
    _Biostruc_descr._cont = __Biostruc_descr__item_
    _Biostruc_chemical_graph = SEQ(name='chemical-graph', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Biostruc-graph')))
    _Biostruc_features = SEQ_OF(name='features', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Biostruc_features__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'Biostruc-feature-set')))
    _Biostruc_features._cont = __Biostruc_features__item_
    _Biostruc_model = SEQ_OF(name='model', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Biostruc_model__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Structural-model', 'Biostruc-model')))
    _Biostruc_model._cont = __Biostruc_model__item_
    Biostruc._cont = ASN1Dict([
        ('id', _Biostruc_id),
        ('descr', _Biostruc_descr),
        ('chemical-graph', _Biostruc_chemical_graph),
        ('features', _Biostruc_features),
        ('model', _Biostruc_model),
        ])
    Biostruc._ext = None
    
    #-----< Biostruc-id >-----#
    Biostruc_id = CHOICE(name='Biostruc-id', mode=MODE_TYPE)
    _Biostruc_id_mmdb_id = INT(name='mmdb-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB', 'Mmdb-id')))
    _Biostruc_id_other_database = SEQ(name='other-database', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    _Biostruc_id_local_id = CHOICE(name='local-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Object-id')))
    Biostruc_id._cont = ASN1Dict([
        ('mmdb-id', _Biostruc_id_mmdb_id),
        ('other-database', _Biostruc_id_other_database),
        ('local-id', _Biostruc_id_local_id),
        ])
    Biostruc_id._ext = None
    
    #-----< Mmdb-id >-----#
    Mmdb_id = INT(name='Mmdb-id', mode=MODE_TYPE)
    
    #-----< Biostruc-descr >-----#
    Biostruc_descr = CHOICE(name='Biostruc-descr', mode=MODE_TYPE)
    _Biostruc_descr_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Biostruc_descr_pdb_comment = STR_VIS(name='pdb-comment', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Biostruc_descr_other_comment = STR_VIS(name='other-comment', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Biostruc_descr_history = SEQ(name='history', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc-history')))
    _Biostruc_descr_attribution = CHOICE(name='attribution', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Pub', 'Pub')))
    Biostruc_descr._cont = ASN1Dict([
        ('name', _Biostruc_descr_name),
        ('pdb-comment', _Biostruc_descr_pdb_comment),
        ('other-comment', _Biostruc_descr_other_comment),
        ('history', _Biostruc_descr_history),
        ('attribution', _Biostruc_descr_attribution),
        ])
    Biostruc_descr._ext = None
    
    #-----< Biostruc-history >-----#
    Biostruc_history = SEQ(name='Biostruc-history', mode=MODE_TYPE)
    _Biostruc_history_replaces = SEQ(name='replaces', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc-replace')), opt=True)
    _Biostruc_history_replaced_by = SEQ(name='replaced-by', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc-replace')), opt=True)
    _Biostruc_history_data_source = SEQ(name='data-source', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc-source')), opt=True)
    Biostruc_history._cont = ASN1Dict([
        ('replaces', _Biostruc_history_replaces),
        ('replaced-by', _Biostruc_history_replaced_by),
        ('data-source', _Biostruc_history_data_source),
        ])
    Biostruc_history._ext = None
    
    #-----< Biostruc-replace >-----#
    Biostruc_replace = SEQ(name='Biostruc-replace', mode=MODE_TYPE)
    _Biostruc_replace_id = CHOICE(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc-id')))
    _Biostruc_replace_date = CHOICE(name='date', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    Biostruc_replace._cont = ASN1Dict([
        ('id', _Biostruc_replace_id),
        ('date', _Biostruc_replace_date),
        ])
    Biostruc_replace._ext = None
    
    #-----< Biostruc-source >-----#
    Biostruc_source = SEQ(name='Biostruc-source', mode=MODE_TYPE)
    _Biostruc_source_name_of_database = STR_VIS(name='name-of-database', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Biostruc_source_version_of_database = CHOICE(name='version-of-database', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __Biostruc_source_version_of_database_release_date = CHOICE(name='release-date', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    __Biostruc_source_version_of_database_release_code = STR_VIS(name='release-code', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Biostruc_source_version_of_database._cont = ASN1Dict([
        ('release-date', __Biostruc_source_version_of_database_release_date),
        ('release-code', __Biostruc_source_version_of_database_release_code),
        ])
    _Biostruc_source_version_of_database._ext = None
    _Biostruc_source_database_entry_id = CHOICE(name='database-entry-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc-id')))
    _Biostruc_source_database_entry_date = CHOICE(name='database-entry-date', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    _Biostruc_source_database_entry_history = SEQ_OF(name='database-entry-history', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Biostruc_source_database_entry_history__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Biostruc_source_database_entry_history._cont = __Biostruc_source_database_entry_history__item_
    Biostruc_source._cont = ASN1Dict([
        ('name-of-database', _Biostruc_source_name_of_database),
        ('version-of-database', _Biostruc_source_version_of_database),
        ('database-entry-id', _Biostruc_source_database_entry_id),
        ('database-entry-date', _Biostruc_source_database_entry_date),
        ('database-entry-history', _Biostruc_source_database_entry_history),
        ])
    Biostruc_source._ext = None
    
    #-----< Biostruc-set >-----#
    Biostruc_set = SEQ(name='Biostruc-set', mode=MODE_TYPE)
    _Biostruc_set_id = SEQ_OF(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Biostruc_set_id__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB', 'Biostruc-id')))
    _Biostruc_set_id._cont = __Biostruc_set_id__item_
    _Biostruc_set_descr = SEQ_OF(name='descr', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Biostruc_set_descr__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB', 'Biostruc-descr')))
    _Biostruc_set_descr._cont = __Biostruc_set_descr__item_
    _Biostruc_set_biostrucs = SEQ_OF(name='biostrucs', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Biostruc_set_biostrucs__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB', 'Biostruc')))
    _Biostruc_set_biostrucs._cont = __Biostruc_set_biostrucs__item_
    Biostruc_set._cont = ASN1Dict([
        ('id', _Biostruc_set_id),
        ('descr', _Biostruc_set_descr),
        ('biostrucs', _Biostruc_set_biostrucs),
        ])
    Biostruc_set._ext = None
    
    #-----< Biostruc-annot-set >-----#
    Biostruc_annot_set = SEQ(name='Biostruc-annot-set', mode=MODE_TYPE)
    _Biostruc_annot_set_id = SEQ_OF(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Biostruc_annot_set_id__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB', 'Biostruc-id')))
    _Biostruc_annot_set_id._cont = __Biostruc_annot_set_id__item_
    _Biostruc_annot_set_descr = SEQ_OF(name='descr', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Biostruc_annot_set_descr__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB', 'Biostruc-descr')))
    _Biostruc_annot_set_descr._cont = __Biostruc_annot_set_descr__item_
    _Biostruc_annot_set_features = SEQ_OF(name='features', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Biostruc_annot_set_features__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'Biostruc-feature-set')))
    _Biostruc_annot_set_features._cont = __Biostruc_annot_set_features__item_
    Biostruc_annot_set._cont = ASN1Dict([
        ('id', _Biostruc_annot_set_id),
        ('descr', _Biostruc_annot_set_descr),
        ('features', _Biostruc_annot_set_features),
        ])
    Biostruc_annot_set._ext = None
    
    #-----< Biostruc-residue-graph-set >-----#
    Biostruc_residue_graph_set = SEQ(name='Biostruc-residue-graph-set', mode=MODE_TYPE)
    _Biostruc_residue_graph_set_id = SEQ_OF(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Biostruc_residue_graph_set_id__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB', 'Biostruc-id')))
    _Biostruc_residue_graph_set_id._cont = __Biostruc_residue_graph_set_id__item_
    _Biostruc_residue_graph_set_descr = SEQ_OF(name='descr', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Biostruc_residue_graph_set_descr__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Biomol-descr')))
    _Biostruc_residue_graph_set_descr._cont = __Biostruc_residue_graph_set_descr__item_
    _Biostruc_residue_graph_set_residue_graphs = SEQ_OF(name='residue-graphs', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Biostruc_residue_graph_set_residue_graphs__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Residue-graph')))
    _Biostruc_residue_graph_set_residue_graphs._cont = __Biostruc_residue_graph_set_residue_graphs__item_
    Biostruc_residue_graph_set._cont = ASN1Dict([
        ('id', _Biostruc_residue_graph_set_id),
        ('descr', _Biostruc_residue_graph_set_descr),
        ('residue-graphs', _Biostruc_residue_graph_set_residue_graphs),
        ])
    Biostruc_residue_graph_set._ext = None
    
    _all_ = [
        __Biostruc_id__item_,
        _Biostruc_id,
        __Biostruc_descr__item_,
        _Biostruc_descr,
        _Biostruc_chemical_graph,
        __Biostruc_features__item_,
        _Biostruc_features,
        __Biostruc_model__item_,
        _Biostruc_model,
        Biostruc,
        _Biostruc_id_mmdb_id,
        _Biostruc_id_other_database,
        _Biostruc_id_local_id,
        Biostruc_id,
        Mmdb_id,
        _Biostruc_descr_name,
        _Biostruc_descr_pdb_comment,
        _Biostruc_descr_other_comment,
        _Biostruc_descr_history,
        _Biostruc_descr_attribution,
        Biostruc_descr,
        _Biostruc_history_replaces,
        _Biostruc_history_replaced_by,
        _Biostruc_history_data_source,
        Biostruc_history,
        _Biostruc_replace_id,
        _Biostruc_replace_date,
        Biostruc_replace,
        _Biostruc_source_name_of_database,
        __Biostruc_source_version_of_database_release_date,
        __Biostruc_source_version_of_database_release_code,
        _Biostruc_source_version_of_database,
        _Biostruc_source_database_entry_id,
        _Biostruc_source_database_entry_date,
        __Biostruc_source_database_entry_history__item_,
        _Biostruc_source_database_entry_history,
        Biostruc_source,
        __Biostruc_set_id__item_,
        _Biostruc_set_id,
        __Biostruc_set_descr__item_,
        _Biostruc_set_descr,
        __Biostruc_set_biostrucs__item_,
        _Biostruc_set_biostrucs,
        Biostruc_set,
        __Biostruc_annot_set_id__item_,
        _Biostruc_annot_set_id,
        __Biostruc_annot_set_descr__item_,
        _Biostruc_annot_set_descr,
        __Biostruc_annot_set_features__item_,
        _Biostruc_annot_set_features,
        Biostruc_annot_set,
        __Biostruc_residue_graph_set_id__item_,
        _Biostruc_residue_graph_set_id,
        __Biostruc_residue_graph_set_descr__item_,
        _Biostruc_residue_graph_set_descr,
        __Biostruc_residue_graph_set_residue_graphs__item_,
        _Biostruc_residue_graph_set_residue_graphs,
        Biostruc_residue_graph_set,
    ]

class MMDB_Chemical_graph:

    _name_  = 'MMDB-Chemical-graph'
    _oid_   = []
    
    _obj_ = [
        'Biostruc-graph',
        'Biomol-descr',
        'Molecule-graph',
        'Molecule-id',
        'PCSubstance-id',
        'Residue',
        'Residue-id',
        'Residue-graph-pntr',
        'Biostruc-graph-pntr',
        'Biostruc-residue-graph-set-pntr',
        'Residue-graph',
        'Residue-graph-id',
        'Atom',
        'Atom-id',
        'Intra-residue-bond',
        'Chiral-center',
        'Inter-residue-bond',
        'Atom-pntr',
        'Atom-pntr-set',
        ]
    _type_ = [
        'Biostruc-graph',
        'Biomol-descr',
        'Molecule-graph',
        'Molecule-id',
        'PCSubstance-id',
        'Residue',
        'Residue-id',
        'Residue-graph-pntr',
        'Biostruc-graph-pntr',
        'Biostruc-residue-graph-set-pntr',
        'Residue-graph',
        'Residue-graph-id',
        'Atom',
        'Atom-id',
        'Intra-residue-bond',
        'Chiral-center',
        'Inter-residue-bond',
        'Atom-pntr',
        'Atom-pntr-set',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Biostruc-graph >-----#
    Biostruc_graph = SEQ(name='Biostruc-graph', mode=MODE_TYPE)
    _Biostruc_graph_descr = SEQ_OF(name='descr', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Biostruc_graph_descr__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Biomol-descr')))
    _Biostruc_graph_descr._cont = __Biostruc_graph_descr__item_
    _Biostruc_graph_molecule_graphs = SEQ_OF(name='molecule-graphs', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Biostruc_graph_molecule_graphs__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Molecule-graph')))
    _Biostruc_graph_molecule_graphs._cont = __Biostruc_graph_molecule_graphs__item_
    _Biostruc_graph_inter_molecule_bonds = SEQ_OF(name='inter-molecule-bonds', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Biostruc_graph_inter_molecule_bonds__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Inter-residue-bond')))
    _Biostruc_graph_inter_molecule_bonds._cont = __Biostruc_graph_inter_molecule_bonds__item_
    _Biostruc_graph_residue_graphs = SEQ_OF(name='residue-graphs', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Biostruc_graph_residue_graphs__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Residue-graph')))
    _Biostruc_graph_residue_graphs._cont = __Biostruc_graph_residue_graphs__item_
    Biostruc_graph._cont = ASN1Dict([
        ('descr', _Biostruc_graph_descr),
        ('molecule-graphs', _Biostruc_graph_molecule_graphs),
        ('inter-molecule-bonds', _Biostruc_graph_inter_molecule_bonds),
        ('residue-graphs', _Biostruc_graph_residue_graphs),
        ])
    Biostruc_graph._ext = None
    
    #-----< Biomol-descr >-----#
    Biomol_descr = CHOICE(name='Biomol-descr', mode=MODE_TYPE)
    _Biomol_descr_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Biomol_descr_pdb_class = STR_VIS(name='pdb-class', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Biomol_descr_pdb_source = STR_VIS(name='pdb-source', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Biomol_descr_pdb_comment = STR_VIS(name='pdb-comment', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Biomol_descr_other_comment = STR_VIS(name='other-comment', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Biomol_descr_organism = SEQ(name='organism', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BioSource', 'BioSource')))
    _Biomol_descr_attribution = CHOICE(name='attribution', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Pub', 'Pub')))
    _Biomol_descr_assembly_type = INT(name='assembly-type', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Biomol_descr_assembly_type._cont = ASN1Dict([('physiological-form', 1), ('crystallographic-cell', 2), ('other', 255)])
    _Biomol_descr_molecule_type = INT(name='molecule-type', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Biomol_descr_molecule_type._cont = ASN1Dict([('dna', 1), ('rna', 2), ('protein', 3), ('other-biopolymer', 4), ('solvent', 5), ('other-nonpolymer', 6), ('other', 255)])
    Biomol_descr._cont = ASN1Dict([
        ('name', _Biomol_descr_name),
        ('pdb-class', _Biomol_descr_pdb_class),
        ('pdb-source', _Biomol_descr_pdb_source),
        ('pdb-comment', _Biomol_descr_pdb_comment),
        ('other-comment', _Biomol_descr_other_comment),
        ('organism', _Biomol_descr_organism),
        ('attribution', _Biomol_descr_attribution),
        ('assembly-type', _Biomol_descr_assembly_type),
        ('molecule-type', _Biomol_descr_molecule_type),
        ])
    Biomol_descr._ext = None
    
    #-----< Molecule-graph >-----#
    Molecule_graph = SEQ(name='Molecule-graph', mode=MODE_TYPE)
    _Molecule_graph_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Molecule-id')))
    _Molecule_graph_descr = SEQ_OF(name='descr', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Molecule_graph_descr__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Biomol-descr')))
    _Molecule_graph_descr._cont = __Molecule_graph_descr__item_
    _Molecule_graph_seq_id = CHOICE(name='seq-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')), opt=True)
    _Molecule_graph_residue_sequence = SEQ_OF(name='residue-sequence', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Molecule_graph_residue_sequence__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Residue')))
    _Molecule_graph_residue_sequence._cont = __Molecule_graph_residue_sequence__item_
    _Molecule_graph_inter_residue_bonds = SEQ_OF(name='inter-residue-bonds', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Molecule_graph_inter_residue_bonds__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Inter-residue-bond')))
    _Molecule_graph_inter_residue_bonds._cont = __Molecule_graph_inter_residue_bonds__item_
    _Molecule_graph_sid = INT(name='sid', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'PCSubstance-id')), opt=True)
    Molecule_graph._cont = ASN1Dict([
        ('id', _Molecule_graph_id),
        ('descr', _Molecule_graph_descr),
        ('seq-id', _Molecule_graph_seq_id),
        ('residue-sequence', _Molecule_graph_residue_sequence),
        ('inter-residue-bonds', _Molecule_graph_inter_residue_bonds),
        ('sid', _Molecule_graph_sid),
        ])
    Molecule_graph._ext = None
    
    #-----< Molecule-id >-----#
    Molecule_id = INT(name='Molecule-id', mode=MODE_TYPE)
    
    #-----< PCSubstance-id >-----#
    PCSubstance_id = INT(name='PCSubstance-id', mode=MODE_TYPE)
    
    #-----< Residue >-----#
    Residue = SEQ(name='Residue', mode=MODE_TYPE)
    _Residue_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Residue-id')))
    _Residue_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Residue_residue_graph = CHOICE(name='residue-graph', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Residue-graph-pntr')))
    Residue._cont = ASN1Dict([
        ('id', _Residue_id),
        ('name', _Residue_name),
        ('residue-graph', _Residue_residue_graph),
        ])
    Residue._ext = None
    
    #-----< Residue-id >-----#
    Residue_id = INT(name='Residue-id', mode=MODE_TYPE)
    
    #-----< Residue-graph-pntr >-----#
    Residue_graph_pntr = CHOICE(name='Residue-graph-pntr', mode=MODE_TYPE)
    _Residue_graph_pntr_local = INT(name='local', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Residue-graph-id')))
    _Residue_graph_pntr_biostruc = SEQ(name='biostruc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Biostruc-graph-pntr')))
    _Residue_graph_pntr_standard = SEQ(name='standard', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Biostruc-residue-graph-set-pntr')))
    Residue_graph_pntr._cont = ASN1Dict([
        ('local', _Residue_graph_pntr_local),
        ('biostruc', _Residue_graph_pntr_biostruc),
        ('standard', _Residue_graph_pntr_standard),
        ])
    Residue_graph_pntr._ext = None
    
    #-----< Biostruc-graph-pntr >-----#
    Biostruc_graph_pntr = SEQ(name='Biostruc-graph-pntr', mode=MODE_TYPE)
    _Biostruc_graph_pntr_biostruc_id = CHOICE(name='biostruc-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc-id')))
    _Biostruc_graph_pntr_residue_graph_id = INT(name='residue-graph-id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Residue-graph-id')))
    Biostruc_graph_pntr._cont = ASN1Dict([
        ('biostruc-id', _Biostruc_graph_pntr_biostruc_id),
        ('residue-graph-id', _Biostruc_graph_pntr_residue_graph_id),
        ])
    Biostruc_graph_pntr._ext = None
    
    #-----< Biostruc-residue-graph-set-pntr >-----#
    Biostruc_residue_graph_set_pntr = SEQ(name='Biostruc-residue-graph-set-pntr', mode=MODE_TYPE)
    _Biostruc_residue_graph_set_pntr_biostruc_residue_graph_set_id = CHOICE(name='biostruc-residue-graph-set-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc-id')))
    _Biostruc_residue_graph_set_pntr_residue_graph_id = INT(name='residue-graph-id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Residue-graph-id')))
    Biostruc_residue_graph_set_pntr._cont = ASN1Dict([
        ('biostruc-residue-graph-set-id', _Biostruc_residue_graph_set_pntr_biostruc_residue_graph_set_id),
        ('residue-graph-id', _Biostruc_residue_graph_set_pntr_residue_graph_id),
        ])
    Biostruc_residue_graph_set_pntr._ext = None
    
    #-----< Residue-graph >-----#
    Residue_graph = SEQ(name='Residue-graph', mode=MODE_TYPE)
    _Residue_graph_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Residue-graph-id')))
    _Residue_graph_descr = SEQ_OF(name='descr', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Residue_graph_descr__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Biomol-descr')))
    _Residue_graph_descr._cont = __Residue_graph_descr__item_
    _Residue_graph_residue_type = INT(name='residue-type', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Residue_graph_residue_type._cont = ASN1Dict([('deoxyribonucleotide', 1), ('ribonucleotide', 2), ('amino-acid', 3), ('other', 255)])
    _Residue_graph_iupac_code = SEQ_OF(name='iupac-code', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Residue_graph_iupac_code__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Residue_graph_iupac_code._cont = __Residue_graph_iupac_code__item_
    _Residue_graph_atoms = SEQ_OF(name='atoms', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Residue_graph_atoms__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Atom')))
    _Residue_graph_atoms._cont = __Residue_graph_atoms__item_
    _Residue_graph_bonds = SEQ_OF(name='bonds', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Residue_graph_bonds__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Intra-residue-bond')))
    _Residue_graph_bonds._cont = __Residue_graph_bonds__item_
    _Residue_graph_chiral_centers = SEQ_OF(name='chiral-centers', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Residue_graph_chiral_centers__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Chiral-center')))
    _Residue_graph_chiral_centers._cont = __Residue_graph_chiral_centers__item_
    Residue_graph._cont = ASN1Dict([
        ('id', _Residue_graph_id),
        ('descr', _Residue_graph_descr),
        ('residue-type', _Residue_graph_residue_type),
        ('iupac-code', _Residue_graph_iupac_code),
        ('atoms', _Residue_graph_atoms),
        ('bonds', _Residue_graph_bonds),
        ('chiral-centers', _Residue_graph_chiral_centers),
        ])
    Residue_graph._ext = None
    
    #-----< Residue-graph-id >-----#
    Residue_graph_id = INT(name='Residue-graph-id', mode=MODE_TYPE)
    
    #-----< Atom >-----#
    Atom = SEQ(name='Atom', mode=MODE_TYPE)
    _Atom_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Atom-id')))
    _Atom_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Atom_iupac_code = SEQ_OF(name='iupac-code', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Atom_iupac_code__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Atom_iupac_code._cont = __Atom_iupac_code__item_
    _Atom_element = ENUM(name='element', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Atom_element._cont = ASN1Dict([('h', 1), ('he', 2), ('li', 3), ('be', 4), ('b', 5), ('c', 6), ('n', 7), ('o', 8), ('f', 9), ('ne', 10), ('na', 11), ('mg', 12), ('al', 13), ('si', 14), ('p', 15), ('s', 16), ('cl', 17), ('ar', 18), ('k', 19), ('ca', 20), ('sc', 21), ('ti', 22), ('v', 23), ('cr', 24), ('mn', 25), ('fe', 26), ('co', 27), ('ni', 28), ('cu', 29), ('zn', 30), ('ga', 31), ('ge', 32), ('as', 33), ('se', 34), ('br', 35), ('kr', 36), ('rb', 37), ('sr', 38), ('y', 39), ('zr', 40), ('nb', 41), ('mo', 42), ('tc', 43), ('ru', 44), ('rh', 45), ('pd', 46), ('ag', 47), ('cd', 48), ('in', 49), ('sn', 50), ('sb', 51), ('te', 52), ('i', 53), ('xe', 54), ('cs', 55), ('ba', 56), ('la', 57), ('ce', 58), ('pr', 59), ('nd', 60), ('pm', 61), ('sm', 62), ('eu', 63), ('gd', 64), ('tb', 65), ('dy', 66), ('ho', 67), ('er', 68), ('tm', 69), ('yb', 70), ('lu', 71), ('hf', 72), ('ta', 73), ('w', 74), ('re', 75), ('os', 76), ('ir', 77), ('pt', 78), ('au', 79), ('hg', 80), ('tl', 81), ('pb', 82), ('bi', 83), ('po', 84), ('at', 85), ('rn', 86), ('fr', 87), ('ra', 88), ('ac', 89), ('th', 90), ('pa', 91), ('u', 92), ('np', 93), ('pu', 94), ('am', 95), ('cm', 96), ('bk', 97), ('cf', 98), ('es', 99), ('fm', 100), ('md', 101), ('no', 102), ('lr', 103), ('other', 254), ('unknown', 255)])
    _Atom_element._ext = None
    _Atom_ionizable_proton = ENUM(name='ionizable-proton', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Atom_ionizable_proton._cont = ASN1Dict([('true', 1), ('false', 2), ('unknown', 255)])
    _Atom_ionizable_proton._ext = None
    Atom._cont = ASN1Dict([
        ('id', _Atom_id),
        ('name', _Atom_name),
        ('iupac-code', _Atom_iupac_code),
        ('element', _Atom_element),
        ('ionizable-proton', _Atom_ionizable_proton),
        ])
    Atom._ext = None
    
    #-----< Atom-id >-----#
    Atom_id = INT(name='Atom-id', mode=MODE_TYPE)
    
    #-----< Intra-residue-bond >-----#
    Intra_residue_bond = SEQ(name='Intra-residue-bond', mode=MODE_TYPE)
    _Intra_residue_bond_atom_id_1 = INT(name='atom-id-1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Atom-id')))
    _Intra_residue_bond_atom_id_2 = INT(name='atom-id-2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Atom-id')))
    _Intra_residue_bond_bond_order = INT(name='bond-order', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Intra_residue_bond_bond_order._cont = ASN1Dict([('single', 1), ('partial-double', 2), ('aromatic', 3), ('double', 4), ('triple', 5), ('other', 6), ('unknown', 255)])
    Intra_residue_bond._cont = ASN1Dict([
        ('atom-id-1', _Intra_residue_bond_atom_id_1),
        ('atom-id-2', _Intra_residue_bond_atom_id_2),
        ('bond-order', _Intra_residue_bond_bond_order),
        ])
    Intra_residue_bond._ext = None
    
    #-----< Chiral-center >-----#
    Chiral_center = SEQ(name='Chiral-center', mode=MODE_TYPE)
    _Chiral_center_c = INT(name='c', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Atom-id')))
    _Chiral_center_n1 = INT(name='n1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Atom-id')))
    _Chiral_center_n2 = INT(name='n2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Atom-id')))
    _Chiral_center_n3 = INT(name='n3', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Atom-id')))
    _Chiral_center_sign = ENUM(name='sign', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Chiral_center_sign._cont = ASN1Dict([('positive', 1), ('negative', 2)])
    _Chiral_center_sign._ext = None
    Chiral_center._cont = ASN1Dict([
        ('c', _Chiral_center_c),
        ('n1', _Chiral_center_n1),
        ('n2', _Chiral_center_n2),
        ('n3', _Chiral_center_n3),
        ('sign', _Chiral_center_sign),
        ])
    Chiral_center._ext = None
    
    #-----< Inter-residue-bond >-----#
    Inter_residue_bond = SEQ(name='Inter-residue-bond', mode=MODE_TYPE)
    _Inter_residue_bond_atom_id_1 = SEQ(name='atom-id-1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Atom-pntr')))
    _Inter_residue_bond_atom_id_2 = SEQ(name='atom-id-2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Atom-pntr')))
    _Inter_residue_bond_bond_order = INT(name='bond-order', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Inter_residue_bond_bond_order._cont = ASN1Dict([('single', 1), ('partial-double', 2), ('aromatic', 3), ('double', 4), ('triple', 5), ('other', 6), ('unknown', 255)])
    Inter_residue_bond._cont = ASN1Dict([
        ('atom-id-1', _Inter_residue_bond_atom_id_1),
        ('atom-id-2', _Inter_residue_bond_atom_id_2),
        ('bond-order', _Inter_residue_bond_bond_order),
        ])
    Inter_residue_bond._ext = None
    
    #-----< Atom-pntr >-----#
    Atom_pntr = SEQ(name='Atom-pntr', mode=MODE_TYPE)
    _Atom_pntr_molecule_id = INT(name='molecule-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Molecule-id')))
    _Atom_pntr_residue_id = INT(name='residue-id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Residue-id')))
    _Atom_pntr_atom_id = INT(name='atom-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Atom-id')))
    Atom_pntr._cont = ASN1Dict([
        ('molecule-id', _Atom_pntr_molecule_id),
        ('residue-id', _Atom_pntr_residue_id),
        ('atom-id', _Atom_pntr_atom_id),
        ])
    Atom_pntr._ext = None
    
    #-----< Atom-pntr-set >-----#
    Atom_pntr_set = SEQ_OF(name='Atom-pntr-set', mode=MODE_TYPE)
    _Atom_pntr_set__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Atom-pntr')))
    Atom_pntr_set._cont = _Atom_pntr_set__item_
    
    _all_ = [
        __Biostruc_graph_descr__item_,
        _Biostruc_graph_descr,
        __Biostruc_graph_molecule_graphs__item_,
        _Biostruc_graph_molecule_graphs,
        __Biostruc_graph_inter_molecule_bonds__item_,
        _Biostruc_graph_inter_molecule_bonds,
        __Biostruc_graph_residue_graphs__item_,
        _Biostruc_graph_residue_graphs,
        Biostruc_graph,
        _Biomol_descr_name,
        _Biomol_descr_pdb_class,
        _Biomol_descr_pdb_source,
        _Biomol_descr_pdb_comment,
        _Biomol_descr_other_comment,
        _Biomol_descr_organism,
        _Biomol_descr_attribution,
        _Biomol_descr_assembly_type,
        _Biomol_descr_molecule_type,
        Biomol_descr,
        _Molecule_graph_id,
        __Molecule_graph_descr__item_,
        _Molecule_graph_descr,
        _Molecule_graph_seq_id,
        __Molecule_graph_residue_sequence__item_,
        _Molecule_graph_residue_sequence,
        __Molecule_graph_inter_residue_bonds__item_,
        _Molecule_graph_inter_residue_bonds,
        _Molecule_graph_sid,
        Molecule_graph,
        Molecule_id,
        PCSubstance_id,
        _Residue_id,
        _Residue_name,
        _Residue_residue_graph,
        Residue,
        Residue_id,
        _Residue_graph_pntr_local,
        _Residue_graph_pntr_biostruc,
        _Residue_graph_pntr_standard,
        Residue_graph_pntr,
        _Biostruc_graph_pntr_biostruc_id,
        _Biostruc_graph_pntr_residue_graph_id,
        Biostruc_graph_pntr,
        _Biostruc_residue_graph_set_pntr_biostruc_residue_graph_set_id,
        _Biostruc_residue_graph_set_pntr_residue_graph_id,
        Biostruc_residue_graph_set_pntr,
        _Residue_graph_id,
        __Residue_graph_descr__item_,
        _Residue_graph_descr,
        _Residue_graph_residue_type,
        __Residue_graph_iupac_code__item_,
        _Residue_graph_iupac_code,
        __Residue_graph_atoms__item_,
        _Residue_graph_atoms,
        __Residue_graph_bonds__item_,
        _Residue_graph_bonds,
        __Residue_graph_chiral_centers__item_,
        _Residue_graph_chiral_centers,
        Residue_graph,
        Residue_graph_id,
        _Atom_id,
        _Atom_name,
        __Atom_iupac_code__item_,
        _Atom_iupac_code,
        _Atom_element,
        _Atom_ionizable_proton,
        Atom,
        Atom_id,
        _Intra_residue_bond_atom_id_1,
        _Intra_residue_bond_atom_id_2,
        _Intra_residue_bond_bond_order,
        Intra_residue_bond,
        _Chiral_center_c,
        _Chiral_center_n1,
        _Chiral_center_n2,
        _Chiral_center_n3,
        _Chiral_center_sign,
        Chiral_center,
        _Inter_residue_bond_atom_id_1,
        _Inter_residue_bond_atom_id_2,
        _Inter_residue_bond_bond_order,
        Inter_residue_bond,
        _Atom_pntr_molecule_id,
        _Atom_pntr_residue_id,
        _Atom_pntr_atom_id,
        Atom_pntr,
        _Atom_pntr_set__item_,
        Atom_pntr_set,
    ]

class MMDB_Structural_model:

    _name_  = 'MMDB-Structural-model'
    _oid_   = []
    
    _obj_ = [
        'Biostruc-model',
        'Model-id',
        'Model-type',
        'Model-descr',
        'Model-space',
        'Reference-frame',
        'Model-coordinate-set',
        'Model-coordinate-set-id',
        'Coordinates',
        'Atomic-coordinates',
        'Model-space-points',
        'Atomic-temperature-factors',
        'Isotropic-temperature-factors',
        'Anisotropic-temperature-factors',
        'Atomic-occupancies',
        'Alternate-conformation-ids',
        'Alternate-conformation-id',
        'Conformation-ensemble',
        'Surface-coordinates',
        'T-mesh',
        'Triangles',
        'Density-coordinates',
        ]
    _type_ = [
        'Biostruc-model',
        'Model-id',
        'Model-type',
        'Model-descr',
        'Model-space',
        'Reference-frame',
        'Model-coordinate-set',
        'Model-coordinate-set-id',
        'Coordinates',
        'Atomic-coordinates',
        'Model-space-points',
        'Atomic-temperature-factors',
        'Isotropic-temperature-factors',
        'Anisotropic-temperature-factors',
        'Atomic-occupancies',
        'Alternate-conformation-ids',
        'Alternate-conformation-id',
        'Conformation-ensemble',
        'Surface-coordinates',
        'T-mesh',
        'Triangles',
        'Density-coordinates',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Biostruc-model >-----#
    Biostruc_model = SEQ(name='Biostruc-model', mode=MODE_TYPE)
    _Biostruc_model_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Structural-model', 'Model-id')))
    _Biostruc_model_type = INT(name='type', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Structural-model', 'Model-type')))
    _Biostruc_model_descr = SEQ_OF(name='descr', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Biostruc_model_descr__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Structural-model', 'Model-descr')))
    _Biostruc_model_descr._cont = __Biostruc_model_descr__item_
    _Biostruc_model_model_space = SEQ(name='model-space', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Structural-model', 'Model-space')), opt=True)
    _Biostruc_model_model_coordinates = SEQ_OF(name='model-coordinates', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Biostruc_model_model_coordinates__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Structural-model', 'Model-coordinate-set')))
    _Biostruc_model_model_coordinates._cont = __Biostruc_model_model_coordinates__item_
    Biostruc_model._cont = ASN1Dict([
        ('id', _Biostruc_model_id),
        ('type', _Biostruc_model_type),
        ('descr', _Biostruc_model_descr),
        ('model-space', _Biostruc_model_model_space),
        ('model-coordinates', _Biostruc_model_model_coordinates),
        ])
    Biostruc_model._ext = None
    
    #-----< Model-id >-----#
    Model_id = INT(name='Model-id', mode=MODE_TYPE)
    
    #-----< Model-type >-----#
    Model_type = INT(name='Model-type', mode=MODE_TYPE)
    Model_type._cont = ASN1Dict([('ncbi-vector', 1), ('ncbi-backbone', 2), ('ncbi-all-atom', 3), ('pdb-model', 4), ('other', 255)])
    
    #-----< Model-descr >-----#
    Model_descr = CHOICE(name='Model-descr', mode=MODE_TYPE)
    _Model_descr_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Model_descr_pdb_reso = STR_VIS(name='pdb-reso', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Model_descr_pdb_method = STR_VIS(name='pdb-method', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Model_descr_pdb_comment = STR_VIS(name='pdb-comment', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Model_descr_other_comment = STR_VIS(name='other-comment', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Model_descr_attribution = CHOICE(name='attribution', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Pub', 'Pub')))
    Model_descr._cont = ASN1Dict([
        ('name', _Model_descr_name),
        ('pdb-reso', _Model_descr_pdb_reso),
        ('pdb-method', _Model_descr_pdb_method),
        ('pdb-comment', _Model_descr_pdb_comment),
        ('other-comment', _Model_descr_other_comment),
        ('attribution', _Model_descr_attribution),
        ])
    Model_descr._ext = None
    
    #-----< Model-space >-----#
    Model_space = SEQ(name='Model-space', mode=MODE_TYPE)
    _Model_space_coordinate_units = ENUM(name='coordinate-units', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Model_space_coordinate_units._cont = ASN1Dict([('angstroms', 1), ('nanometers', 2), ('other', 3), ('unknown', 255)])
    _Model_space_coordinate_units._ext = None
    _Model_space_thermal_factor_units = ENUM(name='thermal-factor-units', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Model_space_thermal_factor_units._cont = ASN1Dict([('b', 1), ('u', 2), ('other', 3), ('unknown', 255)])
    _Model_space_thermal_factor_units._ext = None
    _Model_space_occupancy_factor_units = ENUM(name='occupancy-factor-units', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Model_space_occupancy_factor_units._cont = ASN1Dict([('fractional', 1), ('electrons', 2), ('other', 3), ('unknown', 255)])
    _Model_space_occupancy_factor_units._ext = None
    _Model_space_density_units = ENUM(name='density-units', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Model_space_density_units._cont = ASN1Dict([('electrons-per-unit-volume', 1), ('arbitrary-scale', 2), ('other', 3), ('unknown', 255)])
    _Model_space_density_units._ext = None
    _Model_space_reference_frame = SEQ(name='reference-frame', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Structural-model', 'Reference-frame')), opt=True)
    Model_space._cont = ASN1Dict([
        ('coordinate-units', _Model_space_coordinate_units),
        ('thermal-factor-units', _Model_space_thermal_factor_units),
        ('occupancy-factor-units', _Model_space_occupancy_factor_units),
        ('density-units', _Model_space_density_units),
        ('reference-frame', _Model_space_reference_frame),
        ])
    Model_space._ext = None
    
    #-----< Reference-frame >-----#
    Reference_frame = SEQ(name='Reference-frame', mode=MODE_TYPE)
    _Reference_frame_biostruc_id = CHOICE(name='biostruc-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc-id')))
    _Reference_frame_rotation_translation = SEQ(name='rotation-translation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Transform')), opt=True)
    Reference_frame._cont = ASN1Dict([
        ('biostruc-id', _Reference_frame_biostruc_id),
        ('rotation-translation', _Reference_frame_rotation_translation),
        ])
    Reference_frame._ext = None
    
    #-----< Model-coordinate-set >-----#
    Model_coordinate_set = SEQ(name='Model-coordinate-set', mode=MODE_TYPE)
    _Model_coordinate_set_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Structural-model', 'Model-coordinate-set-id')), opt=True)
    _Model_coordinate_set_descr = SEQ_OF(name='descr', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Model_coordinate_set_descr__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Structural-model', 'Model-descr')))
    _Model_coordinate_set_descr._cont = __Model_coordinate_set_descr__item_
    _Model_coordinate_set_coordinates = CHOICE(name='coordinates', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __Model_coordinate_set_coordinates_literal = CHOICE(name='literal', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MMDB-Structural-model', 'Coordinates')))
    __Model_coordinate_set_coordinates_reference = SEQ(name='reference', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Chem-graph-alignment')))
    _Model_coordinate_set_coordinates._cont = ASN1Dict([
        ('literal', __Model_coordinate_set_coordinates_literal),
        ('reference', __Model_coordinate_set_coordinates_reference),
        ])
    _Model_coordinate_set_coordinates._ext = None
    Model_coordinate_set._cont = ASN1Dict([
        ('id', _Model_coordinate_set_id),
        ('descr', _Model_coordinate_set_descr),
        ('coordinates', _Model_coordinate_set_coordinates),
        ])
    Model_coordinate_set._ext = None
    
    #-----< Model-coordinate-set-id >-----#
    Model_coordinate_set_id = INT(name='Model-coordinate-set-id', mode=MODE_TYPE)
    
    #-----< Coordinates >-----#
    Coordinates = CHOICE(name='Coordinates', mode=MODE_TYPE)
    _Coordinates_atomic = SEQ(name='atomic', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Structural-model', 'Atomic-coordinates')))
    _Coordinates_surface = SEQ(name='surface', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Structural-model', 'Surface-coordinates')))
    _Coordinates_density = SEQ(name='density', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Structural-model', 'Density-coordinates')))
    Coordinates._cont = ASN1Dict([
        ('atomic', _Coordinates_atomic),
        ('surface', _Coordinates_surface),
        ('density', _Coordinates_density),
        ])
    Coordinates._ext = None
    
    #-----< Atomic-coordinates >-----#
    Atomic_coordinates = SEQ(name='Atomic-coordinates', mode=MODE_TYPE)
    _Atomic_coordinates_number_of_points = INT(name='number-of-points', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Atomic_coordinates_atoms = SEQ(name='atoms', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Atom-pntrs')))
    _Atomic_coordinates_sites = SEQ(name='sites', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Structural-model', 'Model-space-points')))
    _Atomic_coordinates_temperature_factors = CHOICE(name='temperature-factors', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MMDB-Structural-model', 'Atomic-temperature-factors')), opt=True)
    _Atomic_coordinates_occupancies = SEQ(name='occupancies', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Structural-model', 'Atomic-occupancies')), opt=True)
    _Atomic_coordinates_alternate_conf_ids = SEQ_OF(name='alternate-conf-ids', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Structural-model', 'Alternate-conformation-ids')), opt=True)
    _Atomic_coordinates_conf_ensembles = SEQ_OF(name='conf-ensembles', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Atomic_coordinates_conf_ensembles__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Structural-model', 'Conformation-ensemble')))
    _Atomic_coordinates_conf_ensembles._cont = __Atomic_coordinates_conf_ensembles__item_
    Atomic_coordinates._cont = ASN1Dict([
        ('number-of-points', _Atomic_coordinates_number_of_points),
        ('atoms', _Atomic_coordinates_atoms),
        ('sites', _Atomic_coordinates_sites),
        ('temperature-factors', _Atomic_coordinates_temperature_factors),
        ('occupancies', _Atomic_coordinates_occupancies),
        ('alternate-conf-ids', _Atomic_coordinates_alternate_conf_ids),
        ('conf-ensembles', _Atomic_coordinates_conf_ensembles),
        ])
    Atomic_coordinates._ext = None
    
    #-----< Model-space-points >-----#
    Model_space_points = SEQ(name='Model-space-points', mode=MODE_TYPE)
    _Model_space_points_scale_factor = INT(name='scale-factor', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Model_space_points_x = SEQ_OF(name='x', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Model_space_points_x__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Model_space_points_x._cont = __Model_space_points_x__item_
    _Model_space_points_y = SEQ_OF(name='y', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Model_space_points_y__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Model_space_points_y._cont = __Model_space_points_y__item_
    _Model_space_points_z = SEQ_OF(name='z', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Model_space_points_z__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Model_space_points_z._cont = __Model_space_points_z__item_
    Model_space_points._cont = ASN1Dict([
        ('scale-factor', _Model_space_points_scale_factor),
        ('x', _Model_space_points_x),
        ('y', _Model_space_points_y),
        ('z', _Model_space_points_z),
        ])
    Model_space_points._ext = None
    
    #-----< Atomic-temperature-factors >-----#
    Atomic_temperature_factors = CHOICE(name='Atomic-temperature-factors', mode=MODE_TYPE)
    _Atomic_temperature_factors_isotropic = SEQ(name='isotropic', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Structural-model', 'Isotropic-temperature-factors')))
    _Atomic_temperature_factors_anisotropic = SEQ(name='anisotropic', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Structural-model', 'Anisotropic-temperature-factors')))
    Atomic_temperature_factors._cont = ASN1Dict([
        ('isotropic', _Atomic_temperature_factors_isotropic),
        ('anisotropic', _Atomic_temperature_factors_anisotropic),
        ])
    Atomic_temperature_factors._ext = None
    
    #-----< Isotropic-temperature-factors >-----#
    Isotropic_temperature_factors = SEQ(name='Isotropic-temperature-factors', mode=MODE_TYPE)
    _Isotropic_temperature_factors_scale_factor = INT(name='scale-factor', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Isotropic_temperature_factors_b = SEQ_OF(name='b', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Isotropic_temperature_factors_b__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Isotropic_temperature_factors_b._cont = __Isotropic_temperature_factors_b__item_
    Isotropic_temperature_factors._cont = ASN1Dict([
        ('scale-factor', _Isotropic_temperature_factors_scale_factor),
        ('b', _Isotropic_temperature_factors_b),
        ])
    Isotropic_temperature_factors._ext = None
    
    #-----< Anisotropic-temperature-factors >-----#
    Anisotropic_temperature_factors = SEQ(name='Anisotropic-temperature-factors', mode=MODE_TYPE)
    _Anisotropic_temperature_factors_scale_factor = INT(name='scale-factor', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Anisotropic_temperature_factors_b_11 = SEQ_OF(name='b-11', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Anisotropic_temperature_factors_b_11__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Anisotropic_temperature_factors_b_11._cont = __Anisotropic_temperature_factors_b_11__item_
    _Anisotropic_temperature_factors_b_12 = SEQ_OF(name='b-12', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Anisotropic_temperature_factors_b_12__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Anisotropic_temperature_factors_b_12._cont = __Anisotropic_temperature_factors_b_12__item_
    _Anisotropic_temperature_factors_b_13 = SEQ_OF(name='b-13', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Anisotropic_temperature_factors_b_13__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Anisotropic_temperature_factors_b_13._cont = __Anisotropic_temperature_factors_b_13__item_
    _Anisotropic_temperature_factors_b_22 = SEQ_OF(name='b-22', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Anisotropic_temperature_factors_b_22__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Anisotropic_temperature_factors_b_22._cont = __Anisotropic_temperature_factors_b_22__item_
    _Anisotropic_temperature_factors_b_23 = SEQ_OF(name='b-23', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Anisotropic_temperature_factors_b_23__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Anisotropic_temperature_factors_b_23._cont = __Anisotropic_temperature_factors_b_23__item_
    _Anisotropic_temperature_factors_b_33 = SEQ_OF(name='b-33', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Anisotropic_temperature_factors_b_33__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Anisotropic_temperature_factors_b_33._cont = __Anisotropic_temperature_factors_b_33__item_
    Anisotropic_temperature_factors._cont = ASN1Dict([
        ('scale-factor', _Anisotropic_temperature_factors_scale_factor),
        ('b-11', _Anisotropic_temperature_factors_b_11),
        ('b-12', _Anisotropic_temperature_factors_b_12),
        ('b-13', _Anisotropic_temperature_factors_b_13),
        ('b-22', _Anisotropic_temperature_factors_b_22),
        ('b-23', _Anisotropic_temperature_factors_b_23),
        ('b-33', _Anisotropic_temperature_factors_b_33),
        ])
    Anisotropic_temperature_factors._ext = None
    
    #-----< Atomic-occupancies >-----#
    Atomic_occupancies = SEQ(name='Atomic-occupancies', mode=MODE_TYPE)
    _Atomic_occupancies_scale_factor = INT(name='scale-factor', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Atomic_occupancies_o = SEQ_OF(name='o', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Atomic_occupancies_o__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Atomic_occupancies_o._cont = __Atomic_occupancies_o__item_
    Atomic_occupancies._cont = ASN1Dict([
        ('scale-factor', _Atomic_occupancies_scale_factor),
        ('o', _Atomic_occupancies_o),
        ])
    Atomic_occupancies._ext = None
    
    #-----< Alternate-conformation-ids >-----#
    Alternate_conformation_ids = SEQ_OF(name='Alternate-conformation-ids', mode=MODE_TYPE)
    _Alternate_conformation_ids__item_ = STR_VIS(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Structural-model', 'Alternate-conformation-id')))
    Alternate_conformation_ids._cont = _Alternate_conformation_ids__item_
    
    #-----< Alternate-conformation-id >-----#
    Alternate_conformation_id = STR_VIS(name='Alternate-conformation-id', mode=MODE_TYPE)
    
    #-----< Conformation-ensemble >-----#
    Conformation_ensemble = SEQ(name='Conformation-ensemble', mode=MODE_TYPE)
    _Conformation_ensemble_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Conformation_ensemble_alt_conf_ids = SEQ_OF(name='alt-conf-ids', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Conformation_ensemble_alt_conf_ids__item_ = STR_VIS(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Structural-model', 'Alternate-conformation-id')))
    _Conformation_ensemble_alt_conf_ids._cont = __Conformation_ensemble_alt_conf_ids__item_
    Conformation_ensemble._cont = ASN1Dict([
        ('name', _Conformation_ensemble_name),
        ('alt-conf-ids', _Conformation_ensemble_alt_conf_ids),
        ])
    Conformation_ensemble._ext = None
    
    #-----< Surface-coordinates >-----#
    Surface_coordinates = SEQ(name='Surface-coordinates', mode=MODE_TYPE)
    _Surface_coordinates_contents = CHOICE(name='contents', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Chem-graph-pntrs')))
    _Surface_coordinates_surface = CHOICE(name='surface', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __Surface_coordinates_surface_sphere = SEQ(name='sphere', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Sphere')))
    __Surface_coordinates_surface_cone = SEQ(name='cone', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Cone')))
    __Surface_coordinates_surface_cylinder = SEQ(name='cylinder', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Cylinder')))
    __Surface_coordinates_surface_brick = SEQ(name='brick', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Brick')))
    __Surface_coordinates_surface_tmesh = SEQ(name='tmesh', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Structural-model', 'T-mesh')))
    __Surface_coordinates_surface_triangles = SEQ(name='triangles', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Structural-model', 'Triangles')))
    _Surface_coordinates_surface._cont = ASN1Dict([
        ('sphere', __Surface_coordinates_surface_sphere),
        ('cone', __Surface_coordinates_surface_cone),
        ('cylinder', __Surface_coordinates_surface_cylinder),
        ('brick', __Surface_coordinates_surface_brick),
        ('tmesh', __Surface_coordinates_surface_tmesh),
        ('triangles', __Surface_coordinates_surface_triangles),
        ])
    _Surface_coordinates_surface._ext = None
    Surface_coordinates._cont = ASN1Dict([
        ('contents', _Surface_coordinates_contents),
        ('surface', _Surface_coordinates_surface),
        ])
    Surface_coordinates._ext = None
    
    #-----< T-mesh >-----#
    T_mesh = SEQ(name='T-mesh', mode=MODE_TYPE)
    _T_mesh_number_of_points = INT(name='number-of-points', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _T_mesh_scale_factor = INT(name='scale-factor', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _T_mesh_swap = SEQ_OF(name='swap', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __T_mesh_swap__item_ = BOOL(name='_item_', mode=MODE_TYPE)
    _T_mesh_swap._cont = __T_mesh_swap__item_
    _T_mesh_x = SEQ_OF(name='x', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __T_mesh_x__item_ = INT(name='_item_', mode=MODE_TYPE)
    _T_mesh_x._cont = __T_mesh_x__item_
    _T_mesh_y = SEQ_OF(name='y', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __T_mesh_y__item_ = INT(name='_item_', mode=MODE_TYPE)
    _T_mesh_y._cont = __T_mesh_y__item_
    _T_mesh_z = SEQ_OF(name='z', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __T_mesh_z__item_ = INT(name='_item_', mode=MODE_TYPE)
    _T_mesh_z._cont = __T_mesh_z__item_
    T_mesh._cont = ASN1Dict([
        ('number-of-points', _T_mesh_number_of_points),
        ('scale-factor', _T_mesh_scale_factor),
        ('swap', _T_mesh_swap),
        ('x', _T_mesh_x),
        ('y', _T_mesh_y),
        ('z', _T_mesh_z),
        ])
    T_mesh._ext = None
    
    #-----< Triangles >-----#
    Triangles = SEQ(name='Triangles', mode=MODE_TYPE)
    _Triangles_number_of_points = INT(name='number-of-points', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Triangles_scale_factor = INT(name='scale-factor', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Triangles_x = SEQ_OF(name='x', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Triangles_x__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Triangles_x._cont = __Triangles_x__item_
    _Triangles_y = SEQ_OF(name='y', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Triangles_y__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Triangles_y._cont = __Triangles_y__item_
    _Triangles_z = SEQ_OF(name='z', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Triangles_z__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Triangles_z._cont = __Triangles_z__item_
    _Triangles_number_of_triangles = INT(name='number-of-triangles', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Triangles_v1 = SEQ_OF(name='v1', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Triangles_v1__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Triangles_v1._cont = __Triangles_v1__item_
    _Triangles_v2 = SEQ_OF(name='v2', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Triangles_v2__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Triangles_v2._cont = __Triangles_v2__item_
    _Triangles_v3 = SEQ_OF(name='v3', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Triangles_v3__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Triangles_v3._cont = __Triangles_v3__item_
    Triangles._cont = ASN1Dict([
        ('number-of-points', _Triangles_number_of_points),
        ('scale-factor', _Triangles_scale_factor),
        ('x', _Triangles_x),
        ('y', _Triangles_y),
        ('z', _Triangles_z),
        ('number-of-triangles', _Triangles_number_of_triangles),
        ('v1', _Triangles_v1),
        ('v2', _Triangles_v2),
        ('v3', _Triangles_v3),
        ])
    Triangles._ext = None
    
    #-----< Density-coordinates >-----#
    Density_coordinates = SEQ(name='Density-coordinates', mode=MODE_TYPE)
    _Density_coordinates_contents = CHOICE(name='contents', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Chem-graph-pntrs')))
    _Density_coordinates_grid_corners = SEQ(name='grid-corners', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Brick')))
    _Density_coordinates_grid_steps_x = INT(name='grid-steps-x', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Density_coordinates_grid_steps_y = INT(name='grid-steps-y', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Density_coordinates_grid_steps_z = INT(name='grid-steps-z', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Density_coordinates_fastest_varying = ENUM(name='fastest-varying', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Density_coordinates_fastest_varying._cont = ASN1Dict([('x', 1), ('y', 2), ('z', 3)])
    _Density_coordinates_fastest_varying._ext = None
    _Density_coordinates_slowest_varying = ENUM(name='slowest-varying', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Density_coordinates_slowest_varying._cont = ASN1Dict([('x', 1), ('y', 2), ('z', 3)])
    _Density_coordinates_slowest_varying._ext = None
    _Density_coordinates_scale_factor = INT(name='scale-factor', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Density_coordinates_density = SEQ_OF(name='density', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Density_coordinates_density__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Density_coordinates_density._cont = __Density_coordinates_density__item_
    Density_coordinates._cont = ASN1Dict([
        ('contents', _Density_coordinates_contents),
        ('grid-corners', _Density_coordinates_grid_corners),
        ('grid-steps-x', _Density_coordinates_grid_steps_x),
        ('grid-steps-y', _Density_coordinates_grid_steps_y),
        ('grid-steps-z', _Density_coordinates_grid_steps_z),
        ('fastest-varying', _Density_coordinates_fastest_varying),
        ('slowest-varying', _Density_coordinates_slowest_varying),
        ('scale-factor', _Density_coordinates_scale_factor),
        ('density', _Density_coordinates_density),
        ])
    Density_coordinates._ext = None
    
    _all_ = [
        _Biostruc_model_id,
        _Biostruc_model_type,
        __Biostruc_model_descr__item_,
        _Biostruc_model_descr,
        _Biostruc_model_model_space,
        __Biostruc_model_model_coordinates__item_,
        _Biostruc_model_model_coordinates,
        Biostruc_model,
        Model_id,
        Model_type,
        _Model_descr_name,
        _Model_descr_pdb_reso,
        _Model_descr_pdb_method,
        _Model_descr_pdb_comment,
        _Model_descr_other_comment,
        _Model_descr_attribution,
        Model_descr,
        _Model_space_coordinate_units,
        _Model_space_thermal_factor_units,
        _Model_space_occupancy_factor_units,
        _Model_space_density_units,
        _Model_space_reference_frame,
        Model_space,
        _Reference_frame_biostruc_id,
        _Reference_frame_rotation_translation,
        Reference_frame,
        _Model_coordinate_set_id,
        __Model_coordinate_set_descr__item_,
        _Model_coordinate_set_descr,
        __Model_coordinate_set_coordinates_literal,
        __Model_coordinate_set_coordinates_reference,
        _Model_coordinate_set_coordinates,
        Model_coordinate_set,
        Model_coordinate_set_id,
        _Coordinates_atomic,
        _Coordinates_surface,
        _Coordinates_density,
        Coordinates,
        _Atomic_coordinates_number_of_points,
        _Atomic_coordinates_atoms,
        _Atomic_coordinates_sites,
        _Atomic_coordinates_temperature_factors,
        _Atomic_coordinates_occupancies,
        _Atomic_coordinates_alternate_conf_ids,
        __Atomic_coordinates_conf_ensembles__item_,
        _Atomic_coordinates_conf_ensembles,
        Atomic_coordinates,
        _Model_space_points_scale_factor,
        __Model_space_points_x__item_,
        _Model_space_points_x,
        __Model_space_points_y__item_,
        _Model_space_points_y,
        __Model_space_points_z__item_,
        _Model_space_points_z,
        Model_space_points,
        _Atomic_temperature_factors_isotropic,
        _Atomic_temperature_factors_anisotropic,
        Atomic_temperature_factors,
        _Isotropic_temperature_factors_scale_factor,
        __Isotropic_temperature_factors_b__item_,
        _Isotropic_temperature_factors_b,
        Isotropic_temperature_factors,
        _Anisotropic_temperature_factors_scale_factor,
        __Anisotropic_temperature_factors_b_11__item_,
        _Anisotropic_temperature_factors_b_11,
        __Anisotropic_temperature_factors_b_12__item_,
        _Anisotropic_temperature_factors_b_12,
        __Anisotropic_temperature_factors_b_13__item_,
        _Anisotropic_temperature_factors_b_13,
        __Anisotropic_temperature_factors_b_22__item_,
        _Anisotropic_temperature_factors_b_22,
        __Anisotropic_temperature_factors_b_23__item_,
        _Anisotropic_temperature_factors_b_23,
        __Anisotropic_temperature_factors_b_33__item_,
        _Anisotropic_temperature_factors_b_33,
        Anisotropic_temperature_factors,
        _Atomic_occupancies_scale_factor,
        __Atomic_occupancies_o__item_,
        _Atomic_occupancies_o,
        Atomic_occupancies,
        _Alternate_conformation_ids__item_,
        Alternate_conformation_ids,
        Alternate_conformation_id,
        _Conformation_ensemble_name,
        __Conformation_ensemble_alt_conf_ids__item_,
        _Conformation_ensemble_alt_conf_ids,
        Conformation_ensemble,
        _Surface_coordinates_contents,
        __Surface_coordinates_surface_sphere,
        __Surface_coordinates_surface_cone,
        __Surface_coordinates_surface_cylinder,
        __Surface_coordinates_surface_brick,
        __Surface_coordinates_surface_tmesh,
        __Surface_coordinates_surface_triangles,
        _Surface_coordinates_surface,
        Surface_coordinates,
        _T_mesh_number_of_points,
        _T_mesh_scale_factor,
        __T_mesh_swap__item_,
        _T_mesh_swap,
        __T_mesh_x__item_,
        _T_mesh_x,
        __T_mesh_y__item_,
        _T_mesh_y,
        __T_mesh_z__item_,
        _T_mesh_z,
        T_mesh,
        _Triangles_number_of_points,
        _Triangles_scale_factor,
        __Triangles_x__item_,
        _Triangles_x,
        __Triangles_y__item_,
        _Triangles_y,
        __Triangles_z__item_,
        _Triangles_z,
        _Triangles_number_of_triangles,
        __Triangles_v1__item_,
        _Triangles_v1,
        __Triangles_v2__item_,
        _Triangles_v2,
        __Triangles_v3__item_,
        _Triangles_v3,
        Triangles,
        _Density_coordinates_contents,
        _Density_coordinates_grid_corners,
        _Density_coordinates_grid_steps_x,
        _Density_coordinates_grid_steps_y,
        _Density_coordinates_grid_steps_z,
        _Density_coordinates_fastest_varying,
        _Density_coordinates_slowest_varying,
        _Density_coordinates_scale_factor,
        __Density_coordinates_density__item_,
        _Density_coordinates_density,
        Density_coordinates,
    ]

class MMDB_Features:

    _name_  = 'MMDB-Features'
    _oid_   = []
    
    _obj_ = [
        'Biostruc-feature-set',
        'Biostruc-feature-set-id',
        'Biostruc-feature-set-descr',
        'Biostruc-feature',
        'Other-feature',
        'Biostruc-feature-id',
        'Biostruc-molecule-pntr',
        'Chem-graph-pntrs',
        'Atom-pntrs',
        'Residue-pntrs',
        'Residue-explicit-pntrs',
        'Residue-interval-pntr',
        'Molecule-pntrs',
        'Region-pntrs',
        'Region-coordinates',
        'Region-boundary',
        'Chem-graph-alignment',
        'Chem-graph-interaction',
        'Align-stats',
        'Region-similarity',
        'Sphere',
        'Cone',
        'Cylinder',
        'Brick',
        'Model-space-point',
        'RealValue',
        'Transform',
        'Move',
        'Rot-matrix',
        'Trans-matrix',
        'Camera',
        'GL-matrix',
        'Color-prop',
        'Render-prop',
        'Biostruc-script',
        'Biostruc-script-step',
        'Step-id',
        ]
    _type_ = [
        'Biostruc-feature-set',
        'Biostruc-feature-set-id',
        'Biostruc-feature-set-descr',
        'Biostruc-feature',
        'Other-feature',
        'Biostruc-feature-id',
        'Biostruc-molecule-pntr',
        'Chem-graph-pntrs',
        'Atom-pntrs',
        'Residue-pntrs',
        'Residue-explicit-pntrs',
        'Residue-interval-pntr',
        'Molecule-pntrs',
        'Region-pntrs',
        'Region-coordinates',
        'Region-boundary',
        'Chem-graph-alignment',
        'Chem-graph-interaction',
        'Align-stats',
        'Region-similarity',
        'Sphere',
        'Cone',
        'Cylinder',
        'Brick',
        'Model-space-point',
        'RealValue',
        'Transform',
        'Move',
        'Rot-matrix',
        'Trans-matrix',
        'Camera',
        'GL-matrix',
        'Color-prop',
        'Render-prop',
        'Biostruc-script',
        'Biostruc-script-step',
        'Step-id',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Biostruc-feature-set >-----#
    Biostruc_feature_set = SEQ(name='Biostruc-feature-set', mode=MODE_TYPE)
    _Biostruc_feature_set_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Biostruc-feature-set-id')))
    _Biostruc_feature_set_descr = SEQ_OF(name='descr', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Biostruc_feature_set_descr__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'Biostruc-feature-set-descr')))
    _Biostruc_feature_set_descr._cont = __Biostruc_feature_set_descr__item_
    _Biostruc_feature_set_features = SEQ_OF(name='features', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Biostruc_feature_set_features__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'Biostruc-feature')))
    _Biostruc_feature_set_features._cont = __Biostruc_feature_set_features__item_
    Biostruc_feature_set._cont = ASN1Dict([
        ('id', _Biostruc_feature_set_id),
        ('descr', _Biostruc_feature_set_descr),
        ('features', _Biostruc_feature_set_features),
        ])
    Biostruc_feature_set._ext = None
    
    #-----< Biostruc-feature-set-id >-----#
    Biostruc_feature_set_id = INT(name='Biostruc-feature-set-id', mode=MODE_TYPE)
    
    #-----< Biostruc-feature-set-descr >-----#
    Biostruc_feature_set_descr = CHOICE(name='Biostruc-feature-set-descr', mode=MODE_TYPE)
    _Biostruc_feature_set_descr_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Biostruc_feature_set_descr_pdb_comment = STR_VIS(name='pdb-comment', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Biostruc_feature_set_descr_other_comment = STR_VIS(name='other-comment', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Biostruc_feature_set_descr_attribution = CHOICE(name='attribution', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Pub', 'Pub')))
    Biostruc_feature_set_descr._cont = ASN1Dict([
        ('name', _Biostruc_feature_set_descr_name),
        ('pdb-comment', _Biostruc_feature_set_descr_pdb_comment),
        ('other-comment', _Biostruc_feature_set_descr_other_comment),
        ('attribution', _Biostruc_feature_set_descr_attribution),
        ])
    Biostruc_feature_set_descr._ext = None
    
    #-----< Biostruc-feature >-----#
    Biostruc_feature = SEQ(name='Biostruc-feature', mode=MODE_TYPE)
    _Biostruc_feature_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Biostruc-feature-id')), opt=True)
    _Biostruc_feature_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Biostruc_feature_type = INT(name='type', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Biostruc_feature_type._cont = ASN1Dict([('helix', 1), ('strand', 2), ('sheet', 3), ('turn', 4), ('site', 5), ('footnote', 6), ('comment', 7), ('interaction', 8), ('subgraph', 100), ('region', 101), ('core', 102), ('supercore', 103), ('color', 150), ('render', 151), ('label', 152), ('transform', 153), ('camera', 154), ('script', 155), ('alignment', 200), ('similarity', 201), ('multalign', 202), ('indirect', 203), ('cn3dstate', 254), ('other', 255)])
    _Biostruc_feature_property = CHOICE(name='property', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __Biostruc_feature_property_color = SEQ(name='color', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Color-prop')))
    __Biostruc_feature_property_render = INT(name='render', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Render-prop')))
    __Biostruc_feature_property_transform = SEQ(name='transform', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Transform')))
    __Biostruc_feature_property_camera = SEQ(name='camera', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Camera')))
    __Biostruc_feature_property_script = SEQ_OF(name='script', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Biostruc-script')))
    __Biostruc_feature_property_user = SEQ(name='user', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'User-object')))
    _Biostruc_feature_property._cont = ASN1Dict([
        ('color', __Biostruc_feature_property_color),
        ('render', __Biostruc_feature_property_render),
        ('transform', __Biostruc_feature_property_transform),
        ('camera', __Biostruc_feature_property_camera),
        ('script', __Biostruc_feature_property_script),
        ('user', __Biostruc_feature_property_user),
        ])
    _Biostruc_feature_property._ext = None
    _Biostruc_feature_location = CHOICE(name='location', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __Biostruc_feature_location_subgraph = CHOICE(name='subgraph', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Chem-graph-pntrs')))
    __Biostruc_feature_location_region = SEQ(name='region', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Region-pntrs')))
    __Biostruc_feature_location_alignment = SEQ(name='alignment', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Chem-graph-alignment')))
    __Biostruc_feature_location_interaction = SEQ(name='interaction', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Chem-graph-interaction')))
    __Biostruc_feature_location_similarity = SEQ(name='similarity', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Region-similarity')))
    __Biostruc_feature_location_indirect = SEQ(name='indirect', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Other-feature')))
    _Biostruc_feature_location._cont = ASN1Dict([
        ('subgraph', __Biostruc_feature_location_subgraph),
        ('region', __Biostruc_feature_location_region),
        ('alignment', __Biostruc_feature_location_alignment),
        ('interaction', __Biostruc_feature_location_interaction),
        ('similarity', __Biostruc_feature_location_similarity),
        ('indirect', __Biostruc_feature_location_indirect),
        ])
    _Biostruc_feature_location._ext = None
    Biostruc_feature._cont = ASN1Dict([
        ('id', _Biostruc_feature_id),
        ('name', _Biostruc_feature_name),
        ('type', _Biostruc_feature_type),
        ('property', _Biostruc_feature_property),
        ('location', _Biostruc_feature_location),
        ])
    Biostruc_feature._ext = None
    
    #-----< Other-feature >-----#
    Other_feature = SEQ(name='Other-feature', mode=MODE_TYPE)
    _Other_feature_biostruc_id = CHOICE(name='biostruc-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc-id')))
    _Other_feature_set = INT(name='set', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Biostruc-feature-set-id')))
    _Other_feature_feature = INT(name='feature', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Biostruc-feature-id')))
    Other_feature._cont = ASN1Dict([
        ('biostruc-id', _Other_feature_biostruc_id),
        ('set', _Other_feature_set),
        ('feature', _Other_feature_feature),
        ])
    Other_feature._ext = None
    
    #-----< Biostruc-feature-id >-----#
    Biostruc_feature_id = INT(name='Biostruc-feature-id', mode=MODE_TYPE)
    
    #-----< Biostruc-molecule-pntr >-----#
    Biostruc_molecule_pntr = SEQ(name='Biostruc-molecule-pntr', mode=MODE_TYPE)
    _Biostruc_molecule_pntr_biostruc_id = CHOICE(name='biostruc-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc-id')))
    _Biostruc_molecule_pntr_molecule_id = INT(name='molecule-id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Molecule-id')))
    Biostruc_molecule_pntr._cont = ASN1Dict([
        ('biostruc-id', _Biostruc_molecule_pntr_biostruc_id),
        ('molecule-id', _Biostruc_molecule_pntr_molecule_id),
        ])
    Biostruc_molecule_pntr._ext = None
    
    #-----< Chem-graph-pntrs >-----#
    Chem_graph_pntrs = CHOICE(name='Chem-graph-pntrs', mode=MODE_TYPE)
    _Chem_graph_pntrs_atoms = SEQ(name='atoms', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Atom-pntrs')))
    _Chem_graph_pntrs_residues = CHOICE(name='residues', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Residue-pntrs')))
    _Chem_graph_pntrs_molecules = SEQ(name='molecules', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Molecule-pntrs')))
    Chem_graph_pntrs._cont = ASN1Dict([
        ('atoms', _Chem_graph_pntrs_atoms),
        ('residues', _Chem_graph_pntrs_residues),
        ('molecules', _Chem_graph_pntrs_molecules),
        ])
    Chem_graph_pntrs._ext = None
    
    #-----< Atom-pntrs >-----#
    Atom_pntrs = SEQ(name='Atom-pntrs', mode=MODE_TYPE)
    _Atom_pntrs_number_of_ptrs = INT(name='number-of-ptrs', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Atom_pntrs_molecule_ids = SEQ_OF(name='molecule-ids', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Atom_pntrs_molecule_ids__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Molecule-id')))
    _Atom_pntrs_molecule_ids._cont = __Atom_pntrs_molecule_ids__item_
    _Atom_pntrs_residue_ids = SEQ_OF(name='residue-ids', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Atom_pntrs_residue_ids__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Residue-id')))
    _Atom_pntrs_residue_ids._cont = __Atom_pntrs_residue_ids__item_
    _Atom_pntrs_atom_ids = SEQ_OF(name='atom-ids', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Atom_pntrs_atom_ids__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Atom-id')))
    _Atom_pntrs_atom_ids._cont = __Atom_pntrs_atom_ids__item_
    Atom_pntrs._cont = ASN1Dict([
        ('number-of-ptrs', _Atom_pntrs_number_of_ptrs),
        ('molecule-ids', _Atom_pntrs_molecule_ids),
        ('residue-ids', _Atom_pntrs_residue_ids),
        ('atom-ids', _Atom_pntrs_atom_ids),
        ])
    Atom_pntrs._ext = None
    
    #-----< Residue-pntrs >-----#
    Residue_pntrs = CHOICE(name='Residue-pntrs', mode=MODE_TYPE)
    _Residue_pntrs_explicit = SEQ(name='explicit', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Residue-explicit-pntrs')))
    _Residue_pntrs_interval = SEQ_OF(name='interval', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Residue_pntrs_interval__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'Residue-interval-pntr')))
    _Residue_pntrs_interval._cont = __Residue_pntrs_interval__item_
    Residue_pntrs._cont = ASN1Dict([
        ('explicit', _Residue_pntrs_explicit),
        ('interval', _Residue_pntrs_interval),
        ])
    Residue_pntrs._ext = None
    
    #-----< Residue-explicit-pntrs >-----#
    Residue_explicit_pntrs = SEQ(name='Residue-explicit-pntrs', mode=MODE_TYPE)
    _Residue_explicit_pntrs_number_of_ptrs = INT(name='number-of-ptrs', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Residue_explicit_pntrs_molecule_ids = SEQ_OF(name='molecule-ids', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Residue_explicit_pntrs_molecule_ids__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Molecule-id')))
    _Residue_explicit_pntrs_molecule_ids._cont = __Residue_explicit_pntrs_molecule_ids__item_
    _Residue_explicit_pntrs_residue_ids = SEQ_OF(name='residue-ids', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Residue_explicit_pntrs_residue_ids__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Residue-id')))
    _Residue_explicit_pntrs_residue_ids._cont = __Residue_explicit_pntrs_residue_ids__item_
    Residue_explicit_pntrs._cont = ASN1Dict([
        ('number-of-ptrs', _Residue_explicit_pntrs_number_of_ptrs),
        ('molecule-ids', _Residue_explicit_pntrs_molecule_ids),
        ('residue-ids', _Residue_explicit_pntrs_residue_ids),
        ])
    Residue_explicit_pntrs._ext = None
    
    #-----< Residue-interval-pntr >-----#
    Residue_interval_pntr = SEQ(name='Residue-interval-pntr', mode=MODE_TYPE)
    _Residue_interval_pntr_molecule_id = INT(name='molecule-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Molecule-id')))
    _Residue_interval_pntr_from_ = INT(name='from', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Residue-id')))
    _Residue_interval_pntr_to = INT(name='to', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Chemical-graph', 'Residue-id')))
    Residue_interval_pntr._cont = ASN1Dict([
        ('molecule-id', _Residue_interval_pntr_molecule_id),
        ('from', _Residue_interval_pntr_from_),
        ('to', _Residue_interval_pntr_to),
        ])
    Residue_interval_pntr._ext = None
    
    #-----< Molecule-pntrs >-----#
    Molecule_pntrs = SEQ(name='Molecule-pntrs', mode=MODE_TYPE)
    _Molecule_pntrs_number_of_ptrs = INT(name='number-of-ptrs', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Molecule_pntrs_molecule_ids = SEQ_OF(name='molecule-ids', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Molecule_pntrs_molecule_ids__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Chemical-graph', 'Molecule-id')))
    _Molecule_pntrs_molecule_ids._cont = __Molecule_pntrs_molecule_ids__item_
    Molecule_pntrs._cont = ASN1Dict([
        ('number-of-ptrs', _Molecule_pntrs_number_of_ptrs),
        ('molecule-ids', _Molecule_pntrs_molecule_ids),
        ])
    Molecule_pntrs._ext = None
    
    #-----< Region-pntrs >-----#
    Region_pntrs = SEQ(name='Region-pntrs', mode=MODE_TYPE)
    _Region_pntrs_model_id = INT(name='model-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Structural-model', 'Model-id')))
    _Region_pntrs_region = CHOICE(name='region', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __Region_pntrs_region_site = SEQ_OF(name='site', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Region_pntrs_region_site__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'Region-coordinates')))
    __Region_pntrs_region_site._cont = ___Region_pntrs_region_site__item_
    __Region_pntrs_region_boundary = SEQ_OF(name='boundary', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Region_pntrs_region_boundary__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'Region-boundary')))
    __Region_pntrs_region_boundary._cont = ___Region_pntrs_region_boundary__item_
    _Region_pntrs_region._cont = ASN1Dict([
        ('site', __Region_pntrs_region_site),
        ('boundary', __Region_pntrs_region_boundary),
        ])
    _Region_pntrs_region._ext = None
    Region_pntrs._cont = ASN1Dict([
        ('model-id', _Region_pntrs_model_id),
        ('region', _Region_pntrs_region),
        ])
    Region_pntrs._ext = None
    
    #-----< Region-coordinates >-----#
    Region_coordinates = SEQ(name='Region-coordinates', mode=MODE_TYPE)
    _Region_coordinates_model_coord_set_id = INT(name='model-coord-set-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Structural-model', 'Model-coordinate-set-id')))
    _Region_coordinates_number_of_coords = INT(name='number-of-coords', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Region_coordinates_coordinate_indices = SEQ_OF(name='coordinate-indices', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Region_coordinates_coordinate_indices__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Region_coordinates_coordinate_indices._cont = __Region_coordinates_coordinate_indices__item_
    Region_coordinates._cont = ASN1Dict([
        ('model-coord-set-id', _Region_coordinates_model_coord_set_id),
        ('number-of-coords', _Region_coordinates_number_of_coords),
        ('coordinate-indices', _Region_coordinates_coordinate_indices),
        ])
    Region_coordinates._ext = None
    
    #-----< Region-boundary >-----#
    Region_boundary = CHOICE(name='Region-boundary', mode=MODE_TYPE)
    _Region_boundary_sphere = SEQ(name='sphere', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Sphere')))
    _Region_boundary_cone = SEQ(name='cone', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Cone')))
    _Region_boundary_cylinder = SEQ(name='cylinder', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Cylinder')))
    _Region_boundary_brick = SEQ(name='brick', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Brick')))
    Region_boundary._cont = ASN1Dict([
        ('sphere', _Region_boundary_sphere),
        ('cone', _Region_boundary_cone),
        ('cylinder', _Region_boundary_cylinder),
        ('brick', _Region_boundary_brick),
        ])
    Region_boundary._ext = None
    
    #-----< Chem-graph-alignment >-----#
    Chem_graph_alignment = SEQ(name='Chem-graph-alignment', mode=MODE_TYPE)
    _Chem_graph_alignment_dimension = INT(name='dimension', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=2)
    _Chem_graph_alignment_biostruc_ids = SEQ_OF(name='biostruc-ids', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Chem_graph_alignment_biostruc_ids__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB', 'Biostruc-id')))
    _Chem_graph_alignment_biostruc_ids._cont = __Chem_graph_alignment_biostruc_ids__item_
    _Chem_graph_alignment_alignment = SEQ_OF(name='alignment', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Chem_graph_alignment_alignment__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'Chem-graph-pntrs')))
    _Chem_graph_alignment_alignment._cont = __Chem_graph_alignment_alignment__item_
    _Chem_graph_alignment_domain = SEQ_OF(name='domain', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Chem_graph_alignment_domain__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'Chem-graph-pntrs')))
    _Chem_graph_alignment_domain._cont = __Chem_graph_alignment_domain__item_
    _Chem_graph_alignment_transform = SEQ_OF(name='transform', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Chem_graph_alignment_transform__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'Transform')))
    _Chem_graph_alignment_transform._cont = __Chem_graph_alignment_transform__item_
    _Chem_graph_alignment_aligndata = SEQ_OF(name='aligndata', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Chem_graph_alignment_aligndata__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'Align-stats')))
    _Chem_graph_alignment_aligndata._cont = __Chem_graph_alignment_aligndata__item_
    Chem_graph_alignment._cont = ASN1Dict([
        ('dimension', _Chem_graph_alignment_dimension),
        ('biostruc-ids', _Chem_graph_alignment_biostruc_ids),
        ('alignment', _Chem_graph_alignment_alignment),
        ('domain', _Chem_graph_alignment_domain),
        ('transform', _Chem_graph_alignment_transform),
        ('aligndata', _Chem_graph_alignment_aligndata),
        ])
    Chem_graph_alignment._ext = None
    
    #-----< Chem-graph-interaction >-----#
    Chem_graph_interaction = SEQ(name='Chem-graph-interaction', mode=MODE_TYPE)
    _Chem_graph_interaction_type = INT(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Chem_graph_interaction_type._cont = ASN1Dict([('protein-protein', 1), ('protein-dna', 2), ('protein-rna', 3), ('protein-chemical', 4), ('dna-dna', 5), ('dna-rna', 6), ('dna-chemical', 7), ('rna-rna', 8), ('rna-chemical', 9), ('other', 255)])
    _Chem_graph_interaction_distance_threshold = SEQ(name='distance-threshold', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'RealValue')), opt=True)
    _Chem_graph_interaction_interactors = SEQ_OF(name='interactors', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Chem_graph_interaction_interactors__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'Biostruc-molecule-pntr')))
    _Chem_graph_interaction_interactors._cont = __Chem_graph_interaction_interactors__item_
    _Chem_graph_interaction_residue_contacts = SEQ_OF(name='residue-contacts', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Chem_graph_interaction_residue_contacts__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'Chem-graph-pntrs')))
    _Chem_graph_interaction_residue_contacts._cont = __Chem_graph_interaction_residue_contacts__item_
    _Chem_graph_interaction_atom_contacts = SEQ_OF(name='atom-contacts', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Chem_graph_interaction_atom_contacts__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'Chem-graph-pntrs')))
    _Chem_graph_interaction_atom_contacts._cont = __Chem_graph_interaction_atom_contacts__item_
    _Chem_graph_interaction_atom_distance = SEQ_OF(name='atom-distance', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Chem_graph_interaction_atom_distance__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'RealValue')))
    _Chem_graph_interaction_atom_distance._cont = __Chem_graph_interaction_atom_distance__item_
    Chem_graph_interaction._cont = ASN1Dict([
        ('type', _Chem_graph_interaction_type),
        ('distance-threshold', _Chem_graph_interaction_distance_threshold),
        ('interactors', _Chem_graph_interaction_interactors),
        ('residue-contacts', _Chem_graph_interaction_residue_contacts),
        ('atom-contacts', _Chem_graph_interaction_atom_contacts),
        ('atom-distance', _Chem_graph_interaction_atom_distance),
        ])
    Chem_graph_interaction._ext = None
    
    #-----< Align-stats >-----#
    Align_stats = SEQ(name='Align-stats', mode=MODE_TYPE)
    _Align_stats_descr = STR_VIS(name='descr', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Align_stats_scale_factor = INT(name='scale-factor', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Align_stats_vast_score = INT(name='vast-score', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Align_stats_vast_mlogp = INT(name='vast-mlogp', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Align_stats_align_res = INT(name='align-res', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Align_stats_rmsd = INT(name='rmsd', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Align_stats_blast_score = INT(name='blast-score', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Align_stats_blast_mlogp = INT(name='blast-mlogp', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Align_stats_other_score = INT(name='other-score', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Align_stats._cont = ASN1Dict([
        ('descr', _Align_stats_descr),
        ('scale-factor', _Align_stats_scale_factor),
        ('vast-score', _Align_stats_vast_score),
        ('vast-mlogp', _Align_stats_vast_mlogp),
        ('align-res', _Align_stats_align_res),
        ('rmsd', _Align_stats_rmsd),
        ('blast-score', _Align_stats_blast_score),
        ('blast-mlogp', _Align_stats_blast_mlogp),
        ('other-score', _Align_stats_other_score),
        ])
    Align_stats._ext = None
    
    #-----< Region-similarity >-----#
    Region_similarity = SEQ(name='Region-similarity', mode=MODE_TYPE)
    _Region_similarity_dimension = INT(name='dimension', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=2)
    _Region_similarity_biostruc_ids = SEQ_OF(name='biostruc-ids', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Region_similarity_biostruc_ids__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB', 'Biostruc-id')))
    _Region_similarity_biostruc_ids._cont = __Region_similarity_biostruc_ids__item_
    _Region_similarity_similarity = SEQ_OF(name='similarity', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Region_similarity_similarity__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'Region-pntrs')))
    _Region_similarity_similarity._cont = __Region_similarity_similarity__item_
    _Region_similarity_transform = SEQ_OF(name='transform', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Region_similarity_transform__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'Transform')))
    _Region_similarity_transform._cont = __Region_similarity_transform__item_
    Region_similarity._cont = ASN1Dict([
        ('dimension', _Region_similarity_dimension),
        ('biostruc-ids', _Region_similarity_biostruc_ids),
        ('similarity', _Region_similarity_similarity),
        ('transform', _Region_similarity_transform),
        ])
    Region_similarity._ext = None
    
    #-----< Sphere >-----#
    Sphere = SEQ(name='Sphere', mode=MODE_TYPE)
    _Sphere_center = SEQ(name='center', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Model-space-point')))
    _Sphere_radius = SEQ(name='radius', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'RealValue')))
    Sphere._cont = ASN1Dict([
        ('center', _Sphere_center),
        ('radius', _Sphere_radius),
        ])
    Sphere._ext = None
    
    #-----< Cone >-----#
    Cone = SEQ(name='Cone', mode=MODE_TYPE)
    _Cone_axis_top = SEQ(name='axis-top', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Model-space-point')))
    _Cone_axis_bottom = SEQ(name='axis-bottom', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Model-space-point')))
    _Cone_radius_bottom = SEQ(name='radius-bottom', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'RealValue')))
    Cone._cont = ASN1Dict([
        ('axis-top', _Cone_axis_top),
        ('axis-bottom', _Cone_axis_bottom),
        ('radius-bottom', _Cone_radius_bottom),
        ])
    Cone._ext = None
    
    #-----< Cylinder >-----#
    Cylinder = SEQ(name='Cylinder', mode=MODE_TYPE)
    _Cylinder_axis_top = SEQ(name='axis-top', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Model-space-point')))
    _Cylinder_axis_bottom = SEQ(name='axis-bottom', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Model-space-point')))
    _Cylinder_radius = SEQ(name='radius', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'RealValue')))
    Cylinder._cont = ASN1Dict([
        ('axis-top', _Cylinder_axis_top),
        ('axis-bottom', _Cylinder_axis_bottom),
        ('radius', _Cylinder_radius),
        ])
    Cylinder._ext = None
    
    #-----< Brick >-----#
    Brick = SEQ(name='Brick', mode=MODE_TYPE)
    _Brick_corner_000 = SEQ(name='corner-000', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Model-space-point')))
    _Brick_corner_001 = SEQ(name='corner-001', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Model-space-point')))
    _Brick_corner_010 = SEQ(name='corner-010', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Model-space-point')))
    _Brick_corner_011 = SEQ(name='corner-011', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Model-space-point')))
    _Brick_corner_100 = SEQ(name='corner-100', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Model-space-point')))
    _Brick_corner_101 = SEQ(name='corner-101', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Model-space-point')))
    _Brick_corner_110 = SEQ(name='corner-110', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Model-space-point')))
    _Brick_corner_111 = SEQ(name='corner-111', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Model-space-point')))
    Brick._cont = ASN1Dict([
        ('corner-000', _Brick_corner_000),
        ('corner-001', _Brick_corner_001),
        ('corner-010', _Brick_corner_010),
        ('corner-011', _Brick_corner_011),
        ('corner-100', _Brick_corner_100),
        ('corner-101', _Brick_corner_101),
        ('corner-110', _Brick_corner_110),
        ('corner-111', _Brick_corner_111),
        ])
    Brick._ext = None
    
    #-----< Model-space-point >-----#
    Model_space_point = SEQ(name='Model-space-point', mode=MODE_TYPE)
    _Model_space_point_scale_factor = INT(name='scale-factor', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Model_space_point_x = INT(name='x', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Model_space_point_y = INT(name='y', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Model_space_point_z = INT(name='z', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Model_space_point._cont = ASN1Dict([
        ('scale-factor', _Model_space_point_scale_factor),
        ('x', _Model_space_point_x),
        ('y', _Model_space_point_y),
        ('z', _Model_space_point_z),
        ])
    Model_space_point._ext = None
    
    #-----< RealValue >-----#
    RealValue = SEQ(name='RealValue', mode=MODE_TYPE)
    _RealValue_scale_factor = INT(name='scale-factor', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RealValue_scaled_integer_value = INT(name='scaled-integer-value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    RealValue._cont = ASN1Dict([
        ('scale-factor', _RealValue_scale_factor),
        ('scaled-integer-value', _RealValue_scaled_integer_value),
        ])
    RealValue._ext = None
    
    #-----< Transform >-----#
    Transform = SEQ(name='Transform', mode=MODE_TYPE)
    _Transform_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Transform_moves = SEQ_OF(name='moves', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Transform_moves__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'Move')))
    _Transform_moves._cont = __Transform_moves__item_
    Transform._cont = ASN1Dict([
        ('id', _Transform_id),
        ('moves', _Transform_moves),
        ])
    Transform._ext = None
    
    #-----< Move >-----#
    Move = CHOICE(name='Move', mode=MODE_TYPE)
    _Move_rotate = SEQ(name='rotate', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Rot-matrix')))
    _Move_translate = SEQ(name='translate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Trans-matrix')))
    Move._cont = ASN1Dict([
        ('rotate', _Move_rotate),
        ('translate', _Move_translate),
        ])
    Move._ext = None
    
    #-----< Rot-matrix >-----#
    Rot_matrix = SEQ(name='Rot-matrix', mode=MODE_TYPE)
    _Rot_matrix_scale_factor = INT(name='scale-factor', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Rot_matrix_rot_11 = INT(name='rot-11', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Rot_matrix_rot_12 = INT(name='rot-12', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Rot_matrix_rot_13 = INT(name='rot-13', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Rot_matrix_rot_21 = INT(name='rot-21', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Rot_matrix_rot_22 = INT(name='rot-22', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Rot_matrix_rot_23 = INT(name='rot-23', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Rot_matrix_rot_31 = INT(name='rot-31', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Rot_matrix_rot_32 = INT(name='rot-32', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Rot_matrix_rot_33 = INT(name='rot-33', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Rot_matrix._cont = ASN1Dict([
        ('scale-factor', _Rot_matrix_scale_factor),
        ('rot-11', _Rot_matrix_rot_11),
        ('rot-12', _Rot_matrix_rot_12),
        ('rot-13', _Rot_matrix_rot_13),
        ('rot-21', _Rot_matrix_rot_21),
        ('rot-22', _Rot_matrix_rot_22),
        ('rot-23', _Rot_matrix_rot_23),
        ('rot-31', _Rot_matrix_rot_31),
        ('rot-32', _Rot_matrix_rot_32),
        ('rot-33', _Rot_matrix_rot_33),
        ])
    Rot_matrix._ext = None
    
    #-----< Trans-matrix >-----#
    Trans_matrix = SEQ(name='Trans-matrix', mode=MODE_TYPE)
    _Trans_matrix_scale_factor = INT(name='scale-factor', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Trans_matrix_tran_1 = INT(name='tran-1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Trans_matrix_tran_2 = INT(name='tran-2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Trans_matrix_tran_3 = INT(name='tran-3', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Trans_matrix._cont = ASN1Dict([
        ('scale-factor', _Trans_matrix_scale_factor),
        ('tran-1', _Trans_matrix_tran_1),
        ('tran-2', _Trans_matrix_tran_2),
        ('tran-3', _Trans_matrix_tran_3),
        ])
    Trans_matrix._ext = None
    
    #-----< Camera >-----#
    Camera = SEQ(name='Camera', mode=MODE_TYPE)
    _Camera_x = INT(name='x', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Camera_y = INT(name='y', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Camera_distance = INT(name='distance', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Camera_angle = INT(name='angle', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Camera_scale = INT(name='scale', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Camera_modelview = SEQ(name='modelview', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'GL-matrix')))
    Camera._cont = ASN1Dict([
        ('x', _Camera_x),
        ('y', _Camera_y),
        ('distance', _Camera_distance),
        ('angle', _Camera_angle),
        ('scale', _Camera_scale),
        ('modelview', _Camera_modelview),
        ])
    Camera._ext = None
    
    #-----< GL-matrix >-----#
    GL_matrix = SEQ(name='GL-matrix', mode=MODE_TYPE)
    _GL_matrix_scale = INT(name='scale', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GL_matrix_m11 = INT(name='m11', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GL_matrix_m12 = INT(name='m12', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GL_matrix_m13 = INT(name='m13', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GL_matrix_m14 = INT(name='m14', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GL_matrix_m21 = INT(name='m21', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GL_matrix_m22 = INT(name='m22', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GL_matrix_m23 = INT(name='m23', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GL_matrix_m24 = INT(name='m24', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GL_matrix_m31 = INT(name='m31', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GL_matrix_m32 = INT(name='m32', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GL_matrix_m33 = INT(name='m33', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GL_matrix_m34 = INT(name='m34', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GL_matrix_m41 = INT(name='m41', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GL_matrix_m42 = INT(name='m42', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GL_matrix_m43 = INT(name='m43', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GL_matrix_m44 = INT(name='m44', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    GL_matrix._cont = ASN1Dict([
        ('scale', _GL_matrix_scale),
        ('m11', _GL_matrix_m11),
        ('m12', _GL_matrix_m12),
        ('m13', _GL_matrix_m13),
        ('m14', _GL_matrix_m14),
        ('m21', _GL_matrix_m21),
        ('m22', _GL_matrix_m22),
        ('m23', _GL_matrix_m23),
        ('m24', _GL_matrix_m24),
        ('m31', _GL_matrix_m31),
        ('m32', _GL_matrix_m32),
        ('m33', _GL_matrix_m33),
        ('m34', _GL_matrix_m34),
        ('m41', _GL_matrix_m41),
        ('m42', _GL_matrix_m42),
        ('m43', _GL_matrix_m43),
        ('m44', _GL_matrix_m44),
        ])
    GL_matrix._ext = None
    
    #-----< Color-prop >-----#
    Color_prop = SEQ(name='Color-prop', mode=MODE_TYPE)
    _Color_prop_r = INT(name='r', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Color_prop_g = INT(name='g', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Color_prop_b = INT(name='b', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Color_prop_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Color_prop._cont = ASN1Dict([
        ('r', _Color_prop_r),
        ('g', _Color_prop_g),
        ('b', _Color_prop_b),
        ('name', _Color_prop_name),
        ])
    Color_prop._ext = None
    
    #-----< Render-prop >-----#
    Render_prop = INT(name='Render-prop', mode=MODE_TYPE)
    Render_prop._cont = ASN1Dict([('default', 0), ('wire', 1), ('space', 2), ('stick', 3), ('ballNStick', 4), ('thickWire', 5), ('hide', 9), ('name', 10), ('number', 11), ('pdbNumber', 12), ('objWireFrame', 150), ('objPolygons', 151), ('colorsetCPK', 225), ('colorsetbyChain', 226), ('colorsetbyTemp', 227), ('colorsetbyRes', 228), ('colorsetbyLen', 229), ('colorsetbySStru', 230), ('colorsetbyHydro', 231), ('colorsetbyObject', 246), ('colorsetbyDomain', 247), ('other', 255)])
    
    #-----< Biostruc-script >-----#
    Biostruc_script = SEQ_OF(name='Biostruc-script', mode=MODE_TYPE)
    _Biostruc_script__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'Biostruc-script-step')))
    Biostruc_script._cont = _Biostruc_script__item_
    
    #-----< Biostruc-script-step >-----#
    Biostruc_script_step = SEQ(name='Biostruc-script-step', mode=MODE_TYPE)
    _Biostruc_script_step_step_id = INT(name='step-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Step-id')))
    _Biostruc_script_step_step_name = STR_VIS(name='step-name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Biostruc_script_step_feature_do = SEQ_OF(name='feature-do', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Biostruc_script_step_feature_do__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB-Features', 'Other-feature')))
    _Biostruc_script_step_feature_do._cont = __Biostruc_script_step_feature_do__item_
    _Biostruc_script_step_camera_move = SEQ(name='camera-move', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Transform')), opt=True)
    _Biostruc_script_step_pause = INT(name='pause', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=10)
    _Biostruc_script_step_waitevent = BOOL(name='waitevent', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Biostruc_script_step_extra = INT(name='extra', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Biostruc_script_step_jump = INT(name='jump', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB-Features', 'Step-id')), opt=True)
    Biostruc_script_step._cont = ASN1Dict([
        ('step-id', _Biostruc_script_step_step_id),
        ('step-name', _Biostruc_script_step_step_name),
        ('feature-do', _Biostruc_script_step_feature_do),
        ('camera-move', _Biostruc_script_step_camera_move),
        ('pause', _Biostruc_script_step_pause),
        ('waitevent', _Biostruc_script_step_waitevent),
        ('extra', _Biostruc_script_step_extra),
        ('jump', _Biostruc_script_step_jump),
        ])
    Biostruc_script_step._ext = None
    
    #-----< Step-id >-----#
    Step_id = INT(name='Step-id', mode=MODE_TYPE)
    
    _all_ = [
        _Biostruc_feature_set_id,
        __Biostruc_feature_set_descr__item_,
        _Biostruc_feature_set_descr,
        __Biostruc_feature_set_features__item_,
        _Biostruc_feature_set_features,
        Biostruc_feature_set,
        Biostruc_feature_set_id,
        _Biostruc_feature_set_descr_name,
        _Biostruc_feature_set_descr_pdb_comment,
        _Biostruc_feature_set_descr_other_comment,
        _Biostruc_feature_set_descr_attribution,
        Biostruc_feature_set_descr,
        _Biostruc_feature_id,
        _Biostruc_feature_name,
        _Biostruc_feature_type,
        __Biostruc_feature_property_color,
        __Biostruc_feature_property_render,
        __Biostruc_feature_property_transform,
        __Biostruc_feature_property_camera,
        __Biostruc_feature_property_script,
        __Biostruc_feature_property_user,
        _Biostruc_feature_property,
        __Biostruc_feature_location_subgraph,
        __Biostruc_feature_location_region,
        __Biostruc_feature_location_alignment,
        __Biostruc_feature_location_interaction,
        __Biostruc_feature_location_similarity,
        __Biostruc_feature_location_indirect,
        _Biostruc_feature_location,
        Biostruc_feature,
        _Other_feature_biostruc_id,
        _Other_feature_set,
        _Other_feature_feature,
        Other_feature,
        Biostruc_feature_id,
        _Biostruc_molecule_pntr_biostruc_id,
        _Biostruc_molecule_pntr_molecule_id,
        Biostruc_molecule_pntr,
        _Chem_graph_pntrs_atoms,
        _Chem_graph_pntrs_residues,
        _Chem_graph_pntrs_molecules,
        Chem_graph_pntrs,
        _Atom_pntrs_number_of_ptrs,
        __Atom_pntrs_molecule_ids__item_,
        _Atom_pntrs_molecule_ids,
        __Atom_pntrs_residue_ids__item_,
        _Atom_pntrs_residue_ids,
        __Atom_pntrs_atom_ids__item_,
        _Atom_pntrs_atom_ids,
        Atom_pntrs,
        _Residue_pntrs_explicit,
        __Residue_pntrs_interval__item_,
        _Residue_pntrs_interval,
        Residue_pntrs,
        _Residue_explicit_pntrs_number_of_ptrs,
        __Residue_explicit_pntrs_molecule_ids__item_,
        _Residue_explicit_pntrs_molecule_ids,
        __Residue_explicit_pntrs_residue_ids__item_,
        _Residue_explicit_pntrs_residue_ids,
        Residue_explicit_pntrs,
        _Residue_interval_pntr_molecule_id,
        _Residue_interval_pntr_from_,
        _Residue_interval_pntr_to,
        Residue_interval_pntr,
        _Molecule_pntrs_number_of_ptrs,
        __Molecule_pntrs_molecule_ids__item_,
        _Molecule_pntrs_molecule_ids,
        Molecule_pntrs,
        _Region_pntrs_model_id,
        ___Region_pntrs_region_site__item_,
        __Region_pntrs_region_site,
        ___Region_pntrs_region_boundary__item_,
        __Region_pntrs_region_boundary,
        _Region_pntrs_region,
        Region_pntrs,
        _Region_coordinates_model_coord_set_id,
        _Region_coordinates_number_of_coords,
        __Region_coordinates_coordinate_indices__item_,
        _Region_coordinates_coordinate_indices,
        Region_coordinates,
        _Region_boundary_sphere,
        _Region_boundary_cone,
        _Region_boundary_cylinder,
        _Region_boundary_brick,
        Region_boundary,
        _Chem_graph_alignment_dimension,
        __Chem_graph_alignment_biostruc_ids__item_,
        _Chem_graph_alignment_biostruc_ids,
        __Chem_graph_alignment_alignment__item_,
        _Chem_graph_alignment_alignment,
        __Chem_graph_alignment_domain__item_,
        _Chem_graph_alignment_domain,
        __Chem_graph_alignment_transform__item_,
        _Chem_graph_alignment_transform,
        __Chem_graph_alignment_aligndata__item_,
        _Chem_graph_alignment_aligndata,
        Chem_graph_alignment,
        _Chem_graph_interaction_type,
        _Chem_graph_interaction_distance_threshold,
        __Chem_graph_interaction_interactors__item_,
        _Chem_graph_interaction_interactors,
        __Chem_graph_interaction_residue_contacts__item_,
        _Chem_graph_interaction_residue_contacts,
        __Chem_graph_interaction_atom_contacts__item_,
        _Chem_graph_interaction_atom_contacts,
        __Chem_graph_interaction_atom_distance__item_,
        _Chem_graph_interaction_atom_distance,
        Chem_graph_interaction,
        _Align_stats_descr,
        _Align_stats_scale_factor,
        _Align_stats_vast_score,
        _Align_stats_vast_mlogp,
        _Align_stats_align_res,
        _Align_stats_rmsd,
        _Align_stats_blast_score,
        _Align_stats_blast_mlogp,
        _Align_stats_other_score,
        Align_stats,
        _Region_similarity_dimension,
        __Region_similarity_biostruc_ids__item_,
        _Region_similarity_biostruc_ids,
        __Region_similarity_similarity__item_,
        _Region_similarity_similarity,
        __Region_similarity_transform__item_,
        _Region_similarity_transform,
        Region_similarity,
        _Sphere_center,
        _Sphere_radius,
        Sphere,
        _Cone_axis_top,
        _Cone_axis_bottom,
        _Cone_radius_bottom,
        Cone,
        _Cylinder_axis_top,
        _Cylinder_axis_bottom,
        _Cylinder_radius,
        Cylinder,
        _Brick_corner_000,
        _Brick_corner_001,
        _Brick_corner_010,
        _Brick_corner_011,
        _Brick_corner_100,
        _Brick_corner_101,
        _Brick_corner_110,
        _Brick_corner_111,
        Brick,
        _Model_space_point_scale_factor,
        _Model_space_point_x,
        _Model_space_point_y,
        _Model_space_point_z,
        Model_space_point,
        _RealValue_scale_factor,
        _RealValue_scaled_integer_value,
        RealValue,
        _Transform_id,
        __Transform_moves__item_,
        _Transform_moves,
        Transform,
        _Move_rotate,
        _Move_translate,
        Move,
        _Rot_matrix_scale_factor,
        _Rot_matrix_rot_11,
        _Rot_matrix_rot_12,
        _Rot_matrix_rot_13,
        _Rot_matrix_rot_21,
        _Rot_matrix_rot_22,
        _Rot_matrix_rot_23,
        _Rot_matrix_rot_31,
        _Rot_matrix_rot_32,
        _Rot_matrix_rot_33,
        Rot_matrix,
        _Trans_matrix_scale_factor,
        _Trans_matrix_tran_1,
        _Trans_matrix_tran_2,
        _Trans_matrix_tran_3,
        Trans_matrix,
        _Camera_x,
        _Camera_y,
        _Camera_distance,
        _Camera_angle,
        _Camera_scale,
        _Camera_modelview,
        Camera,
        _GL_matrix_scale,
        _GL_matrix_m11,
        _GL_matrix_m12,
        _GL_matrix_m13,
        _GL_matrix_m14,
        _GL_matrix_m21,
        _GL_matrix_m22,
        _GL_matrix_m23,
        _GL_matrix_m24,
        _GL_matrix_m31,
        _GL_matrix_m32,
        _GL_matrix_m33,
        _GL_matrix_m34,
        _GL_matrix_m41,
        _GL_matrix_m42,
        _GL_matrix_m43,
        _GL_matrix_m44,
        GL_matrix,
        _Color_prop_r,
        _Color_prop_g,
        _Color_prop_b,
        _Color_prop_name,
        Color_prop,
        Render_prop,
        _Biostruc_script__item_,
        Biostruc_script,
        _Biostruc_script_step_step_id,
        _Biostruc_script_step_step_name,
        __Biostruc_script_step_feature_do__item_,
        _Biostruc_script_step_feature_do,
        _Biostruc_script_step_camera_move,
        _Biostruc_script_step_pause,
        _Biostruc_script_step_waitevent,
        _Biostruc_script_step_extra,
        _Biostruc_script_step_jump,
        Biostruc_script_step,
        Step_id,
    ]

class NCBI_Mime:

    _name_  = 'NCBI-Mime'
    _oid_   = []
    
    _obj_ = [
        'Ncbi-mime-asn1',
        'Bundle-seqs-aligns',
        'Biostruc-seqs-aligns-cdd',
        'Biostruc-align',
        'Biostruc-align-seq',
        'Biostruc-seq',
        'Biostruc-seqs',
        'Entrez-style',
        'Entrez-general',
        ]
    _type_ = [
        'Ncbi-mime-asn1',
        'Bundle-seqs-aligns',
        'Biostruc-seqs-aligns-cdd',
        'Biostruc-align',
        'Biostruc-align-seq',
        'Biostruc-seq',
        'Biostruc-seqs',
        'Entrez-style',
        'Entrez-general',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Ncbi-mime-asn1 >-----#
    Ncbi_mime_asn1 = CHOICE(name='Ncbi-mime-asn1', mode=MODE_TYPE)
    _Ncbi_mime_asn1_entrez = SEQ(name='entrez', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mime', 'Entrez-general')))
    _Ncbi_mime_asn1_alignstruc = SEQ(name='alignstruc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mime', 'Biostruc-align')))
    _Ncbi_mime_asn1_alignseq = SEQ(name='alignseq', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mime', 'Biostruc-align-seq')))
    _Ncbi_mime_asn1_strucseq = SEQ(name='strucseq', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mime', 'Biostruc-seq')))
    _Ncbi_mime_asn1_strucseqs = SEQ(name='strucseqs', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mime', 'Biostruc-seqs')))
    _Ncbi_mime_asn1_general = SEQ(name='general', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mime', 'Biostruc-seqs-aligns-cdd')))
    Ncbi_mime_asn1._cont = ASN1Dict([
        ('entrez', _Ncbi_mime_asn1_entrez),
        ('alignstruc', _Ncbi_mime_asn1_alignstruc),
        ('alignseq', _Ncbi_mime_asn1_alignseq),
        ('strucseq', _Ncbi_mime_asn1_strucseq),
        ('strucseqs', _Ncbi_mime_asn1_strucseqs),
        ('general', _Ncbi_mime_asn1_general),
        ])
    Ncbi_mime_asn1._ext = None
    
    #-----< Bundle-seqs-aligns >-----#
    Bundle_seqs_aligns = SEQ(name='Bundle-seqs-aligns', mode=MODE_TYPE)
    _Bundle_seqs_aligns_sequences = SET_OF(name='sequences', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Bundle_seqs_aligns_sequences__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')))
    _Bundle_seqs_aligns_sequences._cont = __Bundle_seqs_aligns_sequences__item_
    _Bundle_seqs_aligns_seqaligns = SET_OF(name='seqaligns', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Bundle_seqs_aligns_seqaligns__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Seq-annot')))
    _Bundle_seqs_aligns_seqaligns._cont = __Bundle_seqs_aligns_seqaligns__item_
    _Bundle_seqs_aligns_strucaligns = SEQ(name='strucaligns', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc-annot-set')), opt=True)
    _Bundle_seqs_aligns_imports = SET_OF(name='imports', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Bundle_seqs_aligns_imports__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Seq-annot')))
    _Bundle_seqs_aligns_imports._cont = __Bundle_seqs_aligns_imports__item_
    _Bundle_seqs_aligns_style_dictionary = SEQ(name='style-dictionary', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-style-dictionary')), opt=True)
    _Bundle_seqs_aligns_user_annotations = SEQ(name='user-annotations', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-user-annotations')), opt=True)
    Bundle_seqs_aligns._cont = ASN1Dict([
        ('sequences', _Bundle_seqs_aligns_sequences),
        ('seqaligns', _Bundle_seqs_aligns_seqaligns),
        ('strucaligns', _Bundle_seqs_aligns_strucaligns),
        ('imports', _Bundle_seqs_aligns_imports),
        ('style-dictionary', _Bundle_seqs_aligns_style_dictionary),
        ('user-annotations', _Bundle_seqs_aligns_user_annotations),
        ])
    Bundle_seqs_aligns._ext = None
    
    #-----< Biostruc-seqs-aligns-cdd >-----#
    Biostruc_seqs_aligns_cdd = SEQ(name='Biostruc-seqs-aligns-cdd', mode=MODE_TYPE)
    _Biostruc_seqs_aligns_cdd_seq_align_data = CHOICE(name='seq-align-data', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __Biostruc_seqs_aligns_cdd_seq_align_data_bundle = SEQ(name='bundle', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mime', 'Bundle-seqs-aligns')))
    __Biostruc_seqs_aligns_cdd_seq_align_data_cdd = SEQ(name='cdd', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cdd', 'Cdd')))
    _Biostruc_seqs_aligns_cdd_seq_align_data._cont = ASN1Dict([
        ('bundle', __Biostruc_seqs_aligns_cdd_seq_align_data_bundle),
        ('cdd', __Biostruc_seqs_aligns_cdd_seq_align_data_cdd),
        ])
    _Biostruc_seqs_aligns_cdd_seq_align_data._ext = None
    _Biostruc_seqs_aligns_cdd_structures = SET_OF(name='structures', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Biostruc_seqs_aligns_cdd_structures__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB', 'Biostruc')))
    _Biostruc_seqs_aligns_cdd_structures._cont = __Biostruc_seqs_aligns_cdd_structures__item_
    _Biostruc_seqs_aligns_cdd_structure_type = ENUM(name='structure-type', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Biostruc_seqs_aligns_cdd_structure_type._cont = ASN1Dict([('ncbi-backbone', 2), ('ncbi-all-atom', 3), ('pdb-model', 4)])
    _Biostruc_seqs_aligns_cdd_structure_type._ext = None
    Biostruc_seqs_aligns_cdd._cont = ASN1Dict([
        ('seq-align-data', _Biostruc_seqs_aligns_cdd_seq_align_data),
        ('structures', _Biostruc_seqs_aligns_cdd_structures),
        ('structure-type', _Biostruc_seqs_aligns_cdd_structure_type),
        ])
    Biostruc_seqs_aligns_cdd._ext = None
    
    #-----< Biostruc-align >-----#
    Biostruc_align = SEQ(name='Biostruc-align', mode=MODE_TYPE)
    _Biostruc_align_master = SEQ(name='master', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc')))
    _Biostruc_align_slaves = SET_OF(name='slaves', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Biostruc_align_slaves__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MMDB', 'Biostruc')))
    _Biostruc_align_slaves._cont = __Biostruc_align_slaves__item_
    _Biostruc_align_alignments = SEQ(name='alignments', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc-annot-set')))
    _Biostruc_align_sequences = SET_OF(name='sequences', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Biostruc_align_sequences__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')))
    _Biostruc_align_sequences._cont = __Biostruc_align_sequences__item_
    _Biostruc_align_seqalign = SET_OF(name='seqalign', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Biostruc_align_seqalign__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Seq-annot')))
    _Biostruc_align_seqalign._cont = __Biostruc_align_seqalign__item_
    _Biostruc_align_style_dictionary = SEQ(name='style-dictionary', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-style-dictionary')), opt=True)
    _Biostruc_align_user_annotations = SEQ(name='user-annotations', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-user-annotations')), opt=True)
    Biostruc_align._cont = ASN1Dict([
        ('master', _Biostruc_align_master),
        ('slaves', _Biostruc_align_slaves),
        ('alignments', _Biostruc_align_alignments),
        ('sequences', _Biostruc_align_sequences),
        ('seqalign', _Biostruc_align_seqalign),
        ('style-dictionary', _Biostruc_align_style_dictionary),
        ('user-annotations', _Biostruc_align_user_annotations),
        ])
    Biostruc_align._ext = None
    
    #-----< Biostruc-align-seq >-----#
    Biostruc_align_seq = SEQ(name='Biostruc-align-seq', mode=MODE_TYPE)
    _Biostruc_align_seq_sequences = SET_OF(name='sequences', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Biostruc_align_seq_sequences__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')))
    _Biostruc_align_seq_sequences._cont = __Biostruc_align_seq_sequences__item_
    _Biostruc_align_seq_seqalign = SET_OF(name='seqalign', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Biostruc_align_seq_seqalign__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Seq-annot')))
    _Biostruc_align_seq_seqalign._cont = __Biostruc_align_seq_seqalign__item_
    _Biostruc_align_seq_style_dictionary = SEQ(name='style-dictionary', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-style-dictionary')), opt=True)
    _Biostruc_align_seq_user_annotations = SEQ(name='user-annotations', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-user-annotations')), opt=True)
    Biostruc_align_seq._cont = ASN1Dict([
        ('sequences', _Biostruc_align_seq_sequences),
        ('seqalign', _Biostruc_align_seq_seqalign),
        ('style-dictionary', _Biostruc_align_seq_style_dictionary),
        ('user-annotations', _Biostruc_align_seq_user_annotations),
        ])
    Biostruc_align_seq._ext = None
    
    #-----< Biostruc-seq >-----#
    Biostruc_seq = SEQ(name='Biostruc-seq', mode=MODE_TYPE)
    _Biostruc_seq_structure = SEQ(name='structure', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc')))
    _Biostruc_seq_sequences = SET_OF(name='sequences', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Biostruc_seq_sequences__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')))
    _Biostruc_seq_sequences._cont = __Biostruc_seq_sequences__item_
    _Biostruc_seq_style_dictionary = SEQ(name='style-dictionary', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-style-dictionary')), opt=True)
    _Biostruc_seq_user_annotations = SEQ(name='user-annotations', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-user-annotations')), opt=True)
    Biostruc_seq._cont = ASN1Dict([
        ('structure', _Biostruc_seq_structure),
        ('sequences', _Biostruc_seq_sequences),
        ('style-dictionary', _Biostruc_seq_style_dictionary),
        ('user-annotations', _Biostruc_seq_user_annotations),
        ])
    Biostruc_seq._ext = None
    
    #-----< Biostruc-seqs >-----#
    Biostruc_seqs = SEQ(name='Biostruc-seqs', mode=MODE_TYPE)
    _Biostruc_seqs_structure = SEQ(name='structure', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc')))
    _Biostruc_seqs_sequences = SET_OF(name='sequences', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Biostruc_seqs_sequences__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')))
    _Biostruc_seqs_sequences._cont = __Biostruc_seqs_sequences__item_
    _Biostruc_seqs_seqalign = SET_OF(name='seqalign', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Biostruc_seqs_seqalign__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Seq-annot')))
    _Biostruc_seqs_seqalign._cont = __Biostruc_seqs_seqalign__item_
    _Biostruc_seqs_style_dictionary = SEQ(name='style-dictionary', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-style-dictionary')), opt=True)
    _Biostruc_seqs_user_annotations = SEQ(name='user-annotations', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Cn3d', 'Cn3d-user-annotations')), opt=True)
    Biostruc_seqs._cont = ASN1Dict([
        ('structure', _Biostruc_seqs_structure),
        ('sequences', _Biostruc_seqs_sequences),
        ('seqalign', _Biostruc_seqs_seqalign),
        ('style-dictionary', _Biostruc_seqs_style_dictionary),
        ('user-annotations', _Biostruc_seqs_user_annotations),
        ])
    Biostruc_seqs._ext = None
    
    #-----< Entrez-style >-----#
    Entrez_style = ENUM(name='Entrez-style', mode=MODE_TYPE)
    Entrez_style._cont = ASN1Dict([('docsum', 1), ('genbank', 2), ('genpept', 3), ('fasta', 4), ('asn1', 5), ('graphic', 6), ('alignment', 7), ('globalview', 8), ('report', 9), ('medlars', 10), ('embl', 11), ('pdb', 12), ('kinemage', 13)])
    Entrez_style._ext = None
    
    #-----< Entrez-general >-----#
    Entrez_general = SEQ(name='Entrez-general', mode=MODE_TYPE)
    _Entrez_general_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Entrez_general_data = CHOICE(name='data', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __Entrez_general_data_ml = SEQ(name='ml', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Medline', 'Medline-entry')))
    __Entrez_general_data_prot = CHOICE(name='prot', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')))
    __Entrez_general_data_nuc = CHOICE(name='nuc', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')))
    __Entrez_general_data_genome = CHOICE(name='genome', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')))
    __Entrez_general_data_structure = SEQ(name='structure', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc')))
    __Entrez_general_data_strucAnnot = SEQ(name='strucAnnot', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MMDB', 'Biostruc-annot-set')))
    _Entrez_general_data._cont = ASN1Dict([
        ('ml', __Entrez_general_data_ml),
        ('prot', __Entrez_general_data_prot),
        ('nuc', __Entrez_general_data_nuc),
        ('genome', __Entrez_general_data_genome),
        ('structure', __Entrez_general_data_structure),
        ('strucAnnot', __Entrez_general_data_strucAnnot),
        ])
    _Entrez_general_data._ext = None
    _Entrez_general_style = ENUM(name='style', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Mime', 'Entrez-style')))
    _Entrez_general_location = STR_VIS(name='location', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Entrez_general._cont = ASN1Dict([
        ('title', _Entrez_general_title),
        ('data', _Entrez_general_data),
        ('style', _Entrez_general_style),
        ('location', _Entrez_general_location),
        ])
    Entrez_general._ext = None
    
    _all_ = [
        _Ncbi_mime_asn1_entrez,
        _Ncbi_mime_asn1_alignstruc,
        _Ncbi_mime_asn1_alignseq,
        _Ncbi_mime_asn1_strucseq,
        _Ncbi_mime_asn1_strucseqs,
        _Ncbi_mime_asn1_general,
        Ncbi_mime_asn1,
        __Bundle_seqs_aligns_sequences__item_,
        _Bundle_seqs_aligns_sequences,
        __Bundle_seqs_aligns_seqaligns__item_,
        _Bundle_seqs_aligns_seqaligns,
        _Bundle_seqs_aligns_strucaligns,
        __Bundle_seqs_aligns_imports__item_,
        _Bundle_seqs_aligns_imports,
        _Bundle_seqs_aligns_style_dictionary,
        _Bundle_seqs_aligns_user_annotations,
        Bundle_seqs_aligns,
        __Biostruc_seqs_aligns_cdd_seq_align_data_bundle,
        __Biostruc_seqs_aligns_cdd_seq_align_data_cdd,
        _Biostruc_seqs_aligns_cdd_seq_align_data,
        __Biostruc_seqs_aligns_cdd_structures__item_,
        _Biostruc_seqs_aligns_cdd_structures,
        _Biostruc_seqs_aligns_cdd_structure_type,
        Biostruc_seqs_aligns_cdd,
        _Biostruc_align_master,
        __Biostruc_align_slaves__item_,
        _Biostruc_align_slaves,
        _Biostruc_align_alignments,
        __Biostruc_align_sequences__item_,
        _Biostruc_align_sequences,
        __Biostruc_align_seqalign__item_,
        _Biostruc_align_seqalign,
        _Biostruc_align_style_dictionary,
        _Biostruc_align_user_annotations,
        Biostruc_align,
        __Biostruc_align_seq_sequences__item_,
        _Biostruc_align_seq_sequences,
        __Biostruc_align_seq_seqalign__item_,
        _Biostruc_align_seq_seqalign,
        _Biostruc_align_seq_style_dictionary,
        _Biostruc_align_seq_user_annotations,
        Biostruc_align_seq,
        _Biostruc_seq_structure,
        __Biostruc_seq_sequences__item_,
        _Biostruc_seq_sequences,
        _Biostruc_seq_style_dictionary,
        _Biostruc_seq_user_annotations,
        Biostruc_seq,
        _Biostruc_seqs_structure,
        __Biostruc_seqs_sequences__item_,
        _Biostruc_seqs_sequences,
        __Biostruc_seqs_seqalign__item_,
        _Biostruc_seqs_seqalign,
        _Biostruc_seqs_style_dictionary,
        _Biostruc_seqs_user_annotations,
        Biostruc_seqs,
        Entrez_style,
        _Entrez_general_title,
        __Entrez_general_data_ml,
        __Entrez_general_data_prot,
        __Entrez_general_data_nuc,
        __Entrez_general_data_genome,
        __Entrez_general_data_structure,
        __Entrez_general_data_strucAnnot,
        _Entrez_general_data,
        _Entrez_general_style,
        _Entrez_general_location,
        Entrez_general,
    ]

class NCBI_ObjPrt:

    _name_  = 'NCBI-ObjPrt'
    _oid_   = []
    
    _obj_ = [
        'PrintTemplate',
        'TemplateName',
        'PrintTemplateSet',
        'PrintFormat',
        'PrintForm',
        'UserFormat',
        'PrintFormBlock',
        'PrintFormBoolean',
        'PrintFormEnum',
        'PrintFormText',
        ]
    _type_ = [
        'PrintTemplate',
        'TemplateName',
        'PrintTemplateSet',
        'PrintFormat',
        'PrintForm',
        'UserFormat',
        'PrintFormBlock',
        'PrintFormBoolean',
        'PrintFormEnum',
        'PrintFormText',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< PrintTemplate >-----#
    PrintTemplate = SEQ(name='PrintTemplate', mode=MODE_TYPE)
    _PrintTemplate_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ObjPrt', 'TemplateName')))
    _PrintTemplate_labelfrom = STR_VIS(name='labelfrom', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PrintTemplate_format = SEQ(name='format', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ObjPrt', 'PrintFormat')))
    PrintTemplate._cont = ASN1Dict([
        ('name', _PrintTemplate_name),
        ('labelfrom', _PrintTemplate_labelfrom),
        ('format', _PrintTemplate_format),
        ])
    PrintTemplate._ext = None
    
    #-----< TemplateName >-----#
    TemplateName = STR_VIS(name='TemplateName', mode=MODE_TYPE)
    
    #-----< PrintTemplateSet >-----#
    PrintTemplateSet = SEQ_OF(name='PrintTemplateSet', mode=MODE_TYPE)
    _PrintTemplateSet__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-ObjPrt', 'PrintTemplate')))
    PrintTemplateSet._cont = _PrintTemplateSet__item_
    
    #-----< PrintFormat >-----#
    PrintFormat = SEQ(name='PrintFormat', mode=MODE_TYPE)
    _PrintFormat_asn1 = STR_VIS(name='asn1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PrintFormat_label = STR_VIS(name='label', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PrintFormat_prefix = STR_VIS(name='prefix', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PrintFormat_suffix = STR_VIS(name='suffix', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PrintFormat_form = CHOICE(name='form', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-ObjPrt', 'PrintForm')))
    PrintFormat._cont = ASN1Dict([
        ('asn1', _PrintFormat_asn1),
        ('label', _PrintFormat_label),
        ('prefix', _PrintFormat_prefix),
        ('suffix', _PrintFormat_suffix),
        ('form', _PrintFormat_form),
        ])
    PrintFormat._ext = None
    
    #-----< PrintForm >-----#
    PrintForm = CHOICE(name='PrintForm', mode=MODE_TYPE)
    _PrintForm_block = SEQ(name='block', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ObjPrt', 'PrintFormBlock')))
    _PrintForm_boolean = SEQ(name='boolean', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ObjPrt', 'PrintFormBoolean')))
    _PrintForm_enum = SEQ(name='enum', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ObjPrt', 'PrintFormEnum')))
    _PrintForm_text = SEQ(name='text', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ObjPrt', 'PrintFormText')))
    _PrintForm_use_template = STR_VIS(name='use-template', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ObjPrt', 'TemplateName')))
    _PrintForm_user = SEQ(name='user', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ObjPrt', 'UserFormat')))
    _PrintForm_null = NULL(name='null', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PrintForm._cont = ASN1Dict([
        ('block', _PrintForm_block),
        ('boolean', _PrintForm_boolean),
        ('enum', _PrintForm_enum),
        ('text', _PrintForm_text),
        ('use-template', _PrintForm_use_template),
        ('user', _PrintForm_user),
        ('null', _PrintForm_null),
        ])
    PrintForm._ext = None
    
    #-----< UserFormat >-----#
    UserFormat = SEQ(name='UserFormat', mode=MODE_TYPE)
    _UserFormat_printfunc = STR_VIS(name='printfunc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UserFormat_defaultfunc = STR_VIS(name='defaultfunc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    UserFormat._cont = ASN1Dict([
        ('printfunc', _UserFormat_printfunc),
        ('defaultfunc', _UserFormat_defaultfunc),
        ])
    UserFormat._ext = None
    
    #-----< PrintFormBlock >-----#
    PrintFormBlock = SEQ(name='PrintFormBlock', mode=MODE_TYPE)
    _PrintFormBlock_separator = STR_VIS(name='separator', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PrintFormBlock_components = SEQ_OF(name='components', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PrintFormBlock_components__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-ObjPrt', 'PrintFormat')))
    _PrintFormBlock_components._cont = __PrintFormBlock_components__item_
    PrintFormBlock._cont = ASN1Dict([
        ('separator', _PrintFormBlock_separator),
        ('components', _PrintFormBlock_components),
        ])
    PrintFormBlock._ext = None
    
    #-----< PrintFormBoolean >-----#
    PrintFormBoolean = SEQ(name='PrintFormBoolean', mode=MODE_TYPE)
    _PrintFormBoolean_true = STR_VIS(name='true', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PrintFormBoolean_false = STR_VIS(name='false', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    PrintFormBoolean._cont = ASN1Dict([
        ('true', _PrintFormBoolean_true),
        ('false', _PrintFormBoolean_false),
        ])
    PrintFormBoolean._ext = None
    
    #-----< PrintFormEnum >-----#
    PrintFormEnum = SEQ(name='PrintFormEnum', mode=MODE_TYPE)
    _PrintFormEnum_values = SEQ_OF(name='values', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PrintFormEnum_values__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _PrintFormEnum_values._cont = __PrintFormEnum_values__item_
    PrintFormEnum._cont = ASN1Dict([
        ('values', _PrintFormEnum_values),
        ])
    PrintFormEnum._ext = None
    
    #-----< PrintFormText >-----#
    PrintFormText = SEQ(name='PrintFormText', mode=MODE_TYPE)
    _PrintFormText_textfunc = STR_VIS(name='textfunc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    PrintFormText._cont = ASN1Dict([
        ('textfunc', _PrintFormText_textfunc),
        ])
    PrintFormText._ext = None
    
    _all_ = [
        _PrintTemplate_name,
        _PrintTemplate_labelfrom,
        _PrintTemplate_format,
        PrintTemplate,
        TemplateName,
        _PrintTemplateSet__item_,
        PrintTemplateSet,
        _PrintFormat_asn1,
        _PrintFormat_label,
        _PrintFormat_prefix,
        _PrintFormat_suffix,
        _PrintFormat_form,
        PrintFormat,
        _PrintForm_block,
        _PrintForm_boolean,
        _PrintForm_enum,
        _PrintForm_text,
        _PrintForm_use_template,
        _PrintForm_user,
        _PrintForm_null,
        PrintForm,
        _UserFormat_printfunc,
        _UserFormat_defaultfunc,
        UserFormat,
        _PrintFormBlock_separator,
        __PrintFormBlock_components__item_,
        _PrintFormBlock_components,
        PrintFormBlock,
        _PrintFormBoolean_true,
        _PrintFormBoolean_false,
        PrintFormBoolean,
        __PrintFormEnum_values__item_,
        _PrintFormEnum_values,
        PrintFormEnum,
        _PrintFormText_textfunc,
        PrintFormText,
    ]

class OMSSA:

    _name_  = 'OMSSA'
    _oid_   = []
    
    _obj_ = [
        'NameValue',
        'MSSpectrum',
        'MSSpectrumset',
        'MSEnzymes',
        'MSMod',
        'MSModType',
        'MSMassSet',
        'MSModSpec',
        'MSModSpecSet',
        'MSCalcPlusOne',
        'MSCalcCharge',
        'MSChargeHandle',
        'MSSearchType',
        'MSZdependence',
        'MSIterativeSettings',
        'MSLibrarySettings',
        'MSSearchSettings',
        'MSSerialDataFormat',
        'MSOutFile',
        'MSSpectrumFileType',
        'MSInFile',
        'MSSearchSettingsSet',
        'MSRequest',
        'MSIonType',
        'MSIonNeutralLoss',
        'MSIonIsotopicType',
        'MSImmonium',
        'MSIon',
        'MSIonAnnot',
        'MSMZHit',
        'MSPepHit',
        'MSModHit',
        'MSScoreSet',
        'MSHits',
        'MSHitError',
        'MSUserAnnot',
        'MSHitSet',
        'MSResponseError',
        'MSBioseq',
        'MSBioseqSet',
        'MSResponse',
        'MSSearch',
        ]
    _type_ = [
        'NameValue',
        'MSSpectrum',
        'MSSpectrumset',
        'MSEnzymes',
        'MSMod',
        'MSModType',
        'MSMassSet',
        'MSModSpec',
        'MSModSpecSet',
        'MSCalcPlusOne',
        'MSCalcCharge',
        'MSChargeHandle',
        'MSSearchType',
        'MSZdependence',
        'MSIterativeSettings',
        'MSLibrarySettings',
        'MSSearchSettings',
        'MSSerialDataFormat',
        'MSOutFile',
        'MSSpectrumFileType',
        'MSInFile',
        'MSSearchSettingsSet',
        'MSRequest',
        'MSIonType',
        'MSIonNeutralLoss',
        'MSIonIsotopicType',
        'MSImmonium',
        'MSIon',
        'MSIonAnnot',
        'MSMZHit',
        'MSPepHit',
        'MSModHit',
        'MSScoreSet',
        'MSHits',
        'MSHitError',
        'MSUserAnnot',
        'MSHitSet',
        'MSResponseError',
        'MSBioseq',
        'MSBioseqSet',
        'MSResponse',
        'MSSearch',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< NameValue >-----#
    NameValue = SEQ(name='NameValue', mode=MODE_TYPE)
    _NameValue_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NameValue_value = STR_VIS(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    NameValue._cont = ASN1Dict([
        ('name', _NameValue_name),
        ('value', _NameValue_value),
        ])
    NameValue._ext = None
    
    #-----< MSSpectrum >-----#
    MSSpectrum = SEQ(name='MSSpectrum', mode=MODE_TYPE)
    _MSSpectrum_number = INT(name='number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSSpectrum_charge = SEQ_OF(name='charge', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MSSpectrum_charge__item_ = INT(name='_item_', mode=MODE_TYPE)
    _MSSpectrum_charge._cont = __MSSpectrum_charge__item_
    _MSSpectrum_precursormz = INT(name='precursormz', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSSpectrum_mz = SEQ_OF(name='mz', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MSSpectrum_mz__item_ = INT(name='_item_', mode=MODE_TYPE)
    _MSSpectrum_mz._cont = __MSSpectrum_mz__item_
    _MSSpectrum_abundance = SEQ_OF(name='abundance', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MSSpectrum_abundance__item_ = INT(name='_item_', mode=MODE_TYPE)
    _MSSpectrum_abundance._cont = __MSSpectrum_abundance__item_
    _MSSpectrum_iscale = REAL(name='iscale', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _MSSpectrum_ids = SEQ_OF(name='ids', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MSSpectrum_ids__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _MSSpectrum_ids._cont = __MSSpectrum_ids__item_
    _MSSpectrum_namevalue = SEQ_OF(name='namevalue', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MSSpectrum_namevalue__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'NameValue')))
    _MSSpectrum_namevalue._cont = __MSSpectrum_namevalue__item_
    MSSpectrum._cont = ASN1Dict([
        ('number', _MSSpectrum_number),
        ('charge', _MSSpectrum_charge),
        ('precursormz', _MSSpectrum_precursormz),
        ('mz', _MSSpectrum_mz),
        ('abundance', _MSSpectrum_abundance),
        ('iscale', _MSSpectrum_iscale),
        ('ids', _MSSpectrum_ids),
        ('namevalue', _MSSpectrum_namevalue),
        ])
    MSSpectrum._ext = None
    
    #-----< MSSpectrumset >-----#
    MSSpectrumset = SEQ_OF(name='MSSpectrumset', mode=MODE_TYPE)
    _MSSpectrumset__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'MSSpectrum')))
    MSSpectrumset._cont = _MSSpectrumset__item_
    
    #-----< MSEnzymes >-----#
    MSEnzymes = INT(name='MSEnzymes', mode=MODE_TYPE)
    MSEnzymes._cont = ASN1Dict([('trypsin', 0), ('argc', 1), ('cnbr', 2), ('chymotrypsin', 3), ('formicacid', 4), ('lysc', 5), ('lysc-p', 6), ('pepsin-a', 7), ('tryp-cnbr', 8), ('tryp-chymo', 9), ('trypsin-p', 10), ('whole-protein', 11), ('aspn', 12), ('gluc', 13), ('aspngluc', 14), ('top-down', 15), ('semi-tryptic', 16), ('no-enzyme', 17), ('chymotrypsin-p', 18), ('aspn-de', 19), ('gluc-de', 20), ('lysn', 21), ('thermolysin-p', 22), ('semi-chymotrypsin', 23), ('semi-gluc', 24), ('max', 25), ('none', 255)])
    
    #-----< MSMod >-----#
    MSMod = INT(name='MSMod', mode=MODE_TYPE)
    MSMod._cont = ASN1Dict([('methylk', 0), ('oxym', 1), ('carboxymethylc', 2), ('carbamidomethylc', 3), ('deamidationkq', 4), ('propionamidec', 5), ('phosphorylations', 6), ('phosphorylationt', 7), ('phosphorylationy', 8), ('ntermmcleave', 9), ('ntermacetyl', 10), ('ntermmethyl', 11), ('ntermtrimethyl', 12), ('methythiold', 13), ('methylq', 14), ('trimethylk', 15), ('methyld', 16), ('methyle', 17), ('ctermpepmethyl', 18), ('trideuteromethyld', 19), ('trideuteromethyle', 20), ('ctermpeptrideuteromethyl', 21), ('nformylmet', 22), ('twoamino3oxobutanoicacid', 23), ('acetylk', 24), ('ctermamide', 25), ('bmethylthiold', 26), ('carbamidomethylk', 27), ('carbamidometylh', 28), ('carbamidomethyld', 29), ('carbamidomethyle', 30), ('carbamylk', 31), ('ntermcarbamyl', 32), ('citrullinationr', 33), ('cysteicacidc', 34), ('diiodinationy', 35), ('dimethylk', 36), ('dimethylr', 37), ('ntermpepdimethyl', 38), ('dihydroxyf', 39), ('thioacetylk', 40), ('ntermpeptioacetyl', 41), ('farnesylationc', 42), ('formylk', 43), ('ntermpepformyl', 44), ('formylkynureninw', 45), ('phef', 46), ('gammacarboxyld', 47), ('gammacarboxyle', 48), ('geranylgeranylc', 49), ('ntermpepglucuronylg', 50), ('glutathionec', 51), ('glyglyk', 52), ('guanidinationk', 53), ('his2asnh', 54), ('his2asph', 55), ('ctermpephsem', 56), ('ctermpephselactm', 57), ('hydroxykynureninw', 58), ('hydroxylationd', 59), ('hydroxylationk', 60), ('hydroxylationn', 61), ('hydroxylationp', 62), ('hydroxylationf', 63), ('hydroxylationy', 64), ('iodinationy', 65), ('kynureninw', 66), ('lipoylk', 67), ('ctermpepmeester', 68), ('meesterd', 69), ('meestere', 70), ('meesters', 71), ('meestery', 72), ('methylc', 73), ('methylh', 74), ('methyln', 75), ('ntermpepmethyl', 76), ('methylr', 77), ('ntermpepmyristoyeylationg', 78), ('ntermpepmyristoyl4hg', 79), ('ntermpepmyristoylationg', 80), ('myristoylationk', 81), ('ntermformyl', 82), ('nemc', 83), ('nipcam', 84), ('nitrow', 85), ('nitroy', 86), ('ctermpepo18', 87), ('ctermpepdio18', 88), ('oxyh', 89), ('oxyw', 90), ('ppantetheines', 91), ('palmitoylationc', 92), ('palmitoylationk', 93), ('palmitoylations', 94), ('palmitoylationt', 95), ('phospholosss', 96), ('phospholosst', 97), ('phospholossy', 98), ('phosphoneutrallossc', 99), ('phosphoneutrallossd', 100), ('phosphoneutrallossh', 101), ('propionylk', 102), ('ntermpeppropionyl', 103), ('propionylheavyk', 104), ('ntermpeppropionylheavy', 105), ('pyridylk', 106), ('ntermpeppyridyl', 107), ('ntermpeppyrocmc', 108), ('ntermpeppyroe', 109), ('ntermpeppyroq', 110), ('pyroglutamicp', 111), ('spyridylethylc', 112), ('semetm', 113), ('sulfationy', 114), ('suphonem', 115), ('triiodinationy', 116), ('trimethylationr', 117), ('ntermpeptripalmitatec', 118), ('usermod1', 119), ('usermod2', 120), ('usermod3', 121), ('usermod4', 122), ('usermod5', 123), ('usermod6', 124), ('usermod7', 125), ('usermod8', 126), ('usermod9', 127), ('usermod10', 128), ('icatlight', 129), ('icatheavy', 130), ('camthiopropanoylk', 131), ('phosphoneutrallosss', 132), ('phosphoneutrallosst', 133), ('phosphoetdlosss', 134), ('phosphoetdlosst', 135), ('arg-13c6', 136), ('arg-13c6-15n4', 137), ('lys-13c6', 138), ('oxy18', 139), ('beta-elim-s', 140), ('beta-elim-t', 141), ('usermod11', 142), ('usermod12', 143), ('usermod13', 144), ('usermod14', 145), ('usermod15', 146), ('usermod16', 147), ('usermod17', 148), ('usermod18', 149), ('usermod19', 150), ('usermod20', 151), ('usermod21', 152), ('usermod22', 153), ('usermod23', 154), ('usermod24', 155), ('usermod25', 156), ('usermod26', 157), ('usermod27', 158), ('usermod28', 159), ('usermod29', 160), ('usermod30', 161), ('sulfinicacid', 162), ('arg2orn', 163), ('dehydro', 164), ('carboxykynurenin', 165), ('sumoylation', 166), ('iTRAQ114nterm', 167), ('iTRAQ114K', 168), ('iTRAQ114Y', 169), ('iTRAQ115nterm', 170), ('iTRAQ115K', 171), ('iTRAQ115Y', 172), ('iTRAQ116nterm', 173), ('iTRAQ116K', 174), ('iTRAQ116Y', 175), ('iTRAQ117nterm', 176), ('iTRAQ117K', 177), ('iTRAQ117Y', 178), ('mmts', 179), ('lys-2H4', 180), ('lys-13C615N2', 181), ('hexNAcN', 182), ('dHexHexNAcN', 183), ('hexNAcS', 184), ('hexNAcT', 185), ('mod186', 186), ('mod187', 187), ('mod188', 188), ('mod189', 189), ('mod190', 190), ('mod191', 191), ('mod192', 192), ('mod193', 193), ('mod194', 194), ('mod195', 195), ('mod196', 196), ('mod197', 197), ('mod198', 198), ('mod199', 199), ('mod200', 200), ('mod201', 201), ('mod202', 202), ('mod203', 203), ('mod204', 204), ('mod205', 205), ('mod206', 206), ('mod207', 207), ('mod208', 208), ('mod209', 209), ('mod210', 210), ('mod211', 211), ('mod212', 212), ('mod213', 213), ('mod214', 214), ('mod215', 215), ('mod216', 216), ('mod217', 217), ('mod218', 218), ('mod219', 219), ('mod220', 220), ('mod221', 221), ('mod222', 222), ('mod223', 223), ('mod224', 224), ('mod225', 225), ('mod226', 226), ('mod227', 227), ('mod228', 228), ('mod229', 229), ('mod230', 230), ('max', 231), ('unknown', 9999), ('none', 10000)])
    
    #-----< MSModType >-----#
    MSModType = INT(name='MSModType', mode=MODE_TYPE)
    MSModType._cont = ASN1Dict([('modaa', 0), ('modn', 1), ('modnaa', 2), ('modc', 3), ('modcaa', 4), ('modnp', 5), ('modnpaa', 6), ('modcp', 7), ('modcpaa', 8), ('modmax', 9)])
    
    #-----< MSMassSet >-----#
    MSMassSet = SEQ(name='MSMassSet', mode=MODE_TYPE)
    _MSMassSet_monomass = REAL(name='monomass', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _MSMassSet_averagemass = REAL(name='averagemass', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _MSMassSet_n15mass = REAL(name='n15mass', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    MSMassSet._cont = ASN1Dict([
        ('monomass', _MSMassSet_monomass),
        ('averagemass', _MSMassSet_averagemass),
        ('n15mass', _MSMassSet_n15mass),
        ])
    MSMassSet._ext = None
    
    #-----< MSModSpec >-----#
    MSModSpec = SEQ(name='MSModSpec', mode=MODE_TYPE)
    _MSModSpec_mod = INT(name='mod', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSMod')))
    _MSModSpec_type = INT(name='type', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSModType')))
    _MSModSpec_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSModSpec_monomass = REAL(name='monomass', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _MSModSpec_averagemass = REAL(name='averagemass', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _MSModSpec_n15mass = REAL(name='n15mass', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _MSModSpec_residues = SEQ_OF(name='residues', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MSModSpec_residues__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _MSModSpec_residues._cont = __MSModSpec_residues__item_
    _MSModSpec_neutralloss = SEQ(name='neutralloss', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSMassSet')), opt=True)
    _MSModSpec_unimod = INT(name='unimod', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSModSpec_psi_ms = STR_VIS(name='psi-ms', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    MSModSpec._cont = ASN1Dict([
        ('mod', _MSModSpec_mod),
        ('type', _MSModSpec_type),
        ('name', _MSModSpec_name),
        ('monomass', _MSModSpec_monomass),
        ('averagemass', _MSModSpec_averagemass),
        ('n15mass', _MSModSpec_n15mass),
        ('residues', _MSModSpec_residues),
        ('neutralloss', _MSModSpec_neutralloss),
        ('unimod', _MSModSpec_unimod),
        ('psi-ms', _MSModSpec_psi_ms),
        ])
    MSModSpec._ext = None
    
    #-----< MSModSpecSet >-----#
    MSModSpecSet = SEQ_OF(name='MSModSpecSet', mode=MODE_TYPE)
    _MSModSpecSet__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'MSModSpec')))
    MSModSpecSet._cont = _MSModSpecSet__item_
    
    #-----< MSCalcPlusOne >-----#
    MSCalcPlusOne = INT(name='MSCalcPlusOne', mode=MODE_TYPE)
    MSCalcPlusOne._cont = ASN1Dict([('dontcalc', 0), ('calc', 1)])
    
    #-----< MSCalcCharge >-----#
    MSCalcCharge = INT(name='MSCalcCharge', mode=MODE_TYPE)
    MSCalcCharge._cont = ASN1Dict([('calculate', 0), ('usefile', 1), ('userange', 2)])
    
    #-----< MSChargeHandle >-----#
    MSChargeHandle = SEQ(name='MSChargeHandle', mode=MODE_TYPE)
    _MSChargeHandle_calcplusone = INT(name='calcplusone', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSCalcPlusOne')), default=1)
    _MSChargeHandle_calccharge = INT(name='calccharge', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSCalcCharge')), default=2)
    _MSChargeHandle_mincharge = INT(name='mincharge', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=2)
    _MSChargeHandle_maxcharge = INT(name='maxcharge', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=3)
    _MSChargeHandle_considermult = INT(name='considermult', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=3)
    _MSChargeHandle_plusone = REAL(name='plusone', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _MSChargeHandle_maxproductcharge = INT(name='maxproductcharge', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSChargeHandle_prodlesspre = BOOL(name='prodlesspre', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSChargeHandle_negative = INT(name='negative', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=1)
    MSChargeHandle._cont = ASN1Dict([
        ('calcplusone', _MSChargeHandle_calcplusone),
        ('calccharge', _MSChargeHandle_calccharge),
        ('mincharge', _MSChargeHandle_mincharge),
        ('maxcharge', _MSChargeHandle_maxcharge),
        ('considermult', _MSChargeHandle_considermult),
        ('plusone', _MSChargeHandle_plusone),
        ('maxproductcharge', _MSChargeHandle_maxproductcharge),
        ('prodlesspre', _MSChargeHandle_prodlesspre),
        ('negative', _MSChargeHandle_negative),
        ])
    MSChargeHandle._ext = None
    
    #-----< MSSearchType >-----#
    MSSearchType = INT(name='MSSearchType', mode=MODE_TYPE)
    MSSearchType._cont = ASN1Dict([('monoisotopic', 0), ('average', 1), ('monon15', 2), ('exact', 3), ('multiisotope', 4), ('max', 5)])
    
    #-----< MSZdependence >-----#
    MSZdependence = INT(name='MSZdependence', mode=MODE_TYPE)
    MSZdependence._cont = ASN1Dict([('independent', 0), ('linearwithz', 1), ('max', 2)])
    
    #-----< MSIterativeSettings >-----#
    MSIterativeSettings = SEQ(name='MSIterativeSettings', mode=MODE_TYPE)
    _MSIterativeSettings_researchthresh = REAL(name='researchthresh', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _MSIterativeSettings_subsetthresh = REAL(name='subsetthresh', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _MSIterativeSettings_replacethresh = REAL(name='replacethresh', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    MSIterativeSettings._cont = ASN1Dict([
        ('researchthresh', _MSIterativeSettings_researchthresh),
        ('subsetthresh', _MSIterativeSettings_subsetthresh),
        ('replacethresh', _MSIterativeSettings_replacethresh),
        ])
    MSIterativeSettings._ext = None
    
    #-----< MSLibrarySettings >-----#
    MSLibrarySettings = SEQ(name='MSLibrarySettings', mode=MODE_TYPE)
    _MSLibrarySettings_libnames = SEQ_OF(name='libnames', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MSLibrarySettings_libnames__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _MSLibrarySettings_libnames._cont = __MSLibrarySettings_libnames__item_
    _MSLibrarySettings_presearch = BOOL(name='presearch', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSLibrarySettings_useomssascore = BOOL(name='useomssascore', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSLibrarySettings_usereplicatescore = BOOL(name='usereplicatescore', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSLibrarySettings_qtofscore = BOOL(name='qtofscore', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    MSLibrarySettings._cont = ASN1Dict([
        ('libnames', _MSLibrarySettings_libnames),
        ('presearch', _MSLibrarySettings_presearch),
        ('useomssascore', _MSLibrarySettings_useomssascore),
        ('usereplicatescore', _MSLibrarySettings_usereplicatescore),
        ('qtofscore', _MSLibrarySettings_qtofscore),
        ])
    MSLibrarySettings._ext = None
    
    #-----< MSSearchSettings >-----#
    MSSearchSettings = SEQ(name='MSSearchSettings', mode=MODE_TYPE)
    _MSSearchSettings_precursorsearchtype = INT(name='precursorsearchtype', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSSearchType')))
    _MSSearchSettings_productsearchtype = INT(name='productsearchtype', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSSearchType')))
    _MSSearchSettings_ionstosearch = SEQ_OF(name='ionstosearch', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MSSearchSettings_ionstosearch__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'MSIonType')))
    _MSSearchSettings_ionstosearch._cont = __MSSearchSettings_ionstosearch__item_
    _MSSearchSettings_peptol = REAL(name='peptol', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _MSSearchSettings_msmstol = REAL(name='msmstol', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _MSSearchSettings_zdep = INT(name='zdep', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSZdependence')))
    _MSSearchSettings_cutoff = REAL(name='cutoff', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _MSSearchSettings_cutlo = REAL(name='cutlo', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _MSSearchSettings_cuthi = REAL(name='cuthi', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _MSSearchSettings_cutinc = REAL(name='cutinc', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _MSSearchSettings_singlewin = INT(name='singlewin', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSSearchSettings_doublewin = INT(name='doublewin', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSSearchSettings_singlenum = INT(name='singlenum', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSSearchSettings_doublenum = INT(name='doublenum', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSSearchSettings_fixed = SEQ_OF(name='fixed', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MSSearchSettings_fixed__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'MSMod')))
    _MSSearchSettings_fixed._cont = __MSSearchSettings_fixed__item_
    _MSSearchSettings_variable = SEQ_OF(name='variable', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MSSearchSettings_variable__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'MSMod')))
    _MSSearchSettings_variable._cont = __MSSearchSettings_variable__item_
    _MSSearchSettings_enzyme = INT(name='enzyme', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSEnzymes')))
    _MSSearchSettings_missedcleave = INT(name='missedcleave', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSSearchSettings_hitlistlen = INT(name='hitlistlen', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=25)
    _MSSearchSettings_db = STR_VIS(name='db', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSSearchSettings_tophitnum = INT(name='tophitnum', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSSearchSettings_minhit = INT(name='minhit', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=2)
    _MSSearchSettings_minspectra = INT(name='minspectra', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=4)
    _MSSearchSettings_scale = INT(name='scale', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=100)
    _MSSearchSettings_maxmods = INT(name='maxmods', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=64)
    _MSSearchSettings_taxids = SEQ_OF(name='taxids', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MSSearchSettings_taxids__item_ = INT(name='_item_', mode=MODE_TYPE)
    _MSSearchSettings_taxids._cont = __MSSearchSettings_taxids__item_
    _MSSearchSettings_chargehandling = SEQ(name='chargehandling', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSChargeHandle')), opt=True)
    _MSSearchSettings_usermods = SEQ_OF(name='usermods', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSModSpecSet')), opt=True)
    _MSSearchSettings_pseudocount = INT(name='pseudocount', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=1)
    _MSSearchSettings_searchb1 = INT(name='searchb1', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _MSSearchSettings_searchctermproduct = INT(name='searchctermproduct', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _MSSearchSettings_maxproductions = INT(name='maxproductions', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _MSSearchSettings_minnoenzyme = INT(name='minnoenzyme', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=4)
    _MSSearchSettings_maxnoenzyme = INT(name='maxnoenzyme', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _MSSearchSettings_exactmass = REAL(name='exactmass', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    _MSSearchSettings_settingid = INT(name='settingid', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSSearchSettings_iterativesettings = SEQ(name='iterativesettings', mode=MODE_TYPE, tag=(36, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSIterativeSettings')), opt=True)
    _MSSearchSettings_precursorcull = INT(name='precursorcull', mode=MODE_TYPE, tag=(37, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSSearchSettings_infiles = SEQ_OF(name='infiles', mode=MODE_TYPE, tag=(38, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MSSearchSettings_infiles__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'MSInFile')))
    _MSSearchSettings_infiles._cont = __MSSearchSettings_infiles__item_
    _MSSearchSettings_outfiles = SEQ_OF(name='outfiles', mode=MODE_TYPE, tag=(39, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MSSearchSettings_outfiles__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'MSOutFile')))
    _MSSearchSettings_outfiles._cont = __MSSearchSettings_outfiles__item_
    _MSSearchSettings_nocorrelationscore = INT(name='nocorrelationscore', mode=MODE_TYPE, tag=(40, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSSearchSettings_probfollowingion = REAL(name='probfollowingion', mode=MODE_TYPE, tag=(41, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    _MSSearchSettings_nmethionine = BOOL(name='nmethionine', mode=MODE_TYPE, tag=(42, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSSearchSettings_automassadjust = REAL(name='automassadjust', mode=MODE_TYPE, tag=(43, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    _MSSearchSettings_lomasscutoff = REAL(name='lomasscutoff', mode=MODE_TYPE, tag=(44, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    _MSSearchSettings_libsearchsettings = SEQ(name='libsearchsettings', mode=MODE_TYPE, tag=(45, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSLibrarySettings')), opt=True)
    _MSSearchSettings_noprolineions = SEQ_OF(name='noprolineions', mode=MODE_TYPE, tag=(46, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MSSearchSettings_noprolineions__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'MSIonType')))
    _MSSearchSettings_noprolineions._cont = __MSSearchSettings_noprolineions__item_
    _MSSearchSettings_reversesearch = BOOL(name='reversesearch', mode=MODE_TYPE, tag=(47, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSSearchSettings_othersettings = SEQ_OF(name='othersettings', mode=MODE_TYPE, tag=(48, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MSSearchSettings_othersettings__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'NameValue')))
    _MSSearchSettings_othersettings._cont = __MSSearchSettings_othersettings__item_
    _MSSearchSettings_numisotopes = INT(name='numisotopes', mode=MODE_TYPE, tag=(49, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSSearchSettings_pepppm = BOOL(name='pepppm', mode=MODE_TYPE, tag=(50, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSSearchSettings_msmsppm = BOOL(name='msmsppm', mode=MODE_TYPE, tag=(51, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSSearchSettings_reportedhitcount = INT(name='reportedhitcount', mode=MODE_TYPE, tag=(52, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    MSSearchSettings._cont = ASN1Dict([
        ('precursorsearchtype', _MSSearchSettings_precursorsearchtype),
        ('productsearchtype', _MSSearchSettings_productsearchtype),
        ('ionstosearch', _MSSearchSettings_ionstosearch),
        ('peptol', _MSSearchSettings_peptol),
        ('msmstol', _MSSearchSettings_msmstol),
        ('zdep', _MSSearchSettings_zdep),
        ('cutoff', _MSSearchSettings_cutoff),
        ('cutlo', _MSSearchSettings_cutlo),
        ('cuthi', _MSSearchSettings_cuthi),
        ('cutinc', _MSSearchSettings_cutinc),
        ('singlewin', _MSSearchSettings_singlewin),
        ('doublewin', _MSSearchSettings_doublewin),
        ('singlenum', _MSSearchSettings_singlenum),
        ('doublenum', _MSSearchSettings_doublenum),
        ('fixed', _MSSearchSettings_fixed),
        ('variable', _MSSearchSettings_variable),
        ('enzyme', _MSSearchSettings_enzyme),
        ('missedcleave', _MSSearchSettings_missedcleave),
        ('hitlistlen', _MSSearchSettings_hitlistlen),
        ('db', _MSSearchSettings_db),
        ('tophitnum', _MSSearchSettings_tophitnum),
        ('minhit', _MSSearchSettings_minhit),
        ('minspectra', _MSSearchSettings_minspectra),
        ('scale', _MSSearchSettings_scale),
        ('maxmods', _MSSearchSettings_maxmods),
        ('taxids', _MSSearchSettings_taxids),
        ('chargehandling', _MSSearchSettings_chargehandling),
        ('usermods', _MSSearchSettings_usermods),
        ('pseudocount', _MSSearchSettings_pseudocount),
        ('searchb1', _MSSearchSettings_searchb1),
        ('searchctermproduct', _MSSearchSettings_searchctermproduct),
        ('maxproductions', _MSSearchSettings_maxproductions),
        ('minnoenzyme', _MSSearchSettings_minnoenzyme),
        ('maxnoenzyme', _MSSearchSettings_maxnoenzyme),
        ('exactmass', _MSSearchSettings_exactmass),
        ('settingid', _MSSearchSettings_settingid),
        ('iterativesettings', _MSSearchSettings_iterativesettings),
        ('precursorcull', _MSSearchSettings_precursorcull),
        ('infiles', _MSSearchSettings_infiles),
        ('outfiles', _MSSearchSettings_outfiles),
        ('nocorrelationscore', _MSSearchSettings_nocorrelationscore),
        ('probfollowingion', _MSSearchSettings_probfollowingion),
        ('nmethionine', _MSSearchSettings_nmethionine),
        ('automassadjust', _MSSearchSettings_automassadjust),
        ('lomasscutoff', _MSSearchSettings_lomasscutoff),
        ('libsearchsettings', _MSSearchSettings_libsearchsettings),
        ('noprolineions', _MSSearchSettings_noprolineions),
        ('reversesearch', _MSSearchSettings_reversesearch),
        ('othersettings', _MSSearchSettings_othersettings),
        ('numisotopes', _MSSearchSettings_numisotopes),
        ('pepppm', _MSSearchSettings_pepppm),
        ('msmsppm', _MSSearchSettings_msmsppm),
        ('reportedhitcount', _MSSearchSettings_reportedhitcount),
        ])
    MSSearchSettings._ext = None
    
    #-----< MSSerialDataFormat >-----#
    MSSerialDataFormat = INT(name='MSSerialDataFormat', mode=MODE_TYPE)
    MSSerialDataFormat._cont = ASN1Dict([('none', 0), ('asntext', 1), ('asnbinary', 2), ('xml', 3), ('csv', 4), ('pepxml', 5), ('xmlbz2', 6)])
    
    #-----< MSOutFile >-----#
    MSOutFile = SEQ(name='MSOutFile', mode=MODE_TYPE)
    _MSOutFile_outfile = STR_VIS(name='outfile', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSOutFile_outfiletype = INT(name='outfiletype', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSSerialDataFormat')))
    _MSOutFile_includerequest = BOOL(name='includerequest', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    MSOutFile._cont = ASN1Dict([
        ('outfile', _MSOutFile_outfile),
        ('outfiletype', _MSOutFile_outfiletype),
        ('includerequest', _MSOutFile_includerequest),
        ])
    MSOutFile._ext = None
    
    #-----< MSSpectrumFileType >-----#
    MSSpectrumFileType = INT(name='MSSpectrumFileType', mode=MODE_TYPE)
    MSSpectrumFileType._cont = ASN1Dict([('dta', 0), ('dtablank', 1), ('dtaxml', 2), ('asc', 3), ('pkl', 4), ('pks', 5), ('sciex', 6), ('mgf', 7), ('unknown', 8), ('oms', 9), ('omx', 10), ('xml', 11), ('omxbz2', 12)])
    
    #-----< MSInFile >-----#
    MSInFile = SEQ(name='MSInFile', mode=MODE_TYPE)
    _MSInFile_infile = STR_VIS(name='infile', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSInFile_infiletype = INT(name='infiletype', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSSpectrumFileType')))
    MSInFile._cont = ASN1Dict([
        ('infile', _MSInFile_infile),
        ('infiletype', _MSInFile_infiletype),
        ])
    MSInFile._ext = None
    
    #-----< MSSearchSettingsSet >-----#
    MSSearchSettingsSet = SEQ_OF(name='MSSearchSettingsSet', mode=MODE_TYPE)
    _MSSearchSettingsSet__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'MSSearchSettings')))
    MSSearchSettingsSet._cont = _MSSearchSettingsSet__item_
    
    #-----< MSRequest >-----#
    MSRequest = SEQ(name='MSRequest', mode=MODE_TYPE)
    _MSRequest_spectra = SEQ_OF(name='spectra', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSSpectrumset')))
    _MSRequest_settings = SEQ(name='settings', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSSearchSettings')))
    _MSRequest_rid = STR_VIS(name='rid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSRequest_moresettings = SEQ_OF(name='moresettings', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSSearchSettingsSet')), opt=True)
    _MSRequest_modset = SEQ_OF(name='modset', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSModSpecSet')), opt=True)
    MSRequest._cont = ASN1Dict([
        ('spectra', _MSRequest_spectra),
        ('settings', _MSRequest_settings),
        ('rid', _MSRequest_rid),
        ('moresettings', _MSRequest_moresettings),
        ('modset', _MSRequest_modset),
        ])
    MSRequest._ext = None
    
    #-----< MSIonType >-----#
    MSIonType = INT(name='MSIonType', mode=MODE_TYPE)
    MSIonType._cont = ASN1Dict([('a', 0), ('b', 1), ('c', 2), ('x', 3), ('y', 4), ('z', 5), ('parent', 6), ('internal', 7), ('immonium', 8), ('unknown', 9), ('adot', 10), ('x-CO2', 11), ('adot-CO2', 12), ('max', 13)])
    
    #-----< MSIonNeutralLoss >-----#
    MSIonNeutralLoss = INT(name='MSIonNeutralLoss', mode=MODE_TYPE)
    MSIonNeutralLoss._cont = ASN1Dict([('water', 0), ('ammonia', 1)])
    
    #-----< MSIonIsotopicType >-----#
    MSIonIsotopicType = INT(name='MSIonIsotopicType', mode=MODE_TYPE)
    MSIonIsotopicType._cont = ASN1Dict([('monoisotopic', 0), ('c13', 1), ('c13two', 2), ('c13three', 3), ('c13four', 4)])
    
    #-----< MSImmonium >-----#
    MSImmonium = SEQ(name='MSImmonium', mode=MODE_TYPE)
    _MSImmonium_parent = STR_VIS(name='parent', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSImmonium_product = STR_VIS(name='product', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    MSImmonium._cont = ASN1Dict([
        ('parent', _MSImmonium_parent),
        ('product', _MSImmonium_product),
        ])
    MSImmonium._ext = None
    
    #-----< MSIon >-----#
    MSIon = SEQ(name='MSIon', mode=MODE_TYPE)
    _MSIon_neutralloss = INT(name='neutralloss', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSIonNeutralLoss')), opt=True)
    _MSIon_isotope = INT(name='isotope', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSIonIsotopicType')), opt=True)
    _MSIon_internal = STR_VIS(name='internal', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSIon_immonium = SEQ(name='immonium', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSImmonium')), opt=True)
    MSIon._cont = ASN1Dict([
        ('neutralloss', _MSIon_neutralloss),
        ('isotope', _MSIon_isotope),
        ('internal', _MSIon_internal),
        ('immonium', _MSIon_immonium),
        ])
    MSIon._ext = None
    
    #-----< MSIonAnnot >-----#
    MSIonAnnot = SEQ(name='MSIonAnnot', mode=MODE_TYPE)
    _MSIonAnnot_suspect = BOOL(name='suspect', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSIonAnnot_massdiff = REAL(name='massdiff', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    _MSIonAnnot_missingisotope = BOOL(name='missingisotope', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    MSIonAnnot._cont = ASN1Dict([
        ('suspect', _MSIonAnnot_suspect),
        ('massdiff', _MSIonAnnot_massdiff),
        ('missingisotope', _MSIonAnnot_missingisotope),
        ])
    MSIonAnnot._ext = None
    
    #-----< MSMZHit >-----#
    MSMZHit = SEQ(name='MSMZHit', mode=MODE_TYPE)
    _MSMZHit_ion = INT(name='ion', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSIonType')))
    _MSMZHit_charge = INT(name='charge', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSMZHit_number = INT(name='number', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSMZHit_mz = INT(name='mz', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSMZHit_index = INT(name='index', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSMZHit_moreion = SEQ(name='moreion', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSIon')), opt=True)
    _MSMZHit_annotation = SEQ(name='annotation', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSIonAnnot')), opt=True)
    MSMZHit._cont = ASN1Dict([
        ('ion', _MSMZHit_ion),
        ('charge', _MSMZHit_charge),
        ('number', _MSMZHit_number),
        ('mz', _MSMZHit_mz),
        ('index', _MSMZHit_index),
        ('moreion', _MSMZHit_moreion),
        ('annotation', _MSMZHit_annotation),
        ])
    MSMZHit._ext = None
    
    #-----< MSPepHit >-----#
    MSPepHit = SEQ(name='MSPepHit', mode=MODE_TYPE)
    _MSPepHit_start = INT(name='start', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSPepHit_stop = INT(name='stop', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSPepHit_gi = INT(name='gi', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSPepHit_accession = STR_VIS(name='accession', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSPepHit_defline = STR_VIS(name='defline', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSPepHit_protlength = INT(name='protlength', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSPepHit_oid = INT(name='oid', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSPepHit_reversed = BOOL(name='reversed', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSPepHit_pepstart = STR_VIS(name='pepstart', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSPepHit_pepstop = STR_VIS(name='pepstop', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    MSPepHit._cont = ASN1Dict([
        ('start', _MSPepHit_start),
        ('stop', _MSPepHit_stop),
        ('gi', _MSPepHit_gi),
        ('accession', _MSPepHit_accession),
        ('defline', _MSPepHit_defline),
        ('protlength', _MSPepHit_protlength),
        ('oid', _MSPepHit_oid),
        ('reversed', _MSPepHit_reversed),
        ('pepstart', _MSPepHit_pepstart),
        ('pepstop', _MSPepHit_pepstop),
        ])
    MSPepHit._ext = None
    
    #-----< MSModHit >-----#
    MSModHit = SEQ(name='MSModHit', mode=MODE_TYPE)
    _MSModHit_site = INT(name='site', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSModHit_modtype = INT(name='modtype', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSMod')))
    MSModHit._cont = ASN1Dict([
        ('site', _MSModHit_site),
        ('modtype', _MSModHit_modtype),
        ])
    MSModHit._ext = None
    
    #-----< MSScoreSet >-----#
    MSScoreSet = SEQ(name='MSScoreSet', mode=MODE_TYPE)
    _MSScoreSet_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSScoreSet_value = REAL(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    MSScoreSet._cont = ASN1Dict([
        ('name', _MSScoreSet_name),
        ('value', _MSScoreSet_value),
        ])
    MSScoreSet._ext = None
    
    #-----< MSHits >-----#
    MSHits = SEQ(name='MSHits', mode=MODE_TYPE)
    _MSHits_evalue = REAL(name='evalue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _MSHits_pvalue = REAL(name='pvalue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _MSHits_charge = INT(name='charge', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSHits_pephits = SEQ_OF(name='pephits', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MSHits_pephits__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'MSPepHit')))
    _MSHits_pephits._cont = __MSHits_pephits__item_
    _MSHits_mzhits = SEQ_OF(name='mzhits', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MSHits_mzhits__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'MSMZHit')))
    _MSHits_mzhits._cont = __MSHits_mzhits__item_
    _MSHits_pepstring = STR_VIS(name='pepstring', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSHits_mass = INT(name='mass', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSHits_mods = SEQ_OF(name='mods', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MSHits_mods__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'MSModHit')))
    _MSHits_mods._cont = __MSHits_mods__item_
    _MSHits_pepstart = STR_VIS(name='pepstart', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSHits_pepstop = STR_VIS(name='pepstop', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSHits_protlength = INT(name='protlength', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSHits_theomass = INT(name='theomass', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSHits_oid = INT(name='oid', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSHits_scores = SEQ_OF(name='scores', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MSHits_scores__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'MSScoreSet')))
    _MSHits_scores._cont = __MSHits_scores__item_
    _MSHits_libaccession = STR_VIS(name='libaccession', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    MSHits._cont = ASN1Dict([
        ('evalue', _MSHits_evalue),
        ('pvalue', _MSHits_pvalue),
        ('charge', _MSHits_charge),
        ('pephits', _MSHits_pephits),
        ('mzhits', _MSHits_mzhits),
        ('pepstring', _MSHits_pepstring),
        ('mass', _MSHits_mass),
        ('mods', _MSHits_mods),
        ('pepstart', _MSHits_pepstart),
        ('pepstop', _MSHits_pepstop),
        ('protlength', _MSHits_protlength),
        ('theomass', _MSHits_theomass),
        ('oid', _MSHits_oid),
        ('scores', _MSHits_scores),
        ('libaccession', _MSHits_libaccession),
        ])
    MSHits._ext = None
    
    #-----< MSHitError >-----#
    MSHitError = INT(name='MSHitError', mode=MODE_TYPE)
    MSHitError._cont = ASN1Dict([('none', 0), ('generalerr', 1), ('unable2read', 2), ('notenuffpeaks', 3)])
    
    #-----< MSUserAnnot >-----#
    MSUserAnnot = INT(name='MSUserAnnot', mode=MODE_TYPE)
    MSUserAnnot._cont = ASN1Dict([('none', 0), ('delete', 1), ('flag', 2)])
    
    #-----< MSHitSet >-----#
    MSHitSet = SEQ(name='MSHitSet', mode=MODE_TYPE)
    _MSHitSet_number = INT(name='number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSHitSet_error = INT(name='error', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSHitError')), opt=True)
    _MSHitSet_hits = SEQ_OF(name='hits', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MSHitSet_hits__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'MSHits')))
    _MSHitSet_hits._cont = __MSHitSet_hits__item_
    _MSHitSet_ids = SEQ_OF(name='ids', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MSHitSet_ids__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _MSHitSet_ids._cont = __MSHitSet_ids__item_
    _MSHitSet_namevalue = SEQ_OF(name='namevalue', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MSHitSet_namevalue__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'NameValue')))
    _MSHitSet_namevalue._cont = __MSHitSet_namevalue__item_
    _MSHitSet_settingid = INT(name='settingid', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSHitSet_userannotation = INT(name='userannotation', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSUserAnnot')), opt=True)
    MSHitSet._cont = ASN1Dict([
        ('number', _MSHitSet_number),
        ('error', _MSHitSet_error),
        ('hits', _MSHitSet_hits),
        ('ids', _MSHitSet_ids),
        ('namevalue', _MSHitSet_namevalue),
        ('settingid', _MSHitSet_settingid),
        ('userannotation', _MSHitSet_userannotation),
        ])
    MSHitSet._ext = None
    
    #-----< MSResponseError >-----#
    MSResponseError = INT(name='MSResponseError', mode=MODE_TYPE)
    MSResponseError._cont = ASN1Dict([('none', 0), ('generalerr', 1), ('noblastdb', 2), ('noinput', 3)])
    
    #-----< MSBioseq >-----#
    MSBioseq = SEQ(name='MSBioseq', mode=MODE_TYPE)
    _MSBioseq_oid = INT(name='oid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MSBioseq_seq = SEQ(name='seq', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Bioseq')))
    MSBioseq._cont = ASN1Dict([
        ('oid', _MSBioseq_oid),
        ('seq', _MSBioseq_seq),
        ])
    MSBioseq._ext = None
    
    #-----< MSBioseqSet >-----#
    MSBioseqSet = SEQ_OF(name='MSBioseqSet', mode=MODE_TYPE)
    _MSBioseqSet__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'MSBioseq')))
    MSBioseqSet._cont = _MSBioseqSet__item_
    
    #-----< MSResponse >-----#
    MSResponse = SEQ(name='MSResponse', mode=MODE_TYPE)
    _MSResponse_hitsets = SEQ_OF(name='hitsets', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MSResponse_hitsets__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'MSHitSet')))
    _MSResponse_hitsets._cont = __MSResponse_hitsets__item_
    _MSResponse_scale = INT(name='scale', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=100)
    _MSResponse_rid = STR_VIS(name='rid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSResponse_error = INT(name='error', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSResponseError')), opt=True)
    _MSResponse_version = STR_VIS(name='version', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSResponse_email = STR_VIS(name='email', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSResponse_dbversion = INT(name='dbversion', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MSResponse_bioseqs = SEQ_OF(name='bioseqs', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('OMSSA', 'MSBioseqSet')), opt=True)
    MSResponse._cont = ASN1Dict([
        ('hitsets', _MSResponse_hitsets),
        ('scale', _MSResponse_scale),
        ('rid', _MSResponse_rid),
        ('error', _MSResponse_error),
        ('version', _MSResponse_version),
        ('email', _MSResponse_email),
        ('dbversion', _MSResponse_dbversion),
        ('bioseqs', _MSResponse_bioseqs),
        ])
    MSResponse._ext = None
    
    #-----< MSSearch >-----#
    MSSearch = SEQ(name='MSSearch', mode=MODE_TYPE)
    _MSSearch_request = SEQ_OF(name='request', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MSSearch_request__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'MSRequest')))
    _MSSearch_request._cont = __MSSearch_request__item_
    _MSSearch_response = SEQ_OF(name='response', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MSSearch_response__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('OMSSA', 'MSResponse')))
    _MSSearch_response._cont = __MSSearch_response__item_
    MSSearch._cont = ASN1Dict([
        ('request', _MSSearch_request),
        ('response', _MSSearch_response),
        ])
    MSSearch._ext = None
    
    _all_ = [
        _NameValue_name,
        _NameValue_value,
        NameValue,
        _MSSpectrum_number,
        __MSSpectrum_charge__item_,
        _MSSpectrum_charge,
        _MSSpectrum_precursormz,
        __MSSpectrum_mz__item_,
        _MSSpectrum_mz,
        __MSSpectrum_abundance__item_,
        _MSSpectrum_abundance,
        _MSSpectrum_iscale,
        __MSSpectrum_ids__item_,
        _MSSpectrum_ids,
        __MSSpectrum_namevalue__item_,
        _MSSpectrum_namevalue,
        MSSpectrum,
        _MSSpectrumset__item_,
        MSSpectrumset,
        MSEnzymes,
        MSMod,
        MSModType,
        _MSMassSet_monomass,
        _MSMassSet_averagemass,
        _MSMassSet_n15mass,
        MSMassSet,
        _MSModSpec_mod,
        _MSModSpec_type,
        _MSModSpec_name,
        _MSModSpec_monomass,
        _MSModSpec_averagemass,
        _MSModSpec_n15mass,
        __MSModSpec_residues__item_,
        _MSModSpec_residues,
        _MSModSpec_neutralloss,
        _MSModSpec_unimod,
        _MSModSpec_psi_ms,
        MSModSpec,
        _MSModSpecSet__item_,
        MSModSpecSet,
        MSCalcPlusOne,
        MSCalcCharge,
        _MSChargeHandle_calcplusone,
        _MSChargeHandle_calccharge,
        _MSChargeHandle_mincharge,
        _MSChargeHandle_maxcharge,
        _MSChargeHandle_considermult,
        _MSChargeHandle_plusone,
        _MSChargeHandle_maxproductcharge,
        _MSChargeHandle_prodlesspre,
        _MSChargeHandle_negative,
        MSChargeHandle,
        MSSearchType,
        MSZdependence,
        _MSIterativeSettings_researchthresh,
        _MSIterativeSettings_subsetthresh,
        _MSIterativeSettings_replacethresh,
        MSIterativeSettings,
        __MSLibrarySettings_libnames__item_,
        _MSLibrarySettings_libnames,
        _MSLibrarySettings_presearch,
        _MSLibrarySettings_useomssascore,
        _MSLibrarySettings_usereplicatescore,
        _MSLibrarySettings_qtofscore,
        MSLibrarySettings,
        _MSSearchSettings_precursorsearchtype,
        _MSSearchSettings_productsearchtype,
        __MSSearchSettings_ionstosearch__item_,
        _MSSearchSettings_ionstosearch,
        _MSSearchSettings_peptol,
        _MSSearchSettings_msmstol,
        _MSSearchSettings_zdep,
        _MSSearchSettings_cutoff,
        _MSSearchSettings_cutlo,
        _MSSearchSettings_cuthi,
        _MSSearchSettings_cutinc,
        _MSSearchSettings_singlewin,
        _MSSearchSettings_doublewin,
        _MSSearchSettings_singlenum,
        _MSSearchSettings_doublenum,
        __MSSearchSettings_fixed__item_,
        _MSSearchSettings_fixed,
        __MSSearchSettings_variable__item_,
        _MSSearchSettings_variable,
        _MSSearchSettings_enzyme,
        _MSSearchSettings_missedcleave,
        _MSSearchSettings_hitlistlen,
        _MSSearchSettings_db,
        _MSSearchSettings_tophitnum,
        _MSSearchSettings_minhit,
        _MSSearchSettings_minspectra,
        _MSSearchSettings_scale,
        _MSSearchSettings_maxmods,
        __MSSearchSettings_taxids__item_,
        _MSSearchSettings_taxids,
        _MSSearchSettings_chargehandling,
        _MSSearchSettings_usermods,
        _MSSearchSettings_pseudocount,
        _MSSearchSettings_searchb1,
        _MSSearchSettings_searchctermproduct,
        _MSSearchSettings_maxproductions,
        _MSSearchSettings_minnoenzyme,
        _MSSearchSettings_maxnoenzyme,
        _MSSearchSettings_exactmass,
        _MSSearchSettings_settingid,
        _MSSearchSettings_iterativesettings,
        _MSSearchSettings_precursorcull,
        __MSSearchSettings_infiles__item_,
        _MSSearchSettings_infiles,
        __MSSearchSettings_outfiles__item_,
        _MSSearchSettings_outfiles,
        _MSSearchSettings_nocorrelationscore,
        _MSSearchSettings_probfollowingion,
        _MSSearchSettings_nmethionine,
        _MSSearchSettings_automassadjust,
        _MSSearchSettings_lomasscutoff,
        _MSSearchSettings_libsearchsettings,
        __MSSearchSettings_noprolineions__item_,
        _MSSearchSettings_noprolineions,
        _MSSearchSettings_reversesearch,
        __MSSearchSettings_othersettings__item_,
        _MSSearchSettings_othersettings,
        _MSSearchSettings_numisotopes,
        _MSSearchSettings_pepppm,
        _MSSearchSettings_msmsppm,
        _MSSearchSettings_reportedhitcount,
        MSSearchSettings,
        MSSerialDataFormat,
        _MSOutFile_outfile,
        _MSOutFile_outfiletype,
        _MSOutFile_includerequest,
        MSOutFile,
        MSSpectrumFileType,
        _MSInFile_infile,
        _MSInFile_infiletype,
        MSInFile,
        _MSSearchSettingsSet__item_,
        MSSearchSettingsSet,
        _MSRequest_spectra,
        _MSRequest_settings,
        _MSRequest_rid,
        _MSRequest_moresettings,
        _MSRequest_modset,
        MSRequest,
        MSIonType,
        MSIonNeutralLoss,
        MSIonIsotopicType,
        _MSImmonium_parent,
        _MSImmonium_product,
        MSImmonium,
        _MSIon_neutralloss,
        _MSIon_isotope,
        _MSIon_internal,
        _MSIon_immonium,
        MSIon,
        _MSIonAnnot_suspect,
        _MSIonAnnot_massdiff,
        _MSIonAnnot_missingisotope,
        MSIonAnnot,
        _MSMZHit_ion,
        _MSMZHit_charge,
        _MSMZHit_number,
        _MSMZHit_mz,
        _MSMZHit_index,
        _MSMZHit_moreion,
        _MSMZHit_annotation,
        MSMZHit,
        _MSPepHit_start,
        _MSPepHit_stop,
        _MSPepHit_gi,
        _MSPepHit_accession,
        _MSPepHit_defline,
        _MSPepHit_protlength,
        _MSPepHit_oid,
        _MSPepHit_reversed,
        _MSPepHit_pepstart,
        _MSPepHit_pepstop,
        MSPepHit,
        _MSModHit_site,
        _MSModHit_modtype,
        MSModHit,
        _MSScoreSet_name,
        _MSScoreSet_value,
        MSScoreSet,
        _MSHits_evalue,
        _MSHits_pvalue,
        _MSHits_charge,
        __MSHits_pephits__item_,
        _MSHits_pephits,
        __MSHits_mzhits__item_,
        _MSHits_mzhits,
        _MSHits_pepstring,
        _MSHits_mass,
        __MSHits_mods__item_,
        _MSHits_mods,
        _MSHits_pepstart,
        _MSHits_pepstop,
        _MSHits_protlength,
        _MSHits_theomass,
        _MSHits_oid,
        __MSHits_scores__item_,
        _MSHits_scores,
        _MSHits_libaccession,
        MSHits,
        MSHitError,
        MSUserAnnot,
        _MSHitSet_number,
        _MSHitSet_error,
        __MSHitSet_hits__item_,
        _MSHitSet_hits,
        __MSHitSet_ids__item_,
        _MSHitSet_ids,
        __MSHitSet_namevalue__item_,
        _MSHitSet_namevalue,
        _MSHitSet_settingid,
        _MSHitSet_userannotation,
        MSHitSet,
        MSResponseError,
        _MSBioseq_oid,
        _MSBioseq_seq,
        MSBioseq,
        _MSBioseqSet__item_,
        MSBioseqSet,
        __MSResponse_hitsets__item_,
        _MSResponse_hitsets,
        _MSResponse_scale,
        _MSResponse_rid,
        _MSResponse_error,
        _MSResponse_version,
        _MSResponse_email,
        _MSResponse_dbversion,
        _MSResponse_bioseqs,
        MSResponse,
        __MSSearch_request__item_,
        _MSSearch_request,
        __MSSearch_response__item_,
        _MSSearch_response,
        MSSearch,
    ]

class NCBI_PCAssay:

    _name_  = 'NCBI-PCAssay'
    _oid_   = []
    
    _obj_ = [
        'PC-AssayContainer',
        'PC-AssaySubmit',
        'PC-AssayResults',
        'PC-AssayData',
        'PC-AssayDescription',
        'PC-AssayPanel',
        'PC-AssayPanelMember',
        'PC-CategorizedComment',
        'PC-AssayDRAttr',
        'PC-AssayTargetInfo',
        'PC-AnnotatedXRef',
        'PC-ResultType',
        'PC-AssayPanelTestResult',
        'PC-ConcentrationAttr',
        'PC-IntegerMinMax',
        'PC-RealMinMax',
        ]
    _type_ = [
        'PC-AssayContainer',
        'PC-AssaySubmit',
        'PC-AssayResults',
        'PC-AssayData',
        'PC-AssayDescription',
        'PC-AssayPanel',
        'PC-AssayPanelMember',
        'PC-CategorizedComment',
        'PC-AssayDRAttr',
        'PC-AssayTargetInfo',
        'PC-AnnotatedXRef',
        'PC-ResultType',
        'PC-AssayPanelTestResult',
        'PC-ConcentrationAttr',
        'PC-IntegerMinMax',
        'PC-RealMinMax',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< PC-AssayContainer >-----#
    PC_AssayContainer = SEQ_OF(name='PC-AssayContainer', mode=MODE_TYPE)
    _PC_AssayContainer__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCAssay', 'PC-AssaySubmit')))
    PC_AssayContainer._cont = _PC_AssayContainer__item_
    
    #-----< PC-AssaySubmit >-----#
    PC_AssaySubmit = SEQ(name='PC-AssaySubmit', mode=MODE_TYPE)
    _PC_AssaySubmit_assay = CHOICE(name='assay', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __PC_AssaySubmit_assay_aid = INT(name='aid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_AssaySubmit_assay_aid_source = CHOICE(name='aid-source', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-Source')))
    __PC_AssaySubmit_assay_descr = SEQ(name='descr', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCAssay', 'PC-AssayDescription')))
    __PC_AssaySubmit_assay_aidver = SEQ(name='aidver', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-ID')))
    _PC_AssaySubmit_assay._cont = ASN1Dict([
        ('aid', __PC_AssaySubmit_assay_aid),
        ('aid-source', __PC_AssaySubmit_assay_aid_source),
        ('descr', __PC_AssaySubmit_assay_descr),
        ('aidver', __PC_AssaySubmit_assay_aidver),
        ])
    _PC_AssaySubmit_assay._ext = None
    _PC_AssaySubmit_data = SEQ_OF(name='data', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssaySubmit_data__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCAssay', 'PC-AssayResults')))
    _PC_AssaySubmit_data._cont = __PC_AssaySubmit_data__item_
    _PC_AssaySubmit_revoke = SEQ_OF(name='revoke', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssaySubmit_revoke__item_ = INT(name='_item_', mode=MODE_TYPE)
    _PC_AssaySubmit_revoke._cont = __PC_AssaySubmit_revoke__item_
    PC_AssaySubmit._cont = ASN1Dict([
        ('assay', _PC_AssaySubmit_assay),
        ('data', _PC_AssaySubmit_data),
        ('revoke', _PC_AssaySubmit_revoke),
        ])
    PC_AssaySubmit._ext = None
    
    #-----< PC-AssayResults >-----#
    PC_AssayResults = SEQ(name='PC-AssayResults', mode=MODE_TYPE)
    _PC_AssayResults_sid = INT(name='sid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_AssayResults_sid_source = CHOICE(name='sid-source', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-Source')), opt=True)
    _PC_AssayResults_version = INT(name='version', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AssayResults_comment = STR_VIS(name='comment', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AssayResults_outcome = INT(name='outcome', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=4)
    _PC_AssayResults_outcome._cont = ASN1Dict([('inactive', 1), ('active', 2), ('inconclusive', 3), ('unspecified', 4), ('probe', 5)])
    _PC_AssayResults_rank = INT(name='rank', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AssayResults_data = SEQ_OF(name='data', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayResults_data__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCAssay', 'PC-AssayData')))
    _PC_AssayResults_data._cont = __PC_AssayResults_data__item_
    _PC_AssayResults_url = STR_VIS(name='url', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AssayResults_xref = SEQ_OF(name='xref', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayResults_xref__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCAssay', 'PC-AnnotatedXRef')))
    _PC_AssayResults_xref._cont = __PC_AssayResults_xref__item_
    _PC_AssayResults_date = CHOICE(name='date', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    PC_AssayResults._cont = ASN1Dict([
        ('sid', _PC_AssayResults_sid),
        ('sid-source', _PC_AssayResults_sid_source),
        ('version', _PC_AssayResults_version),
        ('comment', _PC_AssayResults_comment),
        ('outcome', _PC_AssayResults_outcome),
        ('rank', _PC_AssayResults_rank),
        ('data', _PC_AssayResults_data),
        ('url', _PC_AssayResults_url),
        ('xref', _PC_AssayResults_xref),
        ('date', _PC_AssayResults_date),
        ])
    PC_AssayResults._ext = None
    
    #-----< PC-AssayData >-----#
    PC_AssayData = SEQ(name='PC-AssayData', mode=MODE_TYPE)
    _PC_AssayData_tid = INT(name='tid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_AssayData_value = CHOICE(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __PC_AssayData_value_ival = INT(name='ival', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_AssayData_value_fval = REAL(name='fval', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    __PC_AssayData_value_bval = BOOL(name='bval', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_AssayData_value_sval = STR_VIS(name='sval', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_AssayData_value._cont = ASN1Dict([
        ('ival', __PC_AssayData_value_ival),
        ('fval', __PC_AssayData_value_fval),
        ('bval', __PC_AssayData_value_bval),
        ('sval', __PC_AssayData_value_sval),
        ])
    _PC_AssayData_value._ext = None
    PC_AssayData._cont = ASN1Dict([
        ('tid', _PC_AssayData_tid),
        ('value', _PC_AssayData_value),
        ])
    PC_AssayData._ext = None
    
    #-----< PC-AssayDescription >-----#
    PC_AssayDescription = SEQ(name='PC-AssayDescription', mode=MODE_TYPE)
    _PC_AssayDescription_aid = SEQ(name='aid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-ID')))
    _PC_AssayDescription_aid_source = CHOICE(name='aid-source', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-Source')), opt=True)
    _PC_AssayDescription_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_AssayDescription_description = SEQ_OF(name='description', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayDescription_description__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _PC_AssayDescription_description._cont = __PC_AssayDescription_description__item_
    _PC_AssayDescription_protocol = SEQ_OF(name='protocol', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayDescription_protocol__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _PC_AssayDescription_protocol._cont = __PC_AssayDescription_protocol__item_
    _PC_AssayDescription_comment = SEQ_OF(name='comment', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayDescription_comment__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _PC_AssayDescription_comment._cont = __PC_AssayDescription_comment__item_
    _PC_AssayDescription_xref = SEQ_OF(name='xref', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayDescription_xref__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCAssay', 'PC-AnnotatedXRef')))
    _PC_AssayDescription_xref._cont = __PC_AssayDescription_xref__item_
    _PC_AssayDescription_results = SEQ_OF(name='results', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayDescription_results__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCAssay', 'PC-ResultType')))
    _PC_AssayDescription_results._cont = __PC_AssayDescription_results__item_
    _PC_AssayDescription_pub = SEQ_OF(name='pub', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayDescription_pub__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Pub', 'Pub')))
    _PC_AssayDescription_pub._cont = __PC_AssayDescription_pub__item_
    _PC_AssayDescription_revision = INT(name='revision', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AssayDescription_target = SEQ_OF(name='target', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayDescription_target__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCAssay', 'PC-AssayTargetInfo')))
    _PC_AssayDescription_target._cont = __PC_AssayDescription_target__item_
    _PC_AssayDescription_activity_outcome_method = INT(name='activity-outcome-method', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AssayDescription_activity_outcome_method._cont = ASN1Dict([('other', 0), ('screening', 1), ('confirmatory', 2), ('summary', 3)])
    _PC_AssayDescription_dr = SEQ_OF(name='dr', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayDescription_dr__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCAssay', 'PC-AssayDRAttr')))
    _PC_AssayDescription_dr._cont = __PC_AssayDescription_dr__item_
    _PC_AssayDescription_substance_type = INT(name='substance-type', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AssayDescription_substance_type._cont = ASN1Dict([('small-molecule', 1), ('nucleotide', 2), ('other', 255)])
    _PC_AssayDescription_grant_number = SEQ_OF(name='grant-number', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayDescription_grant_number__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _PC_AssayDescription_grant_number._cont = __PC_AssayDescription_grant_number__item_
    _PC_AssayDescription_project_category = INT(name='project-category', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AssayDescription_project_category._cont = ASN1Dict([('mlscn', 1), ('mlpcn', 2), ('mlscn-ap', 3), ('mlpcn-ap', 4), ('journal-article', 5), ('assay-vendor', 6), ('literature-extracted', 7), ('literature-author', 8), ('literature-publisher', 9), ('rnaigi', 10), ('other', 255)])
    _PC_AssayDescription_is_panel = BOOL(name='is-panel', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AssayDescription_assay_group = SEQ_OF(name='assay-group', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayDescription_assay_group__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _PC_AssayDescription_assay_group._cont = __PC_AssayDescription_assay_group__item_
    _PC_AssayDescription_panel_info = SEQ(name='panel-info', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCAssay', 'PC-AssayPanel')), opt=True)
    _PC_AssayDescription_is_mlp_late_stage = BOOL(name='is-mlp-late-stage', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AssayDescription_categorized_comment = SEQ_OF(name='categorized-comment', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayDescription_categorized_comment__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCAssay', 'PC-CategorizedComment')))
    _PC_AssayDescription_categorized_comment._cont = __PC_AssayDescription_categorized_comment__item_
    PC_AssayDescription._cont = ASN1Dict([
        ('aid', _PC_AssayDescription_aid),
        ('aid-source', _PC_AssayDescription_aid_source),
        ('name', _PC_AssayDescription_name),
        ('description', _PC_AssayDescription_description),
        ('protocol', _PC_AssayDescription_protocol),
        ('comment', _PC_AssayDescription_comment),
        ('xref', _PC_AssayDescription_xref),
        ('results', _PC_AssayDescription_results),
        ('pub', _PC_AssayDescription_pub),
        ('revision', _PC_AssayDescription_revision),
        ('target', _PC_AssayDescription_target),
        ('activity-outcome-method', _PC_AssayDescription_activity_outcome_method),
        ('dr', _PC_AssayDescription_dr),
        ('substance-type', _PC_AssayDescription_substance_type),
        ('grant-number', _PC_AssayDescription_grant_number),
        ('project-category', _PC_AssayDescription_project_category),
        ('is-panel', _PC_AssayDescription_is_panel),
        ('assay-group', _PC_AssayDescription_assay_group),
        ('panel-info', _PC_AssayDescription_panel_info),
        ('is-mlp-late-stage', _PC_AssayDescription_is_mlp_late_stage),
        ('categorized-comment', _PC_AssayDescription_categorized_comment),
        ])
    PC_AssayDescription._ext = None
    
    #-----< PC-AssayPanel >-----#
    PC_AssayPanel = SEQ(name='PC-AssayPanel', mode=MODE_TYPE)
    _PC_AssayPanel_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_AssayPanel_descr = STR_VIS(name='descr', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AssayPanel_member = SEQ_OF(name='member', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayPanel_member__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCAssay', 'PC-AssayPanelMember')))
    _PC_AssayPanel_member._cont = __PC_AssayPanel_member__item_
    PC_AssayPanel._cont = ASN1Dict([
        ('name', _PC_AssayPanel_name),
        ('descr', _PC_AssayPanel_descr),
        ('member', _PC_AssayPanel_member),
        ])
    PC_AssayPanel._ext = None
    
    #-----< PC-AssayPanelMember >-----#
    PC_AssayPanelMember = SEQ(name='PC-AssayPanelMember', mode=MODE_TYPE)
    _PC_AssayPanelMember_mid = INT(name='mid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_AssayPanelMember_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AssayPanelMember_description = STR_VIS(name='description', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AssayPanelMember_protocol = SEQ_OF(name='protocol', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayPanelMember_protocol__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _PC_AssayPanelMember_protocol._cont = __PC_AssayPanelMember_protocol__item_
    _PC_AssayPanelMember_comment = SEQ_OF(name='comment', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayPanelMember_comment__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _PC_AssayPanelMember_comment._cont = __PC_AssayPanelMember_comment__item_
    _PC_AssayPanelMember_target = SEQ_OF(name='target', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayPanelMember_target__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCAssay', 'PC-AssayTargetInfo')))
    _PC_AssayPanelMember_target._cont = __PC_AssayPanelMember_target__item_
    _PC_AssayPanelMember_xref = SEQ_OF(name='xref', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayPanelMember_xref__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCAssay', 'PC-AnnotatedXRef')))
    _PC_AssayPanelMember_xref._cont = __PC_AssayPanelMember_xref__item_
    _PC_AssayPanelMember_activity_outcome_method = INT(name='activity-outcome-method', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AssayPanelMember_activity_outcome_method._cont = ASN1Dict([('other', 0), ('screening', 1), ('confirmatory', 2), ('summary', 3)])
    _PC_AssayPanelMember_dr = SEQ_OF(name='dr', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayPanelMember_dr__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCAssay', 'PC-AssayDRAttr')))
    _PC_AssayPanelMember_dr._cont = __PC_AssayPanelMember_dr__item_
    _PC_AssayPanelMember_categorized_comment = SEQ_OF(name='categorized-comment', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayPanelMember_categorized_comment__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCAssay', 'PC-CategorizedComment')))
    _PC_AssayPanelMember_categorized_comment._cont = __PC_AssayPanelMember_categorized_comment__item_
    PC_AssayPanelMember._cont = ASN1Dict([
        ('mid', _PC_AssayPanelMember_mid),
        ('name', _PC_AssayPanelMember_name),
        ('description', _PC_AssayPanelMember_description),
        ('protocol', _PC_AssayPanelMember_protocol),
        ('comment', _PC_AssayPanelMember_comment),
        ('target', _PC_AssayPanelMember_target),
        ('xref', _PC_AssayPanelMember_xref),
        ('activity-outcome-method', _PC_AssayPanelMember_activity_outcome_method),
        ('dr', _PC_AssayPanelMember_dr),
        ('categorized-comment', _PC_AssayPanelMember_categorized_comment),
        ])
    PC_AssayPanelMember._ext = None
    
    #-----< PC-CategorizedComment >-----#
    PC_CategorizedComment = SEQ(name='PC-CategorizedComment', mode=MODE_TYPE)
    _PC_CategorizedComment_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_CategorizedComment_comment = SEQ_OF(name='comment', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_CategorizedComment_comment__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _PC_CategorizedComment_comment._cont = __PC_CategorizedComment_comment__item_
    PC_CategorizedComment._cont = ASN1Dict([
        ('title', _PC_CategorizedComment_title),
        ('comment', _PC_CategorizedComment_comment),
        ])
    PC_CategorizedComment._ext = None
    
    #-----< PC-AssayDRAttr >-----#
    PC_AssayDRAttr = SEQ(name='PC-AssayDRAttr', mode=MODE_TYPE)
    _PC_AssayDRAttr_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_AssayDRAttr_descr = STR_VIS(name='descr', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AssayDRAttr_dn = STR_VIS(name='dn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AssayDRAttr_rn = STR_VIS(name='rn', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AssayDRAttr_type = INT(name='type', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AssayDRAttr_type._cont = ASN1Dict([('experimental', 0), ('calculated', 1)])
    PC_AssayDRAttr._cont = ASN1Dict([
        ('id', _PC_AssayDRAttr_id),
        ('descr', _PC_AssayDRAttr_descr),
        ('dn', _PC_AssayDRAttr_dn),
        ('rn', _PC_AssayDRAttr_rn),
        ('type', _PC_AssayDRAttr_type),
        ])
    PC_AssayDRAttr._ext = None
    
    #-----< PC-AssayTargetInfo >-----#
    PC_AssayTargetInfo = SEQ(name='PC-AssayTargetInfo', mode=MODE_TYPE)
    _PC_AssayTargetInfo_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_AssayTargetInfo_mol_id = INT(name='mol-id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_AssayTargetInfo_molecule_type = INT(name='molecule-type', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=1)
    _PC_AssayTargetInfo_molecule_type._cont = ASN1Dict([('protein', 1), ('dna', 2), ('rna', 3), ('gene', 4), ('biosystem', 5), ('other', 255)])
    _PC_AssayTargetInfo_organism = SEQ(name='organism', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BioSource', 'BioSource')), opt=True)
    _PC_AssayTargetInfo_descr = STR_VIS(name='descr', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AssayTargetInfo_comment = SEQ_OF(name='comment', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_AssayTargetInfo_comment__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _PC_AssayTargetInfo_comment._cont = __PC_AssayTargetInfo_comment__item_
    PC_AssayTargetInfo._cont = ASN1Dict([
        ('name', _PC_AssayTargetInfo_name),
        ('mol-id', _PC_AssayTargetInfo_mol_id),
        ('molecule-type', _PC_AssayTargetInfo_molecule_type),
        ('organism', _PC_AssayTargetInfo_organism),
        ('descr', _PC_AssayTargetInfo_descr),
        ('comment', _PC_AssayTargetInfo_comment),
        ])
    PC_AssayTargetInfo._ext = None
    
    #-----< PC-AnnotatedXRef >-----#
    PC_AnnotatedXRef = SEQ(name='PC-AnnotatedXRef', mode=MODE_TYPE)
    _PC_AnnotatedXRef_xref = CHOICE(name='xref', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-XRefData')))
    _PC_AnnotatedXRef_comment = STR_VIS(name='comment', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AnnotatedXRef_type = INT(name='type', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_AnnotatedXRef_type._cont = ASN1Dict([('pcit', 1), ('pgene', 2)])
    PC_AnnotatedXRef._cont = ASN1Dict([
        ('xref', _PC_AnnotatedXRef_xref),
        ('comment', _PC_AnnotatedXRef_comment),
        ('type', _PC_AnnotatedXRef_type),
        ])
    PC_AnnotatedXRef._ext = None
    
    #-----< PC-ResultType >-----#
    PC_ResultType = SEQ(name='PC-ResultType', mode=MODE_TYPE)
    _PC_ResultType_tid = INT(name='tid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_ResultType_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_ResultType_description = SEQ_OF(name='description', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_ResultType_description__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _PC_ResultType_description._cont = __PC_ResultType_description__item_
    _PC_ResultType_type = INT(name='type', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_ResultType_type._cont = ASN1Dict([('float', 1), ('int', 2), ('bool', 3), ('string', 4)])
    _PC_ResultType_constraints = CHOICE(name='constraints', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __PC_ResultType_constraints_fset = SEQ_OF(name='fset', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PC_ResultType_constraints_fset__item_ = REAL(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('_IMPL_', 'REAL')))
    __PC_ResultType_constraints_fset._cont = ___PC_ResultType_constraints_fset__item_
    __PC_ResultType_constraints_fmin = REAL(name='fmin', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    __PC_ResultType_constraints_fmax = REAL(name='fmax', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    __PC_ResultType_constraints_frange = SEQ(name='frange', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCAssay', 'PC-RealMinMax')))
    __PC_ResultType_constraints_iset = SEQ_OF(name='iset', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PC_ResultType_constraints_iset__item_ = INT(name='_item_', mode=MODE_TYPE)
    __PC_ResultType_constraints_iset._cont = ___PC_ResultType_constraints_iset__item_
    __PC_ResultType_constraints_imin = INT(name='imin', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_ResultType_constraints_imax = INT(name='imax', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_ResultType_constraints_irange = SEQ(name='irange', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCAssay', 'PC-IntegerMinMax')))
    __PC_ResultType_constraints_sset = SEQ_OF(name='sset', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PC_ResultType_constraints_sset__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    __PC_ResultType_constraints_sset._cont = ___PC_ResultType_constraints_sset__item_
    _PC_ResultType_constraints._cont = ASN1Dict([
        ('fset', __PC_ResultType_constraints_fset),
        ('fmin', __PC_ResultType_constraints_fmin),
        ('fmax', __PC_ResultType_constraints_fmax),
        ('frange', __PC_ResultType_constraints_frange),
        ('iset', __PC_ResultType_constraints_iset),
        ('imin', __PC_ResultType_constraints_imin),
        ('imax', __PC_ResultType_constraints_imax),
        ('irange', __PC_ResultType_constraints_irange),
        ('sset', __PC_ResultType_constraints_sset),
        ])
    _PC_ResultType_constraints._ext = None
    _PC_ResultType_unit = INT(name='unit', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_ResultType_unit._cont = ASN1Dict([('ppt', 1), ('ppm', 2), ('ppb', 3), ('mm', 4), ('um', 5), ('nm', 6), ('pm', 7), ('fm', 8), ('mgml', 9), ('ugml', 10), ('ngml', 11), ('pgml', 12), ('fgml', 13), ('m', 14), ('percent', 15), ('ratio', 16), ('sec', 17), ('rsec', 18), ('min', 19), ('rmin', 20), ('day', 21), ('rday', 22), ('ml-min-kg', 23), ('l-kg', 24), ('hr-ng-ml', 25), ('cm-sec', 26), ('mg-kg', 27), ('none', 254), ('unspecified', 255)])
    _PC_ResultType_sunit = STR_VIS(name='sunit', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_ResultType_transform = INT(name='transform', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_ResultType_transform._cont = ASN1Dict([('linear', 1), ('ln', 2), ('log', 3), ('reciprocal', 4), ('negative', 5), ('nlog', 6), ('nln', 7)])
    _PC_ResultType_stransform = STR_VIS(name='stransform', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_ResultType_tc = SEQ(name='tc', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCAssay', 'PC-ConcentrationAttr')), opt=True)
    _PC_ResultType_ac = BOOL(name='ac', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_ResultType_panel_info = SEQ(name='panel-info', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCAssay', 'PC-AssayPanelTestResult')), opt=True)
    _PC_ResultType_annot = INT(name='annot', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_ResultType_annot._cont = ASN1Dict([('pmid', 1), ('mmdb', 2), ('url', 3), ('protein-gi', 4), ('nucleotide-gi', 5), ('taxonomy', 6), ('mim', 7), ('gene', 8), ('probe', 9), ('aid', 10), ('sid', 11), ('cid', 12), ('protein-target-gi', 13), ('biosystems-target-id', 14), ('target-name', 15), ('target-descr', 16), ('target-tax-id', 17), ('gene-target-id', 18), ('dna-nucleotide-target-gi', 19), ('rna-nucleotide-target-gi', 20)])
    PC_ResultType._cont = ASN1Dict([
        ('tid', _PC_ResultType_tid),
        ('name', _PC_ResultType_name),
        ('description', _PC_ResultType_description),
        ('type', _PC_ResultType_type),
        ('constraints', _PC_ResultType_constraints),
        ('unit', _PC_ResultType_unit),
        ('sunit', _PC_ResultType_sunit),
        ('transform', _PC_ResultType_transform),
        ('stransform', _PC_ResultType_stransform),
        ('tc', _PC_ResultType_tc),
        ('ac', _PC_ResultType_ac),
        ('panel-info', _PC_ResultType_panel_info),
        ('annot', _PC_ResultType_annot),
        ])
    PC_ResultType._ext = None
    
    #-----< PC-AssayPanelTestResult >-----#
    PC_AssayPanelTestResult = SEQ(name='PC-AssayPanelTestResult', mode=MODE_TYPE)
    _PC_AssayPanelTestResult_mid = INT(name='mid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_AssayPanelTestResult_readout_annot = INT(name='readout-annot', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=1)
    _PC_AssayPanelTestResult_readout_annot._cont = ASN1Dict([('regular', 1), ('outcome', 2), ('score', 3), ('ac', 4)])
    PC_AssayPanelTestResult._cont = ASN1Dict([
        ('mid', _PC_AssayPanelTestResult_mid),
        ('readout-annot', _PC_AssayPanelTestResult_readout_annot),
        ])
    PC_AssayPanelTestResult._ext = None
    
    #-----< PC-ConcentrationAttr >-----#
    PC_ConcentrationAttr = SEQ(name='PC-ConcentrationAttr', mode=MODE_TYPE)
    _PC_ConcentrationAttr_concentration = REAL(name='concentration', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _PC_ConcentrationAttr_unit = INT(name='unit', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_ConcentrationAttr_unit._cont = ASN1Dict([('um', 5)])
    _PC_ConcentrationAttr_dr_id = INT(name='dr-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    PC_ConcentrationAttr._cont = ASN1Dict([
        ('concentration', _PC_ConcentrationAttr_concentration),
        ('unit', _PC_ConcentrationAttr_unit),
        ('dr-id', _PC_ConcentrationAttr_dr_id),
        ])
    PC_ConcentrationAttr._ext = None
    
    #-----< PC-IntegerMinMax >-----#
    PC_IntegerMinMax = SEQ(name='PC-IntegerMinMax', mode=MODE_TYPE)
    _PC_IntegerMinMax_min = INT(name='min', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_IntegerMinMax_max = INT(name='max', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PC_IntegerMinMax._cont = ASN1Dict([
        ('min', _PC_IntegerMinMax_min),
        ('max', _PC_IntegerMinMax_max),
        ])
    PC_IntegerMinMax._ext = None
    
    #-----< PC-RealMinMax >-----#
    PC_RealMinMax = SEQ(name='PC-RealMinMax', mode=MODE_TYPE)
    _PC_RealMinMax_min = REAL(name='min', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _PC_RealMinMax_max = REAL(name='max', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    PC_RealMinMax._cont = ASN1Dict([
        ('min', _PC_RealMinMax_min),
        ('max', _PC_RealMinMax_max),
        ])
    PC_RealMinMax._ext = None
    
    _all_ = [
        _PC_AssayContainer__item_,
        PC_AssayContainer,
        __PC_AssaySubmit_assay_aid,
        __PC_AssaySubmit_assay_aid_source,
        __PC_AssaySubmit_assay_descr,
        __PC_AssaySubmit_assay_aidver,
        _PC_AssaySubmit_assay,
        __PC_AssaySubmit_data__item_,
        _PC_AssaySubmit_data,
        __PC_AssaySubmit_revoke__item_,
        _PC_AssaySubmit_revoke,
        PC_AssaySubmit,
        _PC_AssayResults_sid,
        _PC_AssayResults_sid_source,
        _PC_AssayResults_version,
        _PC_AssayResults_comment,
        _PC_AssayResults_outcome,
        _PC_AssayResults_rank,
        __PC_AssayResults_data__item_,
        _PC_AssayResults_data,
        _PC_AssayResults_url,
        __PC_AssayResults_xref__item_,
        _PC_AssayResults_xref,
        _PC_AssayResults_date,
        PC_AssayResults,
        _PC_AssayData_tid,
        __PC_AssayData_value_ival,
        __PC_AssayData_value_fval,
        __PC_AssayData_value_bval,
        __PC_AssayData_value_sval,
        _PC_AssayData_value,
        PC_AssayData,
        _PC_AssayDescription_aid,
        _PC_AssayDescription_aid_source,
        _PC_AssayDescription_name,
        __PC_AssayDescription_description__item_,
        _PC_AssayDescription_description,
        __PC_AssayDescription_protocol__item_,
        _PC_AssayDescription_protocol,
        __PC_AssayDescription_comment__item_,
        _PC_AssayDescription_comment,
        __PC_AssayDescription_xref__item_,
        _PC_AssayDescription_xref,
        __PC_AssayDescription_results__item_,
        _PC_AssayDescription_results,
        __PC_AssayDescription_pub__item_,
        _PC_AssayDescription_pub,
        _PC_AssayDescription_revision,
        __PC_AssayDescription_target__item_,
        _PC_AssayDescription_target,
        _PC_AssayDescription_activity_outcome_method,
        __PC_AssayDescription_dr__item_,
        _PC_AssayDescription_dr,
        _PC_AssayDescription_substance_type,
        __PC_AssayDescription_grant_number__item_,
        _PC_AssayDescription_grant_number,
        _PC_AssayDescription_project_category,
        _PC_AssayDescription_is_panel,
        __PC_AssayDescription_assay_group__item_,
        _PC_AssayDescription_assay_group,
        _PC_AssayDescription_panel_info,
        _PC_AssayDescription_is_mlp_late_stage,
        __PC_AssayDescription_categorized_comment__item_,
        _PC_AssayDescription_categorized_comment,
        PC_AssayDescription,
        _PC_AssayPanel_name,
        _PC_AssayPanel_descr,
        __PC_AssayPanel_member__item_,
        _PC_AssayPanel_member,
        PC_AssayPanel,
        _PC_AssayPanelMember_mid,
        _PC_AssayPanelMember_name,
        _PC_AssayPanelMember_description,
        __PC_AssayPanelMember_protocol__item_,
        _PC_AssayPanelMember_protocol,
        __PC_AssayPanelMember_comment__item_,
        _PC_AssayPanelMember_comment,
        __PC_AssayPanelMember_target__item_,
        _PC_AssayPanelMember_target,
        __PC_AssayPanelMember_xref__item_,
        _PC_AssayPanelMember_xref,
        _PC_AssayPanelMember_activity_outcome_method,
        __PC_AssayPanelMember_dr__item_,
        _PC_AssayPanelMember_dr,
        __PC_AssayPanelMember_categorized_comment__item_,
        _PC_AssayPanelMember_categorized_comment,
        PC_AssayPanelMember,
        _PC_CategorizedComment_title,
        __PC_CategorizedComment_comment__item_,
        _PC_CategorizedComment_comment,
        PC_CategorizedComment,
        _PC_AssayDRAttr_id,
        _PC_AssayDRAttr_descr,
        _PC_AssayDRAttr_dn,
        _PC_AssayDRAttr_rn,
        _PC_AssayDRAttr_type,
        PC_AssayDRAttr,
        _PC_AssayTargetInfo_name,
        _PC_AssayTargetInfo_mol_id,
        _PC_AssayTargetInfo_molecule_type,
        _PC_AssayTargetInfo_organism,
        _PC_AssayTargetInfo_descr,
        __PC_AssayTargetInfo_comment__item_,
        _PC_AssayTargetInfo_comment,
        PC_AssayTargetInfo,
        _PC_AnnotatedXRef_xref,
        _PC_AnnotatedXRef_comment,
        _PC_AnnotatedXRef_type,
        PC_AnnotatedXRef,
        _PC_ResultType_tid,
        _PC_ResultType_name,
        __PC_ResultType_description__item_,
        _PC_ResultType_description,
        _PC_ResultType_type,
        ___PC_ResultType_constraints_fset__item_,
        __PC_ResultType_constraints_fset,
        __PC_ResultType_constraints_fmin,
        __PC_ResultType_constraints_fmax,
        __PC_ResultType_constraints_frange,
        ___PC_ResultType_constraints_iset__item_,
        __PC_ResultType_constraints_iset,
        __PC_ResultType_constraints_imin,
        __PC_ResultType_constraints_imax,
        __PC_ResultType_constraints_irange,
        ___PC_ResultType_constraints_sset__item_,
        __PC_ResultType_constraints_sset,
        _PC_ResultType_constraints,
        _PC_ResultType_unit,
        _PC_ResultType_sunit,
        _PC_ResultType_transform,
        _PC_ResultType_stransform,
        _PC_ResultType_tc,
        _PC_ResultType_ac,
        _PC_ResultType_panel_info,
        _PC_ResultType_annot,
        PC_ResultType,
        _PC_AssayPanelTestResult_mid,
        _PC_AssayPanelTestResult_readout_annot,
        PC_AssayPanelTestResult,
        _PC_ConcentrationAttr_concentration,
        _PC_ConcentrationAttr_unit,
        _PC_ConcentrationAttr_dr_id,
        PC_ConcentrationAttr,
        _PC_IntegerMinMax_min,
        _PC_IntegerMinMax_max,
        PC_IntegerMinMax,
        _PC_RealMinMax_min,
        _PC_RealMinMax_max,
        PC_RealMinMax,
    ]

class NCBI_PCSubstance:

    _name_  = 'NCBI-PCSubstance'
    _oid_   = []
    
    _obj_ = [
        'PC-Substance',
        'PC-Substances',
        'PC-ID',
        'PC-Source',
        'PC-DBTracking',
        'PC-MMDBSource',
        'PC-XRefData',
        'PC-Compound',
        'PC-Compounds',
        'PC-CompoundType',
        'PC-Count',
        'PC-StereoGroup',
        'PC-InfoData',
        'PC-Urn',
        'PC-UrnDataType',
        'PC-Coordinates',
        'PC-Conformer',
        'PC-Conformers',
        'PC-CoordinateType',
        'PC-DrawAnnotations',
        'PC-BondAnnotation',
        'PC-Atoms',
        'PC-AtomSource',
        'PC-AtomInt',
        'PC-AtomString',
        'PC-AtomRadical',
        'PC-Element',
        'PC-Bonds',
        'PC-BondType',
        'PC-StereoCenter',
        'PC-StereoTetrahedral',
        'PC-StereoPlanar',
        'PC-StereoSquarePlanar',
        'PC-StereoOctahedral',
        'PC-StereoTrigonalBiPyramid',
        'PC-StereoTShape',
        'PC-StereoPentagonalBiPyramid',
        ]
    _type_ = [
        'PC-Substance',
        'PC-Substances',
        'PC-ID',
        'PC-Source',
        'PC-DBTracking',
        'PC-MMDBSource',
        'PC-XRefData',
        'PC-Compound',
        'PC-Compounds',
        'PC-CompoundType',
        'PC-Count',
        'PC-StereoGroup',
        'PC-InfoData',
        'PC-Urn',
        'PC-UrnDataType',
        'PC-Coordinates',
        'PC-Conformer',
        'PC-Conformers',
        'PC-CoordinateType',
        'PC-DrawAnnotations',
        'PC-BondAnnotation',
        'PC-Atoms',
        'PC-AtomSource',
        'PC-AtomInt',
        'PC-AtomString',
        'PC-AtomRadical',
        'PC-Element',
        'PC-Bonds',
        'PC-BondType',
        'PC-StereoCenter',
        'PC-StereoTetrahedral',
        'PC-StereoPlanar',
        'PC-StereoSquarePlanar',
        'PC-StereoOctahedral',
        'PC-StereoTrigonalBiPyramid',
        'PC-StereoTShape',
        'PC-StereoPentagonalBiPyramid',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< PC-Substance >-----#
    PC_Substance = SEQ(name='PC-Substance', mode=MODE_TYPE)
    _PC_Substance_sid = SEQ(name='sid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-ID')))
    _PC_Substance_source = CHOICE(name='source', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-Source')))
    _PC_Substance_pub = SEQ_OF(name='pub', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_Substance_pub__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Pub', 'Pub')))
    _PC_Substance_pub._cont = __PC_Substance_pub__item_
    _PC_Substance_synonyms = SEQ_OF(name='synonyms', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_Substance_synonyms__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _PC_Substance_synonyms._cont = __PC_Substance_synonyms__item_
    _PC_Substance_comment = SEQ_OF(name='comment', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_Substance_comment__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _PC_Substance_comment._cont = __PC_Substance_comment__item_
    _PC_Substance_xref = SEQ_OF(name='xref', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_Substance_xref__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-XRefData')))
    _PC_Substance_xref._cont = __PC_Substance_xref__item_
    _PC_Substance_compound = SEQ_OF(name='compound', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-Compounds')), opt=True)
    PC_Substance._cont = ASN1Dict([
        ('sid', _PC_Substance_sid),
        ('source', _PC_Substance_source),
        ('pub', _PC_Substance_pub),
        ('synonyms', _PC_Substance_synonyms),
        ('comment', _PC_Substance_comment),
        ('xref', _PC_Substance_xref),
        ('compound', _PC_Substance_compound),
        ])
    PC_Substance._ext = None
    
    #-----< PC-Substances >-----#
    PC_Substances = SEQ_OF(name='PC-Substances', mode=MODE_TYPE)
    _PC_Substances__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-Substance')))
    PC_Substances._cont = _PC_Substances__item_
    
    #-----< PC-ID >-----#
    PC_ID = SEQ(name='PC-ID', mode=MODE_TYPE)
    _PC_ID_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_ID_version = INT(name='version', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PC_ID._cont = ASN1Dict([
        ('id', _PC_ID_id),
        ('version', _PC_ID_version),
        ])
    PC_ID._ext = None
    
    #-----< PC-Source >-----#
    PC_Source = CHOICE(name='PC-Source', mode=MODE_TYPE)
    _PC_Source_individual = CHOICE(name='individual', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Pub', 'Pub')))
    _PC_Source_db = SEQ(name='db', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-DBTracking')))
    _PC_Source_mmdb = SEQ(name='mmdb', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-MMDBSource')))
    PC_Source._cont = ASN1Dict([
        ('individual', _PC_Source_individual),
        ('db', _PC_Source_db),
        ('mmdb', _PC_Source_mmdb),
        ])
    PC_Source._ext = None
    
    #-----< PC-DBTracking >-----#
    PC_DBTracking = SEQ(name='PC-DBTracking', mode=MODE_TYPE)
    _PC_DBTracking_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_DBTracking_source_id = CHOICE(name='source-id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Object-id')))
    _PC_DBTracking_date = CHOICE(name='date', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    _PC_DBTracking_description = STR_VIS(name='description', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_DBTracking_pub = CHOICE(name='pub', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Pub', 'Pub')), opt=True)
    PC_DBTracking._cont = ASN1Dict([
        ('name', _PC_DBTracking_name),
        ('source-id', _PC_DBTracking_source_id),
        ('date', _PC_DBTracking_date),
        ('description', _PC_DBTracking_description),
        ('pub', _PC_DBTracking_pub),
        ])
    PC_DBTracking._ext = None
    
    #-----< PC-MMDBSource >-----#
    PC_MMDBSource = SEQ(name='PC-MMDBSource', mode=MODE_TYPE)
    _PC_MMDBSource_mmdb_id = INT(name='mmdb-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_MMDBSource_molecule_id = INT(name='molecule-id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_MMDBSource_molecule_name = SEQ_OF(name='molecule-name', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_MMDBSource_molecule_name__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _PC_MMDBSource_molecule_name._cont = __PC_MMDBSource_molecule_name__item_
    _PC_MMDBSource_residue_id = INT(name='residue-id', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_MMDBSource_residue_name = STR_VIS(name='residue-name', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_MMDBSource_atom_id = INT(name='atom-id', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_MMDBSource_atom_name = STR_VIS(name='atom-name', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    PC_MMDBSource._cont = ASN1Dict([
        ('mmdb-id', _PC_MMDBSource_mmdb_id),
        ('molecule-id', _PC_MMDBSource_molecule_id),
        ('molecule-name', _PC_MMDBSource_molecule_name),
        ('residue-id', _PC_MMDBSource_residue_id),
        ('residue-name', _PC_MMDBSource_residue_name),
        ('atom-id', _PC_MMDBSource_atom_id),
        ('atom-name', _PC_MMDBSource_atom_name),
        ])
    PC_MMDBSource._ext = None
    
    #-----< PC-XRefData >-----#
    PC_XRefData = CHOICE(name='PC-XRefData', mode=MODE_TYPE)
    _PC_XRefData_regid = STR_VIS(name='regid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_rn = STR_VIS(name='rn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_mesh = STR_VIS(name='mesh', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_pmid = INT(name='pmid', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_gi = INT(name='gi', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_mmdb = INT(name='mmdb', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_sid = INT(name='sid', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_cid = INT(name='cid', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_dburl = STR_VIS(name='dburl', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_sburl = STR_VIS(name='sburl', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_asurl = STR_VIS(name='asurl', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_protein_gi = INT(name='protein-gi', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_nucleotide_gi = INT(name='nucleotide-gi', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_taxonomy = INT(name='taxonomy', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_aid = INT(name='aid', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_mim = INT(name='mim', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_gene = INT(name='gene', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_probe = INT(name='probe', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_biosystem = INT(name='biosystem', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_geogse = INT(name='geogse', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_geogsm = INT(name='geogsm', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_XRefData_patent = STR_VIS(name='patent', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PC_XRefData._cont = ASN1Dict([
        ('regid', _PC_XRefData_regid),
        ('rn', _PC_XRefData_rn),
        ('mesh', _PC_XRefData_mesh),
        ('pmid', _PC_XRefData_pmid),
        ('gi', _PC_XRefData_gi),
        ('mmdb', _PC_XRefData_mmdb),
        ('sid', _PC_XRefData_sid),
        ('cid', _PC_XRefData_cid),
        ('dburl', _PC_XRefData_dburl),
        ('sburl', _PC_XRefData_sburl),
        ('asurl', _PC_XRefData_asurl),
        ('protein-gi', _PC_XRefData_protein_gi),
        ('nucleotide-gi', _PC_XRefData_nucleotide_gi),
        ('taxonomy', _PC_XRefData_taxonomy),
        ('aid', _PC_XRefData_aid),
        ('mim', _PC_XRefData_mim),
        ('gene', _PC_XRefData_gene),
        ('probe', _PC_XRefData_probe),
        ('biosystem', _PC_XRefData_biosystem),
        ('geogse', _PC_XRefData_geogse),
        ('geogsm', _PC_XRefData_geogsm),
        ('patent', _PC_XRefData_patent),
        ])
    PC_XRefData._ext = None
    
    #-----< PC-Compound >-----#
    PC_Compound = SEQ(name='PC-Compound', mode=MODE_TYPE)
    _PC_Compound_id = SEQ(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-CompoundType')))
    _PC_Compound_atoms = SEQ(name='atoms', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-Atoms')), opt=True)
    _PC_Compound_bonds = SEQ(name='bonds', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-Bonds')), opt=True)
    _PC_Compound_stereo = SEQ_OF(name='stereo', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_Compound_stereo__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-StereoCenter')))
    _PC_Compound_stereo._cont = __PC_Compound_stereo__item_
    _PC_Compound_coords = SEQ_OF(name='coords', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_Compound_coords__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-Coordinates')))
    _PC_Compound_coords._cont = __PC_Compound_coords__item_
    _PC_Compound_charge = INT(name='charge', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_Compound_props = SEQ_OF(name='props', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_Compound_props__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-InfoData')))
    _PC_Compound_props._cont = __PC_Compound_props__item_
    _PC_Compound_stereogroups = SEQ_OF(name='stereogroups', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_Compound_stereogroups__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-StereoGroup')))
    _PC_Compound_stereogroups._cont = __PC_Compound_stereogroups__item_
    _PC_Compound_count = SEQ(name='count', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-Count')), opt=True)
    _PC_Compound_vbalt = SEQ_OF(name='vbalt', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-Compounds')), opt=True)
    PC_Compound._cont = ASN1Dict([
        ('id', _PC_Compound_id),
        ('atoms', _PC_Compound_atoms),
        ('bonds', _PC_Compound_bonds),
        ('stereo', _PC_Compound_stereo),
        ('coords', _PC_Compound_coords),
        ('charge', _PC_Compound_charge),
        ('props', _PC_Compound_props),
        ('stereogroups', _PC_Compound_stereogroups),
        ('count', _PC_Compound_count),
        ('vbalt', _PC_Compound_vbalt),
        ])
    PC_Compound._ext = None
    
    #-----< PC-Compounds >-----#
    PC_Compounds = SEQ_OF(name='PC-Compounds', mode=MODE_TYPE)
    _PC_Compounds__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-Compound')))
    PC_Compounds._cont = _PC_Compounds__item_
    
    #-----< PC-CompoundType >-----#
    PC_CompoundType = SEQ(name='PC-CompoundType', mode=MODE_TYPE)
    _PC_CompoundType_type = INT(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_CompoundType_type._cont = ASN1Dict([('deposited', 0), ('standardized', 1), ('component', 2), ('neutralized', 3), ('mixture', 4), ('tautomer', 5), ('pka-state', 6), ('unknown', 255)])
    _PC_CompoundType_id = CHOICE(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __PC_CompoundType_id_cid = INT(name='cid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_CompoundType_id_sid = INT(name='sid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_CompoundType_id_xid = INT(name='xid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_CompoundType_id._cont = ASN1Dict([
        ('cid', __PC_CompoundType_id_cid),
        ('sid', __PC_CompoundType_id_sid),
        ('xid', __PC_CompoundType_id_xid),
        ])
    _PC_CompoundType_id._ext = None
    PC_CompoundType._cont = ASN1Dict([
        ('type', _PC_CompoundType_type),
        ('id', _PC_CompoundType_id),
        ])
    PC_CompoundType._ext = None
    
    #-----< PC-Count >-----#
    PC_Count = SEQ(name='PC-Count', mode=MODE_TYPE)
    _PC_Count_heavy_atom = INT(name='heavy-atom', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_Count_atom_chiral = INT(name='atom-chiral', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_Count_atom_chiral_def = INT(name='atom-chiral-def', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_Count_atom_chiral_undef = INT(name='atom-chiral-undef', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_Count_bond_chiral = INT(name='bond-chiral', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_Count_bond_chiral_def = INT(name='bond-chiral-def', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_Count_bond_chiral_undef = INT(name='bond-chiral-undef', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_Count_isotope_atom = INT(name='isotope-atom', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_Count_covalent_unit = INT(name='covalent-unit', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_Count_tautomers = INT(name='tautomers', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PC_Count._cont = ASN1Dict([
        ('heavy-atom', _PC_Count_heavy_atom),
        ('atom-chiral', _PC_Count_atom_chiral),
        ('atom-chiral-def', _PC_Count_atom_chiral_def),
        ('atom-chiral-undef', _PC_Count_atom_chiral_undef),
        ('bond-chiral', _PC_Count_bond_chiral),
        ('bond-chiral-def', _PC_Count_bond_chiral_def),
        ('bond-chiral-undef', _PC_Count_bond_chiral_undef),
        ('isotope-atom', _PC_Count_isotope_atom),
        ('covalent-unit', _PC_Count_covalent_unit),
        ('tautomers', _PC_Count_tautomers),
        ])
    PC_Count._ext = None
    
    #-----< PC-StereoGroup >-----#
    PC_StereoGroup = SEQ(name='PC-StereoGroup', mode=MODE_TYPE)
    _PC_StereoGroup_type = INT(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoGroup_type._cont = ASN1Dict([('absolute', 1), ('or', 2), ('and', 3), ('unknown', 255)])
    _PC_StereoGroup_aid = SEQ_OF(name='aid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_StereoGroup_aid__item_ = INT(name='_item_', mode=MODE_TYPE)
    _PC_StereoGroup_aid._cont = __PC_StereoGroup_aid__item_
    PC_StereoGroup._cont = ASN1Dict([
        ('type', _PC_StereoGroup_type),
        ('aid', _PC_StereoGroup_aid),
        ])
    PC_StereoGroup._ext = None
    
    #-----< PC-InfoData >-----#
    PC_InfoData = SEQ(name='PC-InfoData', mode=MODE_TYPE)
    _PC_InfoData_urn = SEQ(name='urn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-Urn')))
    _PC_InfoData_value = CHOICE(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __PC_InfoData_value_bval = BOOL(name='bval', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_InfoData_value_bvec = SEQ_OF(name='bvec', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PC_InfoData_value_bvec__item_ = BOOL(name='_item_', mode=MODE_TYPE)
    __PC_InfoData_value_bvec._cont = ___PC_InfoData_value_bvec__item_
    __PC_InfoData_value_ival = INT(name='ival', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_InfoData_value_ivec = SEQ_OF(name='ivec', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PC_InfoData_value_ivec__item_ = INT(name='_item_', mode=MODE_TYPE)
    __PC_InfoData_value_ivec._cont = ___PC_InfoData_value_ivec__item_
    __PC_InfoData_value_fval = REAL(name='fval', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    __PC_InfoData_value_fvec = SEQ_OF(name='fvec', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PC_InfoData_value_fvec__item_ = REAL(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('_IMPL_', 'REAL')))
    __PC_InfoData_value_fvec._cont = ___PC_InfoData_value_fvec__item_
    __PC_InfoData_value_sval = STR_VIS(name='sval', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_InfoData_value_slist = SEQ_OF(name='slist', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PC_InfoData_value_slist__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    __PC_InfoData_value_slist._cont = ___PC_InfoData_value_slist__item_
    __PC_InfoData_value_date = CHOICE(name='date', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    __PC_InfoData_value_binary = OCT_STR(name='binary', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_InfoData_value_bitlist = BIT_STR(name='bitlist', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_InfoData_value._cont = ASN1Dict([
        ('bval', __PC_InfoData_value_bval),
        ('bvec', __PC_InfoData_value_bvec),
        ('ival', __PC_InfoData_value_ival),
        ('ivec', __PC_InfoData_value_ivec),
        ('fval', __PC_InfoData_value_fval),
        ('fvec', __PC_InfoData_value_fvec),
        ('sval', __PC_InfoData_value_sval),
        ('slist', __PC_InfoData_value_slist),
        ('date', __PC_InfoData_value_date),
        ('binary', __PC_InfoData_value_binary),
        ('bitlist', __PC_InfoData_value_bitlist),
        ])
    _PC_InfoData_value._ext = None
    PC_InfoData._cont = ASN1Dict([
        ('urn', _PC_InfoData_urn),
        ('value', _PC_InfoData_value),
        ])
    PC_InfoData._ext = None
    
    #-----< PC-Urn >-----#
    PC_Urn = SEQ(name='PC-Urn', mode=MODE_TYPE)
    _PC_Urn_label = STR_VIS(name='label', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_Urn_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_Urn_datatype = INT(name='datatype', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-UrnDataType')), opt=True)
    _PC_Urn_parameters = STR_VIS(name='parameters', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_Urn_implementation = STR_VIS(name='implementation', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_Urn_version = STR_VIS(name='version', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_Urn_software = STR_VIS(name='software', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_Urn_source = STR_VIS(name='source', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_Urn_release = STR_VIS(name='release', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    PC_Urn._cont = ASN1Dict([
        ('label', _PC_Urn_label),
        ('name', _PC_Urn_name),
        ('datatype', _PC_Urn_datatype),
        ('parameters', _PC_Urn_parameters),
        ('implementation', _PC_Urn_implementation),
        ('version', _PC_Urn_version),
        ('software', _PC_Urn_software),
        ('source', _PC_Urn_source),
        ('release', _PC_Urn_release),
        ])
    PC_Urn._ext = None
    
    #-----< PC-UrnDataType >-----#
    PC_UrnDataType = INT(name='PC-UrnDataType', mode=MODE_TYPE)
    PC_UrnDataType._cont = ASN1Dict([('string', 1), ('stringlist', 2), ('int', 3), ('intvec', 4), ('uint', 5), ('uintvec', 6), ('double', 7), ('doublevec', 8), ('bool', 9), ('boolvec', 10), ('uint64', 11), ('binary', 12), ('url', 13), ('unicode', 14), ('date', 15), ('fingerprint', 16), ('unknown', 255)])
    
    #-----< PC-Coordinates >-----#
    PC_Coordinates = SEQ(name='PC-Coordinates', mode=MODE_TYPE)
    _PC_Coordinates_type = SEQ_OF(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_Coordinates_type__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-CoordinateType')))
    _PC_Coordinates_type._cont = __PC_Coordinates_type__item_
    _PC_Coordinates_aid = SEQ_OF(name='aid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_Coordinates_aid__item_ = INT(name='_item_', mode=MODE_TYPE)
    _PC_Coordinates_aid._cont = __PC_Coordinates_aid__item_
    _PC_Coordinates_conformers = SEQ_OF(name='conformers', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_Coordinates_conformers__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-Conformer')))
    _PC_Coordinates_conformers._cont = __PC_Coordinates_conformers__item_
    _PC_Coordinates_atomlabels = SEQ_OF(name='atomlabels', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_Coordinates_atomlabels__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-AtomString')))
    _PC_Coordinates_atomlabels._cont = __PC_Coordinates_atomlabels__item_
    _PC_Coordinates_data = SEQ_OF(name='data', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_Coordinates_data__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-InfoData')))
    _PC_Coordinates_data._cont = __PC_Coordinates_data__item_
    PC_Coordinates._cont = ASN1Dict([
        ('type', _PC_Coordinates_type),
        ('aid', _PC_Coordinates_aid),
        ('conformers', _PC_Coordinates_conformers),
        ('atomlabels', _PC_Coordinates_atomlabels),
        ('data', _PC_Coordinates_data),
        ])
    PC_Coordinates._ext = None
    
    #-----< PC-Conformer >-----#
    PC_Conformer = SEQ(name='PC-Conformer', mode=MODE_TYPE)
    _PC_Conformer_x = SEQ_OF(name='x', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_Conformer_x__item_ = REAL(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _PC_Conformer_x._cont = __PC_Conformer_x__item_
    _PC_Conformer_y = SEQ_OF(name='y', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_Conformer_y__item_ = REAL(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _PC_Conformer_y._cont = __PC_Conformer_y__item_
    _PC_Conformer_z = SEQ_OF(name='z', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_Conformer_z__item_ = REAL(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _PC_Conformer_z._cont = __PC_Conformer_z__item_
    _PC_Conformer_style = SEQ(name='style', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-DrawAnnotations')), opt=True)
    _PC_Conformer_data = SEQ_OF(name='data', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_Conformer_data__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-InfoData')))
    _PC_Conformer_data._cont = __PC_Conformer_data__item_
    PC_Conformer._cont = ASN1Dict([
        ('x', _PC_Conformer_x),
        ('y', _PC_Conformer_y),
        ('z', _PC_Conformer_z),
        ('style', _PC_Conformer_style),
        ('data', _PC_Conformer_data),
        ])
    PC_Conformer._ext = None
    
    #-----< PC-Conformers >-----#
    PC_Conformers = SEQ_OF(name='PC-Conformers', mode=MODE_TYPE)
    _PC_Conformers__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-Conformer')))
    PC_Conformers._cont = _PC_Conformers__item_
    
    #-----< PC-CoordinateType >-----#
    PC_CoordinateType = INT(name='PC-CoordinateType', mode=MODE_TYPE)
    PC_CoordinateType._cont = ASN1Dict([('twod', 1), ('threed', 2), ('submitted', 3), ('experimental', 4), ('computed', 5), ('standardized', 6), ('augmented', 7), ('aligned', 8), ('compact', 9), ('units-angstroms', 10), ('units-nanometers', 11), ('units-pixel', 12), ('units-points', 13), ('units-stdbonds', 14), ('units-unknown', 255)])
    
    #-----< PC-DrawAnnotations >-----#
    PC_DrawAnnotations = SEQ(name='PC-DrawAnnotations', mode=MODE_TYPE)
    _PC_DrawAnnotations_annotation = SEQ_OF(name='annotation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_DrawAnnotations_annotation__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-BondAnnotation')))
    _PC_DrawAnnotations_annotation._cont = __PC_DrawAnnotations_annotation__item_
    _PC_DrawAnnotations_aid1 = SEQ_OF(name='aid1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_DrawAnnotations_aid1__item_ = INT(name='_item_', mode=MODE_TYPE)
    _PC_DrawAnnotations_aid1._cont = __PC_DrawAnnotations_aid1__item_
    _PC_DrawAnnotations_aid2 = SEQ_OF(name='aid2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_DrawAnnotations_aid2__item_ = INT(name='_item_', mode=MODE_TYPE)
    _PC_DrawAnnotations_aid2._cont = __PC_DrawAnnotations_aid2__item_
    PC_DrawAnnotations._cont = ASN1Dict([
        ('annotation', _PC_DrawAnnotations_annotation),
        ('aid1', _PC_DrawAnnotations_aid1),
        ('aid2', _PC_DrawAnnotations_aid2),
        ])
    PC_DrawAnnotations._ext = None
    
    #-----< PC-BondAnnotation >-----#
    PC_BondAnnotation = INT(name='PC-BondAnnotation', mode=MODE_TYPE)
    PC_BondAnnotation._cont = ASN1Dict([('crossed', 1), ('dashed', 2), ('wavy', 3), ('dotted', 4), ('wedge-up', 5), ('wedge-down', 6), ('arrow', 7), ('aromatic', 8), ('resonance', 9), ('bold', 10), ('fischer', 11), ('closeContact', 12), ('unknown', 255)])
    
    #-----< PC-Atoms >-----#
    PC_Atoms = SEQ(name='PC-Atoms', mode=MODE_TYPE)
    _PC_Atoms_aid = SEQ_OF(name='aid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_Atoms_aid__item_ = INT(name='_item_', mode=MODE_TYPE)
    _PC_Atoms_aid._cont = __PC_Atoms_aid__item_
    _PC_Atoms_element = SEQ_OF(name='element', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_Atoms_element__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-Element')))
    _PC_Atoms_element._cont = __PC_Atoms_element__item_
    _PC_Atoms_label = SEQ_OF(name='label', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_Atoms_label__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-AtomString')))
    _PC_Atoms_label._cont = __PC_Atoms_label__item_
    _PC_Atoms_isotope = SEQ_OF(name='isotope', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_Atoms_isotope__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-AtomInt')))
    _PC_Atoms_isotope._cont = __PC_Atoms_isotope__item_
    _PC_Atoms_charge = SEQ_OF(name='charge', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_Atoms_charge__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-AtomInt')))
    _PC_Atoms_charge._cont = __PC_Atoms_charge__item_
    _PC_Atoms_radical = SEQ_OF(name='radical', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_Atoms_radical__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-AtomRadical')))
    _PC_Atoms_radical._cont = __PC_Atoms_radical__item_
    _PC_Atoms_source = SEQ_OF(name='source', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_Atoms_source__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-AtomSource')))
    _PC_Atoms_source._cont = __PC_Atoms_source__item_
    _PC_Atoms_comment = SEQ_OF(name='comment', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PC_Atoms_comment__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-AtomString')))
    _PC_Atoms_comment._cont = __PC_Atoms_comment__item_
    PC_Atoms._cont = ASN1Dict([
        ('aid', _PC_Atoms_aid),
        ('element', _PC_Atoms_element),
        ('label', _PC_Atoms_label),
        ('isotope', _PC_Atoms_isotope),
        ('charge', _PC_Atoms_charge),
        ('radical', _PC_Atoms_radical),
        ('source', _PC_Atoms_source),
        ('comment', _PC_Atoms_comment),
        ])
    PC_Atoms._ext = None
    
    #-----< PC-AtomSource >-----#
    PC_AtomSource = SEQ(name='PC-AtomSource', mode=MODE_TYPE)
    _PC_AtomSource_aid = INT(name='aid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_AtomSource_source = SEQ(name='source', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-MMDBSource')))
    PC_AtomSource._cont = ASN1Dict([
        ('aid', _PC_AtomSource_aid),
        ('source', _PC_AtomSource_source),
        ])
    PC_AtomSource._ext = None
    
    #-----< PC-AtomInt >-----#
    PC_AtomInt = SEQ(name='PC-AtomInt', mode=MODE_TYPE)
    _PC_AtomInt_aid = INT(name='aid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_AtomInt_value = INT(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PC_AtomInt._cont = ASN1Dict([
        ('aid', _PC_AtomInt_aid),
        ('value', _PC_AtomInt_value),
        ])
    PC_AtomInt._ext = None
    
    #-----< PC-AtomString >-----#
    PC_AtomString = SEQ(name='PC-AtomString', mode=MODE_TYPE)
    _PC_AtomString_aid = INT(name='aid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_AtomString_value = STR_VIS(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PC_AtomString._cont = ASN1Dict([
        ('aid', _PC_AtomString_aid),
        ('value', _PC_AtomString_value),
        ])
    PC_AtomString._ext = None
    
    #-----< PC-AtomRadical >-----#
    PC_AtomRadical = SEQ(name='PC-AtomRadical', mode=MODE_TYPE)
    _PC_AtomRadical_aid = INT(name='aid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_AtomRadical_type = INT(name='type', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_AtomRadical_type._cont = ASN1Dict([('singlet', 1), ('doublet', 2), ('triplet', 3), ('quartet', 4), ('quintet', 5), ('hextet', 6), ('heptet', 7), ('octet', 8), ('none', 255)])
    PC_AtomRadical._cont = ASN1Dict([
        ('aid', _PC_AtomRadical_aid),
        ('type', _PC_AtomRadical_type),
        ])
    PC_AtomRadical._ext = None
    
    #-----< PC-Element >-----#
    PC_Element = INT(name='PC-Element', mode=MODE_TYPE)
    PC_Element._cont = ASN1Dict([('a', 255), ('d', 254), ('r', 253), ('lp', 252), ('h', 1), ('he', 2), ('li', 3), ('be', 4), ('b', 5), ('c', 6), ('n', 7), ('o', 8), ('f', 9), ('ne', 10), ('na', 11), ('mg', 12), ('al', 13), ('si', 14), ('p', 15), ('s', 16), ('cl', 17), ('ar', 18), ('k', 19), ('ca', 20), ('sc', 21), ('ti', 22), ('v', 23), ('cr', 24), ('mn', 25), ('fe', 26), ('co', 27), ('ni', 28), ('cu', 29), ('zn', 30), ('ga', 31), ('ge', 32), ('as', 33), ('se', 34), ('br', 35), ('kr', 36), ('rb', 37), ('sr', 38), ('y', 39), ('zr', 40), ('nb', 41), ('mo', 42), ('tc', 43), ('ru', 44), ('rh', 45), ('pd', 46), ('ag', 47), ('cd', 48), ('in', 49), ('sn', 50), ('sb', 51), ('te', 52), ('i', 53), ('xe', 54), ('cs', 55), ('ba', 56), ('la', 57), ('ce', 58), ('pr', 59), ('nd', 60), ('pm', 61), ('sm', 62), ('eu', 63), ('gd', 64), ('tb', 65), ('dy', 66), ('ho', 67), ('er', 68), ('tm', 69), ('yb', 70), ('lu', 71), ('hf', 72), ('ta', 73), ('w', 74), ('re', 75), ('os', 76), ('ir', 77), ('pt', 78), ('au', 79), ('hg', 80), ('tl', 81), ('pb', 82), ('bi', 83), ('po', 84), ('at', 85), ('rn', 86), ('fr', 87), ('ra', 88), ('ac', 89), ('th', 90), ('pa', 91), ('u', 92), ('np', 93), ('pu', 94), ('am', 95), ('cm', 96), ('bk', 97), ('cf', 98), ('es', 99), ('fm', 100), ('md', 101), ('no', 102), ('lr', 103), ('rf', 104), ('db', 105), ('sg', 106), ('bh', 107), ('hs', 108), ('mt', 109), ('ds', 110), ('rg', 111)])
    
    #-----< PC-Bonds >-----#
    PC_Bonds = SEQ(name='PC-Bonds', mode=MODE_TYPE)
    _PC_Bonds_aid1 = SEQ_OF(name='aid1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_Bonds_aid1__item_ = INT(name='_item_', mode=MODE_TYPE)
    _PC_Bonds_aid1._cont = __PC_Bonds_aid1__item_
    _PC_Bonds_aid2 = SEQ_OF(name='aid2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_Bonds_aid2__item_ = INT(name='_item_', mode=MODE_TYPE)
    _PC_Bonds_aid2._cont = __PC_Bonds_aid2__item_
    _PC_Bonds_order = SEQ_OF(name='order', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PC_Bonds_order__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-BondType')))
    _PC_Bonds_order._cont = __PC_Bonds_order__item_
    PC_Bonds._cont = ASN1Dict([
        ('aid1', _PC_Bonds_aid1),
        ('aid2', _PC_Bonds_aid2),
        ('order', _PC_Bonds_order),
        ])
    PC_Bonds._ext = None
    
    #-----< PC-BondType >-----#
    PC_BondType = INT(name='PC-BondType', mode=MODE_TYPE)
    PC_BondType._cont = ASN1Dict([('single', 1), ('double', 2), ('triple', 3), ('quadruple', 4), ('dative', 5), ('complex', 6), ('ionic', 7), ('unknown', 255)])
    
    #-----< PC-StereoCenter >-----#
    PC_StereoCenter = CHOICE(name='PC-StereoCenter', mode=MODE_TYPE)
    _PC_StereoCenter_tetrahedral = SEQ(name='tetrahedral', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-StereoTetrahedral')))
    _PC_StereoCenter_planar = SEQ(name='planar', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-StereoPlanar')))
    _PC_StereoCenter_squareplanar = SEQ(name='squareplanar', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-StereoSquarePlanar')))
    _PC_StereoCenter_octahedral = SEQ(name='octahedral', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-StereoOctahedral')))
    _PC_StereoCenter_bipyramid = SEQ(name='bipyramid', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-StereoTrigonalBiPyramid')))
    _PC_StereoCenter_tshape = SEQ(name='tshape', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-StereoTShape')))
    _PC_StereoCenter_pentagonal = SEQ(name='pentagonal', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-PCSubstance', 'PC-StereoPentagonalBiPyramid')))
    PC_StereoCenter._cont = ASN1Dict([
        ('tetrahedral', _PC_StereoCenter_tetrahedral),
        ('planar', _PC_StereoCenter_planar),
        ('squareplanar', _PC_StereoCenter_squareplanar),
        ('octahedral', _PC_StereoCenter_octahedral),
        ('bipyramid', _PC_StereoCenter_bipyramid),
        ('tshape', _PC_StereoCenter_tshape),
        ('pentagonal', _PC_StereoCenter_pentagonal),
        ])
    PC_StereoCenter._ext = None
    
    #-----< PC-StereoTetrahedral >-----#
    PC_StereoTetrahedral = SEQ(name='PC-StereoTetrahedral', mode=MODE_TYPE)
    _PC_StereoTetrahedral_center = INT(name='center', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoTetrahedral_above = INT(name='above', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoTetrahedral_top = INT(name='top', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoTetrahedral_bottom = INT(name='bottom', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoTetrahedral_below = INT(name='below', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoTetrahedral_parity = INT(name='parity', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_StereoTetrahedral_parity._cont = ASN1Dict([('clockwise', 1), ('counterclockwise', 2), ('any', 3), ('unknown', 255)])
    _PC_StereoTetrahedral_type = INT(name='type', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_StereoTetrahedral_type._cont = ASN1Dict([('tetrahedral', 1), ('cumulenic', 2), ('biaryl', 3)])
    PC_StereoTetrahedral._cont = ASN1Dict([
        ('center', _PC_StereoTetrahedral_center),
        ('above', _PC_StereoTetrahedral_above),
        ('top', _PC_StereoTetrahedral_top),
        ('bottom', _PC_StereoTetrahedral_bottom),
        ('below', _PC_StereoTetrahedral_below),
        ('parity', _PC_StereoTetrahedral_parity),
        ('type', _PC_StereoTetrahedral_type),
        ])
    PC_StereoTetrahedral._ext = None
    
    #-----< PC-StereoPlanar >-----#
    PC_StereoPlanar = SEQ(name='PC-StereoPlanar', mode=MODE_TYPE)
    _PC_StereoPlanar_left = INT(name='left', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoPlanar_ltop = INT(name='ltop', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoPlanar_lbottom = INT(name='lbottom', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoPlanar_right = INT(name='right', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoPlanar_rtop = INT(name='rtop', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoPlanar_rbottom = INT(name='rbottom', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoPlanar_parity = INT(name='parity', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_StereoPlanar_parity._cont = ASN1Dict([('same', 1), ('opposite', 2), ('any', 3), ('unknown', 255)])
    _PC_StereoPlanar_type = INT(name='type', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_StereoPlanar_type._cont = ASN1Dict([('planar', 1), ('cumulenic', 2)])
    PC_StereoPlanar._cont = ASN1Dict([
        ('left', _PC_StereoPlanar_left),
        ('ltop', _PC_StereoPlanar_ltop),
        ('lbottom', _PC_StereoPlanar_lbottom),
        ('right', _PC_StereoPlanar_right),
        ('rtop', _PC_StereoPlanar_rtop),
        ('rbottom', _PC_StereoPlanar_rbottom),
        ('parity', _PC_StereoPlanar_parity),
        ('type', _PC_StereoPlanar_type),
        ])
    PC_StereoPlanar._ext = None
    
    #-----< PC-StereoSquarePlanar >-----#
    PC_StereoSquarePlanar = SEQ(name='PC-StereoSquarePlanar', mode=MODE_TYPE)
    _PC_StereoSquarePlanar_center = INT(name='center', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoSquarePlanar_lbelow = INT(name='lbelow', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoSquarePlanar_rbelow = INT(name='rbelow', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoSquarePlanar_labove = INT(name='labove', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoSquarePlanar_rabove = INT(name='rabove', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoSquarePlanar_parity = INT(name='parity', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PC_StereoSquarePlanar_parity._cont = ASN1Dict([('u-shape', 1), ('z-shape', 2), ('x-shape', 3), ('any', 4), ('unknown', 255)])
    PC_StereoSquarePlanar._cont = ASN1Dict([
        ('center', _PC_StereoSquarePlanar_center),
        ('lbelow', _PC_StereoSquarePlanar_lbelow),
        ('rbelow', _PC_StereoSquarePlanar_rbelow),
        ('labove', _PC_StereoSquarePlanar_labove),
        ('rabove', _PC_StereoSquarePlanar_rabove),
        ('parity', _PC_StereoSquarePlanar_parity),
        ])
    PC_StereoSquarePlanar._ext = None
    
    #-----< PC-StereoOctahedral >-----#
    PC_StereoOctahedral = SEQ(name='PC-StereoOctahedral', mode=MODE_TYPE)
    _PC_StereoOctahedral_center = INT(name='center', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoOctahedral_top = INT(name='top', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoOctahedral_bottom = INT(name='bottom', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoOctahedral_labove = INT(name='labove', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoOctahedral_lbelow = INT(name='lbelow', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoOctahedral_rabove = INT(name='rabove', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoOctahedral_rbelow = INT(name='rbelow', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PC_StereoOctahedral._cont = ASN1Dict([
        ('center', _PC_StereoOctahedral_center),
        ('top', _PC_StereoOctahedral_top),
        ('bottom', _PC_StereoOctahedral_bottom),
        ('labove', _PC_StereoOctahedral_labove),
        ('lbelow', _PC_StereoOctahedral_lbelow),
        ('rabove', _PC_StereoOctahedral_rabove),
        ('rbelow', _PC_StereoOctahedral_rbelow),
        ])
    PC_StereoOctahedral._ext = None
    
    #-----< PC-StereoTrigonalBiPyramid >-----#
    PC_StereoTrigonalBiPyramid = SEQ(name='PC-StereoTrigonalBiPyramid', mode=MODE_TYPE)
    _PC_StereoTrigonalBiPyramid_center = INT(name='center', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoTrigonalBiPyramid_above = INT(name='above', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoTrigonalBiPyramid_below = INT(name='below', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoTrigonalBiPyramid_top = INT(name='top', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoTrigonalBiPyramid_bottom = INT(name='bottom', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoTrigonalBiPyramid_right = INT(name='right', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PC_StereoTrigonalBiPyramid._cont = ASN1Dict([
        ('center', _PC_StereoTrigonalBiPyramid_center),
        ('above', _PC_StereoTrigonalBiPyramid_above),
        ('below', _PC_StereoTrigonalBiPyramid_below),
        ('top', _PC_StereoTrigonalBiPyramid_top),
        ('bottom', _PC_StereoTrigonalBiPyramid_bottom),
        ('right', _PC_StereoTrigonalBiPyramid_right),
        ])
    PC_StereoTrigonalBiPyramid._ext = None
    
    #-----< PC-StereoTShape >-----#
    PC_StereoTShape = SEQ(name='PC-StereoTShape', mode=MODE_TYPE)
    _PC_StereoTShape_center = INT(name='center', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoTShape_top = INT(name='top', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoTShape_bottom = INT(name='bottom', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoTShape_above = INT(name='above', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PC_StereoTShape._cont = ASN1Dict([
        ('center', _PC_StereoTShape_center),
        ('top', _PC_StereoTShape_top),
        ('bottom', _PC_StereoTShape_bottom),
        ('above', _PC_StereoTShape_above),
        ])
    PC_StereoTShape._ext = None
    
    #-----< PC-StereoPentagonalBiPyramid >-----#
    PC_StereoPentagonalBiPyramid = SEQ(name='PC-StereoPentagonalBiPyramid', mode=MODE_TYPE)
    _PC_StereoPentagonalBiPyramid_center = INT(name='center', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoPentagonalBiPyramid_top = INT(name='top', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoPentagonalBiPyramid_bottom = INT(name='bottom', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoPentagonalBiPyramid_left = INT(name='left', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoPentagonalBiPyramid_labove = INT(name='labove', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoPentagonalBiPyramid_lbelow = INT(name='lbelow', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoPentagonalBiPyramid_rabove = INT(name='rabove', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PC_StereoPentagonalBiPyramid_rbelow = INT(name='rbelow', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PC_StereoPentagonalBiPyramid._cont = ASN1Dict([
        ('center', _PC_StereoPentagonalBiPyramid_center),
        ('top', _PC_StereoPentagonalBiPyramid_top),
        ('bottom', _PC_StereoPentagonalBiPyramid_bottom),
        ('left', _PC_StereoPentagonalBiPyramid_left),
        ('labove', _PC_StereoPentagonalBiPyramid_labove),
        ('lbelow', _PC_StereoPentagonalBiPyramid_lbelow),
        ('rabove', _PC_StereoPentagonalBiPyramid_rabove),
        ('rbelow', _PC_StereoPentagonalBiPyramid_rbelow),
        ])
    PC_StereoPentagonalBiPyramid._ext = None
    
    _all_ = [
        _PC_Substance_sid,
        _PC_Substance_source,
        __PC_Substance_pub__item_,
        _PC_Substance_pub,
        __PC_Substance_synonyms__item_,
        _PC_Substance_synonyms,
        __PC_Substance_comment__item_,
        _PC_Substance_comment,
        __PC_Substance_xref__item_,
        _PC_Substance_xref,
        _PC_Substance_compound,
        PC_Substance,
        _PC_Substances__item_,
        PC_Substances,
        _PC_ID_id,
        _PC_ID_version,
        PC_ID,
        _PC_Source_individual,
        _PC_Source_db,
        _PC_Source_mmdb,
        PC_Source,
        _PC_DBTracking_name,
        _PC_DBTracking_source_id,
        _PC_DBTracking_date,
        _PC_DBTracking_description,
        _PC_DBTracking_pub,
        PC_DBTracking,
        _PC_MMDBSource_mmdb_id,
        _PC_MMDBSource_molecule_id,
        __PC_MMDBSource_molecule_name__item_,
        _PC_MMDBSource_molecule_name,
        _PC_MMDBSource_residue_id,
        _PC_MMDBSource_residue_name,
        _PC_MMDBSource_atom_id,
        _PC_MMDBSource_atom_name,
        PC_MMDBSource,
        _PC_XRefData_regid,
        _PC_XRefData_rn,
        _PC_XRefData_mesh,
        _PC_XRefData_pmid,
        _PC_XRefData_gi,
        _PC_XRefData_mmdb,
        _PC_XRefData_sid,
        _PC_XRefData_cid,
        _PC_XRefData_dburl,
        _PC_XRefData_sburl,
        _PC_XRefData_asurl,
        _PC_XRefData_protein_gi,
        _PC_XRefData_nucleotide_gi,
        _PC_XRefData_taxonomy,
        _PC_XRefData_aid,
        _PC_XRefData_mim,
        _PC_XRefData_gene,
        _PC_XRefData_probe,
        _PC_XRefData_biosystem,
        _PC_XRefData_geogse,
        _PC_XRefData_geogsm,
        _PC_XRefData_patent,
        PC_XRefData,
        _PC_Compound_id,
        _PC_Compound_atoms,
        _PC_Compound_bonds,
        __PC_Compound_stereo__item_,
        _PC_Compound_stereo,
        __PC_Compound_coords__item_,
        _PC_Compound_coords,
        _PC_Compound_charge,
        __PC_Compound_props__item_,
        _PC_Compound_props,
        __PC_Compound_stereogroups__item_,
        _PC_Compound_stereogroups,
        _PC_Compound_count,
        _PC_Compound_vbalt,
        PC_Compound,
        _PC_Compounds__item_,
        PC_Compounds,
        _PC_CompoundType_type,
        __PC_CompoundType_id_cid,
        __PC_CompoundType_id_sid,
        __PC_CompoundType_id_xid,
        _PC_CompoundType_id,
        PC_CompoundType,
        _PC_Count_heavy_atom,
        _PC_Count_atom_chiral,
        _PC_Count_atom_chiral_def,
        _PC_Count_atom_chiral_undef,
        _PC_Count_bond_chiral,
        _PC_Count_bond_chiral_def,
        _PC_Count_bond_chiral_undef,
        _PC_Count_isotope_atom,
        _PC_Count_covalent_unit,
        _PC_Count_tautomers,
        PC_Count,
        _PC_StereoGroup_type,
        __PC_StereoGroup_aid__item_,
        _PC_StereoGroup_aid,
        PC_StereoGroup,
        _PC_InfoData_urn,
        __PC_InfoData_value_bval,
        ___PC_InfoData_value_bvec__item_,
        __PC_InfoData_value_bvec,
        __PC_InfoData_value_ival,
        ___PC_InfoData_value_ivec__item_,
        __PC_InfoData_value_ivec,
        __PC_InfoData_value_fval,
        ___PC_InfoData_value_fvec__item_,
        __PC_InfoData_value_fvec,
        __PC_InfoData_value_sval,
        ___PC_InfoData_value_slist__item_,
        __PC_InfoData_value_slist,
        __PC_InfoData_value_date,
        __PC_InfoData_value_binary,
        __PC_InfoData_value_bitlist,
        _PC_InfoData_value,
        PC_InfoData,
        _PC_Urn_label,
        _PC_Urn_name,
        _PC_Urn_datatype,
        _PC_Urn_parameters,
        _PC_Urn_implementation,
        _PC_Urn_version,
        _PC_Urn_software,
        _PC_Urn_source,
        _PC_Urn_release,
        PC_Urn,
        PC_UrnDataType,
        __PC_Coordinates_type__item_,
        _PC_Coordinates_type,
        __PC_Coordinates_aid__item_,
        _PC_Coordinates_aid,
        __PC_Coordinates_conformers__item_,
        _PC_Coordinates_conformers,
        __PC_Coordinates_atomlabels__item_,
        _PC_Coordinates_atomlabels,
        __PC_Coordinates_data__item_,
        _PC_Coordinates_data,
        PC_Coordinates,
        __PC_Conformer_x__item_,
        _PC_Conformer_x,
        __PC_Conformer_y__item_,
        _PC_Conformer_y,
        __PC_Conformer_z__item_,
        _PC_Conformer_z,
        _PC_Conformer_style,
        __PC_Conformer_data__item_,
        _PC_Conformer_data,
        PC_Conformer,
        _PC_Conformers__item_,
        PC_Conformers,
        PC_CoordinateType,
        __PC_DrawAnnotations_annotation__item_,
        _PC_DrawAnnotations_annotation,
        __PC_DrawAnnotations_aid1__item_,
        _PC_DrawAnnotations_aid1,
        __PC_DrawAnnotations_aid2__item_,
        _PC_DrawAnnotations_aid2,
        PC_DrawAnnotations,
        PC_BondAnnotation,
        __PC_Atoms_aid__item_,
        _PC_Atoms_aid,
        __PC_Atoms_element__item_,
        _PC_Atoms_element,
        __PC_Atoms_label__item_,
        _PC_Atoms_label,
        __PC_Atoms_isotope__item_,
        _PC_Atoms_isotope,
        __PC_Atoms_charge__item_,
        _PC_Atoms_charge,
        __PC_Atoms_radical__item_,
        _PC_Atoms_radical,
        __PC_Atoms_source__item_,
        _PC_Atoms_source,
        __PC_Atoms_comment__item_,
        _PC_Atoms_comment,
        PC_Atoms,
        _PC_AtomSource_aid,
        _PC_AtomSource_source,
        PC_AtomSource,
        _PC_AtomInt_aid,
        _PC_AtomInt_value,
        PC_AtomInt,
        _PC_AtomString_aid,
        _PC_AtomString_value,
        PC_AtomString,
        _PC_AtomRadical_aid,
        _PC_AtomRadical_type,
        PC_AtomRadical,
        PC_Element,
        __PC_Bonds_aid1__item_,
        _PC_Bonds_aid1,
        __PC_Bonds_aid2__item_,
        _PC_Bonds_aid2,
        __PC_Bonds_order__item_,
        _PC_Bonds_order,
        PC_Bonds,
        PC_BondType,
        _PC_StereoCenter_tetrahedral,
        _PC_StereoCenter_planar,
        _PC_StereoCenter_squareplanar,
        _PC_StereoCenter_octahedral,
        _PC_StereoCenter_bipyramid,
        _PC_StereoCenter_tshape,
        _PC_StereoCenter_pentagonal,
        PC_StereoCenter,
        _PC_StereoTetrahedral_center,
        _PC_StereoTetrahedral_above,
        _PC_StereoTetrahedral_top,
        _PC_StereoTetrahedral_bottom,
        _PC_StereoTetrahedral_below,
        _PC_StereoTetrahedral_parity,
        _PC_StereoTetrahedral_type,
        PC_StereoTetrahedral,
        _PC_StereoPlanar_left,
        _PC_StereoPlanar_ltop,
        _PC_StereoPlanar_lbottom,
        _PC_StereoPlanar_right,
        _PC_StereoPlanar_rtop,
        _PC_StereoPlanar_rbottom,
        _PC_StereoPlanar_parity,
        _PC_StereoPlanar_type,
        PC_StereoPlanar,
        _PC_StereoSquarePlanar_center,
        _PC_StereoSquarePlanar_lbelow,
        _PC_StereoSquarePlanar_rbelow,
        _PC_StereoSquarePlanar_labove,
        _PC_StereoSquarePlanar_rabove,
        _PC_StereoSquarePlanar_parity,
        PC_StereoSquarePlanar,
        _PC_StereoOctahedral_center,
        _PC_StereoOctahedral_top,
        _PC_StereoOctahedral_bottom,
        _PC_StereoOctahedral_labove,
        _PC_StereoOctahedral_lbelow,
        _PC_StereoOctahedral_rabove,
        _PC_StereoOctahedral_rbelow,
        PC_StereoOctahedral,
        _PC_StereoTrigonalBiPyramid_center,
        _PC_StereoTrigonalBiPyramid_above,
        _PC_StereoTrigonalBiPyramid_below,
        _PC_StereoTrigonalBiPyramid_top,
        _PC_StereoTrigonalBiPyramid_bottom,
        _PC_StereoTrigonalBiPyramid_right,
        PC_StereoTrigonalBiPyramid,
        _PC_StereoTShape_center,
        _PC_StereoTShape_top,
        _PC_StereoTShape_bottom,
        _PC_StereoTShape_above,
        PC_StereoTShape,
        _PC_StereoPentagonalBiPyramid_center,
        _PC_StereoPentagonalBiPyramid_top,
        _PC_StereoPentagonalBiPyramid_bottom,
        _PC_StereoPentagonalBiPyramid_left,
        _PC_StereoPentagonalBiPyramid_labove,
        _PC_StereoPentagonalBiPyramid_lbelow,
        _PC_StereoPentagonalBiPyramid_rabove,
        _PC_StereoPentagonalBiPyramid_rbelow,
        PC_StereoPentagonalBiPyramid,
    ]

class NCBI_Project:

    _name_  = 'NCBI-Project'
    _oid_   = []
    
    _obj_ = [
        'Project',
        'Project-item',
        'Project-descr',
        'Projdesc',
        'Project-id',
        ]
    _type_ = [
        'Project',
        'Project-item',
        'Project-descr',
        'Projdesc',
        'Project-id',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Project >-----#
    Project = SEQ(name='Project', mode=MODE_TYPE)
    _Project_descr = SEQ(name='descr', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Project', 'Project-descr')), opt=True)
    _Project_data = CHOICE(name='data', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Project', 'Project-item')))
    Project._cont = ASN1Dict([
        ('descr', _Project_descr),
        ('data', _Project_data),
        ])
    Project._ext = None
    
    #-----< Project-item >-----#
    Project_item = CHOICE(name='Project-item', mode=MODE_TYPE)
    _Project_item_pmuid = SET_OF(name='pmuid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_item_pmuid__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Project_item_pmuid._cont = __Project_item_pmuid__item_
    _Project_item_protuid = SET_OF(name='protuid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_item_protuid__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Project_item_protuid._cont = __Project_item_protuid__item_
    _Project_item_nucuid = SET_OF(name='nucuid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_item_nucuid__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Project_item_nucuid._cont = __Project_item_nucuid__item_
    _Project_item_sequid = SET_OF(name='sequid', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_item_sequid__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Project_item_sequid._cont = __Project_item_sequid__item_
    _Project_item_genomeuid = SET_OF(name='genomeuid', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_item_genomeuid__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Project_item_genomeuid._cont = __Project_item_genomeuid__item_
    _Project_item_structuid = SET_OF(name='structuid', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_item_structuid__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Project_item_structuid._cont = __Project_item_structuid__item_
    _Project_item_pmid = SET_OF(name='pmid', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_item_pmid__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Biblio', 'PubMedId')))
    _Project_item_pmid._cont = __Project_item_pmid__item_
    _Project_item_protid = SET_OF(name='protid', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_item_protid__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Project_item_protid._cont = __Project_item_protid__item_
    _Project_item_nucid = SET_OF(name='nucid', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_item_nucid__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Project_item_nucid._cont = __Project_item_nucid__item_
    _Project_item_seqid = SET_OF(name='seqid', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_item_seqid__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Project_item_seqid._cont = __Project_item_seqid__item_
    _Project_item_genomeid = SET_OF(name='genomeid', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_item_genomeid__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Project_item_genomeid._cont = __Project_item_genomeid__item_
    _Project_item_structid = NULL(name='structid', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Project_item_pment = SET_OF(name='pment', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_item_pment__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PubMed', 'Pubmed-entry')))
    _Project_item_pment._cont = __Project_item_pment__item_
    _Project_item_protent = SET_OF(name='protent', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_item_protent__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')))
    _Project_item_protent._cont = __Project_item_protent__item_
    _Project_item_nucent = SET_OF(name='nucent', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_item_nucent__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')))
    _Project_item_nucent._cont = __Project_item_nucent__item_
    _Project_item_seqent = SET_OF(name='seqent', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_item_seqent__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')))
    _Project_item_seqent._cont = __Project_item_seqent__item_
    _Project_item_genomeent = SET_OF(name='genomeent', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_item_genomeent__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')))
    _Project_item_genomeent._cont = __Project_item_genomeent__item_
    _Project_item_structent = NULL(name='structent', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Project_item_seqannot = SET_OF(name='seqannot', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_item_seqannot__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Seq-annot')))
    _Project_item_seqannot._cont = __Project_item_seqannot__item_
    _Project_item_loc = SET_OF(name='loc', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_item_loc__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Project_item_loc._cont = __Project_item_loc__item_
    _Project_item_proj = SET_OF(name='proj', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_item_proj__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Project', 'Project')))
    _Project_item_proj._cont = __Project_item_proj__item_
    Project_item._cont = ASN1Dict([
        ('pmuid', _Project_item_pmuid),
        ('protuid', _Project_item_protuid),
        ('nucuid', _Project_item_nucuid),
        ('sequid', _Project_item_sequid),
        ('genomeuid', _Project_item_genomeuid),
        ('structuid', _Project_item_structuid),
        ('pmid', _Project_item_pmid),
        ('protid', _Project_item_protid),
        ('nucid', _Project_item_nucid),
        ('seqid', _Project_item_seqid),
        ('genomeid', _Project_item_genomeid),
        ('structid', _Project_item_structid),
        ('pment', _Project_item_pment),
        ('protent', _Project_item_protent),
        ('nucent', _Project_item_nucent),
        ('seqent', _Project_item_seqent),
        ('genomeent', _Project_item_genomeent),
        ('structent', _Project_item_structent),
        ('seqannot', _Project_item_seqannot),
        ('loc', _Project_item_loc),
        ('proj', _Project_item_proj),
        ])
    Project_item._ext = None
    
    #-----< Project-descr >-----#
    Project_descr = SEQ(name='Project-descr', mode=MODE_TYPE)
    _Project_descr_id = SET_OF(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Project_descr_id__item_ = STR_VIS(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Project', 'Project-id')))
    _Project_descr_id._cont = __Project_descr_id__item_
    _Project_descr_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Project_descr_descr = SET_OF(name='descr', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Project_descr_descr__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Project', 'Projdesc')))
    _Project_descr_descr._cont = __Project_descr_descr__item_
    Project_descr._cont = ASN1Dict([
        ('id', _Project_descr_id),
        ('name', _Project_descr_name),
        ('descr', _Project_descr_descr),
        ])
    Project_descr._ext = None
    
    #-----< Projdesc >-----#
    Projdesc = CHOICE(name='Projdesc', mode=MODE_TYPE)
    _Projdesc_pub = SEQ(name='pub', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Pubdesc')))
    _Projdesc_date = CHOICE(name='date', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    _Projdesc_comment = STR_VIS(name='comment', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Projdesc_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Projdesc._cont = ASN1Dict([
        ('pub', _Projdesc_pub),
        ('date', _Projdesc_date),
        ('comment', _Projdesc_comment),
        ('title', _Projdesc_title),
        ])
    Projdesc._ext = None
    
    #-----< Project-id >-----#
    Project_id = STR_VIS(name='Project-id', mode=MODE_TYPE)
    
    _all_ = [
        _Project_descr,
        _Project_data,
        Project,
        __Project_item_pmuid__item_,
        _Project_item_pmuid,
        __Project_item_protuid__item_,
        _Project_item_protuid,
        __Project_item_nucuid__item_,
        _Project_item_nucuid,
        __Project_item_sequid__item_,
        _Project_item_sequid,
        __Project_item_genomeuid__item_,
        _Project_item_genomeuid,
        __Project_item_structuid__item_,
        _Project_item_structuid,
        __Project_item_pmid__item_,
        _Project_item_pmid,
        __Project_item_protid__item_,
        _Project_item_protid,
        __Project_item_nucid__item_,
        _Project_item_nucid,
        __Project_item_seqid__item_,
        _Project_item_seqid,
        __Project_item_genomeid__item_,
        _Project_item_genomeid,
        _Project_item_structid,
        __Project_item_pment__item_,
        _Project_item_pment,
        __Project_item_protent__item_,
        _Project_item_protent,
        __Project_item_nucent__item_,
        _Project_item_nucent,
        __Project_item_seqent__item_,
        _Project_item_seqent,
        __Project_item_genomeent__item_,
        _Project_item_genomeent,
        _Project_item_structent,
        __Project_item_seqannot__item_,
        _Project_item_seqannot,
        __Project_item_loc__item_,
        _Project_item_loc,
        __Project_item_proj__item_,
        _Project_item_proj,
        Project_item,
        __Project_descr_id__item_,
        _Project_descr_id,
        _Project_descr_name,
        __Project_descr_descr__item_,
        _Project_descr_descr,
        Project_descr,
        _Projdesc_pub,
        _Projdesc_date,
        _Projdesc_comment,
        _Projdesc_title,
        Projdesc,
        Project_id,
    ]

class NCBI_Pub:

    _name_  = 'NCBI-Pub'
    _oid_   = []
    
    _obj_ = [
        'Pub',
        'Pub-equiv',
        'Pub-set',
        ]
    _type_ = [
        'Pub',
        'Pub-equiv',
        'Pub-set',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Pub >-----#
    Pub = CHOICE(name='Pub', mode=MODE_TYPE)
    _Pub_gen = SEQ(name='gen', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Cit-gen')))
    _Pub_sub = SEQ(name='sub', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Cit-sub')))
    _Pub_medline = SEQ(name='medline', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Medline', 'Medline-entry')))
    _Pub_muid = INT(name='muid', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Pub_article = SEQ(name='article', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Cit-art')))
    _Pub_journal = SEQ(name='journal', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Cit-jour')))
    _Pub_book = SEQ(name='book', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Cit-book')))
    _Pub_proc = SEQ(name='proc', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Cit-proc')))
    _Pub_patent = SEQ(name='patent', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Cit-pat')))
    _Pub_pat_id = SEQ(name='pat-id', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Id-pat')))
    _Pub_man = SEQ(name='man', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Cit-let')))
    _Pub_equiv = SET_OF(name='equiv', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Pub', 'Pub-equiv')))
    _Pub_pmid = INT(name='pmid', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'PubMedId')))
    Pub._cont = ASN1Dict([
        ('gen', _Pub_gen),
        ('sub', _Pub_sub),
        ('medline', _Pub_medline),
        ('muid', _Pub_muid),
        ('article', _Pub_article),
        ('journal', _Pub_journal),
        ('book', _Pub_book),
        ('proc', _Pub_proc),
        ('patent', _Pub_patent),
        ('pat-id', _Pub_pat_id),
        ('man', _Pub_man),
        ('equiv', _Pub_equiv),
        ('pmid', _Pub_pmid),
        ])
    Pub._ext = None
    
    #-----< Pub-equiv >-----#
    Pub_equiv = SET_OF(name='Pub-equiv', mode=MODE_TYPE)
    _Pub_equiv__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Pub', 'Pub')))
    Pub_equiv._cont = _Pub_equiv__item_
    
    #-----< Pub-set >-----#
    Pub_set = CHOICE(name='Pub-set', mode=MODE_TYPE)
    _Pub_set_pub = SET_OF(name='pub', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Pub_set_pub__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Pub', 'Pub')))
    _Pub_set_pub._cont = __Pub_set_pub__item_
    _Pub_set_medline = SET_OF(name='medline', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Pub_set_medline__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Medline', 'Medline-entry')))
    _Pub_set_medline._cont = __Pub_set_medline__item_
    _Pub_set_article = SET_OF(name='article', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Pub_set_article__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Biblio', 'Cit-art')))
    _Pub_set_article._cont = __Pub_set_article__item_
    _Pub_set_journal = SET_OF(name='journal', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Pub_set_journal__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Biblio', 'Cit-jour')))
    _Pub_set_journal._cont = __Pub_set_journal__item_
    _Pub_set_book = SET_OF(name='book', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Pub_set_book__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Biblio', 'Cit-book')))
    _Pub_set_book._cont = __Pub_set_book__item_
    _Pub_set_proc = SET_OF(name='proc', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Pub_set_proc__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Biblio', 'Cit-proc')))
    _Pub_set_proc._cont = __Pub_set_proc__item_
    _Pub_set_patent = SET_OF(name='patent', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Pub_set_patent__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Biblio', 'Cit-pat')))
    _Pub_set_patent._cont = __Pub_set_patent__item_
    Pub_set._cont = ASN1Dict([
        ('pub', _Pub_set_pub),
        ('medline', _Pub_set_medline),
        ('article', _Pub_set_article),
        ('journal', _Pub_set_journal),
        ('book', _Pub_set_book),
        ('proc', _Pub_set_proc),
        ('patent', _Pub_set_patent),
        ])
    Pub_set._ext = None
    
    _all_ = [
        _Pub_gen,
        _Pub_sub,
        _Pub_medline,
        _Pub_muid,
        _Pub_article,
        _Pub_journal,
        _Pub_book,
        _Pub_proc,
        _Pub_patent,
        _Pub_pat_id,
        _Pub_man,
        _Pub_equiv,
        _Pub_pmid,
        Pub,
        _Pub_equiv__item_,
        Pub_equiv,
        __Pub_set_pub__item_,
        _Pub_set_pub,
        __Pub_set_medline__item_,
        _Pub_set_medline,
        __Pub_set_article__item_,
        _Pub_set_article,
        __Pub_set_journal__item_,
        _Pub_set_journal,
        __Pub_set_book__item_,
        _Pub_set_book,
        __Pub_set_proc__item_,
        _Pub_set_proc,
        __Pub_set_patent__item_,
        _Pub_set_patent,
        Pub_set,
    ]

class NCBI_PubMed:

    _name_  = 'NCBI-PubMed'
    _oid_   = []
    
    _obj_ = [
        'Pubmed-entry',
        'Pubmed-url',
        ]
    _type_ = [
        'Pubmed-entry',
        'Pubmed-url',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Pubmed-entry >-----#
    Pubmed_entry = SEQ(name='Pubmed-entry', mode=MODE_TYPE)
    _Pubmed_entry_pmid = INT(name='pmid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'PubMedId')))
    _Pubmed_entry_medent = SEQ(name='medent', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Medline', 'Medline-entry')), opt=True)
    _Pubmed_entry_publisher = STR_VIS(name='publisher', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Pubmed_entry_urls = SET_OF(name='urls', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Pubmed_entry_urls__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-PubMed', 'Pubmed-url')))
    _Pubmed_entry_urls._cont = __Pubmed_entry_urls__item_
    _Pubmed_entry_pubid = STR_VIS(name='pubid', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Pubmed_entry._cont = ASN1Dict([
        ('pmid', _Pubmed_entry_pmid),
        ('medent', _Pubmed_entry_medent),
        ('publisher', _Pubmed_entry_publisher),
        ('urls', _Pubmed_entry_urls),
        ('pubid', _Pubmed_entry_pubid),
        ])
    Pubmed_entry._ext = None
    
    #-----< Pubmed-url >-----#
    Pubmed_url = SEQ(name='Pubmed-url', mode=MODE_TYPE)
    _Pubmed_url_location = STR_VIS(name='location', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Pubmed_url_url = STR_VIS(name='url', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Pubmed_url._cont = ASN1Dict([
        ('location', _Pubmed_url_location),
        ('url', _Pubmed_url_url),
        ])
    Pubmed_url._ext = None
    
    _all_ = [
        _Pubmed_entry_pmid,
        _Pubmed_entry_medent,
        _Pubmed_entry_publisher,
        __Pubmed_entry_urls__item_,
        _Pubmed_entry_urls,
        _Pubmed_entry_pubid,
        Pubmed_entry,
        _Pubmed_url_location,
        _Pubmed_url_url,
        Pubmed_url,
    ]

class NCBI_Remap:

    _name_  = 'NCBI-Remap'
    _oid_   = []
    
    _obj_ = [
        'Remap-dt',
        'Remap-db-id',
        'Remap-request',
        'RMRequest',
        'Remap-query',
        'Remap-reply',
        'RMReply',
        'Remap-result',
        ]
    _type_ = [
        'Remap-dt',
        'Remap-db-id',
        'Remap-request',
        'RMRequest',
        'Remap-query',
        'Remap-reply',
        'RMReply',
        'Remap-result',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Remap-dt >-----#
    Remap_dt = INT(name='Remap-dt', mode=MODE_TYPE)
    
    #-----< Remap-db-id >-----#
    Remap_db_id = STR_VIS(name='Remap-db-id', mode=MODE_TYPE)
    
    #-----< Remap-request >-----#
    Remap_request = SEQ(name='Remap-request', mode=MODE_TYPE)
    _Remap_request_request = CHOICE(name='request', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Remap', 'RMRequest')))
    _Remap_request_version = INT(name='version', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Remap_request_tool = STR_VIS(name='tool', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Remap_request._cont = ASN1Dict([
        ('request', _Remap_request_request),
        ('version', _Remap_request_version),
        ('tool', _Remap_request_tool),
        ])
    Remap_request._ext = None
    
    #-----< RMRequest >-----#
    RMRequest = CHOICE(name='RMRequest', mode=MODE_TYPE)
    _RMRequest_remap = SEQ(name='remap', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Remap', 'Remap-query')))
    _RMRequest_maps_to_builds = STR_VIS(name='maps-to-builds', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RMRequest_maps_from_builds = STR_VIS(name='maps-from-builds', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RMRequest_all_builds = NULL(name='all-builds', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    RMRequest._cont = ASN1Dict([
        ('remap', _RMRequest_remap),
        ('maps-to-builds', _RMRequest_maps_to_builds),
        ('maps-from-builds', _RMRequest_maps_from_builds),
        ('all-builds', _RMRequest_all_builds),
        ])
    RMRequest._ext = None
    
    #-----< Remap-query >-----#
    Remap_query = SEQ(name='Remap-query', mode=MODE_TYPE)
    _Remap_query_from_build = STR_VIS(name='from-build', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Remap_query_to_build = STR_VIS(name='to-build', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Remap_query_locs = SEQ_OF(name='locs', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Remap_query_locs__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Remap_query_locs._cont = __Remap_query_locs__item_
    Remap_query._cont = ASN1Dict([
        ('from-build', _Remap_query_from_build),
        ('to-build', _Remap_query_to_build),
        ('locs', _Remap_query_locs),
        ])
    Remap_query._ext = None
    
    #-----< Remap-reply >-----#
    Remap_reply = SEQ(name='Remap-reply', mode=MODE_TYPE)
    _Remap_reply_reply = CHOICE(name='reply', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Remap', 'RMReply')))
    _Remap_reply_dt = INT(name='dt', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Remap', 'Remap-dt')))
    _Remap_reply_server = STR_VIS(name='server', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Remap_reply_msg = STR_VIS(name='msg', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Remap_reply._cont = ASN1Dict([
        ('reply', _Remap_reply_reply),
        ('dt', _Remap_reply_dt),
        ('server', _Remap_reply_server),
        ('msg', _Remap_reply_msg),
        ])
    Remap_reply._ext = None
    
    #-----< RMReply >-----#
    RMReply = CHOICE(name='RMReply', mode=MODE_TYPE)
    _RMReply_error = STR_VIS(name='error', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RMReply_remap = SEQ_OF(name='remap', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Remap', 'Remap-result')))
    _RMReply_maps_to_builds = SEQ_OF(name='maps-to-builds', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RMReply_maps_to_builds__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _RMReply_maps_to_builds._cont = __RMReply_maps_to_builds__item_
    _RMReply_maps_from_builds = SEQ_OF(name='maps-from-builds', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RMReply_maps_from_builds__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _RMReply_maps_from_builds._cont = __RMReply_maps_from_builds__item_
    _RMReply_all_builds = SEQ_OF(name='all-builds', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RMReply_all_builds__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _RMReply_all_builds._cont = __RMReply_all_builds__item_
    RMReply._cont = ASN1Dict([
        ('error', _RMReply_error),
        ('remap', _RMReply_remap),
        ('maps-to-builds', _RMReply_maps_to_builds),
        ('maps-from-builds', _RMReply_maps_from_builds),
        ('all-builds', _RMReply_all_builds),
        ])
    RMReply._ext = None
    
    #-----< Remap-result >-----#
    Remap_result = SEQ_OF(name='Remap-result', mode=MODE_TYPE)
    _Remap_result__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    Remap_result._cont = _Remap_result__item_
    
    _all_ = [
        Remap_dt,
        Remap_db_id,
        _Remap_request_request,
        _Remap_request_version,
        _Remap_request_tool,
        Remap_request,
        _RMRequest_remap,
        _RMRequest_maps_to_builds,
        _RMRequest_maps_from_builds,
        _RMRequest_all_builds,
        RMRequest,
        _Remap_query_from_build,
        _Remap_query_to_build,
        __Remap_query_locs__item_,
        _Remap_query_locs,
        Remap_query,
        _Remap_reply_reply,
        _Remap_reply_dt,
        _Remap_reply_server,
        _Remap_reply_msg,
        Remap_reply,
        _RMReply_error,
        _RMReply_remap,
        __RMReply_maps_to_builds__item_,
        _RMReply_maps_to_builds,
        __RMReply_maps_from_builds__item_,
        _RMReply_maps_from_builds,
        __RMReply_all_builds__item_,
        _RMReply_all_builds,
        RMReply,
        _Remap_result__item_,
        Remap_result,
    ]

class NCBI_ScoreMat:

    _name_  = 'NCBI-ScoreMat'
    _oid_   = []
    
    _obj_ = [
        'BlockProperty',
        'CoreBlock',
        'LoopConstraint',
        'CoreDef',
        'Site-annot',
        'Site-annot-set',
        'PssmFinalData',
        'PssmIntermediateData',
        'Pssm',
        'FormatRpsDbParameters',
        'PssmParameters',
        'PssmWithParameters',
        ]
    _type_ = [
        'BlockProperty',
        'CoreBlock',
        'LoopConstraint',
        'CoreDef',
        'Site-annot',
        'Site-annot-set',
        'PssmFinalData',
        'PssmIntermediateData',
        'Pssm',
        'FormatRpsDbParameters',
        'PssmParameters',
        'PssmWithParameters',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< BlockProperty >-----#
    BlockProperty = SEQ(name='BlockProperty', mode=MODE_TYPE)
    _BlockProperty_type = INT(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BlockProperty_type._cont = ASN1Dict([('unassigned', 0), ('threshold', 1), ('minscore', 2), ('maxscore', 3), ('meanscore', 4), ('variance', 5), ('name', 10), ('is-optional', 20), ('other', 255)])
    _BlockProperty_intvalue = INT(name='intvalue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BlockProperty_textvalue = STR_VIS(name='textvalue', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    BlockProperty._cont = ASN1Dict([
        ('type', _BlockProperty_type),
        ('intvalue', _BlockProperty_intvalue),
        ('textvalue', _BlockProperty_textvalue),
        ])
    BlockProperty._ext = None
    
    #-----< CoreBlock >-----#
    CoreBlock = SEQ(name='CoreBlock', mode=MODE_TYPE)
    _CoreBlock_start = INT(name='start', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CoreBlock_stop = INT(name='stop', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CoreBlock_minstart = INT(name='minstart', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CoreBlock_maxstop = INT(name='maxstop', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CoreBlock_property = SEQ_OF(name='property', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CoreBlock_property__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-ScoreMat', 'BlockProperty')))
    _CoreBlock_property._cont = __CoreBlock_property__item_
    CoreBlock._cont = ASN1Dict([
        ('start', _CoreBlock_start),
        ('stop', _CoreBlock_stop),
        ('minstart', _CoreBlock_minstart),
        ('maxstop', _CoreBlock_maxstop),
        ('property', _CoreBlock_property),
        ])
    CoreBlock._ext = None
    
    #-----< LoopConstraint >-----#
    LoopConstraint = SEQ(name='LoopConstraint', mode=MODE_TYPE)
    _LoopConstraint_minlength = INT(name='minlength', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _LoopConstraint_maxlength = INT(name='maxlength', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=100000)
    LoopConstraint._cont = ASN1Dict([
        ('minlength', _LoopConstraint_minlength),
        ('maxlength', _LoopConstraint_maxlength),
        ])
    LoopConstraint._ext = None
    
    #-----< CoreDef >-----#
    CoreDef = SEQ(name='CoreDef', mode=MODE_TYPE)
    _CoreDef_nblocks = INT(name='nblocks', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CoreDef_blocks = SEQ_OF(name='blocks', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CoreDef_blocks__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-ScoreMat', 'CoreBlock')))
    _CoreDef_blocks._cont = __CoreDef_blocks__item_
    _CoreDef_loops = SEQ_OF(name='loops', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CoreDef_loops__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-ScoreMat', 'LoopConstraint')))
    _CoreDef_loops._cont = __CoreDef_loops__item_
    _CoreDef_isDiscontinuous = BOOL(name='isDiscontinuous', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CoreDef_insertions = SEQ_OF(name='insertions', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CoreDef_insertions__item_ = INT(name='_item_', mode=MODE_TYPE)
    _CoreDef_insertions._cont = __CoreDef_insertions__item_
    CoreDef._cont = ASN1Dict([
        ('nblocks', _CoreDef_nblocks),
        ('blocks', _CoreDef_blocks),
        ('loops', _CoreDef_loops),
        ('isDiscontinuous', _CoreDef_isDiscontinuous),
        ('insertions', _CoreDef_insertions),
        ])
    CoreDef._ext = None
    
    #-----< Site-annot >-----#
    Site_annot = SEQ(name='Site-annot', mode=MODE_TYPE)
    _Site_annot_startPosition = INT(name='startPosition', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Site_annot_stopPosition = INT(name='stopPosition', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Site_annot_description = STR_VIS(name='description', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Site_annot_type = INT(name='type', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Site_annot_aliases = SEQ_OF(name='aliases', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Site_annot_aliases__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Site_annot_aliases._cont = __Site_annot_aliases__item_
    _Site_annot_motif = STR_VIS(name='motif', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Site_annot_motifuse = INT(name='motifuse', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Site_annot._cont = ASN1Dict([
        ('startPosition', _Site_annot_startPosition),
        ('stopPosition', _Site_annot_stopPosition),
        ('description', _Site_annot_description),
        ('type', _Site_annot_type),
        ('aliases', _Site_annot_aliases),
        ('motif', _Site_annot_motif),
        ('motifuse', _Site_annot_motifuse),
        ])
    Site_annot._ext = None
    
    #-----< Site-annot-set >-----#
    Site_annot_set = SEQ_OF(name='Site-annot-set', mode=MODE_TYPE)
    _Site_annot_set__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-ScoreMat', 'Site-annot')))
    Site_annot_set._cont = _Site_annot_set__item_
    
    #-----< PssmFinalData >-----#
    PssmFinalData = SEQ(name='PssmFinalData', mode=MODE_TYPE)
    _PssmFinalData_scores = SEQ_OF(name='scores', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PssmFinalData_scores__item_ = INT(name='_item_', mode=MODE_TYPE)
    _PssmFinalData_scores._cont = __PssmFinalData_scores__item_
    _PssmFinalData_lambda_ = REAL(name='lambda', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _PssmFinalData_kappa = REAL(name='kappa', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _PssmFinalData_h = REAL(name='h', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _PssmFinalData_scalingFactor = INT(name='scalingFactor', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=1)
    _PssmFinalData_lambdaUngapped = REAL(name='lambdaUngapped', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    _PssmFinalData_kappaUngapped = REAL(name='kappaUngapped', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    _PssmFinalData_hUngapped = REAL(name='hUngapped', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    PssmFinalData._cont = ASN1Dict([
        ('scores', _PssmFinalData_scores),
        ('lambda', _PssmFinalData_lambda_),
        ('kappa', _PssmFinalData_kappa),
        ('h', _PssmFinalData_h),
        ('scalingFactor', _PssmFinalData_scalingFactor),
        ('lambdaUngapped', _PssmFinalData_lambdaUngapped),
        ('kappaUngapped', _PssmFinalData_kappaUngapped),
        ('hUngapped', _PssmFinalData_hUngapped),
        ])
    PssmFinalData._ext = None
    
    #-----< PssmIntermediateData >-----#
    PssmIntermediateData = SEQ(name='PssmIntermediateData', mode=MODE_TYPE)
    _PssmIntermediateData_resFreqsPerPos = SEQ_OF(name='resFreqsPerPos', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PssmIntermediateData_resFreqsPerPos__item_ = INT(name='_item_', mode=MODE_TYPE)
    _PssmIntermediateData_resFreqsPerPos._cont = __PssmIntermediateData_resFreqsPerPos__item_
    _PssmIntermediateData_weightedResFreqsPerPos = SEQ_OF(name='weightedResFreqsPerPos', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PssmIntermediateData_weightedResFreqsPerPos__item_ = REAL(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _PssmIntermediateData_weightedResFreqsPerPos._cont = __PssmIntermediateData_weightedResFreqsPerPos__item_
    _PssmIntermediateData_freqRatios = SEQ_OF(name='freqRatios', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PssmIntermediateData_freqRatios__item_ = REAL(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _PssmIntermediateData_freqRatios._cont = __PssmIntermediateData_freqRatios__item_
    _PssmIntermediateData_informationContent = SEQ_OF(name='informationContent', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PssmIntermediateData_informationContent__item_ = REAL(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _PssmIntermediateData_informationContent._cont = __PssmIntermediateData_informationContent__item_
    _PssmIntermediateData_gaplessColumnWeights = SEQ_OF(name='gaplessColumnWeights', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PssmIntermediateData_gaplessColumnWeights__item_ = REAL(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _PssmIntermediateData_gaplessColumnWeights._cont = __PssmIntermediateData_gaplessColumnWeights__item_
    _PssmIntermediateData_sigma = SEQ_OF(name='sigma', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PssmIntermediateData_sigma__item_ = REAL(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _PssmIntermediateData_sigma._cont = __PssmIntermediateData_sigma__item_
    _PssmIntermediateData_intervalSizes = SEQ_OF(name='intervalSizes', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PssmIntermediateData_intervalSizes__item_ = INT(name='_item_', mode=MODE_TYPE)
    _PssmIntermediateData_intervalSizes._cont = __PssmIntermediateData_intervalSizes__item_
    _PssmIntermediateData_numMatchingSeqs = SEQ_OF(name='numMatchingSeqs', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PssmIntermediateData_numMatchingSeqs__item_ = INT(name='_item_', mode=MODE_TYPE)
    _PssmIntermediateData_numMatchingSeqs._cont = __PssmIntermediateData_numMatchingSeqs__item_
    _PssmIntermediateData_numIndeptObsr = SEQ_OF(name='numIndeptObsr', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PssmIntermediateData_numIndeptObsr__item_ = REAL(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _PssmIntermediateData_numIndeptObsr._cont = __PssmIntermediateData_numIndeptObsr__item_
    PssmIntermediateData._cont = ASN1Dict([
        ('resFreqsPerPos', _PssmIntermediateData_resFreqsPerPos),
        ('weightedResFreqsPerPos', _PssmIntermediateData_weightedResFreqsPerPos),
        ('freqRatios', _PssmIntermediateData_freqRatios),
        ('informationContent', _PssmIntermediateData_informationContent),
        ('gaplessColumnWeights', _PssmIntermediateData_gaplessColumnWeights),
        ('sigma', _PssmIntermediateData_sigma),
        ('intervalSizes', _PssmIntermediateData_intervalSizes),
        ('numMatchingSeqs', _PssmIntermediateData_numMatchingSeqs),
        ('numIndeptObsr', _PssmIntermediateData_numIndeptObsr),
        ])
    PssmIntermediateData._ext = None
    
    #-----< Pssm >-----#
    Pssm = SEQ(name='Pssm', mode=MODE_TYPE)
    _Pssm_isProtein = BOOL(name='isProtein', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=True)
    _Pssm_identifier = CHOICE(name='identifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Object-id')), opt=True)
    _Pssm_numRows = INT(name='numRows', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Pssm_numColumns = INT(name='numColumns', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Pssm_rowLabels = SEQ_OF(name='rowLabels', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Pssm_rowLabels__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Pssm_rowLabels._cont = __Pssm_rowLabels__item_
    _Pssm_byRow = BOOL(name='byRow', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _Pssm_query = CHOICE(name='query', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')), opt=True)
    _Pssm_intermediateData = SEQ(name='intermediateData', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ScoreMat', 'PssmIntermediateData')), opt=True)
    _Pssm_finalData = SEQ(name='finalData', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ScoreMat', 'PssmFinalData')), opt=True)
    Pssm._cont = ASN1Dict([
        ('isProtein', _Pssm_isProtein),
        ('identifier', _Pssm_identifier),
        ('numRows', _Pssm_numRows),
        ('numColumns', _Pssm_numColumns),
        ('rowLabels', _Pssm_rowLabels),
        ('byRow', _Pssm_byRow),
        ('query', _Pssm_query),
        ('intermediateData', _Pssm_intermediateData),
        ('finalData', _Pssm_finalData),
        ])
    Pssm._ext = None
    
    #-----< FormatRpsDbParameters >-----#
    FormatRpsDbParameters = SEQ(name='FormatRpsDbParameters', mode=MODE_TYPE)
    _FormatRpsDbParameters_matrixName = STR_VIS(name='matrixName', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FormatRpsDbParameters_gapOpen = INT(name='gapOpen', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _FormatRpsDbParameters_gapExtend = INT(name='gapExtend', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    FormatRpsDbParameters._cont = ASN1Dict([
        ('matrixName', _FormatRpsDbParameters_matrixName),
        ('gapOpen', _FormatRpsDbParameters_gapOpen),
        ('gapExtend', _FormatRpsDbParameters_gapExtend),
        ])
    FormatRpsDbParameters._ext = None
    
    #-----< PssmParameters >-----#
    PssmParameters = SEQ(name='PssmParameters', mode=MODE_TYPE)
    _PssmParameters_pseudocount = INT(name='pseudocount', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PssmParameters_rpsdbparams = SEQ(name='rpsdbparams', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ScoreMat', 'FormatRpsDbParameters')), opt=True)
    _PssmParameters_constraints = SEQ(name='constraints', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ScoreMat', 'CoreDef')), opt=True)
    _PssmParameters_bitScoreThresh = REAL(name='bitScoreThresh', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    _PssmParameters_annotatedSites = SEQ_OF(name='annotatedSites', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ScoreMat', 'Site-annot-set')), opt=True)
    PssmParameters._cont = ASN1Dict([
        ('pseudocount', _PssmParameters_pseudocount),
        ('rpsdbparams', _PssmParameters_rpsdbparams),
        ('constraints', _PssmParameters_constraints),
        ('bitScoreThresh', _PssmParameters_bitScoreThresh),
        ('annotatedSites', _PssmParameters_annotatedSites),
        ])
    PssmParameters._ext = None
    
    #-----< PssmWithParameters >-----#
    PssmWithParameters = SEQ(name='PssmWithParameters', mode=MODE_TYPE)
    _PssmWithParameters_pssm = SEQ(name='pssm', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ScoreMat', 'Pssm')))
    _PssmWithParameters_params = SEQ(name='params', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-ScoreMat', 'PssmParameters')), opt=True)
    PssmWithParameters._cont = ASN1Dict([
        ('pssm', _PssmWithParameters_pssm),
        ('params', _PssmWithParameters_params),
        ])
    PssmWithParameters._ext = None
    
    _all_ = [
        _BlockProperty_type,
        _BlockProperty_intvalue,
        _BlockProperty_textvalue,
        BlockProperty,
        _CoreBlock_start,
        _CoreBlock_stop,
        _CoreBlock_minstart,
        _CoreBlock_maxstop,
        __CoreBlock_property__item_,
        _CoreBlock_property,
        CoreBlock,
        _LoopConstraint_minlength,
        _LoopConstraint_maxlength,
        LoopConstraint,
        _CoreDef_nblocks,
        __CoreDef_blocks__item_,
        _CoreDef_blocks,
        __CoreDef_loops__item_,
        _CoreDef_loops,
        _CoreDef_isDiscontinuous,
        __CoreDef_insertions__item_,
        _CoreDef_insertions,
        CoreDef,
        _Site_annot_startPosition,
        _Site_annot_stopPosition,
        _Site_annot_description,
        _Site_annot_type,
        __Site_annot_aliases__item_,
        _Site_annot_aliases,
        _Site_annot_motif,
        _Site_annot_motifuse,
        Site_annot,
        _Site_annot_set__item_,
        Site_annot_set,
        __PssmFinalData_scores__item_,
        _PssmFinalData_scores,
        _PssmFinalData_lambda_,
        _PssmFinalData_kappa,
        _PssmFinalData_h,
        _PssmFinalData_scalingFactor,
        _PssmFinalData_lambdaUngapped,
        _PssmFinalData_kappaUngapped,
        _PssmFinalData_hUngapped,
        PssmFinalData,
        __PssmIntermediateData_resFreqsPerPos__item_,
        _PssmIntermediateData_resFreqsPerPos,
        __PssmIntermediateData_weightedResFreqsPerPos__item_,
        _PssmIntermediateData_weightedResFreqsPerPos,
        __PssmIntermediateData_freqRatios__item_,
        _PssmIntermediateData_freqRatios,
        __PssmIntermediateData_informationContent__item_,
        _PssmIntermediateData_informationContent,
        __PssmIntermediateData_gaplessColumnWeights__item_,
        _PssmIntermediateData_gaplessColumnWeights,
        __PssmIntermediateData_sigma__item_,
        _PssmIntermediateData_sigma,
        __PssmIntermediateData_intervalSizes__item_,
        _PssmIntermediateData_intervalSizes,
        __PssmIntermediateData_numMatchingSeqs__item_,
        _PssmIntermediateData_numMatchingSeqs,
        __PssmIntermediateData_numIndeptObsr__item_,
        _PssmIntermediateData_numIndeptObsr,
        PssmIntermediateData,
        _Pssm_isProtein,
        _Pssm_identifier,
        _Pssm_numRows,
        _Pssm_numColumns,
        __Pssm_rowLabels__item_,
        _Pssm_rowLabels,
        _Pssm_byRow,
        _Pssm_query,
        _Pssm_intermediateData,
        _Pssm_finalData,
        Pssm,
        _FormatRpsDbParameters_matrixName,
        _FormatRpsDbParameters_gapOpen,
        _FormatRpsDbParameters_gapExtend,
        FormatRpsDbParameters,
        _PssmParameters_pseudocount,
        _PssmParameters_rpsdbparams,
        _PssmParameters_constraints,
        _PssmParameters_bitScoreThresh,
        _PssmParameters_annotatedSites,
        PssmParameters,
        _PssmWithParameters_pssm,
        _PssmWithParameters_params,
        PssmWithParameters,
    ]

class NCBI_Seqalign:

    _name_  = 'NCBI-Seqalign'
    _oid_   = []
    
    _obj_ = [
        'Seq-align-set',
        'Seq-align',
        'Dense-diag',
        'Dense-seg',
        'Packed-seg',
        'Std-seg',
        'Spliced-seg',
        'Spliced-seg-modifier',
        'Spliced-exon',
        'Product-pos',
        'Prot-pos',
        'Spliced-exon-chunk',
        'Splice-site',
        'Sparse-seg',
        'Sparse-align',
        'Sparse-seg-ext',
        'Score',
        'Score-set',
        ]
    _type_ = [
        'Seq-align-set',
        'Seq-align',
        'Dense-diag',
        'Dense-seg',
        'Packed-seg',
        'Std-seg',
        'Spliced-seg',
        'Spliced-seg-modifier',
        'Spliced-exon',
        'Product-pos',
        'Prot-pos',
        'Spliced-exon-chunk',
        'Splice-site',
        'Sparse-seg',
        'Sparse-align',
        'Sparse-seg-ext',
        'Score',
        'Score-set',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Seq-align-set >-----#
    Seq_align_set = SET_OF(name='Seq-align-set', mode=MODE_TYPE)
    _Seq_align_set__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Seq-align')))
    Seq_align_set._cont = _Seq_align_set__item_
    
    #-----< Seq-align >-----#
    Seq_align = SEQ(name='Seq-align', mode=MODE_TYPE)
    _Seq_align_type = ENUM(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seq_align_type._cont = ASN1Dict([('not-set', 0), ('global', 1), ('diags', 2), ('partial', 3), ('disc', 4), ('other', 255)])
    _Seq_align_type._ext = None
    _Seq_align_dim = INT(name='dim', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Seq_align_score = SET_OF(name='score', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Seq_align_score__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Score')))
    _Seq_align_score._cont = __Seq_align_score__item_
    _Seq_align_segs = CHOICE(name='segs', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __Seq_align_segs_dendiag = SEQ_OF(name='dendiag', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Seq_align_segs_dendiag__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Dense-diag')))
    __Seq_align_segs_dendiag._cont = ___Seq_align_segs_dendiag__item_
    __Seq_align_segs_denseg = SEQ(name='denseg', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqalign', 'Dense-seg')))
    __Seq_align_segs_std = SEQ_OF(name='std', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Seq_align_segs_std__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Std-seg')))
    __Seq_align_segs_std._cont = ___Seq_align_segs_std__item_
    __Seq_align_segs_packed = SEQ(name='packed', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqalign', 'Packed-seg')))
    __Seq_align_segs_disc = SET_OF(name='disc', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqalign', 'Seq-align-set')))
    __Seq_align_segs_spliced = SEQ(name='spliced', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqalign', 'Spliced-seg')))
    __Seq_align_segs_sparse = SEQ(name='sparse', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqalign', 'Sparse-seg')))
    _Seq_align_segs._cont = ASN1Dict([
        ('dendiag', __Seq_align_segs_dendiag),
        ('denseg', __Seq_align_segs_denseg),
        ('std', __Seq_align_segs_std),
        ('packed', __Seq_align_segs_packed),
        ('disc', __Seq_align_segs_disc),
        ('spliced', __Seq_align_segs_spliced),
        ('sparse', __Seq_align_segs_sparse),
        ])
    _Seq_align_segs._ext = None
    _Seq_align_bounds = SET_OF(name='bounds', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Seq_align_bounds__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Seq_align_bounds._cont = __Seq_align_bounds__item_
    _Seq_align_id = SEQ_OF(name='id', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Seq_align_id__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'Object-id')))
    _Seq_align_id._cont = __Seq_align_id__item_
    _Seq_align_ext = SEQ_OF(name='ext', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Seq_align_ext__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'User-object')))
    _Seq_align_ext._cont = __Seq_align_ext__item_
    Seq_align._cont = ASN1Dict([
        ('type', _Seq_align_type),
        ('dim', _Seq_align_dim),
        ('score', _Seq_align_score),
        ('segs', _Seq_align_segs),
        ('bounds', _Seq_align_bounds),
        ('id', _Seq_align_id),
        ('ext', _Seq_align_ext),
        ])
    Seq_align._ext = None
    
    #-----< Dense-diag >-----#
    Dense_diag = SEQ(name='Dense-diag', mode=MODE_TYPE)
    _Dense_diag_dim = INT(name='dim', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=2)
    _Dense_diag_ids = SEQ_OF(name='ids', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Dense_diag_ids__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Dense_diag_ids._cont = __Dense_diag_ids__item_
    _Dense_diag_starts = SEQ_OF(name='starts', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Dense_diag_starts__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Dense_diag_starts._cont = __Dense_diag_starts__item_
    _Dense_diag_len = INT(name='len', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Dense_diag_strands = SEQ_OF(name='strands', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Dense_diag_strands__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Na-strand')))
    _Dense_diag_strands._cont = __Dense_diag_strands__item_
    _Dense_diag_scores = SET_OF(name='scores', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Dense_diag_scores__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Score')))
    _Dense_diag_scores._cont = __Dense_diag_scores__item_
    Dense_diag._cont = ASN1Dict([
        ('dim', _Dense_diag_dim),
        ('ids', _Dense_diag_ids),
        ('starts', _Dense_diag_starts),
        ('len', _Dense_diag_len),
        ('strands', _Dense_diag_strands),
        ('scores', _Dense_diag_scores),
        ])
    Dense_diag._ext = None
    
    #-----< Dense-seg >-----#
    Dense_seg = SEQ(name='Dense-seg', mode=MODE_TYPE)
    _Dense_seg_dim = INT(name='dim', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=2)
    _Dense_seg_numseg = INT(name='numseg', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Dense_seg_ids = SEQ_OF(name='ids', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Dense_seg_ids__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Dense_seg_ids._cont = __Dense_seg_ids__item_
    _Dense_seg_starts = SEQ_OF(name='starts', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Dense_seg_starts__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Dense_seg_starts._cont = __Dense_seg_starts__item_
    _Dense_seg_lens = SEQ_OF(name='lens', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Dense_seg_lens__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Dense_seg_lens._cont = __Dense_seg_lens__item_
    _Dense_seg_strands = SEQ_OF(name='strands', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Dense_seg_strands__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Na-strand')))
    _Dense_seg_strands._cont = __Dense_seg_strands__item_
    _Dense_seg_scores = SEQ_OF(name='scores', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Dense_seg_scores__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Score')))
    _Dense_seg_scores._cont = __Dense_seg_scores__item_
    Dense_seg._cont = ASN1Dict([
        ('dim', _Dense_seg_dim),
        ('numseg', _Dense_seg_numseg),
        ('ids', _Dense_seg_ids),
        ('starts', _Dense_seg_starts),
        ('lens', _Dense_seg_lens),
        ('strands', _Dense_seg_strands),
        ('scores', _Dense_seg_scores),
        ])
    Dense_seg._ext = None
    
    #-----< Packed-seg >-----#
    Packed_seg = SEQ(name='Packed-seg', mode=MODE_TYPE)
    _Packed_seg_dim = INT(name='dim', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=2)
    _Packed_seg_numseg = INT(name='numseg', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Packed_seg_ids = SEQ_OF(name='ids', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Packed_seg_ids__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Packed_seg_ids._cont = __Packed_seg_ids__item_
    _Packed_seg_starts = SEQ_OF(name='starts', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Packed_seg_starts__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Packed_seg_starts._cont = __Packed_seg_starts__item_
    _Packed_seg_present = OCT_STR(name='present', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Packed_seg_lens = SEQ_OF(name='lens', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Packed_seg_lens__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Packed_seg_lens._cont = __Packed_seg_lens__item_
    _Packed_seg_strands = SEQ_OF(name='strands', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Packed_seg_strands__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Na-strand')))
    _Packed_seg_strands._cont = __Packed_seg_strands__item_
    _Packed_seg_scores = SEQ_OF(name='scores', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Packed_seg_scores__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Score')))
    _Packed_seg_scores._cont = __Packed_seg_scores__item_
    Packed_seg._cont = ASN1Dict([
        ('dim', _Packed_seg_dim),
        ('numseg', _Packed_seg_numseg),
        ('ids', _Packed_seg_ids),
        ('starts', _Packed_seg_starts),
        ('present', _Packed_seg_present),
        ('lens', _Packed_seg_lens),
        ('strands', _Packed_seg_strands),
        ('scores', _Packed_seg_scores),
        ])
    Packed_seg._ext = None
    
    #-----< Std-seg >-----#
    Std_seg = SEQ(name='Std-seg', mode=MODE_TYPE)
    _Std_seg_dim = INT(name='dim', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=2)
    _Std_seg_ids = SEQ_OF(name='ids', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Std_seg_ids__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Std_seg_ids._cont = __Std_seg_ids__item_
    _Std_seg_loc = SEQ_OF(name='loc', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Std_seg_loc__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Std_seg_loc._cont = __Std_seg_loc__item_
    _Std_seg_scores = SET_OF(name='scores', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Std_seg_scores__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Score')))
    _Std_seg_scores._cont = __Std_seg_scores__item_
    Std_seg._cont = ASN1Dict([
        ('dim', _Std_seg_dim),
        ('ids', _Std_seg_ids),
        ('loc', _Std_seg_loc),
        ('scores', _Std_seg_scores),
        ])
    Std_seg._ext = None
    
    #-----< Spliced-seg >-----#
    Spliced_seg = SEQ(name='Spliced-seg', mode=MODE_TYPE)
    _Spliced_seg_product_id = CHOICE(name='product-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')), opt=True)
    _Spliced_seg_genomic_id = CHOICE(name='genomic-id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')), opt=True)
    _Spliced_seg_product_strand = ENUM(name='product-strand', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Na-strand')), opt=True)
    _Spliced_seg_genomic_strand = ENUM(name='genomic-strand', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Na-strand')), opt=True)
    _Spliced_seg_product_type = ENUM(name='product-type', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Spliced_seg_product_type._cont = ASN1Dict([('transcript', 0), ('protein', 1)])
    _Spliced_seg_product_type._ext = None
    _Spliced_seg_exons = SEQ_OF(name='exons', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Spliced_seg_exons__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Spliced-exon')))
    _Spliced_seg_exons._cont = __Spliced_seg_exons__item_
    _Spliced_seg_poly_a = INT(name='poly-a', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Spliced_seg_product_length = INT(name='product-length', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Spliced_seg_modifiers = SET_OF(name='modifiers', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Spliced_seg_modifiers__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Spliced-seg-modifier')))
    _Spliced_seg_modifiers._cont = __Spliced_seg_modifiers__item_
    Spliced_seg._cont = ASN1Dict([
        ('product-id', _Spliced_seg_product_id),
        ('genomic-id', _Spliced_seg_genomic_id),
        ('product-strand', _Spliced_seg_product_strand),
        ('genomic-strand', _Spliced_seg_genomic_strand),
        ('product-type', _Spliced_seg_product_type),
        ('exons', _Spliced_seg_exons),
        ('poly-a', _Spliced_seg_poly_a),
        ('product-length', _Spliced_seg_product_length),
        ('modifiers', _Spliced_seg_modifiers),
        ])
    Spliced_seg._ext = None
    
    #-----< Spliced-seg-modifier >-----#
    Spliced_seg_modifier = CHOICE(name='Spliced-seg-modifier', mode=MODE_TYPE)
    _Spliced_seg_modifier_start_codon_found = BOOL(name='start-codon-found', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Spliced_seg_modifier_stop_codon_found = BOOL(name='stop-codon-found', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Spliced_seg_modifier._cont = ASN1Dict([
        ('start-codon-found', _Spliced_seg_modifier_start_codon_found),
        ('stop-codon-found', _Spliced_seg_modifier_stop_codon_found),
        ])
    Spliced_seg_modifier._ext = None
    
    #-----< Spliced-exon >-----#
    Spliced_exon = SEQ(name='Spliced-exon', mode=MODE_TYPE)
    _Spliced_exon_product_start = CHOICE(name='product-start', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqalign', 'Product-pos')))
    _Spliced_exon_product_end = CHOICE(name='product-end', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqalign', 'Product-pos')))
    _Spliced_exon_genomic_start = INT(name='genomic-start', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Spliced_exon_genomic_end = INT(name='genomic-end', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Spliced_exon_product_id = CHOICE(name='product-id', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')), opt=True)
    _Spliced_exon_genomic_id = CHOICE(name='genomic-id', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')), opt=True)
    _Spliced_exon_product_strand = ENUM(name='product-strand', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Na-strand')), opt=True)
    _Spliced_exon_genomic_strand = ENUM(name='genomic-strand', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Na-strand')), opt=True)
    _Spliced_exon_parts = SEQ_OF(name='parts', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Spliced_exon_parts__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Spliced-exon-chunk')))
    _Spliced_exon_parts._cont = __Spliced_exon_parts__item_
    _Spliced_exon_scores = SET_OF(name='scores', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqalign', 'Score-set')), opt=True)
    _Spliced_exon_acceptor_before_exon = SEQ(name='acceptor-before-exon', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqalign', 'Splice-site')), opt=True)
    _Spliced_exon_donor_after_exon = SEQ(name='donor-after-exon', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqalign', 'Splice-site')), opt=True)
    _Spliced_exon_partial = BOOL(name='partial', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Spliced_exon_ext = SEQ_OF(name='ext', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Spliced_exon_ext__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'User-object')))
    _Spliced_exon_ext._cont = __Spliced_exon_ext__item_
    Spliced_exon._cont = ASN1Dict([
        ('product-start', _Spliced_exon_product_start),
        ('product-end', _Spliced_exon_product_end),
        ('genomic-start', _Spliced_exon_genomic_start),
        ('genomic-end', _Spliced_exon_genomic_end),
        ('product-id', _Spliced_exon_product_id),
        ('genomic-id', _Spliced_exon_genomic_id),
        ('product-strand', _Spliced_exon_product_strand),
        ('genomic-strand', _Spliced_exon_genomic_strand),
        ('parts', _Spliced_exon_parts),
        ('scores', _Spliced_exon_scores),
        ('acceptor-before-exon', _Spliced_exon_acceptor_before_exon),
        ('donor-after-exon', _Spliced_exon_donor_after_exon),
        ('partial', _Spliced_exon_partial),
        ('ext', _Spliced_exon_ext),
        ])
    Spliced_exon._ext = None
    
    #-----< Product-pos >-----#
    Product_pos = CHOICE(name='Product-pos', mode=MODE_TYPE)
    _Product_pos_nucpos = INT(name='nucpos', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Product_pos_protpos = SEQ(name='protpos', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqalign', 'Prot-pos')))
    Product_pos._cont = ASN1Dict([
        ('nucpos', _Product_pos_nucpos),
        ('protpos', _Product_pos_protpos),
        ])
    Product_pos._ext = None
    
    #-----< Prot-pos >-----#
    Prot_pos = SEQ(name='Prot-pos', mode=MODE_TYPE)
    _Prot_pos_amin = INT(name='amin', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Prot_pos_frame = INT(name='frame', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    Prot_pos._cont = ASN1Dict([
        ('amin', _Prot_pos_amin),
        ('frame', _Prot_pos_frame),
        ])
    Prot_pos._ext = None
    
    #-----< Spliced-exon-chunk >-----#
    Spliced_exon_chunk = CHOICE(name='Spliced-exon-chunk', mode=MODE_TYPE)
    _Spliced_exon_chunk_match = INT(name='match', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Spliced_exon_chunk_mismatch = INT(name='mismatch', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Spliced_exon_chunk_diag = INT(name='diag', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Spliced_exon_chunk_product_ins = INT(name='product-ins', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Spliced_exon_chunk_genomic_ins = INT(name='genomic-ins', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Spliced_exon_chunk._cont = ASN1Dict([
        ('match', _Spliced_exon_chunk_match),
        ('mismatch', _Spliced_exon_chunk_mismatch),
        ('diag', _Spliced_exon_chunk_diag),
        ('product-ins', _Spliced_exon_chunk_product_ins),
        ('genomic-ins', _Spliced_exon_chunk_genomic_ins),
        ])
    Spliced_exon_chunk._ext = None
    
    #-----< Splice-site >-----#
    Splice_site = SEQ(name='Splice-site', mode=MODE_TYPE)
    _Splice_site_bases = STR_VIS(name='bases', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Splice_site._cont = ASN1Dict([
        ('bases', _Splice_site_bases),
        ])
    Splice_site._ext = None
    
    #-----< Sparse-seg >-----#
    Sparse_seg = SEQ(name='Sparse-seg', mode=MODE_TYPE)
    _Sparse_seg_master_id = CHOICE(name='master-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')), opt=True)
    _Sparse_seg_rows = SET_OF(name='rows', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Sparse_seg_rows__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Sparse-align')))
    _Sparse_seg_rows._cont = __Sparse_seg_rows__item_
    _Sparse_seg_row_scores = SET_OF(name='row-scores', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Sparse_seg_row_scores__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Score')))
    _Sparse_seg_row_scores._cont = __Sparse_seg_row_scores__item_
    _Sparse_seg_ext = SET_OF(name='ext', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Sparse_seg_ext__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Sparse-seg-ext')))
    _Sparse_seg_ext._cont = __Sparse_seg_ext__item_
    Sparse_seg._cont = ASN1Dict([
        ('master-id', _Sparse_seg_master_id),
        ('rows', _Sparse_seg_rows),
        ('row-scores', _Sparse_seg_row_scores),
        ('ext', _Sparse_seg_ext),
        ])
    Sparse_seg._ext = None
    
    #-----< Sparse-align >-----#
    Sparse_align = SEQ(name='Sparse-align', mode=MODE_TYPE)
    _Sparse_align_first_id = CHOICE(name='first-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Sparse_align_second_id = CHOICE(name='second-id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Sparse_align_numseg = INT(name='numseg', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Sparse_align_first_starts = SEQ_OF(name='first-starts', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Sparse_align_first_starts__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Sparse_align_first_starts._cont = __Sparse_align_first_starts__item_
    _Sparse_align_second_starts = SEQ_OF(name='second-starts', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Sparse_align_second_starts__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Sparse_align_second_starts._cont = __Sparse_align_second_starts__item_
    _Sparse_align_lens = SEQ_OF(name='lens', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Sparse_align_lens__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Sparse_align_lens._cont = __Sparse_align_lens__item_
    _Sparse_align_second_strands = SEQ_OF(name='second-strands', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Sparse_align_second_strands__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Na-strand')))
    _Sparse_align_second_strands._cont = __Sparse_align_second_strands__item_
    _Sparse_align_seg_scores = SET_OF(name='seg-scores', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Sparse_align_seg_scores__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Score')))
    _Sparse_align_seg_scores._cont = __Sparse_align_seg_scores__item_
    Sparse_align._cont = ASN1Dict([
        ('first-id', _Sparse_align_first_id),
        ('second-id', _Sparse_align_second_id),
        ('numseg', _Sparse_align_numseg),
        ('first-starts', _Sparse_align_first_starts),
        ('second-starts', _Sparse_align_second_starts),
        ('lens', _Sparse_align_lens),
        ('second-strands', _Sparse_align_second_strands),
        ('seg-scores', _Sparse_align_seg_scores),
        ])
    Sparse_align._ext = None
    
    #-----< Sparse-seg-ext >-----#
    Sparse_seg_ext = SEQ(name='Sparse-seg-ext', mode=MODE_TYPE)
    _Sparse_seg_ext_index = INT(name='index', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Sparse_seg_ext._cont = ASN1Dict([
        ('index', _Sparse_seg_ext_index),
        ])
    Sparse_seg_ext._ext = None
    
    #-----< Score >-----#
    Score = SEQ(name='Score', mode=MODE_TYPE)
    _Score_id = CHOICE(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Object-id')), opt=True)
    _Score_value = CHOICE(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __Score_value_real = REAL(name='real', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    __Score_value_int = INT(name='int', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Score_value._cont = ASN1Dict([
        ('real', __Score_value_real),
        ('int', __Score_value_int),
        ])
    _Score_value._ext = None
    Score._cont = ASN1Dict([
        ('id', _Score_id),
        ('value', _Score_value),
        ])
    Score._ext = None
    
    #-----< Score-set >-----#
    Score_set = SET_OF(name='Score-set', mode=MODE_TYPE)
    _Score_set__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Score')))
    Score_set._cont = _Score_set__item_
    
    _all_ = [
        _Seq_align_set__item_,
        Seq_align_set,
        _Seq_align_type,
        _Seq_align_dim,
        __Seq_align_score__item_,
        _Seq_align_score,
        ___Seq_align_segs_dendiag__item_,
        __Seq_align_segs_dendiag,
        __Seq_align_segs_denseg,
        ___Seq_align_segs_std__item_,
        __Seq_align_segs_std,
        __Seq_align_segs_packed,
        __Seq_align_segs_disc,
        __Seq_align_segs_spliced,
        __Seq_align_segs_sparse,
        _Seq_align_segs,
        __Seq_align_bounds__item_,
        _Seq_align_bounds,
        __Seq_align_id__item_,
        _Seq_align_id,
        __Seq_align_ext__item_,
        _Seq_align_ext,
        Seq_align,
        _Dense_diag_dim,
        __Dense_diag_ids__item_,
        _Dense_diag_ids,
        __Dense_diag_starts__item_,
        _Dense_diag_starts,
        _Dense_diag_len,
        __Dense_diag_strands__item_,
        _Dense_diag_strands,
        __Dense_diag_scores__item_,
        _Dense_diag_scores,
        Dense_diag,
        _Dense_seg_dim,
        _Dense_seg_numseg,
        __Dense_seg_ids__item_,
        _Dense_seg_ids,
        __Dense_seg_starts__item_,
        _Dense_seg_starts,
        __Dense_seg_lens__item_,
        _Dense_seg_lens,
        __Dense_seg_strands__item_,
        _Dense_seg_strands,
        __Dense_seg_scores__item_,
        _Dense_seg_scores,
        Dense_seg,
        _Packed_seg_dim,
        _Packed_seg_numseg,
        __Packed_seg_ids__item_,
        _Packed_seg_ids,
        __Packed_seg_starts__item_,
        _Packed_seg_starts,
        _Packed_seg_present,
        __Packed_seg_lens__item_,
        _Packed_seg_lens,
        __Packed_seg_strands__item_,
        _Packed_seg_strands,
        __Packed_seg_scores__item_,
        _Packed_seg_scores,
        Packed_seg,
        _Std_seg_dim,
        __Std_seg_ids__item_,
        _Std_seg_ids,
        __Std_seg_loc__item_,
        _Std_seg_loc,
        __Std_seg_scores__item_,
        _Std_seg_scores,
        Std_seg,
        _Spliced_seg_product_id,
        _Spliced_seg_genomic_id,
        _Spliced_seg_product_strand,
        _Spliced_seg_genomic_strand,
        _Spliced_seg_product_type,
        __Spliced_seg_exons__item_,
        _Spliced_seg_exons,
        _Spliced_seg_poly_a,
        _Spliced_seg_product_length,
        __Spliced_seg_modifiers__item_,
        _Spliced_seg_modifiers,
        Spliced_seg,
        _Spliced_seg_modifier_start_codon_found,
        _Spliced_seg_modifier_stop_codon_found,
        Spliced_seg_modifier,
        _Spliced_exon_product_start,
        _Spliced_exon_product_end,
        _Spliced_exon_genomic_start,
        _Spliced_exon_genomic_end,
        _Spliced_exon_product_id,
        _Spliced_exon_genomic_id,
        _Spliced_exon_product_strand,
        _Spliced_exon_genomic_strand,
        __Spliced_exon_parts__item_,
        _Spliced_exon_parts,
        _Spliced_exon_scores,
        _Spliced_exon_acceptor_before_exon,
        _Spliced_exon_donor_after_exon,
        _Spliced_exon_partial,
        __Spliced_exon_ext__item_,
        _Spliced_exon_ext,
        Spliced_exon,
        _Product_pos_nucpos,
        _Product_pos_protpos,
        Product_pos,
        _Prot_pos_amin,
        _Prot_pos_frame,
        Prot_pos,
        _Spliced_exon_chunk_match,
        _Spliced_exon_chunk_mismatch,
        _Spliced_exon_chunk_diag,
        _Spliced_exon_chunk_product_ins,
        _Spliced_exon_chunk_genomic_ins,
        Spliced_exon_chunk,
        _Splice_site_bases,
        Splice_site,
        _Sparse_seg_master_id,
        __Sparse_seg_rows__item_,
        _Sparse_seg_rows,
        __Sparse_seg_row_scores__item_,
        _Sparse_seg_row_scores,
        __Sparse_seg_ext__item_,
        _Sparse_seg_ext,
        Sparse_seg,
        _Sparse_align_first_id,
        _Sparse_align_second_id,
        _Sparse_align_numseg,
        __Sparse_align_first_starts__item_,
        _Sparse_align_first_starts,
        __Sparse_align_second_starts__item_,
        _Sparse_align_second_starts,
        __Sparse_align_lens__item_,
        _Sparse_align_lens,
        __Sparse_align_second_strands__item_,
        _Sparse_align_second_strands,
        __Sparse_align_seg_scores__item_,
        _Sparse_align_seg_scores,
        Sparse_align,
        _Sparse_seg_ext_index,
        Sparse_seg_ext,
        _Score_id,
        __Score_value_real,
        __Score_value_int,
        _Score_value,
        Score,
        _Score_set__item_,
        Score_set,
    ]

class NCBI_Sequence:

    _name_  = 'NCBI-Sequence'
    _oid_   = []
    
    _obj_ = [
        'StringStore',
        'Bioseq',
        'Seq-descr',
        'Seqdesc',
        'MolInfo',
        'GIBB-mol',
        'GIBB-mod',
        'GIBB-method',
        'Numbering',
        'Num-cont',
        'Num-enum',
        'Num-ref',
        'Num-real',
        'Pubdesc',
        'Heterogen',
        'Seq-inst',
        'Seq-ext',
        'Seg-ext',
        'Ref-ext',
        'Map-ext',
        'Delta-ext',
        'Delta-seq',
        'Seq-literal',
        'Seq-hist',
        'Seq-hist-rec',
        'Seq-data',
        'Seq-gap',
        'Linkage-evidence',
        'IUPACna',
        'IUPACaa',
        'NCBI2na',
        'NCBI4na',
        'NCBI8na',
        'NCBIpna',
        'NCBI8aa',
        'NCBIeaa',
        'NCBIpaa',
        'NCBIstdaa',
        'Textannot-id',
        'Annot-id',
        'Annot-descr',
        'Annotdesc',
        'Align-def',
        'Seq-annot',
        ]
    _type_ = [
        'StringStore',
        'Bioseq',
        'Seq-descr',
        'Seqdesc',
        'MolInfo',
        'GIBB-mol',
        'GIBB-mod',
        'GIBB-method',
        'Numbering',
        'Num-cont',
        'Num-enum',
        'Num-ref',
        'Num-real',
        'Pubdesc',
        'Heterogen',
        'Seq-inst',
        'Seq-ext',
        'Seg-ext',
        'Ref-ext',
        'Map-ext',
        'Delta-ext',
        'Delta-seq',
        'Seq-literal',
        'Seq-hist',
        'Seq-hist-rec',
        'Seq-data',
        'Seq-gap',
        'Linkage-evidence',
        'IUPACna',
        'IUPACaa',
        'NCBI2na',
        'NCBI4na',
        'NCBI8na',
        'NCBIpna',
        'NCBI8aa',
        'NCBIeaa',
        'NCBIpaa',
        'NCBIstdaa',
        'Textannot-id',
        'Annot-id',
        'Annot-descr',
        'Annotdesc',
        'Align-def',
        'Seq-annot',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< StringStore >-----#
    StringStore = OCT_STR(name='StringStore', mode=MODE_TYPE, tag=(1, TAG_APPLICATION, TAG_IMPLICIT))
    
    #-----< Bioseq >-----#
    Bioseq = SEQ(name='Bioseq', mode=MODE_TYPE)
    _Bioseq_id = SET_OF(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Bioseq_id__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Bioseq_id._cont = __Bioseq_id__item_
    _Bioseq_descr = SET_OF(name='descr', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Seq-descr')), opt=True)
    _Bioseq_inst = SEQ(name='inst', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Seq-inst')))
    _Bioseq_annot = SET_OF(name='annot', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Bioseq_annot__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Seq-annot')))
    _Bioseq_annot._cont = __Bioseq_annot__item_
    Bioseq._cont = ASN1Dict([
        ('id', _Bioseq_id),
        ('descr', _Bioseq_descr),
        ('inst', _Bioseq_inst),
        ('annot', _Bioseq_annot),
        ])
    Bioseq._ext = None
    
    #-----< Seq-descr >-----#
    Seq_descr = SET_OF(name='Seq-descr', mode=MODE_TYPE)
    _Seq_descr__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Seqdesc')))
    Seq_descr._cont = _Seq_descr__item_
    
    #-----< Seqdesc >-----#
    Seqdesc = CHOICE(name='Seqdesc', mode=MODE_TYPE)
    _Seqdesc_mol_type = ENUM(name='mol-type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'GIBB-mol')))
    _Seqdesc_modif = SET_OF(name='modif', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Seqdesc_modif__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'GIBB-mod')))
    _Seqdesc_modif._cont = __Seqdesc_modif__item_
    _Seqdesc_method = ENUM(name='method', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'GIBB-method')))
    _Seqdesc_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seqdesc_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seqdesc_org = SEQ(name='org', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Organism', 'Org-ref')))
    _Seqdesc_comment = STR_VIS(name='comment', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seqdesc_num = CHOICE(name='num', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Numbering')))
    _Seqdesc_maploc = SEQ(name='maploc', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    _Seqdesc_pir = SEQ(name='pir', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PIR-General', 'PIR-block')))
    _Seqdesc_genbank = SEQ(name='genbank', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GenBank-General', 'GB-block')))
    _Seqdesc_pub = SEQ(name='pub', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Pubdesc')))
    _Seqdesc_region = STR_VIS(name='region', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seqdesc_user = SEQ(name='user', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'User-object')))
    _Seqdesc_sp = SEQ(name='sp', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SP-General', 'SP-block')))
    _Seqdesc_dbxref = SEQ(name='dbxref', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    _Seqdesc_embl = SEQ(name='embl', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EMBL-General', 'EMBL-block')))
    _Seqdesc_create_date = CHOICE(name='create-date', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    _Seqdesc_update_date = CHOICE(name='update-date', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    _Seqdesc_prf = SEQ(name='prf', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PRF-General', 'PRF-block')))
    _Seqdesc_pdb = SEQ(name='pdb', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PDB-General', 'PDB-block')))
    _Seqdesc_het = STR_VIS(name='het', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Heterogen')))
    _Seqdesc_source = SEQ(name='source', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BioSource', 'BioSource')))
    _Seqdesc_molinfo = SEQ(name='molinfo', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'MolInfo')))
    _Seqdesc_modelev = SEQ(name='modelev', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqfeat', 'ModelEvidenceSupport')))
    Seqdesc._cont = ASN1Dict([
        ('mol-type', _Seqdesc_mol_type),
        ('modif', _Seqdesc_modif),
        ('method', _Seqdesc_method),
        ('name', _Seqdesc_name),
        ('title', _Seqdesc_title),
        ('org', _Seqdesc_org),
        ('comment', _Seqdesc_comment),
        ('num', _Seqdesc_num),
        ('maploc', _Seqdesc_maploc),
        ('pir', _Seqdesc_pir),
        ('genbank', _Seqdesc_genbank),
        ('pub', _Seqdesc_pub),
        ('region', _Seqdesc_region),
        ('user', _Seqdesc_user),
        ('sp', _Seqdesc_sp),
        ('dbxref', _Seqdesc_dbxref),
        ('embl', _Seqdesc_embl),
        ('create-date', _Seqdesc_create_date),
        ('update-date', _Seqdesc_update_date),
        ('prf', _Seqdesc_prf),
        ('pdb', _Seqdesc_pdb),
        ('het', _Seqdesc_het),
        ('source', _Seqdesc_source),
        ('molinfo', _Seqdesc_molinfo),
        ('modelev', _Seqdesc_modelev),
        ])
    Seqdesc._ext = None
    
    #-----< MolInfo >-----#
    MolInfo = SEQ(name='MolInfo', mode=MODE_TYPE)
    _MolInfo_biomol = INT(name='biomol', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _MolInfo_biomol._cont = ASN1Dict([('unknown', 0), ('genomic', 1), ('pre-RNA', 2), ('mRNA', 3), ('rRNA', 4), ('tRNA', 5), ('snRNA', 6), ('scRNA', 7), ('peptide', 8), ('other-genetic', 9), ('genomic-mRNA', 10), ('cRNA', 11), ('snoRNA', 12), ('transcribed-RNA', 13), ('ncRNA', 14), ('tmRNA', 15), ('other', 255)])
    _MolInfo_tech = INT(name='tech', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _MolInfo_tech._cont = ASN1Dict([('unknown', 0), ('standard', 1), ('est', 2), ('sts', 3), ('survey', 4), ('genemap', 5), ('physmap', 6), ('derived', 7), ('concept-trans', 8), ('seq-pept', 9), ('both', 10), ('seq-pept-overlap', 11), ('seq-pept-homol', 12), ('concept-trans-a', 13), ('htgs-1', 14), ('htgs-2', 15), ('htgs-3', 16), ('fli-cdna', 17), ('htgs-0', 18), ('htc', 19), ('wgs', 20), ('barcode', 21), ('composite-wgs-htgs', 22), ('tsa', 23), ('targeted', 24), ('other', 255)])
    _MolInfo_techexp = STR_VIS(name='techexp', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MolInfo_completeness = INT(name='completeness', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _MolInfo_completeness._cont = ASN1Dict([('unknown', 0), ('complete', 1), ('partial', 2), ('no-left', 3), ('no-right', 4), ('no-ends', 5), ('has-left', 6), ('has-right', 7), ('other', 255)])
    _MolInfo_gbmoltype = STR_VIS(name='gbmoltype', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    MolInfo._cont = ASN1Dict([
        ('biomol', _MolInfo_biomol),
        ('tech', _MolInfo_tech),
        ('techexp', _MolInfo_techexp),
        ('completeness', _MolInfo_completeness),
        ('gbmoltype', _MolInfo_gbmoltype),
        ])
    MolInfo._ext = None
    
    #-----< GIBB-mol >-----#
    GIBB_mol = ENUM(name='GIBB-mol', mode=MODE_TYPE)
    GIBB_mol._cont = ASN1Dict([('unknown', 0), ('genomic', 1), ('pre-mRNA', 2), ('mRNA', 3), ('rRNA', 4), ('tRNA', 5), ('snRNA', 6), ('scRNA', 7), ('peptide', 8), ('other-genetic', 9), ('genomic-mRNA', 10), ('other', 255)])
    GIBB_mol._ext = None
    
    #-----< GIBB-mod >-----#
    GIBB_mod = ENUM(name='GIBB-mod', mode=MODE_TYPE)
    GIBB_mod._cont = ASN1Dict([('dna', 0), ('rna', 1), ('extrachrom', 2), ('plasmid', 3), ('mitochondrial', 4), ('chloroplast', 5), ('kinetoplast', 6), ('cyanelle', 7), ('synthetic', 8), ('recombinant', 9), ('partial', 10), ('complete', 11), ('mutagen', 12), ('natmut', 13), ('transposon', 14), ('insertion-seq', 15), ('no-left', 16), ('no-right', 17), ('macronuclear', 18), ('proviral', 19), ('est', 20), ('sts', 21), ('survey', 22), ('chromoplast', 23), ('genemap', 24), ('restmap', 25), ('physmap', 26), ('other', 255)])
    GIBB_mod._ext = None
    
    #-----< GIBB-method >-----#
    GIBB_method = ENUM(name='GIBB-method', mode=MODE_TYPE)
    GIBB_method._cont = ASN1Dict([('concept-trans', 1), ('seq-pept', 2), ('both', 3), ('seq-pept-overlap', 4), ('seq-pept-homol', 5), ('concept-trans-a', 6), ('other', 255)])
    GIBB_method._ext = None
    
    #-----< Numbering >-----#
    Numbering = CHOICE(name='Numbering', mode=MODE_TYPE)
    _Numbering_cont = SEQ(name='cont', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Num-cont')))
    _Numbering_enum = SEQ(name='enum', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Num-enum')))
    _Numbering_ref = SEQ(name='ref', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Num-ref')))
    _Numbering_real = SEQ(name='real', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Num-real')))
    Numbering._cont = ASN1Dict([
        ('cont', _Numbering_cont),
        ('enum', _Numbering_enum),
        ('ref', _Numbering_ref),
        ('real', _Numbering_real),
        ])
    Numbering._ext = None
    
    #-----< Num-cont >-----#
    Num_cont = SEQ(name='Num-cont', mode=MODE_TYPE)
    _Num_cont_refnum = INT(name='refnum', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=1)
    _Num_cont_has_zero = BOOL(name='has-zero', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _Num_cont_ascending = BOOL(name='ascending', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=True)
    Num_cont._cont = ASN1Dict([
        ('refnum', _Num_cont_refnum),
        ('has-zero', _Num_cont_has_zero),
        ('ascending', _Num_cont_ascending),
        ])
    Num_cont._ext = None
    
    #-----< Num-enum >-----#
    Num_enum = SEQ(name='Num-enum', mode=MODE_TYPE)
    _Num_enum_num = INT(name='num', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Num_enum_names = SEQ_OF(name='names', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Num_enum_names__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Num_enum_names._cont = __Num_enum_names__item_
    Num_enum._cont = ASN1Dict([
        ('num', _Num_enum_num),
        ('names', _Num_enum_names),
        ])
    Num_enum._ext = None
    
    #-----< Num-ref >-----#
    Num_ref = SEQ(name='Num-ref', mode=MODE_TYPE)
    _Num_ref_type = ENUM(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Num_ref_type._cont = ASN1Dict([('not-set', 0), ('sources', 1), ('aligns', 2)])
    _Num_ref_type._ext = None
    _Num_ref_aligns = SEQ(name='aligns', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqalign', 'Seq-align')), opt=True)
    Num_ref._cont = ASN1Dict([
        ('type', _Num_ref_type),
        ('aligns', _Num_ref_aligns),
        ])
    Num_ref._ext = None
    
    #-----< Num-real >-----#
    Num_real = SEQ(name='Num-real', mode=MODE_TYPE)
    _Num_real_a = REAL(name='a', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Num_real_b = REAL(name='b', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Num_real_units = STR_VIS(name='units', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Num_real._cont = ASN1Dict([
        ('a', _Num_real_a),
        ('b', _Num_real_b),
        ('units', _Num_real_units),
        ])
    Num_real._ext = None
    
    #-----< Pubdesc >-----#
    Pubdesc = SEQ(name='Pubdesc', mode=MODE_TYPE)
    _Pubdesc_pub = SET_OF(name='pub', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Pub', 'Pub-equiv')))
    _Pubdesc_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Pubdesc_fig = STR_VIS(name='fig', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Pubdesc_num = CHOICE(name='num', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Numbering')), opt=True)
    _Pubdesc_numexc = BOOL(name='numexc', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Pubdesc_poly_a = BOOL(name='poly-a', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Pubdesc_maploc = STR_VIS(name='maploc', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Pubdesc_seq_raw = OCT_STR(name='seq-raw', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'StringStore')), opt=True)
    _Pubdesc_align_group = INT(name='align-group', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Pubdesc_comment = STR_VIS(name='comment', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Pubdesc_reftype = INT(name='reftype', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _Pubdesc_reftype._cont = ASN1Dict([('seq', 0), ('sites', 1), ('feats', 2), ('no-target', 3)])
    Pubdesc._cont = ASN1Dict([
        ('pub', _Pubdesc_pub),
        ('name', _Pubdesc_name),
        ('fig', _Pubdesc_fig),
        ('num', _Pubdesc_num),
        ('numexc', _Pubdesc_numexc),
        ('poly-a', _Pubdesc_poly_a),
        ('maploc', _Pubdesc_maploc),
        ('seq-raw', _Pubdesc_seq_raw),
        ('align-group', _Pubdesc_align_group),
        ('comment', _Pubdesc_comment),
        ('reftype', _Pubdesc_reftype),
        ])
    Pubdesc._ext = None
    
    #-----< Heterogen >-----#
    Heterogen = STR_VIS(name='Heterogen', mode=MODE_TYPE)
    
    #-----< Seq-inst >-----#
    Seq_inst = SEQ(name='Seq-inst', mode=MODE_TYPE)
    _Seq_inst_repr = ENUM(name='repr', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seq_inst_repr._cont = ASN1Dict([('not-set', 0), ('virtual', 1), ('raw', 2), ('seg', 3), ('const', 4), ('ref', 5), ('consen', 6), ('map', 7), ('delta', 8), ('other', 255)])
    _Seq_inst_repr._ext = None
    _Seq_inst_mol = ENUM(name='mol', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seq_inst_mol._cont = ASN1Dict([('not-set', 0), ('dna', 1), ('rna', 2), ('aa', 3), ('na', 4), ('other', 255)])
    _Seq_inst_mol._ext = None
    _Seq_inst_length = INT(name='length', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Seq_inst_fuzz = CHOICE(name='fuzz', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Int-fuzz')), opt=True)
    _Seq_inst_topology = ENUM(name='topology', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default='linear')
    _Seq_inst_topology._cont = ASN1Dict([('not-set', 0), ('linear', 1), ('circular', 2), ('tandem', 3), ('other', 255)])
    _Seq_inst_topology._ext = None
    _Seq_inst_strand = ENUM(name='strand', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Seq_inst_strand._cont = ASN1Dict([('not-set', 0), ('ss', 1), ('ds', 2), ('mixed', 3), ('other', 255)])
    _Seq_inst_strand._ext = None
    _Seq_inst_seq_data = CHOICE(name='seq-data', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Seq-data')), opt=True)
    _Seq_inst_ext = CHOICE(name='ext', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Seq-ext')), opt=True)
    _Seq_inst_hist = SEQ(name='hist', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Seq-hist')), opt=True)
    Seq_inst._cont = ASN1Dict([
        ('repr', _Seq_inst_repr),
        ('mol', _Seq_inst_mol),
        ('length', _Seq_inst_length),
        ('fuzz', _Seq_inst_fuzz),
        ('topology', _Seq_inst_topology),
        ('strand', _Seq_inst_strand),
        ('seq-data', _Seq_inst_seq_data),
        ('ext', _Seq_inst_ext),
        ('hist', _Seq_inst_hist),
        ])
    Seq_inst._ext = None
    
    #-----< Seq-ext >-----#
    Seq_ext = CHOICE(name='Seq-ext', mode=MODE_TYPE)
    _Seq_ext_seg = SEQ_OF(name='seg', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Seg-ext')))
    _Seq_ext_ref = CHOICE(name='ref', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Ref-ext')))
    _Seq_ext_map = SEQ_OF(name='map', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Map-ext')))
    _Seq_ext_delta = SEQ_OF(name='delta', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Delta-ext')))
    Seq_ext._cont = ASN1Dict([
        ('seg', _Seq_ext_seg),
        ('ref', _Seq_ext_ref),
        ('map', _Seq_ext_map),
        ('delta', _Seq_ext_delta),
        ])
    Seq_ext._ext = None
    
    #-----< Seg-ext >-----#
    Seg_ext = SEQ_OF(name='Seg-ext', mode=MODE_TYPE)
    _Seg_ext__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    Seg_ext._cont = _Seg_ext__item_
    
    #-----< Ref-ext >-----#
    Ref_ext = CHOICE(name='Ref-ext', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    
    #-----< Map-ext >-----#
    Map_ext = SEQ_OF(name='Map-ext', mode=MODE_TYPE)
    _Map_ext__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqfeat', 'Seq-feat')))
    Map_ext._cont = _Map_ext__item_
    
    #-----< Delta-ext >-----#
    Delta_ext = SEQ_OF(name='Delta-ext', mode=MODE_TYPE)
    _Delta_ext__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Delta-seq')))
    Delta_ext._cont = _Delta_ext__item_
    
    #-----< Delta-seq >-----#
    Delta_seq = CHOICE(name='Delta-seq', mode=MODE_TYPE)
    _Delta_seq_loc = CHOICE(name='loc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Delta_seq_literal = SEQ(name='literal', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Seq-literal')))
    Delta_seq._cont = ASN1Dict([
        ('loc', _Delta_seq_loc),
        ('literal', _Delta_seq_literal),
        ])
    Delta_seq._ext = None
    
    #-----< Seq-literal >-----#
    Seq_literal = SEQ(name='Seq-literal', mode=MODE_TYPE)
    _Seq_literal_length = INT(name='length', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seq_literal_fuzz = CHOICE(name='fuzz', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Int-fuzz')), opt=True)
    _Seq_literal_seq_data = CHOICE(name='seq-data', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Seq-data')), opt=True)
    Seq_literal._cont = ASN1Dict([
        ('length', _Seq_literal_length),
        ('fuzz', _Seq_literal_fuzz),
        ('seq-data', _Seq_literal_seq_data),
        ])
    Seq_literal._ext = None
    
    #-----< Seq-hist >-----#
    Seq_hist = SEQ(name='Seq-hist', mode=MODE_TYPE)
    _Seq_hist_assembly = SET_OF(name='assembly', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Seq_hist_assembly__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Seq-align')))
    _Seq_hist_assembly._cont = __Seq_hist_assembly__item_
    _Seq_hist_replaces = SEQ(name='replaces', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Seq-hist-rec')), opt=True)
    _Seq_hist_replaced_by = SEQ(name='replaced-by', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Seq-hist-rec')), opt=True)
    _Seq_hist_deleted = CHOICE(name='deleted', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __Seq_hist_deleted_bool = BOOL(name='bool', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Seq_hist_deleted_date = CHOICE(name='date', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    _Seq_hist_deleted._cont = ASN1Dict([
        ('bool', __Seq_hist_deleted_bool),
        ('date', __Seq_hist_deleted_date),
        ])
    _Seq_hist_deleted._ext = None
    Seq_hist._cont = ASN1Dict([
        ('assembly', _Seq_hist_assembly),
        ('replaces', _Seq_hist_replaces),
        ('replaced-by', _Seq_hist_replaced_by),
        ('deleted', _Seq_hist_deleted),
        ])
    Seq_hist._ext = None
    
    #-----< Seq-hist-rec >-----#
    Seq_hist_rec = SEQ(name='Seq-hist-rec', mode=MODE_TYPE)
    _Seq_hist_rec_date = CHOICE(name='date', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    _Seq_hist_rec_ids = SET_OF(name='ids', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Seq_hist_rec_ids__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Seq_hist_rec_ids._cont = __Seq_hist_rec_ids__item_
    Seq_hist_rec._cont = ASN1Dict([
        ('date', _Seq_hist_rec_date),
        ('ids', _Seq_hist_rec_ids),
        ])
    Seq_hist_rec._ext = None
    
    #-----< Seq-data >-----#
    Seq_data = CHOICE(name='Seq-data', mode=MODE_TYPE)
    _Seq_data_iupacna = OCT_STR(name='iupacna', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'IUPACna')))
    _Seq_data_iupacaa = OCT_STR(name='iupacaa', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'IUPACaa')))
    _Seq_data_ncbi2na = OCT_STR(name='ncbi2na', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'NCBI2na')))
    _Seq_data_ncbi4na = OCT_STR(name='ncbi4na', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'NCBI4na')))
    _Seq_data_ncbi8na = OCT_STR(name='ncbi8na', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'NCBI8na')))
    _Seq_data_ncbipna = OCT_STR(name='ncbipna', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'NCBIpna')))
    _Seq_data_ncbi8aa = OCT_STR(name='ncbi8aa', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'NCBI8aa')))
    _Seq_data_ncbieaa = OCT_STR(name='ncbieaa', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'NCBIeaa')))
    _Seq_data_ncbipaa = OCT_STR(name='ncbipaa', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'NCBIpaa')))
    _Seq_data_ncbistdaa = OCT_STR(name='ncbistdaa', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'NCBIstdaa')))
    _Seq_data_gap = SEQ(name='gap', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Seq-gap')))
    Seq_data._cont = ASN1Dict([
        ('iupacna', _Seq_data_iupacna),
        ('iupacaa', _Seq_data_iupacaa),
        ('ncbi2na', _Seq_data_ncbi2na),
        ('ncbi4na', _Seq_data_ncbi4na),
        ('ncbi8na', _Seq_data_ncbi8na),
        ('ncbipna', _Seq_data_ncbipna),
        ('ncbi8aa', _Seq_data_ncbi8aa),
        ('ncbieaa', _Seq_data_ncbieaa),
        ('ncbipaa', _Seq_data_ncbipaa),
        ('ncbistdaa', _Seq_data_ncbistdaa),
        ('gap', _Seq_data_gap),
        ])
    Seq_data._ext = None
    
    #-----< Seq-gap >-----#
    Seq_gap = SEQ(name='Seq-gap', mode=MODE_TYPE)
    _Seq_gap_type = INT(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seq_gap_type._cont = ASN1Dict([('unknown', 0), ('fragment', 1), ('clone', 2), ('short-arm', 3), ('heterochromatin', 4), ('centromere', 5), ('telomere', 6), ('repeat', 7), ('contig', 8), ('scaffold', 9), ('other', 255)])
    _Seq_gap_linkage = INT(name='linkage', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Seq_gap_linkage._cont = ASN1Dict([('unlinked', 0), ('linked', 1), ('other', 255)])
    _Seq_gap_linkage_evidence = SET_OF(name='linkage-evidence', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Seq_gap_linkage_evidence__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Linkage-evidence')))
    _Seq_gap_linkage_evidence._cont = __Seq_gap_linkage_evidence__item_
    Seq_gap._cont = ASN1Dict([
        ('type', _Seq_gap_type),
        ('linkage', _Seq_gap_linkage),
        ('linkage-evidence', _Seq_gap_linkage_evidence),
        ])
    Seq_gap._ext = None
    
    #-----< Linkage-evidence >-----#
    Linkage_evidence = SEQ(name='Linkage-evidence', mode=MODE_TYPE)
    _Linkage_evidence_type = INT(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Linkage_evidence_type._cont = ASN1Dict([('paired-ends', 0), ('align-genus', 1), ('align-xgenus', 2), ('align-trnscpt', 3), ('within-clone', 4), ('clone-contig', 5), ('map', 6), ('strobe', 7), ('unspecified', 8), ('pcr', 9), ('other', 255)])
    Linkage_evidence._cont = ASN1Dict([
        ('type', _Linkage_evidence_type),
        ])
    Linkage_evidence._ext = None
    
    #-----< IUPACna >-----#
    IUPACna = OCT_STR(name='IUPACna', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'StringStore')))
    
    #-----< IUPACaa >-----#
    IUPACaa = OCT_STR(name='IUPACaa', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'StringStore')))
    
    #-----< NCBI2na >-----#
    NCBI2na = OCT_STR(name='NCBI2na', mode=MODE_TYPE)
    
    #-----< NCBI4na >-----#
    NCBI4na = OCT_STR(name='NCBI4na', mode=MODE_TYPE)
    
    #-----< NCBI8na >-----#
    NCBI8na = OCT_STR(name='NCBI8na', mode=MODE_TYPE)
    
    #-----< NCBIpna >-----#
    NCBIpna = OCT_STR(name='NCBIpna', mode=MODE_TYPE)
    
    #-----< NCBI8aa >-----#
    NCBI8aa = OCT_STR(name='NCBI8aa', mode=MODE_TYPE)
    
    #-----< NCBIeaa >-----#
    NCBIeaa = OCT_STR(name='NCBIeaa', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'StringStore')))
    
    #-----< NCBIpaa >-----#
    NCBIpaa = OCT_STR(name='NCBIpaa', mode=MODE_TYPE)
    
    #-----< NCBIstdaa >-----#
    NCBIstdaa = OCT_STR(name='NCBIstdaa', mode=MODE_TYPE)
    
    #-----< Textannot-id >-----#
    Textannot_id = SEQ(name='Textannot-id', mode=MODE_TYPE)
    _Textannot_id_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Textannot_id_accession = STR_VIS(name='accession', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Textannot_id_release = STR_VIS(name='release', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Textannot_id_version = INT(name='version', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Textannot_id._cont = ASN1Dict([
        ('name', _Textannot_id_name),
        ('accession', _Textannot_id_accession),
        ('release', _Textannot_id_release),
        ('version', _Textannot_id_version),
        ])
    Textannot_id._ext = None
    
    #-----< Annot-id >-----#
    Annot_id = CHOICE(name='Annot-id', mode=MODE_TYPE)
    _Annot_id_local = CHOICE(name='local', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Object-id')))
    _Annot_id_ncbi = INT(name='ncbi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Annot_id_general = SEQ(name='general', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    _Annot_id_other = SEQ(name='other', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Textannot-id')))
    Annot_id._cont = ASN1Dict([
        ('local', _Annot_id_local),
        ('ncbi', _Annot_id_ncbi),
        ('general', _Annot_id_general),
        ('other', _Annot_id_other),
        ])
    Annot_id._ext = None
    
    #-----< Annot-descr >-----#
    Annot_descr = SET_OF(name='Annot-descr', mode=MODE_TYPE)
    _Annot_descr__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Annotdesc')))
    Annot_descr._cont = _Annot_descr__item_
    
    #-----< Annotdesc >-----#
    Annotdesc = CHOICE(name='Annotdesc', mode=MODE_TYPE)
    _Annotdesc_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Annotdesc_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Annotdesc_comment = STR_VIS(name='comment', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Annotdesc_pub = SEQ(name='pub', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Pubdesc')))
    _Annotdesc_user = SEQ(name='user', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'User-object')))
    _Annotdesc_create_date = CHOICE(name='create-date', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    _Annotdesc_update_date = CHOICE(name='update-date', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    _Annotdesc_src = CHOICE(name='src', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Annotdesc_align = SEQ(name='align', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Align-def')))
    _Annotdesc_region = CHOICE(name='region', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    Annotdesc._cont = ASN1Dict([
        ('name', _Annotdesc_name),
        ('title', _Annotdesc_title),
        ('comment', _Annotdesc_comment),
        ('pub', _Annotdesc_pub),
        ('user', _Annotdesc_user),
        ('create-date', _Annotdesc_create_date),
        ('update-date', _Annotdesc_update_date),
        ('src', _Annotdesc_src),
        ('align', _Annotdesc_align),
        ('region', _Annotdesc_region),
        ])
    Annotdesc._ext = None
    
    #-----< Align-def >-----#
    Align_def = SEQ(name='Align-def', mode=MODE_TYPE)
    _Align_def_align_type = INT(name='align-type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Align_def_align_type._cont = ASN1Dict([('ref', 1), ('alt', 2), ('blocks', 3), ('other', 255)])
    _Align_def_ids = SET_OF(name='ids', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Align_def_ids__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Align_def_ids._cont = __Align_def_ids__item_
    Align_def._cont = ASN1Dict([
        ('align-type', _Align_def_align_type),
        ('ids', _Align_def_ids),
        ])
    Align_def._ext = None
    
    #-----< Seq-annot >-----#
    Seq_annot = SEQ(name='Seq-annot', mode=MODE_TYPE)
    _Seq_annot_id = SET_OF(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Seq_annot_id__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Annot-id')))
    _Seq_annot_id._cont = __Seq_annot_id__item_
    _Seq_annot_db = INT(name='db', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Seq_annot_db._cont = ASN1Dict([('genbank', 1), ('embl', 2), ('ddbj', 3), ('pir', 4), ('sp', 5), ('bbone', 6), ('pdb', 7), ('other', 255)])
    _Seq_annot_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Seq_annot_desc = SET_OF(name='desc', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Annot-descr')), opt=True)
    _Seq_annot_data = CHOICE(name='data', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __Seq_annot_data_ftable = SET_OF(name='ftable', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Seq_annot_data_ftable__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqfeat', 'Seq-feat')))
    __Seq_annot_data_ftable._cont = ___Seq_annot_data_ftable__item_
    __Seq_annot_data_align = SET_OF(name='align', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Seq_annot_data_align__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Seq-align')))
    __Seq_annot_data_align._cont = ___Seq_annot_data_align__item_
    __Seq_annot_data_graph = SET_OF(name='graph', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Seq_annot_data_graph__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqres', 'Seq-graph')))
    __Seq_annot_data_graph._cont = ___Seq_annot_data_graph__item_
    __Seq_annot_data_ids = SET_OF(name='ids', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Seq_annot_data_ids__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    __Seq_annot_data_ids._cont = ___Seq_annot_data_ids__item_
    __Seq_annot_data_locs = SET_OF(name='locs', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Seq_annot_data_locs__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    __Seq_annot_data_locs._cont = ___Seq_annot_data_locs__item_
    __Seq_annot_data_seq_table = SEQ(name='seq-table', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-SeqTable', 'Seq-table')))
    _Seq_annot_data._cont = ASN1Dict([
        ('ftable', __Seq_annot_data_ftable),
        ('align', __Seq_annot_data_align),
        ('graph', __Seq_annot_data_graph),
        ('ids', __Seq_annot_data_ids),
        ('locs', __Seq_annot_data_locs),
        ('seq-table', __Seq_annot_data_seq_table),
        ])
    _Seq_annot_data._ext = None
    Seq_annot._cont = ASN1Dict([
        ('id', _Seq_annot_id),
        ('db', _Seq_annot_db),
        ('name', _Seq_annot_name),
        ('desc', _Seq_annot_desc),
        ('data', _Seq_annot_data),
        ])
    Seq_annot._ext = None
    
    _all_ = [
        StringStore,
        __Bioseq_id__item_,
        _Bioseq_id,
        _Bioseq_descr,
        _Bioseq_inst,
        __Bioseq_annot__item_,
        _Bioseq_annot,
        Bioseq,
        _Seq_descr__item_,
        Seq_descr,
        _Seqdesc_mol_type,
        __Seqdesc_modif__item_,
        _Seqdesc_modif,
        _Seqdesc_method,
        _Seqdesc_name,
        _Seqdesc_title,
        _Seqdesc_org,
        _Seqdesc_comment,
        _Seqdesc_num,
        _Seqdesc_maploc,
        _Seqdesc_pir,
        _Seqdesc_genbank,
        _Seqdesc_pub,
        _Seqdesc_region,
        _Seqdesc_user,
        _Seqdesc_sp,
        _Seqdesc_dbxref,
        _Seqdesc_embl,
        _Seqdesc_create_date,
        _Seqdesc_update_date,
        _Seqdesc_prf,
        _Seqdesc_pdb,
        _Seqdesc_het,
        _Seqdesc_source,
        _Seqdesc_molinfo,
        _Seqdesc_modelev,
        Seqdesc,
        _MolInfo_biomol,
        _MolInfo_tech,
        _MolInfo_techexp,
        _MolInfo_completeness,
        _MolInfo_gbmoltype,
        MolInfo,
        GIBB_mol,
        GIBB_mod,
        GIBB_method,
        _Numbering_cont,
        _Numbering_enum,
        _Numbering_ref,
        _Numbering_real,
        Numbering,
        _Num_cont_refnum,
        _Num_cont_has_zero,
        _Num_cont_ascending,
        Num_cont,
        _Num_enum_num,
        __Num_enum_names__item_,
        _Num_enum_names,
        Num_enum,
        _Num_ref_type,
        _Num_ref_aligns,
        Num_ref,
        _Num_real_a,
        _Num_real_b,
        _Num_real_units,
        Num_real,
        _Pubdesc_pub,
        _Pubdesc_name,
        _Pubdesc_fig,
        _Pubdesc_num,
        _Pubdesc_numexc,
        _Pubdesc_poly_a,
        _Pubdesc_maploc,
        _Pubdesc_seq_raw,
        _Pubdesc_align_group,
        _Pubdesc_comment,
        _Pubdesc_reftype,
        Pubdesc,
        Heterogen,
        _Seq_inst_repr,
        _Seq_inst_mol,
        _Seq_inst_length,
        _Seq_inst_fuzz,
        _Seq_inst_topology,
        _Seq_inst_strand,
        _Seq_inst_seq_data,
        _Seq_inst_ext,
        _Seq_inst_hist,
        Seq_inst,
        _Seq_ext_seg,
        _Seq_ext_ref,
        _Seq_ext_map,
        _Seq_ext_delta,
        Seq_ext,
        _Seg_ext__item_,
        Seg_ext,
        Ref_ext,
        _Map_ext__item_,
        Map_ext,
        _Delta_ext__item_,
        Delta_ext,
        _Delta_seq_loc,
        _Delta_seq_literal,
        Delta_seq,
        _Seq_literal_length,
        _Seq_literal_fuzz,
        _Seq_literal_seq_data,
        Seq_literal,
        __Seq_hist_assembly__item_,
        _Seq_hist_assembly,
        _Seq_hist_replaces,
        _Seq_hist_replaced_by,
        __Seq_hist_deleted_bool,
        __Seq_hist_deleted_date,
        _Seq_hist_deleted,
        Seq_hist,
        _Seq_hist_rec_date,
        __Seq_hist_rec_ids__item_,
        _Seq_hist_rec_ids,
        Seq_hist_rec,
        _Seq_data_iupacna,
        _Seq_data_iupacaa,
        _Seq_data_ncbi2na,
        _Seq_data_ncbi4na,
        _Seq_data_ncbi8na,
        _Seq_data_ncbipna,
        _Seq_data_ncbi8aa,
        _Seq_data_ncbieaa,
        _Seq_data_ncbipaa,
        _Seq_data_ncbistdaa,
        _Seq_data_gap,
        Seq_data,
        _Seq_gap_type,
        _Seq_gap_linkage,
        __Seq_gap_linkage_evidence__item_,
        _Seq_gap_linkage_evidence,
        Seq_gap,
        _Linkage_evidence_type,
        Linkage_evidence,
        IUPACna,
        IUPACaa,
        NCBI2na,
        NCBI4na,
        NCBI8na,
        NCBIpna,
        NCBI8aa,
        NCBIeaa,
        NCBIpaa,
        NCBIstdaa,
        _Textannot_id_name,
        _Textannot_id_accession,
        _Textannot_id_release,
        _Textannot_id_version,
        Textannot_id,
        _Annot_id_local,
        _Annot_id_ncbi,
        _Annot_id_general,
        _Annot_id_other,
        Annot_id,
        _Annot_descr__item_,
        Annot_descr,
        _Annotdesc_name,
        _Annotdesc_title,
        _Annotdesc_comment,
        _Annotdesc_pub,
        _Annotdesc_user,
        _Annotdesc_create_date,
        _Annotdesc_update_date,
        _Annotdesc_src,
        _Annotdesc_align,
        _Annotdesc_region,
        Annotdesc,
        _Align_def_align_type,
        __Align_def_ids__item_,
        _Align_def_ids,
        Align_def,
        __Seq_annot_id__item_,
        _Seq_annot_id,
        _Seq_annot_db,
        _Seq_annot_name,
        _Seq_annot_desc,
        ___Seq_annot_data_ftable__item_,
        __Seq_annot_data_ftable,
        ___Seq_annot_data_align__item_,
        __Seq_annot_data_align,
        ___Seq_annot_data_graph__item_,
        __Seq_annot_data_graph,
        ___Seq_annot_data_ids__item_,
        __Seq_annot_data_ids,
        ___Seq_annot_data_locs__item_,
        __Seq_annot_data_locs,
        __Seq_annot_data_seq_table,
        _Seq_annot_data,
        Seq_annot,
    ]

class EMBL_General:

    _name_  = 'EMBL-General'
    _oid_   = []
    
    _obj_ = [
        'EMBL-dbname',
        'EMBL-xref',
        'EMBL-block',
        ]
    _type_ = [
        'EMBL-dbname',
        'EMBL-xref',
        'EMBL-block',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< EMBL-dbname >-----#
    EMBL_dbname = CHOICE(name='EMBL-dbname', mode=MODE_TYPE)
    _EMBL_dbname_code = ENUM(name='code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EMBL_dbname_code._cont = ASN1Dict([('embl', 0), ('genbank', 1), ('ddbj', 2), ('geninfo', 3), ('medline', 4), ('swissprot', 5), ('pir', 6), ('pdb', 7), ('epd', 8), ('ecd', 9), ('tfd', 10), ('flybase', 11), ('prosite', 12), ('enzyme', 13), ('mim', 14), ('ecoseq', 15), ('hiv', 16), ('other', 255)])
    _EMBL_dbname_code._ext = None
    _EMBL_dbname_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    EMBL_dbname._cont = ASN1Dict([
        ('code', _EMBL_dbname_code),
        ('name', _EMBL_dbname_name),
        ])
    EMBL_dbname._ext = None
    
    #-----< EMBL-xref >-----#
    EMBL_xref = SEQ(name='EMBL-xref', mode=MODE_TYPE)
    _EMBL_xref_dbname = CHOICE(name='dbname', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EMBL-General', 'EMBL-dbname')))
    _EMBL_xref_id = SEQ_OF(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EMBL_xref_id__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'Object-id')))
    _EMBL_xref_id._cont = __EMBL_xref_id__item_
    EMBL_xref._cont = ASN1Dict([
        ('dbname', _EMBL_xref_dbname),
        ('id', _EMBL_xref_id),
        ])
    EMBL_xref._ext = None
    
    #-----< EMBL-block >-----#
    EMBL_block = SEQ(name='EMBL-block', mode=MODE_TYPE)
    _EMBL_block_class_ = ENUM(name='class', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default='standard')
    _EMBL_block_class_._cont = ASN1Dict([('not-set', 0), ('standard', 1), ('unannotated', 2), ('other', 255)])
    _EMBL_block_class_._ext = None
    _EMBL_block_div = ENUM(name='div', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EMBL_block_div._cont = ASN1Dict([('fun', 0), ('inv', 1), ('mam', 2), ('org', 3), ('phg', 4), ('pln', 5), ('pri', 6), ('pro', 7), ('rod', 8), ('syn', 9), ('una', 10), ('vrl', 11), ('vrt', 12), ('pat', 13), ('est', 14), ('sts', 15), ('other', 255)])
    _EMBL_block_div._ext = None
    _EMBL_block_creation_date = CHOICE(name='creation-date', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    _EMBL_block_update_date = CHOICE(name='update-date', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    _EMBL_block_extra_acc = SEQ_OF(name='extra-acc', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __EMBL_block_extra_acc__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _EMBL_block_extra_acc._cont = __EMBL_block_extra_acc__item_
    _EMBL_block_keywords = SEQ_OF(name='keywords', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __EMBL_block_keywords__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _EMBL_block_keywords._cont = __EMBL_block_keywords__item_
    _EMBL_block_xref = SEQ_OF(name='xref', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __EMBL_block_xref__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EMBL-General', 'EMBL-xref')))
    _EMBL_block_xref._cont = __EMBL_block_xref__item_
    EMBL_block._cont = ASN1Dict([
        ('class', _EMBL_block_class_),
        ('div', _EMBL_block_div),
        ('creation-date', _EMBL_block_creation_date),
        ('update-date', _EMBL_block_update_date),
        ('extra-acc', _EMBL_block_extra_acc),
        ('keywords', _EMBL_block_keywords),
        ('xref', _EMBL_block_xref),
        ])
    EMBL_block._ext = None
    
    _all_ = [
        _EMBL_dbname_code,
        _EMBL_dbname_name,
        EMBL_dbname,
        _EMBL_xref_dbname,
        __EMBL_xref_id__item_,
        _EMBL_xref_id,
        EMBL_xref,
        _EMBL_block_class_,
        _EMBL_block_div,
        _EMBL_block_creation_date,
        _EMBL_block_update_date,
        __EMBL_block_extra_acc__item_,
        _EMBL_block_extra_acc,
        __EMBL_block_keywords__item_,
        _EMBL_block_keywords,
        __EMBL_block_xref__item_,
        _EMBL_block_xref,
        EMBL_block,
    ]

class SP_General:

    _name_  = 'SP-General'
    _oid_   = []
    
    _obj_ = [
        'SP-block',
        ]
    _type_ = [
        'SP-block',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< SP-block >-----#
    SP_block = SEQ(name='SP-block', mode=MODE_TYPE)
    _SP_block_class_ = ENUM(name='class', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SP_block_class_._cont = ASN1Dict([('not-set', 0), ('standard', 1), ('prelim', 2), ('other', 255)])
    _SP_block_class_._ext = None
    _SP_block_extra_acc = SET_OF(name='extra-acc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SP_block_extra_acc__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _SP_block_extra_acc._cont = __SP_block_extra_acc__item_
    _SP_block_imeth = BOOL(name='imeth', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _SP_block_plasnm = SET_OF(name='plasnm', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SP_block_plasnm__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _SP_block_plasnm._cont = __SP_block_plasnm__item_
    _SP_block_seqref = SET_OF(name='seqref', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SP_block_seqref__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _SP_block_seqref._cont = __SP_block_seqref__item_
    _SP_block_dbref = SET_OF(name='dbref', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SP_block_dbref__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    _SP_block_dbref._cont = __SP_block_dbref__item_
    _SP_block_keywords = SET_OF(name='keywords', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SP_block_keywords__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _SP_block_keywords._cont = __SP_block_keywords__item_
    _SP_block_created = CHOICE(name='created', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    _SP_block_sequpd = CHOICE(name='sequpd', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    _SP_block_annotupd = CHOICE(name='annotupd', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    SP_block._cont = ASN1Dict([
        ('class', _SP_block_class_),
        ('extra-acc', _SP_block_extra_acc),
        ('imeth', _SP_block_imeth),
        ('plasnm', _SP_block_plasnm),
        ('seqref', _SP_block_seqref),
        ('dbref', _SP_block_dbref),
        ('keywords', _SP_block_keywords),
        ('created', _SP_block_created),
        ('sequpd', _SP_block_sequpd),
        ('annotupd', _SP_block_annotupd),
        ])
    SP_block._ext = None
    
    _all_ = [
        _SP_block_class_,
        __SP_block_extra_acc__item_,
        _SP_block_extra_acc,
        _SP_block_imeth,
        __SP_block_plasnm__item_,
        _SP_block_plasnm,
        __SP_block_seqref__item_,
        _SP_block_seqref,
        __SP_block_dbref__item_,
        _SP_block_dbref,
        __SP_block_keywords__item_,
        _SP_block_keywords,
        _SP_block_created,
        _SP_block_sequpd,
        _SP_block_annotupd,
        SP_block,
    ]

class PIR_General:

    _name_  = 'PIR-General'
    _oid_   = []
    
    _obj_ = [
        'PIR-block',
        ]
    _type_ = [
        'PIR-block',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< PIR-block >-----#
    PIR_block = SEQ(name='PIR-block', mode=MODE_TYPE)
    _PIR_block_had_punct = BOOL(name='had-punct', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PIR_block_host = STR_VIS(name='host', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PIR_block_source = STR_VIS(name='source', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PIR_block_summary = STR_VIS(name='summary', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PIR_block_genetic = STR_VIS(name='genetic', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PIR_block_includes = STR_VIS(name='includes', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PIR_block_placement = STR_VIS(name='placement', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PIR_block_superfamily = STR_VIS(name='superfamily', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PIR_block_keywords = SEQ_OF(name='keywords', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PIR_block_keywords__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _PIR_block_keywords._cont = __PIR_block_keywords__item_
    _PIR_block_cross_reference = STR_VIS(name='cross-reference', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PIR_block_date = STR_VIS(name='date', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PIR_block_seq_raw = STR_VIS(name='seq-raw', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PIR_block_seqref = SET_OF(name='seqref', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PIR_block_seqref__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _PIR_block_seqref._cont = __PIR_block_seqref__item_
    PIR_block._cont = ASN1Dict([
        ('had-punct', _PIR_block_had_punct),
        ('host', _PIR_block_host),
        ('source', _PIR_block_source),
        ('summary', _PIR_block_summary),
        ('genetic', _PIR_block_genetic),
        ('includes', _PIR_block_includes),
        ('placement', _PIR_block_placement),
        ('superfamily', _PIR_block_superfamily),
        ('keywords', _PIR_block_keywords),
        ('cross-reference', _PIR_block_cross_reference),
        ('date', _PIR_block_date),
        ('seq-raw', _PIR_block_seq_raw),
        ('seqref', _PIR_block_seqref),
        ])
    PIR_block._ext = None
    
    _all_ = [
        _PIR_block_had_punct,
        _PIR_block_host,
        _PIR_block_source,
        _PIR_block_summary,
        _PIR_block_genetic,
        _PIR_block_includes,
        _PIR_block_placement,
        _PIR_block_superfamily,
        __PIR_block_keywords__item_,
        _PIR_block_keywords,
        _PIR_block_cross_reference,
        _PIR_block_date,
        _PIR_block_seq_raw,
        __PIR_block_seqref__item_,
        _PIR_block_seqref,
        PIR_block,
    ]

class GenBank_General:

    _name_  = 'GenBank-General'
    _oid_   = []
    
    _obj_ = [
        'GB-block',
        ]
    _type_ = [
        'GB-block',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< GB-block >-----#
    GB_block = SEQ(name='GB-block', mode=MODE_TYPE)
    _GB_block_extra_accessions = SEQ_OF(name='extra-accessions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GB_block_extra_accessions__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _GB_block_extra_accessions._cont = __GB_block_extra_accessions__item_
    _GB_block_source = STR_VIS(name='source', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GB_block_keywords = SEQ_OF(name='keywords', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GB_block_keywords__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _GB_block_keywords._cont = __GB_block_keywords__item_
    _GB_block_origin = STR_VIS(name='origin', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GB_block_date = STR_VIS(name='date', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GB_block_entry_date = CHOICE(name='entry-date', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    _GB_block_div = STR_VIS(name='div', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GB_block_taxonomy = STR_VIS(name='taxonomy', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    GB_block._cont = ASN1Dict([
        ('extra-accessions', _GB_block_extra_accessions),
        ('source', _GB_block_source),
        ('keywords', _GB_block_keywords),
        ('origin', _GB_block_origin),
        ('date', _GB_block_date),
        ('entry-date', _GB_block_entry_date),
        ('div', _GB_block_div),
        ('taxonomy', _GB_block_taxonomy),
        ])
    GB_block._ext = None
    
    _all_ = [
        __GB_block_extra_accessions__item_,
        _GB_block_extra_accessions,
        _GB_block_source,
        __GB_block_keywords__item_,
        _GB_block_keywords,
        _GB_block_origin,
        _GB_block_date,
        _GB_block_entry_date,
        _GB_block_div,
        _GB_block_taxonomy,
        GB_block,
    ]

class PRF_General:

    _name_  = 'PRF-General'
    _oid_   = []
    
    _obj_ = [
        'PRF-block',
        'PRF-ExtraSrc',
        ]
    _type_ = [
        'PRF-block',
        'PRF-ExtraSrc',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< PRF-block >-----#
    PRF_block = SEQ(name='PRF-block', mode=MODE_TYPE)
    _PRF_block_extra_src = SEQ(name='extra-src', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PRF-General', 'PRF-ExtraSrc')), opt=True)
    _PRF_block_keywords = SEQ_OF(name='keywords', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PRF_block_keywords__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _PRF_block_keywords._cont = __PRF_block_keywords__item_
    PRF_block._cont = ASN1Dict([
        ('extra-src', _PRF_block_extra_src),
        ('keywords', _PRF_block_keywords),
        ])
    PRF_block._ext = None
    
    #-----< PRF-ExtraSrc >-----#
    PRF_ExtraSrc = SEQ(name='PRF-ExtraSrc', mode=MODE_TYPE)
    _PRF_ExtraSrc_host = STR_VIS(name='host', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PRF_ExtraSrc_part = STR_VIS(name='part', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PRF_ExtraSrc_state = STR_VIS(name='state', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PRF_ExtraSrc_strain = STR_VIS(name='strain', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PRF_ExtraSrc_taxon = STR_VIS(name='taxon', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    PRF_ExtraSrc._cont = ASN1Dict([
        ('host', _PRF_ExtraSrc_host),
        ('part', _PRF_ExtraSrc_part),
        ('state', _PRF_ExtraSrc_state),
        ('strain', _PRF_ExtraSrc_strain),
        ('taxon', _PRF_ExtraSrc_taxon),
        ])
    PRF_ExtraSrc._ext = None
    
    _all_ = [
        _PRF_block_extra_src,
        __PRF_block_keywords__item_,
        _PRF_block_keywords,
        PRF_block,
        _PRF_ExtraSrc_host,
        _PRF_ExtraSrc_part,
        _PRF_ExtraSrc_state,
        _PRF_ExtraSrc_strain,
        _PRF_ExtraSrc_taxon,
        PRF_ExtraSrc,
    ]

class PDB_General:

    _name_  = 'PDB-General'
    _oid_   = []
    
    _obj_ = [
        'PDB-block',
        'PDB-replace',
        ]
    _type_ = [
        'PDB-block',
        'PDB-replace',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< PDB-block >-----#
    PDB_block = SEQ(name='PDB-block', mode=MODE_TYPE)
    _PDB_block_deposition = CHOICE(name='deposition', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    _PDB_block_class_ = STR_VIS(name='class', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PDB_block_compound = SEQ_OF(name='compound', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDB_block_compound__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _PDB_block_compound._cont = __PDB_block_compound__item_
    _PDB_block_source = SEQ_OF(name='source', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDB_block_source__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _PDB_block_source._cont = __PDB_block_source__item_
    _PDB_block_exp_method = STR_VIS(name='exp-method', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PDB_block_replace = SEQ(name='replace', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PDB-General', 'PDB-replace')), opt=True)
    PDB_block._cont = ASN1Dict([
        ('deposition', _PDB_block_deposition),
        ('class', _PDB_block_class_),
        ('compound', _PDB_block_compound),
        ('source', _PDB_block_source),
        ('exp-method', _PDB_block_exp_method),
        ('replace', _PDB_block_replace),
        ])
    PDB_block._ext = None
    
    #-----< PDB-replace >-----#
    PDB_replace = SEQ(name='PDB-replace', mode=MODE_TYPE)
    _PDB_replace_date = CHOICE(name='date', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')))
    _PDB_replace_ids = SEQ_OF(name='ids', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDB_replace_ids__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _PDB_replace_ids._cont = __PDB_replace_ids__item_
    PDB_replace._cont = ASN1Dict([
        ('date', _PDB_replace_date),
        ('ids', _PDB_replace_ids),
        ])
    PDB_replace._ext = None
    
    _all_ = [
        _PDB_block_deposition,
        _PDB_block_class_,
        __PDB_block_compound__item_,
        _PDB_block_compound,
        __PDB_block_source__item_,
        _PDB_block_source,
        _PDB_block_exp_method,
        _PDB_block_replace,
        PDB_block,
        _PDB_replace_date,
        __PDB_replace_ids__item_,
        _PDB_replace_ids,
        PDB_replace,
    ]

class NCBI_SeqCode:

    _name_  = 'NCBI-SeqCode'
    _oid_   = []
    
    _obj_ = [
        'Seq-code-type',
        'Seq-map-table',
        'Seq-code-table',
        'Seq-code-set',
        ]
    _type_ = [
        'Seq-code-type',
        'Seq-map-table',
        'Seq-code-table',
        'Seq-code-set',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Seq-code-type >-----#
    Seq_code_type = ENUM(name='Seq-code-type', mode=MODE_TYPE)
    Seq_code_type._cont = ASN1Dict([('iupacna', 1), ('iupacaa', 2), ('ncbi2na', 3), ('ncbi4na', 4), ('ncbi8na', 5), ('ncbipna', 6), ('ncbi8aa', 7), ('ncbieaa', 8), ('ncbipaa', 9), ('iupacaa3', 10), ('ncbistdaa', 11)])
    Seq_code_type._ext = None
    
    #-----< Seq-map-table >-----#
    Seq_map_table = SEQ(name='Seq-map-table', mode=MODE_TYPE)
    _Seq_map_table_from_ = ENUM(name='from', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-SeqCode', 'Seq-code-type')))
    _Seq_map_table_to = ENUM(name='to', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-SeqCode', 'Seq-code-type')))
    _Seq_map_table_num = INT(name='num', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seq_map_table_start_at = INT(name='start-at', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _Seq_map_table_table = SEQ_OF(name='table', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Seq_map_table_table__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Seq_map_table_table._cont = __Seq_map_table_table__item_
    Seq_map_table._cont = ASN1Dict([
        ('from', _Seq_map_table_from_),
        ('to', _Seq_map_table_to),
        ('num', _Seq_map_table_num),
        ('start-at', _Seq_map_table_start_at),
        ('table', _Seq_map_table_table),
        ])
    Seq_map_table._ext = None
    
    #-----< Seq-code-table >-----#
    Seq_code_table = SEQ(name='Seq-code-table', mode=MODE_TYPE)
    _Seq_code_table_code = ENUM(name='code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-SeqCode', 'Seq-code-type')))
    _Seq_code_table_num = INT(name='num', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seq_code_table_one_letter = BOOL(name='one-letter', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seq_code_table_start_at = INT(name='start-at', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _Seq_code_table_table = SEQ_OF(name='table', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Seq_code_table_table__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    ___Seq_code_table_table__item__symbol = STR_VIS(name='symbol', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Seq_code_table_table__item__name = STR_VIS(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Seq_code_table_table__item_._cont = ASN1Dict([
        ('symbol', ___Seq_code_table_table__item__symbol),
        ('name', ___Seq_code_table_table__item__name),
        ])
    __Seq_code_table_table__item_._ext = None
    _Seq_code_table_table._cont = __Seq_code_table_table__item_
    _Seq_code_table_comps = SEQ_OF(name='comps', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Seq_code_table_comps__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Seq_code_table_comps._cont = __Seq_code_table_comps__item_
    Seq_code_table._cont = ASN1Dict([
        ('code', _Seq_code_table_code),
        ('num', _Seq_code_table_num),
        ('one-letter', _Seq_code_table_one_letter),
        ('start-at', _Seq_code_table_start_at),
        ('table', _Seq_code_table_table),
        ('comps', _Seq_code_table_comps),
        ])
    Seq_code_table._ext = None
    
    #-----< Seq-code-set >-----#
    Seq_code_set = SEQ(name='Seq-code-set', mode=MODE_TYPE)
    _Seq_code_set_codes = SET_OF(name='codes', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Seq_code_set_codes__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-SeqCode', 'Seq-code-table')))
    _Seq_code_set_codes._cont = __Seq_code_set_codes__item_
    _Seq_code_set_maps = SET_OF(name='maps', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Seq_code_set_maps__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-SeqCode', 'Seq-map-table')))
    _Seq_code_set_maps._cont = __Seq_code_set_maps__item_
    Seq_code_set._cont = ASN1Dict([
        ('codes', _Seq_code_set_codes),
        ('maps', _Seq_code_set_maps),
        ])
    Seq_code_set._ext = None
    
    _all_ = [
        Seq_code_type,
        _Seq_map_table_from_,
        _Seq_map_table_to,
        _Seq_map_table_num,
        _Seq_map_table_start_at,
        __Seq_map_table_table__item_,
        _Seq_map_table_table,
        Seq_map_table,
        _Seq_code_table_code,
        _Seq_code_table_num,
        _Seq_code_table_one_letter,
        _Seq_code_table_start_at,
        ___Seq_code_table_table__item__symbol,
        ___Seq_code_table_table__item__name,
        __Seq_code_table_table__item_,
        _Seq_code_table_table,
        __Seq_code_table_comps__item_,
        _Seq_code_table_comps,
        Seq_code_table,
        __Seq_code_set_codes__item_,
        _Seq_code_set_codes,
        __Seq_code_set_maps__item_,
        _Seq_code_set_maps,
        Seq_code_set,
    ]

class NCBI_Seqfeat:

    _name_  = 'NCBI-Seqfeat'
    _oid_   = []
    
    _obj_ = [
        'Feat-id',
        'Seq-feat',
        'SeqFeatData',
        'SeqFeatXref',
        'SeqFeatSupport',
        'EvidenceCategory',
        'ExperimentSupport',
        'Program-id',
        'EvidenceBasis',
        'InferenceSupport',
        'ModelEvidenceItem',
        'ModelEvidenceSupport',
        'Cdregion',
        'Genetic-code',
        'Code-break',
        'Genetic-code-table',
        'Imp-feat',
        'Gb-qual',
        'Clone-ref',
        'Clone-seq-set',
        'Clone-seq',
        ]
    _type_ = [
        'Feat-id',
        'Seq-feat',
        'SeqFeatData',
        'SeqFeatXref',
        'SeqFeatSupport',
        'EvidenceCategory',
        'ExperimentSupport',
        'Program-id',
        'EvidenceBasis',
        'InferenceSupport',
        'ModelEvidenceItem',
        'ModelEvidenceSupport',
        'Cdregion',
        'Genetic-code',
        'Code-break',
        'Genetic-code-table',
        'Imp-feat',
        'Gb-qual',
        'Clone-ref',
        'Clone-seq-set',
        'Clone-seq',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Feat-id >-----#
    Feat_id = CHOICE(name='Feat-id', mode=MODE_TYPE)
    _Feat_id_gibb = INT(name='gibb', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Feat_id_giim = SEQ(name='giim', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Giimport-id')))
    _Feat_id_local = CHOICE(name='local', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Object-id')))
    _Feat_id_general = SEQ(name='general', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    Feat_id._cont = ASN1Dict([
        ('gibb', _Feat_id_gibb),
        ('giim', _Feat_id_giim),
        ('local', _Feat_id_local),
        ('general', _Feat_id_general),
        ])
    Feat_id._ext = None
    
    #-----< Seq-feat >-----#
    Seq_feat = SEQ(name='Seq-feat', mode=MODE_TYPE)
    _Seq_feat_id = CHOICE(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqfeat', 'Feat-id')), opt=True)
    _Seq_feat_data = CHOICE(name='data', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqfeat', 'SeqFeatData')))
    _Seq_feat_partial = BOOL(name='partial', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Seq_feat_except_ = BOOL(name='except', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Seq_feat_comment = STR_VIS(name='comment', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Seq_feat_product = CHOICE(name='product', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')), opt=True)
    _Seq_feat_location = CHOICE(name='location', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Seq_feat_qual = SEQ_OF(name='qual', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Seq_feat_qual__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqfeat', 'Gb-qual')))
    _Seq_feat_qual._cont = __Seq_feat_qual__item_
    _Seq_feat_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Seq_feat_ext = SEQ(name='ext', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'User-object')), opt=True)
    _Seq_feat_cit = CHOICE(name='cit', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Pub', 'Pub-set')), opt=True)
    _Seq_feat_exp_ev = ENUM(name='exp-ev', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Seq_feat_exp_ev._cont = ASN1Dict([('experimental', 1), ('not-experimental', 2)])
    _Seq_feat_exp_ev._ext = None
    _Seq_feat_xref = SET_OF(name='xref', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Seq_feat_xref__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqfeat', 'SeqFeatXref')))
    _Seq_feat_xref._cont = __Seq_feat_xref__item_
    _Seq_feat_dbxref = SET_OF(name='dbxref', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Seq_feat_dbxref__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    _Seq_feat_dbxref._cont = __Seq_feat_dbxref__item_
    _Seq_feat_pseudo = BOOL(name='pseudo', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Seq_feat_except_text = STR_VIS(name='except-text', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Seq_feat_ids = SET_OF(name='ids', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Seq_feat_ids__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqfeat', 'Feat-id')))
    _Seq_feat_ids._cont = __Seq_feat_ids__item_
    _Seq_feat_exts = SET_OF(name='exts', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Seq_feat_exts__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'User-object')))
    _Seq_feat_exts._cont = __Seq_feat_exts__item_
    _Seq_feat_support = SEQ(name='support', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqfeat', 'SeqFeatSupport')), opt=True)
    Seq_feat._cont = ASN1Dict([
        ('id', _Seq_feat_id),
        ('data', _Seq_feat_data),
        ('partial', _Seq_feat_partial),
        ('except', _Seq_feat_except_),
        ('comment', _Seq_feat_comment),
        ('product', _Seq_feat_product),
        ('location', _Seq_feat_location),
        ('qual', _Seq_feat_qual),
        ('title', _Seq_feat_title),
        ('ext', _Seq_feat_ext),
        ('cit', _Seq_feat_cit),
        ('exp-ev', _Seq_feat_exp_ev),
        ('xref', _Seq_feat_xref),
        ('dbxref', _Seq_feat_dbxref),
        ('pseudo', _Seq_feat_pseudo),
        ('except-text', _Seq_feat_except_text),
        ('ids', _Seq_feat_ids),
        ('exts', _Seq_feat_exts),
        ('support', _Seq_feat_support),
        ])
    Seq_feat._ext = None
    
    #-----< SeqFeatData >-----#
    SeqFeatData = CHOICE(name='SeqFeatData', mode=MODE_TYPE)
    _SeqFeatData_gene = SEQ(name='gene', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Gene', 'Gene-ref')))
    _SeqFeatData_org = SEQ(name='org', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Organism', 'Org-ref')))
    _SeqFeatData_cdregion = SEQ(name='cdregion', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqfeat', 'Cdregion')))
    _SeqFeatData_prot = SEQ(name='prot', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Protein', 'Prot-ref')))
    _SeqFeatData_rna = SEQ(name='rna', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-RNA', 'RNA-ref')))
    _SeqFeatData_pub = SEQ(name='pub', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Pubdesc')))
    _SeqFeatData_seq = CHOICE(name='seq', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _SeqFeatData_imp = SEQ(name='imp', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqfeat', 'Imp-feat')))
    _SeqFeatData_region = STR_VIS(name='region', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SeqFeatData_comment = NULL(name='comment', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SeqFeatData_bond = ENUM(name='bond', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SeqFeatData_bond._cont = ASN1Dict([('disulfide', 1), ('thiolester', 2), ('xlink', 3), ('thioether', 4), ('other', 255)])
    _SeqFeatData_bond._ext = None
    _SeqFeatData_site = ENUM(name='site', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SeqFeatData_site._cont = ASN1Dict([('active', 1), ('binding', 2), ('cleavage', 3), ('inhibit', 4), ('modified', 5), ('glycosylation', 6), ('myristoylation', 7), ('mutagenized', 8), ('metal-binding', 9), ('phosphorylation', 10), ('acetylation', 11), ('amidation', 12), ('methylation', 13), ('hydroxylation', 14), ('sulfatation', 15), ('oxidative-deamination', 16), ('pyrrolidone-carboxylic-acid', 17), ('gamma-carboxyglutamic-acid', 18), ('blocked', 19), ('lipid-binding', 20), ('np-binding', 21), ('dna-binding', 22), ('signal-peptide', 23), ('transit-peptide', 24), ('transmembrane-region', 25), ('nitrosylation', 26), ('other', 255)])
    _SeqFeatData_site._ext = None
    _SeqFeatData_rsite = CHOICE(name='rsite', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Rsite', 'Rsite-ref')))
    _SeqFeatData_user = SEQ(name='user', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'User-object')))
    _SeqFeatData_txinit = SEQ(name='txinit', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-TxInit', 'Txinit')))
    _SeqFeatData_num = CHOICE(name='num', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Numbering')))
    _SeqFeatData_psec_str = ENUM(name='psec-str', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SeqFeatData_psec_str._cont = ASN1Dict([('helix', 1), ('sheet', 2), ('turn', 3)])
    _SeqFeatData_psec_str._ext = None
    _SeqFeatData_non_std_residue = STR_VIS(name='non-std-residue', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SeqFeatData_het = STR_VIS(name='het', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Heterogen')))
    _SeqFeatData_biosrc = SEQ(name='biosrc', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BioSource', 'BioSource')))
    _SeqFeatData_clone = SEQ(name='clone', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqfeat', 'Clone-ref')))
    _SeqFeatData_variation = SEQ(name='variation', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Variation', 'Variation-ref')))
    SeqFeatData._cont = ASN1Dict([
        ('gene', _SeqFeatData_gene),
        ('org', _SeqFeatData_org),
        ('cdregion', _SeqFeatData_cdregion),
        ('prot', _SeqFeatData_prot),
        ('rna', _SeqFeatData_rna),
        ('pub', _SeqFeatData_pub),
        ('seq', _SeqFeatData_seq),
        ('imp', _SeqFeatData_imp),
        ('region', _SeqFeatData_region),
        ('comment', _SeqFeatData_comment),
        ('bond', _SeqFeatData_bond),
        ('site', _SeqFeatData_site),
        ('rsite', _SeqFeatData_rsite),
        ('user', _SeqFeatData_user),
        ('txinit', _SeqFeatData_txinit),
        ('num', _SeqFeatData_num),
        ('psec-str', _SeqFeatData_psec_str),
        ('non-std-residue', _SeqFeatData_non_std_residue),
        ('het', _SeqFeatData_het),
        ('biosrc', _SeqFeatData_biosrc),
        ('clone', _SeqFeatData_clone),
        ('variation', _SeqFeatData_variation),
        ])
    SeqFeatData._ext = None
    
    #-----< SeqFeatXref >-----#
    SeqFeatXref = SEQ(name='SeqFeatXref', mode=MODE_TYPE)
    _SeqFeatXref_id = CHOICE(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqfeat', 'Feat-id')), opt=True)
    _SeqFeatXref_data = CHOICE(name='data', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqfeat', 'SeqFeatData')), opt=True)
    SeqFeatXref._cont = ASN1Dict([
        ('id', _SeqFeatXref_id),
        ('data', _SeqFeatXref_data),
        ])
    SeqFeatXref._ext = None
    
    #-----< SeqFeatSupport >-----#
    SeqFeatSupport = SEQ(name='SeqFeatSupport', mode=MODE_TYPE)
    _SeqFeatSupport_experiment = SET_OF(name='experiment', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SeqFeatSupport_experiment__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqfeat', 'ExperimentSupport')))
    _SeqFeatSupport_experiment._cont = __SeqFeatSupport_experiment__item_
    _SeqFeatSupport_inference = SET_OF(name='inference', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SeqFeatSupport_inference__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqfeat', 'InferenceSupport')))
    _SeqFeatSupport_inference._cont = __SeqFeatSupport_inference__item_
    _SeqFeatSupport_model_evidence = SET_OF(name='model-evidence', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SeqFeatSupport_model_evidence__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqfeat', 'ModelEvidenceSupport')))
    _SeqFeatSupport_model_evidence._cont = __SeqFeatSupport_model_evidence__item_
    SeqFeatSupport._cont = ASN1Dict([
        ('experiment', _SeqFeatSupport_experiment),
        ('inference', _SeqFeatSupport_inference),
        ('model-evidence', _SeqFeatSupport_model_evidence),
        ])
    SeqFeatSupport._ext = None
    
    #-----< EvidenceCategory >-----#
    EvidenceCategory = INT(name='EvidenceCategory', mode=MODE_TYPE)
    EvidenceCategory._cont = ASN1Dict([('not-set', 0), ('coordinates', 1), ('description', 2), ('existence', 3)])
    
    #-----< ExperimentSupport >-----#
    ExperimentSupport = SEQ(name='ExperimentSupport', mode=MODE_TYPE)
    _ExperimentSupport_category = INT(name='category', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqfeat', 'EvidenceCategory')), opt=True)
    _ExperimentSupport_explanation = STR_VIS(name='explanation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ExperimentSupport_pmids = SET_OF(name='pmids', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ExperimentSupport_pmids__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Biblio', 'PubMedId')))
    _ExperimentSupport_pmids._cont = __ExperimentSupport_pmids__item_
    _ExperimentSupport_dois = SET_OF(name='dois', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ExperimentSupport_dois__item_ = STR_VIS(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Biblio', 'DOI')))
    _ExperimentSupport_dois._cont = __ExperimentSupport_dois__item_
    ExperimentSupport._cont = ASN1Dict([
        ('category', _ExperimentSupport_category),
        ('explanation', _ExperimentSupport_explanation),
        ('pmids', _ExperimentSupport_pmids),
        ('dois', _ExperimentSupport_dois),
        ])
    ExperimentSupport._ext = None
    
    #-----< Program-id >-----#
    Program_id = SEQ(name='Program-id', mode=MODE_TYPE)
    _Program_id_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Program_id_version = STR_VIS(name='version', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Program_id._cont = ASN1Dict([
        ('name', _Program_id_name),
        ('version', _Program_id_version),
        ])
    Program_id._ext = None
    
    #-----< EvidenceBasis >-----#
    EvidenceBasis = SEQ(name='EvidenceBasis', mode=MODE_TYPE)
    _EvidenceBasis_programs = SET_OF(name='programs', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __EvidenceBasis_programs__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqfeat', 'Program-id')))
    _EvidenceBasis_programs._cont = __EvidenceBasis_programs__item_
    _EvidenceBasis_accessions = SET_OF(name='accessions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __EvidenceBasis_accessions__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _EvidenceBasis_accessions._cont = __EvidenceBasis_accessions__item_
    EvidenceBasis._cont = ASN1Dict([
        ('programs', _EvidenceBasis_programs),
        ('accessions', _EvidenceBasis_accessions),
        ])
    EvidenceBasis._ext = None
    
    #-----< InferenceSupport >-----#
    InferenceSupport = SEQ(name='InferenceSupport', mode=MODE_TYPE)
    _InferenceSupport_category = INT(name='category', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqfeat', 'EvidenceCategory')), opt=True)
    _InferenceSupport_type = INT(name='type', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _InferenceSupport_type._cont = ASN1Dict([('not-set', 0), ('similar-to-sequence', 1), ('similar-to-aa', 2), ('similar-to-dna', 3), ('similar-to-rna', 4), ('similar-to-mrna', 5), ('similiar-to-est', 6), ('similar-to-other-rna', 7), ('profile', 8), ('nucleotide-motif', 9), ('protein-motif', 10), ('ab-initio-prediction', 11), ('alignment', 12), ('other', 255)])
    _InferenceSupport_other_type = STR_VIS(name='other-type', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InferenceSupport_same_species = BOOL(name='same-species', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _InferenceSupport_basis = SEQ(name='basis', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqfeat', 'EvidenceBasis')))
    _InferenceSupport_pmids = SET_OF(name='pmids', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __InferenceSupport_pmids__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Biblio', 'PubMedId')))
    _InferenceSupport_pmids._cont = __InferenceSupport_pmids__item_
    _InferenceSupport_dois = SET_OF(name='dois', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __InferenceSupport_dois__item_ = STR_VIS(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Biblio', 'DOI')))
    _InferenceSupport_dois._cont = __InferenceSupport_dois__item_
    InferenceSupport._cont = ASN1Dict([
        ('category', _InferenceSupport_category),
        ('type', _InferenceSupport_type),
        ('other-type', _InferenceSupport_other_type),
        ('same-species', _InferenceSupport_same_species),
        ('basis', _InferenceSupport_basis),
        ('pmids', _InferenceSupport_pmids),
        ('dois', _InferenceSupport_dois),
        ])
    InferenceSupport._ext = None
    
    #-----< ModelEvidenceItem >-----#
    ModelEvidenceItem = SEQ(name='ModelEvidenceItem', mode=MODE_TYPE)
    _ModelEvidenceItem_id = CHOICE(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _ModelEvidenceItem_exon_count = INT(name='exon-count', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ModelEvidenceItem_exon_length = INT(name='exon-length', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ModelEvidenceItem_full_length = BOOL(name='full-length', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _ModelEvidenceItem_supports_all_exon_combo = BOOL(name='supports-all-exon-combo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    ModelEvidenceItem._cont = ASN1Dict([
        ('id', _ModelEvidenceItem_id),
        ('exon-count', _ModelEvidenceItem_exon_count),
        ('exon-length', _ModelEvidenceItem_exon_length),
        ('full-length', _ModelEvidenceItem_full_length),
        ('supports-all-exon-combo', _ModelEvidenceItem_supports_all_exon_combo),
        ])
    ModelEvidenceItem._ext = None
    
    #-----< ModelEvidenceSupport >-----#
    ModelEvidenceSupport = SEQ(name='ModelEvidenceSupport', mode=MODE_TYPE)
    _ModelEvidenceSupport_method = STR_VIS(name='method', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ModelEvidenceSupport_mrna = SET_OF(name='mrna', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ModelEvidenceSupport_mrna__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqfeat', 'ModelEvidenceItem')))
    _ModelEvidenceSupport_mrna._cont = __ModelEvidenceSupport_mrna__item_
    _ModelEvidenceSupport_est = SET_OF(name='est', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ModelEvidenceSupport_est__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqfeat', 'ModelEvidenceItem')))
    _ModelEvidenceSupport_est._cont = __ModelEvidenceSupport_est__item_
    _ModelEvidenceSupport_protein = SET_OF(name='protein', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ModelEvidenceSupport_protein__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqfeat', 'ModelEvidenceItem')))
    _ModelEvidenceSupport_protein._cont = __ModelEvidenceSupport_protein__item_
    _ModelEvidenceSupport_identification = CHOICE(name='identification', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')), opt=True)
    _ModelEvidenceSupport_dbxref = SET_OF(name='dbxref', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ModelEvidenceSupport_dbxref__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    _ModelEvidenceSupport_dbxref._cont = __ModelEvidenceSupport_dbxref__item_
    _ModelEvidenceSupport_exon_count = INT(name='exon-count', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ModelEvidenceSupport_exon_length = INT(name='exon-length', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ModelEvidenceSupport_full_length = BOOL(name='full-length', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _ModelEvidenceSupport_supports_all_exon_combo = BOOL(name='supports-all-exon-combo', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    ModelEvidenceSupport._cont = ASN1Dict([
        ('method', _ModelEvidenceSupport_method),
        ('mrna', _ModelEvidenceSupport_mrna),
        ('est', _ModelEvidenceSupport_est),
        ('protein', _ModelEvidenceSupport_protein),
        ('identification', _ModelEvidenceSupport_identification),
        ('dbxref', _ModelEvidenceSupport_dbxref),
        ('exon-count', _ModelEvidenceSupport_exon_count),
        ('exon-length', _ModelEvidenceSupport_exon_length),
        ('full-length', _ModelEvidenceSupport_full_length),
        ('supports-all-exon-combo', _ModelEvidenceSupport_supports_all_exon_combo),
        ])
    ModelEvidenceSupport._ext = None
    
    #-----< Cdregion >-----#
    Cdregion = SEQ(name='Cdregion', mode=MODE_TYPE)
    _Cdregion_orf = BOOL(name='orf', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cdregion_frame = ENUM(name='frame', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default='not-set')
    _Cdregion_frame._cont = ASN1Dict([('not-set', 0), ('one', 1), ('two', 2), ('three', 3)])
    _Cdregion_frame._ext = None
    _Cdregion_conflict = BOOL(name='conflict', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cdregion_gaps = INT(name='gaps', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cdregion_mismatch = INT(name='mismatch', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Cdregion_code = SET_OF(name='code', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqfeat', 'Genetic-code')), opt=True)
    _Cdregion_code_break = SEQ_OF(name='code-break', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Cdregion_code_break__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqfeat', 'Code-break')))
    _Cdregion_code_break._cont = __Cdregion_code_break__item_
    _Cdregion_stops = INT(name='stops', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Cdregion._cont = ASN1Dict([
        ('orf', _Cdregion_orf),
        ('frame', _Cdregion_frame),
        ('conflict', _Cdregion_conflict),
        ('gaps', _Cdregion_gaps),
        ('mismatch', _Cdregion_mismatch),
        ('code', _Cdregion_code),
        ('code-break', _Cdregion_code_break),
        ('stops', _Cdregion_stops),
        ])
    Cdregion._ext = None
    
    #-----< Genetic-code >-----#
    Genetic_code = SET_OF(name='Genetic-code', mode=MODE_TYPE)
    _Genetic_code__item_ = CHOICE(name='_item_', mode=MODE_TYPE)
    __Genetic_code__item__name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Genetic_code__item__id = INT(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Genetic_code__item__ncbieaa = STR_VIS(name='ncbieaa', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Genetic_code__item__ncbi8aa = OCT_STR(name='ncbi8aa', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Genetic_code__item__ncbistdaa = OCT_STR(name='ncbistdaa', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Genetic_code__item__sncbieaa = STR_VIS(name='sncbieaa', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Genetic_code__item__sncbi8aa = OCT_STR(name='sncbi8aa', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Genetic_code__item__sncbistdaa = OCT_STR(name='sncbistdaa', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Genetic_code__item_._cont = ASN1Dict([
        ('name', __Genetic_code__item__name),
        ('id', __Genetic_code__item__id),
        ('ncbieaa', __Genetic_code__item__ncbieaa),
        ('ncbi8aa', __Genetic_code__item__ncbi8aa),
        ('ncbistdaa', __Genetic_code__item__ncbistdaa),
        ('sncbieaa', __Genetic_code__item__sncbieaa),
        ('sncbi8aa', __Genetic_code__item__sncbi8aa),
        ('sncbistdaa', __Genetic_code__item__sncbistdaa),
        ])
    _Genetic_code__item_._ext = None
    Genetic_code._cont = _Genetic_code__item_
    
    #-----< Code-break >-----#
    Code_break = SEQ(name='Code-break', mode=MODE_TYPE)
    _Code_break_loc = CHOICE(name='loc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Code_break_aa = CHOICE(name='aa', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __Code_break_aa_ncbieaa = INT(name='ncbieaa', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Code_break_aa_ncbi8aa = INT(name='ncbi8aa', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Code_break_aa_ncbistdaa = INT(name='ncbistdaa', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Code_break_aa._cont = ASN1Dict([
        ('ncbieaa', __Code_break_aa_ncbieaa),
        ('ncbi8aa', __Code_break_aa_ncbi8aa),
        ('ncbistdaa', __Code_break_aa_ncbistdaa),
        ])
    _Code_break_aa._ext = None
    Code_break._cont = ASN1Dict([
        ('loc', _Code_break_loc),
        ('aa', _Code_break_aa),
        ])
    Code_break._ext = None
    
    #-----< Genetic-code-table >-----#
    Genetic_code_table = SET_OF(name='Genetic-code-table', mode=MODE_TYPE)
    _Genetic_code_table__item_ = SET_OF(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqfeat', 'Genetic-code')))
    Genetic_code_table._cont = _Genetic_code_table__item_
    
    #-----< Imp-feat >-----#
    Imp_feat = SEQ(name='Imp-feat', mode=MODE_TYPE)
    _Imp_feat_key = STR_VIS(name='key', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Imp_feat_loc = STR_VIS(name='loc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Imp_feat_descr = STR_VIS(name='descr', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Imp_feat._cont = ASN1Dict([
        ('key', _Imp_feat_key),
        ('loc', _Imp_feat_loc),
        ('descr', _Imp_feat_descr),
        ])
    Imp_feat._ext = None
    
    #-----< Gb-qual >-----#
    Gb_qual = SEQ(name='Gb-qual', mode=MODE_TYPE)
    _Gb_qual_qual = STR_VIS(name='qual', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Gb_qual_val = STR_VIS(name='val', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Gb_qual._cont = ASN1Dict([
        ('qual', _Gb_qual_qual),
        ('val', _Gb_qual_val),
        ])
    Gb_qual._ext = None
    
    #-----< Clone-ref >-----#
    Clone_ref = SEQ(name='Clone-ref', mode=MODE_TYPE)
    _Clone_ref_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Clone_ref_library = STR_VIS(name='library', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Clone_ref_concordant = BOOL(name='concordant', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _Clone_ref_unique = BOOL(name='unique', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _Clone_ref_placement_method = INT(name='placement-method', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Clone_ref_placement_method._cont = ASN1Dict([('end-seq', 0), ('insert-alignment', 1), ('sts', 2), ('fish', 3), ('fingerprint', 4), ('end-seq-insert-alignment', 5), ('external', 253), ('curated', 254), ('other', 255)])
    _Clone_ref_clone_seq = SET_OF(name='clone-seq', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqfeat', 'Clone-seq-set')), opt=True)
    Clone_ref._cont = ASN1Dict([
        ('name', _Clone_ref_name),
        ('library', _Clone_ref_library),
        ('concordant', _Clone_ref_concordant),
        ('unique', _Clone_ref_unique),
        ('placement-method', _Clone_ref_placement_method),
        ('clone-seq', _Clone_ref_clone_seq),
        ])
    Clone_ref._ext = None
    
    #-----< Clone-seq-set >-----#
    Clone_seq_set = SET_OF(name='Clone-seq-set', mode=MODE_TYPE)
    _Clone_seq_set__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqfeat', 'Clone-seq')))
    Clone_seq_set._cont = _Clone_seq_set__item_
    
    #-----< Clone-seq >-----#
    Clone_seq = SEQ(name='Clone-seq', mode=MODE_TYPE)
    _Clone_seq_type = INT(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Clone_seq_type._cont = ASN1Dict([('insert', 0), ('end', 1), ('other', 255)])
    _Clone_seq_confidence = INT(name='confidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Clone_seq_confidence._cont = ASN1Dict([('multiple', 0), ('na', 1), ('nohit-rep', 2), ('nohitnorep', 3), ('other-chrm', 4), ('unique', 5), ('virtual', 6), ('multiple-rep', 7), ('multiplenorep', 8), ('no-hit', 9), ('other', 255)])
    _Clone_seq_location = CHOICE(name='location', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Clone_seq_seq = CHOICE(name='seq', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')), opt=True)
    _Clone_seq_align_id = SEQ(name='align-id', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'Dbtag')), opt=True)
    _Clone_seq_support = INT(name='support', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Clone_seq_support._cont = ASN1Dict([('prototype', 0), ('supporting', 1), ('supports-other', 2), ('non-supporting', 3)])
    Clone_seq._cont = ASN1Dict([
        ('type', _Clone_seq_type),
        ('confidence', _Clone_seq_confidence),
        ('location', _Clone_seq_location),
        ('seq', _Clone_seq_seq),
        ('align-id', _Clone_seq_align_id),
        ('support', _Clone_seq_support),
        ])
    Clone_seq._ext = None
    
    _all_ = [
        _Feat_id_gibb,
        _Feat_id_giim,
        _Feat_id_local,
        _Feat_id_general,
        Feat_id,
        _Seq_feat_id,
        _Seq_feat_data,
        _Seq_feat_partial,
        _Seq_feat_except_,
        _Seq_feat_comment,
        _Seq_feat_product,
        _Seq_feat_location,
        __Seq_feat_qual__item_,
        _Seq_feat_qual,
        _Seq_feat_title,
        _Seq_feat_ext,
        _Seq_feat_cit,
        _Seq_feat_exp_ev,
        __Seq_feat_xref__item_,
        _Seq_feat_xref,
        __Seq_feat_dbxref__item_,
        _Seq_feat_dbxref,
        _Seq_feat_pseudo,
        _Seq_feat_except_text,
        __Seq_feat_ids__item_,
        _Seq_feat_ids,
        __Seq_feat_exts__item_,
        _Seq_feat_exts,
        _Seq_feat_support,
        Seq_feat,
        _SeqFeatData_gene,
        _SeqFeatData_org,
        _SeqFeatData_cdregion,
        _SeqFeatData_prot,
        _SeqFeatData_rna,
        _SeqFeatData_pub,
        _SeqFeatData_seq,
        _SeqFeatData_imp,
        _SeqFeatData_region,
        _SeqFeatData_comment,
        _SeqFeatData_bond,
        _SeqFeatData_site,
        _SeqFeatData_rsite,
        _SeqFeatData_user,
        _SeqFeatData_txinit,
        _SeqFeatData_num,
        _SeqFeatData_psec_str,
        _SeqFeatData_non_std_residue,
        _SeqFeatData_het,
        _SeqFeatData_biosrc,
        _SeqFeatData_clone,
        _SeqFeatData_variation,
        SeqFeatData,
        _SeqFeatXref_id,
        _SeqFeatXref_data,
        SeqFeatXref,
        __SeqFeatSupport_experiment__item_,
        _SeqFeatSupport_experiment,
        __SeqFeatSupport_inference__item_,
        _SeqFeatSupport_inference,
        __SeqFeatSupport_model_evidence__item_,
        _SeqFeatSupport_model_evidence,
        SeqFeatSupport,
        EvidenceCategory,
        _ExperimentSupport_category,
        _ExperimentSupport_explanation,
        __ExperimentSupport_pmids__item_,
        _ExperimentSupport_pmids,
        __ExperimentSupport_dois__item_,
        _ExperimentSupport_dois,
        ExperimentSupport,
        _Program_id_name,
        _Program_id_version,
        Program_id,
        __EvidenceBasis_programs__item_,
        _EvidenceBasis_programs,
        __EvidenceBasis_accessions__item_,
        _EvidenceBasis_accessions,
        EvidenceBasis,
        _InferenceSupport_category,
        _InferenceSupport_type,
        _InferenceSupport_other_type,
        _InferenceSupport_same_species,
        _InferenceSupport_basis,
        __InferenceSupport_pmids__item_,
        _InferenceSupport_pmids,
        __InferenceSupport_dois__item_,
        _InferenceSupport_dois,
        InferenceSupport,
        _ModelEvidenceItem_id,
        _ModelEvidenceItem_exon_count,
        _ModelEvidenceItem_exon_length,
        _ModelEvidenceItem_full_length,
        _ModelEvidenceItem_supports_all_exon_combo,
        ModelEvidenceItem,
        _ModelEvidenceSupport_method,
        __ModelEvidenceSupport_mrna__item_,
        _ModelEvidenceSupport_mrna,
        __ModelEvidenceSupport_est__item_,
        _ModelEvidenceSupport_est,
        __ModelEvidenceSupport_protein__item_,
        _ModelEvidenceSupport_protein,
        _ModelEvidenceSupport_identification,
        __ModelEvidenceSupport_dbxref__item_,
        _ModelEvidenceSupport_dbxref,
        _ModelEvidenceSupport_exon_count,
        _ModelEvidenceSupport_exon_length,
        _ModelEvidenceSupport_full_length,
        _ModelEvidenceSupport_supports_all_exon_combo,
        ModelEvidenceSupport,
        _Cdregion_orf,
        _Cdregion_frame,
        _Cdregion_conflict,
        _Cdregion_gaps,
        _Cdregion_mismatch,
        _Cdregion_code,
        __Cdregion_code_break__item_,
        _Cdregion_code_break,
        _Cdregion_stops,
        Cdregion,
        __Genetic_code__item__name,
        __Genetic_code__item__id,
        __Genetic_code__item__ncbieaa,
        __Genetic_code__item__ncbi8aa,
        __Genetic_code__item__ncbistdaa,
        __Genetic_code__item__sncbieaa,
        __Genetic_code__item__sncbi8aa,
        __Genetic_code__item__sncbistdaa,
        _Genetic_code__item_,
        Genetic_code,
        _Code_break_loc,
        __Code_break_aa_ncbieaa,
        __Code_break_aa_ncbi8aa,
        __Code_break_aa_ncbistdaa,
        _Code_break_aa,
        Code_break,
        _Genetic_code_table__item_,
        Genetic_code_table,
        _Imp_feat_key,
        _Imp_feat_loc,
        _Imp_feat_descr,
        Imp_feat,
        _Gb_qual_qual,
        _Gb_qual_val,
        Gb_qual,
        _Clone_ref_name,
        _Clone_ref_library,
        _Clone_ref_concordant,
        _Clone_ref_unique,
        _Clone_ref_placement_method,
        _Clone_ref_clone_seq,
        Clone_ref,
        _Clone_seq_set__item_,
        Clone_seq_set,
        _Clone_seq_type,
        _Clone_seq_confidence,
        _Clone_seq_location,
        _Clone_seq_seq,
        _Clone_seq_align_id,
        _Clone_seq_support,
        Clone_seq,
    ]

class NCBI_Variation:

    _name_  = 'NCBI-Variation'
    _oid_   = []
    
    _obj_ = [
        'VariantProperties',
        'Phenotype',
        'Population-data',
        'Ext-loc',
        'Variation-ref',
        'Delta-item',
        'Variation-inst',
        ]
    _type_ = [
        'VariantProperties',
        'Phenotype',
        'Population-data',
        'Ext-loc',
        'Variation-ref',
        'Delta-item',
        'Variation-inst',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< VariantProperties >-----#
    VariantProperties = SEQ(name='VariantProperties', mode=MODE_TYPE)
    _VariantProperties_version = INT(name='version', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _VariantProperties_resource_link = INT(name='resource-link', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VariantProperties_resource_link._cont = ASN1Dict([('preserved', 1), ('provisional', 2), ('has3D', 4), ('submitterLinkout', 8), ('clinical', 16), ('genotypeKit', 32)])
    _VariantProperties_gene_location = INT(name='gene-location', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VariantProperties_gene_location._cont = ASN1Dict([('in-gene', 1), ('near-gene-5', 2), ('near-gene-3', 4), ('intron', 8), ('donor', 16), ('acceptor', 32), ('utr-5', 64), ('utr-3', 128), ('in-start-codon', 256), ('in-stop-codon', 512), ('intergenic', 1024), ('conserved-noncoding', 2048)])
    _VariantProperties_effect = INT(name='effect', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VariantProperties_effect._cont = ASN1Dict([('no-change', 0), ('synonymous', 1), ('nonsense', 2), ('missense', 4), ('frameshift', 8), ('up-regulator', 16), ('down-regulator', 32), ('methylation', 64), ('stop-gain', 128), ('stop-loss', 256)])
    _VariantProperties_mapping = INT(name='mapping', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VariantProperties_mapping._cont = ASN1Dict([('has-other-snp', 1), ('has-assembly-conflict', 2), ('is-assembly-specific', 4)])
    _VariantProperties_map_weight = INT(name='map-weight', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VariantProperties_map_weight._cont = ASN1Dict([('is-uniquely-placed', 1), ('placed-twice-on-same-chrom', 2), ('placed-twice-on-diff-chrom', 3), ('many-placements', 10)])
    _VariantProperties_frequency_based_validation = INT(name='frequency-based-validation', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VariantProperties_frequency_based_validation._cont = ASN1Dict([('is-mutation', 1), ('above-5pct-all', 2), ('above-5pct-1plus', 4), ('validated', 8), ('above-1pct-all', 16), ('above-1pct-1plus', 32)])
    _VariantProperties_genotype = INT(name='genotype', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VariantProperties_genotype._cont = ASN1Dict([('in-haplotype-set', 1), ('has-genotypes', 2)])
    _VariantProperties_project_data = SET_OF(name='project-data', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __VariantProperties_project_data__item_ = INT(name='_item_', mode=MODE_TYPE)
    _VariantProperties_project_data._cont = __VariantProperties_project_data__item_
    _VariantProperties_quality_check = INT(name='quality-check', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VariantProperties_quality_check._cont = ASN1Dict([('contig-allele-missing', 1), ('withdrawn-by-submitter', 2), ('non-overlapping-alleles', 4), ('strain-specific', 8), ('genotype-conflict', 16)])
    _VariantProperties_confidence = INT(name='confidence', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VariantProperties_confidence._cont = ASN1Dict([('unknown', 0), ('likely-artifact', 1), ('other', 255)])
    _VariantProperties_other_validation = BOOL(name='other-validation', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VariantProperties_allele_origin = INT(name='allele-origin', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VariantProperties_allele_origin._cont = ASN1Dict([('unknown', 0), ('germline', 1), ('somatic', 2), ('inherited', 4), ('paternal', 8), ('maternal', 16), ('de-novo', 32), ('biparental', 64), ('uniparental', 128), ('not-tested', 256), ('tested-inconclusive', 512), ('not-reported', 1024), ('other', 1073741824)])
    _VariantProperties_allele_state = INT(name='allele-state', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VariantProperties_allele_state._cont = ASN1Dict([('unknown', 0), ('homozygous', 1), ('heterozygous', 2), ('hemizygous', 3), ('nullizygous', 4), ('other', 255)])
    _VariantProperties_allele_frequency = REAL(name='allele-frequency', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    _VariantProperties_is_ancestral_allele = BOOL(name='is-ancestral-allele', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    VariantProperties._cont = ASN1Dict([
        ('version', _VariantProperties_version),
        ('resource-link', _VariantProperties_resource_link),
        ('gene-location', _VariantProperties_gene_location),
        ('effect', _VariantProperties_effect),
        ('mapping', _VariantProperties_mapping),
        ('map-weight', _VariantProperties_map_weight),
        ('frequency-based-validation', _VariantProperties_frequency_based_validation),
        ('genotype', _VariantProperties_genotype),
        ('project-data', _VariantProperties_project_data),
        ('quality-check', _VariantProperties_quality_check),
        ('confidence', _VariantProperties_confidence),
        ('other-validation', _VariantProperties_other_validation),
        ('allele-origin', _VariantProperties_allele_origin),
        ('allele-state', _VariantProperties_allele_state),
        ('allele-frequency', _VariantProperties_allele_frequency),
        ('is-ancestral-allele', _VariantProperties_is_ancestral_allele),
        ])
    VariantProperties._ext = None
    
    #-----< Phenotype >-----#
    Phenotype = SEQ(name='Phenotype', mode=MODE_TYPE)
    _Phenotype_source = STR_VIS(name='source', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phenotype_term = STR_VIS(name='term', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phenotype_xref = SET_OF(name='xref', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Phenotype_xref__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    _Phenotype_xref._cont = __Phenotype_xref__item_
    _Phenotype_clinical_significance = INT(name='clinical-significance', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phenotype_clinical_significance._cont = ASN1Dict([('unknown', 0), ('untested', 1), ('non-pathogenic', 2), ('probable-non-pathogenic', 3), ('probable-pathogenic', 4), ('pathogenic', 5), ('drug-response', 6), ('histocompatibility', 7), ('other', 255)])
    Phenotype._cont = ASN1Dict([
        ('source', _Phenotype_source),
        ('term', _Phenotype_term),
        ('xref', _Phenotype_xref),
        ('clinical-significance', _Phenotype_clinical_significance),
        ])
    Phenotype._ext = None
    
    #-----< Population-data >-----#
    Population_data = SEQ(name='Population-data', mode=MODE_TYPE)
    _Population_data_population = STR_VIS(name='population', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Population_data_genotype_frequency = REAL(name='genotype-frequency', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    _Population_data_chromosomes_tested = INT(name='chromosomes-tested', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Population_data_sample_ids = SET_OF(name='sample-ids', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Population_data_sample_ids__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'Object-id')))
    _Population_data_sample_ids._cont = __Population_data_sample_ids__item_
    _Population_data_allele_frequency = REAL(name='allele-frequency', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    _Population_data_flags = INT(name='flags', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Population_data_flags._cont = ASN1Dict([('is-default-population', 1), ('is-minor-allele', 2), ('is-rare-allele', 4)])
    Population_data._cont = ASN1Dict([
        ('population', _Population_data_population),
        ('genotype-frequency', _Population_data_genotype_frequency),
        ('chromosomes-tested', _Population_data_chromosomes_tested),
        ('sample-ids', _Population_data_sample_ids),
        ('allele-frequency', _Population_data_allele_frequency),
        ('flags', _Population_data_flags),
        ])
    Population_data._ext = None
    
    #-----< Ext-loc >-----#
    Ext_loc = SEQ(name='Ext-loc', mode=MODE_TYPE)
    _Ext_loc_id = CHOICE(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Object-id')))
    _Ext_loc_location = CHOICE(name='location', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    Ext_loc._cont = ASN1Dict([
        ('id', _Ext_loc_id),
        ('location', _Ext_loc_location),
        ])
    Ext_loc._ext = None
    
    #-----< Variation-ref >-----#
    Variation_ref = SEQ(name='Variation-ref', mode=MODE_TYPE)
    _Variation_ref_id = SEQ(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'Dbtag')), opt=True)
    _Variation_ref_parent_id = SEQ(name='parent-id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'Dbtag')), opt=True)
    _Variation_ref_sample_id = CHOICE(name='sample-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Object-id')), opt=True)
    _Variation_ref_other_ids = SET_OF(name='other-ids', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Variation_ref_other_ids__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    _Variation_ref_other_ids._cont = __Variation_ref_other_ids__item_
    _Variation_ref_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Variation_ref_synonyms = SET_OF(name='synonyms', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Variation_ref_synonyms__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Variation_ref_synonyms._cont = __Variation_ref_synonyms__item_
    _Variation_ref_description = STR_VIS(name='description', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Variation_ref_phenotype = SET_OF(name='phenotype', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Variation_ref_phenotype__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Variation', 'Phenotype')))
    _Variation_ref_phenotype._cont = __Variation_ref_phenotype__item_
    _Variation_ref_method = SET_OF(name='method', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Variation_ref_method__item_ = INT(name='_item_', mode=MODE_TYPE)
    __Variation_ref_method__item_._cont = ASN1Dict([('unknown', 0), ('bac-acgh', 1), ('computational', 2), ('curated', 3), ('digital-array', 4), ('expression-array', 5), ('fish', 6), ('flanking-sequence', 7), ('maph', 8), ('mcd-analysis', 9), ('mlpa', 10), ('oea-assembly', 11), ('oligo-acgh', 12), ('paired-end', 13), ('pcr', 14), ('qpcr', 15), ('read-depth', 16), ('roma', 17), ('rt-pcr', 18), ('sage', 19), ('sequence-alignment', 20), ('sequencing', 21), ('snp-array', 22), ('snp-genoytyping', 23), ('southern', 24), ('western', 25), ('optical-mapping', 26), ('other', 255)])
    _Variation_ref_method._cont = __Variation_ref_method__item_
    _Variation_ref_population_data = SET_OF(name='population-data', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Variation_ref_population_data__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Variation', 'Population-data')))
    _Variation_ref_population_data._cont = __Variation_ref_population_data__item_
    _Variation_ref_variant_prop = SEQ(name='variant-prop', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Variation', 'VariantProperties')), opt=True)
    _Variation_ref_validated = BOOL(name='validated', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Variation_ref_clinical_test = SET_OF(name='clinical-test', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Variation_ref_clinical_test__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    _Variation_ref_clinical_test._cont = __Variation_ref_clinical_test__item_
    _Variation_ref_allele_origin = INT(name='allele-origin', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Variation_ref_allele_origin._cont = ASN1Dict([('unknown', 0), ('germline', 1), ('somatic', 2), ('inherited', 4), ('paternal', 8), ('maternal', 16), ('de-novo', 32), ('biparental', 64), ('uniparental', 128), ('not-tested', 256), ('tested-inconclusive', 512), ('other', 1073741824)])
    _Variation_ref_allele_state = INT(name='allele-state', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Variation_ref_allele_state._cont = ASN1Dict([('unknown', 0), ('homozygous', 1), ('heterozygous', 2), ('hemizygous', 3), ('nullizygous', 4), ('other', 255)])
    _Variation_ref_allele_frequency = REAL(name='allele-frequency', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    _Variation_ref_is_ancestral_allele = BOOL(name='is-ancestral-allele', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Variation_ref_pub = CHOICE(name='pub', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Pub', 'Pub')), opt=True)
    _Variation_ref_data = CHOICE(name='data', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __Variation_ref_data_unknown = NULL(name='unknown', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Variation_ref_data_note = STR_VIS(name='note', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Variation_ref_data_uniparental_disomy = NULL(name='uniparental-disomy', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Variation_ref_data_instance = SEQ(name='instance', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Variation', 'Variation-inst')))
    __Variation_ref_data_set = SEQ(name='set', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Variation_ref_data_set_type = INT(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Variation_ref_data_set_type._cont = ASN1Dict([('unknown', 0), ('compound', 1), ('products', 2), ('haplotype', 3), ('genotype', 4), ('mosaic', 5), ('individual', 6), ('population', 7), ('alleles', 8), ('package', 9), ('other', 255)])
    ___Variation_ref_data_set_variations = SET_OF(name='variations', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____Variation_ref_data_set_variations__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Variation', 'Variation-ref')))
    ___Variation_ref_data_set_variations._cont = ____Variation_ref_data_set_variations__item_
    ___Variation_ref_data_set_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Variation_ref_data_set._cont = ASN1Dict([
        ('type', ___Variation_ref_data_set_type),
        ('variations', ___Variation_ref_data_set_variations),
        ('name', ___Variation_ref_data_set_name),
        ])
    __Variation_ref_data_set._ext = None
    __Variation_ref_data_complex = NULL(name='complex', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Variation_ref_data._cont = ASN1Dict([
        ('unknown', __Variation_ref_data_unknown),
        ('note', __Variation_ref_data_note),
        ('uniparental-disomy', __Variation_ref_data_uniparental_disomy),
        ('instance', __Variation_ref_data_instance),
        ('set', __Variation_ref_data_set),
        ('complex', __Variation_ref_data_complex),
        ])
    _Variation_ref_data._ext = None
    _Variation_ref_consequence = SET_OF(name='consequence', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Variation_ref_consequence__item_ = CHOICE(name='_item_', mode=MODE_TYPE)
    ___Variation_ref_consequence__item__unknown = NULL(name='unknown', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Variation_ref_consequence__item__splicing = NULL(name='splicing', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Variation_ref_consequence__item__note = STR_VIS(name='note', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Variation_ref_consequence__item__variation = SEQ(name='variation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Variation', 'Variation-ref')))
    ___Variation_ref_consequence__item__frameshift = SEQ(name='frameshift', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____Variation_ref_consequence__item__frameshift_phase = INT(name='phase', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____Variation_ref_consequence__item__frameshift_x_length = INT(name='x-length', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Variation_ref_consequence__item__frameshift._cont = ASN1Dict([
        ('phase', ____Variation_ref_consequence__item__frameshift_phase),
        ('x-length', ____Variation_ref_consequence__item__frameshift_x_length),
        ])
    ___Variation_ref_consequence__item__frameshift._ext = None
    ___Variation_ref_consequence__item__loss_of_heterozygosity = SEQ(name='loss-of-heterozygosity', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____Variation_ref_consequence__item__loss_of_heterozygosity_reference = STR_VIS(name='reference', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____Variation_ref_consequence__item__loss_of_heterozygosity_test = STR_VIS(name='test', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___Variation_ref_consequence__item__loss_of_heterozygosity._cont = ASN1Dict([
        ('reference', ____Variation_ref_consequence__item__loss_of_heterozygosity_reference),
        ('test', ____Variation_ref_consequence__item__loss_of_heterozygosity_test),
        ])
    ___Variation_ref_consequence__item__loss_of_heterozygosity._ext = None
    __Variation_ref_consequence__item_._cont = ASN1Dict([
        ('unknown', ___Variation_ref_consequence__item__unknown),
        ('splicing', ___Variation_ref_consequence__item__splicing),
        ('note', ___Variation_ref_consequence__item__note),
        ('variation', ___Variation_ref_consequence__item__variation),
        ('frameshift', ___Variation_ref_consequence__item__frameshift),
        ('loss-of-heterozygosity', ___Variation_ref_consequence__item__loss_of_heterozygosity),
        ])
    __Variation_ref_consequence__item_._ext = None
    _Variation_ref_consequence._cont = __Variation_ref_consequence__item_
    _Variation_ref_location = CHOICE(name='location', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')), opt=True)
    _Variation_ref_ext_locs = SET_OF(name='ext-locs', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Variation_ref_ext_locs__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Variation', 'Ext-loc')))
    _Variation_ref_ext_locs._cont = __Variation_ref_ext_locs__item_
    _Variation_ref_ext = SEQ(name='ext', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'User-object')), opt=True)
    _Variation_ref_somatic_origin = SET_OF(name='somatic-origin', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Variation_ref_somatic_origin__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    ___Variation_ref_somatic_origin__item__source = SEQ(name='source', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BioSource', 'SubSource')), opt=True)
    ___Variation_ref_somatic_origin__item__condition = SEQ(name='condition', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____Variation_ref_somatic_origin__item__condition_description = STR_VIS(name='description', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____Variation_ref_somatic_origin__item__condition_object_id = SET_OF(name='object-id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _____Variation_ref_somatic_origin__item__condition_object_id__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    ____Variation_ref_somatic_origin__item__condition_object_id._cont = _____Variation_ref_somatic_origin__item__condition_object_id__item_
    ___Variation_ref_somatic_origin__item__condition._cont = ASN1Dict([
        ('description', ____Variation_ref_somatic_origin__item__condition_description),
        ('object-id', ____Variation_ref_somatic_origin__item__condition_object_id),
        ])
    ___Variation_ref_somatic_origin__item__condition._ext = None
    __Variation_ref_somatic_origin__item_._cont = ASN1Dict([
        ('source', ___Variation_ref_somatic_origin__item__source),
        ('condition', ___Variation_ref_somatic_origin__item__condition),
        ])
    __Variation_ref_somatic_origin__item_._ext = None
    _Variation_ref_somatic_origin._cont = __Variation_ref_somatic_origin__item_
    Variation_ref._cont = ASN1Dict([
        ('id', _Variation_ref_id),
        ('parent-id', _Variation_ref_parent_id),
        ('sample-id', _Variation_ref_sample_id),
        ('other-ids', _Variation_ref_other_ids),
        ('name', _Variation_ref_name),
        ('synonyms', _Variation_ref_synonyms),
        ('description', _Variation_ref_description),
        ('phenotype', _Variation_ref_phenotype),
        ('method', _Variation_ref_method),
        ('population-data', _Variation_ref_population_data),
        ('variant-prop', _Variation_ref_variant_prop),
        ('validated', _Variation_ref_validated),
        ('clinical-test', _Variation_ref_clinical_test),
        ('allele-origin', _Variation_ref_allele_origin),
        ('allele-state', _Variation_ref_allele_state),
        ('allele-frequency', _Variation_ref_allele_frequency),
        ('is-ancestral-allele', _Variation_ref_is_ancestral_allele),
        ('pub', _Variation_ref_pub),
        ('data', _Variation_ref_data),
        ('consequence', _Variation_ref_consequence),
        ('location', _Variation_ref_location),
        ('ext-locs', _Variation_ref_ext_locs),
        ('ext', _Variation_ref_ext),
        ('somatic-origin', _Variation_ref_somatic_origin),
        ])
    Variation_ref._ext = None
    
    #-----< Delta-item >-----#
    Delta_item = SEQ(name='Delta-item', mode=MODE_TYPE)
    _Delta_item_seq = CHOICE(name='seq', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __Delta_item_seq_literal = SEQ(name='literal', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Seq-literal')))
    __Delta_item_seq_loc = CHOICE(name='loc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    __Delta_item_seq_this = NULL(name='this', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Delta_item_seq._cont = ASN1Dict([
        ('literal', __Delta_item_seq_literal),
        ('loc', __Delta_item_seq_loc),
        ('this', __Delta_item_seq_this),
        ])
    _Delta_item_seq._ext = None
    _Delta_item_multiplier = INT(name='multiplier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Delta_item_multiplier_fuzz = CHOICE(name='multiplier-fuzz', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Int-fuzz')), opt=True)
    _Delta_item_action = INT(name='action', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _Delta_item_action._cont = ASN1Dict([('morph', 0), ('offset', 1), ('del-at', 2), ('ins-before', 3)])
    Delta_item._cont = ASN1Dict([
        ('seq', _Delta_item_seq),
        ('multiplier', _Delta_item_multiplier),
        ('multiplier-fuzz', _Delta_item_multiplier_fuzz),
        ('action', _Delta_item_action),
        ])
    Delta_item._ext = None
    
    #-----< Variation-inst >-----#
    Variation_inst = SEQ(name='Variation-inst', mode=MODE_TYPE)
    _Variation_inst_type = INT(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Variation_inst_type._cont = ASN1Dict([('unknown', 0), ('identity', 1), ('inv', 2), ('snv', 3), ('mnp', 4), ('delins', 5), ('del', 6), ('ins', 7), ('microsatellite', 8), ('transposon', 9), ('cnv', 10), ('direct-copy', 11), ('rev-direct-copy', 12), ('inverted-copy', 13), ('everted-copy', 14), ('translocation', 15), ('prot-missense', 16), ('prot-nonsense', 17), ('prot-neutral', 18), ('prot-silent', 19), ('prot-other', 20), ('other', 255)])
    _Variation_inst_delta = SEQ_OF(name='delta', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Variation_inst_delta__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Variation', 'Delta-item')))
    _Variation_inst_delta._cont = __Variation_inst_delta__item_
    _Variation_inst_observation = INT(name='observation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Variation_inst_observation._cont = ASN1Dict([('asserted', 1), ('reference', 2), ('variant', 4)])
    Variation_inst._cont = ASN1Dict([
        ('type', _Variation_inst_type),
        ('delta', _Variation_inst_delta),
        ('observation', _Variation_inst_observation),
        ])
    Variation_inst._ext = None
    
    _all_ = [
        _VariantProperties_version,
        _VariantProperties_resource_link,
        _VariantProperties_gene_location,
        _VariantProperties_effect,
        _VariantProperties_mapping,
        _VariantProperties_map_weight,
        _VariantProperties_frequency_based_validation,
        _VariantProperties_genotype,
        __VariantProperties_project_data__item_,
        _VariantProperties_project_data,
        _VariantProperties_quality_check,
        _VariantProperties_confidence,
        _VariantProperties_other_validation,
        _VariantProperties_allele_origin,
        _VariantProperties_allele_state,
        _VariantProperties_allele_frequency,
        _VariantProperties_is_ancestral_allele,
        VariantProperties,
        _Phenotype_source,
        _Phenotype_term,
        __Phenotype_xref__item_,
        _Phenotype_xref,
        _Phenotype_clinical_significance,
        Phenotype,
        _Population_data_population,
        _Population_data_genotype_frequency,
        _Population_data_chromosomes_tested,
        __Population_data_sample_ids__item_,
        _Population_data_sample_ids,
        _Population_data_allele_frequency,
        _Population_data_flags,
        Population_data,
        _Ext_loc_id,
        _Ext_loc_location,
        Ext_loc,
        _Variation_ref_id,
        _Variation_ref_parent_id,
        _Variation_ref_sample_id,
        __Variation_ref_other_ids__item_,
        _Variation_ref_other_ids,
        _Variation_ref_name,
        __Variation_ref_synonyms__item_,
        _Variation_ref_synonyms,
        _Variation_ref_description,
        __Variation_ref_phenotype__item_,
        _Variation_ref_phenotype,
        __Variation_ref_method__item_,
        _Variation_ref_method,
        __Variation_ref_population_data__item_,
        _Variation_ref_population_data,
        _Variation_ref_variant_prop,
        _Variation_ref_validated,
        __Variation_ref_clinical_test__item_,
        _Variation_ref_clinical_test,
        _Variation_ref_allele_origin,
        _Variation_ref_allele_state,
        _Variation_ref_allele_frequency,
        _Variation_ref_is_ancestral_allele,
        _Variation_ref_pub,
        __Variation_ref_data_unknown,
        __Variation_ref_data_note,
        __Variation_ref_data_uniparental_disomy,
        __Variation_ref_data_instance,
        ___Variation_ref_data_set_type,
        ____Variation_ref_data_set_variations__item_,
        ___Variation_ref_data_set_variations,
        ___Variation_ref_data_set_name,
        __Variation_ref_data_set,
        __Variation_ref_data_complex,
        _Variation_ref_data,
        ___Variation_ref_consequence__item__unknown,
        ___Variation_ref_consequence__item__splicing,
        ___Variation_ref_consequence__item__note,
        ___Variation_ref_consequence__item__variation,
        ____Variation_ref_consequence__item__frameshift_phase,
        ____Variation_ref_consequence__item__frameshift_x_length,
        ___Variation_ref_consequence__item__frameshift,
        ____Variation_ref_consequence__item__loss_of_heterozygosity_reference,
        ____Variation_ref_consequence__item__loss_of_heterozygosity_test,
        ___Variation_ref_consequence__item__loss_of_heterozygosity,
        __Variation_ref_consequence__item_,
        _Variation_ref_consequence,
        _Variation_ref_location,
        __Variation_ref_ext_locs__item_,
        _Variation_ref_ext_locs,
        _Variation_ref_ext,
        ___Variation_ref_somatic_origin__item__source,
        ____Variation_ref_somatic_origin__item__condition_description,
        _____Variation_ref_somatic_origin__item__condition_object_id__item_,
        ____Variation_ref_somatic_origin__item__condition_object_id,
        ___Variation_ref_somatic_origin__item__condition,
        __Variation_ref_somatic_origin__item_,
        _Variation_ref_somatic_origin,
        Variation_ref,
        __Delta_item_seq_literal,
        __Delta_item_seq_loc,
        __Delta_item_seq_this,
        _Delta_item_seq,
        _Delta_item_multiplier,
        _Delta_item_multiplier_fuzz,
        _Delta_item_action,
        Delta_item,
        _Variation_inst_type,
        __Variation_inst_delta__item_,
        _Variation_inst_delta,
        _Variation_inst_observation,
        Variation_inst,
    ]

class NCBI_Rsite:

    _name_  = 'NCBI-Rsite'
    _oid_   = []
    
    _obj_ = [
        'Rsite-ref',
        ]
    _type_ = [
        'Rsite-ref',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Rsite-ref >-----#
    Rsite_ref = CHOICE(name='Rsite-ref', mode=MODE_TYPE)
    _Rsite_ref_str = STR_VIS(name='str', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Rsite_ref_db = SEQ(name='db', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    Rsite_ref._cont = ASN1Dict([
        ('str', _Rsite_ref_str),
        ('db', _Rsite_ref_db),
        ])
    Rsite_ref._ext = None
    
    _all_ = [
        _Rsite_ref_str,
        _Rsite_ref_db,
        Rsite_ref,
    ]

class NCBI_RNA:

    _name_  = 'NCBI-RNA'
    _oid_   = []
    
    _obj_ = [
        'RNA-ref',
        'Trna-ext',
        'RNA-gen',
        'RNA-qual',
        'RNA-qual-set',
        ]
    _type_ = [
        'RNA-ref',
        'Trna-ext',
        'RNA-gen',
        'RNA-qual',
        'RNA-qual-set',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< RNA-ref >-----#
    RNA_ref = SEQ(name='RNA-ref', mode=MODE_TYPE)
    _RNA_ref_type = ENUM(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RNA_ref_type._cont = ASN1Dict([('unknown', 0), ('premsg', 1), ('mRNA', 2), ('tRNA', 3), ('rRNA', 4), ('snRNA', 5), ('scRNA', 6), ('snoRNA', 7), ('ncRNA', 8), ('tmRNA', 9), ('miscRNA', 10), ('other', 255)])
    _RNA_ref_type._ext = None
    _RNA_ref_pseudo = BOOL(name='pseudo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RNA_ref_ext = CHOICE(name='ext', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __RNA_ref_ext_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RNA_ref_ext_tRNA = SEQ(name='tRNA', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-RNA', 'Trna-ext')))
    __RNA_ref_ext_gen = SEQ(name='gen', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-RNA', 'RNA-gen')))
    _RNA_ref_ext._cont = ASN1Dict([
        ('name', __RNA_ref_ext_name),
        ('tRNA', __RNA_ref_ext_tRNA),
        ('gen', __RNA_ref_ext_gen),
        ])
    _RNA_ref_ext._ext = None
    RNA_ref._cont = ASN1Dict([
        ('type', _RNA_ref_type),
        ('pseudo', _RNA_ref_pseudo),
        ('ext', _RNA_ref_ext),
        ])
    RNA_ref._ext = None
    
    #-----< Trna-ext >-----#
    Trna_ext = SEQ(name='Trna-ext', mode=MODE_TYPE)
    _Trna_ext_aa = CHOICE(name='aa', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __Trna_ext_aa_iupacaa = INT(name='iupacaa', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Trna_ext_aa_ncbieaa = INT(name='ncbieaa', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Trna_ext_aa_ncbi8aa = INT(name='ncbi8aa', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Trna_ext_aa_ncbistdaa = INT(name='ncbistdaa', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Trna_ext_aa._cont = ASN1Dict([
        ('iupacaa', __Trna_ext_aa_iupacaa),
        ('ncbieaa', __Trna_ext_aa_ncbieaa),
        ('ncbi8aa', __Trna_ext_aa_ncbi8aa),
        ('ncbistdaa', __Trna_ext_aa_ncbistdaa),
        ])
    _Trna_ext_aa._ext = None
    _Trna_ext_codon = SET_OF(name='codon', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Trna_ext_codon__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Trna_ext_codon._cont = __Trna_ext_codon__item_
    _Trna_ext_anticodon = CHOICE(name='anticodon', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')), opt=True)
    Trna_ext._cont = ASN1Dict([
        ('aa', _Trna_ext_aa),
        ('codon', _Trna_ext_codon),
        ('anticodon', _Trna_ext_anticodon),
        ])
    Trna_ext._ext = None
    
    #-----< RNA-gen >-----#
    RNA_gen = SEQ(name='RNA-gen', mode=MODE_TYPE)
    _RNA_gen_class_ = STR_VIS(name='class', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RNA_gen_product = STR_VIS(name='product', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RNA_gen_quals = SEQ_OF(name='quals', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-RNA', 'RNA-qual-set')), opt=True)
    RNA_gen._cont = ASN1Dict([
        ('class', _RNA_gen_class_),
        ('product', _RNA_gen_product),
        ('quals', _RNA_gen_quals),
        ])
    RNA_gen._ext = None
    
    #-----< RNA-qual >-----#
    RNA_qual = SEQ(name='RNA-qual', mode=MODE_TYPE)
    _RNA_qual_qual = STR_VIS(name='qual', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RNA_qual_val = STR_VIS(name='val', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    RNA_qual._cont = ASN1Dict([
        ('qual', _RNA_qual_qual),
        ('val', _RNA_qual_val),
        ])
    RNA_qual._ext = None
    
    #-----< RNA-qual-set >-----#
    RNA_qual_set = SEQ_OF(name='RNA-qual-set', mode=MODE_TYPE)
    _RNA_qual_set__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-RNA', 'RNA-qual')))
    RNA_qual_set._cont = _RNA_qual_set__item_
    
    _all_ = [
        _RNA_ref_type,
        _RNA_ref_pseudo,
        __RNA_ref_ext_name,
        __RNA_ref_ext_tRNA,
        __RNA_ref_ext_gen,
        _RNA_ref_ext,
        RNA_ref,
        __Trna_ext_aa_iupacaa,
        __Trna_ext_aa_ncbieaa,
        __Trna_ext_aa_ncbi8aa,
        __Trna_ext_aa_ncbistdaa,
        _Trna_ext_aa,
        __Trna_ext_codon__item_,
        _Trna_ext_codon,
        _Trna_ext_anticodon,
        Trna_ext,
        _RNA_gen_class_,
        _RNA_gen_product,
        _RNA_gen_quals,
        RNA_gen,
        _RNA_qual_qual,
        _RNA_qual_val,
        RNA_qual,
        _RNA_qual_set__item_,
        RNA_qual_set,
    ]

class NCBI_Gene:

    _name_  = 'NCBI-Gene'
    _oid_   = []
    
    _obj_ = [
        'Gene-ref',
        'Gene-nomenclature',
        ]
    _type_ = [
        'Gene-ref',
        'Gene-nomenclature',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Gene-ref >-----#
    Gene_ref = SEQ(name='Gene-ref', mode=MODE_TYPE)
    _Gene_ref_locus = STR_VIS(name='locus', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Gene_ref_allele = STR_VIS(name='allele', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Gene_ref_desc = STR_VIS(name='desc', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Gene_ref_maploc = STR_VIS(name='maploc', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Gene_ref_pseudo = BOOL(name='pseudo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _Gene_ref_db = SET_OF(name='db', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Gene_ref_db__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    _Gene_ref_db._cont = __Gene_ref_db__item_
    _Gene_ref_syn = SET_OF(name='syn', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Gene_ref_syn__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Gene_ref_syn._cont = __Gene_ref_syn__item_
    _Gene_ref_locus_tag = STR_VIS(name='locus-tag', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Gene_ref_formal_name = SEQ(name='formal-name', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Gene', 'Gene-nomenclature')), opt=True)
    Gene_ref._cont = ASN1Dict([
        ('locus', _Gene_ref_locus),
        ('allele', _Gene_ref_allele),
        ('desc', _Gene_ref_desc),
        ('maploc', _Gene_ref_maploc),
        ('pseudo', _Gene_ref_pseudo),
        ('db', _Gene_ref_db),
        ('syn', _Gene_ref_syn),
        ('locus-tag', _Gene_ref_locus_tag),
        ('formal-name', _Gene_ref_formal_name),
        ])
    Gene_ref._ext = None
    
    #-----< Gene-nomenclature >-----#
    Gene_nomenclature = SEQ(name='Gene-nomenclature', mode=MODE_TYPE)
    _Gene_nomenclature_status = ENUM(name='status', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Gene_nomenclature_status._cont = ASN1Dict([('unknown', 0), ('official', 1), ('interim', 2)])
    _Gene_nomenclature_status._ext = None
    _Gene_nomenclature_symbol = STR_VIS(name='symbol', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Gene_nomenclature_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Gene_nomenclature_source = SEQ(name='source', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'Dbtag')), opt=True)
    Gene_nomenclature._cont = ASN1Dict([
        ('status', _Gene_nomenclature_status),
        ('symbol', _Gene_nomenclature_symbol),
        ('name', _Gene_nomenclature_name),
        ('source', _Gene_nomenclature_source),
        ])
    Gene_nomenclature._ext = None
    
    _all_ = [
        _Gene_ref_locus,
        _Gene_ref_allele,
        _Gene_ref_desc,
        _Gene_ref_maploc,
        _Gene_ref_pseudo,
        __Gene_ref_db__item_,
        _Gene_ref_db,
        __Gene_ref_syn__item_,
        _Gene_ref_syn,
        _Gene_ref_locus_tag,
        _Gene_ref_formal_name,
        Gene_ref,
        _Gene_nomenclature_status,
        _Gene_nomenclature_symbol,
        _Gene_nomenclature_name,
        _Gene_nomenclature_source,
        Gene_nomenclature,
    ]

class NCBI_Organism:

    _name_  = 'NCBI-Organism'
    _oid_   = []
    
    _obj_ = [
        'Org-ref',
        'OrgName',
        'OrgMod',
        'BinomialOrgName',
        'MultiOrgName',
        'PartialOrgName',
        'TaxElement',
        ]
    _type_ = [
        'Org-ref',
        'OrgName',
        'OrgMod',
        'BinomialOrgName',
        'MultiOrgName',
        'PartialOrgName',
        'TaxElement',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Org-ref >-----#
    Org_ref = SEQ(name='Org-ref', mode=MODE_TYPE)
    _Org_ref_taxname = STR_VIS(name='taxname', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Org_ref_common = STR_VIS(name='common', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Org_ref_mod = SET_OF(name='mod', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Org_ref_mod__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Org_ref_mod._cont = __Org_ref_mod__item_
    _Org_ref_db = SET_OF(name='db', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Org_ref_db__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    _Org_ref_db._cont = __Org_ref_db__item_
    _Org_ref_syn = SET_OF(name='syn', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Org_ref_syn__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Org_ref_syn._cont = __Org_ref_syn__item_
    _Org_ref_orgname = SEQ(name='orgname', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Organism', 'OrgName')), opt=True)
    Org_ref._cont = ASN1Dict([
        ('taxname', _Org_ref_taxname),
        ('common', _Org_ref_common),
        ('mod', _Org_ref_mod),
        ('db', _Org_ref_db),
        ('syn', _Org_ref_syn),
        ('orgname', _Org_ref_orgname),
        ])
    Org_ref._ext = None
    
    #-----< OrgName >-----#
    OrgName = SEQ(name='OrgName', mode=MODE_TYPE)
    _OrgName_name = CHOICE(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __OrgName_name_binomial = SEQ(name='binomial', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Organism', 'BinomialOrgName')))
    __OrgName_name_virus = STR_VIS(name='virus', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __OrgName_name_hybrid = SEQ_OF(name='hybrid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Organism', 'MultiOrgName')))
    __OrgName_name_namedhybrid = SEQ(name='namedhybrid', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Organism', 'BinomialOrgName')))
    __OrgName_name_partial = SEQ_OF(name='partial', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Organism', 'PartialOrgName')))
    _OrgName_name._cont = ASN1Dict([
        ('binomial', __OrgName_name_binomial),
        ('virus', __OrgName_name_virus),
        ('hybrid', __OrgName_name_hybrid),
        ('namedhybrid', __OrgName_name_namedhybrid),
        ('partial', __OrgName_name_partial),
        ])
    _OrgName_name._ext = None
    _OrgName_attrib = STR_VIS(name='attrib', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _OrgName_mod = SEQ_OF(name='mod', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __OrgName_mod__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Organism', 'OrgMod')))
    _OrgName_mod._cont = __OrgName_mod__item_
    _OrgName_lineage = STR_VIS(name='lineage', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _OrgName_gcode = INT(name='gcode', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _OrgName_mgcode = INT(name='mgcode', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _OrgName_div = STR_VIS(name='div', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _OrgName_pgcode = INT(name='pgcode', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    OrgName._cont = ASN1Dict([
        ('name', _OrgName_name),
        ('attrib', _OrgName_attrib),
        ('mod', _OrgName_mod),
        ('lineage', _OrgName_lineage),
        ('gcode', _OrgName_gcode),
        ('mgcode', _OrgName_mgcode),
        ('div', _OrgName_div),
        ('pgcode', _OrgName_pgcode),
        ])
    OrgName._ext = None
    
    #-----< OrgMod >-----#
    OrgMod = SEQ(name='OrgMod', mode=MODE_TYPE)
    _OrgMod_subtype = INT(name='subtype', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _OrgMod_subtype._cont = ASN1Dict([('strain', 2), ('substrain', 3), ('type', 4), ('subtype', 5), ('variety', 6), ('serotype', 7), ('serogroup', 8), ('serovar', 9), ('cultivar', 10), ('pathovar', 11), ('chemovar', 12), ('biovar', 13), ('biotype', 14), ('group', 15), ('subgroup', 16), ('isolate', 17), ('common', 18), ('acronym', 19), ('dosage', 20), ('nat-host', 21), ('sub-species', 22), ('specimen-voucher', 23), ('authority', 24), ('forma', 25), ('forma-specialis', 26), ('ecotype', 27), ('synonym', 28), ('anamorph', 29), ('teleomorph', 30), ('breed', 31), ('gb-acronym', 32), ('gb-anamorph', 33), ('gb-synonym', 34), ('culture-collection', 35), ('bio-material', 36), ('metagenome-source', 37), ('type-material', 38), ('old-lineage', 253), ('old-name', 254), ('other', 255)])
    _OrgMod_subname = STR_VIS(name='subname', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _OrgMod_attrib = STR_VIS(name='attrib', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    OrgMod._cont = ASN1Dict([
        ('subtype', _OrgMod_subtype),
        ('subname', _OrgMod_subname),
        ('attrib', _OrgMod_attrib),
        ])
    OrgMod._ext = None
    
    #-----< BinomialOrgName >-----#
    BinomialOrgName = SEQ(name='BinomialOrgName', mode=MODE_TYPE)
    _BinomialOrgName_genus = STR_VIS(name='genus', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BinomialOrgName_species = STR_VIS(name='species', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BinomialOrgName_subspecies = STR_VIS(name='subspecies', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    BinomialOrgName._cont = ASN1Dict([
        ('genus', _BinomialOrgName_genus),
        ('species', _BinomialOrgName_species),
        ('subspecies', _BinomialOrgName_subspecies),
        ])
    BinomialOrgName._ext = None
    
    #-----< MultiOrgName >-----#
    MultiOrgName = SEQ_OF(name='MultiOrgName', mode=MODE_TYPE)
    _MultiOrgName__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Organism', 'OrgName')))
    MultiOrgName._cont = _MultiOrgName__item_
    
    #-----< PartialOrgName >-----#
    PartialOrgName = SEQ_OF(name='PartialOrgName', mode=MODE_TYPE)
    _PartialOrgName__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Organism', 'TaxElement')))
    PartialOrgName._cont = _PartialOrgName__item_
    
    #-----< TaxElement >-----#
    TaxElement = SEQ(name='TaxElement', mode=MODE_TYPE)
    _TaxElement_fixed_level = INT(name='fixed-level', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TaxElement_fixed_level._cont = ASN1Dict([('other', 0), ('family', 1), ('order', 2), ('class', 3)])
    _TaxElement_level = STR_VIS(name='level', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TaxElement_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    TaxElement._cont = ASN1Dict([
        ('fixed-level', _TaxElement_fixed_level),
        ('level', _TaxElement_level),
        ('name', _TaxElement_name),
        ])
    TaxElement._ext = None
    
    _all_ = [
        _Org_ref_taxname,
        _Org_ref_common,
        __Org_ref_mod__item_,
        _Org_ref_mod,
        __Org_ref_db__item_,
        _Org_ref_db,
        __Org_ref_syn__item_,
        _Org_ref_syn,
        _Org_ref_orgname,
        Org_ref,
        __OrgName_name_binomial,
        __OrgName_name_virus,
        __OrgName_name_hybrid,
        __OrgName_name_namedhybrid,
        __OrgName_name_partial,
        _OrgName_name,
        _OrgName_attrib,
        __OrgName_mod__item_,
        _OrgName_mod,
        _OrgName_lineage,
        _OrgName_gcode,
        _OrgName_mgcode,
        _OrgName_div,
        _OrgName_pgcode,
        OrgName,
        _OrgMod_subtype,
        _OrgMod_subname,
        _OrgMod_attrib,
        OrgMod,
        _BinomialOrgName_genus,
        _BinomialOrgName_species,
        _BinomialOrgName_subspecies,
        BinomialOrgName,
        _MultiOrgName__item_,
        MultiOrgName,
        _PartialOrgName__item_,
        PartialOrgName,
        _TaxElement_fixed_level,
        _TaxElement_level,
        _TaxElement_name,
        TaxElement,
    ]

class NCBI_BioSource:

    _name_  = 'NCBI-BioSource'
    _oid_   = []
    
    _obj_ = [
        'BioSource',
        'PCRReactionSet',
        'PCRReaction',
        'PCRPrimerSet',
        'PCRPrimer',
        'PCRPrimerSeq',
        'PCRPrimerName',
        'SubSource',
        ]
    _type_ = [
        'BioSource',
        'PCRReactionSet',
        'PCRReaction',
        'PCRPrimerSet',
        'PCRPrimer',
        'PCRPrimerSeq',
        'PCRPrimerName',
        'SubSource',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< BioSource >-----#
    BioSource = SEQ(name='BioSource', mode=MODE_TYPE)
    _BioSource_genome = INT(name='genome', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _BioSource_genome._cont = ASN1Dict([('unknown', 0), ('genomic', 1), ('chloroplast', 2), ('chromoplast', 3), ('kinetoplast', 4), ('mitochondrion', 5), ('plastid', 6), ('macronuclear', 7), ('extrachrom', 8), ('plasmid', 9), ('transposon', 10), ('insertion-seq', 11), ('cyanelle', 12), ('proviral', 13), ('virion', 14), ('nucleomorph', 15), ('apicoplast', 16), ('leucoplast', 17), ('proplastid', 18), ('endogenous-virus', 19), ('hydrogenosome', 20), ('chromosome', 21), ('chromatophore', 22), ('plasmid-in-mitochondrion', 23), ('plasmid-in-plastid', 24)])
    _BioSource_origin = INT(name='origin', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=0)
    _BioSource_origin._cont = ASN1Dict([('unknown', 0), ('natural', 1), ('natmut', 2), ('mut', 3), ('artificial', 4), ('synthetic', 5), ('other', 255)])
    _BioSource_org = SEQ(name='org', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Organism', 'Org-ref')))
    _BioSource_subtype = SEQ_OF(name='subtype', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BioSource_subtype__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-BioSource', 'SubSource')))
    _BioSource_subtype._cont = __BioSource_subtype__item_
    _BioSource_is_focus = NULL(name='is-focus', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BioSource_pcr_primers = SET_OF(name='pcr-primers', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BioSource', 'PCRReactionSet')), opt=True)
    BioSource._cont = ASN1Dict([
        ('genome', _BioSource_genome),
        ('origin', _BioSource_origin),
        ('org', _BioSource_org),
        ('subtype', _BioSource_subtype),
        ('is-focus', _BioSource_is_focus),
        ('pcr-primers', _BioSource_pcr_primers),
        ])
    BioSource._ext = None
    
    #-----< PCRReactionSet >-----#
    PCRReactionSet = SET_OF(name='PCRReactionSet', mode=MODE_TYPE)
    _PCRReactionSet__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-BioSource', 'PCRReaction')))
    PCRReactionSet._cont = _PCRReactionSet__item_
    
    #-----< PCRReaction >-----#
    PCRReaction = SEQ(name='PCRReaction', mode=MODE_TYPE)
    _PCRReaction_forward = SET_OF(name='forward', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BioSource', 'PCRPrimerSet')), opt=True)
    _PCRReaction_reverse = SET_OF(name='reverse', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BioSource', 'PCRPrimerSet')), opt=True)
    PCRReaction._cont = ASN1Dict([
        ('forward', _PCRReaction_forward),
        ('reverse', _PCRReaction_reverse),
        ])
    PCRReaction._ext = None
    
    #-----< PCRPrimerSet >-----#
    PCRPrimerSet = SET_OF(name='PCRPrimerSet', mode=MODE_TYPE)
    _PCRPrimerSet__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-BioSource', 'PCRPrimer')))
    PCRPrimerSet._cont = _PCRPrimerSet__item_
    
    #-----< PCRPrimer >-----#
    PCRPrimer = SEQ(name='PCRPrimer', mode=MODE_TYPE)
    _PCRPrimer_seq = STR_VIS(name='seq', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BioSource', 'PCRPrimerSeq')), opt=True)
    _PCRPrimer_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-BioSource', 'PCRPrimerName')), opt=True)
    PCRPrimer._cont = ASN1Dict([
        ('seq', _PCRPrimer_seq),
        ('name', _PCRPrimer_name),
        ])
    PCRPrimer._ext = None
    
    #-----< PCRPrimerSeq >-----#
    PCRPrimerSeq = STR_VIS(name='PCRPrimerSeq', mode=MODE_TYPE)
    
    #-----< PCRPrimerName >-----#
    PCRPrimerName = STR_VIS(name='PCRPrimerName', mode=MODE_TYPE)
    
    #-----< SubSource >-----#
    SubSource = SEQ(name='SubSource', mode=MODE_TYPE)
    _SubSource_subtype = INT(name='subtype', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SubSource_subtype._cont = ASN1Dict([('chromosome', 1), ('map', 2), ('clone', 3), ('subclone', 4), ('haplotype', 5), ('genotype', 6), ('sex', 7), ('cell-line', 8), ('cell-type', 9), ('tissue-type', 10), ('clone-lib', 11), ('dev-stage', 12), ('frequency', 13), ('germline', 14), ('rearranged', 15), ('lab-host', 16), ('pop-variant', 17), ('tissue-lib', 18), ('plasmid-name', 19), ('transposon-name', 20), ('insertion-seq-name', 21), ('plastid-name', 22), ('country', 23), ('segment', 24), ('endogenous-virus-name', 25), ('transgenic', 26), ('environmental-sample', 27), ('isolation-source', 28), ('lat-lon', 29), ('collection-date', 30), ('collected-by', 31), ('identified-by', 32), ('fwd-primer-seq', 33), ('rev-primer-seq', 34), ('fwd-primer-name', 35), ('rev-primer-name', 36), ('metagenomic', 37), ('mating-type', 38), ('linkage-group', 39), ('haplogroup', 40), ('whole-replicon', 41), ('phenotype', 42), ('altitude', 43), ('other', 255)])
    _SubSource_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SubSource_attrib = STR_VIS(name='attrib', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SubSource._cont = ASN1Dict([
        ('subtype', _SubSource_subtype),
        ('name', _SubSource_name),
        ('attrib', _SubSource_attrib),
        ])
    SubSource._ext = None
    
    _all_ = [
        _BioSource_genome,
        _BioSource_origin,
        _BioSource_org,
        __BioSource_subtype__item_,
        _BioSource_subtype,
        _BioSource_is_focus,
        _BioSource_pcr_primers,
        BioSource,
        _PCRReactionSet__item_,
        PCRReactionSet,
        _PCRReaction_forward,
        _PCRReaction_reverse,
        PCRReaction,
        _PCRPrimerSet__item_,
        PCRPrimerSet,
        _PCRPrimer_seq,
        _PCRPrimer_name,
        PCRPrimer,
        PCRPrimerSeq,
        PCRPrimerName,
        _SubSource_subtype,
        _SubSource_name,
        _SubSource_attrib,
        SubSource,
    ]

class NCBI_Protein:

    _name_  = 'NCBI-Protein'
    _oid_   = []
    
    _obj_ = [
        'Prot-ref',
        ]
    _type_ = [
        'Prot-ref',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Prot-ref >-----#
    Prot_ref = SEQ(name='Prot-ref', mode=MODE_TYPE)
    _Prot_ref_name = SET_OF(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Prot_ref_name__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Prot_ref_name._cont = __Prot_ref_name__item_
    _Prot_ref_desc = STR_VIS(name='desc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Prot_ref_ec = SET_OF(name='ec', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Prot_ref_ec__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Prot_ref_ec._cont = __Prot_ref_ec__item_
    _Prot_ref_activity = SET_OF(name='activity', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Prot_ref_activity__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Prot_ref_activity._cont = __Prot_ref_activity__item_
    _Prot_ref_db = SET_OF(name='db', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Prot_ref_db__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    _Prot_ref_db._cont = __Prot_ref_db__item_
    _Prot_ref_processed = ENUM(name='processed', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default='not-set')
    _Prot_ref_processed._cont = ASN1Dict([('not-set', 0), ('preprotein', 1), ('mature', 2), ('signal-peptide', 3), ('transit-peptide', 4), ('propeptide', 5)])
    _Prot_ref_processed._ext = None
    Prot_ref._cont = ASN1Dict([
        ('name', _Prot_ref_name),
        ('desc', _Prot_ref_desc),
        ('ec', _Prot_ref_ec),
        ('activity', _Prot_ref_activity),
        ('db', _Prot_ref_db),
        ('processed', _Prot_ref_processed),
        ])
    Prot_ref._ext = None
    
    _all_ = [
        __Prot_ref_name__item_,
        _Prot_ref_name,
        _Prot_ref_desc,
        __Prot_ref_ec__item_,
        _Prot_ref_ec,
        __Prot_ref_activity__item_,
        _Prot_ref_activity,
        __Prot_ref_db__item_,
        _Prot_ref_db,
        _Prot_ref_processed,
        Prot_ref,
    ]

class NCBI_TxInit:

    _name_  = 'NCBI-TxInit'
    _oid_   = []
    
    _obj_ = [
        'Txinit',
        'Tx-evidence',
        ]
    _type_ = [
        'Txinit',
        'Tx-evidence',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Txinit >-----#
    Txinit = SEQ(name='Txinit', mode=MODE_TYPE)
    _Txinit_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Txinit_syn = SEQ_OF(name='syn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Txinit_syn__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Txinit_syn._cont = __Txinit_syn__item_
    _Txinit_gene = SEQ_OF(name='gene', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Txinit_gene__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Gene', 'Gene-ref')))
    _Txinit_gene._cont = __Txinit_gene__item_
    _Txinit_protein = SEQ_OF(name='protein', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Txinit_protein__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Protein', 'Prot-ref')))
    _Txinit_protein._cont = __Txinit_protein__item_
    _Txinit_rna = SEQ_OF(name='rna', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Txinit_rna__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Txinit_rna._cont = __Txinit_rna__item_
    _Txinit_expression = STR_VIS(name='expression', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Txinit_txsystem = ENUM(name='txsystem', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Txinit_txsystem._cont = ASN1Dict([('unknown', 0), ('pol1', 1), ('pol2', 2), ('pol3', 3), ('bacterial', 4), ('viral', 5), ('rna', 6), ('organelle', 7), ('other', 255)])
    _Txinit_txsystem._ext = None
    _Txinit_txdescr = STR_VIS(name='txdescr', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Txinit_txorg = SEQ(name='txorg', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Organism', 'Org-ref')), opt=True)
    _Txinit_mapping_precise = BOOL(name='mapping-precise', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _Txinit_location_accurate = BOOL(name='location-accurate', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _Txinit_inittype = ENUM(name='inittype', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Txinit_inittype._cont = ASN1Dict([('unknown', 0), ('single', 1), ('multiple', 2), ('region', 3)])
    _Txinit_inittype._ext = None
    _Txinit_evidence = SET_OF(name='evidence', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Txinit_evidence__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-TxInit', 'Tx-evidence')))
    _Txinit_evidence._cont = __Txinit_evidence__item_
    Txinit._cont = ASN1Dict([
        ('name', _Txinit_name),
        ('syn', _Txinit_syn),
        ('gene', _Txinit_gene),
        ('protein', _Txinit_protein),
        ('rna', _Txinit_rna),
        ('expression', _Txinit_expression),
        ('txsystem', _Txinit_txsystem),
        ('txdescr', _Txinit_txdescr),
        ('txorg', _Txinit_txorg),
        ('mapping-precise', _Txinit_mapping_precise),
        ('location-accurate', _Txinit_location_accurate),
        ('inittype', _Txinit_inittype),
        ('evidence', _Txinit_evidence),
        ])
    Txinit._ext = None
    
    #-----< Tx-evidence >-----#
    Tx_evidence = SEQ(name='Tx-evidence', mode=MODE_TYPE)
    _Tx_evidence_exp_code = ENUM(name='exp-code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Tx_evidence_exp_code._cont = ASN1Dict([('unknown', 0), ('rna-seq', 1), ('rna-size', 2), ('np-map', 3), ('np-size', 4), ('pe-seq', 5), ('cDNA-seq', 6), ('pe-map', 7), ('pe-size', 8), ('pseudo-seq', 9), ('rev-pe-map', 10), ('other', 255)])
    _Tx_evidence_exp_code._ext = None
    _Tx_evidence_expression_system = ENUM(name='expression-system', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default='physiological')
    _Tx_evidence_expression_system._cont = ASN1Dict([('unknown', 0), ('physiological', 1), ('in-vitro', 2), ('oocyte', 3), ('transfection', 4), ('transgenic', 5), ('other', 255)])
    _Tx_evidence_expression_system._ext = None
    _Tx_evidence_low_prec_data = BOOL(name='low-prec-data', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _Tx_evidence_from_homolog = BOOL(name='from-homolog', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    Tx_evidence._cont = ASN1Dict([
        ('exp-code', _Tx_evidence_exp_code),
        ('expression-system', _Tx_evidence_expression_system),
        ('low-prec-data', _Tx_evidence_low_prec_data),
        ('from-homolog', _Tx_evidence_from_homolog),
        ])
    Tx_evidence._ext = None
    
    _all_ = [
        _Txinit_name,
        __Txinit_syn__item_,
        _Txinit_syn,
        __Txinit_gene__item_,
        _Txinit_gene,
        __Txinit_protein__item_,
        _Txinit_protein,
        __Txinit_rna__item_,
        _Txinit_rna,
        _Txinit_expression,
        _Txinit_txsystem,
        _Txinit_txdescr,
        _Txinit_txorg,
        _Txinit_mapping_precise,
        _Txinit_location_accurate,
        _Txinit_inittype,
        __Txinit_evidence__item_,
        _Txinit_evidence,
        Txinit,
        _Tx_evidence_exp_code,
        _Tx_evidence_expression_system,
        _Tx_evidence_low_prec_data,
        _Tx_evidence_from_homolog,
        Tx_evidence,
    ]

class NCBI_Seqloc:

    _name_  = 'NCBI-Seqloc'
    _oid_   = []
    
    _obj_ = [
        'Seq-id',
        'Seq-id-set',
        'Patent-seq-id',
        'Textseq-id',
        'Giimport-id',
        'PDB-seq-id',
        'PDB-mol-id',
        'Seq-loc',
        'Seq-interval',
        'Packed-seqint',
        'Seq-point',
        'Packed-seqpnt',
        'Na-strand',
        'Seq-bond',
        'Seq-loc-mix',
        'Seq-loc-equiv',
        ]
    _type_ = [
        'Seq-id',
        'Seq-id-set',
        'Patent-seq-id',
        'Textseq-id',
        'Giimport-id',
        'PDB-seq-id',
        'PDB-mol-id',
        'Seq-loc',
        'Seq-interval',
        'Packed-seqint',
        'Seq-point',
        'Packed-seqpnt',
        'Na-strand',
        'Seq-bond',
        'Seq-loc-mix',
        'Seq-loc-equiv',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Seq-id >-----#
    Seq_id = CHOICE(name='Seq-id', mode=MODE_TYPE)
    _Seq_id_local = CHOICE(name='local', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Object-id')))
    _Seq_id_gibbsq = INT(name='gibbsq', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seq_id_gibbmt = INT(name='gibbmt', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seq_id_giim = SEQ(name='giim', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Giimport-id')))
    _Seq_id_genbank = SEQ(name='genbank', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Textseq-id')))
    _Seq_id_embl = SEQ(name='embl', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Textseq-id')))
    _Seq_id_pir = SEQ(name='pir', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Textseq-id')))
    _Seq_id_swissprot = SEQ(name='swissprot', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Textseq-id')))
    _Seq_id_patent = SEQ(name='patent', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Patent-seq-id')))
    _Seq_id_other = SEQ(name='other', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Textseq-id')))
    _Seq_id_general = SEQ(name='general', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'Dbtag')))
    _Seq_id_gi = INT(name='gi', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seq_id_ddbj = SEQ(name='ddbj', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Textseq-id')))
    _Seq_id_prf = SEQ(name='prf', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Textseq-id')))
    _Seq_id_pdb = SEQ(name='pdb', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'PDB-seq-id')))
    _Seq_id_tpg = SEQ(name='tpg', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Textseq-id')))
    _Seq_id_tpe = SEQ(name='tpe', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Textseq-id')))
    _Seq_id_tpd = SEQ(name='tpd', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Textseq-id')))
    _Seq_id_gpipe = SEQ(name='gpipe', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Textseq-id')))
    _Seq_id_named_annot_track = SEQ(name='named-annot-track', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Textseq-id')))
    Seq_id._cont = ASN1Dict([
        ('local', _Seq_id_local),
        ('gibbsq', _Seq_id_gibbsq),
        ('gibbmt', _Seq_id_gibbmt),
        ('giim', _Seq_id_giim),
        ('genbank', _Seq_id_genbank),
        ('embl', _Seq_id_embl),
        ('pir', _Seq_id_pir),
        ('swissprot', _Seq_id_swissprot),
        ('patent', _Seq_id_patent),
        ('other', _Seq_id_other),
        ('general', _Seq_id_general),
        ('gi', _Seq_id_gi),
        ('ddbj', _Seq_id_ddbj),
        ('prf', _Seq_id_prf),
        ('pdb', _Seq_id_pdb),
        ('tpg', _Seq_id_tpg),
        ('tpe', _Seq_id_tpe),
        ('tpd', _Seq_id_tpd),
        ('gpipe', _Seq_id_gpipe),
        ('named-annot-track', _Seq_id_named_annot_track),
        ])
    Seq_id._ext = None
    
    #-----< Seq-id-set >-----#
    Seq_id_set = SET_OF(name='Seq-id-set', mode=MODE_TYPE)
    _Seq_id_set__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    Seq_id_set._cont = _Seq_id_set__item_
    
    #-----< Patent-seq-id >-----#
    Patent_seq_id = SEQ(name='Patent-seq-id', mode=MODE_TYPE)
    _Patent_seq_id_seqid = INT(name='seqid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Patent_seq_id_cit = SEQ(name='cit', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Id-pat')))
    Patent_seq_id._cont = ASN1Dict([
        ('seqid', _Patent_seq_id_seqid),
        ('cit', _Patent_seq_id_cit),
        ])
    Patent_seq_id._ext = None
    
    #-----< Textseq-id >-----#
    Textseq_id = SEQ(name='Textseq-id', mode=MODE_TYPE)
    _Textseq_id_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Textseq_id_accession = STR_VIS(name='accession', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Textseq_id_release = STR_VIS(name='release', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Textseq_id_version = INT(name='version', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Textseq_id._cont = ASN1Dict([
        ('name', _Textseq_id_name),
        ('accession', _Textseq_id_accession),
        ('release', _Textseq_id_release),
        ('version', _Textseq_id_version),
        ])
    Textseq_id._ext = None
    
    #-----< Giimport-id >-----#
    Giimport_id = SEQ(name='Giimport-id', mode=MODE_TYPE)
    _Giimport_id_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Giimport_id_db = STR_VIS(name='db', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Giimport_id_release = STR_VIS(name='release', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Giimport_id._cont = ASN1Dict([
        ('id', _Giimport_id_id),
        ('db', _Giimport_id_db),
        ('release', _Giimport_id_release),
        ])
    Giimport_id._ext = None
    
    #-----< PDB-seq-id >-----#
    PDB_seq_id = SEQ(name='PDB-seq-id', mode=MODE_TYPE)
    _PDB_seq_id_mol = STR_VIS(name='mol', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'PDB-mol-id')))
    _PDB_seq_id_chain = INT(name='chain', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=32)
    _PDB_seq_id_rel = CHOICE(name='rel', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    PDB_seq_id._cont = ASN1Dict([
        ('mol', _PDB_seq_id_mol),
        ('chain', _PDB_seq_id_chain),
        ('rel', _PDB_seq_id_rel),
        ])
    PDB_seq_id._ext = None
    
    #-----< PDB-mol-id >-----#
    PDB_mol_id = STR_VIS(name='PDB-mol-id', mode=MODE_TYPE)
    
    #-----< Seq-loc >-----#
    Seq_loc = CHOICE(name='Seq-loc', mode=MODE_TYPE)
    _Seq_loc_null = NULL(name='null', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seq_loc_empty = CHOICE(name='empty', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Seq_loc_whole = CHOICE(name='whole', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Seq_loc_int = SEQ(name='int', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-interval')))
    _Seq_loc_packed_int = SEQ_OF(name='packed-int', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Packed-seqint')))
    _Seq_loc_pnt = SEQ(name='pnt', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-point')))
    _Seq_loc_packed_pnt = SEQ(name='packed-pnt', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Packed-seqpnt')))
    _Seq_loc_mix = SEQ_OF(name='mix', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc-mix')))
    _Seq_loc_equiv = SET_OF(name='equiv', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc-equiv')))
    _Seq_loc_bond = SEQ(name='bond', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-bond')))
    _Seq_loc_feat = CHOICE(name='feat', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqfeat', 'Feat-id')))
    Seq_loc._cont = ASN1Dict([
        ('null', _Seq_loc_null),
        ('empty', _Seq_loc_empty),
        ('whole', _Seq_loc_whole),
        ('int', _Seq_loc_int),
        ('packed-int', _Seq_loc_packed_int),
        ('pnt', _Seq_loc_pnt),
        ('packed-pnt', _Seq_loc_packed_pnt),
        ('mix', _Seq_loc_mix),
        ('equiv', _Seq_loc_equiv),
        ('bond', _Seq_loc_bond),
        ('feat', _Seq_loc_feat),
        ])
    Seq_loc._ext = None
    
    #-----< Seq-interval >-----#
    Seq_interval = SEQ(name='Seq-interval', mode=MODE_TYPE)
    _Seq_interval_from_ = INT(name='from', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seq_interval_to = INT(name='to', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seq_interval_strand = ENUM(name='strand', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Na-strand')), opt=True)
    _Seq_interval_id = CHOICE(name='id', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Seq_interval_fuzz_from = CHOICE(name='fuzz-from', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Int-fuzz')), opt=True)
    _Seq_interval_fuzz_to = CHOICE(name='fuzz-to', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Int-fuzz')), opt=True)
    Seq_interval._cont = ASN1Dict([
        ('from', _Seq_interval_from_),
        ('to', _Seq_interval_to),
        ('strand', _Seq_interval_strand),
        ('id', _Seq_interval_id),
        ('fuzz-from', _Seq_interval_fuzz_from),
        ('fuzz-to', _Seq_interval_fuzz_to),
        ])
    Seq_interval._ext = None
    
    #-----< Packed-seqint >-----#
    Packed_seqint = SEQ_OF(name='Packed-seqint', mode=MODE_TYPE)
    _Packed_seqint__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-interval')))
    Packed_seqint._cont = _Packed_seqint__item_
    
    #-----< Seq-point >-----#
    Seq_point = SEQ(name='Seq-point', mode=MODE_TYPE)
    _Seq_point_point = INT(name='point', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seq_point_strand = ENUM(name='strand', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Na-strand')), opt=True)
    _Seq_point_id = CHOICE(name='id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Seq_point_fuzz = CHOICE(name='fuzz', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Int-fuzz')), opt=True)
    Seq_point._cont = ASN1Dict([
        ('point', _Seq_point_point),
        ('strand', _Seq_point_strand),
        ('id', _Seq_point_id),
        ('fuzz', _Seq_point_fuzz),
        ])
    Seq_point._ext = None
    
    #-----< Packed-seqpnt >-----#
    Packed_seqpnt = SEQ(name='Packed-seqpnt', mode=MODE_TYPE)
    _Packed_seqpnt_strand = ENUM(name='strand', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Na-strand')), opt=True)
    _Packed_seqpnt_id = CHOICE(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _Packed_seqpnt_fuzz = CHOICE(name='fuzz', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Int-fuzz')), opt=True)
    _Packed_seqpnt_points = SEQ_OF(name='points', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Packed_seqpnt_points__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Packed_seqpnt_points._cont = __Packed_seqpnt_points__item_
    Packed_seqpnt._cont = ASN1Dict([
        ('strand', _Packed_seqpnt_strand),
        ('id', _Packed_seqpnt_id),
        ('fuzz', _Packed_seqpnt_fuzz),
        ('points', _Packed_seqpnt_points),
        ])
    Packed_seqpnt._ext = None
    
    #-----< Na-strand >-----#
    Na_strand = ENUM(name='Na-strand', mode=MODE_TYPE)
    Na_strand._cont = ASN1Dict([('unknown', 0), ('plus', 1), ('minus', 2), ('both', 3), ('both-rev', 4), ('other', 255)])
    Na_strand._ext = None
    
    #-----< Seq-bond >-----#
    Seq_bond = SEQ(name='Seq-bond', mode=MODE_TYPE)
    _Seq_bond_a = SEQ(name='a', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-point')))
    _Seq_bond_b = SEQ(name='b', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-point')), opt=True)
    Seq_bond._cont = ASN1Dict([
        ('a', _Seq_bond_a),
        ('b', _Seq_bond_b),
        ])
    Seq_bond._ext = None
    
    #-----< Seq-loc-mix >-----#
    Seq_loc_mix = SEQ_OF(name='Seq-loc-mix', mode=MODE_TYPE)
    _Seq_loc_mix__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    Seq_loc_mix._cont = _Seq_loc_mix__item_
    
    #-----< Seq-loc-equiv >-----#
    Seq_loc_equiv = SET_OF(name='Seq-loc-equiv', mode=MODE_TYPE)
    _Seq_loc_equiv__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    Seq_loc_equiv._cont = _Seq_loc_equiv__item_
    
    _all_ = [
        _Seq_id_local,
        _Seq_id_gibbsq,
        _Seq_id_gibbmt,
        _Seq_id_giim,
        _Seq_id_genbank,
        _Seq_id_embl,
        _Seq_id_pir,
        _Seq_id_swissprot,
        _Seq_id_patent,
        _Seq_id_other,
        _Seq_id_general,
        _Seq_id_gi,
        _Seq_id_ddbj,
        _Seq_id_prf,
        _Seq_id_pdb,
        _Seq_id_tpg,
        _Seq_id_tpe,
        _Seq_id_tpd,
        _Seq_id_gpipe,
        _Seq_id_named_annot_track,
        Seq_id,
        _Seq_id_set__item_,
        Seq_id_set,
        _Patent_seq_id_seqid,
        _Patent_seq_id_cit,
        Patent_seq_id,
        _Textseq_id_name,
        _Textseq_id_accession,
        _Textseq_id_release,
        _Textseq_id_version,
        Textseq_id,
        _Giimport_id_id,
        _Giimport_id_db,
        _Giimport_id_release,
        Giimport_id,
        _PDB_seq_id_mol,
        _PDB_seq_id_chain,
        _PDB_seq_id_rel,
        PDB_seq_id,
        PDB_mol_id,
        _Seq_loc_null,
        _Seq_loc_empty,
        _Seq_loc_whole,
        _Seq_loc_int,
        _Seq_loc_packed_int,
        _Seq_loc_pnt,
        _Seq_loc_packed_pnt,
        _Seq_loc_mix,
        _Seq_loc_equiv,
        _Seq_loc_bond,
        _Seq_loc_feat,
        Seq_loc,
        _Seq_interval_from_,
        _Seq_interval_to,
        _Seq_interval_strand,
        _Seq_interval_id,
        _Seq_interval_fuzz_from,
        _Seq_interval_fuzz_to,
        Seq_interval,
        _Packed_seqint__item_,
        Packed_seqint,
        _Seq_point_point,
        _Seq_point_strand,
        _Seq_point_id,
        _Seq_point_fuzz,
        Seq_point,
        _Packed_seqpnt_strand,
        _Packed_seqpnt_id,
        _Packed_seqpnt_fuzz,
        __Packed_seqpnt_points__item_,
        _Packed_seqpnt_points,
        Packed_seqpnt,
        Na_strand,
        _Seq_bond_a,
        _Seq_bond_b,
        Seq_bond,
        _Seq_loc_mix__item_,
        Seq_loc_mix,
        _Seq_loc_equiv__item_,
        Seq_loc_equiv,
    ]

class NCBI_Seqres:

    _name_  = 'NCBI-Seqres'
    _oid_   = []
    
    _obj_ = [
        'Seq-graph',
        'Real-graph',
        'Int-graph',
        'Byte-graph',
        ]
    _type_ = [
        'Seq-graph',
        'Real-graph',
        'Int-graph',
        'Byte-graph',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Seq-graph >-----#
    Seq_graph = SEQ(name='Seq-graph', mode=MODE_TYPE)
    _Seq_graph_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Seq_graph_comment = STR_VIS(name='comment', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Seq_graph_loc = CHOICE(name='loc', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _Seq_graph_title_x = STR_VIS(name='title-x', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Seq_graph_title_y = STR_VIS(name='title-y', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Seq_graph_comp = INT(name='comp', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Seq_graph_a = REAL(name='a', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    _Seq_graph_b = REAL(name='b', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')), opt=True)
    _Seq_graph_numval = INT(name='numval', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seq_graph_graph = CHOICE(name='graph', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __Seq_graph_graph_real = SEQ(name='real', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqres', 'Real-graph')))
    __Seq_graph_graph_int = SEQ(name='int', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqres', 'Int-graph')))
    __Seq_graph_graph_byte = SEQ(name='byte', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqres', 'Byte-graph')))
    _Seq_graph_graph._cont = ASN1Dict([
        ('real', __Seq_graph_graph_real),
        ('int', __Seq_graph_graph_int),
        ('byte', __Seq_graph_graph_byte),
        ])
    _Seq_graph_graph._ext = None
    Seq_graph._cont = ASN1Dict([
        ('title', _Seq_graph_title),
        ('comment', _Seq_graph_comment),
        ('loc', _Seq_graph_loc),
        ('title-x', _Seq_graph_title_x),
        ('title-y', _Seq_graph_title_y),
        ('comp', _Seq_graph_comp),
        ('a', _Seq_graph_a),
        ('b', _Seq_graph_b),
        ('numval', _Seq_graph_numval),
        ('graph', _Seq_graph_graph),
        ])
    Seq_graph._ext = None
    
    #-----< Real-graph >-----#
    Real_graph = SEQ(name='Real-graph', mode=MODE_TYPE)
    _Real_graph_max = REAL(name='max', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Real_graph_min = REAL(name='min', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Real_graph_axis = REAL(name='axis', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Real_graph_values = SEQ_OF(name='values', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Real_graph_values__item_ = REAL(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _Real_graph_values._cont = __Real_graph_values__item_
    Real_graph._cont = ASN1Dict([
        ('max', _Real_graph_max),
        ('min', _Real_graph_min),
        ('axis', _Real_graph_axis),
        ('values', _Real_graph_values),
        ])
    Real_graph._ext = None
    
    #-----< Int-graph >-----#
    Int_graph = SEQ(name='Int-graph', mode=MODE_TYPE)
    _Int_graph_max = INT(name='max', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Int_graph_min = INT(name='min', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Int_graph_axis = INT(name='axis', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Int_graph_values = SEQ_OF(name='values', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Int_graph_values__item_ = INT(name='_item_', mode=MODE_TYPE)
    _Int_graph_values._cont = __Int_graph_values__item_
    Int_graph._cont = ASN1Dict([
        ('max', _Int_graph_max),
        ('min', _Int_graph_min),
        ('axis', _Int_graph_axis),
        ('values', _Int_graph_values),
        ])
    Int_graph._ext = None
    
    #-----< Byte-graph >-----#
    Byte_graph = SEQ(name='Byte-graph', mode=MODE_TYPE)
    _Byte_graph_max = INT(name='max', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Byte_graph_min = INT(name='min', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Byte_graph_axis = INT(name='axis', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Byte_graph_values = OCT_STR(name='values', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Byte_graph._cont = ASN1Dict([
        ('max', _Byte_graph_max),
        ('min', _Byte_graph_min),
        ('axis', _Byte_graph_axis),
        ('values', _Byte_graph_values),
        ])
    Byte_graph._ext = None
    
    _all_ = [
        _Seq_graph_title,
        _Seq_graph_comment,
        _Seq_graph_loc,
        _Seq_graph_title_x,
        _Seq_graph_title_y,
        _Seq_graph_comp,
        _Seq_graph_a,
        _Seq_graph_b,
        _Seq_graph_numval,
        __Seq_graph_graph_real,
        __Seq_graph_graph_int,
        __Seq_graph_graph_byte,
        _Seq_graph_graph,
        Seq_graph,
        _Real_graph_max,
        _Real_graph_min,
        _Real_graph_axis,
        __Real_graph_values__item_,
        _Real_graph_values,
        Real_graph,
        _Int_graph_max,
        _Int_graph_min,
        _Int_graph_axis,
        __Int_graph_values__item_,
        _Int_graph_values,
        Int_graph,
        _Byte_graph_max,
        _Byte_graph_min,
        _Byte_graph_axis,
        _Byte_graph_values,
        Byte_graph,
    ]

class NCBI_Seqset:

    _name_  = 'NCBI-Seqset'
    _oid_   = []
    
    _obj_ = [
        'Bioseq-set',
        'Seq-entry',
        ]
    _type_ = [
        'Bioseq-set',
        'Seq-entry',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Bioseq-set >-----#
    Bioseq_set = SEQ(name='Bioseq-set', mode=MODE_TYPE)
    _Bioseq_set_id = CHOICE(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Object-id')), opt=True)
    _Bioseq_set_coll = SEQ(name='coll', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-General', 'Dbtag')), opt=True)
    _Bioseq_set_level = INT(name='level', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Bioseq_set_class_ = ENUM(name='class', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default='not-set')
    _Bioseq_set_class_._cont = ASN1Dict([('not-set', 0), ('nuc-prot', 1), ('segset', 2), ('conset', 3), ('parts', 4), ('gibb', 5), ('gi', 6), ('genbank', 7), ('pir', 8), ('pub-set', 9), ('equiv', 10), ('swissprot', 11), ('pdb-entry', 12), ('mut-set', 13), ('pop-set', 14), ('phy-set', 15), ('eco-set', 16), ('gen-prod-set', 17), ('wgs-set', 18), ('named-annot', 19), ('named-annot-prod', 20), ('read-set', 21), ('paired-end-reads', 22), ('small-genome-set', 23), ('other', 255)])
    _Bioseq_set_class_._ext = None
    _Bioseq_set_release = STR_VIS(name='release', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Bioseq_set_date = CHOICE(name='date', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    _Bioseq_set_descr = SET_OF(name='descr', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Seq-descr')), opt=True)
    _Bioseq_set_seq_set = SEQ_OF(name='seq-set', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Bioseq_set_seq_set__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')))
    _Bioseq_set_seq_set._cont = __Bioseq_set_seq_set__item_
    _Bioseq_set_annot = SET_OF(name='annot', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Bioseq_set_annot__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Seq-annot')))
    _Bioseq_set_annot._cont = __Bioseq_set_annot__item_
    Bioseq_set._cont = ASN1Dict([
        ('id', _Bioseq_set_id),
        ('coll', _Bioseq_set_coll),
        ('level', _Bioseq_set_level),
        ('class', _Bioseq_set_class_),
        ('release', _Bioseq_set_release),
        ('date', _Bioseq_set_date),
        ('descr', _Bioseq_set_descr),
        ('seq-set', _Bioseq_set_seq_set),
        ('annot', _Bioseq_set_annot),
        ])
    Bioseq_set._ext = None
    
    #-----< Seq-entry >-----#
    Seq_entry = CHOICE(name='Seq-entry', mode=MODE_TYPE)
    _Seq_entry_seq = SEQ(name='seq', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Bioseq')))
    _Seq_entry_set = SEQ(name='set', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqset', 'Bioseq-set')))
    Seq_entry._cont = ASN1Dict([
        ('seq', _Seq_entry_seq),
        ('set', _Seq_entry_set),
        ])
    Seq_entry._ext = None
    
    _all_ = [
        _Bioseq_set_id,
        _Bioseq_set_coll,
        _Bioseq_set_level,
        _Bioseq_set_class_,
        _Bioseq_set_release,
        _Bioseq_set_date,
        _Bioseq_set_descr,
        __Bioseq_set_seq_set__item_,
        _Bioseq_set_seq_set,
        __Bioseq_set_annot__item_,
        _Bioseq_set_annot,
        Bioseq_set,
        _Seq_entry_seq,
        _Seq_entry_set,
        Seq_entry,
    ]

class NCBI_Seq_split:

    _name_  = 'NCBI-Seq-split'
    _oid_   = []
    
    _obj_ = [
        'ID2S-Split-Info',
        'ID2S-Bioseqs-Info',
        'ID2S-Bioseq-Info',
        'ID2S-Chunk-Info',
        'ID2S-Chunk-Content',
        'ID2S-Seq-descr-Info',
        'ID2S-Seq-annot-Info',
        'ID2S-Seq-annot-place-Info',
        'ID2S-Seq-feat-Ids-Info',
        'ID2S-Feat-type-Info',
        'ID2S-Seq-assembly-Info',
        'ID2S-Seq-map-Info',
        'ID2S-Seq-data-Info',
        'ID2S-Bioseq-place-Info',
        'ID2S-Chunk',
        'ID2S-Chunk-Data',
        'ID2S-Sequence-Piece',
        'ID2S-Chunk-Id',
        'ID2S-Bioseq-set-Ids',
        'ID2S-Bioseq-Ids',
        'ID2S-Gi-Range',
        'ID2S-Seq-loc',
        'ID2S-Gi-Interval',
        'ID2S-Seq-id-Interval',
        'ID2S-Interval',
        'ID2S-Gi-Ints',
        'ID2S-Seq-id-Ints',
        ]
    _type_ = [
        'ID2S-Split-Info',
        'ID2S-Bioseqs-Info',
        'ID2S-Bioseq-Info',
        'ID2S-Chunk-Info',
        'ID2S-Chunk-Content',
        'ID2S-Seq-descr-Info',
        'ID2S-Seq-annot-Info',
        'ID2S-Seq-annot-place-Info',
        'ID2S-Seq-feat-Ids-Info',
        'ID2S-Feat-type-Info',
        'ID2S-Seq-assembly-Info',
        'ID2S-Seq-map-Info',
        'ID2S-Seq-data-Info',
        'ID2S-Bioseq-place-Info',
        'ID2S-Chunk',
        'ID2S-Chunk-Data',
        'ID2S-Sequence-Piece',
        'ID2S-Chunk-Id',
        'ID2S-Bioseq-set-Ids',
        'ID2S-Bioseq-Ids',
        'ID2S-Gi-Range',
        'ID2S-Seq-loc',
        'ID2S-Gi-Interval',
        'ID2S-Seq-id-Interval',
        'ID2S-Interval',
        'ID2S-Gi-Ints',
        'ID2S-Seq-id-Ints',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< ID2S-Split-Info >-----#
    ID2S_Split_Info = SEQ(name='ID2S-Split-Info', mode=MODE_TYPE)
    _ID2S_Split_Info_bioseqs_info = SET_OF(name='bioseqs-info', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ID2S_Split_Info_bioseqs_info__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Bioseqs-Info')))
    _ID2S_Split_Info_bioseqs_info._cont = __ID2S_Split_Info_bioseqs_info__item_
    _ID2S_Split_Info_chunks = SET_OF(name='chunks', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID2S_Split_Info_chunks__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Chunk-Info')))
    _ID2S_Split_Info_chunks._cont = __ID2S_Split_Info_chunks__item_
    _ID2S_Split_Info_skeleton = CHOICE(name='skeleton', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')), opt=True)
    ID2S_Split_Info._cont = ASN1Dict([
        ('bioseqs-info', _ID2S_Split_Info_bioseqs_info),
        ('chunks', _ID2S_Split_Info_chunks),
        ('skeleton', _ID2S_Split_Info_skeleton),
        ])
    ID2S_Split_Info._ext = None
    
    #-----< ID2S-Bioseqs-Info >-----#
    ID2S_Bioseqs_Info = SEQ(name='ID2S-Bioseqs-Info', mode=MODE_TYPE)
    _ID2S_Bioseqs_Info_info = SEQ(name='info', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Bioseq-Info')))
    _ID2S_Bioseqs_Info_bioseqs = SET_OF(name='bioseqs', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Bioseq-Ids')))
    ID2S_Bioseqs_Info._cont = ASN1Dict([
        ('info', _ID2S_Bioseqs_Info_info),
        ('bioseqs', _ID2S_Bioseqs_Info_bioseqs),
        ])
    ID2S_Bioseqs_Info._ext = None
    
    #-----< ID2S-Bioseq-Info >-----#
    ID2S_Bioseq_Info = SEQ(name='ID2S-Bioseq-Info', mode=MODE_TYPE)
    _ID2S_Bioseq_Info_gap_count = INT(name='gap-count', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ID2S_Bioseq_Info_seq_map_has_ref = BOOL(name='seq-map-has-ref', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ID2S_Bioseq_Info._cont = ASN1Dict([
        ('gap-count', _ID2S_Bioseq_Info_gap_count),
        ('seq-map-has-ref', _ID2S_Bioseq_Info_seq_map_has_ref),
        ])
    ID2S_Bioseq_Info._ext = None
    
    #-----< ID2S-Chunk-Info >-----#
    ID2S_Chunk_Info = SEQ(name='ID2S-Chunk-Info', mode=MODE_TYPE)
    _ID2S_Chunk_Info_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Chunk-Id')))
    _ID2S_Chunk_Info_content = SET_OF(name='content', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID2S_Chunk_Info_content__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Chunk-Content')))
    _ID2S_Chunk_Info_content._cont = __ID2S_Chunk_Info_content__item_
    ID2S_Chunk_Info._cont = ASN1Dict([
        ('id', _ID2S_Chunk_Info_id),
        ('content', _ID2S_Chunk_Info_content),
        ])
    ID2S_Chunk_Info._ext = None
    
    #-----< ID2S-Chunk-Content >-----#
    ID2S_Chunk_Content = CHOICE(name='ID2S-Chunk-Content', mode=MODE_TYPE)
    _ID2S_Chunk_Content_seq_descr = SEQ(name='seq-descr', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Seq-descr-Info')))
    _ID2S_Chunk_Content_seq_annot = SEQ(name='seq-annot', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Seq-annot-Info')))
    _ID2S_Chunk_Content_seq_assembly = SEQ(name='seq-assembly', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Seq-assembly-Info')))
    _ID2S_Chunk_Content_seq_map = CHOICE(name='seq-map', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Seq-map-Info')))
    _ID2S_Chunk_Content_seq_data = CHOICE(name='seq-data', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Seq-data-Info')))
    _ID2S_Chunk_Content_seq_annot_place = SEQ(name='seq-annot-place', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Seq-annot-place-Info')))
    _ID2S_Chunk_Content_bioseq_place = SET_OF(name='bioseq-place', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID2S_Chunk_Content_bioseq_place__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Bioseq-place-Info')))
    _ID2S_Chunk_Content_bioseq_place._cont = __ID2S_Chunk_Content_bioseq_place__item_
    _ID2S_Chunk_Content_feat_ids = SET_OF(name='feat-ids', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID2S_Chunk_Content_feat_ids__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Seq-feat-Ids-Info')))
    _ID2S_Chunk_Content_feat_ids._cont = __ID2S_Chunk_Content_feat_ids__item_
    ID2S_Chunk_Content._cont = ASN1Dict([
        ('seq-descr', _ID2S_Chunk_Content_seq_descr),
        ('seq-annot', _ID2S_Chunk_Content_seq_annot),
        ('seq-assembly', _ID2S_Chunk_Content_seq_assembly),
        ('seq-map', _ID2S_Chunk_Content_seq_map),
        ('seq-data', _ID2S_Chunk_Content_seq_data),
        ('seq-annot-place', _ID2S_Chunk_Content_seq_annot_place),
        ('bioseq-place', _ID2S_Chunk_Content_bioseq_place),
        ('feat-ids', _ID2S_Chunk_Content_feat_ids),
        ])
    ID2S_Chunk_Content._ext = None
    
    #-----< ID2S-Seq-descr-Info >-----#
    ID2S_Seq_descr_Info = SEQ(name='ID2S-Seq-descr-Info', mode=MODE_TYPE)
    _ID2S_Seq_descr_Info_type_mask = INT(name='type-mask', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2S_Seq_descr_Info_bioseqs = SET_OF(name='bioseqs', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Bioseq-Ids')), opt=True)
    _ID2S_Seq_descr_Info_bioseq_sets = SET_OF(name='bioseq-sets', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Bioseq-set-Ids')), opt=True)
    ID2S_Seq_descr_Info._cont = ASN1Dict([
        ('type-mask', _ID2S_Seq_descr_Info_type_mask),
        ('bioseqs', _ID2S_Seq_descr_Info_bioseqs),
        ('bioseq-sets', _ID2S_Seq_descr_Info_bioseq_sets),
        ])
    ID2S_Seq_descr_Info._ext = None
    
    #-----< ID2S-Seq-annot-Info >-----#
    ID2S_Seq_annot_Info = SEQ(name='ID2S-Seq-annot-Info', mode=MODE_TYPE)
    _ID2S_Seq_annot_Info_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ID2S_Seq_annot_Info_align = NULL(name='align', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ID2S_Seq_annot_Info_graph = NULL(name='graph', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ID2S_Seq_annot_Info_feat = SET_OF(name='feat', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ID2S_Seq_annot_Info_feat__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Feat-type-Info')))
    _ID2S_Seq_annot_Info_feat._cont = __ID2S_Seq_annot_Info_feat__item_
    _ID2S_Seq_annot_Info_seq_loc = CHOICE(name='seq-loc', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Seq-loc')), opt=True)
    ID2S_Seq_annot_Info._cont = ASN1Dict([
        ('name', _ID2S_Seq_annot_Info_name),
        ('align', _ID2S_Seq_annot_Info_align),
        ('graph', _ID2S_Seq_annot_Info_graph),
        ('feat', _ID2S_Seq_annot_Info_feat),
        ('seq-loc', _ID2S_Seq_annot_Info_seq_loc),
        ])
    ID2S_Seq_annot_Info._ext = None
    
    #-----< ID2S-Seq-annot-place-Info >-----#
    ID2S_Seq_annot_place_Info = SEQ(name='ID2S-Seq-annot-place-Info', mode=MODE_TYPE)
    _ID2S_Seq_annot_place_Info_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ID2S_Seq_annot_place_Info_bioseqs = SET_OF(name='bioseqs', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Bioseq-Ids')), opt=True)
    _ID2S_Seq_annot_place_Info_bioseq_sets = SET_OF(name='bioseq-sets', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Bioseq-set-Ids')), opt=True)
    ID2S_Seq_annot_place_Info._cont = ASN1Dict([
        ('name', _ID2S_Seq_annot_place_Info_name),
        ('bioseqs', _ID2S_Seq_annot_place_Info_bioseqs),
        ('bioseq-sets', _ID2S_Seq_annot_place_Info_bioseq_sets),
        ])
    ID2S_Seq_annot_place_Info._ext = None
    
    #-----< ID2S-Seq-feat-Ids-Info >-----#
    ID2S_Seq_feat_Ids_Info = SEQ(name='ID2S-Seq-feat-Ids-Info', mode=MODE_TYPE)
    _ID2S_Seq_feat_Ids_Info_feat_types = SET_OF(name='feat-types', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ID2S_Seq_feat_Ids_Info_feat_types__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Feat-type-Info')))
    _ID2S_Seq_feat_Ids_Info_feat_types._cont = __ID2S_Seq_feat_Ids_Info_feat_types__item_
    _ID2S_Seq_feat_Ids_Info_xref_types = SET_OF(name='xref-types', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ID2S_Seq_feat_Ids_Info_xref_types__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Feat-type-Info')))
    _ID2S_Seq_feat_Ids_Info_xref_types._cont = __ID2S_Seq_feat_Ids_Info_xref_types__item_
    _ID2S_Seq_feat_Ids_Info_local_ids = SET_OF(name='local-ids', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ID2S_Seq_feat_Ids_Info_local_ids__item_ = INT(name='_item_', mode=MODE_TYPE)
    _ID2S_Seq_feat_Ids_Info_local_ids._cont = __ID2S_Seq_feat_Ids_Info_local_ids__item_
    _ID2S_Seq_feat_Ids_Info_local_str_ids = SET_OF(name='local-str-ids', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ID2S_Seq_feat_Ids_Info_local_str_ids__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _ID2S_Seq_feat_Ids_Info_local_str_ids._cont = __ID2S_Seq_feat_Ids_Info_local_str_ids__item_
    ID2S_Seq_feat_Ids_Info._cont = ASN1Dict([
        ('feat-types', _ID2S_Seq_feat_Ids_Info_feat_types),
        ('xref-types', _ID2S_Seq_feat_Ids_Info_xref_types),
        ('local-ids', _ID2S_Seq_feat_Ids_Info_local_ids),
        ('local-str-ids', _ID2S_Seq_feat_Ids_Info_local_str_ids),
        ])
    ID2S_Seq_feat_Ids_Info._ext = None
    
    #-----< ID2S-Feat-type-Info >-----#
    ID2S_Feat_type_Info = SEQ(name='ID2S-Feat-type-Info', mode=MODE_TYPE)
    _ID2S_Feat_type_Info_type = INT(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2S_Feat_type_Info_subtypes = SET_OF(name='subtypes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ID2S_Feat_type_Info_subtypes__item_ = INT(name='_item_', mode=MODE_TYPE)
    _ID2S_Feat_type_Info_subtypes._cont = __ID2S_Feat_type_Info_subtypes__item_
    ID2S_Feat_type_Info._cont = ASN1Dict([
        ('type', _ID2S_Feat_type_Info_type),
        ('subtypes', _ID2S_Feat_type_Info_subtypes),
        ])
    ID2S_Feat_type_Info._ext = None
    
    #-----< ID2S-Seq-assembly-Info >-----#
    ID2S_Seq_assembly_Info = SEQ(name='ID2S-Seq-assembly-Info', mode=MODE_TYPE)
    _ID2S_Seq_assembly_Info_bioseqs = SET_OF(name='bioseqs', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Bioseq-Ids')))
    ID2S_Seq_assembly_Info._cont = ASN1Dict([
        ('bioseqs', _ID2S_Seq_assembly_Info_bioseqs),
        ])
    ID2S_Seq_assembly_Info._ext = None
    
    #-----< ID2S-Seq-map-Info >-----#
    ID2S_Seq_map_Info = CHOICE(name='ID2S-Seq-map-Info', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Seq-loc')))
    
    #-----< ID2S-Seq-data-Info >-----#
    ID2S_Seq_data_Info = CHOICE(name='ID2S-Seq-data-Info', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Seq-loc')))
    
    #-----< ID2S-Bioseq-place-Info >-----#
    ID2S_Bioseq_place_Info = SEQ(name='ID2S-Bioseq-place-Info', mode=MODE_TYPE)
    _ID2S_Bioseq_place_Info_bioseq_set = INT(name='bioseq-set', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2S_Bioseq_place_Info_seq_ids = SET_OF(name='seq-ids', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Bioseq-Ids')))
    ID2S_Bioseq_place_Info._cont = ASN1Dict([
        ('bioseq-set', _ID2S_Bioseq_place_Info_bioseq_set),
        ('seq-ids', _ID2S_Bioseq_place_Info_seq_ids),
        ])
    ID2S_Bioseq_place_Info._ext = None
    
    #-----< ID2S-Chunk >-----#
    ID2S_Chunk = SEQ(name='ID2S-Chunk', mode=MODE_TYPE)
    _ID2S_Chunk_data = SET_OF(name='data', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID2S_Chunk_data__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Chunk-Data')))
    _ID2S_Chunk_data._cont = __ID2S_Chunk_data__item_
    ID2S_Chunk._cont = ASN1Dict([
        ('data', _ID2S_Chunk_data),
        ])
    ID2S_Chunk._ext = None
    
    #-----< ID2S-Chunk-Data >-----#
    ID2S_Chunk_Data = SEQ(name='ID2S-Chunk-Data', mode=MODE_TYPE)
    _ID2S_Chunk_Data_id = CHOICE(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __ID2S_Chunk_Data_id_bioseq_set = INT(name='bioseq-set', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID2S_Chunk_Data_id_gi = INT(name='gi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID2S_Chunk_Data_id_seq_id = CHOICE(name='seq-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _ID2S_Chunk_Data_id._cont = ASN1Dict([
        ('bioseq-set', __ID2S_Chunk_Data_id_bioseq_set),
        ('gi', __ID2S_Chunk_Data_id_gi),
        ('seq-id', __ID2S_Chunk_Data_id_seq_id),
        ])
    _ID2S_Chunk_Data_id._ext = None
    _ID2S_Chunk_Data_descr = SET_OF(name='descr', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Sequence', 'Seq-descr')), opt=True)
    _ID2S_Chunk_Data_annots = SET_OF(name='annots', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ID2S_Chunk_Data_annots__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Seq-annot')))
    _ID2S_Chunk_Data_annots._cont = __ID2S_Chunk_Data_annots__item_
    _ID2S_Chunk_Data_assembly = SET_OF(name='assembly', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ID2S_Chunk_Data_assembly__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqalign', 'Seq-align')))
    _ID2S_Chunk_Data_assembly._cont = __ID2S_Chunk_Data_assembly__item_
    _ID2S_Chunk_Data_seq_map = SEQ_OF(name='seq-map', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ID2S_Chunk_Data_seq_map__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Sequence-Piece')))
    _ID2S_Chunk_Data_seq_map._cont = __ID2S_Chunk_Data_seq_map__item_
    _ID2S_Chunk_Data_seq_data = SEQ_OF(name='seq-data', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ID2S_Chunk_Data_seq_data__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Sequence-Piece')))
    _ID2S_Chunk_Data_seq_data._cont = __ID2S_Chunk_Data_seq_data__item_
    _ID2S_Chunk_Data_bioseqs = SET_OF(name='bioseqs', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ID2S_Chunk_Data_bioseqs__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Bioseq')))
    _ID2S_Chunk_Data_bioseqs._cont = __ID2S_Chunk_Data_bioseqs__item_
    ID2S_Chunk_Data._cont = ASN1Dict([
        ('id', _ID2S_Chunk_Data_id),
        ('descr', _ID2S_Chunk_Data_descr),
        ('annots', _ID2S_Chunk_Data_annots),
        ('assembly', _ID2S_Chunk_Data_assembly),
        ('seq-map', _ID2S_Chunk_Data_seq_map),
        ('seq-data', _ID2S_Chunk_Data_seq_data),
        ('bioseqs', _ID2S_Chunk_Data_bioseqs),
        ])
    ID2S_Chunk_Data._ext = None
    
    #-----< ID2S-Sequence-Piece >-----#
    ID2S_Sequence_Piece = SEQ(name='ID2S-Sequence-Piece', mode=MODE_TYPE)
    _ID2S_Sequence_Piece_start = INT(name='start', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2S_Sequence_Piece_data = SEQ_OF(name='data', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID2S_Sequence_Piece_data__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Seq-literal')))
    _ID2S_Sequence_Piece_data._cont = __ID2S_Sequence_Piece_data__item_
    ID2S_Sequence_Piece._cont = ASN1Dict([
        ('start', _ID2S_Sequence_Piece_start),
        ('data', _ID2S_Sequence_Piece_data),
        ])
    ID2S_Sequence_Piece._ext = None
    
    #-----< ID2S-Chunk-Id >-----#
    ID2S_Chunk_Id = INT(name='ID2S-Chunk-Id', mode=MODE_TYPE)
    
    #-----< ID2S-Bioseq-set-Ids >-----#
    ID2S_Bioseq_set_Ids = SET_OF(name='ID2S-Bioseq-set-Ids', mode=MODE_TYPE)
    _ID2S_Bioseq_set_Ids__item_ = INT(name='_item_', mode=MODE_TYPE)
    ID2S_Bioseq_set_Ids._cont = _ID2S_Bioseq_set_Ids__item_
    
    #-----< ID2S-Bioseq-Ids >-----#
    ID2S_Bioseq_Ids = SET_OF(name='ID2S-Bioseq-Ids', mode=MODE_TYPE)
    _ID2S_Bioseq_Ids__item_ = CHOICE(name='_item_', mode=MODE_TYPE)
    __ID2S_Bioseq_Ids__item__gi = INT(name='gi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID2S_Bioseq_Ids__item__seq_id = CHOICE(name='seq-id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    __ID2S_Bioseq_Ids__item__gi_range = SEQ(name='gi-range', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Gi-Range')))
    _ID2S_Bioseq_Ids__item_._cont = ASN1Dict([
        ('gi', __ID2S_Bioseq_Ids__item__gi),
        ('seq-id', __ID2S_Bioseq_Ids__item__seq_id),
        ('gi-range', __ID2S_Bioseq_Ids__item__gi_range),
        ])
    _ID2S_Bioseq_Ids__item_._ext = None
    ID2S_Bioseq_Ids._cont = _ID2S_Bioseq_Ids__item_
    
    #-----< ID2S-Gi-Range >-----#
    ID2S_Gi_Range = SEQ(name='ID2S-Gi-Range', mode=MODE_TYPE)
    _ID2S_Gi_Range_start = INT(name='start', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2S_Gi_Range_count = INT(name='count', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=1)
    ID2S_Gi_Range._cont = ASN1Dict([
        ('start', _ID2S_Gi_Range_start),
        ('count', _ID2S_Gi_Range_count),
        ])
    ID2S_Gi_Range._ext = None
    
    #-----< ID2S-Seq-loc >-----#
    ID2S_Seq_loc = CHOICE(name='ID2S-Seq-loc', mode=MODE_TYPE)
    _ID2S_Seq_loc_whole_gi = INT(name='whole-gi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2S_Seq_loc_whole_seq_id = CHOICE(name='whole-seq-id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _ID2S_Seq_loc_whole_gi_range = SEQ(name='whole-gi-range', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Gi-Range')))
    _ID2S_Seq_loc_gi_interval = SEQ(name='gi-interval', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Gi-Interval')))
    _ID2S_Seq_loc_seq_id_interval = SEQ(name='seq-id-interval', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Seq-id-Interval')))
    _ID2S_Seq_loc_gi_ints = SEQ(name='gi-ints', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Gi-Ints')))
    _ID2S_Seq_loc_seq_id_ints = SEQ(name='seq-id-ints', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Seq-id-Ints')))
    _ID2S_Seq_loc_loc_set = SET_OF(name='loc-set', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID2S_Seq_loc_loc_set__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Seq-loc')))
    _ID2S_Seq_loc_loc_set._cont = __ID2S_Seq_loc_loc_set__item_
    ID2S_Seq_loc._cont = ASN1Dict([
        ('whole-gi', _ID2S_Seq_loc_whole_gi),
        ('whole-seq-id', _ID2S_Seq_loc_whole_seq_id),
        ('whole-gi-range', _ID2S_Seq_loc_whole_gi_range),
        ('gi-interval', _ID2S_Seq_loc_gi_interval),
        ('seq-id-interval', _ID2S_Seq_loc_seq_id_interval),
        ('gi-ints', _ID2S_Seq_loc_gi_ints),
        ('seq-id-ints', _ID2S_Seq_loc_seq_id_ints),
        ('loc-set', _ID2S_Seq_loc_loc_set),
        ])
    ID2S_Seq_loc._ext = None
    
    #-----< ID2S-Gi-Interval >-----#
    ID2S_Gi_Interval = SEQ(name='ID2S-Gi-Interval', mode=MODE_TYPE)
    _ID2S_Gi_Interval_gi = INT(name='gi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2S_Gi_Interval_start = INT(name='start', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2S_Gi_Interval_length = INT(name='length', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=1)
    ID2S_Gi_Interval._cont = ASN1Dict([
        ('gi', _ID2S_Gi_Interval_gi),
        ('start', _ID2S_Gi_Interval_start),
        ('length', _ID2S_Gi_Interval_length),
        ])
    ID2S_Gi_Interval._ext = None
    
    #-----< ID2S-Seq-id-Interval >-----#
    ID2S_Seq_id_Interval = SEQ(name='ID2S-Seq-id-Interval', mode=MODE_TYPE)
    _ID2S_Seq_id_Interval_seq_id = CHOICE(name='seq-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _ID2S_Seq_id_Interval_start = INT(name='start', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2S_Seq_id_Interval_length = INT(name='length', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=1)
    ID2S_Seq_id_Interval._cont = ASN1Dict([
        ('seq-id', _ID2S_Seq_id_Interval_seq_id),
        ('start', _ID2S_Seq_id_Interval_start),
        ('length', _ID2S_Seq_id_Interval_length),
        ])
    ID2S_Seq_id_Interval._ext = None
    
    #-----< ID2S-Interval >-----#
    ID2S_Interval = SEQ(name='ID2S-Interval', mode=MODE_TYPE)
    _ID2S_Interval_start = INT(name='start', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2S_Interval_length = INT(name='length', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=1)
    ID2S_Interval._cont = ASN1Dict([
        ('start', _ID2S_Interval_start),
        ('length', _ID2S_Interval_length),
        ])
    ID2S_Interval._ext = None
    
    #-----< ID2S-Gi-Ints >-----#
    ID2S_Gi_Ints = SEQ(name='ID2S-Gi-Ints', mode=MODE_TYPE)
    _ID2S_Gi_Ints_gi = INT(name='gi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ID2S_Gi_Ints_ints = SET_OF(name='ints', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID2S_Gi_Ints_ints__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Interval')))
    _ID2S_Gi_Ints_ints._cont = __ID2S_Gi_Ints_ints__item_
    ID2S_Gi_Ints._cont = ASN1Dict([
        ('gi', _ID2S_Gi_Ints_gi),
        ('ints', _ID2S_Gi_Ints_ints),
        ])
    ID2S_Gi_Ints._ext = None
    
    #-----< ID2S-Seq-id-Ints >-----#
    ID2S_Seq_id_Ints = SEQ(name='ID2S-Seq-id-Ints', mode=MODE_TYPE)
    _ID2S_Seq_id_Ints_seq_id = CHOICE(name='seq-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _ID2S_Seq_id_Ints_ints = SET_OF(name='ints', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ID2S_Seq_id_Ints_ints__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seq-split', 'ID2S-Interval')))
    _ID2S_Seq_id_Ints_ints._cont = __ID2S_Seq_id_Ints_ints__item_
    ID2S_Seq_id_Ints._cont = ASN1Dict([
        ('seq-id', _ID2S_Seq_id_Ints_seq_id),
        ('ints', _ID2S_Seq_id_Ints_ints),
        ])
    ID2S_Seq_id_Ints._ext = None
    
    _all_ = [
        __ID2S_Split_Info_bioseqs_info__item_,
        _ID2S_Split_Info_bioseqs_info,
        __ID2S_Split_Info_chunks__item_,
        _ID2S_Split_Info_chunks,
        _ID2S_Split_Info_skeleton,
        ID2S_Split_Info,
        _ID2S_Bioseqs_Info_info,
        _ID2S_Bioseqs_Info_bioseqs,
        ID2S_Bioseqs_Info,
        _ID2S_Bioseq_Info_gap_count,
        _ID2S_Bioseq_Info_seq_map_has_ref,
        ID2S_Bioseq_Info,
        _ID2S_Chunk_Info_id,
        __ID2S_Chunk_Info_content__item_,
        _ID2S_Chunk_Info_content,
        ID2S_Chunk_Info,
        _ID2S_Chunk_Content_seq_descr,
        _ID2S_Chunk_Content_seq_annot,
        _ID2S_Chunk_Content_seq_assembly,
        _ID2S_Chunk_Content_seq_map,
        _ID2S_Chunk_Content_seq_data,
        _ID2S_Chunk_Content_seq_annot_place,
        __ID2S_Chunk_Content_bioseq_place__item_,
        _ID2S_Chunk_Content_bioseq_place,
        __ID2S_Chunk_Content_feat_ids__item_,
        _ID2S_Chunk_Content_feat_ids,
        ID2S_Chunk_Content,
        _ID2S_Seq_descr_Info_type_mask,
        _ID2S_Seq_descr_Info_bioseqs,
        _ID2S_Seq_descr_Info_bioseq_sets,
        ID2S_Seq_descr_Info,
        _ID2S_Seq_annot_Info_name,
        _ID2S_Seq_annot_Info_align,
        _ID2S_Seq_annot_Info_graph,
        __ID2S_Seq_annot_Info_feat__item_,
        _ID2S_Seq_annot_Info_feat,
        _ID2S_Seq_annot_Info_seq_loc,
        ID2S_Seq_annot_Info,
        _ID2S_Seq_annot_place_Info_name,
        _ID2S_Seq_annot_place_Info_bioseqs,
        _ID2S_Seq_annot_place_Info_bioseq_sets,
        ID2S_Seq_annot_place_Info,
        __ID2S_Seq_feat_Ids_Info_feat_types__item_,
        _ID2S_Seq_feat_Ids_Info_feat_types,
        __ID2S_Seq_feat_Ids_Info_xref_types__item_,
        _ID2S_Seq_feat_Ids_Info_xref_types,
        __ID2S_Seq_feat_Ids_Info_local_ids__item_,
        _ID2S_Seq_feat_Ids_Info_local_ids,
        __ID2S_Seq_feat_Ids_Info_local_str_ids__item_,
        _ID2S_Seq_feat_Ids_Info_local_str_ids,
        ID2S_Seq_feat_Ids_Info,
        _ID2S_Feat_type_Info_type,
        __ID2S_Feat_type_Info_subtypes__item_,
        _ID2S_Feat_type_Info_subtypes,
        ID2S_Feat_type_Info,
        _ID2S_Seq_assembly_Info_bioseqs,
        ID2S_Seq_assembly_Info,
        ID2S_Seq_map_Info,
        ID2S_Seq_data_Info,
        _ID2S_Bioseq_place_Info_bioseq_set,
        _ID2S_Bioseq_place_Info_seq_ids,
        ID2S_Bioseq_place_Info,
        __ID2S_Chunk_data__item_,
        _ID2S_Chunk_data,
        ID2S_Chunk,
        __ID2S_Chunk_Data_id_bioseq_set,
        __ID2S_Chunk_Data_id_gi,
        __ID2S_Chunk_Data_id_seq_id,
        _ID2S_Chunk_Data_id,
        _ID2S_Chunk_Data_descr,
        __ID2S_Chunk_Data_annots__item_,
        _ID2S_Chunk_Data_annots,
        __ID2S_Chunk_Data_assembly__item_,
        _ID2S_Chunk_Data_assembly,
        __ID2S_Chunk_Data_seq_map__item_,
        _ID2S_Chunk_Data_seq_map,
        __ID2S_Chunk_Data_seq_data__item_,
        _ID2S_Chunk_Data_seq_data,
        __ID2S_Chunk_Data_bioseqs__item_,
        _ID2S_Chunk_Data_bioseqs,
        ID2S_Chunk_Data,
        _ID2S_Sequence_Piece_start,
        __ID2S_Sequence_Piece_data__item_,
        _ID2S_Sequence_Piece_data,
        ID2S_Sequence_Piece,
        ID2S_Chunk_Id,
        _ID2S_Bioseq_set_Ids__item_,
        ID2S_Bioseq_set_Ids,
        __ID2S_Bioseq_Ids__item__gi,
        __ID2S_Bioseq_Ids__item__seq_id,
        __ID2S_Bioseq_Ids__item__gi_range,
        _ID2S_Bioseq_Ids__item_,
        ID2S_Bioseq_Ids,
        _ID2S_Gi_Range_start,
        _ID2S_Gi_Range_count,
        ID2S_Gi_Range,
        _ID2S_Seq_loc_whole_gi,
        _ID2S_Seq_loc_whole_seq_id,
        _ID2S_Seq_loc_whole_gi_range,
        _ID2S_Seq_loc_gi_interval,
        _ID2S_Seq_loc_seq_id_interval,
        _ID2S_Seq_loc_gi_ints,
        _ID2S_Seq_loc_seq_id_ints,
        __ID2S_Seq_loc_loc_set__item_,
        _ID2S_Seq_loc_loc_set,
        ID2S_Seq_loc,
        _ID2S_Gi_Interval_gi,
        _ID2S_Gi_Interval_start,
        _ID2S_Gi_Interval_length,
        ID2S_Gi_Interval,
        _ID2S_Seq_id_Interval_seq_id,
        _ID2S_Seq_id_Interval_start,
        _ID2S_Seq_id_Interval_length,
        ID2S_Seq_id_Interval,
        _ID2S_Interval_start,
        _ID2S_Interval_length,
        ID2S_Interval,
        _ID2S_Gi_Ints_gi,
        __ID2S_Gi_Ints_ints__item_,
        _ID2S_Gi_Ints_ints,
        ID2S_Gi_Ints,
        _ID2S_Seq_id_Ints_seq_id,
        __ID2S_Seq_id_Ints_ints__item_,
        _ID2S_Seq_id_Ints_ints,
        ID2S_Seq_id_Ints,
    ]

class NCBI_SeqTable:

    _name_  = 'NCBI-SeqTable'
    _oid_   = []
    
    _obj_ = [
        'SeqTable-column-info',
        'CommonString-table',
        'CommonBytes-table',
        'SeqTable-multi-data',
        'SeqTable-single-data',
        'SeqTable-sparse-index',
        'SeqTable-column',
        'Seq-table',
        ]
    _type_ = [
        'SeqTable-column-info',
        'CommonString-table',
        'CommonBytes-table',
        'SeqTable-multi-data',
        'SeqTable-single-data',
        'SeqTable-sparse-index',
        'SeqTable-column',
        'Seq-table',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< SeqTable-column-info >-----#
    SeqTable_column_info = SEQ(name='SeqTable-column-info', mode=MODE_TYPE)
    _SeqTable_column_info_title = STR_VIS(name='title', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SeqTable_column_info_field_id = INT(name='field-id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SeqTable_column_info_field_id._cont = ASN1Dict([('location', 0), ('location-id', 1), ('location-gi', 2), ('location-from', 3), ('location-to', 4), ('location-strand', 5), ('location-fuzz-from-lim', 6), ('location-fuzz-to-lim', 7), ('product', 10), ('product-id', 11), ('product-gi', 12), ('product-from', 13), ('product-to', 14), ('product-strand', 15), ('product-fuzz-from-lim', 16), ('product-fuzz-to-lim', 17), ('id-local', 20), ('xref-id-local', 21), ('partial', 22), ('comment', 23), ('title', 24), ('ext', 25), ('qual', 26), ('dbxref', 27), ('data-imp-key', 30), ('data-region', 31), ('data-cdregion-frame', 32), ('ext-type', 40), ('qual-qual', 41), ('qual-val', 42), ('dbxref-db', 43), ('dbxref-tag', 44)])
    _SeqTable_column_info_field_name = STR_VIS(name='field-name', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SeqTable_column_info._cont = ASN1Dict([
        ('title', _SeqTable_column_info_title),
        ('field-id', _SeqTable_column_info_field_id),
        ('field-name', _SeqTable_column_info_field_name),
        ])
    SeqTable_column_info._ext = None
    
    #-----< CommonString-table >-----#
    CommonString_table = SEQ(name='CommonString-table', mode=MODE_TYPE)
    _CommonString_table_strings = SEQ_OF(name='strings', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CommonString_table_strings__item_ = STR_UTF8(name='_item_', mode=MODE_TYPE)
    _CommonString_table_strings._cont = __CommonString_table_strings__item_
    _CommonString_table_indexes = SEQ_OF(name='indexes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CommonString_table_indexes__item_ = INT(name='_item_', mode=MODE_TYPE)
    _CommonString_table_indexes._cont = __CommonString_table_indexes__item_
    CommonString_table._cont = ASN1Dict([
        ('strings', _CommonString_table_strings),
        ('indexes', _CommonString_table_indexes),
        ])
    CommonString_table._ext = None
    
    #-----< CommonBytes-table >-----#
    CommonBytes_table = SEQ(name='CommonBytes-table', mode=MODE_TYPE)
    _CommonBytes_table_bytes = SEQ_OF(name='bytes', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CommonBytes_table_bytes__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _CommonBytes_table_bytes._cont = __CommonBytes_table_bytes__item_
    _CommonBytes_table_indexes = SEQ_OF(name='indexes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CommonBytes_table_indexes__item_ = INT(name='_item_', mode=MODE_TYPE)
    _CommonBytes_table_indexes._cont = __CommonBytes_table_indexes__item_
    CommonBytes_table._cont = ASN1Dict([
        ('bytes', _CommonBytes_table_bytes),
        ('indexes', _CommonBytes_table_indexes),
        ])
    CommonBytes_table._ext = None
    
    #-----< SeqTable-multi-data >-----#
    SeqTable_multi_data = CHOICE(name='SeqTable-multi-data', mode=MODE_TYPE)
    _SeqTable_multi_data_int = SEQ_OF(name='int', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SeqTable_multi_data_int__item_ = INT(name='_item_', mode=MODE_TYPE)
    _SeqTable_multi_data_int._cont = __SeqTable_multi_data_int__item_
    _SeqTable_multi_data_real = SEQ_OF(name='real', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SeqTable_multi_data_real__item_ = REAL(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _SeqTable_multi_data_real._cont = __SeqTable_multi_data_real__item_
    _SeqTable_multi_data_string = SEQ_OF(name='string', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SeqTable_multi_data_string__item_ = STR_UTF8(name='_item_', mode=MODE_TYPE)
    _SeqTable_multi_data_string._cont = __SeqTable_multi_data_string__item_
    _SeqTable_multi_data_bytes = SEQ_OF(name='bytes', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SeqTable_multi_data_bytes__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _SeqTable_multi_data_bytes._cont = __SeqTable_multi_data_bytes__item_
    _SeqTable_multi_data_common_string = SEQ(name='common-string', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-SeqTable', 'CommonString-table')))
    _SeqTable_multi_data_common_bytes = SEQ(name='common-bytes', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-SeqTable', 'CommonBytes-table')))
    _SeqTable_multi_data_bit = OCT_STR(name='bit', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SeqTable_multi_data_loc = SEQ_OF(name='loc', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SeqTable_multi_data_loc__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _SeqTable_multi_data_loc._cont = __SeqTable_multi_data_loc__item_
    _SeqTable_multi_data_id = SEQ_OF(name='id', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SeqTable_multi_data_id__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _SeqTable_multi_data_id._cont = __SeqTable_multi_data_id__item_
    _SeqTable_multi_data_interval = SEQ_OF(name='interval', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SeqTable_multi_data_interval__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-interval')))
    _SeqTable_multi_data_interval._cont = __SeqTable_multi_data_interval__item_
    SeqTable_multi_data._cont = ASN1Dict([
        ('int', _SeqTable_multi_data_int),
        ('real', _SeqTable_multi_data_real),
        ('string', _SeqTable_multi_data_string),
        ('bytes', _SeqTable_multi_data_bytes),
        ('common-string', _SeqTable_multi_data_common_string),
        ('common-bytes', _SeqTable_multi_data_common_bytes),
        ('bit', _SeqTable_multi_data_bit),
        ('loc', _SeqTable_multi_data_loc),
        ('id', _SeqTable_multi_data_id),
        ('interval', _SeqTable_multi_data_interval),
        ])
    SeqTable_multi_data._ext = None
    
    #-----< SeqTable-single-data >-----#
    SeqTable_single_data = CHOICE(name='SeqTable-single-data', mode=MODE_TYPE)
    _SeqTable_single_data_int = INT(name='int', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SeqTable_single_data_real = REAL(name='real', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('_IMPL_', 'REAL')))
    _SeqTable_single_data_string = STR_UTF8(name='string', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SeqTable_single_data_bytes = OCT_STR(name='bytes', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SeqTable_single_data_bit = BOOL(name='bit', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SeqTable_single_data_loc = CHOICE(name='loc', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-loc')))
    _SeqTable_single_data_id = CHOICE(name='id', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    _SeqTable_single_data_interval = SEQ(name='interval', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-interval')))
    SeqTable_single_data._cont = ASN1Dict([
        ('int', _SeqTable_single_data_int),
        ('real', _SeqTable_single_data_real),
        ('string', _SeqTable_single_data_string),
        ('bytes', _SeqTable_single_data_bytes),
        ('bit', _SeqTable_single_data_bit),
        ('loc', _SeqTable_single_data_loc),
        ('id', _SeqTable_single_data_id),
        ('interval', _SeqTable_single_data_interval),
        ])
    SeqTable_single_data._ext = None
    
    #-----< SeqTable-sparse-index >-----#
    SeqTable_sparse_index = CHOICE(name='SeqTable-sparse-index', mode=MODE_TYPE)
    _SeqTable_sparse_index_indexes = SEQ_OF(name='indexes', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SeqTable_sparse_index_indexes__item_ = INT(name='_item_', mode=MODE_TYPE)
    _SeqTable_sparse_index_indexes._cont = __SeqTable_sparse_index_indexes__item_
    _SeqTable_sparse_index_bit_set = OCT_STR(name='bit-set', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SeqTable_sparse_index._cont = ASN1Dict([
        ('indexes', _SeqTable_sparse_index_indexes),
        ('bit-set', _SeqTable_sparse_index_bit_set),
        ])
    SeqTable_sparse_index._ext = None
    
    #-----< SeqTable-column >-----#
    SeqTable_column = SEQ(name='SeqTable-column', mode=MODE_TYPE)
    _SeqTable_column_header = SEQ(name='header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-SeqTable', 'SeqTable-column-info')))
    _SeqTable_column_data = CHOICE(name='data', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-SeqTable', 'SeqTable-multi-data')), opt=True)
    _SeqTable_column_sparse = CHOICE(name='sparse', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-SeqTable', 'SeqTable-sparse-index')), opt=True)
    _SeqTable_column_default = CHOICE(name='default', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-SeqTable', 'SeqTable-single-data')), opt=True)
    _SeqTable_column_sparse_other = CHOICE(name='sparse-other', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-SeqTable', 'SeqTable-single-data')), opt=True)
    SeqTable_column._cont = ASN1Dict([
        ('header', _SeqTable_column_header),
        ('data', _SeqTable_column_data),
        ('sparse', _SeqTable_column_sparse),
        ('default', _SeqTable_column_default),
        ('sparse-other', _SeqTable_column_sparse_other),
        ])
    SeqTable_column._ext = None
    
    #-----< Seq-table >-----#
    Seq_table = SEQ(name='Seq-table', mode=MODE_TYPE)
    _Seq_table_feat_type = INT(name='feat-type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seq_table_feat_subtype = INT(name='feat-subtype', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Seq_table_num_rows = INT(name='num-rows', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Seq_table_columns = SEQ_OF(name='columns', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Seq_table_columns__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-SeqTable', 'SeqTable-column')))
    _Seq_table_columns._cont = __Seq_table_columns__item_
    Seq_table._cont = ASN1Dict([
        ('feat-type', _Seq_table_feat_type),
        ('feat-subtype', _Seq_table_feat_subtype),
        ('num-rows', _Seq_table_num_rows),
        ('columns', _Seq_table_columns),
        ])
    Seq_table._ext = None
    
    _all_ = [
        _SeqTable_column_info_title,
        _SeqTable_column_info_field_id,
        _SeqTable_column_info_field_name,
        SeqTable_column_info,
        __CommonString_table_strings__item_,
        _CommonString_table_strings,
        __CommonString_table_indexes__item_,
        _CommonString_table_indexes,
        CommonString_table,
        __CommonBytes_table_bytes__item_,
        _CommonBytes_table_bytes,
        __CommonBytes_table_indexes__item_,
        _CommonBytes_table_indexes,
        CommonBytes_table,
        __SeqTable_multi_data_int__item_,
        _SeqTable_multi_data_int,
        __SeqTable_multi_data_real__item_,
        _SeqTable_multi_data_real,
        __SeqTable_multi_data_string__item_,
        _SeqTable_multi_data_string,
        __SeqTable_multi_data_bytes__item_,
        _SeqTable_multi_data_bytes,
        _SeqTable_multi_data_common_string,
        _SeqTable_multi_data_common_bytes,
        _SeqTable_multi_data_bit,
        __SeqTable_multi_data_loc__item_,
        _SeqTable_multi_data_loc,
        __SeqTable_multi_data_id__item_,
        _SeqTable_multi_data_id,
        __SeqTable_multi_data_interval__item_,
        _SeqTable_multi_data_interval,
        SeqTable_multi_data,
        _SeqTable_single_data_int,
        _SeqTable_single_data_real,
        _SeqTable_single_data_string,
        _SeqTable_single_data_bytes,
        _SeqTable_single_data_bit,
        _SeqTable_single_data_loc,
        _SeqTable_single_data_id,
        _SeqTable_single_data_interval,
        SeqTable_single_data,
        __SeqTable_sparse_index_indexes__item_,
        _SeqTable_sparse_index_indexes,
        _SeqTable_sparse_index_bit_set,
        SeqTable_sparse_index,
        _SeqTable_column_header,
        _SeqTable_column_data,
        _SeqTable_column_sparse,
        _SeqTable_column_default,
        _SeqTable_column_sparse_other,
        SeqTable_column,
        _Seq_table_feat_type,
        _Seq_table_feat_subtype,
        _Seq_table_num_rows,
        __Seq_table_columns__item_,
        _Seq_table_columns,
        Seq_table,
    ]

class NCBI_Submit:

    _name_  = 'NCBI-Submit'
    _oid_   = []
    
    _obj_ = [
        'Seq-submit',
        'Submit-block',
        'Contact-info',
        ]
    _type_ = [
        'Seq-submit',
        'Submit-block',
        'Contact-info',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Seq-submit >-----#
    Seq_submit = SEQ(name='Seq-submit', mode=MODE_TYPE)
    _Seq_submit_sub = SEQ(name='sub', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Submit', 'Submit-block')))
    _Seq_submit_data = CHOICE(name='data', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __Seq_submit_data_entrys = SET_OF(name='entrys', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Seq_submit_data_entrys__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqset', 'Seq-entry')))
    __Seq_submit_data_entrys._cont = ___Seq_submit_data_entrys__item_
    __Seq_submit_data_annots = SET_OF(name='annots', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Seq_submit_data_annots__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Sequence', 'Seq-annot')))
    __Seq_submit_data_annots._cont = ___Seq_submit_data_annots__item_
    __Seq_submit_data_delete = SET_OF(name='delete', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___Seq_submit_data_delete__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-Seqloc', 'Seq-id')))
    __Seq_submit_data_delete._cont = ___Seq_submit_data_delete__item_
    _Seq_submit_data._cont = ASN1Dict([
        ('entrys', __Seq_submit_data_entrys),
        ('annots', __Seq_submit_data_annots),
        ('delete', __Seq_submit_data_delete),
        ])
    _Seq_submit_data._ext = None
    Seq_submit._cont = ASN1Dict([
        ('sub', _Seq_submit_sub),
        ('data', _Seq_submit_data),
        ])
    Seq_submit._ext = None
    
    #-----< Submit-block >-----#
    Submit_block = SEQ(name='Submit-block', mode=MODE_TYPE)
    _Submit_block_contact = SEQ(name='contact', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Submit', 'Contact-info')))
    _Submit_block_cit = SEQ(name='cit', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Cit-sub')))
    _Submit_block_hup = BOOL(name='hup', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _Submit_block_reldate = CHOICE(name='reldate', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Date')), opt=True)
    _Submit_block_subtype = INT(name='subtype', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Submit_block_subtype._cont = ASN1Dict([('new', 1), ('update', 2), ('revision', 3), ('other', 255)])
    _Submit_block_tool = STR_VIS(name='tool', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Submit_block_user_tag = STR_VIS(name='user-tag', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Submit_block_comment = STR_VIS(name='comment', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Submit_block._cont = ASN1Dict([
        ('contact', _Submit_block_contact),
        ('cit', _Submit_block_cit),
        ('hup', _Submit_block_hup),
        ('reldate', _Submit_block_reldate),
        ('subtype', _Submit_block_subtype),
        ('tool', _Submit_block_tool),
        ('user-tag', _Submit_block_user_tag),
        ('comment', _Submit_block_comment),
        ])
    Submit_block._ext = None
    
    #-----< Contact-info >-----#
    Contact_info = SEQ(name='Contact-info', mode=MODE_TYPE)
    _Contact_info_name = STR_VIS(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Contact_info_address = SEQ_OF(name='address', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Contact_info_address__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _Contact_info_address._cont = __Contact_info_address__item_
    _Contact_info_phone = STR_VIS(name='phone', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Contact_info_fax = STR_VIS(name='fax', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Contact_info_email = STR_VIS(name='email', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Contact_info_telex = STR_VIS(name='telex', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Contact_info_owner_id = CHOICE(name='owner-id', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NCBI-General', 'Object-id')), opt=True)
    _Contact_info_password = OCT_STR(name='password', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Contact_info_last_name = STR_VIS(name='last-name', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Contact_info_first_name = STR_VIS(name='first-name', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Contact_info_middle_initial = STR_VIS(name='middle-initial', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Contact_info_contact = SEQ(name='contact', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NCBI-Biblio', 'Author')), opt=True)
    Contact_info._cont = ASN1Dict([
        ('name', _Contact_info_name),
        ('address', _Contact_info_address),
        ('phone', _Contact_info_phone),
        ('fax', _Contact_info_fax),
        ('email', _Contact_info_email),
        ('telex', _Contact_info_telex),
        ('owner-id', _Contact_info_owner_id),
        ('password', _Contact_info_password),
        ('last-name', _Contact_info_last_name),
        ('first-name', _Contact_info_first_name),
        ('middle-initial', _Contact_info_middle_initial),
        ('contact', _Contact_info_contact),
        ])
    Contact_info._ext = None
    
    _all_ = [
        _Seq_submit_sub,
        ___Seq_submit_data_entrys__item_,
        __Seq_submit_data_entrys,
        ___Seq_submit_data_annots__item_,
        __Seq_submit_data_annots,
        ___Seq_submit_data_delete__item_,
        __Seq_submit_data_delete,
        _Seq_submit_data,
        Seq_submit,
        _Submit_block_contact,
        _Submit_block_cit,
        _Submit_block_hup,
        _Submit_block_reldate,
        _Submit_block_subtype,
        _Submit_block_tool,
        _Submit_block_user_tag,
        _Submit_block_comment,
        Submit_block,
        _Contact_info_name,
        __Contact_info_address__item_,
        _Contact_info_address,
        _Contact_info_phone,
        _Contact_info_fax,
        _Contact_info_email,
        _Contact_info_telex,
        _Contact_info_owner_id,
        _Contact_info_password,
        _Contact_info_last_name,
        _Contact_info_first_name,
        _Contact_info_middle_initial,
        _Contact_info_contact,
        Contact_info,
    ]

class NCBI_TSeq:

    _name_  = 'NCBI-TSeq'
    _oid_   = []
    
    _obj_ = [
        'TSeq',
        'TSeqSet',
        ]
    _type_ = [
        'TSeq',
        'TSeqSet',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< TSeq >-----#
    TSeq = SEQ(name='TSeq', mode=MODE_TYPE)
    _TSeq_seqtype = ENUM(name='seqtype', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TSeq_seqtype._cont = ASN1Dict([('nucleotide', 1), ('protein', 2)])
    _TSeq_seqtype._ext = None
    _TSeq_gi = INT(name='gi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TSeq_accver = STR_VIS(name='accver', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TSeq_sid = STR_VIS(name='sid', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TSeq_local = STR_VIS(name='local', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TSeq_taxid = INT(name='taxid', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TSeq_orgname = STR_VIS(name='orgname', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TSeq_defline = STR_VIS(name='defline', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TSeq_length = INT(name='length', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TSeq_sequence = STR_VIS(name='sequence', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    TSeq._cont = ASN1Dict([
        ('seqtype', _TSeq_seqtype),
        ('gi', _TSeq_gi),
        ('accver', _TSeq_accver),
        ('sid', _TSeq_sid),
        ('local', _TSeq_local),
        ('taxid', _TSeq_taxid),
        ('orgname', _TSeq_orgname),
        ('defline', _TSeq_defline),
        ('length', _TSeq_length),
        ('sequence', _TSeq_sequence),
        ])
    TSeq._ext = None
    
    #-----< TSeqSet >-----#
    TSeqSet = SEQ_OF(name='TSeqSet', mode=MODE_TYPE)
    _TSeqSet__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NCBI-TSeq', 'TSeq')))
    TSeqSet._cont = _TSeqSet__item_
    
    _all_ = [
        _TSeq_seqtype,
        _TSeq_gi,
        _TSeq_accver,
        _TSeq_sid,
        _TSeq_local,
        _TSeq_taxid,
        _TSeq_orgname,
        _TSeq_defline,
        _TSeq_length,
        _TSeq_sequence,
        TSeq,
        _TSeqSet__item_,
        TSeqSet,
    ]

class _IMPL_:

    _name_ = '_IMPL_'
    _oid_  = []
    _obj_  = ['REAL', 'EXTERNAL', 'EMBEDDED PDV', 'CHARACTER STRING', 'TYPE-IDENTIFIER', 'ABSTRACT-SYNTAX']
    
    #-----< REAL >-----#
    REAL = SEQ(name='REAL', mode=MODE_TYPE)
    _REAL_mantissa = INT(name='mantissa', mode=MODE_TYPE)
    _REAL_base = INT(name='base', mode=MODE_TYPE)
    _REAL_base._const_val = ASN1Set(rv=[2, 10], rr=[], ev=None, er=[])
    _REAL_exponent = INT(name='exponent', mode=MODE_TYPE)
    REAL._cont = ASN1Dict([
        ('mantissa', _REAL_mantissa),
        ('base', _REAL_base),
        ('exponent', _REAL_exponent),
        ])
    REAL._ext = None
    
    #-----< EXTERNAL >-----#
    EXTERNAL = SEQ(name='EXTERNAL', mode=MODE_TYPE)
    _EXTERNAL_identification = CHOICE(name='identification', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EXTERNAL_identification_syntaxes = SEQ(name='syntaxes', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___EXTERNAL_identification_syntaxes_abstract = OID(name='abstract', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___EXTERNAL_identification_syntaxes_transfer = OID(name='transfer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EXTERNAL_identification_syntaxes._cont = ASN1Dict([
        ('abstract', ___EXTERNAL_identification_syntaxes_abstract),
        ('transfer', ___EXTERNAL_identification_syntaxes_transfer),
        ])
    __EXTERNAL_identification_syntaxes._ext = None
    __EXTERNAL_identification_syntax = OID(name='syntax', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EXTERNAL_identification_presentation_context_id = INT(name='presentation-context-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EXTERNAL_identification_context_negotiation = SEQ(name='context-negotiation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___EXTERNAL_identification_context_negotiation_presentation_context_id = INT(name='presentation-context-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___EXTERNAL_identification_context_negotiation_transfer_syntax = OID(name='transfer-syntax', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EXTERNAL_identification_context_negotiation._cont = ASN1Dict([
        ('presentation-context-id', ___EXTERNAL_identification_context_negotiation_presentation_context_id),
        ('transfer-syntax', ___EXTERNAL_identification_context_negotiation_transfer_syntax),
        ])
    __EXTERNAL_identification_context_negotiation._ext = None
    __EXTERNAL_identification_transfer_syntax = OID(name='transfer-syntax', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EXTERNAL_identification_fixed = NULL(name='fixed', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    _EXTERNAL_identification._cont = ASN1Dict([
        ('syntaxes', __EXTERNAL_identification_syntaxes),
        ('syntax', __EXTERNAL_identification_syntax),
        ('presentation-context-id', __EXTERNAL_identification_presentation_context_id),
        ('context-negotiation', __EXTERNAL_identification_context_negotiation),
        ('transfer-syntax', __EXTERNAL_identification_transfer_syntax),
        ('fixed', __EXTERNAL_identification_fixed),
        ])
    _EXTERNAL_identification._ext = None
    _EXTERNAL_data_value_descriptor = OBJ_DESC(name='data-value-descriptor', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    _EXTERNAL_data_value = OCT_STR(name='data-value', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    EXTERNAL._cont = ASN1Dict([
        ('identification', _EXTERNAL_identification),
        ('data-value-descriptor', _EXTERNAL_data_value_descriptor),
        ('data-value', _EXTERNAL_data_value),
        ])
    EXTERNAL._ext = None
    
    #-----< EMBEDDED PDV >-----#
    EMBEDDED_PDV = SEQ(name='EMBEDDED PDV', mode=MODE_TYPE)
    _EMBEDDED_PDV_identification = CHOICE(name='identification', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EMBEDDED_PDV_identification_syntaxes = SEQ(name='syntaxes', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___EMBEDDED_PDV_identification_syntaxes_abstract = OID(name='abstract', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___EMBEDDED_PDV_identification_syntaxes_transfer = OID(name='transfer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EMBEDDED_PDV_identification_syntaxes._cont = ASN1Dict([
        ('abstract', ___EMBEDDED_PDV_identification_syntaxes_abstract),
        ('transfer', ___EMBEDDED_PDV_identification_syntaxes_transfer),
        ])
    __EMBEDDED_PDV_identification_syntaxes._ext = None
    __EMBEDDED_PDV_identification_syntax = OID(name='syntax', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EMBEDDED_PDV_identification_presentation_context_id = INT(name='presentation-context-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EMBEDDED_PDV_identification_context_negotiation = SEQ(name='context-negotiation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___EMBEDDED_PDV_identification_context_negotiation_presentation_context_id = INT(name='presentation-context-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___EMBEDDED_PDV_identification_context_negotiation_transfer_syntax = OID(name='transfer-syntax', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EMBEDDED_PDV_identification_context_negotiation._cont = ASN1Dict([
        ('presentation-context-id', ___EMBEDDED_PDV_identification_context_negotiation_presentation_context_id),
        ('transfer-syntax', ___EMBEDDED_PDV_identification_context_negotiation_transfer_syntax),
        ])
    __EMBEDDED_PDV_identification_context_negotiation._ext = None
    __EMBEDDED_PDV_identification_transfer_syntax = OID(name='transfer-syntax', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EMBEDDED_PDV_identification_fixed = NULL(name='fixed', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    _EMBEDDED_PDV_identification._cont = ASN1Dict([
        ('syntaxes', __EMBEDDED_PDV_identification_syntaxes),
        ('syntax', __EMBEDDED_PDV_identification_syntax),
        ('presentation-context-id', __EMBEDDED_PDV_identification_presentation_context_id),
        ('context-negotiation', __EMBEDDED_PDV_identification_context_negotiation),
        ('transfer-syntax', __EMBEDDED_PDV_identification_transfer_syntax),
        ('fixed', __EMBEDDED_PDV_identification_fixed),
        ])
    _EMBEDDED_PDV_identification._ext = None
    _EMBEDDED_PDV_data_value_descriptor = OBJ_DESC(name='data-value-descriptor', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    _EMBEDDED_PDV_data_value = OCT_STR(name='data-value', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    EMBEDDED_PDV._cont = ASN1Dict([
        ('identification', _EMBEDDED_PDV_identification),
        ('data-value-descriptor', _EMBEDDED_PDV_data_value_descriptor),
        ('data-value', _EMBEDDED_PDV_data_value),
        ])
    EMBEDDED_PDV._ext = None
    
    #-----< CHARACTER STRING >-----#
    CHARACTER_STRING = SEQ(name='CHARACTER STRING', mode=MODE_TYPE)
    _CHARACTER_STRING_identification = CHOICE(name='identification', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CHARACTER_STRING_identification_syntaxes = SEQ(name='syntaxes', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___CHARACTER_STRING_identification_syntaxes_abstract = OID(name='abstract', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___CHARACTER_STRING_identification_syntaxes_transfer = OID(name='transfer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CHARACTER_STRING_identification_syntaxes._cont = ASN1Dict([
        ('abstract', ___CHARACTER_STRING_identification_syntaxes_abstract),
        ('transfer', ___CHARACTER_STRING_identification_syntaxes_transfer),
        ])
    __CHARACTER_STRING_identification_syntaxes._ext = None
    __CHARACTER_STRING_identification_syntax = OID(name='syntax', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CHARACTER_STRING_identification_presentation_context_id = INT(name='presentation-context-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CHARACTER_STRING_identification_context_negotiation = SEQ(name='context-negotiation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___CHARACTER_STRING_identification_context_negotiation_presentation_context_id = INT(name='presentation-context-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___CHARACTER_STRING_identification_context_negotiation_transfer_syntax = OID(name='transfer-syntax', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CHARACTER_STRING_identification_context_negotiation._cont = ASN1Dict([
        ('presentation-context-id', ___CHARACTER_STRING_identification_context_negotiation_presentation_context_id),
        ('transfer-syntax', ___CHARACTER_STRING_identification_context_negotiation_transfer_syntax),
        ])
    __CHARACTER_STRING_identification_context_negotiation._ext = None
    __CHARACTER_STRING_identification_transfer_syntax = OID(name='transfer-syntax', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CHARACTER_STRING_identification_fixed = NULL(name='fixed', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    _CHARACTER_STRING_identification._cont = ASN1Dict([
        ('syntaxes', __CHARACTER_STRING_identification_syntaxes),
        ('syntax', __CHARACTER_STRING_identification_syntax),
        ('presentation-context-id', __CHARACTER_STRING_identification_presentation_context_id),
        ('context-negotiation', __CHARACTER_STRING_identification_context_negotiation),
        ('transfer-syntax', __CHARACTER_STRING_identification_transfer_syntax),
        ('fixed', __CHARACTER_STRING_identification_fixed),
        ])
    _CHARACTER_STRING_identification._ext = None
    _CHARACTER_STRING_data_value_descriptor = OBJ_DESC(name='data-value-descriptor', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    _CHARACTER_STRING_string_value = OCT_STR(name='string-value', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    CHARACTER_STRING._cont = ASN1Dict([
        ('identification', _CHARACTER_STRING_identification),
        ('data-value-descriptor', _CHARACTER_STRING_data_value_descriptor),
        ('string-value', _CHARACTER_STRING_string_value),
        ])
    CHARACTER_STRING._ext = None
    
    #-----< TYPE-IDENTIFIER >-----#
    TYPE_IDENTIFIER = CLASS(name='TYPE-IDENTIFIER', mode=MODE_TYPE)
    _TYPE_IDENTIFIER_id = OID(name='id', mode=MODE_VALUE, uniq=True)
    _TYPE_IDENTIFIER_Type = OPEN(name='Type', mode=MODE_TYPE)
    TYPE_IDENTIFIER._cont = ASN1Dict([
        ('id', _TYPE_IDENTIFIER_id),
        ('Type', _TYPE_IDENTIFIER_Type),
        ])
    
    #-----< ABSTRACT-SYNTAX >-----#
    ABSTRACT_SYNTAX = CLASS(name='ABSTRACT-SYNTAX', mode=MODE_TYPE)
    _ABSTRACT_SYNTAX_id = OID(name='id', mode=MODE_VALUE)
    _ABSTRACT_SYNTAX_Type = OPEN(name='Type', mode=MODE_TYPE)
    _ABSTRACT_SYNTAX_property = BIT_STR(name='property', mode=MODE_VALUE, default=(0, 0))
    _ABSTRACT_SYNTAX_property._cont = ASN1Dict([('handles-invalid-encodings', 0)])
    ABSTRACT_SYNTAX._cont = ASN1Dict([
        ('id', _ABSTRACT_SYNTAX_id),
        ('Type', _ABSTRACT_SYNTAX_Type),
        ('property', _ABSTRACT_SYNTAX_property),
        ])
    
    _all_ = [
        _REAL_mantissa,
        _REAL_base,
        _REAL_exponent,
        REAL,
        ___EXTERNAL_identification_syntaxes_abstract,
        ___EXTERNAL_identification_syntaxes_transfer,
        __EXTERNAL_identification_syntaxes,
        __EXTERNAL_identification_syntax,
        __EXTERNAL_identification_presentation_context_id,
        ___EXTERNAL_identification_context_negotiation_presentation_context_id,
        ___EXTERNAL_identification_context_negotiation_transfer_syntax,
        __EXTERNAL_identification_context_negotiation,
        __EXTERNAL_identification_transfer_syntax,
        __EXTERNAL_identification_fixed,
        _EXTERNAL_identification,
        _EXTERNAL_data_value_descriptor,
        _EXTERNAL_data_value,
        EXTERNAL,
        ___EMBEDDED_PDV_identification_syntaxes_abstract,
        ___EMBEDDED_PDV_identification_syntaxes_transfer,
        __EMBEDDED_PDV_identification_syntaxes,
        __EMBEDDED_PDV_identification_syntax,
        __EMBEDDED_PDV_identification_presentation_context_id,
        ___EMBEDDED_PDV_identification_context_negotiation_presentation_context_id,
        ___EMBEDDED_PDV_identification_context_negotiation_transfer_syntax,
        __EMBEDDED_PDV_identification_context_negotiation,
        __EMBEDDED_PDV_identification_transfer_syntax,
        __EMBEDDED_PDV_identification_fixed,
        _EMBEDDED_PDV_identification,
        _EMBEDDED_PDV_data_value_descriptor,
        _EMBEDDED_PDV_data_value,
        EMBEDDED_PDV,
        ___CHARACTER_STRING_identification_syntaxes_abstract,
        ___CHARACTER_STRING_identification_syntaxes_transfer,
        __CHARACTER_STRING_identification_syntaxes,
        __CHARACTER_STRING_identification_syntax,
        __CHARACTER_STRING_identification_presentation_context_id,
        ___CHARACTER_STRING_identification_context_negotiation_presentation_context_id,
        ___CHARACTER_STRING_identification_context_negotiation_transfer_syntax,
        __CHARACTER_STRING_identification_context_negotiation,
        __CHARACTER_STRING_identification_transfer_syntax,
        __CHARACTER_STRING_identification_fixed,
        _CHARACTER_STRING_identification,
        _CHARACTER_STRING_data_value_descriptor,
        _CHARACTER_STRING_string_value,
        CHARACTER_STRING,
        _TYPE_IDENTIFIER_id,
        _TYPE_IDENTIFIER_Type,
        TYPE_IDENTIFIER,
        _ABSTRACT_SYNTAX_id,
        _ABSTRACT_SYNTAX_Type,
        _ABSTRACT_SYNTAX_property,
        ABSTRACT_SYNTAX,
    ]

init_modules(NCBI_Access, NCBI_Biblio, NCBI_BioTree, NCBI_Blast4, NCBI_BlastDL, NCBI_BlastOutput2, NCBI_BlastOutput, NCBI_Cdd, NCBI_Cn3d, Docsum_3_4, NCBI_Entrez2, NCBI_Entrezgene, NCBI_FeatDef, NCBI_GBSeq, NCBI_General, HomoloGene, NCBI_ID1Access, NCBI_ID2Access, INSD_INSDSeq, NCBI_Medlars, NCBI_Medline, NCBI_Mim, NCBI_MedArchive, MMDB, MMDB_Chemical_graph, MMDB_Structural_model, MMDB_Features, NCBI_Mime, NCBI_ObjPrt, OMSSA, NCBI_PCAssay, NCBI_PCSubstance, NCBI_Project, NCBI_Pub, NCBI_PubMed, NCBI_Remap, NCBI_ScoreMat, NCBI_Seqalign, NCBI_Sequence, EMBL_General, SP_General, PIR_General, GenBank_General, PRF_General, PDB_General, NCBI_SeqCode, NCBI_Seqfeat, NCBI_Variation, NCBI_Rsite, NCBI_RNA, NCBI_Gene, NCBI_Organism, NCBI_BioSource, NCBI_Protein, NCBI_TxInit, NCBI_Seqloc, NCBI_Seqres, NCBI_Seqset, NCBI_Seq_split, NCBI_SeqTable, NCBI_Submit, NCBI_TSeq, _IMPL_)
