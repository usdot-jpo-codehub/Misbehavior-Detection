# -*- coding: UTF-8 -*-
# Code automatically generated by pycrate_asn1c

from pycrate_asn1rt.utils            import *
from pycrate_asn1rt.err              import *
from pycrate_asn1rt.glob             import make_GLOBAL, GLOBAL
from pycrate_asn1rt.dictobj          import ASN1Dict
from pycrate_asn1rt.refobj           import *
from pycrate_asn1rt.setobj           import *
from pycrate_asn1rt.asnobj_basic     import *
from pycrate_asn1rt.asnobj_str       import *
from pycrate_asn1rt.asnobj_construct import *
from pycrate_asn1rt.asnobj_class     import *
from pycrate_asn1rt.asnobj_ext       import *
from pycrate_asn1rt.init             import init_modules

class CONF_HI3_IMS:

    _name_  = 'CONF-HI3-IMS'
    _oid_   = [0, 4, 0, 2, 2, 4, 11, 13, 0]
    
    _obj_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi3confDomainId',
        'Conf-CC-PDU',
        'ConfLIC-header',
        'MediaID',
        'TPDU-direction',
        ]
    _type_ = [
        'Conf-CC-PDU',
        'ConfLIC-header',
        'MediaID',
        'TPDU-direction',
        ]
    _set_ = [
        ]
    _val_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi3confDomainId',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< lawfulInterceptDomainId >-----#
    lawfulInterceptDomainId = OID(name='lawfulInterceptDomainId', mode=MODE_VALUE)
    lawfulInterceptDomainId._val = (0, 4, 0, 2, 2)
    
    #-----< threeGPPSUBDomainId >-----#
    threeGPPSUBDomainId = OID(name='threeGPPSUBDomainId', mode=MODE_VALUE)
    threeGPPSUBDomainId._val = (0, 4, 0, 2, 2, 4)
    
    #-----< hi3confDomainId >-----#
    hi3confDomainId = OID(name='hi3confDomainId', mode=MODE_VALUE)
    hi3confDomainId._val = (0, 4, 0, 2, 2, 4, 11, 13, 0)
    
    #-----< Conf-CC-PDU >-----#
    Conf_CC_PDU = SEQ(name='Conf-CC-PDU', mode=MODE_TYPE)
    _Conf_CC_PDU_confLIC_header = SEQ(name='confLIC-header', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONF-HI3-IMS', 'ConfLIC-header')))
    _Conf_CC_PDU_payload = OCT_STR(name='payload', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Conf_CC_PDU._cont = ASN1Dict([
        ('confLIC-header', _Conf_CC_PDU_confLIC_header),
        ('payload', _Conf_CC_PDU_payload),
        ])
    Conf_CC_PDU._ext = None
    
    #-----< ConfLIC-header >-----#
    ConfLIC_header = SEQ(name='ConfLIC-header', mode=MODE_TYPE)
    _ConfLIC_header_hi3DomainId = OID(name='hi3DomainId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ConfLIC_header_lIID = OCT_STR(name='lIID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')), opt=True)
    _ConfLIC_header_correlation = CHOICE(name='correlation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'ConfCorrelation')))
    _ConfLIC_header_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')), opt=True)
    _ConfLIC_header_sequence_number = INT(name='sequence-number', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ConfLIC_header_sequence_number._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _ConfLIC_header_t_PDU_direction = ENUM(name='t-PDU-direction', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONF-HI3-IMS', 'TPDU-direction')))
    _ConfLIC_header_national_HI3_ASN1parameters = SEQ(name='national-HI3-ASN1parameters', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Eps-HI3-PS', 'National-HI3-ASN1parameters')), opt=True)
    _ConfLIC_header_mediaID = SEQ(name='mediaID', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONF-HI3-IMS', 'MediaID')), opt=True)
    ConfLIC_header._cont = ASN1Dict([
        ('hi3DomainId', _ConfLIC_header_hi3DomainId),
        ('lIID', _ConfLIC_header_lIID),
        ('correlation', _ConfLIC_header_correlation),
        ('timeStamp', _ConfLIC_header_timeStamp),
        ('sequence-number', _ConfLIC_header_sequence_number),
        ('t-PDU-direction', _ConfLIC_header_t_PDU_direction),
        ('national-HI3-ASN1parameters', _ConfLIC_header_national_HI3_ASN1parameters),
        ('mediaID', _ConfLIC_header_mediaID),
        ])
    ConfLIC_header._ext = []
    
    #-----< MediaID >-----#
    MediaID = SEQ(name='MediaID', mode=MODE_TYPE)
    _MediaID_sourceUserID = SEQ(name='sourceUserID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'ConfPartyInformation')), opt=True)
    _MediaID_streamID = OCT_STR(name='streamID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    MediaID._cont = ASN1Dict([
        ('sourceUserID', _MediaID_sourceUserID),
        ('streamID', _MediaID_streamID),
        ])
    MediaID._ext = []
    
    #-----< TPDU-direction >-----#
    TPDU_direction = ENUM(name='TPDU-direction', mode=MODE_TYPE)
    TPDU_direction._cont = ASN1Dict([('from-target', 1), ('to-target', 2), ('unknown', 3), ('conftarget', 4), ('from-mixer', 5), ('to-mixer', 6), ('combined', 7)])
    TPDU_direction._ext = None
    
    _all_ = [
        lawfulInterceptDomainId,
        threeGPPSUBDomainId,
        hi3confDomainId,
        _Conf_CC_PDU_confLIC_header,
        _Conf_CC_PDU_payload,
        Conf_CC_PDU,
        _ConfLIC_header_hi3DomainId,
        _ConfLIC_header_lIID,
        _ConfLIC_header_correlation,
        _ConfLIC_header_timeStamp,
        _ConfLIC_header_sequence_number,
        _ConfLIC_header_t_PDU_direction,
        _ConfLIC_header_national_HI3_ASN1parameters,
        _ConfLIC_header_mediaID,
        ConfLIC_header,
        _MediaID_sourceUserID,
        _MediaID_streamID,
        MediaID,
        TPDU_direction,
    ]

class CONFHI2Operations:

    _name_  = 'CONFHI2Operations'
    _oid_   = [0, 4, 0, 2, 2, 4, 10, 16, 0]
    
    _obj_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi2confDomainId',
        'ConfIRIsContent',
        'ConfIRISequence',
        'ConfIRIContent',
        'IRI-Parameters',
        'ConfEvent',
        'ConfPartyInformation',
        'ConfCorrelation',
        'PartyIdentity',
        'IMSIdentity',
        'SupportedMedia',
        'MediaModification',
        'ConfEventFailureReason',
        'ConfEventInitiator',
        'RecurrenceInfo',
        'Reason',
        ]
    _type_ = [
        'ConfIRIsContent',
        'ConfIRISequence',
        'ConfIRIContent',
        'IRI-Parameters',
        'ConfEvent',
        'ConfPartyInformation',
        'ConfCorrelation',
        'PartyIdentity',
        'IMSIdentity',
        'SupportedMedia',
        'MediaModification',
        'ConfEventFailureReason',
        'ConfEventInitiator',
        'RecurrenceInfo',
        'Reason',
        ]
    _set_ = [
        ]
    _val_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi2confDomainId',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< lawfulInterceptDomainId >-----#
    lawfulInterceptDomainId = OID(name='lawfulInterceptDomainId', mode=MODE_VALUE)
    lawfulInterceptDomainId._val = (0, 4, 0, 2, 2)
    
    #-----< threeGPPSUBDomainId >-----#
    threeGPPSUBDomainId = OID(name='threeGPPSUBDomainId', mode=MODE_VALUE)
    threeGPPSUBDomainId._val = (0, 4, 0, 2, 2, 4)
    
    #-----< hi2confDomainId >-----#
    hi2confDomainId = OID(name='hi2confDomainId', mode=MODE_VALUE)
    hi2confDomainId._val = (0, 4, 0, 2, 2, 4, 10, 16, 0)
    
    #-----< ConfIRIsContent >-----#
    ConfIRIsContent = CHOICE(name='ConfIRIsContent', mode=MODE_TYPE)
    _ConfIRIsContent_confiRIContent = CHOICE(name='confiRIContent', mode=MODE_TYPE, typeref=ASN1RefType(('CONFHI2Operations', 'ConfIRIContent')))
    _ConfIRIsContent_confIRISequence = SEQ_OF(name='confIRISequence', mode=MODE_TYPE, typeref=ASN1RefType(('CONFHI2Operations', 'ConfIRISequence')))
    ConfIRIsContent._cont = ASN1Dict([
        ('confiRIContent', _ConfIRIsContent_confiRIContent),
        ('confIRISequence', _ConfIRIsContent_confIRISequence),
        ])
    ConfIRIsContent._ext = None
    
    #-----< ConfIRISequence >-----#
    ConfIRISequence = SEQ_OF(name='ConfIRISequence', mode=MODE_TYPE)
    _ConfIRISequence__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('CONFHI2Operations', 'ConfIRIContent')))
    ConfIRISequence._cont = _ConfIRISequence__item_
    
    #-----< ConfIRIContent >-----#
    ConfIRIContent = CHOICE(name='ConfIRIContent', mode=MODE_TYPE)
    _ConfIRIContent_iRI_Begin_record = SEQ(name='iRI-Begin-record', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'IRI-Parameters')))
    _ConfIRIContent_iRI_End_record = SEQ(name='iRI-End-record', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'IRI-Parameters')))
    _ConfIRIContent_iRI_Continue_record = SEQ(name='iRI-Continue-record', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'IRI-Parameters')))
    _ConfIRIContent_iRI_Report_record = SEQ(name='iRI-Report-record', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'IRI-Parameters')))
    ConfIRIContent._cont = ASN1Dict([
        ('iRI-Begin-record', _ConfIRIContent_iRI_Begin_record),
        ('iRI-End-record', _ConfIRIContent_iRI_End_record),
        ('iRI-Continue-record', _ConfIRIContent_iRI_Continue_record),
        ('iRI-Report-record', _ConfIRIContent_iRI_Report_record),
        ])
    ConfIRIContent._ext = []
    
    #-----< IRI-Parameters >-----#
    IRI_Parameters = SEQ(name='IRI-Parameters', mode=MODE_TYPE)
    _IRI_Parameters_hi2confDomainId = OID(name='hi2confDomainId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IRI_Parameters_lawfulInterceptionIdentifier = OCT_STR(name='lawfulInterceptionIdentifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')))
    _IRI_Parameters_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _IRI_Parameters_partyInformation = SET_OF(name='partyInformation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_partyInformation__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('CONFHI2Operations', 'PartyIdentity')))
    _IRI_Parameters_partyInformation._cont = __IRI_Parameters_partyInformation__item_
    _IRI_Parameters_partyInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    _IRI_Parameters_national_Parameters = SET_OF(name='national-Parameters', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'National-Parameters')), opt=True)
    _IRI_Parameters_networkIdentifier = SEQ(name='networkIdentifier', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Network-Identifier')), opt=True)
    _IRI_Parameters_confEvent = ENUM(name='confEvent', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'ConfEvent')))
    _IRI_Parameters_correlation = CHOICE(name='correlation', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'ConfCorrelation')), opt=True)
    _IRI_Parameters_confID = SEQ(name='confID', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'IMSIdentity')), opt=True)
    _IRI_Parameters_tempConfID = SEQ(name='tempConfID', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'IMSIdentity')), opt=True)
    _IRI_Parameters_listOfPotConferees = SET_OF(name='listOfPotConferees', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_listOfPotConferees__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('CONFHI2Operations', 'PartyIdentity')))
    _IRI_Parameters_listOfPotConferees._cont = __IRI_Parameters_listOfPotConferees__item_
    _IRI_Parameters_listOfConferees = SET_OF(name='listOfConferees', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_listOfConferees__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('CONFHI2Operations', 'ConfPartyInformation')))
    _IRI_Parameters_listOfConferees._cont = __IRI_Parameters_listOfConferees__item_
    _IRI_Parameters_joinPartyID = SEQ(name='joinPartyID', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'ConfPartyInformation')), opt=True)
    _IRI_Parameters_leavePartyID = SEQ(name='leavePartyID', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'ConfPartyInformation')), opt=True)
    _IRI_Parameters_listOfBearerAffectedParties = SET_OF(name='listOfBearerAffectedParties', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_listOfBearerAffectedParties__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('CONFHI2Operations', 'ConfPartyInformation')))
    _IRI_Parameters_listOfBearerAffectedParties._cont = __IRI_Parameters_listOfBearerAffectedParties__item_
    _IRI_Parameters_confEventInitiator = CHOICE(name='confEventInitiator', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'ConfEventInitiator')), opt=True)
    _IRI_Parameters_confEventFailureReason = CHOICE(name='confEventFailureReason', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'ConfEventFailureReason')), opt=True)
    _IRI_Parameters_confEndReason = OCT_STR(name='confEndReason', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'Reason')), opt=True)
    _IRI_Parameters_potConfStartInfo = CHOICE(name='potConfStartInfo', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')), opt=True)
    _IRI_Parameters_potConfEndInfo = CHOICE(name='potConfEndInfo', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')), opt=True)
    _IRI_Parameters_recurrenceInfo = SEQ(name='recurrenceInfo', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'RecurrenceInfo')), opt=True)
    _IRI_Parameters_confControllerIDs = SET_OF(name='confControllerIDs', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_confControllerIDs__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('CONFHI2Operations', 'PartyIdentity')))
    _IRI_Parameters_confControllerIDs._cont = __IRI_Parameters_confControllerIDs__item_
    _IRI_Parameters_mediamodification = ENUM(name='mediamodification', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'MediaModification')), opt=True)
    _IRI_Parameters_bearerModifyPartyID = SEQ(name='bearerModifyPartyID', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'ConfPartyInformation')), opt=True)
    _IRI_Parameters_listOfWaitConferees = SET_OF(name='listOfWaitConferees', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_listOfWaitConferees__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('CONFHI2Operations', 'ConfPartyInformation')))
    _IRI_Parameters_listOfWaitConferees._cont = __IRI_Parameters_listOfWaitConferees__item_
    IRI_Parameters._cont = ASN1Dict([
        ('hi2confDomainId', _IRI_Parameters_hi2confDomainId),
        ('lawfulInterceptionIdentifier', _IRI_Parameters_lawfulInterceptionIdentifier),
        ('timeStamp', _IRI_Parameters_timeStamp),
        ('partyInformation', _IRI_Parameters_partyInformation),
        ('national-Parameters', _IRI_Parameters_national_Parameters),
        ('networkIdentifier', _IRI_Parameters_networkIdentifier),
        ('confEvent', _IRI_Parameters_confEvent),
        ('correlation', _IRI_Parameters_correlation),
        ('confID', _IRI_Parameters_confID),
        ('tempConfID', _IRI_Parameters_tempConfID),
        ('listOfPotConferees', _IRI_Parameters_listOfPotConferees),
        ('listOfConferees', _IRI_Parameters_listOfConferees),
        ('joinPartyID', _IRI_Parameters_joinPartyID),
        ('leavePartyID', _IRI_Parameters_leavePartyID),
        ('listOfBearerAffectedParties', _IRI_Parameters_listOfBearerAffectedParties),
        ('confEventInitiator', _IRI_Parameters_confEventInitiator),
        ('confEventFailureReason', _IRI_Parameters_confEventFailureReason),
        ('confEndReason', _IRI_Parameters_confEndReason),
        ('potConfStartInfo', _IRI_Parameters_potConfStartInfo),
        ('potConfEndInfo', _IRI_Parameters_potConfEndInfo),
        ('recurrenceInfo', _IRI_Parameters_recurrenceInfo),
        ('confControllerIDs', _IRI_Parameters_confControllerIDs),
        ('mediamodification', _IRI_Parameters_mediamodification),
        ('bearerModifyPartyID', _IRI_Parameters_bearerModifyPartyID),
        ('listOfWaitConferees', _IRI_Parameters_listOfWaitConferees),
        ])
    IRI_Parameters._ext = []
    
    #-----< ConfEvent >-----#
    ConfEvent = ENUM(name='ConfEvent', mode=MODE_TYPE)
    ConfEvent._cont = ASN1Dict([('confStartSuccessfull', 1), ('confStartUnsuccessfull', 2), ('startOfInterceptionConferenceActive', 3), ('confPartyJoinSuccessfull', 4), ('confPartyJoinUnsuccessfull', 5), ('confPartyLeaveSuccessfull', 6), ('confPartyLeaveUnsuccessfull', 7), ('confPartyBearerModifySuccessfull', 8), ('confPartyBearerModifyUnsuccessfull', 9), ('confEndSuccessfull', 10), ('confEndUnsuccessfull', 11), ('confServCreation', 12), ('confServUpdate', 13)])
    ConfEvent._ext = []
    
    #-----< ConfPartyInformation >-----#
    ConfPartyInformation = SEQ(name='ConfPartyInformation', mode=MODE_TYPE)
    _ConfPartyInformation_partyIdentity = SEQ(name='partyIdentity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'PartyIdentity')), opt=True)
    _ConfPartyInformation_supportedmedia = SEQ(name='supportedmedia', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'SupportedMedia')), opt=True)
    ConfPartyInformation._cont = ASN1Dict([
        ('partyIdentity', _ConfPartyInformation_partyIdentity),
        ('supportedmedia', _ConfPartyInformation_supportedmedia),
        ])
    ConfPartyInformation._ext = []
    
    #-----< ConfCorrelation >-----#
    ConfCorrelation = CHOICE(name='ConfCorrelation', mode=MODE_TYPE)
    _ConfCorrelation_correlationValues = CHOICE(name='correlationValues', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'CorrelationValues')))
    _ConfCorrelation_correlationNumber = OCT_STR(name='correlationNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ConfCorrelation_imsVoIP = SET_OF(name='imsVoIP', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'IMS-VoIP-Correlation')))
    ConfCorrelation._cont = ASN1Dict([
        ('correlationValues', _ConfCorrelation_correlationValues),
        ('correlationNumber', _ConfCorrelation_correlationNumber),
        ('imsVoIP', _ConfCorrelation_imsVoIP),
        ])
    ConfCorrelation._ext = []
    
    #-----< PartyIdentity >-----#
    PartyIdentity = SEQ(name='PartyIdentity', mode=MODE_TYPE)
    _PartyIdentity_iMPU = SET_OF(name='iMPU', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyIdentity_iMPU__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('CONFHI2Operations', 'IMSIdentity')))
    _PartyIdentity_iMPU._cont = __PartyIdentity_iMPU__item_
    _PartyIdentity_iMPI = SET_OF(name='iMPI', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyIdentity_iMPI__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('CONFHI2Operations', 'IMSIdentity')))
    _PartyIdentity_iMPI._cont = __PartyIdentity_iMPI__item_
    PartyIdentity._cont = ASN1Dict([
        ('iMPU', _PartyIdentity_iMPU),
        ('iMPI', _PartyIdentity_iMPI),
        ])
    PartyIdentity._ext = []
    
    #-----< IMSIdentity >-----#
    IMSIdentity = SEQ(name='IMSIdentity', mode=MODE_TYPE)
    _IMSIdentity_sip_uri = OCT_STR(name='sip-uri', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IMSIdentity_tel_uri = OCT_STR(name='tel-uri', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    IMSIdentity._cont = ASN1Dict([
        ('sip-uri', _IMSIdentity_sip_uri),
        ('tel-uri', _IMSIdentity_tel_uri),
        ])
    IMSIdentity._ext = []
    
    #-----< SupportedMedia >-----#
    SupportedMedia = SEQ(name='SupportedMedia', mode=MODE_TYPE)
    _SupportedMedia_confServerSideSDP = OCT_STR(name='confServerSideSDP', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SupportedMedia_confUserSideSDP = OCT_STR(name='confUserSideSDP', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SupportedMedia._cont = ASN1Dict([
        ('confServerSideSDP', _SupportedMedia_confServerSideSDP),
        ('confUserSideSDP', _SupportedMedia_confUserSideSDP),
        ])
    SupportedMedia._ext = []
    
    #-----< MediaModification >-----#
    MediaModification = ENUM(name='MediaModification', mode=MODE_TYPE)
    MediaModification._cont = ASN1Dict([('add', 1), ('remove', 2), ('change', 3), ('unknown', 4)])
    MediaModification._ext = []
    
    #-----< ConfEventFailureReason >-----#
    ConfEventFailureReason = CHOICE(name='ConfEventFailureReason', mode=MODE_TYPE)
    _ConfEventFailureReason_failedConfStartReason = OCT_STR(name='failedConfStartReason', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'Reason')))
    _ConfEventFailureReason_failedPartyJoinReason = OCT_STR(name='failedPartyJoinReason', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'Reason')))
    _ConfEventFailureReason_failedPartyLeaveReason = OCT_STR(name='failedPartyLeaveReason', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'Reason')))
    _ConfEventFailureReason_failedBearerModifyReason = OCT_STR(name='failedBearerModifyReason', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'Reason')))
    _ConfEventFailureReason_failedConfEndReason = OCT_STR(name='failedConfEndReason', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'Reason')))
    ConfEventFailureReason._cont = ASN1Dict([
        ('failedConfStartReason', _ConfEventFailureReason_failedConfStartReason),
        ('failedPartyJoinReason', _ConfEventFailureReason_failedPartyJoinReason),
        ('failedPartyLeaveReason', _ConfEventFailureReason_failedPartyLeaveReason),
        ('failedBearerModifyReason', _ConfEventFailureReason_failedBearerModifyReason),
        ('failedConfEndReason', _ConfEventFailureReason_failedConfEndReason),
        ])
    ConfEventFailureReason._ext = []
    
    #-----< ConfEventInitiator >-----#
    ConfEventInitiator = CHOICE(name='ConfEventInitiator', mode=MODE_TYPE)
    _ConfEventInitiator_confServer = NULL(name='confServer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ConfEventInitiator_confTargetID = SEQ(name='confTargetID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'PartyIdentity')))
    _ConfEventInitiator_confPartyID = SEQ(name='confPartyID', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CONFHI2Operations', 'PartyIdentity')))
    ConfEventInitiator._cont = ASN1Dict([
        ('confServer', _ConfEventInitiator_confServer),
        ('confTargetID', _ConfEventInitiator_confTargetID),
        ('confPartyID', _ConfEventInitiator_confPartyID),
        ])
    ConfEventInitiator._ext = []
    
    #-----< RecurrenceInfo >-----#
    RecurrenceInfo = SEQ(name='RecurrenceInfo', mode=MODE_TYPE)
    _RecurrenceInfo_recurrenceStartDateAndTime = CHOICE(name='recurrenceStartDateAndTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')), opt=True)
    _RecurrenceInfo_recurrenceEndDateAndTime = CHOICE(name='recurrenceEndDateAndTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')), opt=True)
    _RecurrenceInfo_recurrencePattern = STR_UTF8(name='recurrencePattern', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    RecurrenceInfo._cont = ASN1Dict([
        ('recurrenceStartDateAndTime', _RecurrenceInfo_recurrenceStartDateAndTime),
        ('recurrenceEndDateAndTime', _RecurrenceInfo_recurrenceEndDateAndTime),
        ('recurrencePattern', _RecurrenceInfo_recurrencePattern),
        ])
    RecurrenceInfo._ext = []
    
    #-----< Reason >-----#
    Reason = OCT_STR(name='Reason', mode=MODE_TYPE)
    
    _all_ = [
        lawfulInterceptDomainId,
        threeGPPSUBDomainId,
        hi2confDomainId,
        _ConfIRIsContent_confiRIContent,
        _ConfIRIsContent_confIRISequence,
        ConfIRIsContent,
        _ConfIRISequence__item_,
        ConfIRISequence,
        _ConfIRIContent_iRI_Begin_record,
        _ConfIRIContent_iRI_End_record,
        _ConfIRIContent_iRI_Continue_record,
        _ConfIRIContent_iRI_Report_record,
        ConfIRIContent,
        _IRI_Parameters_hi2confDomainId,
        _IRI_Parameters_lawfulInterceptionIdentifier,
        _IRI_Parameters_timeStamp,
        __IRI_Parameters_partyInformation__item_,
        _IRI_Parameters_partyInformation,
        _IRI_Parameters_national_Parameters,
        _IRI_Parameters_networkIdentifier,
        _IRI_Parameters_confEvent,
        _IRI_Parameters_correlation,
        _IRI_Parameters_confID,
        _IRI_Parameters_tempConfID,
        __IRI_Parameters_listOfPotConferees__item_,
        _IRI_Parameters_listOfPotConferees,
        __IRI_Parameters_listOfConferees__item_,
        _IRI_Parameters_listOfConferees,
        _IRI_Parameters_joinPartyID,
        _IRI_Parameters_leavePartyID,
        __IRI_Parameters_listOfBearerAffectedParties__item_,
        _IRI_Parameters_listOfBearerAffectedParties,
        _IRI_Parameters_confEventInitiator,
        _IRI_Parameters_confEventFailureReason,
        _IRI_Parameters_confEndReason,
        _IRI_Parameters_potConfStartInfo,
        _IRI_Parameters_potConfEndInfo,
        _IRI_Parameters_recurrenceInfo,
        __IRI_Parameters_confControllerIDs__item_,
        _IRI_Parameters_confControllerIDs,
        _IRI_Parameters_mediamodification,
        _IRI_Parameters_bearerModifyPartyID,
        __IRI_Parameters_listOfWaitConferees__item_,
        _IRI_Parameters_listOfWaitConferees,
        IRI_Parameters,
        ConfEvent,
        _ConfPartyInformation_partyIdentity,
        _ConfPartyInformation_supportedmedia,
        ConfPartyInformation,
        _ConfCorrelation_correlationValues,
        _ConfCorrelation_correlationNumber,
        _ConfCorrelation_imsVoIP,
        ConfCorrelation,
        __PartyIdentity_iMPU__item_,
        _PartyIdentity_iMPU,
        __PartyIdentity_iMPI__item_,
        _PartyIdentity_iMPI,
        PartyIdentity,
        _IMSIdentity_sip_uri,
        _IMSIdentity_tel_uri,
        IMSIdentity,
        _SupportedMedia_confServerSideSDP,
        _SupportedMedia_confUserSideSDP,
        SupportedMedia,
        MediaModification,
        _ConfEventFailureReason_failedConfStartReason,
        _ConfEventFailureReason_failedPartyJoinReason,
        _ConfEventFailureReason_failedPartyLeaveReason,
        _ConfEventFailureReason_failedBearerModifyReason,
        _ConfEventFailureReason_failedConfEndReason,
        ConfEventFailureReason,
        _ConfEventInitiator_confServer,
        _ConfEventInitiator_confTargetID,
        _ConfEventInitiator_confPartyID,
        ConfEventInitiator,
        _RecurrenceInfo_recurrenceStartDateAndTime,
        _RecurrenceInfo_recurrenceEndDateAndTime,
        _RecurrenceInfo_recurrencePattern,
        RecurrenceInfo,
        Reason,
    ]

class CSvoice_HI3_IP:

    _name_  = 'CSvoice-HI3-IP'
    _oid_   = [0, 4, 0, 2, 2, 4, 18, 14, 0]
    
    _obj_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi3CSvoiceDomainId',
        'CSvoice-CC-PDU',
        'CSvoiceLIC-header',
        ]
    _type_ = [
        'CSvoice-CC-PDU',
        'CSvoiceLIC-header',
        ]
    _set_ = [
        ]
    _val_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi3CSvoiceDomainId',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< lawfulInterceptDomainId >-----#
    lawfulInterceptDomainId = OID(name='lawfulInterceptDomainId', mode=MODE_VALUE)
    lawfulInterceptDomainId._val = (0, 4, 0, 2, 2)
    
    #-----< threeGPPSUBDomainId >-----#
    threeGPPSUBDomainId = OID(name='threeGPPSUBDomainId', mode=MODE_VALUE)
    threeGPPSUBDomainId._val = (0, 4, 0, 2, 2, 4)
    
    #-----< hi3CSvoiceDomainId >-----#
    hi3CSvoiceDomainId = OID(name='hi3CSvoiceDomainId', mode=MODE_VALUE)
    hi3CSvoiceDomainId._val = (0, 4, 0, 2, 2, 4, 18, 14, 0)
    
    #-----< CSvoice-CC-PDU >-----#
    CSvoice_CC_PDU = SEQ(name='CSvoice-CC-PDU', mode=MODE_TYPE)
    _CSvoice_CC_PDU_cSvoiceLIC_header = SEQ(name='cSvoiceLIC-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CSvoice-HI3-IP', 'CSvoiceLIC-header')))
    _CSvoice_CC_PDU_payload = OCT_STR(name='payload', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    CSvoice_CC_PDU._cont = ASN1Dict([
        ('cSvoiceLIC-header', _CSvoice_CC_PDU_cSvoiceLIC_header),
        ('payload', _CSvoice_CC_PDU_payload),
        ])
    CSvoice_CC_PDU._ext = []
    
    #-----< CSvoiceLIC-header >-----#
    CSvoiceLIC_header = SEQ(name='CSvoiceLIC-header', mode=MODE_TYPE)
    _CSvoiceLIC_header_hi3CSvoiceDomainId = OID(name='hi3CSvoiceDomainId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSvoiceLIC_header_lIID = OCT_STR(name='lIID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')), opt=True)
    _CSvoiceLIC_header_communicationIdentifier = SEQ(name='communicationIdentifier', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CommunicationIdentifier')))
    _CSvoiceLIC_header_ccLID = OCT_STR(name='ccLID', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CC-Link-Identifier')), opt=True)
    _CSvoiceLIC_header_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')), opt=True)
    _CSvoiceLIC_header_sequence_number = INT(name='sequence-number', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSvoiceLIC_header_sequence_number._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _CSvoiceLIC_header_t_PDU_direction = ENUM(name='t-PDU-direction', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('VoIP-HI3-IMS', 'TPDU-direction')))
    _CSvoiceLIC_header_national_HI3_ASN1parameters = SEQ(name='national-HI3-ASN1parameters', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Eps-HI3-PS', 'National-HI3-ASN1parameters')), opt=True)
    _CSvoiceLIC_header_payload_description = SEQ(name='payload-description', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('VoIP-HI3-IMS', 'Payload-description')))
    CSvoiceLIC_header._cont = ASN1Dict([
        ('hi3CSvoiceDomainId', _CSvoiceLIC_header_hi3CSvoiceDomainId),
        ('lIID', _CSvoiceLIC_header_lIID),
        ('communicationIdentifier', _CSvoiceLIC_header_communicationIdentifier),
        ('ccLID', _CSvoiceLIC_header_ccLID),
        ('timeStamp', _CSvoiceLIC_header_timeStamp),
        ('sequence-number', _CSvoiceLIC_header_sequence_number),
        ('t-PDU-direction', _CSvoiceLIC_header_t_PDU_direction),
        ('national-HI3-ASN1parameters', _CSvoiceLIC_header_national_HI3_ASN1parameters),
        ('payload-description', _CSvoiceLIC_header_payload_description),
        ])
    CSvoiceLIC_header._ext = []
    
    _all_ = [
        lawfulInterceptDomainId,
        threeGPPSUBDomainId,
        hi3CSvoiceDomainId,
        _CSvoice_CC_PDU_cSvoiceLIC_header,
        _CSvoice_CC_PDU_payload,
        CSvoice_CC_PDU,
        _CSvoiceLIC_header_hi3CSvoiceDomainId,
        _CSvoiceLIC_header_lIID,
        _CSvoiceLIC_header_communicationIdentifier,
        _CSvoiceLIC_header_ccLID,
        _CSvoiceLIC_header_timeStamp,
        _CSvoiceLIC_header_sequence_number,
        _CSvoiceLIC_header_t_PDU_direction,
        _CSvoiceLIC_header_national_HI3_ASN1parameters,
        _CSvoiceLIC_header_payload_description,
        CSvoiceLIC_header,
    ]

class EN301040:

    _name_  = 'EN301040'
    _oid_   = [0, 4, 0, 1040, 0]
    
    _obj_ = [
        'LIACTIVATEreq',
        'LIACTIVATEconf',
        'LIMODIFYreq',
        'LIMODIFYconf',
        'LISTATUSind',
        'TARGETACTIVITYMONITORind',
        'TARGETCOMMSMONITORind',
        'TTRAFFICind',
        'CTTRAFFICind',
        'ActivityClassType',
        'ActivityType',
        'AddressType',
        'TETRAAddressType',
        'CellIdType',
        'LocationAreaType',
        'LocationType',
        'MCCType',
        'MNCType',
        'SSIType',
        'CircuitIdType',
        'SSType',
        'StatusType',
        'TETRACGIType',
        'TLIIdType',
        'TSIType',
        'TEIType',
        ]
    _type_ = [
        'LIACTIVATEreq',
        'LIACTIVATEconf',
        'LIMODIFYreq',
        'LIMODIFYconf',
        'LISTATUSind',
        'TARGETACTIVITYMONITORind',
        'TARGETCOMMSMONITORind',
        'TTRAFFICind',
        'CTTRAFFICind',
        'ActivityClassType',
        'ActivityType',
        'AddressType',
        'TETRAAddressType',
        'CellIdType',
        'LocationAreaType',
        'LocationType',
        'MCCType',
        'MNCType',
        'SSIType',
        'CircuitIdType',
        'SSType',
        'StatusType',
        'TETRACGIType',
        'TLIIdType',
        'TSIType',
        'TEIType',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< LIACTIVATEreq >-----#
    LIACTIVATEreq = SEQ(name='LIACTIVATEreq', mode=MODE_TYPE)
    _LIACTIVATEreq_timeStamp = TIME_UTC(name='timeStamp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LIACTIVATEreq_invokeId = INT(name='invokeId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LIACTIVATEreq_targetAddress = SEQ(name='targetAddress', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'AddressType')))
    _LIACTIVATEreq_expiryDateTime = TIME_UTC(name='expiryDateTime', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LIACTIVATEreq_targetname = STR_VIS(name='targetname', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LIACTIVATEreq_additionaltargetdata = STR_VIS(name='additionaltargetdata', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LIACTIVATEreq_monitorServiceList = SEQ_OF(name='monitorServiceList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __LIACTIVATEreq_monitorServiceList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EN301040', 'ActivityType')))
    _LIACTIVATEreq_monitorServiceList._cont = __LIACTIVATEreq_monitorServiceList__item_
    LIACTIVATEreq._cont = ASN1Dict([
        ('timeStamp', _LIACTIVATEreq_timeStamp),
        ('invokeId', _LIACTIVATEreq_invokeId),
        ('targetAddress', _LIACTIVATEreq_targetAddress),
        ('expiryDateTime', _LIACTIVATEreq_expiryDateTime),
        ('targetname', _LIACTIVATEreq_targetname),
        ('additionaltargetdata', _LIACTIVATEreq_additionaltargetdata),
        ('monitorServiceList', _LIACTIVATEreq_monitorServiceList),
        ])
    LIACTIVATEreq._ext = None
    
    #-----< LIACTIVATEconf >-----#
    LIACTIVATEconf = SEQ(name='LIACTIVATEconf', mode=MODE_TYPE)
    _LIACTIVATEconf_timeStamp = TIME_UTC(name='timeStamp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LIACTIVATEconf_invokeId = INT(name='invokeId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LIACTIVATEconf_result = BOOL(name='result', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LIACTIVATEconf_tLIInstanceid = BIT_STR(name='tLIInstanceid', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'TLIIdType')), opt=True)
    LIACTIVATEconf._cont = ASN1Dict([
        ('timeStamp', _LIACTIVATEconf_timeStamp),
        ('invokeId', _LIACTIVATEconf_invokeId),
        ('result', _LIACTIVATEconf_result),
        ('tLIInstanceid', _LIACTIVATEconf_tLIInstanceid),
        ])
    LIACTIVATEconf._ext = None
    
    #-----< LIMODIFYreq >-----#
    LIMODIFYreq = SEQ(name='LIMODIFYreq', mode=MODE_TYPE)
    _LIMODIFYreq_tLIInstanceid = BIT_STR(name='tLIInstanceid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'TLIIdType')))
    _LIMODIFYreq_timestamp = TIME_UTC(name='timestamp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LIMODIFYreq_modificationNumber = INT(name='modificationNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LIMODIFYreq_modificationType = CHOICE(name='modificationType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __LIMODIFYreq_modificationType_halt = BOOL(name='halt', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __LIMODIFYreq_modificationType_reset = BOOL(name='reset', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __LIMODIFYreq_modificationType_expiryDateTime = TIME_UTC(name='expiryDateTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __LIMODIFYreq_modificationType_targetname = STR_VIS(name='targetname', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __LIMODIFYreq_modificationType_additionaltargetdata = STR_VIS(name='additionaltargetdata', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __LIMODIFYreq_modificationType_monitorServiceList = SEQ_OF(name='monitorServiceList', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___LIMODIFYreq_modificationType_monitorServiceList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EN301040', 'ActivityType')))
    __LIMODIFYreq_modificationType_monitorServiceList._cont = ___LIMODIFYreq_modificationType_monitorServiceList__item_
    _LIMODIFYreq_modificationType._cont = ASN1Dict([
        ('halt', __LIMODIFYreq_modificationType_halt),
        ('reset', __LIMODIFYreq_modificationType_reset),
        ('expiryDateTime', __LIMODIFYreq_modificationType_expiryDateTime),
        ('targetname', __LIMODIFYreq_modificationType_targetname),
        ('additionaltargetdata', __LIMODIFYreq_modificationType_additionaltargetdata),
        ('monitorServiceList', __LIMODIFYreq_modificationType_monitorServiceList),
        ])
    _LIMODIFYreq_modificationType._ext = None
    LIMODIFYreq._cont = ASN1Dict([
        ('tLIInstanceid', _LIMODIFYreq_tLIInstanceid),
        ('timestamp', _LIMODIFYreq_timestamp),
        ('modificationNumber', _LIMODIFYreq_modificationNumber),
        ('modificationType', _LIMODIFYreq_modificationType),
        ])
    LIMODIFYreq._ext = None
    
    #-----< LIMODIFYconf >-----#
    LIMODIFYconf = SEQ(name='LIMODIFYconf', mode=MODE_TYPE)
    _LIMODIFYconf_tLIInstanceid = BIT_STR(name='tLIInstanceid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'TLIIdType')))
    _LIMODIFYconf_timestamp = TIME_UTC(name='timestamp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LIMODIFYconf_modificationNumber = INT(name='modificationNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LIMODIFYconf_result = BOOL(name='result', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    LIMODIFYconf._cont = ASN1Dict([
        ('tLIInstanceid', _LIMODIFYconf_tLIInstanceid),
        ('timestamp', _LIMODIFYconf_timestamp),
        ('modificationNumber', _LIMODIFYconf_modificationNumber),
        ('result', _LIMODIFYconf_result),
        ])
    LIMODIFYconf._ext = None
    
    #-----< LISTATUSind >-----#
    LISTATUSind = SEQ(name='LISTATUSind', mode=MODE_TYPE)
    _LISTATUSind_tLIInstanceid = BIT_STR(name='tLIInstanceid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'TLIIdType')))
    _LISTATUSind_timestamp = TIME_UTC(name='timestamp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LISTATUSind_tETRASysStatus = ENUM(name='tETRASysStatus', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'StatusType')))
    LISTATUSind._cont = ASN1Dict([
        ('tLIInstanceid', _LISTATUSind_tLIInstanceid),
        ('timestamp', _LISTATUSind_timestamp),
        ('tETRASysStatus', _LISTATUSind_tETRASysStatus),
        ])
    LISTATUSind._ext = None
    
    #-----< TARGETACTIVITYMONITORind >-----#
    TARGETACTIVITYMONITORind = SEQ(name='TARGETACTIVITYMONITORind', mode=MODE_TYPE)
    _TARGETACTIVITYMONITORind_tLIInstanceid = BIT_STR(name='tLIInstanceid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'TLIIdType')))
    _TARGETACTIVITYMONITORind_timestamp = TIME_UTC(name='timestamp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TARGETACTIVITYMONITORind_targetLocation = CHOICE(name='targetLocation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EN301040', 'LocationType')))
    _TARGETACTIVITYMONITORind_targetAction = SEQ(name='targetAction', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'ActivityType')))
    _TARGETACTIVITYMONITORind_supplementaryTargetaddress = SEQ(name='supplementaryTargetaddress', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'AddressType')), opt=True)
    _TARGETACTIVITYMONITORind_cotargetaddress = SEQ_OF(name='cotargetaddress', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __TARGETACTIVITYMONITORind_cotargetaddress__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EN301040', 'AddressType')))
    _TARGETACTIVITYMONITORind_cotargetaddress._cont = __TARGETACTIVITYMONITORind_cotargetaddress__item_
    _TARGETACTIVITYMONITORind_cotargetlocation = SEQ_OF(name='cotargetlocation', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __TARGETACTIVITYMONITORind_cotargetlocation__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EN301040', 'LocationType')))
    _TARGETACTIVITYMONITORind_cotargetlocation._cont = __TARGETACTIVITYMONITORind_cotargetlocation__item_
    TARGETACTIVITYMONITORind._cont = ASN1Dict([
        ('tLIInstanceid', _TARGETACTIVITYMONITORind_tLIInstanceid),
        ('timestamp', _TARGETACTIVITYMONITORind_timestamp),
        ('targetLocation', _TARGETACTIVITYMONITORind_targetLocation),
        ('targetAction', _TARGETACTIVITYMONITORind_targetAction),
        ('supplementaryTargetaddress', _TARGETACTIVITYMONITORind_supplementaryTargetaddress),
        ('cotargetaddress', _TARGETACTIVITYMONITORind_cotargetaddress),
        ('cotargetlocation', _TARGETACTIVITYMONITORind_cotargetlocation),
        ])
    TARGETACTIVITYMONITORind._ext = None
    
    #-----< TARGETCOMMSMONITORind >-----#
    TARGETCOMMSMONITORind = SEQ(name='TARGETCOMMSMONITORind', mode=MODE_TYPE)
    _TARGETCOMMSMONITORind_tLIInstanceid = BIT_STR(name='tLIInstanceid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'TLIIdType')))
    _TARGETCOMMSMONITORind_timestamp = TIME_UTC(name='timestamp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TARGETCOMMSMONITORind_targetlocation = CHOICE(name='targetlocation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EN301040', 'LocationType')))
    _TARGETCOMMSMONITORind_supplementaryTargetaddress = SEQ(name='supplementaryTargetaddress', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'AddressType')), opt=True)
    _TARGETCOMMSMONITORind_targetcommsid = STR_NUM(name='targetcommsid', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'CircuitIdType')))
    _TARGETCOMMSMONITORind_cotargetaddress = SEQ_OF(name='cotargetaddress', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __TARGETCOMMSMONITORind_cotargetaddress__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EN301040', 'AddressType')))
    _TARGETCOMMSMONITORind_cotargetaddress._cont = __TARGETCOMMSMONITORind_cotargetaddress__item_
    _TARGETCOMMSMONITORind_cotargetcommsid = SEQ_OF(name='cotargetcommsid', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __TARGETCOMMSMONITORind_cotargetcommsid__item_ = STR_NUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EN301040', 'CircuitIdType')))
    _TARGETCOMMSMONITORind_cotargetcommsid._cont = __TARGETCOMMSMONITORind_cotargetcommsid__item_
    TARGETCOMMSMONITORind._cont = ASN1Dict([
        ('tLIInstanceid', _TARGETCOMMSMONITORind_tLIInstanceid),
        ('timestamp', _TARGETCOMMSMONITORind_timestamp),
        ('targetlocation', _TARGETCOMMSMONITORind_targetlocation),
        ('supplementaryTargetaddress', _TARGETCOMMSMONITORind_supplementaryTargetaddress),
        ('targetcommsid', _TARGETCOMMSMONITORind_targetcommsid),
        ('cotargetaddress', _TARGETCOMMSMONITORind_cotargetaddress),
        ('cotargetcommsid', _TARGETCOMMSMONITORind_cotargetcommsid),
        ])
    TARGETCOMMSMONITORind._ext = None
    
    #-----< TTRAFFICind >-----#
    TTRAFFICind = SEQ(name='TTRAFFICind', mode=MODE_TYPE)
    _TTRAFFICind_tLIInstanceid = BIT_STR(name='tLIInstanceid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'TLIIdType')))
    _TTRAFFICind_trafficPacket = BIT_STR(name='trafficPacket', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    TTRAFFICind._cont = ASN1Dict([
        ('tLIInstanceid', _TTRAFFICind_tLIInstanceid),
        ('trafficPacket', _TTRAFFICind_trafficPacket),
        ])
    TTRAFFICind._ext = None
    
    #-----< CTTRAFFICind >-----#
    CTTRAFFICind = SEQ(name='CTTRAFFICind', mode=MODE_TYPE)
    _CTTRAFFICind_tLIInstanceid = BIT_STR(name='tLIInstanceid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'TLIIdType')))
    _CTTRAFFICind_trafficPacket = BIT_STR(name='trafficPacket', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    CTTRAFFICind._cont = ASN1Dict([
        ('tLIInstanceid', _CTTRAFFICind_tLIInstanceid),
        ('trafficPacket', _CTTRAFFICind_trafficPacket),
        ])
    CTTRAFFICind._ext = None
    
    #-----< ActivityClassType >-----#
    ActivityClassType = ENUM(name='ActivityClassType', mode=MODE_TYPE)
    ActivityClassType._cont = ASN1Dict([('allServices', 0), ('tETRASpeech', 1), ('singleSlotData24', 2), ('singleSlotData48', 3), ('singleSlotData72', 4), ('multiSlotData224', 5), ('multiSlotData248', 6), ('multiSlotData272', 7), ('multiSlotData324', 8), ('multiSlotData348', 9), ('multiSlotData372', 10), ('multiSlotData424', 11), ('multiSlotData448', 12), ('multiSlotData472', 13), ('sDSType1', 14), ('sDSType2', 15), ('sDSType3', 16), ('sDSType4', 17), ('status', 18), ('sDSACKType1', 19), ('sDSACKType2', 20), ('sDSACKType3', 21), ('sDSACKType4', 22), ('statusack', 23), ('sDSAcknowledgementsuccess', 24), ('sDSAcknowledgementfail', 25), ('sCLNSPacketData', 26), ('cONSPacketData', 27), ('internetProtocol', 28), ('swMIauthenticationsuccess', 29), ('swMIauthenticationfail', 30), ('iTSIauthenticationsuccess', 31), ('iTSIauthenticationfail', 32), ('oTARSCKsuccess', 33), ('oTARSCKfail', 34), ('oTARGCKsuccess', 35), ('oTARGCKfail', 36), ('oTARCCKsuccess', 37), ('oTARCCKfail', 38), ('tARGETSUSCRIPTIONDISABLEDT', 39), ('tARGETEQUIPMENTDISABLEDT', 40), ('tARGETSUSCRIPTIONDISABLEDP', 41), ('tARGETEQUIPEMENTDISABLEDP', 42), ('tARGETSUBSCRIPTIONENABLED', 43), ('tARGETEQUIPMENTENABLED', 44), ('sessionregistration', 45), ('sessionderegistration', 46), ('mIGRATION', 47), ('rOAMING', 48), ('supplementaryService', 49)])
    ActivityClassType._ext = None
    
    #-----< ActivityType >-----#
    ActivityType = SEQ(name='ActivityType', mode=MODE_TYPE)
    _ActivityType_cctivity = ENUM(name='cctivity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'ActivityClassType')))
    _ActivityType_callRelation = ENUM(name='callRelation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ActivityType_callRelation._cont = ASN1Dict([('begin', 0), ('end', 1), ('continue', 2), ('report', 3)])
    _ActivityType_callRelation._ext = None
    _ActivityType_direction = ENUM(name='direction', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ActivityType_direction._cont = ASN1Dict([('toTarget', 0), ('fromTarget', 1)])
    _ActivityType_direction._ext = None
    _ActivityType_scope = ENUM(name='scope', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ActivityType_scope._cont = ASN1Dict([('point2Point', 0), ('point2MultiPoint', 1), ('broadcast', 2)])
    _ActivityType_scope._ext = None
    _ActivityType_cPlaneData = BIT_STR(name='cPlaneData', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ActivityType_sStype = ENUM(name='sStype', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'SSType')), opt=True)
    ActivityType._cont = ASN1Dict([
        ('cctivity', _ActivityType_cctivity),
        ('callRelation', _ActivityType_callRelation),
        ('direction', _ActivityType_direction),
        ('scope', _ActivityType_scope),
        ('cPlaneData', _ActivityType_cPlaneData),
        ('sStype', _ActivityType_sStype),
        ])
    ActivityType._ext = None
    
    #-----< AddressType >-----#
    AddressType = SEQ(name='AddressType', mode=MODE_TYPE)
    _AddressType_tSI = SEQ(name='tSI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'TSIType')))
    _AddressType_supplementaryAddress = SEQ_OF(name='supplementaryAddress', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __AddressType_supplementaryAddress__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EN301040', 'TETRAAddressType')))
    _AddressType_supplementaryAddress._cont = __AddressType_supplementaryAddress__item_
    AddressType._cont = ASN1Dict([
        ('tSI', _AddressType_tSI),
        ('supplementaryAddress', _AddressType_supplementaryAddress),
        ])
    AddressType._ext = None
    
    #-----< TETRAAddressType >-----#
    TETRAAddressType = CHOICE(name='TETRAAddressType', mode=MODE_TYPE)
    _TETRAAddressType_tETRAaddress = SEQ(name='tETRAaddress', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'TSIType')))
    _TETRAAddressType_pISNaddress = STR_NUM(name='pISNaddress', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TETRAAddressType_pISNaddress._const_sz = ASN1Set(rv=[20], rr=[], ev=None, er=[])
    _TETRAAddressType_iP4address = BIT_STR(name='iP4address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TETRAAddressType_iP4address._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    _TETRAAddressType_iP6address = BIT_STR(name='iP6address', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TETRAAddressType_iP6address._const_sz = ASN1Set(rv=[128], rr=[], ev=None, er=[])
    _TETRAAddressType_e164address = STR_NUM(name='e164address', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TETRAAddressType_e164address._const_sz = ASN1Set(rv=[20], rr=[], ev=None, er=[])
    _TETRAAddressType_tEI = BIT_STR(name='tEI', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'TEIType')))
    TETRAAddressType._cont = ASN1Dict([
        ('tETRAaddress', _TETRAAddressType_tETRAaddress),
        ('pISNaddress', _TETRAAddressType_pISNaddress),
        ('iP4address', _TETRAAddressType_iP4address),
        ('iP6address', _TETRAAddressType_iP6address),
        ('e164address', _TETRAAddressType_e164address),
        ('tEI', _TETRAAddressType_tEI),
        ])
    TETRAAddressType._ext = None
    
    #-----< CellIdType >-----#
    CellIdType = BIT_STR(name='CellIdType', mode=MODE_TYPE)
    CellIdType._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< LocationAreaType >-----#
    LocationAreaType = BIT_STR(name='LocationAreaType', mode=MODE_TYPE)
    LocationAreaType._const_sz = ASN1Set(rv=[14], rr=[], ev=None, er=[])
    
    #-----< LocationType >-----#
    LocationType = CHOICE(name='LocationType', mode=MODE_TYPE)
    _LocationType_mSLoc = SEQ(name='mSLoc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'TETRACGIType')))
    _LocationType_lSLoc = CHOICE(name='lSLoc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EN301040', 'TETRAAddressType')))
    LocationType._cont = ASN1Dict([
        ('mSLoc', _LocationType_mSLoc),
        ('lSLoc', _LocationType_lSLoc),
        ])
    LocationType._ext = None
    
    #-----< MCCType >-----#
    MCCType = BIT_STR(name='MCCType', mode=MODE_TYPE)
    MCCType._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    
    #-----< MNCType >-----#
    MNCType = BIT_STR(name='MNCType', mode=MODE_TYPE)
    MNCType._const_sz = ASN1Set(rv=[14], rr=[], ev=None, er=[])
    
    #-----< SSIType >-----#
    SSIType = BIT_STR(name='SSIType', mode=MODE_TYPE)
    SSIType._const_sz = ASN1Set(rv=[24], rr=[], ev=None, er=[])
    
    #-----< CircuitIdType >-----#
    CircuitIdType = STR_NUM(name='CircuitIdType', mode=MODE_TYPE)
    CircuitIdType._const_sz = ASN1Set(rv=[20], rr=[], ev=None, er=[])
    
    #-----< SSType >-----#
    SSType = ENUM(name='SSType', mode=MODE_TYPE)
    SSType._cont = ASN1Dict([('ambienceListening', 0), ('adviceofCharge', 1), ('accessPriority', 2), ('areaSelection', 3), ('barringofIncomingCalls', 4), ('barringofOutgoingCalls', 5), ('callAuthorizedbyDispatcher', 6), ('callCompletiontoBusySubscriber', 7), ('callCompletiononNoReply', 8), ('callForwardingonBusy', 9), ('callForwardingonNoReply', 10), ('callForwardingonNotReachable', 11), ('callForwardingUnconditional', 12), ('callingLineIdentificationPresentation', 13), ('callingConnectedLineIdentificationRestriction', 14), ('connectedLineIdentificationPresentation', 15), ('callReport', 16), ('callRetention', 17), ('callWaiting', 18), ('dynamicGroupNumberAssignment', 19), ('discreetListening', 20), ('callHold', 21), ('includeCall', 22), ('lateEntry', 23), ('listSearchCall', 24), ('priorityCall', 25), ('preemptivePriorityCall', 26), ('shortNumberAddressing', 27), ('transferofControl', 28), ('talkingPartyIdentification', 29)])
    SSType._ext = None
    
    #-----< StatusType >-----#
    StatusType = ENUM(name='StatusType', mode=MODE_TYPE)
    StatusType._cont = ASN1Dict([('networkFullyAvailable', 0), ('networkErrorsAffectingIntercept', 1), ('reconfigurationInProgress', 2), ('sessionExpired', 3), ('gatewayServicesUnavailable', 4)])
    StatusType._ext = None
    
    #-----< TETRACGIType >-----#
    TETRACGIType = SEQ(name='TETRACGIType', mode=MODE_TYPE)
    _TETRACGIType_mcc = BIT_STR(name='mcc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'MCCType')))
    _TETRACGIType_mnc = BIT_STR(name='mnc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'MNCType')))
    _TETRACGIType_lai = BIT_STR(name='lai', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'LocationAreaType')))
    _TETRACGIType_cI = BIT_STR(name='cI', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'CellIdType')), opt=True)
    TETRACGIType._cont = ASN1Dict([
        ('mcc', _TETRACGIType_mcc),
        ('mnc', _TETRACGIType_mnc),
        ('lai', _TETRACGIType_lai),
        ('cI', _TETRACGIType_cI),
        ])
    TETRACGIType._ext = None
    
    #-----< TLIIdType >-----#
    TLIIdType = BIT_STR(name='TLIIdType', mode=MODE_TYPE)
    TLIIdType._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< TSIType >-----#
    TSIType = SEQ(name='TSIType', mode=MODE_TYPE)
    _TSIType_mcc = BIT_STR(name='mcc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'MCCType')))
    _TSIType_mnc = BIT_STR(name='mnc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'MNCType')))
    _TSIType_ssi = BIT_STR(name='ssi', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'SSIType')))
    TSIType._cont = ASN1Dict([
        ('mcc', _TSIType_mcc),
        ('mnc', _TSIType_mnc),
        ('ssi', _TSIType_ssi),
        ])
    TSIType._ext = None
    
    #-----< TEIType >-----#
    TEIType = BIT_STR(name='TEIType', mode=MODE_TYPE)
    TEIType._const_sz = ASN1Set(rv=[60], rr=[], ev=None, er=[])
    
    _all_ = [
        _LIACTIVATEreq_timeStamp,
        _LIACTIVATEreq_invokeId,
        _LIACTIVATEreq_targetAddress,
        _LIACTIVATEreq_expiryDateTime,
        _LIACTIVATEreq_targetname,
        _LIACTIVATEreq_additionaltargetdata,
        __LIACTIVATEreq_monitorServiceList__item_,
        _LIACTIVATEreq_monitorServiceList,
        LIACTIVATEreq,
        _LIACTIVATEconf_timeStamp,
        _LIACTIVATEconf_invokeId,
        _LIACTIVATEconf_result,
        _LIACTIVATEconf_tLIInstanceid,
        LIACTIVATEconf,
        _LIMODIFYreq_tLIInstanceid,
        _LIMODIFYreq_timestamp,
        _LIMODIFYreq_modificationNumber,
        __LIMODIFYreq_modificationType_halt,
        __LIMODIFYreq_modificationType_reset,
        __LIMODIFYreq_modificationType_expiryDateTime,
        __LIMODIFYreq_modificationType_targetname,
        __LIMODIFYreq_modificationType_additionaltargetdata,
        ___LIMODIFYreq_modificationType_monitorServiceList__item_,
        __LIMODIFYreq_modificationType_monitorServiceList,
        _LIMODIFYreq_modificationType,
        LIMODIFYreq,
        _LIMODIFYconf_tLIInstanceid,
        _LIMODIFYconf_timestamp,
        _LIMODIFYconf_modificationNumber,
        _LIMODIFYconf_result,
        LIMODIFYconf,
        _LISTATUSind_tLIInstanceid,
        _LISTATUSind_timestamp,
        _LISTATUSind_tETRASysStatus,
        LISTATUSind,
        _TARGETACTIVITYMONITORind_tLIInstanceid,
        _TARGETACTIVITYMONITORind_timestamp,
        _TARGETACTIVITYMONITORind_targetLocation,
        _TARGETACTIVITYMONITORind_targetAction,
        _TARGETACTIVITYMONITORind_supplementaryTargetaddress,
        __TARGETACTIVITYMONITORind_cotargetaddress__item_,
        _TARGETACTIVITYMONITORind_cotargetaddress,
        __TARGETACTIVITYMONITORind_cotargetlocation__item_,
        _TARGETACTIVITYMONITORind_cotargetlocation,
        TARGETACTIVITYMONITORind,
        _TARGETCOMMSMONITORind_tLIInstanceid,
        _TARGETCOMMSMONITORind_timestamp,
        _TARGETCOMMSMONITORind_targetlocation,
        _TARGETCOMMSMONITORind_supplementaryTargetaddress,
        _TARGETCOMMSMONITORind_targetcommsid,
        __TARGETCOMMSMONITORind_cotargetaddress__item_,
        _TARGETCOMMSMONITORind_cotargetaddress,
        __TARGETCOMMSMONITORind_cotargetcommsid__item_,
        _TARGETCOMMSMONITORind_cotargetcommsid,
        TARGETCOMMSMONITORind,
        _TTRAFFICind_tLIInstanceid,
        _TTRAFFICind_trafficPacket,
        TTRAFFICind,
        _CTTRAFFICind_tLIInstanceid,
        _CTTRAFFICind_trafficPacket,
        CTTRAFFICind,
        ActivityClassType,
        _ActivityType_cctivity,
        _ActivityType_callRelation,
        _ActivityType_direction,
        _ActivityType_scope,
        _ActivityType_cPlaneData,
        _ActivityType_sStype,
        ActivityType,
        _AddressType_tSI,
        __AddressType_supplementaryAddress__item_,
        _AddressType_supplementaryAddress,
        AddressType,
        _TETRAAddressType_tETRAaddress,
        _TETRAAddressType_pISNaddress,
        _TETRAAddressType_iP4address,
        _TETRAAddressType_iP6address,
        _TETRAAddressType_e164address,
        _TETRAAddressType_tEI,
        TETRAAddressType,
        CellIdType,
        LocationAreaType,
        _LocationType_mSLoc,
        _LocationType_lSLoc,
        LocationType,
        MCCType,
        MNCType,
        SSIType,
        CircuitIdType,
        SSType,
        StatusType,
        _TETRACGIType_mcc,
        _TETRACGIType_mnc,
        _TETRACGIType_lai,
        _TETRACGIType_cI,
        TETRACGIType,
        TLIIdType,
        _TSIType_mcc,
        _TSIType_mnc,
        _TSIType_ssi,
        TSIType,
        TEIType,
    ]

class Eps_HI3_PS:

    _name_  = 'Eps-HI3-PS'
    _oid_   = [0, 4, 0, 2, 2, 4, 9, 12, 0]
    
    _obj_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi3DomainId',
        'CC-PDU',
        'ULIC-header',
        'TPDU-direction',
        'National-HI3-ASN1parameters',
        'ICE-type',
        ]
    _type_ = [
        'CC-PDU',
        'ULIC-header',
        'TPDU-direction',
        'National-HI3-ASN1parameters',
        'ICE-type',
        ]
    _set_ = [
        ]
    _val_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi3DomainId',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< lawfulInterceptDomainId >-----#
    lawfulInterceptDomainId = OID(name='lawfulInterceptDomainId', mode=MODE_VALUE)
    lawfulInterceptDomainId._val = (0, 4, 0, 2, 2)
    
    #-----< threeGPPSUBDomainId >-----#
    threeGPPSUBDomainId = OID(name='threeGPPSUBDomainId', mode=MODE_VALUE)
    threeGPPSUBDomainId._val = (0, 4, 0, 2, 2, 4)
    
    #-----< hi3DomainId >-----#
    hi3DomainId = OID(name='hi3DomainId', mode=MODE_VALUE)
    hi3DomainId._val = (0, 4, 0, 2, 2, 4, 9, 12, 0)
    
    #-----< CC-PDU >-----#
    CC_PDU = SEQ(name='CC-PDU', mode=MODE_TYPE)
    _CC_PDU_uLIC_header = SEQ(name='uLIC-header', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Eps-HI3-PS', 'ULIC-header')))
    _CC_PDU_payload = OCT_STR(name='payload', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    CC_PDU._cont = ASN1Dict([
        ('uLIC-header', _CC_PDU_uLIC_header),
        ('payload', _CC_PDU_payload),
        ])
    CC_PDU._ext = None
    
    #-----< ULIC-header >-----#
    ULIC_header = SEQ(name='ULIC-header', mode=MODE_TYPE)
    _ULIC_header_hi3DomainId = OID(name='hi3DomainId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ULIC_header_lIID = OCT_STR(name='lIID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')), opt=True)
    _ULIC_header_correlation_Number = OCT_STR(name='correlation-Number', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'EPSCorrelationNumber')))
    _ULIC_header_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')), opt=True)
    _ULIC_header_sequence_number = INT(name='sequence-number', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ULIC_header_sequence_number._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _ULIC_header_t_PDU_direction = ENUM(name='t-PDU-direction', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Eps-HI3-PS', 'TPDU-direction')))
    _ULIC_header_national_HI3_ASN1parameters = SEQ(name='national-HI3-ASN1parameters', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Eps-HI3-PS', 'National-HI3-ASN1parameters')), opt=True)
    _ULIC_header_ice_type = ENUM(name='ice-type', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Eps-HI3-PS', 'ICE-type')), opt=True)
    ULIC_header._cont = ASN1Dict([
        ('hi3DomainId', _ULIC_header_hi3DomainId),
        ('lIID', _ULIC_header_lIID),
        ('correlation-Number', _ULIC_header_correlation_Number),
        ('timeStamp', _ULIC_header_timeStamp),
        ('sequence-number', _ULIC_header_sequence_number),
        ('t-PDU-direction', _ULIC_header_t_PDU_direction),
        ('national-HI3-ASN1parameters', _ULIC_header_national_HI3_ASN1parameters),
        ('ice-type', _ULIC_header_ice_type),
        ])
    ULIC_header._ext = ['national-HI3-ASN1parameters', 'ice-type']
    
    #-----< TPDU-direction >-----#
    TPDU_direction = ENUM(name='TPDU-direction', mode=MODE_TYPE)
    TPDU_direction._cont = ASN1Dict([('from-target', 1), ('to-target', 2), ('unknown', 3)])
    TPDU_direction._ext = None
    
    #-----< National-HI3-ASN1parameters >-----#
    National_HI3_ASN1parameters = SEQ(name='National-HI3-ASN1parameters', mode=MODE_TYPE)
    _National_HI3_ASN1parameters_countryCode = STR_PRINT(name='countryCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _National_HI3_ASN1parameters_countryCode._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    National_HI3_ASN1parameters._cont = ASN1Dict([
        ('countryCode', _National_HI3_ASN1parameters_countryCode),
        ])
    National_HI3_ASN1parameters._ext = []
    
    #-----< ICE-type >-----#
    ICE_type = ENUM(name='ICE-type', mode=MODE_TYPE)
    ICE_type._cont = ASN1Dict([('sgsn', 1), ('ggsn', 2), ('s-GW', 3), ('pDN-GW', 4), ('colocated-SAE-GWs', 5), ('ePDG', 6)])
    ICE_type._ext = ['s-GW', 'pDN-GW', 'colocated-SAE-GWs', 'ePDG']
    
    _all_ = [
        lawfulInterceptDomainId,
        threeGPPSUBDomainId,
        hi3DomainId,
        _CC_PDU_uLIC_header,
        _CC_PDU_payload,
        CC_PDU,
        _ULIC_header_hi3DomainId,
        _ULIC_header_lIID,
        _ULIC_header_correlation_Number,
        _ULIC_header_timeStamp,
        _ULIC_header_sequence_number,
        _ULIC_header_t_PDU_direction,
        _ULIC_header_national_HI3_ASN1parameters,
        _ULIC_header_ice_type,
        ULIC_header,
        TPDU_direction,
        _National_HI3_ASN1parameters_countryCode,
        National_HI3_ASN1parameters,
        ICE_type,
    ]

class EpsHI2Operations:

    _name_  = 'EpsHI2Operations'
    _oid_   = [0, 4, 0, 2, 2, 4, 8, 16, 1]
    
    _obj_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi2epsDomainId',
        'EpsIRIsContent',
        'EpsIRISequence',
        'EpsIRIContent',
        'IRI-Parameters',
        'DataNodeIdentifier',
        'LogicalFunctionType',
        'PANI-Header-Info',
        'PANI-Location',
        'PartyInformation',
        'Location',
        'GlobalCellID',
        'Rai',
        'Sai',
        'AdditionalCellID',
        'MCC',
        'MNC',
        'PLMNID',
        'NRCellID',
        'NCGI',
        'GSMLocation',
        'MapDatum',
        'UMTSLocation',
        'GeographicalCoordinates',
        'GA-Point',
        'GA-PointWithUnCertainty',
        'maxNrOfPoints',
        'GA-Polygon',
        'SMS-report',
        'EPSCorrelationNumber',
        'CorrelationValues',
        'IMS-VoIP-Correlation',
        'IRI-to-CC-Correlation',
        'IRI-to-IRI-Correlation',
        'EPSEvent',
        'CSREvent',
        'IMSevent',
        'Services-Data-Information',
        'GPRS-parameters',
        'GPRSOperationErrorCode',
        'LDIevent',
        'UmtsQos',
        'EPS-GTPV2-SpecificParameters',
        'TypeOfBearer',
        'EPSLocation',
        'ProtConfigOptions',
        'RemoteUeContextConnected',
        'RemoteUEContext',
        'RemoteUserID',
        'RemoteUEIPInformation',
        'RemoteUeContextDisconnected',
        'EPS-PMIP-SpecificParameters',
        'EPS-DSMIP-SpecificParameters',
        'EPS-MIP-SpecificParameters',
        'MediaDecryption-info',
        'CCKeyInfo',
        'MediaSecFailureIndication',
        'PacketDataHeaderInformation',
        'PacketDataHeaderReport',
        'PacketDataHeaderMapped',
        'TPDU-direction',
        'PacketDataHeaderCopy',
        'PacketDataSummaryReport',
        'PacketFlowSummary',
        'ReportReason',
        'ReportInterval',
        'TunnelProtocol',
        'HeNBLocation',
        'Requesting-Node-Type',
        'Change-Of-Target-Identity',
        'Current-Previous-Systems',
        'ProSeTargetType',
        'VoIPRoamingIndication',
        'DeregistrationReason',
        'PTCEncryptionInfo',
        'PTC',
        'AccessPolicyType',
        'AlertIndicator',
        'AssociatePresenceStatus',
        'PresenceType',
        'Emergency',
        'EmergencyGroupState',
        'PTCType',
        'FloorActivity',
        'GroupAuthRule',
        'ImminentPerilInd',
        'ImplicitFloorReq',
        'InitiationCause',
        'IPADirection',
        'ListManagementAction',
        'ListManagementType',
        'Priority-Level',
        'PreEstStatus',
        'PTCAddress',
        'RegistrationRequest',
        'RegistrationOutcome',
        'RTPSetting',
        'Port-Number',
        'TalkburstControlSetting',
        'Talk-burst-reason-code',
        ]
    _type_ = [
        'EpsIRIsContent',
        'EpsIRISequence',
        'EpsIRIContent',
        'IRI-Parameters',
        'DataNodeIdentifier',
        'LogicalFunctionType',
        'PANI-Header-Info',
        'PANI-Location',
        'PartyInformation',
        'Location',
        'GlobalCellID',
        'Rai',
        'Sai',
        'AdditionalCellID',
        'MCC',
        'MNC',
        'PLMNID',
        'NRCellID',
        'NCGI',
        'GSMLocation',
        'MapDatum',
        'UMTSLocation',
        'GeographicalCoordinates',
        'GA-Point',
        'GA-PointWithUnCertainty',
        'GA-Polygon',
        'SMS-report',
        'EPSCorrelationNumber',
        'CorrelationValues',
        'IMS-VoIP-Correlation',
        'IRI-to-CC-Correlation',
        'IRI-to-IRI-Correlation',
        'EPSEvent',
        'CSREvent',
        'IMSevent',
        'Services-Data-Information',
        'GPRS-parameters',
        'GPRSOperationErrorCode',
        'LDIevent',
        'UmtsQos',
        'EPS-GTPV2-SpecificParameters',
        'TypeOfBearer',
        'EPSLocation',
        'ProtConfigOptions',
        'RemoteUeContextConnected',
        'RemoteUEContext',
        'RemoteUserID',
        'RemoteUEIPInformation',
        'RemoteUeContextDisconnected',
        'EPS-PMIP-SpecificParameters',
        'EPS-DSMIP-SpecificParameters',
        'EPS-MIP-SpecificParameters',
        'MediaDecryption-info',
        'CCKeyInfo',
        'MediaSecFailureIndication',
        'PacketDataHeaderInformation',
        'PacketDataHeaderReport',
        'PacketDataHeaderMapped',
        'TPDU-direction',
        'PacketDataHeaderCopy',
        'PacketDataSummaryReport',
        'PacketFlowSummary',
        'ReportReason',
        'ReportInterval',
        'TunnelProtocol',
        'HeNBLocation',
        'Requesting-Node-Type',
        'Change-Of-Target-Identity',
        'Current-Previous-Systems',
        'ProSeTargetType',
        'VoIPRoamingIndication',
        'DeregistrationReason',
        'PTCEncryptionInfo',
        'PTC',
        'AccessPolicyType',
        'AlertIndicator',
        'AssociatePresenceStatus',
        'PresenceType',
        'Emergency',
        'EmergencyGroupState',
        'PTCType',
        'FloorActivity',
        'GroupAuthRule',
        'ImminentPerilInd',
        'ImplicitFloorReq',
        'InitiationCause',
        'IPADirection',
        'ListManagementAction',
        'ListManagementType',
        'Priority-Level',
        'PreEstStatus',
        'PTCAddress',
        'RegistrationRequest',
        'RegistrationOutcome',
        'RTPSetting',
        'Port-Number',
        'TalkburstControlSetting',
        'Talk-burst-reason-code',
        ]
    _set_ = [
        ]
    _val_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi2epsDomainId',
        'maxNrOfPoints',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< lawfulInterceptDomainId >-----#
    lawfulInterceptDomainId = OID(name='lawfulInterceptDomainId', mode=MODE_VALUE)
    lawfulInterceptDomainId._val = (0, 4, 0, 2, 2)
    
    #-----< threeGPPSUBDomainId >-----#
    threeGPPSUBDomainId = OID(name='threeGPPSUBDomainId', mode=MODE_VALUE)
    threeGPPSUBDomainId._val = (0, 4, 0, 2, 2, 4)
    
    #-----< hi2epsDomainId >-----#
    hi2epsDomainId = OID(name='hi2epsDomainId', mode=MODE_VALUE)
    hi2epsDomainId._val = (0, 4, 0, 2, 2, 4, 8, 16, 1)
    
    #-----< EpsIRIsContent >-----#
    EpsIRIsContent = CHOICE(name='EpsIRIsContent', mode=MODE_TYPE)
    _EpsIRIsContent_epsiRIContent = CHOICE(name='epsiRIContent', mode=MODE_TYPE, typeref=ASN1RefType(('EpsHI2Operations', 'EpsIRIContent')))
    _EpsIRIsContent_epsIRISequence = SEQ_OF(name='epsIRISequence', mode=MODE_TYPE, typeref=ASN1RefType(('EpsHI2Operations', 'EpsIRISequence')))
    EpsIRIsContent._cont = ASN1Dict([
        ('epsiRIContent', _EpsIRIsContent_epsiRIContent),
        ('epsIRISequence', _EpsIRIsContent_epsIRISequence),
        ])
    EpsIRIsContent._ext = None
    
    #-----< EpsIRISequence >-----#
    EpsIRISequence = SEQ_OF(name='EpsIRISequence', mode=MODE_TYPE)
    _EpsIRISequence__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EpsHI2Operations', 'EpsIRIContent')))
    EpsIRISequence._cont = _EpsIRISequence__item_
    
    #-----< EpsIRIContent >-----#
    EpsIRIContent = CHOICE(name='EpsIRIContent', mode=MODE_TYPE)
    _EpsIRIContent_iRI_Begin_record = SEQ(name='iRI-Begin-record', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'IRI-Parameters')))
    _EpsIRIContent_iRI_End_record = SEQ(name='iRI-End-record', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'IRI-Parameters')))
    _EpsIRIContent_iRI_Continue_record = SEQ(name='iRI-Continue-record', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'IRI-Parameters')))
    _EpsIRIContent_iRI_Report_record = SEQ(name='iRI-Report-record', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'IRI-Parameters')))
    EpsIRIContent._cont = ASN1Dict([
        ('iRI-Begin-record', _EpsIRIContent_iRI_Begin_record),
        ('iRI-End-record', _EpsIRIContent_iRI_End_record),
        ('iRI-Continue-record', _EpsIRIContent_iRI_Continue_record),
        ('iRI-Report-record', _EpsIRIContent_iRI_Report_record),
        ])
    EpsIRIContent._ext = None
    
    #-----< IRI-Parameters >-----#
    IRI_Parameters = SEQ(name='IRI-Parameters', mode=MODE_TYPE)
    _IRI_Parameters_hi2epsDomainId = OID(name='hi2epsDomainId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IRI_Parameters_lawfulInterceptionIdentifier = OCT_STR(name='lawfulInterceptionIdentifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')))
    _IRI_Parameters_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _IRI_Parameters_initiator = ENUM(name='initiator', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_initiator._cont = ASN1Dict([('not-Available', 0), ('originating-Target', 1), ('terminating-Target', 2)])
    _IRI_Parameters_initiator._ext = []
    _IRI_Parameters_locationOfTheTarget = SEQ(name='locationOfTheTarget', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'Location')), opt=True)
    _IRI_Parameters_partyInformation = SET_OF(name='partyInformation', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_partyInformation__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EpsHI2Operations', 'PartyInformation')))
    _IRI_Parameters_partyInformation._cont = __IRI_Parameters_partyInformation__item_
    _IRI_Parameters_partyInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    _IRI_Parameters_serviceCenterAddress = SEQ(name='serviceCenterAddress', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PartyInformation')), opt=True)
    _IRI_Parameters_sMS = SEQ(name='sMS', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'SMS-report')), opt=True)
    _IRI_Parameters_national_Parameters = SET_OF(name='national-Parameters', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'National-Parameters')), opt=True)
    _IRI_Parameters_ePSCorrelationNumber = OCT_STR(name='ePSCorrelationNumber', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'EPSCorrelationNumber')), opt=True)
    _IRI_Parameters_ePSevent = ENUM(name='ePSevent', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'EPSEvent')), opt=True)
    _IRI_Parameters_sgsnAddress = CHOICE(name='sgsnAddress', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    _IRI_Parameters_gPRSOperationErrorCode = OCT_STR(name='gPRSOperationErrorCode', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'GPRSOperationErrorCode')), opt=True)
    _IRI_Parameters_ggsnAddress = CHOICE(name='ggsnAddress', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    _IRI_Parameters_qOS = CHOICE(name='qOS', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'UmtsQos')), opt=True)
    _IRI_Parameters_networkIdentifier = SEQ(name='networkIdentifier', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Network-Identifier')), opt=True)
    _IRI_Parameters_sMSOriginatingAddress = CHOICE(name='sMSOriginatingAddress', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    _IRI_Parameters_sMSTerminatingAddress = CHOICE(name='sMSTerminatingAddress', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    _IRI_Parameters_iMSevent = ENUM(name='iMSevent', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'IMSevent')), opt=True)
    _IRI_Parameters_sIPMessage = OCT_STR(name='sIPMessage', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_servingSGSN_number = OCT_STR(name='servingSGSN-number', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_servingSGSN_number._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    _IRI_Parameters_servingSGSN_address = OCT_STR(name='servingSGSN-address', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_servingSGSN_address._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=17)], ev=None, er=[])
    _IRI_Parameters_ldiEvent = ENUM(name='ldiEvent', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'LDIevent')), opt=True)
    _IRI_Parameters_correlation = CHOICE(name='correlation', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'CorrelationValues')), opt=True)
    _IRI_Parameters_ePS_GTPV2_specificParameters = SEQ(name='ePS-GTPV2-specificParameters', mode=MODE_TYPE, tag=(36, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'EPS-GTPV2-SpecificParameters')), opt=True)
    _IRI_Parameters_ePS_PMIP_specificParameters = SEQ(name='ePS-PMIP-specificParameters', mode=MODE_TYPE, tag=(37, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'EPS-PMIP-SpecificParameters')), opt=True)
    _IRI_Parameters_ePS_DSMIP_SpecificParameters = SEQ(name='ePS-DSMIP-SpecificParameters', mode=MODE_TYPE, tag=(38, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'EPS-DSMIP-SpecificParameters')), opt=True)
    _IRI_Parameters_ePS_MIP_SpecificParameters = SEQ(name='ePS-MIP-SpecificParameters', mode=MODE_TYPE, tag=(39, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'EPS-MIP-SpecificParameters')), opt=True)
    _IRI_Parameters_servingNodeAddress = OCT_STR(name='servingNodeAddress', mode=MODE_TYPE, tag=(40, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_visitedNetworkId = STR_UTF8(name='visitedNetworkId', mode=MODE_TYPE, tag=(41, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_mediaDecryption_info = SEQ_OF(name='mediaDecryption-info', mode=MODE_TYPE, tag=(42, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'MediaDecryption-info')), opt=True)
    _IRI_Parameters_servingS4_SGSN_address = OCT_STR(name='servingS4-SGSN-address', mode=MODE_TYPE, tag=(43, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_sipMessageHeaderOffer = OCT_STR(name='sipMessageHeaderOffer', mode=MODE_TYPE, tag=(44, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_sipMessageHeaderAnswer = OCT_STR(name='sipMessageHeaderAnswer', mode=MODE_TYPE, tag=(45, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_sdpOffer = OCT_STR(name='sdpOffer', mode=MODE_TYPE, tag=(46, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_sdpAnswer = OCT_STR(name='sdpAnswer', mode=MODE_TYPE, tag=(47, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_uLITimestamp = OCT_STR(name='uLITimestamp', mode=MODE_TYPE, tag=(48, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_uLITimestamp._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _IRI_Parameters_packetDataHeaderInformation = CHOICE(name='packetDataHeaderInformation', mode=MODE_TYPE, tag=(49, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PacketDataHeaderInformation')), opt=True)
    _IRI_Parameters_mediaSecFailureIndication = ENUM(name='mediaSecFailureIndication', mode=MODE_TYPE, tag=(50, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'MediaSecFailureIndication')), opt=True)
    _IRI_Parameters_csgIdentity = OCT_STR(name='csgIdentity', mode=MODE_TYPE, tag=(51, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_csgIdentity._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _IRI_Parameters_heNBIdentity = OCT_STR(name='heNBIdentity', mode=MODE_TYPE, tag=(52, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_heNBiPAddress = SEQ(name='heNBiPAddress', mode=MODE_TYPE, tag=(53, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')), opt=True)
    _IRI_Parameters_heNBLocation = SEQ(name='heNBLocation', mode=MODE_TYPE, tag=(54, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'HeNBLocation')), opt=True)
    _IRI_Parameters_tunnelProtocol = CHOICE(name='tunnelProtocol', mode=MODE_TYPE, tag=(55, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'TunnelProtocol')), opt=True)
    _IRI_Parameters_pANI_Header_Info = SEQ_OF(name='pANI-Header-Info', mode=MODE_TYPE, tag=(56, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_pANI_Header_Info__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EpsHI2Operations', 'PANI-Header-Info')))
    _IRI_Parameters_pANI_Header_Info._cont = __IRI_Parameters_pANI_Header_Info__item_
    _IRI_Parameters_imsVoIP = SET_OF(name='imsVoIP', mode=MODE_TYPE, tag=(57, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'IMS-VoIP-Correlation')), opt=True)
    _IRI_Parameters_xCAPmessage = OCT_STR(name='xCAPmessage', mode=MODE_TYPE, tag=(58, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_logicalFunctionInformation = SEQ(name='logicalFunctionInformation', mode=MODE_TYPE, tag=(59, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'DataNodeIdentifier')), opt=True)
    _IRI_Parameters_ccUnavailableReason = STR_PRINT(name='ccUnavailableReason', mode=MODE_TYPE, tag=(60, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_carrierSpecificData = OCT_STR(name='carrierSpecificData', mode=MODE_TYPE, tag=(61, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_current_previous_systems = SEQ(name='current-previous-systems', mode=MODE_TYPE, tag=(62, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'Current-Previous-Systems')), opt=True)
    _IRI_Parameters_change_Of_Target_Identity = SEQ(name='change-Of-Target-Identity', mode=MODE_TYPE, tag=(63, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'Change-Of-Target-Identity')), opt=True)
    _IRI_Parameters_requesting_Network_Identifier = OCT_STR(name='requesting-Network-Identifier', mode=MODE_TYPE, tag=(64, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_requesting_Node_Type = ENUM(name='requesting-Node-Type', mode=MODE_TYPE, tag=(65, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'Requesting-Node-Type')), opt=True)
    _IRI_Parameters_serving_System_Identifier = OCT_STR(name='serving-System-Identifier', mode=MODE_TYPE, tag=(66, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_proSeTargetType = ENUM(name='proSeTargetType', mode=MODE_TYPE, tag=(67, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'ProSeTargetType')), opt=True)
    _IRI_Parameters_proSeRelayMSISDN = OCT_STR(name='proSeRelayMSISDN', mode=MODE_TYPE, tag=(68, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_proSeRelayMSISDN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    _IRI_Parameters_proSeRelayIMSI = OCT_STR(name='proSeRelayIMSI', mode=MODE_TYPE, tag=(69, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_proSeRelayIMSI._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    _IRI_Parameters_proSeRelayIMEI = OCT_STR(name='proSeRelayIMEI', mode=MODE_TYPE, tag=(70, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_proSeRelayIMEI._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _IRI_Parameters_extendedLocParameters = SEQ(name='extendedLocParameters', mode=MODE_TYPE, tag=(71, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'ExtendedLocParameters')), opt=True)
    _IRI_Parameters_locationErrorCode = INT(name='locationErrorCode', mode=MODE_TYPE, tag=(72, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'LocationErrorCode')), opt=True)
    _IRI_Parameters_otherIdentities = SEQ_OF(name='otherIdentities', mode=MODE_TYPE, tag=(73, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_otherIdentities__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EpsHI2Operations', 'PartyInformation')))
    _IRI_Parameters_otherIdentities._cont = __IRI_Parameters_otherIdentities__item_
    _IRI_Parameters_deregistrationReason = CHOICE(name='deregistrationReason', mode=MODE_TYPE, tag=(74, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'DeregistrationReason')), opt=True)
    _IRI_Parameters_requesting_Node_Identifier = OCT_STR(name='requesting-Node-Identifier', mode=MODE_TYPE, tag=(75, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_roamingIndication = ENUM(name='roamingIndication', mode=MODE_TYPE, tag=(76, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'VoIPRoamingIndication')), opt=True)
    _IRI_Parameters_cSREvent = ENUM(name='cSREvent', mode=MODE_TYPE, tag=(77, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'CSREvent')), opt=True)
    _IRI_Parameters_ptc = SEQ(name='ptc', mode=MODE_TYPE, tag=(78, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PTC')), opt=True)
    _IRI_Parameters_ptcEncryption = SEQ(name='ptcEncryption', mode=MODE_TYPE, tag=(79, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PTCEncryptionInfo')), opt=True)
    _IRI_Parameters_additionalCellIDs = SEQ_OF(name='additionalCellIDs', mode=MODE_TYPE, tag=(80, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_additionalCellIDs__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EpsHI2Operations', 'AdditionalCellID')))
    _IRI_Parameters_additionalCellIDs._cont = __IRI_Parameters_additionalCellIDs__item_
    _IRI_Parameters_scefID = STR_UTF8(name='scefID', mode=MODE_TYPE, tag=(81, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_national_HI2_ASN1parameters = SEQ(name='national-HI2-ASN1parameters', mode=MODE_TYPE, tag=(255, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'National-HI2-ASN1parameters')), opt=True)
    IRI_Parameters._cont = ASN1Dict([
        ('hi2epsDomainId', _IRI_Parameters_hi2epsDomainId),
        ('lawfulInterceptionIdentifier', _IRI_Parameters_lawfulInterceptionIdentifier),
        ('timeStamp', _IRI_Parameters_timeStamp),
        ('initiator', _IRI_Parameters_initiator),
        ('locationOfTheTarget', _IRI_Parameters_locationOfTheTarget),
        ('partyInformation', _IRI_Parameters_partyInformation),
        ('serviceCenterAddress', _IRI_Parameters_serviceCenterAddress),
        ('sMS', _IRI_Parameters_sMS),
        ('national-Parameters', _IRI_Parameters_national_Parameters),
        ('ePSCorrelationNumber', _IRI_Parameters_ePSCorrelationNumber),
        ('ePSevent', _IRI_Parameters_ePSevent),
        ('sgsnAddress', _IRI_Parameters_sgsnAddress),
        ('gPRSOperationErrorCode', _IRI_Parameters_gPRSOperationErrorCode),
        ('ggsnAddress', _IRI_Parameters_ggsnAddress),
        ('qOS', _IRI_Parameters_qOS),
        ('networkIdentifier', _IRI_Parameters_networkIdentifier),
        ('sMSOriginatingAddress', _IRI_Parameters_sMSOriginatingAddress),
        ('sMSTerminatingAddress', _IRI_Parameters_sMSTerminatingAddress),
        ('iMSevent', _IRI_Parameters_iMSevent),
        ('sIPMessage', _IRI_Parameters_sIPMessage),
        ('servingSGSN-number', _IRI_Parameters_servingSGSN_number),
        ('servingSGSN-address', _IRI_Parameters_servingSGSN_address),
        ('ldiEvent', _IRI_Parameters_ldiEvent),
        ('correlation', _IRI_Parameters_correlation),
        ('ePS-GTPV2-specificParameters', _IRI_Parameters_ePS_GTPV2_specificParameters),
        ('ePS-PMIP-specificParameters', _IRI_Parameters_ePS_PMIP_specificParameters),
        ('ePS-DSMIP-SpecificParameters', _IRI_Parameters_ePS_DSMIP_SpecificParameters),
        ('ePS-MIP-SpecificParameters', _IRI_Parameters_ePS_MIP_SpecificParameters),
        ('servingNodeAddress', _IRI_Parameters_servingNodeAddress),
        ('visitedNetworkId', _IRI_Parameters_visitedNetworkId),
        ('mediaDecryption-info', _IRI_Parameters_mediaDecryption_info),
        ('servingS4-SGSN-address', _IRI_Parameters_servingS4_SGSN_address),
        ('sipMessageHeaderOffer', _IRI_Parameters_sipMessageHeaderOffer),
        ('sipMessageHeaderAnswer', _IRI_Parameters_sipMessageHeaderAnswer),
        ('sdpOffer', _IRI_Parameters_sdpOffer),
        ('sdpAnswer', _IRI_Parameters_sdpAnswer),
        ('uLITimestamp', _IRI_Parameters_uLITimestamp),
        ('packetDataHeaderInformation', _IRI_Parameters_packetDataHeaderInformation),
        ('mediaSecFailureIndication', _IRI_Parameters_mediaSecFailureIndication),
        ('csgIdentity', _IRI_Parameters_csgIdentity),
        ('heNBIdentity', _IRI_Parameters_heNBIdentity),
        ('heNBiPAddress', _IRI_Parameters_heNBiPAddress),
        ('heNBLocation', _IRI_Parameters_heNBLocation),
        ('tunnelProtocol', _IRI_Parameters_tunnelProtocol),
        ('pANI-Header-Info', _IRI_Parameters_pANI_Header_Info),
        ('imsVoIP', _IRI_Parameters_imsVoIP),
        ('xCAPmessage', _IRI_Parameters_xCAPmessage),
        ('logicalFunctionInformation', _IRI_Parameters_logicalFunctionInformation),
        ('ccUnavailableReason', _IRI_Parameters_ccUnavailableReason),
        ('carrierSpecificData', _IRI_Parameters_carrierSpecificData),
        ('current-previous-systems', _IRI_Parameters_current_previous_systems),
        ('change-Of-Target-Identity', _IRI_Parameters_change_Of_Target_Identity),
        ('requesting-Network-Identifier', _IRI_Parameters_requesting_Network_Identifier),
        ('requesting-Node-Type', _IRI_Parameters_requesting_Node_Type),
        ('serving-System-Identifier', _IRI_Parameters_serving_System_Identifier),
        ('proSeTargetType', _IRI_Parameters_proSeTargetType),
        ('proSeRelayMSISDN', _IRI_Parameters_proSeRelayMSISDN),
        ('proSeRelayIMSI', _IRI_Parameters_proSeRelayIMSI),
        ('proSeRelayIMEI', _IRI_Parameters_proSeRelayIMEI),
        ('extendedLocParameters', _IRI_Parameters_extendedLocParameters),
        ('locationErrorCode', _IRI_Parameters_locationErrorCode),
        ('otherIdentities', _IRI_Parameters_otherIdentities),
        ('deregistrationReason', _IRI_Parameters_deregistrationReason),
        ('requesting-Node-Identifier', _IRI_Parameters_requesting_Node_Identifier),
        ('roamingIndication', _IRI_Parameters_roamingIndication),
        ('cSREvent', _IRI_Parameters_cSREvent),
        ('ptc', _IRI_Parameters_ptc),
        ('ptcEncryption', _IRI_Parameters_ptcEncryption),
        ('additionalCellIDs', _IRI_Parameters_additionalCellIDs),
        ('scefID', _IRI_Parameters_scefID),
        ('national-HI2-ASN1parameters', _IRI_Parameters_national_HI2_ASN1parameters),
        ])
    IRI_Parameters._ext = ['ldiEvent', 'correlation', 'ePS-GTPV2-specificParameters', 'ePS-PMIP-specificParameters', 'ePS-DSMIP-SpecificParameters', 'ePS-MIP-SpecificParameters', 'servingNodeAddress', 'visitedNetworkId', 'mediaDecryption-info', 'servingS4-SGSN-address', 'sipMessageHeaderOffer', 'sipMessageHeaderAnswer', 'sdpOffer', 'sdpAnswer', 'uLITimestamp', 'packetDataHeaderInformation', 'mediaSecFailureIndication', 'csgIdentity', 'heNBIdentity', 'heNBiPAddress', 'heNBLocation', 'tunnelProtocol', 'pANI-Header-Info', 'imsVoIP', 'xCAPmessage', 'logicalFunctionInformation', 'ccUnavailableReason', 'carrierSpecificData', 'current-previous-systems', 'change-Of-Target-Identity', 'requesting-Network-Identifier', 'requesting-Node-Type', 'serving-System-Identifier', 'proSeTargetType', 'proSeRelayMSISDN', 'proSeRelayIMSI', 'proSeRelayIMEI', 'extendedLocParameters', 'locationErrorCode', 'otherIdentities', 'deregistrationReason', 'requesting-Node-Identifier', 'roamingIndication', 'cSREvent', 'ptc', 'ptcEncryption', 'additionalCellIDs', 'scefID', 'national-HI2-ASN1parameters']
    
    #-----< DataNodeIdentifier >-----#
    DataNodeIdentifier = SEQ(name='DataNodeIdentifier', mode=MODE_TYPE)
    _DataNodeIdentifier_dataNodeAddress = CHOICE(name='dataNodeAddress', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    _DataNodeIdentifier_logicalFunctionType = ENUM(name='logicalFunctionType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'LogicalFunctionType')), opt=True)
    _DataNodeIdentifier_dataNodeName = STR_PRINT(name='dataNodeName', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DataNodeIdentifier_dataNodeName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=7, ub=25)], ev=None, er=[])
    DataNodeIdentifier._cont = ASN1Dict([
        ('dataNodeAddress', _DataNodeIdentifier_dataNodeAddress),
        ('logicalFunctionType', _DataNodeIdentifier_logicalFunctionType),
        ('dataNodeName', _DataNodeIdentifier_dataNodeName),
        ])
    DataNodeIdentifier._ext = []
    
    #-----< LogicalFunctionType >-----#
    LogicalFunctionType = ENUM(name='LogicalFunctionType', mode=MODE_TYPE)
    LogicalFunctionType._cont = ASN1Dict([('pDNGW', 0), ('mME', 1), ('sGW', 2), ('ePDG', 3), ('hSS', 4)])
    LogicalFunctionType._ext = []
    
    #-----< PANI-Header-Info >-----#
    PANI_Header_Info = SEQ(name='PANI-Header-Info', mode=MODE_TYPE)
    _PANI_Header_Info_access_Type = OCT_STR(name='access-Type', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PANI_Header_Info_access_Class = OCT_STR(name='access-Class', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PANI_Header_Info_network_Provided = NULL(name='network-Provided', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PANI_Header_Info_pANI_Location = SEQ(name='pANI-Location', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PANI-Location')), opt=True)
    PANI_Header_Info._cont = ASN1Dict([
        ('access-Type', _PANI_Header_Info_access_Type),
        ('access-Class', _PANI_Header_Info_access_Class),
        ('network-Provided', _PANI_Header_Info_network_Provided),
        ('pANI-Location', _PANI_Header_Info_pANI_Location),
        ])
    PANI_Header_Info._ext = []
    
    #-----< PANI-Location >-----#
    PANI_Location = SEQ(name='PANI-Location', mode=MODE_TYPE)
    _PANI_Location_raw_Location = OCT_STR(name='raw-Location', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PANI_Location_location = SEQ(name='location', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'Location')), opt=True)
    _PANI_Location_ePSLocation = SEQ(name='ePSLocation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'EPSLocation')), opt=True)
    PANI_Location._cont = ASN1Dict([
        ('raw-Location', _PANI_Location_raw_Location),
        ('location', _PANI_Location_location),
        ('ePSLocation', _PANI_Location_ePSLocation),
        ])
    PANI_Location._ext = []
    
    #-----< PartyInformation >-----#
    PartyInformation = SEQ(name='PartyInformation', mode=MODE_TYPE)
    _PartyInformation_party_Qualifier = ENUM(name='party-Qualifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PartyInformation_party_Qualifier._cont = ASN1Dict([('gPRSorEPS-Target', 3)])
    _PartyInformation_party_Qualifier._ext = []
    _PartyInformation_partyIdentity = SEQ(name='partyIdentity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PartyInformation_partyIdentity_imei = OCT_STR(name='imei', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_imei._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    __PartyInformation_partyIdentity_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_imsi._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    __PartyInformation_partyIdentity_msISDN = OCT_STR(name='msISDN', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_msISDN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    __PartyInformation_partyIdentity_e164_Format = OCT_STR(name='e164-Format', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_e164_Format._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    __PartyInformation_partyIdentity_sip_uri = OCT_STR(name='sip-uri', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_tel_uri = OCT_STR(name='tel-uri', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_nai = OCT_STR(name='nai', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_x_3GPP_Asserted_Identity = OCT_STR(name='x-3GPP-Asserted-Identity', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_xUI = OCT_STR(name='xUI', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_iMPI = OCT_STR(name='iMPI', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_extID = STR_UTF8(name='extID', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyInformation_partyIdentity._cont = ASN1Dict([
        ('imei', __PartyInformation_partyIdentity_imei),
        ('imsi', __PartyInformation_partyIdentity_imsi),
        ('msISDN', __PartyInformation_partyIdentity_msISDN),
        ('e164-Format', __PartyInformation_partyIdentity_e164_Format),
        ('sip-uri', __PartyInformation_partyIdentity_sip_uri),
        ('tel-uri', __PartyInformation_partyIdentity_tel_uri),
        ('nai', __PartyInformation_partyIdentity_nai),
        ('x-3GPP-Asserted-Identity', __PartyInformation_partyIdentity_x_3GPP_Asserted_Identity),
        ('xUI', __PartyInformation_partyIdentity_xUI),
        ('iMPI', __PartyInformation_partyIdentity_iMPI),
        ('extID', __PartyInformation_partyIdentity_extID),
        ])
    _PartyInformation_partyIdentity._ext = ['tel-uri', 'nai', 'x-3GPP-Asserted-Identity', 'xUI', 'iMPI', 'extID']
    _PartyInformation_services_Data_Information = SEQ(name='services-Data-Information', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'Services-Data-Information')), opt=True)
    PartyInformation._cont = ASN1Dict([
        ('party-Qualifier', _PartyInformation_party_Qualifier),
        ('partyIdentity', _PartyInformation_partyIdentity),
        ('services-Data-Information', _PartyInformation_services_Data_Information),
        ])
    PartyInformation._ext = []
    
    #-----< Location >-----#
    Location = SEQ(name='Location', mode=MODE_TYPE)
    _Location_e164_Number = OCT_STR(name='e164-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Location_e164_Number._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    _Location_globalCellID = OCT_STR(name='globalCellID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'GlobalCellID')), opt=True)
    _Location_rAI = OCT_STR(name='rAI', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'Rai')), opt=True)
    _Location_gsmLocation = CHOICE(name='gsmLocation', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'GSMLocation')), opt=True)
    _Location_umtsLocation = CHOICE(name='umtsLocation', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'UMTSLocation')), opt=True)
    _Location_sAI = OCT_STR(name='sAI', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'Sai')), opt=True)
    _Location_oldRAI = OCT_STR(name='oldRAI', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'Rai')), opt=True)
    _Location_civicAddress = CHOICE(name='civicAddress', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'CivicAddress')), opt=True)
    _Location_operatorSpecificInfo = OCT_STR(name='operatorSpecificInfo', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Location_uELocationTimestamp = CHOICE(name='uELocationTimestamp', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Location_uELocationTimestamp_timestamp = CHOICE(name='timestamp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    __Location_uELocationTimestamp_timestampUnknown = NULL(name='timestampUnknown', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Location_uELocationTimestamp._cont = ASN1Dict([
        ('timestamp', __Location_uELocationTimestamp_timestamp),
        ('timestampUnknown', __Location_uELocationTimestamp_timestampUnknown),
        ])
    _Location_uELocationTimestamp._ext = []
    Location._cont = ASN1Dict([
        ('e164-Number', _Location_e164_Number),
        ('globalCellID', _Location_globalCellID),
        ('rAI', _Location_rAI),
        ('gsmLocation', _Location_gsmLocation),
        ('umtsLocation', _Location_umtsLocation),
        ('sAI', _Location_sAI),
        ('oldRAI', _Location_oldRAI),
        ('civicAddress', _Location_civicAddress),
        ('operatorSpecificInfo', _Location_operatorSpecificInfo),
        ('uELocationTimestamp', _Location_uELocationTimestamp),
        ])
    Location._ext = ['oldRAI', 'civicAddress', 'operatorSpecificInfo', 'uELocationTimestamp']
    
    #-----< GlobalCellID >-----#
    GlobalCellID = OCT_STR(name='GlobalCellID', mode=MODE_TYPE)
    GlobalCellID._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=7)], ev=None, er=[])
    
    #-----< Rai >-----#
    Rai = OCT_STR(name='Rai', mode=MODE_TYPE)
    Rai._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    
    #-----< Sai >-----#
    Sai = OCT_STR(name='Sai', mode=MODE_TYPE)
    Sai._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    
    #-----< AdditionalCellID >-----#
    AdditionalCellID = SEQ(name='AdditionalCellID', mode=MODE_TYPE)
    _AdditionalCellID_nCGI = SEQ(name='nCGI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'NCGI')))
    _AdditionalCellID_gsmLocation = CHOICE(name='gsmLocation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'GSMLocation')), opt=True)
    _AdditionalCellID_umtsLocation = CHOICE(name='umtsLocation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'UMTSLocation')), opt=True)
    _AdditionalCellID_timeOfLocation = TIME_GEN(name='timeOfLocation', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    AdditionalCellID._cont = ASN1Dict([
        ('nCGI', _AdditionalCellID_nCGI),
        ('gsmLocation', _AdditionalCellID_gsmLocation),
        ('umtsLocation', _AdditionalCellID_umtsLocation),
        ('timeOfLocation', _AdditionalCellID_timeOfLocation),
        ])
    AdditionalCellID._ext = []
    
    #-----< MCC >-----#
    MCC = STR_NUM(name='MCC', mode=MODE_TYPE)
    MCC._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< MNC >-----#
    MNC = STR_NUM(name='MNC', mode=MODE_TYPE)
    MNC._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=3)], ev=None, er=[])
    
    #-----< PLMNID >-----#
    PLMNID = SEQ(name='PLMNID', mode=MODE_TYPE)
    _PLMNID_mCC = STR_NUM(name='mCC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'MCC')))
    _PLMNID_mNC = STR_NUM(name='mNC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'MNC')))
    PLMNID._cont = ASN1Dict([
        ('mCC', _PLMNID_mCC),
        ('mNC', _PLMNID_mNC),
        ])
    PLMNID._ext = []
    
    #-----< NRCellID >-----#
    NRCellID = BIT_STR(name='NRCellID', mode=MODE_TYPE)
    NRCellID._const_sz = ASN1Set(rv=[36], rr=[], ev=None, er=[])
    
    #-----< NCGI >-----#
    NCGI = SEQ(name='NCGI', mode=MODE_TYPE)
    _NCGI_pLMNID = SEQ(name='pLMNID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PLMNID')))
    _NCGI_nRCellID = BIT_STR(name='nRCellID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'NRCellID')))
    NCGI._cont = ASN1Dict([
        ('pLMNID', _NCGI_pLMNID),
        ('nRCellID', _NCGI_nRCellID),
        ])
    NCGI._ext = []
    
    #-----< GSMLocation >-----#
    GSMLocation = CHOICE(name='GSMLocation', mode=MODE_TYPE)
    _GSMLocation_geoCoordinates = SEQ(name='geoCoordinates', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_geoCoordinates_latitude = STR_PRINT(name='latitude', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_geoCoordinates_latitude._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=7, ub=10)], ev=None, er=[])
    __GSMLocation_geoCoordinates_longitude = STR_PRINT(name='longitude', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_geoCoordinates_longitude._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=8, ub=11)], ev=None, er=[])
    __GSMLocation_geoCoordinates_mapDatum = ENUM(name='mapDatum', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'MapDatum')), default='wGS84')
    __GSMLocation_geoCoordinates_azimuth = INT(name='azimuth', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GSMLocation_geoCoordinates_azimuth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=359)], ev=None, er=[])
    _GSMLocation_geoCoordinates._cont = ASN1Dict([
        ('latitude', __GSMLocation_geoCoordinates_latitude),
        ('longitude', __GSMLocation_geoCoordinates_longitude),
        ('mapDatum', __GSMLocation_geoCoordinates_mapDatum),
        ('azimuth', __GSMLocation_geoCoordinates_azimuth),
        ])
    _GSMLocation_geoCoordinates._ext = ['azimuth']
    _GSMLocation_utmCoordinates = SEQ(name='utmCoordinates', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_utmCoordinates_utm_East = STR_PRINT(name='utm-East', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_utmCoordinates_utm_East._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    __GSMLocation_utmCoordinates_utm_North = STR_PRINT(name='utm-North', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_utmCoordinates_utm_North._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    __GSMLocation_utmCoordinates_mapDatum = ENUM(name='mapDatum', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'MapDatum')), default='wGS84')
    __GSMLocation_utmCoordinates_azimuth = INT(name='azimuth', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GSMLocation_utmCoordinates_azimuth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=359)], ev=None, er=[])
    _GSMLocation_utmCoordinates._cont = ASN1Dict([
        ('utm-East', __GSMLocation_utmCoordinates_utm_East),
        ('utm-North', __GSMLocation_utmCoordinates_utm_North),
        ('mapDatum', __GSMLocation_utmCoordinates_mapDatum),
        ('azimuth', __GSMLocation_utmCoordinates_azimuth),
        ])
    _GSMLocation_utmCoordinates._ext = ['azimuth']
    _GSMLocation_utmRefCoordinates = SEQ(name='utmRefCoordinates', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_utmRefCoordinates_utmref_string = STR_PRINT(name='utmref-string', mode=MODE_TYPE)
    __GSMLocation_utmRefCoordinates_utmref_string._const_sz = ASN1Set(rv=[13], rr=[], ev=None, er=[])
    __GSMLocation_utmRefCoordinates_mapDatum = ENUM(name='mapDatum', mode=MODE_TYPE, typeref=ASN1RefType(('EpsHI2Operations', 'MapDatum')), default='wGS84')
    _GSMLocation_utmRefCoordinates._cont = ASN1Dict([
        ('utmref-string', __GSMLocation_utmRefCoordinates_utmref_string),
        ('mapDatum', __GSMLocation_utmRefCoordinates_mapDatum),
        ])
    _GSMLocation_utmRefCoordinates._ext = []
    _GSMLocation_wGS84Coordinates = OCT_STR(name='wGS84Coordinates', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    GSMLocation._cont = ASN1Dict([
        ('geoCoordinates', _GSMLocation_geoCoordinates),
        ('utmCoordinates', _GSMLocation_utmCoordinates),
        ('utmRefCoordinates', _GSMLocation_utmRefCoordinates),
        ('wGS84Coordinates', _GSMLocation_wGS84Coordinates),
        ])
    GSMLocation._ext = None
    
    #-----< MapDatum >-----#
    MapDatum = ENUM(name='MapDatum', mode=MODE_TYPE)
    MapDatum._cont = ASN1Dict([('wGS84', 0), ('wGS72', 1), ('eD50', 2)])
    MapDatum._ext = []
    
    #-----< UMTSLocation >-----#
    UMTSLocation = CHOICE(name='UMTSLocation', mode=MODE_TYPE)
    _UMTSLocation_point = SEQ(name='point', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'GA-Point')))
    _UMTSLocation_pointWithUnCertainty = SEQ(name='pointWithUnCertainty', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'GA-PointWithUnCertainty')))
    _UMTSLocation_polygon = SEQ_OF(name='polygon', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'GA-Polygon')))
    UMTSLocation._cont = ASN1Dict([
        ('point', _UMTSLocation_point),
        ('pointWithUnCertainty', _UMTSLocation_pointWithUnCertainty),
        ('polygon', _UMTSLocation_polygon),
        ])
    UMTSLocation._ext = None
    
    #-----< GeographicalCoordinates >-----#
    GeographicalCoordinates = SEQ(name='GeographicalCoordinates', mode=MODE_TYPE)
    _GeographicalCoordinates_latitudeSign = ENUM(name='latitudeSign', mode=MODE_TYPE)
    _GeographicalCoordinates_latitudeSign._cont = ASN1Dict([('north', 0), ('south', 1)])
    _GeographicalCoordinates_latitudeSign._ext = None
    _GeographicalCoordinates_latitude = INT(name='latitude', mode=MODE_TYPE)
    _GeographicalCoordinates_latitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8388607)], ev=None, er=[])
    _GeographicalCoordinates_longitude = INT(name='longitude', mode=MODE_TYPE)
    _GeographicalCoordinates_longitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    GeographicalCoordinates._cont = ASN1Dict([
        ('latitudeSign', _GeographicalCoordinates_latitudeSign),
        ('latitude', _GeographicalCoordinates_latitude),
        ('longitude', _GeographicalCoordinates_longitude),
        ])
    GeographicalCoordinates._ext = []
    
    #-----< GA-Point >-----#
    GA_Point = SEQ(name='GA-Point', mode=MODE_TYPE)
    _GA_Point_geographicalCoordinates = SEQ(name='geographicalCoordinates', mode=MODE_TYPE, typeref=ASN1RefType(('EpsHI2Operations', 'GeographicalCoordinates')))
    GA_Point._cont = ASN1Dict([
        ('geographicalCoordinates', _GA_Point_geographicalCoordinates),
        ])
    GA_Point._ext = []
    
    #-----< GA-PointWithUnCertainty >-----#
    GA_PointWithUnCertainty = SEQ(name='GA-PointWithUnCertainty', mode=MODE_TYPE)
    _GA_PointWithUnCertainty_geographicalCoordinates = SEQ(name='geographicalCoordinates', mode=MODE_TYPE, typeref=ASN1RefType(('EpsHI2Operations', 'GeographicalCoordinates')))
    _GA_PointWithUnCertainty_uncertaintyCode = INT(name='uncertaintyCode', mode=MODE_TYPE)
    _GA_PointWithUnCertainty_uncertaintyCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    GA_PointWithUnCertainty._cont = ASN1Dict([
        ('geographicalCoordinates', _GA_PointWithUnCertainty_geographicalCoordinates),
        ('uncertaintyCode', _GA_PointWithUnCertainty_uncertaintyCode),
        ])
    GA_PointWithUnCertainty._ext = None
    
    #-----< maxNrOfPoints >-----#
    maxNrOfPoints = INT(name='maxNrOfPoints', mode=MODE_VALUE)
    maxNrOfPoints._val = 15
    
    #-----< GA-Polygon >-----#
    GA_Polygon = SEQ_OF(name='GA-Polygon', mode=MODE_TYPE)
    _GA_Polygon__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    __GA_Polygon__item__geographicalCoordinates = SEQ(name='geographicalCoordinates', mode=MODE_TYPE, typeref=ASN1RefType(('EpsHI2Operations', 'GeographicalCoordinates')))
    _GA_Polygon__item_._cont = ASN1Dict([
        ('geographicalCoordinates', __GA_Polygon__item__geographicalCoordinates),
        ])
    _GA_Polygon__item_._ext = []
    GA_Polygon._cont = _GA_Polygon__item_
    GA_Polygon._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    
    #-----< SMS-report >-----#
    SMS_report = SEQ(name='SMS-report', mode=MODE_TYPE)
    _SMS_report_sMS_Contents = SEQ(name='sMS-Contents', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SMS_report_sMS_Contents_sms_initiator = ENUM(name='sms-initiator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SMS_report_sMS_Contents_sms_initiator._cont = ASN1Dict([('target', 0), ('server', 1), ('undefined-party', 2)])
    __SMS_report_sMS_Contents_sms_initiator._ext = []
    __SMS_report_sMS_Contents_transfer_status = ENUM(name='transfer-status', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SMS_report_sMS_Contents_transfer_status._cont = ASN1Dict([('succeed-transfer', 0), ('not-succeed-transfer', 1), ('undefined', 2)])
    __SMS_report_sMS_Contents_transfer_status._ext = []
    __SMS_report_sMS_Contents_other_message = ENUM(name='other-message', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SMS_report_sMS_Contents_other_message._cont = ASN1Dict([('yes', 0), ('no', 1), ('undefined', 2)])
    __SMS_report_sMS_Contents_other_message._ext = []
    __SMS_report_sMS_Contents_content = OCT_STR(name='content', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SMS_report_sMS_Contents_content._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=270)], ev=None, er=[])
    _SMS_report_sMS_Contents._cont = ASN1Dict([
        ('sms-initiator', __SMS_report_sMS_Contents_sms_initiator),
        ('transfer-status', __SMS_report_sMS_Contents_transfer_status),
        ('other-message', __SMS_report_sMS_Contents_other_message),
        ('content', __SMS_report_sMS_Contents_content),
        ])
    _SMS_report_sMS_Contents._ext = []
    SMS_report._cont = ASN1Dict([
        ('sMS-Contents', _SMS_report_sMS_Contents),
        ])
    SMS_report._ext = None
    
    #-----< EPSCorrelationNumber >-----#
    EPSCorrelationNumber = OCT_STR(name='EPSCorrelationNumber', mode=MODE_TYPE)
    
    #-----< CorrelationValues >-----#
    CorrelationValues = CHOICE(name='CorrelationValues', mode=MODE_TYPE)
    _CorrelationValues_iri_to_CC = SEQ(name='iri-to-CC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'IRI-to-CC-Correlation')))
    _CorrelationValues_iri_to_iri = OCT_STR(name='iri-to-iri', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'IRI-to-IRI-Correlation')))
    _CorrelationValues_both_IRI_CC = SEQ(name='both-IRI-CC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CorrelationValues_both_IRI_CC_iri_CC = SEQ(name='iri-CC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'IRI-to-CC-Correlation')))
    __CorrelationValues_both_IRI_CC_iri_IRI = OCT_STR(name='iri-IRI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'IRI-to-IRI-Correlation')))
    _CorrelationValues_both_IRI_CC._cont = ASN1Dict([
        ('iri-CC', __CorrelationValues_both_IRI_CC_iri_CC),
        ('iri-IRI', __CorrelationValues_both_IRI_CC_iri_IRI),
        ])
    _CorrelationValues_both_IRI_CC._ext = None
    CorrelationValues._cont = ASN1Dict([
        ('iri-to-CC', _CorrelationValues_iri_to_CC),
        ('iri-to-iri', _CorrelationValues_iri_to_iri),
        ('both-IRI-CC', _CorrelationValues_both_IRI_CC),
        ])
    CorrelationValues._ext = None
    
    #-----< IMS-VoIP-Correlation >-----#
    IMS_VoIP_Correlation = SET_OF(name='IMS-VoIP-Correlation', mode=MODE_TYPE)
    _IMS_VoIP_Correlation__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    __IMS_VoIP_Correlation__item__ims_iri = OCT_STR(name='ims-iri', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'IRI-to-IRI-Correlation')))
    __IMS_VoIP_Correlation__item__ims_cc = SEQ(name='ims-cc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'IRI-to-CC-Correlation')), opt=True)
    _IMS_VoIP_Correlation__item_._cont = ASN1Dict([
        ('ims-iri', __IMS_VoIP_Correlation__item__ims_iri),
        ('ims-cc', __IMS_VoIP_Correlation__item__ims_cc),
        ])
    _IMS_VoIP_Correlation__item_._ext = None
    IMS_VoIP_Correlation._cont = _IMS_VoIP_Correlation__item_
    
    #-----< IRI-to-CC-Correlation >-----#
    IRI_to_CC_Correlation = SEQ(name='IRI-to-CC-Correlation', mode=MODE_TYPE)
    _IRI_to_CC_Correlation_cc = SET_OF(name='cc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __IRI_to_CC_Correlation_cc__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _IRI_to_CC_Correlation_cc._cont = __IRI_to_CC_Correlation_cc__item_
    _IRI_to_CC_Correlation_iri = OCT_STR(name='iri', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    IRI_to_CC_Correlation._cont = ASN1Dict([
        ('cc', _IRI_to_CC_Correlation_cc),
        ('iri', _IRI_to_CC_Correlation_iri),
        ])
    IRI_to_CC_Correlation._ext = None
    
    #-----< IRI-to-IRI-Correlation >-----#
    IRI_to_IRI_Correlation = OCT_STR(name='IRI-to-IRI-Correlation', mode=MODE_TYPE)
    
    #-----< EPSEvent >-----#
    EPSEvent = ENUM(name='EPSEvent', mode=MODE_TYPE)
    EPSEvent._cont = ASN1Dict([('pDPContextActivation', 1), ('startOfInterceptionWithPDPContextActive', 2), ('pDPContextDeactivation', 4), ('gPRSAttach', 5), ('gPRSDetach', 6), ('locationInfoUpdate', 10), ('sMS', 11), ('pDPContextModification', 13), ('servingSystem', 14), ('startOfInterceptionWithMSAttached', 15), ('e-UTRANAttach', 16), ('e-UTRANDetach', 17), ('bearerActivation', 18), ('startOfInterceptionWithActiveBearer', 19), ('bearerModification', 20), ('bearerDeactivation', 21), ('uERequestedBearerResourceModification', 22), ('uERequestedPDNConnectivity', 23), ('uERequestedPDNDisconnection', 24), ('trackingAreaEpsLocationUpdate', 25), ('servingEvolvedPacketSystem', 26), ('pMIPAttachTunnelActivation', 27), ('pMIPDetachTunnelDeactivation', 28), ('startOfInterceptWithActivePMIPTunnel', 29), ('pMIPPdnGwInitiatedPdnDisconnection', 30), ('mIPRegistrationTunnelActivation', 31), ('mIPDeregistrationTunnelDeactivation', 32), ('startOfInterceptWithActiveMIPTunnel', 33), ('dSMIPRegistrationTunnelActivation', 34), ('dSMIPDeregistrationTunnelDeactivation', 35), ('startOfInterceptWithActiveDsmipTunnel', 36), ('dSMipHaSwitch', 37), ('pMIPResourceAllocationDeactivation', 38), ('mIPResourceAllocationDeactivation', 39), ('pMIPsessionModification', 40), ('startOfInterceptWithEUTRANAttachedUE', 41), ('dSMIPSessionModification', 42), ('packetDataHeaderInformation', 43), ('hSS-Subscriber-Record-Change', 44), ('registration-Termination', 45), ('location-Up-Date', 46), ('cancel-Location', 47), ('register-Location', 48), ('location-Information-Request', 49), ('proSeRemoteUEReport', 50), ('proSeRemoteUEStartOfCommunication', 51), ('proSeRemoteUEEndOfCommunication', 52), ('startOfLIwithProSeRemoteUEOngoingComm', 53), ('startOfLIforProSeUEtoNWRelay', 54), ('scefRequestednonIPPDNDisconnection', 55)])
    EPSEvent._ext = ['startOfInterceptionWithMSAttached', 'e-UTRANAttach', 'e-UTRANDetach', 'bearerActivation', 'startOfInterceptionWithActiveBearer', 'bearerModification', 'bearerDeactivation', 'uERequestedBearerResourceModification', 'uERequestedPDNConnectivity', 'uERequestedPDNDisconnection', 'trackingAreaEpsLocationUpdate', 'servingEvolvedPacketSystem', 'pMIPAttachTunnelActivation', 'pMIPDetachTunnelDeactivation', 'startOfInterceptWithActivePMIPTunnel', 'pMIPPdnGwInitiatedPdnDisconnection', 'mIPRegistrationTunnelActivation', 'mIPDeregistrationTunnelDeactivation', 'startOfInterceptWithActiveMIPTunnel', 'dSMIPRegistrationTunnelActivation', 'dSMIPDeregistrationTunnelDeactivation', 'startOfInterceptWithActiveDsmipTunnel', 'dSMipHaSwitch', 'pMIPResourceAllocationDeactivation', 'mIPResourceAllocationDeactivation', 'pMIPsessionModification', 'startOfInterceptWithEUTRANAttachedUE', 'dSMIPSessionModification', 'packetDataHeaderInformation', 'hSS-Subscriber-Record-Change', 'registration-Termination', 'location-Up-Date', 'cancel-Location', 'register-Location', 'location-Information-Request', 'proSeRemoteUEReport', 'proSeRemoteUEStartOfCommunication', 'proSeRemoteUEEndOfCommunication', 'startOfLIwithProSeRemoteUEOngoingComm', 'startOfLIforProSeUEtoNWRelay', 'scefRequestednonIPPDNDisconnection']
    
    #-----< CSREvent >-----#
    CSREvent = ENUM(name='CSREvent', mode=MODE_TYPE)
    CSREvent._cont = ASN1Dict([('cSREventMessage', 1)])
    CSREvent._ext = []
    
    #-----< IMSevent >-----#
    IMSevent = ENUM(name='IMSevent', mode=MODE_TYPE)
    IMSevent._cont = ASN1Dict([('unfilteredSIPmessage', 1), ('sIPheaderOnly', 2), ('decryptionKeysAvailable', 3), ('startOfInterceptionForIMSEstablishedSession', 4), ('xCAPRequest', 5), ('xCAPResponse', 6), ('ccUnavailable', 7), ('sMSOverIMS', 8), ('servingSystem', 9), ('subscriberRecordChange', 10), ('registrationTermination', 11), ('locationInformationRequest', 12)])
    IMSevent._ext = ['sIPheaderOnly', 'decryptionKeysAvailable', 'startOfInterceptionForIMSEstablishedSession', 'xCAPRequest', 'xCAPResponse', 'ccUnavailable', 'sMSOverIMS', 'servingSystem', 'subscriberRecordChange', 'registrationTermination', 'locationInformationRequest']
    
    #-----< Services-Data-Information >-----#
    Services_Data_Information = SEQ(name='Services-Data-Information', mode=MODE_TYPE)
    _Services_Data_Information_gPRS_parameters = SEQ(name='gPRS-parameters', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'GPRS-parameters')), opt=True)
    Services_Data_Information._cont = ASN1Dict([
        ('gPRS-parameters', _Services_Data_Information_gPRS_parameters),
        ])
    Services_Data_Information._ext = []
    
    #-----< GPRS-parameters >-----#
    GPRS_parameters = SEQ(name='GPRS-parameters', mode=MODE_TYPE)
    _GPRS_parameters_pDP_address_allocated_to_the_target = CHOICE(name='pDP-address-allocated-to-the-target', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    _GPRS_parameters_aPN = OCT_STR(name='aPN', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GPRS_parameters_aPN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=100)], ev=None, er=[])
    _GPRS_parameters_pDP_type = OCT_STR(name='pDP-type', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GPRS_parameters_pDP_type._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _GPRS_parameters_nSAPI = OCT_STR(name='nSAPI', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GPRS_parameters_nSAPI._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _GPRS_parameters_additionalIPaddress = CHOICE(name='additionalIPaddress', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    GPRS_parameters._cont = ASN1Dict([
        ('pDP-address-allocated-to-the-target', _GPRS_parameters_pDP_address_allocated_to_the_target),
        ('aPN', _GPRS_parameters_aPN),
        ('pDP-type', _GPRS_parameters_pDP_type),
        ('nSAPI', _GPRS_parameters_nSAPI),
        ('additionalIPaddress', _GPRS_parameters_additionalIPaddress),
        ])
    GPRS_parameters._ext = ['nSAPI', 'additionalIPaddress']
    
    #-----< GPRSOperationErrorCode >-----#
    GPRSOperationErrorCode = OCT_STR(name='GPRSOperationErrorCode', mode=MODE_TYPE)
    
    #-----< LDIevent >-----#
    LDIevent = ENUM(name='LDIevent', mode=MODE_TYPE)
    LDIevent._cont = ASN1Dict([('targetEntersIA', 1), ('targetLeavesIA', 2)])
    LDIevent._ext = []
    
    #-----< UmtsQos >-----#
    UmtsQos = CHOICE(name='UmtsQos', mode=MODE_TYPE)
    _UmtsQos_qosMobileRadio = OCT_STR(name='qosMobileRadio', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UmtsQos_qosGn = OCT_STR(name='qosGn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    UmtsQos._cont = ASN1Dict([
        ('qosMobileRadio', _UmtsQos_qosMobileRadio),
        ('qosGn', _UmtsQos_qosGn),
        ])
    UmtsQos._ext = None
    
    #-----< EPS-GTPV2-SpecificParameters >-----#
    EPS_GTPV2_SpecificParameters = SEQ(name='EPS-GTPV2-SpecificParameters', mode=MODE_TYPE)
    _EPS_GTPV2_SpecificParameters_pDNAddressAllocation = OCT_STR(name='pDNAddressAllocation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_aPN = OCT_STR(name='aPN', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_aPN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=100)], ev=None, er=[])
    _EPS_GTPV2_SpecificParameters_protConfigOptions = SEQ(name='protConfigOptions', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'ProtConfigOptions')), opt=True)
    _EPS_GTPV2_SpecificParameters_attachType = OCT_STR(name='attachType', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_attachType._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _EPS_GTPV2_SpecificParameters_ePSBearerIdentity = OCT_STR(name='ePSBearerIdentity', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_detachType = OCT_STR(name='detachType', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_detachType._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _EPS_GTPV2_SpecificParameters_rATType = OCT_STR(name='rATType', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_rATType._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _EPS_GTPV2_SpecificParameters_failedBearerActivationReason = OCT_STR(name='failedBearerActivationReason', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_failedBearerActivationReason._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _EPS_GTPV2_SpecificParameters_ePSBearerQoS = OCT_STR(name='ePSBearerQoS', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_bearerActivationType = ENUM(name='bearerActivationType', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'TypeOfBearer')), opt=True)
    _EPS_GTPV2_SpecificParameters_aPN_AMBR = OCT_STR(name='aPN-AMBR', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_procedureTransactionId = OCT_STR(name='procedureTransactionId', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_linkedEPSBearerId = OCT_STR(name='linkedEPSBearerId', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_tFT = OCT_STR(name='tFT', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_handoverIndication = NULL(name='handoverIndication', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_failedBearerModReason = OCT_STR(name='failedBearerModReason', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_failedBearerModReason._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _EPS_GTPV2_SpecificParameters_trafficAggregateDescription = OCT_STR(name='trafficAggregateDescription', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_failedTAUReason = OCT_STR(name='failedTAUReason', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_failedTAUReason._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _EPS_GTPV2_SpecificParameters_failedEUTRANAttachReason = OCT_STR(name='failedEUTRANAttachReason', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_failedEUTRANAttachReason._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _EPS_GTPV2_SpecificParameters_servingMMEaddress = OCT_STR(name='servingMMEaddress', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_bearerDeactivationType = ENUM(name='bearerDeactivationType', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'TypeOfBearer')), opt=True)
    _EPS_GTPV2_SpecificParameters_bearerDeactivationCause = OCT_STR(name='bearerDeactivationCause', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_bearerDeactivationCause._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _EPS_GTPV2_SpecificParameters_ePSlocationOfTheTarget = SEQ(name='ePSlocationOfTheTarget', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'EPSLocation')), opt=True)
    _EPS_GTPV2_SpecificParameters_pDNType = OCT_STR(name='pDNType', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_pDNType._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _EPS_GTPV2_SpecificParameters_requestType = OCT_STR(name='requestType', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_requestType._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _EPS_GTPV2_SpecificParameters_uEReqPDNConnFailReason = OCT_STR(name='uEReqPDNConnFailReason', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_uEReqPDNConnFailReason._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _EPS_GTPV2_SpecificParameters_extendedHandoverIndication = OCT_STR(name='extendedHandoverIndication', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_extendedHandoverIndication._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _EPS_GTPV2_SpecificParameters_uLITimestamp = OCT_STR(name='uLITimestamp', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_uLITimestamp._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _EPS_GTPV2_SpecificParameters_uELocalIPAddress = OCT_STR(name='uELocalIPAddress', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_uEUdpPort = OCT_STR(name='uEUdpPort', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_uEUdpPort._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _EPS_GTPV2_SpecificParameters_tWANIdentifier = OCT_STR(name='tWANIdentifier', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_tWANIdentifierTimestamp = OCT_STR(name='tWANIdentifierTimestamp', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_GTPV2_SpecificParameters_tWANIdentifierTimestamp._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _EPS_GTPV2_SpecificParameters_proSeRemoteUeContextConnected = SEQ_OF(name='proSeRemoteUeContextConnected', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'RemoteUeContextConnected')), opt=True)
    _EPS_GTPV2_SpecificParameters_proSeRemoteUeContextDisconnected = OCT_STR(name='proSeRemoteUeContextDisconnected', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'RemoteUeContextDisconnected')), opt=True)
    _EPS_GTPV2_SpecificParameters_secondaryRATUsageIndication = NULL(name='secondaryRATUsageIndication', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    EPS_GTPV2_SpecificParameters._cont = ASN1Dict([
        ('pDNAddressAllocation', _EPS_GTPV2_SpecificParameters_pDNAddressAllocation),
        ('aPN', _EPS_GTPV2_SpecificParameters_aPN),
        ('protConfigOptions', _EPS_GTPV2_SpecificParameters_protConfigOptions),
        ('attachType', _EPS_GTPV2_SpecificParameters_attachType),
        ('ePSBearerIdentity', _EPS_GTPV2_SpecificParameters_ePSBearerIdentity),
        ('detachType', _EPS_GTPV2_SpecificParameters_detachType),
        ('rATType', _EPS_GTPV2_SpecificParameters_rATType),
        ('failedBearerActivationReason', _EPS_GTPV2_SpecificParameters_failedBearerActivationReason),
        ('ePSBearerQoS', _EPS_GTPV2_SpecificParameters_ePSBearerQoS),
        ('bearerActivationType', _EPS_GTPV2_SpecificParameters_bearerActivationType),
        ('aPN-AMBR', _EPS_GTPV2_SpecificParameters_aPN_AMBR),
        ('procedureTransactionId', _EPS_GTPV2_SpecificParameters_procedureTransactionId),
        ('linkedEPSBearerId', _EPS_GTPV2_SpecificParameters_linkedEPSBearerId),
        ('tFT', _EPS_GTPV2_SpecificParameters_tFT),
        ('handoverIndication', _EPS_GTPV2_SpecificParameters_handoverIndication),
        ('failedBearerModReason', _EPS_GTPV2_SpecificParameters_failedBearerModReason),
        ('trafficAggregateDescription', _EPS_GTPV2_SpecificParameters_trafficAggregateDescription),
        ('failedTAUReason', _EPS_GTPV2_SpecificParameters_failedTAUReason),
        ('failedEUTRANAttachReason', _EPS_GTPV2_SpecificParameters_failedEUTRANAttachReason),
        ('servingMMEaddress', _EPS_GTPV2_SpecificParameters_servingMMEaddress),
        ('bearerDeactivationType', _EPS_GTPV2_SpecificParameters_bearerDeactivationType),
        ('bearerDeactivationCause', _EPS_GTPV2_SpecificParameters_bearerDeactivationCause),
        ('ePSlocationOfTheTarget', _EPS_GTPV2_SpecificParameters_ePSlocationOfTheTarget),
        ('pDNType', _EPS_GTPV2_SpecificParameters_pDNType),
        ('requestType', _EPS_GTPV2_SpecificParameters_requestType),
        ('uEReqPDNConnFailReason', _EPS_GTPV2_SpecificParameters_uEReqPDNConnFailReason),
        ('extendedHandoverIndication', _EPS_GTPV2_SpecificParameters_extendedHandoverIndication),
        ('uLITimestamp', _EPS_GTPV2_SpecificParameters_uLITimestamp),
        ('uELocalIPAddress', _EPS_GTPV2_SpecificParameters_uELocalIPAddress),
        ('uEUdpPort', _EPS_GTPV2_SpecificParameters_uEUdpPort),
        ('tWANIdentifier', _EPS_GTPV2_SpecificParameters_tWANIdentifier),
        ('tWANIdentifierTimestamp', _EPS_GTPV2_SpecificParameters_tWANIdentifierTimestamp),
        ('proSeRemoteUeContextConnected', _EPS_GTPV2_SpecificParameters_proSeRemoteUeContextConnected),
        ('proSeRemoteUeContextDisconnected', _EPS_GTPV2_SpecificParameters_proSeRemoteUeContextDisconnected),
        ('secondaryRATUsageIndication', _EPS_GTPV2_SpecificParameters_secondaryRATUsageIndication),
        ])
    EPS_GTPV2_SpecificParameters._ext = ['pDNType', 'requestType', 'uEReqPDNConnFailReason', 'extendedHandoverIndication', 'uLITimestamp', 'uELocalIPAddress', 'uEUdpPort', 'tWANIdentifier', 'tWANIdentifierTimestamp', 'proSeRemoteUeContextConnected', 'proSeRemoteUeContextDisconnected', 'secondaryRATUsageIndication']
    
    #-----< TypeOfBearer >-----#
    TypeOfBearer = ENUM(name='TypeOfBearer', mode=MODE_TYPE)
    TypeOfBearer._cont = ASN1Dict([('defaultBearer', 1), ('dedicatedBearer', 2)])
    TypeOfBearer._ext = []
    
    #-----< EPSLocation >-----#
    EPSLocation = SEQ(name='EPSLocation', mode=MODE_TYPE)
    _EPSLocation_userLocationInfo = OCT_STR(name='userLocationInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPSLocation_userLocationInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=39)], ev=None, er=[])
    _EPSLocation_gsmLocation = CHOICE(name='gsmLocation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'GSMLocation')), opt=True)
    _EPSLocation_umtsLocation = CHOICE(name='umtsLocation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'UMTSLocation')), opt=True)
    _EPSLocation_olduserLocationInfo = OCT_STR(name='olduserLocationInfo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPSLocation_olduserLocationInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=39)], ev=None, er=[])
    _EPSLocation_lastVisitedTAI = OCT_STR(name='lastVisitedTAI', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPSLocation_lastVisitedTAI._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    _EPSLocation_tAIlist = OCT_STR(name='tAIlist', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPSLocation_tAIlist._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=7, ub=97)], ev=None, er=[])
    _EPSLocation_threeGPP2Bsid = OCT_STR(name='threeGPP2Bsid', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPSLocation_threeGPP2Bsid._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=12)], ev=None, er=[])
    _EPSLocation_civicAddress = CHOICE(name='civicAddress', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'CivicAddress')), opt=True)
    _EPSLocation_operatorSpecificInfo = OCT_STR(name='operatorSpecificInfo', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPSLocation_uELocationTimestamp = CHOICE(name='uELocationTimestamp', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __EPSLocation_uELocationTimestamp_timestamp = CHOICE(name='timestamp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    __EPSLocation_uELocationTimestamp_timestampUnknown = NULL(name='timestampUnknown', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EPSLocation_uELocationTimestamp._cont = ASN1Dict([
        ('timestamp', __EPSLocation_uELocationTimestamp_timestamp),
        ('timestampUnknown', __EPSLocation_uELocationTimestamp_timestampUnknown),
        ])
    _EPSLocation_uELocationTimestamp._ext = []
    EPSLocation._cont = ASN1Dict([
        ('userLocationInfo', _EPSLocation_userLocationInfo),
        ('gsmLocation', _EPSLocation_gsmLocation),
        ('umtsLocation', _EPSLocation_umtsLocation),
        ('olduserLocationInfo', _EPSLocation_olduserLocationInfo),
        ('lastVisitedTAI', _EPSLocation_lastVisitedTAI),
        ('tAIlist', _EPSLocation_tAIlist),
        ('threeGPP2Bsid', _EPSLocation_threeGPP2Bsid),
        ('civicAddress', _EPSLocation_civicAddress),
        ('operatorSpecificInfo', _EPSLocation_operatorSpecificInfo),
        ('uELocationTimestamp', _EPSLocation_uELocationTimestamp),
        ])
    EPSLocation._ext = ['threeGPP2Bsid', 'civicAddress', 'operatorSpecificInfo', 'uELocationTimestamp']
    
    #-----< ProtConfigOptions >-----#
    ProtConfigOptions = SEQ(name='ProtConfigOptions', mode=MODE_TYPE)
    _ProtConfigOptions_ueToNetwork = OCT_STR(name='ueToNetwork', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProtConfigOptions_ueToNetwork._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=251)], ev=None, er=[])
    _ProtConfigOptions_networkToUe = OCT_STR(name='networkToUe', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProtConfigOptions_networkToUe._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=251)], ev=None, er=[])
    ProtConfigOptions._cont = ASN1Dict([
        ('ueToNetwork', _ProtConfigOptions_ueToNetwork),
        ('networkToUe', _ProtConfigOptions_networkToUe),
        ])
    ProtConfigOptions._ext = []
    
    #-----< RemoteUeContextConnected >-----#
    RemoteUeContextConnected = SEQ_OF(name='RemoteUeContextConnected', mode=MODE_TYPE)
    _RemoteUeContextConnected__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EpsHI2Operations', 'RemoteUEContext')))
    RemoteUeContextConnected._cont = _RemoteUeContextConnected__item_
    
    #-----< RemoteUEContext >-----#
    RemoteUEContext = SEQ(name='RemoteUEContext', mode=MODE_TYPE)
    _RemoteUEContext_remoteUserID = OCT_STR(name='remoteUserID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'RemoteUserID')))
    _RemoteUEContext_remoteUEIPInformation = OCT_STR(name='remoteUEIPInformation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'RemoteUEIPInformation')))
    RemoteUEContext._cont = ASN1Dict([
        ('remoteUserID', _RemoteUEContext_remoteUserID),
        ('remoteUEIPInformation', _RemoteUEContext_remoteUEIPInformation),
        ])
    RemoteUEContext._ext = []
    
    #-----< RemoteUserID >-----#
    RemoteUserID = OCT_STR(name='RemoteUserID', mode=MODE_TYPE)
    
    #-----< RemoteUEIPInformation >-----#
    RemoteUEIPInformation = OCT_STR(name='RemoteUEIPInformation', mode=MODE_TYPE)
    
    #-----< RemoteUeContextDisconnected >-----#
    RemoteUeContextDisconnected = OCT_STR(name='RemoteUeContextDisconnected', mode=MODE_TYPE, typeref=ASN1RefType(('EpsHI2Operations', 'RemoteUserID')))
    
    #-----< EPS-PMIP-SpecificParameters >-----#
    EPS_PMIP_SpecificParameters = SEQ(name='EPS-PMIP-SpecificParameters', mode=MODE_TYPE)
    _EPS_PMIP_SpecificParameters_lifetime = INT(name='lifetime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_PMIP_SpecificParameters_lifetime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _EPS_PMIP_SpecificParameters_accessTechnologyType = OCT_STR(name='accessTechnologyType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_PMIP_SpecificParameters_accessTechnologyType._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _EPS_PMIP_SpecificParameters_aPN = OCT_STR(name='aPN', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_PMIP_SpecificParameters_aPN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=100)], ev=None, er=[])
    _EPS_PMIP_SpecificParameters_iPv6HomeNetworkPrefix = OCT_STR(name='iPv6HomeNetworkPrefix', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_PMIP_SpecificParameters_iPv6HomeNetworkPrefix._const_sz = ASN1Set(rv=[20], rr=[], ev=None, er=[])
    _EPS_PMIP_SpecificParameters_protConfigurationOption = OCT_STR(name='protConfigurationOption', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_PMIP_SpecificParameters_handoverIndication = OCT_STR(name='handoverIndication', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_PMIP_SpecificParameters_handoverIndication._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _EPS_PMIP_SpecificParameters_status = INT(name='status', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_PMIP_SpecificParameters_status._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _EPS_PMIP_SpecificParameters_revocationTrigger = INT(name='revocationTrigger', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_PMIP_SpecificParameters_revocationTrigger._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _EPS_PMIP_SpecificParameters_iPv4HomeAddress = OCT_STR(name='iPv4HomeAddress', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_PMIP_SpecificParameters_iPv4HomeAddress._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _EPS_PMIP_SpecificParameters_iPv6careOfAddress = OCT_STR(name='iPv6careOfAddress', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_PMIP_SpecificParameters_iPv4careOfAddress = OCT_STR(name='iPv4careOfAddress', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_PMIP_SpecificParameters_servingNetwork = OCT_STR(name='servingNetwork', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_PMIP_SpecificParameters_servingNetwork._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    _EPS_PMIP_SpecificParameters_dHCPv4AddressAllocationInd = OCT_STR(name='dHCPv4AddressAllocationInd', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_PMIP_SpecificParameters_dHCPv4AddressAllocationInd._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _EPS_PMIP_SpecificParameters_ePSlocationOfTheTarget = SEQ(name='ePSlocationOfTheTarget', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'EPSLocation')), opt=True)
    EPS_PMIP_SpecificParameters._cont = ASN1Dict([
        ('lifetime', _EPS_PMIP_SpecificParameters_lifetime),
        ('accessTechnologyType', _EPS_PMIP_SpecificParameters_accessTechnologyType),
        ('aPN', _EPS_PMIP_SpecificParameters_aPN),
        ('iPv6HomeNetworkPrefix', _EPS_PMIP_SpecificParameters_iPv6HomeNetworkPrefix),
        ('protConfigurationOption', _EPS_PMIP_SpecificParameters_protConfigurationOption),
        ('handoverIndication', _EPS_PMIP_SpecificParameters_handoverIndication),
        ('status', _EPS_PMIP_SpecificParameters_status),
        ('revocationTrigger', _EPS_PMIP_SpecificParameters_revocationTrigger),
        ('iPv4HomeAddress', _EPS_PMIP_SpecificParameters_iPv4HomeAddress),
        ('iPv6careOfAddress', _EPS_PMIP_SpecificParameters_iPv6careOfAddress),
        ('iPv4careOfAddress', _EPS_PMIP_SpecificParameters_iPv4careOfAddress),
        ('servingNetwork', _EPS_PMIP_SpecificParameters_servingNetwork),
        ('dHCPv4AddressAllocationInd', _EPS_PMIP_SpecificParameters_dHCPv4AddressAllocationInd),
        ('ePSlocationOfTheTarget', _EPS_PMIP_SpecificParameters_ePSlocationOfTheTarget),
        ])
    EPS_PMIP_SpecificParameters._ext = ['servingNetwork', 'dHCPv4AddressAllocationInd', 'ePSlocationOfTheTarget']
    
    #-----< EPS-DSMIP-SpecificParameters >-----#
    EPS_DSMIP_SpecificParameters = SEQ(name='EPS-DSMIP-SpecificParameters', mode=MODE_TYPE)
    _EPS_DSMIP_SpecificParameters_lifetime = INT(name='lifetime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_DSMIP_SpecificParameters_lifetime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _EPS_DSMIP_SpecificParameters_requestedIPv6HomePrefix = OCT_STR(name='requestedIPv6HomePrefix', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_DSMIP_SpecificParameters_requestedIPv6HomePrefix._const_sz = ASN1Set(rv=[25], rr=[], ev=None, er=[])
    _EPS_DSMIP_SpecificParameters_homeAddress = OCT_STR(name='homeAddress', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_DSMIP_SpecificParameters_homeAddress._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _EPS_DSMIP_SpecificParameters_iPv4careOfAddress = OCT_STR(name='iPv4careOfAddress', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_DSMIP_SpecificParameters_iPv4careOfAddress._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _EPS_DSMIP_SpecificParameters_iPv6careOfAddress = OCT_STR(name='iPv6careOfAddress', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_DSMIP_SpecificParameters_iPv6careOfAddress._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    _EPS_DSMIP_SpecificParameters_aPN = OCT_STR(name='aPN', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_DSMIP_SpecificParameters_aPN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=100)], ev=None, er=[])
    _EPS_DSMIP_SpecificParameters_status = INT(name='status', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_DSMIP_SpecificParameters_status._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _EPS_DSMIP_SpecificParameters_hSS_AAA_address = OCT_STR(name='hSS-AAA-address', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_DSMIP_SpecificParameters_targetPDN_GW_Address = OCT_STR(name='targetPDN-GW-Address', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    EPS_DSMIP_SpecificParameters._cont = ASN1Dict([
        ('lifetime', _EPS_DSMIP_SpecificParameters_lifetime),
        ('requestedIPv6HomePrefix', _EPS_DSMIP_SpecificParameters_requestedIPv6HomePrefix),
        ('homeAddress', _EPS_DSMIP_SpecificParameters_homeAddress),
        ('iPv4careOfAddress', _EPS_DSMIP_SpecificParameters_iPv4careOfAddress),
        ('iPv6careOfAddress', _EPS_DSMIP_SpecificParameters_iPv6careOfAddress),
        ('aPN', _EPS_DSMIP_SpecificParameters_aPN),
        ('status', _EPS_DSMIP_SpecificParameters_status),
        ('hSS-AAA-address', _EPS_DSMIP_SpecificParameters_hSS_AAA_address),
        ('targetPDN-GW-Address', _EPS_DSMIP_SpecificParameters_targetPDN_GW_Address),
        ])
    EPS_DSMIP_SpecificParameters._ext = []
    
    #-----< EPS-MIP-SpecificParameters >-----#
    EPS_MIP_SpecificParameters = SEQ(name='EPS-MIP-SpecificParameters', mode=MODE_TYPE)
    _EPS_MIP_SpecificParameters_lifetime = INT(name='lifetime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_MIP_SpecificParameters_lifetime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _EPS_MIP_SpecificParameters_homeAddress = OCT_STR(name='homeAddress', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_MIP_SpecificParameters_homeAddress._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _EPS_MIP_SpecificParameters_careOfAddress = OCT_STR(name='careOfAddress', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_MIP_SpecificParameters_careOfAddress._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _EPS_MIP_SpecificParameters_homeAgentAddress = OCT_STR(name='homeAgentAddress', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_MIP_SpecificParameters_homeAgentAddress._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _EPS_MIP_SpecificParameters_code = INT(name='code', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_MIP_SpecificParameters_code._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _EPS_MIP_SpecificParameters_foreignDomainAddress = OCT_STR(name='foreignDomainAddress', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_MIP_SpecificParameters_foreignDomainAddress._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    EPS_MIP_SpecificParameters._cont = ASN1Dict([
        ('lifetime', _EPS_MIP_SpecificParameters_lifetime),
        ('homeAddress', _EPS_MIP_SpecificParameters_homeAddress),
        ('careOfAddress', _EPS_MIP_SpecificParameters_careOfAddress),
        ('homeAgentAddress', _EPS_MIP_SpecificParameters_homeAgentAddress),
        ('code', _EPS_MIP_SpecificParameters_code),
        ('foreignDomainAddress', _EPS_MIP_SpecificParameters_foreignDomainAddress),
        ])
    EPS_MIP_SpecificParameters._ext = []
    
    #-----< MediaDecryption-info >-----#
    MediaDecryption_info = SEQ_OF(name='MediaDecryption-info', mode=MODE_TYPE)
    _MediaDecryption_info__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EpsHI2Operations', 'CCKeyInfo')))
    MediaDecryption_info._cont = _MediaDecryption_info__item_
    
    #-----< CCKeyInfo >-----#
    CCKeyInfo = SEQ(name='CCKeyInfo', mode=MODE_TYPE)
    _CCKeyInfo_cCCSID = OCT_STR(name='cCCSID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CCKeyInfo_cCDecKey = OCT_STR(name='cCDecKey', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CCKeyInfo_cCSalt = OCT_STR(name='cCSalt', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    CCKeyInfo._cont = ASN1Dict([
        ('cCCSID', _CCKeyInfo_cCCSID),
        ('cCDecKey', _CCKeyInfo_cCDecKey),
        ('cCSalt', _CCKeyInfo_cCSalt),
        ])
    CCKeyInfo._ext = []
    
    #-----< MediaSecFailureIndication >-----#
    MediaSecFailureIndication = ENUM(name='MediaSecFailureIndication', mode=MODE_TYPE)
    MediaSecFailureIndication._cont = ASN1Dict([('genericFailure', 0)])
    MediaSecFailureIndication._ext = []
    
    #-----< PacketDataHeaderInformation >-----#
    PacketDataHeaderInformation = CHOICE(name='PacketDataHeaderInformation', mode=MODE_TYPE)
    _PacketDataHeaderInformation_packetDataHeader = CHOICE(name='packetDataHeader', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PacketDataHeaderReport')))
    _PacketDataHeaderInformation_packetDataSummary = SEQ_OF(name='packetDataSummary', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PacketDataSummaryReport')))
    PacketDataHeaderInformation._cont = ASN1Dict([
        ('packetDataHeader', _PacketDataHeaderInformation_packetDataHeader),
        ('packetDataSummary', _PacketDataHeaderInformation_packetDataSummary),
        ])
    PacketDataHeaderInformation._ext = []
    
    #-----< PacketDataHeaderReport >-----#
    PacketDataHeaderReport = CHOICE(name='PacketDataHeaderReport', mode=MODE_TYPE)
    _PacketDataHeaderReport_packetDataHeaderMapped = SEQ(name='packetDataHeaderMapped', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PacketDataHeaderMapped')))
    _PacketDataHeaderReport_packetDataHeaderCopy = SEQ(name='packetDataHeaderCopy', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PacketDataHeaderCopy')))
    PacketDataHeaderReport._cont = ASN1Dict([
        ('packetDataHeaderMapped', _PacketDataHeaderReport_packetDataHeaderMapped),
        ('packetDataHeaderCopy', _PacketDataHeaderReport_packetDataHeaderCopy),
        ])
    PacketDataHeaderReport._ext = []
    
    #-----< PacketDataHeaderMapped >-----#
    PacketDataHeaderMapped = SEQ(name='PacketDataHeaderMapped', mode=MODE_TYPE)
    _PacketDataHeaderMapped_sourceIPAddress = SEQ(name='sourceIPAddress', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')))
    _PacketDataHeaderMapped_sourcePortNumber = INT(name='sourcePortNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketDataHeaderMapped_sourcePortNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _PacketDataHeaderMapped_destinationIPAddress = SEQ(name='destinationIPAddress', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')))
    _PacketDataHeaderMapped_destinationPortNumber = INT(name='destinationPortNumber', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketDataHeaderMapped_destinationPortNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _PacketDataHeaderMapped_transportProtocol = INT(name='transportProtocol', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PacketDataHeaderMapped_packetsize = INT(name='packetsize', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketDataHeaderMapped_flowLabel = INT(name='flowLabel', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketDataHeaderMapped_packetCount = INT(name='packetCount', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketDataHeaderMapped_direction = ENUM(name='direction', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'TPDU-direction')))
    PacketDataHeaderMapped._cont = ASN1Dict([
        ('sourceIPAddress', _PacketDataHeaderMapped_sourceIPAddress),
        ('sourcePortNumber', _PacketDataHeaderMapped_sourcePortNumber),
        ('destinationIPAddress', _PacketDataHeaderMapped_destinationIPAddress),
        ('destinationPortNumber', _PacketDataHeaderMapped_destinationPortNumber),
        ('transportProtocol', _PacketDataHeaderMapped_transportProtocol),
        ('packetsize', _PacketDataHeaderMapped_packetsize),
        ('flowLabel', _PacketDataHeaderMapped_flowLabel),
        ('packetCount', _PacketDataHeaderMapped_packetCount),
        ('direction', _PacketDataHeaderMapped_direction),
        ])
    PacketDataHeaderMapped._ext = []
    
    #-----< TPDU-direction >-----#
    TPDU_direction = ENUM(name='TPDU-direction', mode=MODE_TYPE)
    TPDU_direction._cont = ASN1Dict([('from-target', 1), ('to-target', 2), ('unknown', 3)])
    TPDU_direction._ext = None
    
    #-----< PacketDataHeaderCopy >-----#
    PacketDataHeaderCopy = SEQ(name='PacketDataHeaderCopy', mode=MODE_TYPE)
    _PacketDataHeaderCopy_direction = ENUM(name='direction', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'TPDU-direction')))
    _PacketDataHeaderCopy_headerCopy = OCT_STR(name='headerCopy', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PacketDataHeaderCopy._cont = ASN1Dict([
        ('direction', _PacketDataHeaderCopy_direction),
        ('headerCopy', _PacketDataHeaderCopy_headerCopy),
        ])
    PacketDataHeaderCopy._ext = []
    
    #-----< PacketDataSummaryReport >-----#
    PacketDataSummaryReport = SEQ_OF(name='PacketDataSummaryReport', mode=MODE_TYPE)
    _PacketDataSummaryReport__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EpsHI2Operations', 'PacketFlowSummary')))
    PacketDataSummaryReport._cont = _PacketDataSummaryReport__item_
    
    #-----< PacketFlowSummary >-----#
    PacketFlowSummary = SEQ(name='PacketFlowSummary', mode=MODE_TYPE)
    _PacketFlowSummary_sourceIPAddress = SEQ(name='sourceIPAddress', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')))
    _PacketFlowSummary_sourcePortNumber = INT(name='sourcePortNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketFlowSummary_sourcePortNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _PacketFlowSummary_destinationIPAddress = SEQ(name='destinationIPAddress', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')))
    _PacketFlowSummary_destinationPortNumber = INT(name='destinationPortNumber', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketFlowSummary_destinationPortNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _PacketFlowSummary_transportProtocol = INT(name='transportProtocol', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PacketFlowSummary_flowLabel = INT(name='flowLabel', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketFlowSummary_summaryPeriod = SEQ(name='summaryPeriod', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'ReportInterval')))
    _PacketFlowSummary_packetCount = INT(name='packetCount', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PacketFlowSummary_sumOfPacketSizes = INT(name='sumOfPacketSizes', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PacketFlowSummary_packetDataSummaryReason = ENUM(name='packetDataSummaryReason', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'ReportReason')))
    PacketFlowSummary._cont = ASN1Dict([
        ('sourceIPAddress', _PacketFlowSummary_sourceIPAddress),
        ('sourcePortNumber', _PacketFlowSummary_sourcePortNumber),
        ('destinationIPAddress', _PacketFlowSummary_destinationIPAddress),
        ('destinationPortNumber', _PacketFlowSummary_destinationPortNumber),
        ('transportProtocol', _PacketFlowSummary_transportProtocol),
        ('flowLabel', _PacketFlowSummary_flowLabel),
        ('summaryPeriod', _PacketFlowSummary_summaryPeriod),
        ('packetCount', _PacketFlowSummary_packetCount),
        ('sumOfPacketSizes', _PacketFlowSummary_sumOfPacketSizes),
        ('packetDataSummaryReason', _PacketFlowSummary_packetDataSummaryReason),
        ])
    PacketFlowSummary._ext = []
    
    #-----< ReportReason >-----#
    ReportReason = ENUM(name='ReportReason', mode=MODE_TYPE)
    ReportReason._cont = ASN1Dict([('timerExpired', 0), ('countThresholdHit', 1), ('pDPComtextDeactivated', 2), ('pDPContextModification', 3), ('otherOrUnknown', 4)])
    ReportReason._ext = []
    
    #-----< ReportInterval >-----#
    ReportInterval = SEQ(name='ReportInterval', mode=MODE_TYPE)
    _ReportInterval_firstPacketTimeStamp = CHOICE(name='firstPacketTimeStamp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _ReportInterval_lastPacketTimeStamp = CHOICE(name='lastPacketTimeStamp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    ReportInterval._cont = ASN1Dict([
        ('firstPacketTimeStamp', _ReportInterval_firstPacketTimeStamp),
        ('lastPacketTimeStamp', _ReportInterval_lastPacketTimeStamp),
        ])
    ReportInterval._ext = []
    
    #-----< TunnelProtocol >-----#
    TunnelProtocol = CHOICE(name='TunnelProtocol', mode=MODE_TYPE)
    _TunnelProtocol_rfc2868ValueField = OCT_STR(name='rfc2868ValueField', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TunnelProtocol_nativeIPSec = NULL(name='nativeIPSec', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    TunnelProtocol._cont = ASN1Dict([
        ('rfc2868ValueField', _TunnelProtocol_rfc2868ValueField),
        ('nativeIPSec', _TunnelProtocol_nativeIPSec),
        ])
    TunnelProtocol._ext = []
    
    #-----< HeNBLocation >-----#
    HeNBLocation = SEQ(name='HeNBLocation', mode=MODE_TYPE, typeref=ASN1RefType(('EpsHI2Operations', 'EPSLocation')))
    
    #-----< Requesting-Node-Type >-----#
    Requesting_Node_Type = ENUM(name='Requesting-Node-Type', mode=MODE_TYPE)
    Requesting_Node_Type._cont = ASN1Dict([('mSC', 1), ('sMS-Centre', 2), ('gMLC', 3), ('mME', 4), ('sGSN', 5)])
    Requesting_Node_Type._ext = []
    
    #-----< Change-Of-Target-Identity >-----#
    Change_Of_Target_Identity = SEQ(name='Change-Of-Target-Identity', mode=MODE_TYPE)
    _Change_Of_Target_Identity_new_MSISDN = SEQ(name='new-MSISDN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_new_A_MSISDN = SEQ(name='new-A-MSISDN', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_old_MSISDN = SEQ(name='old-MSISDN', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_old_A_MSISDN = SEQ(name='old-A-MSISDN', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_new_IMSI = SEQ(name='new-IMSI', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_old_IMSI = SEQ(name='old-IMSI', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_new_IMEI = SEQ(name='new-IMEI', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_old_IMEI = SEQ(name='old-IMEI', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_new_IMPI = SEQ(name='new-IMPI', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_old_IMPI = SEQ(name='old-IMPI', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_new_SIP_URI = SEQ(name='new-SIP-URI', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_old_SIP_URI = SEQ(name='old-SIP-URI', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_new_TEL_URI = SEQ(name='new-TEL-URI', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_old_TEL_URI = SEQ(name='old-TEL-URI', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PartyInformation')), opt=True)
    Change_Of_Target_Identity._cont = ASN1Dict([
        ('new-MSISDN', _Change_Of_Target_Identity_new_MSISDN),
        ('new-A-MSISDN', _Change_Of_Target_Identity_new_A_MSISDN),
        ('old-MSISDN', _Change_Of_Target_Identity_old_MSISDN),
        ('old-A-MSISDN', _Change_Of_Target_Identity_old_A_MSISDN),
        ('new-IMSI', _Change_Of_Target_Identity_new_IMSI),
        ('old-IMSI', _Change_Of_Target_Identity_old_IMSI),
        ('new-IMEI', _Change_Of_Target_Identity_new_IMEI),
        ('old-IMEI', _Change_Of_Target_Identity_old_IMEI),
        ('new-IMPI', _Change_Of_Target_Identity_new_IMPI),
        ('old-IMPI', _Change_Of_Target_Identity_old_IMPI),
        ('new-SIP-URI', _Change_Of_Target_Identity_new_SIP_URI),
        ('old-SIP-URI', _Change_Of_Target_Identity_old_SIP_URI),
        ('new-TEL-URI', _Change_Of_Target_Identity_new_TEL_URI),
        ('old-TEL-URI', _Change_Of_Target_Identity_old_TEL_URI),
        ])
    Change_Of_Target_Identity._ext = ['new-IMPI', 'old-IMPI', 'new-SIP-URI', 'old-SIP-URI', 'new-TEL-URI', 'old-TEL-URI']
    
    #-----< Current-Previous-Systems >-----#
    Current_Previous_Systems = SEQ(name='Current-Previous-Systems', mode=MODE_TYPE)
    _Current_Previous_Systems_serving_System_Identifier = OCT_STR(name='serving-System-Identifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Current_Previous_Systems_current_Serving_MME_Address = SEQ(name='current-Serving-MME-Address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'DataNodeIdentifier')), opt=True)
    _Current_Previous_Systems_previous_Serving_System_Identifier = OCT_STR(name='previous-Serving-System-Identifier', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Current_Previous_Systems_previous_Serving_MME_Address = SEQ(name='previous-Serving-MME-Address', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'DataNodeIdentifier')), opt=True)
    Current_Previous_Systems._cont = ASN1Dict([
        ('serving-System-Identifier', _Current_Previous_Systems_serving_System_Identifier),
        ('current-Serving-MME-Address', _Current_Previous_Systems_current_Serving_MME_Address),
        ('previous-Serving-System-Identifier', _Current_Previous_Systems_previous_Serving_System_Identifier),
        ('previous-Serving-MME-Address', _Current_Previous_Systems_previous_Serving_MME_Address),
        ])
    Current_Previous_Systems._ext = []
    
    #-----< ProSeTargetType >-----#
    ProSeTargetType = ENUM(name='ProSeTargetType', mode=MODE_TYPE)
    ProSeTargetType._cont = ASN1Dict([('pRoSeRemoteUE', 1), ('pRoSeUEtoNwRelay', 2)])
    ProSeTargetType._ext = []
    
    #-----< VoIPRoamingIndication >-----#
    VoIPRoamingIndication = ENUM(name='VoIPRoamingIndication', mode=MODE_TYPE)
    VoIPRoamingIndication._cont = ASN1Dict([('roamingLBO', 1), ('roamingS8HR', 2)])
    VoIPRoamingIndication._ext = []
    
    #-----< DeregistrationReason >-----#
    DeregistrationReason = CHOICE(name='DeregistrationReason', mode=MODE_TYPE)
    _DeregistrationReason_reason_CodeAVP = INT(name='reason-CodeAVP', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DeregistrationReason_server_AssignmentType = INT(name='server-AssignmentType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    DeregistrationReason._cont = ASN1Dict([
        ('reason-CodeAVP', _DeregistrationReason_reason_CodeAVP),
        ('server-AssignmentType', _DeregistrationReason_server_AssignmentType),
        ])
    DeregistrationReason._ext = []
    
    #-----< PTCEncryptionInfo >-----#
    PTCEncryptionInfo = SEQ(name='PTCEncryptionInfo', mode=MODE_TYPE)
    _PTCEncryptionInfo_cipher = STR_UTF8(name='cipher', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PTCEncryptionInfo_cryptoContext = STR_UTF8(name='cryptoContext', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTCEncryptionInfo_key = STR_UTF8(name='key', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PTCEncryptionInfo_keyEncoding = STR_UTF8(name='keyEncoding', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PTCEncryptionInfo_salt = STR_UTF8(name='salt', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTCEncryptionInfo_pTCOther = STR_UTF8(name='pTCOther', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    PTCEncryptionInfo._cont = ASN1Dict([
        ('cipher', _PTCEncryptionInfo_cipher),
        ('cryptoContext', _PTCEncryptionInfo_cryptoContext),
        ('key', _PTCEncryptionInfo_key),
        ('keyEncoding', _PTCEncryptionInfo_keyEncoding),
        ('salt', _PTCEncryptionInfo_salt),
        ('pTCOther', _PTCEncryptionInfo_pTCOther),
        ])
    PTCEncryptionInfo._ext = []
    
    #-----< PTC >-----#
    PTC = SEQ(name='PTC', mode=MODE_TYPE)
    _PTC_abandonCause = STR_UTF8(name='abandonCause', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_accessPolicyFailure = STR_UTF8(name='accessPolicyFailure', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_accessPolicyType = SEQ(name='accessPolicyType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'AccessPolicyType')), opt=True)
    _PTC_alertIndicator = ENUM(name='alertIndicator', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'AlertIndicator')), opt=True)
    _PTC_associatePresenceStatus = SEQ(name='associatePresenceStatus', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'AssociatePresenceStatus')), opt=True)
    _PTC_bearer_capability = STR_UTF8(name='bearer-capability', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_broadcastIndicator = BOOL(name='broadcastIndicator', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_contactID = STR_UTF8(name='contactID', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_emergency = ENUM(name='emergency', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'Emergency')), opt=True)
    _PTC_emergencyGroupState = SEQ(name='emergencyGroupState', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'EmergencyGroupState')), opt=True)
    _PTC_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _PTC_pTCType = ENUM(name='pTCType', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PTCType')), opt=True)
    _PTC_failureCode = STR_UTF8(name='failureCode', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_floorActivity = SEQ(name='floorActivity', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'FloorActivity')), opt=True)
    _PTC_floorSpeakerID = SEQ(name='floorSpeakerID', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PTCAddress')), opt=True)
    _PTC_groupAdSender = STR_UTF8(name='groupAdSender', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_groupAuthRule = ENUM(name='groupAuthRule', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'GroupAuthRule')), opt=True)
    _PTC_groupCharacteristics = STR_UTF8(name='groupCharacteristics', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_holdRetrieveInd = BOOL(name='holdRetrieveInd', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_imminentPerilInd = ENUM(name='imminentPerilInd', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'ImminentPerilInd')), opt=True)
    _PTC_implicitFloorReq = ENUM(name='implicitFloorReq', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'ImplicitFloorReq')), opt=True)
    _PTC_initiationCause = ENUM(name='initiationCause', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'InitiationCause')), opt=True)
    _PTC_invitationCause = STR_UTF8(name='invitationCause', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_iPAPartyID = STR_UTF8(name='iPAPartyID', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_iPADirection = ENUM(name='iPADirection', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'IPADirection')), opt=True)
    _PTC_listManagementAction = ENUM(name='listManagementAction', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'ListManagementAction')), opt=True)
    _PTC_listManagementFailure = STR_UTF8(name='listManagementFailure', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_listManagementType = ENUM(name='listManagementType', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'ListManagementType')), opt=True)
    _PTC_maxTBTime = STR_UTF8(name='maxTBTime', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_mCPTTGroupID = STR_UTF8(name='mCPTTGroupID', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_mCPTTID = STR_UTF8(name='mCPTTID', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_mCPTTInd = BOOL(name='mCPTTInd', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_location = SEQ(name='location', mode=MODE_TYPE, tag=(36, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'Location')), opt=True)
    _PTC_mCPTTOrganizationName = STR_UTF8(name='mCPTTOrganizationName', mode=MODE_TYPE, tag=(37, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_mediaStreamAvail = BOOL(name='mediaStreamAvail', mode=MODE_TYPE, tag=(38, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_priority_Level = ENUM(name='priority-Level', mode=MODE_TYPE, tag=(40, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'Priority-Level')), opt=True)
    _PTC_preEstSessionID = STR_UTF8(name='preEstSessionID', mode=MODE_TYPE, tag=(41, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_preEstStatus = ENUM(name='preEstStatus', mode=MODE_TYPE, tag=(42, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PreEstStatus')), opt=True)
    _PTC_pTCGroupID = STR_UTF8(name='pTCGroupID', mode=MODE_TYPE, tag=(43, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCIDList = STR_UTF8(name='pTCIDList', mode=MODE_TYPE, tag=(44, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCMediaCapability = STR_UTF8(name='pTCMediaCapability', mode=MODE_TYPE, tag=(45, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCOriginatingId = STR_UTF8(name='pTCOriginatingId', mode=MODE_TYPE, tag=(46, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCOther = STR_UTF8(name='pTCOther', mode=MODE_TYPE, tag=(47, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCParticipants = STR_UTF8(name='pTCParticipants', mode=MODE_TYPE, tag=(48, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCParty = STR_UTF8(name='pTCParty', mode=MODE_TYPE, tag=(49, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCPartyDrop = STR_UTF8(name='pTCPartyDrop', mode=MODE_TYPE, tag=(50, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCSessionInfo = STR_UTF8(name='pTCSessionInfo', mode=MODE_TYPE, tag=(51, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCServerURI = STR_UTF8(name='pTCServerURI', mode=MODE_TYPE, tag=(52, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCUserAccessPolicy = STR_UTF8(name='pTCUserAccessPolicy', mode=MODE_TYPE, tag=(53, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCAddress = SEQ(name='pTCAddress', mode=MODE_TYPE, tag=(54, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PTCAddress')), opt=True)
    _PTC_queuedFloorControl = BOOL(name='queuedFloorControl', mode=MODE_TYPE, tag=(55, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_queuedPosition = STR_UTF8(name='queuedPosition', mode=MODE_TYPE, tag=(56, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_registrationRequest = ENUM(name='registrationRequest', mode=MODE_TYPE, tag=(57, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'RegistrationRequest')), opt=True)
    _PTC_registrationOutcome = ENUM(name='registrationOutcome', mode=MODE_TYPE, tag=(58, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'RegistrationOutcome')), opt=True)
    _PTC_retrieveID = STR_UTF8(name='retrieveID', mode=MODE_TYPE, tag=(59, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_rTPSetting = SEQ(name='rTPSetting', mode=MODE_TYPE, tag=(60, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'RTPSetting')), opt=True)
    _PTC_talkBurstPriority = ENUM(name='talkBurstPriority', mode=MODE_TYPE, tag=(61, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'Priority-Level')), opt=True)
    _PTC_talkBurstReason = STR_VIS(name='talkBurstReason', mode=MODE_TYPE, tag=(62, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'Talk-burst-reason-code')), opt=True)
    _PTC_talkburstControlSetting = SEQ(name='talkburstControlSetting', mode=MODE_TYPE, tag=(63, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'TalkburstControlSetting')), opt=True)
    _PTC_targetPresenceStatus = STR_UTF8(name='targetPresenceStatus', mode=MODE_TYPE, tag=(64, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_port_Number = INT(name='port-Number', mode=MODE_TYPE, tag=(65, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_port_Number._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    PTC._cont = ASN1Dict([
        ('abandonCause', _PTC_abandonCause),
        ('accessPolicyFailure', _PTC_accessPolicyFailure),
        ('accessPolicyType', _PTC_accessPolicyType),
        ('alertIndicator', _PTC_alertIndicator),
        ('associatePresenceStatus', _PTC_associatePresenceStatus),
        ('bearer-capability', _PTC_bearer_capability),
        ('broadcastIndicator', _PTC_broadcastIndicator),
        ('contactID', _PTC_contactID),
        ('emergency', _PTC_emergency),
        ('emergencyGroupState', _PTC_emergencyGroupState),
        ('timeStamp', _PTC_timeStamp),
        ('pTCType', _PTC_pTCType),
        ('failureCode', _PTC_failureCode),
        ('floorActivity', _PTC_floorActivity),
        ('floorSpeakerID', _PTC_floorSpeakerID),
        ('groupAdSender', _PTC_groupAdSender),
        ('groupAuthRule', _PTC_groupAuthRule),
        ('groupCharacteristics', _PTC_groupCharacteristics),
        ('holdRetrieveInd', _PTC_holdRetrieveInd),
        ('imminentPerilInd', _PTC_imminentPerilInd),
        ('implicitFloorReq', _PTC_implicitFloorReq),
        ('initiationCause', _PTC_initiationCause),
        ('invitationCause', _PTC_invitationCause),
        ('iPAPartyID', _PTC_iPAPartyID),
        ('iPADirection', _PTC_iPADirection),
        ('listManagementAction', _PTC_listManagementAction),
        ('listManagementFailure', _PTC_listManagementFailure),
        ('listManagementType', _PTC_listManagementType),
        ('maxTBTime', _PTC_maxTBTime),
        ('mCPTTGroupID', _PTC_mCPTTGroupID),
        ('mCPTTID', _PTC_mCPTTID),
        ('mCPTTInd', _PTC_mCPTTInd),
        ('location', _PTC_location),
        ('mCPTTOrganizationName', _PTC_mCPTTOrganizationName),
        ('mediaStreamAvail', _PTC_mediaStreamAvail),
        ('priority-Level', _PTC_priority_Level),
        ('preEstSessionID', _PTC_preEstSessionID),
        ('preEstStatus', _PTC_preEstStatus),
        ('pTCGroupID', _PTC_pTCGroupID),
        ('pTCIDList', _PTC_pTCIDList),
        ('pTCMediaCapability', _PTC_pTCMediaCapability),
        ('pTCOriginatingId', _PTC_pTCOriginatingId),
        ('pTCOther', _PTC_pTCOther),
        ('pTCParticipants', _PTC_pTCParticipants),
        ('pTCParty', _PTC_pTCParty),
        ('pTCPartyDrop', _PTC_pTCPartyDrop),
        ('pTCSessionInfo', _PTC_pTCSessionInfo),
        ('pTCServerURI', _PTC_pTCServerURI),
        ('pTCUserAccessPolicy', _PTC_pTCUserAccessPolicy),
        ('pTCAddress', _PTC_pTCAddress),
        ('queuedFloorControl', _PTC_queuedFloorControl),
        ('queuedPosition', _PTC_queuedPosition),
        ('registrationRequest', _PTC_registrationRequest),
        ('registrationOutcome', _PTC_registrationOutcome),
        ('retrieveID', _PTC_retrieveID),
        ('rTPSetting', _PTC_rTPSetting),
        ('talkBurstPriority', _PTC_talkBurstPriority),
        ('talkBurstReason', _PTC_talkBurstReason),
        ('talkburstControlSetting', _PTC_talkburstControlSetting),
        ('targetPresenceStatus', _PTC_targetPresenceStatus),
        ('port-Number', _PTC_port_Number),
        ])
    PTC._ext = []
    
    #-----< AccessPolicyType >-----#
    AccessPolicyType = SEQ(name='AccessPolicyType', mode=MODE_TYPE)
    _AccessPolicyType_userAccessPolicyAttempt = BOOL(name='userAccessPolicyAttempt', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AccessPolicyType_groupAuthorizationRulesAttempt = BOOL(name='groupAuthorizationRulesAttempt', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AccessPolicyType_userAccessPolicyQuery = BOOL(name='userAccessPolicyQuery', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AccessPolicyType_groupAuthorizationRulesQuery = BOOL(name='groupAuthorizationRulesQuery', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AccessPolicyType_userAccessPolicyResult = STR_UTF8(name='userAccessPolicyResult', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AccessPolicyType_groupAuthorizationRulesResult = STR_UTF8(name='groupAuthorizationRulesResult', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    AccessPolicyType._cont = ASN1Dict([
        ('userAccessPolicyAttempt', _AccessPolicyType_userAccessPolicyAttempt),
        ('groupAuthorizationRulesAttempt', _AccessPolicyType_groupAuthorizationRulesAttempt),
        ('userAccessPolicyQuery', _AccessPolicyType_userAccessPolicyQuery),
        ('groupAuthorizationRulesQuery', _AccessPolicyType_groupAuthorizationRulesQuery),
        ('userAccessPolicyResult', _AccessPolicyType_userAccessPolicyResult),
        ('groupAuthorizationRulesResult', _AccessPolicyType_groupAuthorizationRulesResult),
        ])
    AccessPolicyType._ext = []
    
    #-----< AlertIndicator >-----#
    AlertIndicator = ENUM(name='AlertIndicator', mode=MODE_TYPE)
    AlertIndicator._cont = ASN1Dict([('sent', 1), ('received', 2), ('cancelled', 3)])
    AlertIndicator._ext = []
    
    #-----< AssociatePresenceStatus >-----#
    AssociatePresenceStatus = SEQ(name='AssociatePresenceStatus', mode=MODE_TYPE)
    _AssociatePresenceStatus_presenceID = STR_UTF8(name='presenceID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AssociatePresenceStatus_presenceType = ENUM(name='presenceType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'PresenceType')))
    _AssociatePresenceStatus_presenceStatus = BOOL(name='presenceStatus', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    AssociatePresenceStatus._cont = ASN1Dict([
        ('presenceID', _AssociatePresenceStatus_presenceID),
        ('presenceType', _AssociatePresenceStatus_presenceType),
        ('presenceStatus', _AssociatePresenceStatus_presenceStatus),
        ])
    AssociatePresenceStatus._ext = []
    
    #-----< PresenceType >-----#
    PresenceType = ENUM(name='PresenceType', mode=MODE_TYPE)
    PresenceType._cont = ASN1Dict([('pTCClient', 1), ('pTCGroup', 2)])
    PresenceType._ext = []
    
    #-----< Emergency >-----#
    Emergency = ENUM(name='Emergency', mode=MODE_TYPE)
    Emergency._cont = ASN1Dict([('imminent', 1), ('peril', 2), ('cancel', 3)])
    Emergency._ext = []
    
    #-----< EmergencyGroupState >-----#
    EmergencyGroupState = SEQ(name='EmergencyGroupState', mode=MODE_TYPE)
    _EmergencyGroupState_clientEmergencyState = ENUM(name='clientEmergencyState', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EmergencyGroupState_clientEmergencyState._cont = ASN1Dict([('inform', 1), ('response', 2), ('cancelInform', 3), ('cancelResponse', 4)])
    _EmergencyGroupState_clientEmergencyState._ext = []
    _EmergencyGroupState_groupEmergencyState = ENUM(name='groupEmergencyState', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EmergencyGroupState_groupEmergencyState._cont = ASN1Dict([('inForm', 1), ('reSponse', 2), ('cancelInform', 3), ('cancelResponse', 4)])
    _EmergencyGroupState_groupEmergencyState._ext = []
    EmergencyGroupState._cont = ASN1Dict([
        ('clientEmergencyState', _EmergencyGroupState_clientEmergencyState),
        ('groupEmergencyState', _EmergencyGroupState_groupEmergencyState),
        ])
    EmergencyGroupState._ext = []
    
    #-----< PTCType >-----#
    PTCType = ENUM(name='PTCType', mode=MODE_TYPE)
    PTCType._cont = ASN1Dict([('pTCStartofInterception', 1), ('pTCServinSystem', 2), ('pTCSessionInitiation', 3), ('pTCSessionAbandonEndRecord', 4), ('pTCSessionStartContinueRecord', 5), ('pTCSessionEndRecord', 6), ('pTCPre-EstablishedSessionSessionRecord', 7), ('pTCInstantPersonalAlert', 8), ('pTCPartyJoin', 9), ('pTCPartyDrop', 10), ('pTCPartyHold-RetrieveRecord', 11), ('pTCMediaModification', 12), ('pTCGroupAdvertizement', 13), ('pTCFloorConttrol', 14), ('pTCTargetPressence', 15), ('pTCAssociatePressence', 16), ('pTCListManagementEvents', 17), ('pTCAccessPolicyEvents', 18), ('pTCMediaTypeNotification', 19), ('pTCGroupCallRequest', 20), ('pTCGroupCallCancel', 21), ('pTCGroupCallResponse', 22), ('pTCGroupCallInterrogate', 23), ('pTCMCPTTImminentGroupCall', 24), ('pTCCC', 25), ('pTCRegistration', 26), ('pTCEncryption', 27)])
    PTCType._ext = []
    
    #-----< FloorActivity >-----#
    FloorActivity = SEQ(name='FloorActivity', mode=MODE_TYPE)
    _FloorActivity_tBCP_Request = BOOL(name='tBCP-Request', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FloorActivity_tBCP_Granted = BOOL(name='tBCP-Granted', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FloorActivity_tBCP_Deny = BOOL(name='tBCP-Deny', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FloorActivity_tBCP_Queued = BOOL(name='tBCP-Queued', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FloorActivity_tBCP_Release = BOOL(name='tBCP-Release', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FloorActivity_tBCP_Revoke = BOOL(name='tBCP-Revoke', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FloorActivity_tBCP_Taken = BOOL(name='tBCP-Taken', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FloorActivity_tBCP_Idle = BOOL(name='tBCP-Idle', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    FloorActivity._cont = ASN1Dict([
        ('tBCP-Request', _FloorActivity_tBCP_Request),
        ('tBCP-Granted', _FloorActivity_tBCP_Granted),
        ('tBCP-Deny', _FloorActivity_tBCP_Deny),
        ('tBCP-Queued', _FloorActivity_tBCP_Queued),
        ('tBCP-Release', _FloorActivity_tBCP_Release),
        ('tBCP-Revoke', _FloorActivity_tBCP_Revoke),
        ('tBCP-Taken', _FloorActivity_tBCP_Taken),
        ('tBCP-Idle', _FloorActivity_tBCP_Idle),
        ])
    FloorActivity._ext = []
    
    #-----< GroupAuthRule >-----#
    GroupAuthRule = ENUM(name='GroupAuthRule', mode=MODE_TYPE)
    GroupAuthRule._cont = ASN1Dict([('allow-Initiating-PtcSession', 0), ('block-Initiating-PtcSession', 1), ('allow-Joining-PtcSession', 2), ('block-Joining-PtcSession', 3), ('allow-Add-Participants', 4), ('block-Add-Participants', 5), ('allow-Subscription-PtcSession-State', 6), ('block-Subscription-PtcSession-State', 7), ('allow-Anonymity', 8), ('forbid-Anonymity', 9)])
    GroupAuthRule._ext = []
    
    #-----< ImminentPerilInd >-----#
    ImminentPerilInd = ENUM(name='ImminentPerilInd', mode=MODE_TYPE)
    ImminentPerilInd._cont = ASN1Dict([('request', 1), ('response', 2), ('cancel', 3)])
    ImminentPerilInd._ext = []
    
    #-----< ImplicitFloorReq >-----#
    ImplicitFloorReq = ENUM(name='ImplicitFloorReq', mode=MODE_TYPE)
    ImplicitFloorReq._cont = ASN1Dict([('join', 1), ('rejoin', 2), ('release', 3)])
    ImplicitFloorReq._ext = []
    
    #-----< InitiationCause >-----#
    InitiationCause = ENUM(name='InitiationCause', mode=MODE_TYPE)
    InitiationCause._cont = ASN1Dict([('requests', 1), ('received', 2), ('pTCOriginatingId', 3)])
    InitiationCause._ext = []
    
    #-----< IPADirection >-----#
    IPADirection = ENUM(name='IPADirection', mode=MODE_TYPE)
    IPADirection._cont = ASN1Dict([('toTarget', 0), ('fromTarget', 1)])
    IPADirection._ext = []
    
    #-----< ListManagementAction >-----#
    ListManagementAction = ENUM(name='ListManagementAction', mode=MODE_TYPE)
    ListManagementAction._cont = ASN1Dict([('create', 1), ('modify', 2), ('retrieve', 3), ('delete', 4), ('notify', 5)])
    ListManagementAction._ext = []
    
    #-----< ListManagementType >-----#
    ListManagementType = ENUM(name='ListManagementType', mode=MODE_TYPE)
    ListManagementType._cont = ASN1Dict([('contactListManagementAttempt', 1), ('groupListManagementAttempt', 2), ('contactListManagementResult', 3), ('groupListManagementResult', 4), ('requestSuccessful', 5)])
    ListManagementType._ext = []
    
    #-----< Priority-Level >-----#
    Priority_Level = ENUM(name='Priority-Level', mode=MODE_TYPE)
    Priority_Level._cont = ASN1Dict([('pre-emptive', 0), ('high-priority', 1), ('normal-priority', 2), ('listen-only', 3)])
    Priority_Level._ext = []
    
    #-----< PreEstStatus >-----#
    PreEstStatus = ENUM(name='PreEstStatus', mode=MODE_TYPE)
    PreEstStatus._cont = ASN1Dict([('established', 1), ('modify', 2), ('released', 3)])
    PreEstStatus._ext = []
    
    #-----< PTCAddress >-----#
    PTCAddress = SEQ(name='PTCAddress', mode=MODE_TYPE)
    _PTCAddress_uri = STR_UTF8(name='uri', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PTCAddress_privacy_setting = BOOL(name='privacy-setting', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PTCAddress_privacy_alias = STR_VIS(name='privacy-alias', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTCAddress_nickname = STR_UTF8(name='nickname', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    PTCAddress._cont = ASN1Dict([
        ('uri', _PTCAddress_uri),
        ('privacy-setting', _PTCAddress_privacy_setting),
        ('privacy-alias', _PTCAddress_privacy_alias),
        ('nickname', _PTCAddress_nickname),
        ])
    PTCAddress._ext = []
    
    #-----< RegistrationRequest >-----#
    RegistrationRequest = ENUM(name='RegistrationRequest', mode=MODE_TYPE)
    RegistrationRequest._cont = ASN1Dict([('register', 1), ('re-register', 2), ('de-register', 3)])
    RegistrationRequest._ext = []
    
    #-----< RegistrationOutcome >-----#
    RegistrationOutcome = ENUM(name='RegistrationOutcome', mode=MODE_TYPE)
    RegistrationOutcome._cont = ASN1Dict([('success', 0), ('failure', 1)])
    RegistrationOutcome._ext = []
    
    #-----< RTPSetting >-----#
    RTPSetting = SEQ(name='RTPSetting', mode=MODE_TYPE)
    _RTPSetting_ip_address = SEQ(name='ip-address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')))
    _RTPSetting_port_number = INT(name='port-number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'Port-Number')))
    RTPSetting._cont = ASN1Dict([
        ('ip-address', _RTPSetting_ip_address),
        ('port-number', _RTPSetting_port_number),
        ])
    RTPSetting._ext = []
    
    #-----< Port-Number >-----#
    Port_Number = INT(name='Port-Number', mode=MODE_TYPE)
    Port_Number._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< TalkburstControlSetting >-----#
    TalkburstControlSetting = SEQ(name='TalkburstControlSetting', mode=MODE_TYPE)
    _TalkburstControlSetting_talk_BurstControlProtocol = STR_UTF8(name='talk-BurstControlProtocol', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TalkburstControlSetting_talk_Burst_parameters = SET_OF(name='talk-Burst-parameters', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __TalkburstControlSetting_talk_Burst_parameters__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _TalkburstControlSetting_talk_Burst_parameters._cont = __TalkburstControlSetting_talk_Burst_parameters__item_
    _TalkburstControlSetting_tBCP_PortNumber = INT(name='tBCP-PortNumber', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TalkburstControlSetting_tBCP_PortNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    TalkburstControlSetting._cont = ASN1Dict([
        ('talk-BurstControlProtocol', _TalkburstControlSetting_talk_BurstControlProtocol),
        ('talk-Burst-parameters', _TalkburstControlSetting_talk_Burst_parameters),
        ('tBCP-PortNumber', _TalkburstControlSetting_tBCP_PortNumber),
        ])
    TalkburstControlSetting._ext = []
    
    #-----< Talk-burst-reason-code >-----#
    Talk_burst_reason_code = STR_VIS(name='Talk-burst-reason-code', mode=MODE_TYPE)
    
    _all_ = [
        lawfulInterceptDomainId,
        threeGPPSUBDomainId,
        hi2epsDomainId,
        _EpsIRIsContent_epsiRIContent,
        _EpsIRIsContent_epsIRISequence,
        EpsIRIsContent,
        _EpsIRISequence__item_,
        EpsIRISequence,
        _EpsIRIContent_iRI_Begin_record,
        _EpsIRIContent_iRI_End_record,
        _EpsIRIContent_iRI_Continue_record,
        _EpsIRIContent_iRI_Report_record,
        EpsIRIContent,
        _IRI_Parameters_hi2epsDomainId,
        _IRI_Parameters_lawfulInterceptionIdentifier,
        _IRI_Parameters_timeStamp,
        _IRI_Parameters_initiator,
        _IRI_Parameters_locationOfTheTarget,
        __IRI_Parameters_partyInformation__item_,
        _IRI_Parameters_partyInformation,
        _IRI_Parameters_serviceCenterAddress,
        _IRI_Parameters_sMS,
        _IRI_Parameters_national_Parameters,
        _IRI_Parameters_ePSCorrelationNumber,
        _IRI_Parameters_ePSevent,
        _IRI_Parameters_sgsnAddress,
        _IRI_Parameters_gPRSOperationErrorCode,
        _IRI_Parameters_ggsnAddress,
        _IRI_Parameters_qOS,
        _IRI_Parameters_networkIdentifier,
        _IRI_Parameters_sMSOriginatingAddress,
        _IRI_Parameters_sMSTerminatingAddress,
        _IRI_Parameters_iMSevent,
        _IRI_Parameters_sIPMessage,
        _IRI_Parameters_servingSGSN_number,
        _IRI_Parameters_servingSGSN_address,
        _IRI_Parameters_ldiEvent,
        _IRI_Parameters_correlation,
        _IRI_Parameters_ePS_GTPV2_specificParameters,
        _IRI_Parameters_ePS_PMIP_specificParameters,
        _IRI_Parameters_ePS_DSMIP_SpecificParameters,
        _IRI_Parameters_ePS_MIP_SpecificParameters,
        _IRI_Parameters_servingNodeAddress,
        _IRI_Parameters_visitedNetworkId,
        _IRI_Parameters_mediaDecryption_info,
        _IRI_Parameters_servingS4_SGSN_address,
        _IRI_Parameters_sipMessageHeaderOffer,
        _IRI_Parameters_sipMessageHeaderAnswer,
        _IRI_Parameters_sdpOffer,
        _IRI_Parameters_sdpAnswer,
        _IRI_Parameters_uLITimestamp,
        _IRI_Parameters_packetDataHeaderInformation,
        _IRI_Parameters_mediaSecFailureIndication,
        _IRI_Parameters_csgIdentity,
        _IRI_Parameters_heNBIdentity,
        _IRI_Parameters_heNBiPAddress,
        _IRI_Parameters_heNBLocation,
        _IRI_Parameters_tunnelProtocol,
        __IRI_Parameters_pANI_Header_Info__item_,
        _IRI_Parameters_pANI_Header_Info,
        _IRI_Parameters_imsVoIP,
        _IRI_Parameters_xCAPmessage,
        _IRI_Parameters_logicalFunctionInformation,
        _IRI_Parameters_ccUnavailableReason,
        _IRI_Parameters_carrierSpecificData,
        _IRI_Parameters_current_previous_systems,
        _IRI_Parameters_change_Of_Target_Identity,
        _IRI_Parameters_requesting_Network_Identifier,
        _IRI_Parameters_requesting_Node_Type,
        _IRI_Parameters_serving_System_Identifier,
        _IRI_Parameters_proSeTargetType,
        _IRI_Parameters_proSeRelayMSISDN,
        _IRI_Parameters_proSeRelayIMSI,
        _IRI_Parameters_proSeRelayIMEI,
        _IRI_Parameters_extendedLocParameters,
        _IRI_Parameters_locationErrorCode,
        __IRI_Parameters_otherIdentities__item_,
        _IRI_Parameters_otherIdentities,
        _IRI_Parameters_deregistrationReason,
        _IRI_Parameters_requesting_Node_Identifier,
        _IRI_Parameters_roamingIndication,
        _IRI_Parameters_cSREvent,
        _IRI_Parameters_ptc,
        _IRI_Parameters_ptcEncryption,
        __IRI_Parameters_additionalCellIDs__item_,
        _IRI_Parameters_additionalCellIDs,
        _IRI_Parameters_scefID,
        _IRI_Parameters_national_HI2_ASN1parameters,
        IRI_Parameters,
        _DataNodeIdentifier_dataNodeAddress,
        _DataNodeIdentifier_logicalFunctionType,
        _DataNodeIdentifier_dataNodeName,
        DataNodeIdentifier,
        LogicalFunctionType,
        _PANI_Header_Info_access_Type,
        _PANI_Header_Info_access_Class,
        _PANI_Header_Info_network_Provided,
        _PANI_Header_Info_pANI_Location,
        PANI_Header_Info,
        _PANI_Location_raw_Location,
        _PANI_Location_location,
        _PANI_Location_ePSLocation,
        PANI_Location,
        _PartyInformation_party_Qualifier,
        __PartyInformation_partyIdentity_imei,
        __PartyInformation_partyIdentity_imsi,
        __PartyInformation_partyIdentity_msISDN,
        __PartyInformation_partyIdentity_e164_Format,
        __PartyInformation_partyIdentity_sip_uri,
        __PartyInformation_partyIdentity_tel_uri,
        __PartyInformation_partyIdentity_nai,
        __PartyInformation_partyIdentity_x_3GPP_Asserted_Identity,
        __PartyInformation_partyIdentity_xUI,
        __PartyInformation_partyIdentity_iMPI,
        __PartyInformation_partyIdentity_extID,
        _PartyInformation_partyIdentity,
        _PartyInformation_services_Data_Information,
        PartyInformation,
        _Location_e164_Number,
        _Location_globalCellID,
        _Location_rAI,
        _Location_gsmLocation,
        _Location_umtsLocation,
        _Location_sAI,
        _Location_oldRAI,
        _Location_civicAddress,
        _Location_operatorSpecificInfo,
        __Location_uELocationTimestamp_timestamp,
        __Location_uELocationTimestamp_timestampUnknown,
        _Location_uELocationTimestamp,
        Location,
        GlobalCellID,
        Rai,
        Sai,
        _AdditionalCellID_nCGI,
        _AdditionalCellID_gsmLocation,
        _AdditionalCellID_umtsLocation,
        _AdditionalCellID_timeOfLocation,
        AdditionalCellID,
        MCC,
        MNC,
        _PLMNID_mCC,
        _PLMNID_mNC,
        PLMNID,
        NRCellID,
        _NCGI_pLMNID,
        _NCGI_nRCellID,
        NCGI,
        __GSMLocation_geoCoordinates_latitude,
        __GSMLocation_geoCoordinates_longitude,
        __GSMLocation_geoCoordinates_mapDatum,
        __GSMLocation_geoCoordinates_azimuth,
        _GSMLocation_geoCoordinates,
        __GSMLocation_utmCoordinates_utm_East,
        __GSMLocation_utmCoordinates_utm_North,
        __GSMLocation_utmCoordinates_mapDatum,
        __GSMLocation_utmCoordinates_azimuth,
        _GSMLocation_utmCoordinates,
        __GSMLocation_utmRefCoordinates_utmref_string,
        __GSMLocation_utmRefCoordinates_mapDatum,
        _GSMLocation_utmRefCoordinates,
        _GSMLocation_wGS84Coordinates,
        GSMLocation,
        MapDatum,
        _UMTSLocation_point,
        _UMTSLocation_pointWithUnCertainty,
        _UMTSLocation_polygon,
        UMTSLocation,
        _GeographicalCoordinates_latitudeSign,
        _GeographicalCoordinates_latitude,
        _GeographicalCoordinates_longitude,
        GeographicalCoordinates,
        _GA_Point_geographicalCoordinates,
        GA_Point,
        _GA_PointWithUnCertainty_geographicalCoordinates,
        _GA_PointWithUnCertainty_uncertaintyCode,
        GA_PointWithUnCertainty,
        maxNrOfPoints,
        __GA_Polygon__item__geographicalCoordinates,
        _GA_Polygon__item_,
        GA_Polygon,
        __SMS_report_sMS_Contents_sms_initiator,
        __SMS_report_sMS_Contents_transfer_status,
        __SMS_report_sMS_Contents_other_message,
        __SMS_report_sMS_Contents_content,
        _SMS_report_sMS_Contents,
        SMS_report,
        EPSCorrelationNumber,
        _CorrelationValues_iri_to_CC,
        _CorrelationValues_iri_to_iri,
        __CorrelationValues_both_IRI_CC_iri_CC,
        __CorrelationValues_both_IRI_CC_iri_IRI,
        _CorrelationValues_both_IRI_CC,
        CorrelationValues,
        __IMS_VoIP_Correlation__item__ims_iri,
        __IMS_VoIP_Correlation__item__ims_cc,
        _IMS_VoIP_Correlation__item_,
        IMS_VoIP_Correlation,
        __IRI_to_CC_Correlation_cc__item_,
        _IRI_to_CC_Correlation_cc,
        _IRI_to_CC_Correlation_iri,
        IRI_to_CC_Correlation,
        IRI_to_IRI_Correlation,
        EPSEvent,
        CSREvent,
        IMSevent,
        _Services_Data_Information_gPRS_parameters,
        Services_Data_Information,
        _GPRS_parameters_pDP_address_allocated_to_the_target,
        _GPRS_parameters_aPN,
        _GPRS_parameters_pDP_type,
        _GPRS_parameters_nSAPI,
        _GPRS_parameters_additionalIPaddress,
        GPRS_parameters,
        GPRSOperationErrorCode,
        LDIevent,
        _UmtsQos_qosMobileRadio,
        _UmtsQos_qosGn,
        UmtsQos,
        _EPS_GTPV2_SpecificParameters_pDNAddressAllocation,
        _EPS_GTPV2_SpecificParameters_aPN,
        _EPS_GTPV2_SpecificParameters_protConfigOptions,
        _EPS_GTPV2_SpecificParameters_attachType,
        _EPS_GTPV2_SpecificParameters_ePSBearerIdentity,
        _EPS_GTPV2_SpecificParameters_detachType,
        _EPS_GTPV2_SpecificParameters_rATType,
        _EPS_GTPV2_SpecificParameters_failedBearerActivationReason,
        _EPS_GTPV2_SpecificParameters_ePSBearerQoS,
        _EPS_GTPV2_SpecificParameters_bearerActivationType,
        _EPS_GTPV2_SpecificParameters_aPN_AMBR,
        _EPS_GTPV2_SpecificParameters_procedureTransactionId,
        _EPS_GTPV2_SpecificParameters_linkedEPSBearerId,
        _EPS_GTPV2_SpecificParameters_tFT,
        _EPS_GTPV2_SpecificParameters_handoverIndication,
        _EPS_GTPV2_SpecificParameters_failedBearerModReason,
        _EPS_GTPV2_SpecificParameters_trafficAggregateDescription,
        _EPS_GTPV2_SpecificParameters_failedTAUReason,
        _EPS_GTPV2_SpecificParameters_failedEUTRANAttachReason,
        _EPS_GTPV2_SpecificParameters_servingMMEaddress,
        _EPS_GTPV2_SpecificParameters_bearerDeactivationType,
        _EPS_GTPV2_SpecificParameters_bearerDeactivationCause,
        _EPS_GTPV2_SpecificParameters_ePSlocationOfTheTarget,
        _EPS_GTPV2_SpecificParameters_pDNType,
        _EPS_GTPV2_SpecificParameters_requestType,
        _EPS_GTPV2_SpecificParameters_uEReqPDNConnFailReason,
        _EPS_GTPV2_SpecificParameters_extendedHandoverIndication,
        _EPS_GTPV2_SpecificParameters_uLITimestamp,
        _EPS_GTPV2_SpecificParameters_uELocalIPAddress,
        _EPS_GTPV2_SpecificParameters_uEUdpPort,
        _EPS_GTPV2_SpecificParameters_tWANIdentifier,
        _EPS_GTPV2_SpecificParameters_tWANIdentifierTimestamp,
        _EPS_GTPV2_SpecificParameters_proSeRemoteUeContextConnected,
        _EPS_GTPV2_SpecificParameters_proSeRemoteUeContextDisconnected,
        _EPS_GTPV2_SpecificParameters_secondaryRATUsageIndication,
        EPS_GTPV2_SpecificParameters,
        TypeOfBearer,
        _EPSLocation_userLocationInfo,
        _EPSLocation_gsmLocation,
        _EPSLocation_umtsLocation,
        _EPSLocation_olduserLocationInfo,
        _EPSLocation_lastVisitedTAI,
        _EPSLocation_tAIlist,
        _EPSLocation_threeGPP2Bsid,
        _EPSLocation_civicAddress,
        _EPSLocation_operatorSpecificInfo,
        __EPSLocation_uELocationTimestamp_timestamp,
        __EPSLocation_uELocationTimestamp_timestampUnknown,
        _EPSLocation_uELocationTimestamp,
        EPSLocation,
        _ProtConfigOptions_ueToNetwork,
        _ProtConfigOptions_networkToUe,
        ProtConfigOptions,
        _RemoteUeContextConnected__item_,
        RemoteUeContextConnected,
        _RemoteUEContext_remoteUserID,
        _RemoteUEContext_remoteUEIPInformation,
        RemoteUEContext,
        RemoteUserID,
        RemoteUEIPInformation,
        RemoteUeContextDisconnected,
        _EPS_PMIP_SpecificParameters_lifetime,
        _EPS_PMIP_SpecificParameters_accessTechnologyType,
        _EPS_PMIP_SpecificParameters_aPN,
        _EPS_PMIP_SpecificParameters_iPv6HomeNetworkPrefix,
        _EPS_PMIP_SpecificParameters_protConfigurationOption,
        _EPS_PMIP_SpecificParameters_handoverIndication,
        _EPS_PMIP_SpecificParameters_status,
        _EPS_PMIP_SpecificParameters_revocationTrigger,
        _EPS_PMIP_SpecificParameters_iPv4HomeAddress,
        _EPS_PMIP_SpecificParameters_iPv6careOfAddress,
        _EPS_PMIP_SpecificParameters_iPv4careOfAddress,
        _EPS_PMIP_SpecificParameters_servingNetwork,
        _EPS_PMIP_SpecificParameters_dHCPv4AddressAllocationInd,
        _EPS_PMIP_SpecificParameters_ePSlocationOfTheTarget,
        EPS_PMIP_SpecificParameters,
        _EPS_DSMIP_SpecificParameters_lifetime,
        _EPS_DSMIP_SpecificParameters_requestedIPv6HomePrefix,
        _EPS_DSMIP_SpecificParameters_homeAddress,
        _EPS_DSMIP_SpecificParameters_iPv4careOfAddress,
        _EPS_DSMIP_SpecificParameters_iPv6careOfAddress,
        _EPS_DSMIP_SpecificParameters_aPN,
        _EPS_DSMIP_SpecificParameters_status,
        _EPS_DSMIP_SpecificParameters_hSS_AAA_address,
        _EPS_DSMIP_SpecificParameters_targetPDN_GW_Address,
        EPS_DSMIP_SpecificParameters,
        _EPS_MIP_SpecificParameters_lifetime,
        _EPS_MIP_SpecificParameters_homeAddress,
        _EPS_MIP_SpecificParameters_careOfAddress,
        _EPS_MIP_SpecificParameters_homeAgentAddress,
        _EPS_MIP_SpecificParameters_code,
        _EPS_MIP_SpecificParameters_foreignDomainAddress,
        EPS_MIP_SpecificParameters,
        _MediaDecryption_info__item_,
        MediaDecryption_info,
        _CCKeyInfo_cCCSID,
        _CCKeyInfo_cCDecKey,
        _CCKeyInfo_cCSalt,
        CCKeyInfo,
        MediaSecFailureIndication,
        _PacketDataHeaderInformation_packetDataHeader,
        _PacketDataHeaderInformation_packetDataSummary,
        PacketDataHeaderInformation,
        _PacketDataHeaderReport_packetDataHeaderMapped,
        _PacketDataHeaderReport_packetDataHeaderCopy,
        PacketDataHeaderReport,
        _PacketDataHeaderMapped_sourceIPAddress,
        _PacketDataHeaderMapped_sourcePortNumber,
        _PacketDataHeaderMapped_destinationIPAddress,
        _PacketDataHeaderMapped_destinationPortNumber,
        _PacketDataHeaderMapped_transportProtocol,
        _PacketDataHeaderMapped_packetsize,
        _PacketDataHeaderMapped_flowLabel,
        _PacketDataHeaderMapped_packetCount,
        _PacketDataHeaderMapped_direction,
        PacketDataHeaderMapped,
        TPDU_direction,
        _PacketDataHeaderCopy_direction,
        _PacketDataHeaderCopy_headerCopy,
        PacketDataHeaderCopy,
        _PacketDataSummaryReport__item_,
        PacketDataSummaryReport,
        _PacketFlowSummary_sourceIPAddress,
        _PacketFlowSummary_sourcePortNumber,
        _PacketFlowSummary_destinationIPAddress,
        _PacketFlowSummary_destinationPortNumber,
        _PacketFlowSummary_transportProtocol,
        _PacketFlowSummary_flowLabel,
        _PacketFlowSummary_summaryPeriod,
        _PacketFlowSummary_packetCount,
        _PacketFlowSummary_sumOfPacketSizes,
        _PacketFlowSummary_packetDataSummaryReason,
        PacketFlowSummary,
        ReportReason,
        _ReportInterval_firstPacketTimeStamp,
        _ReportInterval_lastPacketTimeStamp,
        ReportInterval,
        _TunnelProtocol_rfc2868ValueField,
        _TunnelProtocol_nativeIPSec,
        TunnelProtocol,
        HeNBLocation,
        Requesting_Node_Type,
        _Change_Of_Target_Identity_new_MSISDN,
        _Change_Of_Target_Identity_new_A_MSISDN,
        _Change_Of_Target_Identity_old_MSISDN,
        _Change_Of_Target_Identity_old_A_MSISDN,
        _Change_Of_Target_Identity_new_IMSI,
        _Change_Of_Target_Identity_old_IMSI,
        _Change_Of_Target_Identity_new_IMEI,
        _Change_Of_Target_Identity_old_IMEI,
        _Change_Of_Target_Identity_new_IMPI,
        _Change_Of_Target_Identity_old_IMPI,
        _Change_Of_Target_Identity_new_SIP_URI,
        _Change_Of_Target_Identity_old_SIP_URI,
        _Change_Of_Target_Identity_new_TEL_URI,
        _Change_Of_Target_Identity_old_TEL_URI,
        Change_Of_Target_Identity,
        _Current_Previous_Systems_serving_System_Identifier,
        _Current_Previous_Systems_current_Serving_MME_Address,
        _Current_Previous_Systems_previous_Serving_System_Identifier,
        _Current_Previous_Systems_previous_Serving_MME_Address,
        Current_Previous_Systems,
        ProSeTargetType,
        VoIPRoamingIndication,
        _DeregistrationReason_reason_CodeAVP,
        _DeregistrationReason_server_AssignmentType,
        DeregistrationReason,
        _PTCEncryptionInfo_cipher,
        _PTCEncryptionInfo_cryptoContext,
        _PTCEncryptionInfo_key,
        _PTCEncryptionInfo_keyEncoding,
        _PTCEncryptionInfo_salt,
        _PTCEncryptionInfo_pTCOther,
        PTCEncryptionInfo,
        _PTC_abandonCause,
        _PTC_accessPolicyFailure,
        _PTC_accessPolicyType,
        _PTC_alertIndicator,
        _PTC_associatePresenceStatus,
        _PTC_bearer_capability,
        _PTC_broadcastIndicator,
        _PTC_contactID,
        _PTC_emergency,
        _PTC_emergencyGroupState,
        _PTC_timeStamp,
        _PTC_pTCType,
        _PTC_failureCode,
        _PTC_floorActivity,
        _PTC_floorSpeakerID,
        _PTC_groupAdSender,
        _PTC_groupAuthRule,
        _PTC_groupCharacteristics,
        _PTC_holdRetrieveInd,
        _PTC_imminentPerilInd,
        _PTC_implicitFloorReq,
        _PTC_initiationCause,
        _PTC_invitationCause,
        _PTC_iPAPartyID,
        _PTC_iPADirection,
        _PTC_listManagementAction,
        _PTC_listManagementFailure,
        _PTC_listManagementType,
        _PTC_maxTBTime,
        _PTC_mCPTTGroupID,
        _PTC_mCPTTID,
        _PTC_mCPTTInd,
        _PTC_location,
        _PTC_mCPTTOrganizationName,
        _PTC_mediaStreamAvail,
        _PTC_priority_Level,
        _PTC_preEstSessionID,
        _PTC_preEstStatus,
        _PTC_pTCGroupID,
        _PTC_pTCIDList,
        _PTC_pTCMediaCapability,
        _PTC_pTCOriginatingId,
        _PTC_pTCOther,
        _PTC_pTCParticipants,
        _PTC_pTCParty,
        _PTC_pTCPartyDrop,
        _PTC_pTCSessionInfo,
        _PTC_pTCServerURI,
        _PTC_pTCUserAccessPolicy,
        _PTC_pTCAddress,
        _PTC_queuedFloorControl,
        _PTC_queuedPosition,
        _PTC_registrationRequest,
        _PTC_registrationOutcome,
        _PTC_retrieveID,
        _PTC_rTPSetting,
        _PTC_talkBurstPriority,
        _PTC_talkBurstReason,
        _PTC_talkburstControlSetting,
        _PTC_targetPresenceStatus,
        _PTC_port_Number,
        PTC,
        _AccessPolicyType_userAccessPolicyAttempt,
        _AccessPolicyType_groupAuthorizationRulesAttempt,
        _AccessPolicyType_userAccessPolicyQuery,
        _AccessPolicyType_groupAuthorizationRulesQuery,
        _AccessPolicyType_userAccessPolicyResult,
        _AccessPolicyType_groupAuthorizationRulesResult,
        AccessPolicyType,
        AlertIndicator,
        _AssociatePresenceStatus_presenceID,
        _AssociatePresenceStatus_presenceType,
        _AssociatePresenceStatus_presenceStatus,
        AssociatePresenceStatus,
        PresenceType,
        Emergency,
        _EmergencyGroupState_clientEmergencyState,
        _EmergencyGroupState_groupEmergencyState,
        EmergencyGroupState,
        PTCType,
        _FloorActivity_tBCP_Request,
        _FloorActivity_tBCP_Granted,
        _FloorActivity_tBCP_Deny,
        _FloorActivity_tBCP_Queued,
        _FloorActivity_tBCP_Release,
        _FloorActivity_tBCP_Revoke,
        _FloorActivity_tBCP_Taken,
        _FloorActivity_tBCP_Idle,
        FloorActivity,
        GroupAuthRule,
        ImminentPerilInd,
        ImplicitFloorReq,
        InitiationCause,
        IPADirection,
        ListManagementAction,
        ListManagementType,
        Priority_Level,
        PreEstStatus,
        _PTCAddress_uri,
        _PTCAddress_privacy_setting,
        _PTCAddress_privacy_alias,
        _PTCAddress_nickname,
        PTCAddress,
        RegistrationRequest,
        RegistrationOutcome,
        _RTPSetting_ip_address,
        _RTPSetting_port_number,
        RTPSetting,
        Port_Number,
        _TalkburstControlSetting_talk_BurstControlProtocol,
        __TalkburstControlSetting_talk_Burst_parameters__item_,
        _TalkburstControlSetting_talk_Burst_parameters,
        _TalkburstControlSetting_tBCP_PortNumber,
        TalkburstControlSetting,
        Talk_burst_reason_code,
    ]

class GCSE_HI3:

    _name_  = 'GCSE-HI3'
    _oid_   = [0, 4, 0, 2, 2, 4, 14, 13, 0]
    
    _obj_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi3gcseDomainId',
        'Gcse-CC-PDU',
        'GcseLIC-header',
        'MediaID',
        'TPDU-direction',
        ]
    _type_ = [
        'Gcse-CC-PDU',
        'GcseLIC-header',
        'MediaID',
        'TPDU-direction',
        ]
    _set_ = [
        ]
    _val_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi3gcseDomainId',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< lawfulInterceptDomainId >-----#
    lawfulInterceptDomainId = OID(name='lawfulInterceptDomainId', mode=MODE_VALUE)
    lawfulInterceptDomainId._val = (0, 4, 0, 2, 2)
    
    #-----< threeGPPSUBDomainId >-----#
    threeGPPSUBDomainId = OID(name='threeGPPSUBDomainId', mode=MODE_VALUE)
    threeGPPSUBDomainId._val = (0, 4, 0, 2, 2, 4)
    
    #-----< hi3gcseDomainId >-----#
    hi3gcseDomainId = OID(name='hi3gcseDomainId', mode=MODE_VALUE)
    hi3gcseDomainId._val = (0, 4, 0, 2, 2, 4, 14, 13, 0)
    
    #-----< Gcse-CC-PDU >-----#
    Gcse_CC_PDU = SEQ(name='Gcse-CC-PDU', mode=MODE_TYPE)
    _Gcse_CC_PDU_gcseLIC_header = SEQ(name='gcseLIC-header', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSE-HI3', 'GcseLIC-header')))
    _Gcse_CC_PDU_payload = OCT_STR(name='payload', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Gcse_CC_PDU._cont = ASN1Dict([
        ('gcseLIC-header', _Gcse_CC_PDU_gcseLIC_header),
        ('payload', _Gcse_CC_PDU_payload),
        ])
    Gcse_CC_PDU._ext = None
    
    #-----< GcseLIC-header >-----#
    GcseLIC_header = SEQ(name='GcseLIC-header', mode=MODE_TYPE)
    _GcseLIC_header_hi3gcseDomainId = OID(name='hi3gcseDomainId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GcseLIC_header_lIID = OCT_STR(name='lIID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')), opt=True)
    _GcseLIC_header_correlation = OCT_STR(name='correlation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'GcseCorrelation')))
    _GcseLIC_header_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')), opt=True)
    _GcseLIC_header_sequence_number = INT(name='sequence-number', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GcseLIC_header_sequence_number._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _GcseLIC_header_t_PDU_direction = ENUM(name='t-PDU-direction', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSE-HI3', 'TPDU-direction')))
    _GcseLIC_header_national_HI3_ASN1parameters = SEQ(name='national-HI3-ASN1parameters', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Eps-HI3-PS', 'National-HI3-ASN1parameters')), opt=True)
    _GcseLIC_header_mediaID = SEQ(name='mediaID', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSE-HI3', 'MediaID')), opt=True)
    GcseLIC_header._cont = ASN1Dict([
        ('hi3gcseDomainId', _GcseLIC_header_hi3gcseDomainId),
        ('lIID', _GcseLIC_header_lIID),
        ('correlation', _GcseLIC_header_correlation),
        ('timeStamp', _GcseLIC_header_timeStamp),
        ('sequence-number', _GcseLIC_header_sequence_number),
        ('t-PDU-direction', _GcseLIC_header_t_PDU_direction),
        ('national-HI3-ASN1parameters', _GcseLIC_header_national_HI3_ASN1parameters),
        ('mediaID', _GcseLIC_header_mediaID),
        ])
    GcseLIC_header._ext = []
    
    #-----< MediaID >-----#
    MediaID = SEQ(name='MediaID', mode=MODE_TYPE)
    _MediaID_sourceUserID = SEQ(name='sourceUserID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'GcsePartyIdentity')), opt=True)
    _MediaID_streamID = OCT_STR(name='streamID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    MediaID._cont = ASN1Dict([
        ('sourceUserID', _MediaID_sourceUserID),
        ('streamID', _MediaID_streamID),
        ])
    MediaID._ext = []
    
    #-----< TPDU-direction >-----#
    TPDU_direction = ENUM(name='TPDU-direction', mode=MODE_TYPE)
    TPDU_direction._cont = ASN1Dict([('from-target', 1), ('to-target', 2), ('unknown', 3)])
    TPDU_direction._ext = []
    
    _all_ = [
        lawfulInterceptDomainId,
        threeGPPSUBDomainId,
        hi3gcseDomainId,
        _Gcse_CC_PDU_gcseLIC_header,
        _Gcse_CC_PDU_payload,
        Gcse_CC_PDU,
        _GcseLIC_header_hi3gcseDomainId,
        _GcseLIC_header_lIID,
        _GcseLIC_header_correlation,
        _GcseLIC_header_timeStamp,
        _GcseLIC_header_sequence_number,
        _GcseLIC_header_t_PDU_direction,
        _GcseLIC_header_national_HI3_ASN1parameters,
        _GcseLIC_header_mediaID,
        GcseLIC_header,
        _MediaID_sourceUserID,
        _MediaID_streamID,
        MediaID,
        TPDU_direction,
    ]

class GCSEHI2Operations:

    _name_  = 'GCSEHI2Operations'
    _oid_   = [0, 4, 0, 2, 2, 4, 13, 16, 0]
    
    _obj_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi2gcseDomainId',
        'GcseIRIsContent',
        'GcseIRISequence',
        'GcseIRIContent',
        'IRI-Parameters',
        'GcseEvent',
        'GcseCorrelation',
        'GcsePartyIdentity',
        'IMSIdentity',
        'OtherIdentity',
        'GcseGroup',
        'GcseGroupID',
        'ProSeUEID',
        'GcseGroupCharacteristics',
        'TargetConnectionMethod',
        'Upstream',
        'Downstream',
        'AccessType',
        'AccessID',
        'VisitedNetworkID',
        'ReservedTMGI',
        'TMGIReservationDuration',
        'Reason',
        ]
    _type_ = [
        'GcseIRIsContent',
        'GcseIRISequence',
        'GcseIRIContent',
        'IRI-Parameters',
        'GcseEvent',
        'GcseCorrelation',
        'GcsePartyIdentity',
        'IMSIdentity',
        'OtherIdentity',
        'GcseGroup',
        'GcseGroupID',
        'ProSeUEID',
        'GcseGroupCharacteristics',
        'TargetConnectionMethod',
        'Upstream',
        'Downstream',
        'AccessType',
        'AccessID',
        'VisitedNetworkID',
        'ReservedTMGI',
        'TMGIReservationDuration',
        'Reason',
        ]
    _set_ = [
        ]
    _val_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi2gcseDomainId',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< lawfulInterceptDomainId >-----#
    lawfulInterceptDomainId = OID(name='lawfulInterceptDomainId', mode=MODE_VALUE)
    lawfulInterceptDomainId._val = (0, 4, 0, 2, 2)
    
    #-----< threeGPPSUBDomainId >-----#
    threeGPPSUBDomainId = OID(name='threeGPPSUBDomainId', mode=MODE_VALUE)
    threeGPPSUBDomainId._val = (0, 4, 0, 2, 2, 4)
    
    #-----< hi2gcseDomainId >-----#
    hi2gcseDomainId = OID(name='hi2gcseDomainId', mode=MODE_VALUE)
    hi2gcseDomainId._val = (0, 4, 0, 2, 2, 4, 13, 16, 0)
    
    #-----< GcseIRIsContent >-----#
    GcseIRIsContent = CHOICE(name='GcseIRIsContent', mode=MODE_TYPE)
    _GcseIRIsContent_gcseiRIContent = CHOICE(name='gcseiRIContent', mode=MODE_TYPE, typeref=ASN1RefType(('GCSEHI2Operations', 'GcseIRIContent')))
    _GcseIRIsContent_gcseIRISequence = SEQ_OF(name='gcseIRISequence', mode=MODE_TYPE, typeref=ASN1RefType(('GCSEHI2Operations', 'GcseIRISequence')))
    GcseIRIsContent._cont = ASN1Dict([
        ('gcseiRIContent', _GcseIRIsContent_gcseiRIContent),
        ('gcseIRISequence', _GcseIRIsContent_gcseIRISequence),
        ])
    GcseIRIsContent._ext = None
    
    #-----< GcseIRISequence >-----#
    GcseIRISequence = SEQ_OF(name='GcseIRISequence', mode=MODE_TYPE)
    _GcseIRISequence__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('GCSEHI2Operations', 'GcseIRIContent')))
    GcseIRISequence._cont = _GcseIRISequence__item_
    
    #-----< GcseIRIContent >-----#
    GcseIRIContent = CHOICE(name='GcseIRIContent', mode=MODE_TYPE)
    _GcseIRIContent_iRI_Begin_record = SEQ(name='iRI-Begin-record', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'IRI-Parameters')))
    _GcseIRIContent_iRI_End_record = SEQ(name='iRI-End-record', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'IRI-Parameters')))
    _GcseIRIContent_iRI_Continue_record = SEQ(name='iRI-Continue-record', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'IRI-Parameters')))
    _GcseIRIContent_iRI_Report_record = SEQ(name='iRI-Report-record', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'IRI-Parameters')))
    GcseIRIContent._cont = ASN1Dict([
        ('iRI-Begin-record', _GcseIRIContent_iRI_Begin_record),
        ('iRI-End-record', _GcseIRIContent_iRI_End_record),
        ('iRI-Continue-record', _GcseIRIContent_iRI_Continue_record),
        ('iRI-Report-record', _GcseIRIContent_iRI_Report_record),
        ])
    GcseIRIContent._ext = []
    
    #-----< IRI-Parameters >-----#
    IRI_Parameters = SEQ(name='IRI-Parameters', mode=MODE_TYPE)
    _IRI_Parameters_hi2gcseDomainId = OID(name='hi2gcseDomainId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IRI_Parameters_lawfulInterceptionIdentifier = OCT_STR(name='lawfulInterceptionIdentifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')))
    _IRI_Parameters_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _IRI_Parameters_partyInformation = SET_OF(name='partyInformation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __IRI_Parameters_partyInformation__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('GCSEHI2Operations', 'GcsePartyIdentity')))
    _IRI_Parameters_partyInformation._cont = __IRI_Parameters_partyInformation__item_
    _IRI_Parameters_national_Parameters = SET_OF(name='national-Parameters', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'National-Parameters')), opt=True)
    _IRI_Parameters_networkIdentifier = SEQ(name='networkIdentifier', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Network-Identifier')))
    _IRI_Parameters_gcseEvent = ENUM(name='gcseEvent', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'GcseEvent')))
    _IRI_Parameters_correlation = OCT_STR(name='correlation', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'GcseCorrelation')), opt=True)
    _IRI_Parameters_targetConnectionMethod = SEQ(name='targetConnectionMethod', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'TargetConnectionMethod')), opt=True)
    _IRI_Parameters_gcseGroupMembers = SEQ_OF(name='gcseGroupMembers', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'GcseGroup')), opt=True)
    _IRI_Parameters_gcseGroupParticipants = SEQ_OF(name='gcseGroupParticipants', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'GcseGroup')), opt=True)
    _IRI_Parameters_gcseGroupID = SEQ(name='gcseGroupID', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'GcseGroupID')), opt=True)
    _IRI_Parameters_gcseGroupCharacteristics = SEQ(name='gcseGroupCharacteristics', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'GcseGroupCharacteristics')), opt=True)
    _IRI_Parameters_reservedTMGI = OCT_STR(name='reservedTMGI', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'ReservedTMGI')), opt=True)
    _IRI_Parameters_tMGIReservationDuration = OCT_STR(name='tMGIReservationDuration', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'TMGIReservationDuration')), opt=True)
    _IRI_Parameters_visitedNetworkID = STR_UTF8(name='visitedNetworkID', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'VisitedNetworkID')), opt=True)
    _IRI_Parameters_addedUserID = SEQ(name='addedUserID', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'GcsePartyIdentity')), opt=True)
    _IRI_Parameters_droppedUserID = SEQ(name='droppedUserID', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'GcsePartyIdentity')), opt=True)
    _IRI_Parameters_reasonForCommsEnd = STR_UTF8(name='reasonForCommsEnd', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'Reason')), opt=True)
    _IRI_Parameters_gcseLocationOfTheTarget = SEQ(name='gcseLocationOfTheTarget', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EpsHI2Operations', 'EPSLocation')), opt=True)
    IRI_Parameters._cont = ASN1Dict([
        ('hi2gcseDomainId', _IRI_Parameters_hi2gcseDomainId),
        ('lawfulInterceptionIdentifier', _IRI_Parameters_lawfulInterceptionIdentifier),
        ('timeStamp', _IRI_Parameters_timeStamp),
        ('partyInformation', _IRI_Parameters_partyInformation),
        ('national-Parameters', _IRI_Parameters_national_Parameters),
        ('networkIdentifier', _IRI_Parameters_networkIdentifier),
        ('gcseEvent', _IRI_Parameters_gcseEvent),
        ('correlation', _IRI_Parameters_correlation),
        ('targetConnectionMethod', _IRI_Parameters_targetConnectionMethod),
        ('gcseGroupMembers', _IRI_Parameters_gcseGroupMembers),
        ('gcseGroupParticipants', _IRI_Parameters_gcseGroupParticipants),
        ('gcseGroupID', _IRI_Parameters_gcseGroupID),
        ('gcseGroupCharacteristics', _IRI_Parameters_gcseGroupCharacteristics),
        ('reservedTMGI', _IRI_Parameters_reservedTMGI),
        ('tMGIReservationDuration', _IRI_Parameters_tMGIReservationDuration),
        ('visitedNetworkID', _IRI_Parameters_visitedNetworkID),
        ('addedUserID', _IRI_Parameters_addedUserID),
        ('droppedUserID', _IRI_Parameters_droppedUserID),
        ('reasonForCommsEnd', _IRI_Parameters_reasonForCommsEnd),
        ('gcseLocationOfTheTarget', _IRI_Parameters_gcseLocationOfTheTarget),
        ])
    IRI_Parameters._ext = []
    
    #-----< GcseEvent >-----#
    GcseEvent = ENUM(name='GcseEvent', mode=MODE_TYPE)
    GcseEvent._cont = ASN1Dict([('activationOfGcseGroupComms', 1), ('startOfInterceptionGcseGroupComms', 2), ('userAdded', 3), ('userDropped', 4), ('targetConnectionModification', 5), ('targetdropped', 6), ('deactivationOfGcseGroupComms', 7)])
    GcseEvent._ext = []
    
    #-----< GcseCorrelation >-----#
    GcseCorrelation = OCT_STR(name='GcseCorrelation', mode=MODE_TYPE)
    
    #-----< GcsePartyIdentity >-----#
    GcsePartyIdentity = SEQ(name='GcsePartyIdentity', mode=MODE_TYPE)
    _GcsePartyIdentity_imei = OCT_STR(name='imei', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GcsePartyIdentity_imei._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _GcsePartyIdentity_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GcsePartyIdentity_imsi._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    _GcsePartyIdentity_iMPU = SET_OF(name='iMPU', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GcsePartyIdentity_iMPU__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('GCSEHI2Operations', 'IMSIdentity')))
    _GcsePartyIdentity_iMPU._cont = __GcsePartyIdentity_iMPU__item_
    _GcsePartyIdentity_iMPI = SET_OF(name='iMPI', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GcsePartyIdentity_iMPI__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('GCSEHI2Operations', 'IMSIdentity')))
    _GcsePartyIdentity_iMPI._cont = __GcsePartyIdentity_iMPI__item_
    _GcsePartyIdentity_proseUEID = SET_OF(name='proseUEID', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GcsePartyIdentity_proseUEID__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('GCSEHI2Operations', 'ProSeUEID')))
    _GcsePartyIdentity_proseUEID._cont = __GcsePartyIdentity_proseUEID__item_
    _GcsePartyIdentity_otherID = SEQ(name='otherID', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'OtherIdentity')), opt=True)
    GcsePartyIdentity._cont = ASN1Dict([
        ('imei', _GcsePartyIdentity_imei),
        ('imsi', _GcsePartyIdentity_imsi),
        ('iMPU', _GcsePartyIdentity_iMPU),
        ('iMPI', _GcsePartyIdentity_iMPI),
        ('proseUEID', _GcsePartyIdentity_proseUEID),
        ('otherID', _GcsePartyIdentity_otherID),
        ])
    GcsePartyIdentity._ext = []
    
    #-----< IMSIdentity >-----#
    IMSIdentity = SEQ(name='IMSIdentity', mode=MODE_TYPE)
    _IMSIdentity_sip_uri = OCT_STR(name='sip-uri', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IMSIdentity_tel_uri = OCT_STR(name='tel-uri', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    IMSIdentity._cont = ASN1Dict([
        ('sip-uri', _IMSIdentity_sip_uri),
        ('tel-uri', _IMSIdentity_tel_uri),
        ])
    IMSIdentity._ext = []
    
    #-----< OtherIdentity >-----#
    OtherIdentity = SEQ(name='OtherIdentity', mode=MODE_TYPE)
    _OtherIdentity_otherIdentityEncoding = STR_UTF8(name='otherIdentityEncoding', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _OtherIdentity_otherIDInfo = OCT_STR(name='otherIDInfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    OtherIdentity._cont = ASN1Dict([
        ('otherIdentityEncoding', _OtherIdentity_otherIdentityEncoding),
        ('otherIDInfo', _OtherIdentity_otherIDInfo),
        ])
    OtherIdentity._ext = []
    
    #-----< GcseGroup >-----#
    GcseGroup = SEQ_OF(name='GcseGroup', mode=MODE_TYPE)
    _GcseGroup__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('GCSEHI2Operations', 'GcsePartyIdentity')))
    GcseGroup._cont = _GcseGroup__item_
    
    #-----< GcseGroupID >-----#
    GcseGroupID = SEQ(name='GcseGroupID', mode=MODE_TYPE, typeref=ASN1RefType(('GCSEHI2Operations', 'GcsePartyIdentity')))
    
    #-----< ProSeUEID >-----#
    ProSeUEID = OCT_STR(name='ProSeUEID', mode=MODE_TYPE)
    
    #-----< GcseGroupCharacteristics >-----#
    GcseGroupCharacteristics = SEQ(name='GcseGroupCharacteristics', mode=MODE_TYPE)
    _GcseGroupCharacteristics_characteristicsEncoding = STR_UTF8(name='characteristicsEncoding', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GcseGroupCharacteristics_characteristics = OCT_STR(name='characteristics', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    GcseGroupCharacteristics._cont = ASN1Dict([
        ('characteristicsEncoding', _GcseGroupCharacteristics_characteristicsEncoding),
        ('characteristics', _GcseGroupCharacteristics_characteristics),
        ])
    GcseGroupCharacteristics._ext = []
    
    #-----< TargetConnectionMethod >-----#
    TargetConnectionMethod = SEQ(name='TargetConnectionMethod', mode=MODE_TYPE)
    _TargetConnectionMethod_connectionStatus = BOOL(name='connectionStatus', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TargetConnectionMethod_upstream = SEQ(name='upstream', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'Upstream')), opt=True)
    _TargetConnectionMethod_downstream = SEQ(name='downstream', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'Downstream')), opt=True)
    TargetConnectionMethod._cont = ASN1Dict([
        ('connectionStatus', _TargetConnectionMethod_connectionStatus),
        ('upstream', _TargetConnectionMethod_upstream),
        ('downstream', _TargetConnectionMethod_downstream),
        ])
    TargetConnectionMethod._ext = []
    
    #-----< Upstream >-----#
    Upstream = SEQ(name='Upstream', mode=MODE_TYPE)
    _Upstream_accessType = ENUM(name='accessType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'AccessType')))
    _Upstream_accessId = CHOICE(name='accessId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'AccessID')))
    Upstream._cont = ASN1Dict([
        ('accessType', _Upstream_accessType),
        ('accessId', _Upstream_accessId),
        ])
    Upstream._ext = []
    
    #-----< Downstream >-----#
    Downstream = SEQ(name='Downstream', mode=MODE_TYPE)
    _Downstream_accessType = ENUM(name='accessType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'AccessType')))
    _Downstream_accessId = CHOICE(name='accessId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'AccessID')))
    Downstream._cont = ASN1Dict([
        ('accessType', _Downstream_accessType),
        ('accessId', _Downstream_accessId),
        ])
    Downstream._ext = []
    
    #-----< AccessType >-----#
    AccessType = ENUM(name='AccessType', mode=MODE_TYPE)
    AccessType._cont = ASN1Dict([('ePS-Unicast', 1), ('ePS-Multicast', 2)])
    AccessType._ext = []
    
    #-----< AccessID >-----#
    AccessID = CHOICE(name='AccessID', mode=MODE_TYPE)
    _AccessID_tMGI = OCT_STR(name='tMGI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('GCSEHI2Operations', 'ReservedTMGI')))
    _AccessID_uEIPAddress = SEQ(name='uEIPAddress', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')))
    AccessID._cont = ASN1Dict([
        ('tMGI', _AccessID_tMGI),
        ('uEIPAddress', _AccessID_uEIPAddress),
        ])
    AccessID._ext = []
    
    #-----< VisitedNetworkID >-----#
    VisitedNetworkID = STR_UTF8(name='VisitedNetworkID', mode=MODE_TYPE)
    
    #-----< ReservedTMGI >-----#
    ReservedTMGI = OCT_STR(name='ReservedTMGI', mode=MODE_TYPE)
    
    #-----< TMGIReservationDuration >-----#
    TMGIReservationDuration = OCT_STR(name='TMGIReservationDuration', mode=MODE_TYPE)
    
    #-----< Reason >-----#
    Reason = STR_UTF8(name='Reason', mode=MODE_TYPE)
    
    _all_ = [
        lawfulInterceptDomainId,
        threeGPPSUBDomainId,
        hi2gcseDomainId,
        _GcseIRIsContent_gcseiRIContent,
        _GcseIRIsContent_gcseIRISequence,
        GcseIRIsContent,
        _GcseIRISequence__item_,
        GcseIRISequence,
        _GcseIRIContent_iRI_Begin_record,
        _GcseIRIContent_iRI_End_record,
        _GcseIRIContent_iRI_Continue_record,
        _GcseIRIContent_iRI_Report_record,
        GcseIRIContent,
        _IRI_Parameters_hi2gcseDomainId,
        _IRI_Parameters_lawfulInterceptionIdentifier,
        _IRI_Parameters_timeStamp,
        __IRI_Parameters_partyInformation__item_,
        _IRI_Parameters_partyInformation,
        _IRI_Parameters_national_Parameters,
        _IRI_Parameters_networkIdentifier,
        _IRI_Parameters_gcseEvent,
        _IRI_Parameters_correlation,
        _IRI_Parameters_targetConnectionMethod,
        _IRI_Parameters_gcseGroupMembers,
        _IRI_Parameters_gcseGroupParticipants,
        _IRI_Parameters_gcseGroupID,
        _IRI_Parameters_gcseGroupCharacteristics,
        _IRI_Parameters_reservedTMGI,
        _IRI_Parameters_tMGIReservationDuration,
        _IRI_Parameters_visitedNetworkID,
        _IRI_Parameters_addedUserID,
        _IRI_Parameters_droppedUserID,
        _IRI_Parameters_reasonForCommsEnd,
        _IRI_Parameters_gcseLocationOfTheTarget,
        IRI_Parameters,
        GcseEvent,
        GcseCorrelation,
        _GcsePartyIdentity_imei,
        _GcsePartyIdentity_imsi,
        __GcsePartyIdentity_iMPU__item_,
        _GcsePartyIdentity_iMPU,
        __GcsePartyIdentity_iMPI__item_,
        _GcsePartyIdentity_iMPI,
        __GcsePartyIdentity_proseUEID__item_,
        _GcsePartyIdentity_proseUEID,
        _GcsePartyIdentity_otherID,
        GcsePartyIdentity,
        _IMSIdentity_sip_uri,
        _IMSIdentity_tel_uri,
        IMSIdentity,
        _OtherIdentity_otherIdentityEncoding,
        _OtherIdentity_otherIDInfo,
        OtherIdentity,
        _GcseGroup__item_,
        GcseGroup,
        GcseGroupID,
        ProSeUEID,
        _GcseGroupCharacteristics_characteristicsEncoding,
        _GcseGroupCharacteristics_characteristics,
        GcseGroupCharacteristics,
        _TargetConnectionMethod_connectionStatus,
        _TargetConnectionMethod_upstream,
        _TargetConnectionMethod_downstream,
        TargetConnectionMethod,
        _Upstream_accessType,
        _Upstream_accessId,
        Upstream,
        _Downstream_accessType,
        _Downstream_accessId,
        Downstream,
        AccessType,
        _AccessID_tMGI,
        _AccessID_uEIPAddress,
        AccessID,
        VisitedNetworkID,
        ReservedTMGI,
        TMGIReservationDuration,
        Reason,
    ]

class HI2Operations:

    _name_  = 'HI2Operations'
    _oid_   = [0, 4, 0, 2, 2, 1, 18]
    
    _obj_ = [
        'lawfulInterceptDomainId',
        'hi2DomainId',
        'hi2OperationId',
        'sending-of-IRI',
        'IRIsContent',
        'IRISequence',
        'IRIContent',
        'unknown-version',
        'missing-parameter',
        'unknown-parameter-value',
        'unknown-parameter',
        'OperationErrors',
        'IRI-Parameters',
        'CommunicationIdentifier',
        'Network-Identifier',
        'Network-Element-Identifier',
        'CC-Link-Identifier',
        'TimeStamp',
        'LocalTimeStamp',
        'PartyInformation',
        'CallingPartyNumber',
        'CalledPartyNumber',
        'Location',
        'TetraLocation',
        'GSMLocation',
        'MapDatum',
        'UMTSLocation',
        'GeographicalCoordinates',
        'GA-Point',
        'GA-PointWithUnCertainty',
        'maxNrOfPoints',
        'GA-Polygon',
        'CallContentLinkCharacteristics',
        'CCLink-State',
        'Intercepted-Call-State',
        'Services-Information',
        'ISUP-parameters',
        'DSS1-parameters-codeset-0',
        'MAP-parameters',
        'Supplementary-Services',
        'Standard-Supplementary-Services',
        'Non-Standard-Supplementary-Services',
        'Other-Services',
        'ISUP-SS-parameters',
        'DSS1-SS-parameters-codeset-0',
        'DSS1-SS-parameters-codeset-4',
        'DSS1-SS-parameters-codeset-5',
        'DSS1-SS-parameters-codeset-6',
        'DSS1-SS-parameters-codeset-7',
        'DSS1-SS-Invoke-Components',
        'MAP-SS-Invoke-Components',
        'MAP-SS-Parameters',
        'SimpleIndication',
        'SciDataMode',
        'SMS-report',
        'LawfulInterceptionIdentifier',
        'National-Parameters',
        'GPRSCorrelationNumber',
        'GPRSEvent',
        'Services-Data-Information',
        'GPRS-parameters',
        'GPRSOperationErrorCode',
        'DataNodeAddress',
        'IPAddress',
        'IP-value',
        'X25Address',
        'National-HI2-ASN1parameters',
        ]
    _type_ = [
        'IRIsContent',
        'IRISequence',
        'IRIContent',
        'IRI-Parameters',
        'CommunicationIdentifier',
        'Network-Identifier',
        'Network-Element-Identifier',
        'CC-Link-Identifier',
        'TimeStamp',
        'LocalTimeStamp',
        'PartyInformation',
        'CallingPartyNumber',
        'CalledPartyNumber',
        'Location',
        'TetraLocation',
        'GSMLocation',
        'MapDatum',
        'UMTSLocation',
        'GeographicalCoordinates',
        'GA-Point',
        'GA-PointWithUnCertainty',
        'GA-Polygon',
        'CallContentLinkCharacteristics',
        'CCLink-State',
        'Intercepted-Call-State',
        'Services-Information',
        'ISUP-parameters',
        'DSS1-parameters-codeset-0',
        'MAP-parameters',
        'Supplementary-Services',
        'Standard-Supplementary-Services',
        'Non-Standard-Supplementary-Services',
        'Other-Services',
        'ISUP-SS-parameters',
        'DSS1-SS-parameters-codeset-0',
        'DSS1-SS-parameters-codeset-4',
        'DSS1-SS-parameters-codeset-5',
        'DSS1-SS-parameters-codeset-6',
        'DSS1-SS-parameters-codeset-7',
        'DSS1-SS-Invoke-Components',
        'MAP-SS-Invoke-Components',
        'MAP-SS-Parameters',
        'SimpleIndication',
        'SciDataMode',
        'SMS-report',
        'LawfulInterceptionIdentifier',
        'National-Parameters',
        'GPRSCorrelationNumber',
        'GPRSEvent',
        'Services-Data-Information',
        'GPRS-parameters',
        'GPRSOperationErrorCode',
        'DataNodeAddress',
        'IPAddress',
        'IP-value',
        'X25Address',
        'National-HI2-ASN1parameters',
        ]
    _set_ = [
        'OperationErrors',
        ]
    _val_ = [
        'lawfulInterceptDomainId',
        'hi2DomainId',
        'hi2OperationId',
        'sending-of-IRI',
        'unknown-version',
        'missing-parameter',
        'unknown-parameter-value',
        'unknown-parameter',
        'maxNrOfPoints',
        ]
    _class_ = [
        'sending-of-IRI',
        'unknown-version',
        'missing-parameter',
        'unknown-parameter-value',
        'unknown-parameter',
        'OperationErrors',
        ]
    _param_ = [
        ]
    
    #-----< lawfulInterceptDomainId >-----#
    lawfulInterceptDomainId = OID(name='lawfulInterceptDomainId', mode=MODE_VALUE)
    lawfulInterceptDomainId._val = (0, 4, 0, 2, 2)
    
    #-----< hi2DomainId >-----#
    hi2DomainId = OID(name='hi2DomainId', mode=MODE_VALUE)
    hi2DomainId._val = (0, 4, 0, 2, 2, 1)
    
    #-----< hi2OperationId >-----#
    hi2OperationId = OID(name='hi2OperationId', mode=MODE_VALUE)
    hi2OperationId._val = (0, 4, 0, 2, 2, 1, 18)
    
    #-----< sending-of-IRI >-----#
    sending_of_IRI = CLASS(name='sending-of-IRI', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _sending_of_IRI_val_ArgumentType = CHOICE(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('HI2Operations', 'IRIsContent')))
    sending_of_IRI._val = dict([('ArgumentType', _sending_of_IRI_val_ArgumentType), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 0))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 2))]), dict([('errorCode', ('local', 3))])], rr=[], ev=None, er=[])), ('operationCode', ('global', (0, 4, 0, 2, 2, 1, 1, 1)))])
    
    #-----< IRIsContent >-----#
    IRIsContent = CHOICE(name='IRIsContent', mode=MODE_TYPE)
    _IRIsContent_iRIContent = CHOICE(name='iRIContent', mode=MODE_TYPE, typeref=ASN1RefType(('HI2Operations', 'IRIContent')))
    _IRIsContent_iRISequence = SEQ_OF(name='iRISequence', mode=MODE_TYPE, typeref=ASN1RefType(('HI2Operations', 'IRISequence')))
    IRIsContent._cont = ASN1Dict([
        ('iRIContent', _IRIsContent_iRIContent),
        ('iRISequence', _IRIsContent_iRISequence),
        ])
    IRIsContent._ext = None
    
    #-----< IRISequence >-----#
    IRISequence = SEQ_OF(name='IRISequence', mode=MODE_TYPE)
    _IRISequence__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('HI2Operations', 'IRIContent')))
    IRISequence._cont = _IRISequence__item_
    
    #-----< IRIContent >-----#
    IRIContent = CHOICE(name='IRIContent', mode=MODE_TYPE)
    _IRIContent_iRI_Begin_record = SEQ(name='iRI-Begin-record', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IRI-Parameters')))
    _IRIContent_iRI_End_record = SEQ(name='iRI-End-record', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IRI-Parameters')))
    _IRIContent_iRI_Continue_record = SEQ(name='iRI-Continue-record', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IRI-Parameters')))
    _IRIContent_iRI_Report_record = SEQ(name='iRI-Report-record', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IRI-Parameters')))
    IRIContent._cont = ASN1Dict([
        ('iRI-Begin-record', _IRIContent_iRI_Begin_record),
        ('iRI-End-record', _IRIContent_iRI_End_record),
        ('iRI-Continue-record', _IRIContent_iRI_Continue_record),
        ('iRI-Report-record', _IRIContent_iRI_Report_record),
        ])
    IRIContent._ext = []
    
    #-----< unknown-version >-----#
    unknown_version = CLASS(name='unknown-version', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    unknown_version._val = dict([('errorCode', ('local', 0))])
    
    #-----< missing-parameter >-----#
    missing_parameter = CLASS(name='missing-parameter', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    missing_parameter._val = dict([('errorCode', ('local', 1))])
    
    #-----< unknown-parameter-value >-----#
    unknown_parameter_value = CLASS(name='unknown-parameter-value', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    unknown_parameter_value._val = dict([('errorCode', ('local', 2))])
    
    #-----< unknown-parameter >-----#
    unknown_parameter = CLASS(name='unknown-parameter', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    unknown_parameter._val = dict([('errorCode', ('local', 3))])
    
    #-----< OperationErrors >-----#
    OperationErrors = CLASS(name='OperationErrors', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    OperationErrors._val = ASN1Set(rv=[dict([('errorCode', ('local', 0))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 2))]), dict([('errorCode', ('local', 3))])], rr=[], ev=None, er=[])
    
    #-----< IRI-Parameters >-----#
    IRI_Parameters = SEQ(name='IRI-Parameters', mode=MODE_TYPE)
    _IRI_Parameters_domainID = OID(name='domainID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_domainID._const_val = ASN1Set(rv=[(0, 4, 0, 2, 2, 1, 18)], rr=[], ev=None, er=[])
    _IRI_Parameters_iRIversion = ENUM(name='iRIversion', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_iRIversion._cont = ASN1Dict([('version2', 2), ('version3', 3), ('version4', 4), ('version5', 5), ('version6', 6), ('version7', 7), ('lastVersion', 8)])
    _IRI_Parameters_iRIversion._ext = ['version3', 'version4', 'version5', 'version6', 'version7', 'lastVersion']
    _IRI_Parameters_lawfulInterceptionIdentifier = OCT_STR(name='lawfulInterceptionIdentifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')))
    _IRI_Parameters_communicationIdentifier = SEQ(name='communicationIdentifier', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CommunicationIdentifier')))
    _IRI_Parameters_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _IRI_Parameters_intercepted_Call_Direct = ENUM(name='intercepted-Call-Direct', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_intercepted_Call_Direct._cont = ASN1Dict([('not-Available', 0), ('originating-Target', 1), ('terminating-Target', 2)])
    _IRI_Parameters_intercepted_Call_Direct._ext = []
    _IRI_Parameters_intercepted_Call_State = ENUM(name='intercepted-Call-State', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Intercepted-Call-State')), opt=True)
    _IRI_Parameters_ringingDuration = OCT_STR(name='ringingDuration', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_ringingDuration._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    _IRI_Parameters_conversationDuration = OCT_STR(name='conversationDuration', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_conversationDuration._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    _IRI_Parameters_locationOfTheTarget = SEQ(name='locationOfTheTarget', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Location')), opt=True)
    _IRI_Parameters_partyInformation = SET_OF(name='partyInformation', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_partyInformation__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('HI2Operations', 'PartyInformation')))
    _IRI_Parameters_partyInformation._cont = __IRI_Parameters_partyInformation__item_
    _IRI_Parameters_partyInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    _IRI_Parameters_callContentLinkInformation = SEQ(name='callContentLinkInformation', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_callContentLinkInformation_cCLink1Characteristics = SEQ(name='cCLink1Characteristics', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CallContentLinkCharacteristics')), opt=True)
    __IRI_Parameters_callContentLinkInformation_cCLink2Characteristics = SEQ(name='cCLink2Characteristics', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CallContentLinkCharacteristics')), opt=True)
    _IRI_Parameters_callContentLinkInformation._cont = ASN1Dict([
        ('cCLink1Characteristics', __IRI_Parameters_callContentLinkInformation_cCLink1Characteristics),
        ('cCLink2Characteristics', __IRI_Parameters_callContentLinkInformation_cCLink2Characteristics),
        ])
    _IRI_Parameters_callContentLinkInformation._ext = []
    _IRI_Parameters_release_Reason_Of_Intercepted_Call = OCT_STR(name='release-Reason-Of-Intercepted-Call', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_release_Reason_Of_Intercepted_Call._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _IRI_Parameters_nature_Of_The_intercepted_call = ENUM(name='nature-Of-The-intercepted-call', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_nature_Of_The_intercepted_call._cont = ASN1Dict([('gSM-ISDN-PSTN-circuit-call', 0), ('gSM-SMS-Message', 1), ('uUS4-Messages', 2), ('tETRA-circuit-call', 3), ('teTRA-Packet-Data', 4), ('gPRS-Packet-Data', 5), ('uMTS-circuit-call', 6), ('lTE-SMS-Message', 7), ('lTE-circuit-call', 8)])
    _IRI_Parameters_nature_Of_The_intercepted_call._ext = ['uMTS-circuit-call', 'lTE-SMS-Message', 'lTE-circuit-call']
    _IRI_Parameters_serverCenterAddress = SEQ(name='serverCenterAddress', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'PartyInformation')), opt=True)
    _IRI_Parameters_sMS = SEQ(name='sMS', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'SMS-report')), opt=True)
    _IRI_Parameters_cC_Link_Identifier = OCT_STR(name='cC-Link-Identifier', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CC-Link-Identifier')), opt=True)
    _IRI_Parameters_national_Parameters = SET_OF(name='national-Parameters', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'National-Parameters')), opt=True)
    _IRI_Parameters_gPRSCorrelationNumber = OCT_STR(name='gPRSCorrelationNumber', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'GPRSCorrelationNumber')), opt=True)
    _IRI_Parameters_gPRSevent = ENUM(name='gPRSevent', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'GPRSEvent')), opt=True)
    _IRI_Parameters_sgsnAddress = CHOICE(name='sgsnAddress', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    _IRI_Parameters_gPRSOperationErrorCode = OCT_STR(name='gPRSOperationErrorCode', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'GPRSOperationErrorCode')), opt=True)
    _IRI_Parameters_ggsnAddress = CHOICE(name='ggsnAddress', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    _IRI_Parameters_qOS = CHOICE(name='qOS', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'UmtsQos')), opt=True)
    _IRI_Parameters_networkIdentifier = SEQ(name='networkIdentifier', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Network-Identifier')), opt=True)
    _IRI_Parameters_sMSOriginatingAddress = CHOICE(name='sMSOriginatingAddress', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    _IRI_Parameters_sMSTerminatingAddress = CHOICE(name='sMSTerminatingAddress', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    _IRI_Parameters_iMSevent = ENUM(name='iMSevent', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'IMSevent')), opt=True)
    _IRI_Parameters_sIPMessage = OCT_STR(name='sIPMessage', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_servingSGSN_number = OCT_STR(name='servingSGSN-number', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_servingSGSN_number._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    _IRI_Parameters_servingSGSN_address = OCT_STR(name='servingSGSN-address', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_servingSGSN_address._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=17)], ev=None, er=[])
    _IRI_Parameters_tARGETACTIVITYMONITOR = SEQ(name='tARGETACTIVITYMONITOR', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('TS101909201', 'TARGETACTIVITYMONITOR-1')), opt=True)
    _IRI_Parameters_ldiEvent = ENUM(name='ldiEvent', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'LDIevent')), opt=True)
    _IRI_Parameters_correlation = CHOICE(name='correlation', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'CorrelationValues')), opt=True)
    _IRI_Parameters_tARGETACTIVITYMONITORind = SEQ(name='tARGETACTIVITYMONITORind', mode=MODE_TYPE, tag=(36, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'TARGETACTIVITYMONITORind')), opt=True)
    _IRI_Parameters_tARGETCOMMSMONITORind = SEQ(name='tARGETCOMMSMONITORind', mode=MODE_TYPE, tag=(37, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'TARGETCOMMSMONITORind')), opt=True)
    _IRI_Parameters_tTRAFFICind = SEQ(name='tTRAFFICind', mode=MODE_TYPE, tag=(38, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'TTRAFFICind')), opt=True)
    _IRI_Parameters_cTTRAFFICind = SEQ(name='cTTRAFFICind', mode=MODE_TYPE, tag=(39, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EN301040', 'CTTRAFFICind')), opt=True)
    _IRI_Parameters_servingSystem = CHOICE(name='servingSystem', mode=MODE_TYPE, tag=(40, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Network-Element-Identifier')), opt=True)
    _IRI_Parameters_national_HI2_ASN1parameters = SEQ(name='national-HI2-ASN1parameters', mode=MODE_TYPE, tag=(255, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'National-HI2-ASN1parameters')), opt=True)
    IRI_Parameters._cont = ASN1Dict([
        ('domainID', _IRI_Parameters_domainID),
        ('iRIversion', _IRI_Parameters_iRIversion),
        ('lawfulInterceptionIdentifier', _IRI_Parameters_lawfulInterceptionIdentifier),
        ('communicationIdentifier', _IRI_Parameters_communicationIdentifier),
        ('timeStamp', _IRI_Parameters_timeStamp),
        ('intercepted-Call-Direct', _IRI_Parameters_intercepted_Call_Direct),
        ('intercepted-Call-State', _IRI_Parameters_intercepted_Call_State),
        ('ringingDuration', _IRI_Parameters_ringingDuration),
        ('conversationDuration', _IRI_Parameters_conversationDuration),
        ('locationOfTheTarget', _IRI_Parameters_locationOfTheTarget),
        ('partyInformation', _IRI_Parameters_partyInformation),
        ('callContentLinkInformation', _IRI_Parameters_callContentLinkInformation),
        ('release-Reason-Of-Intercepted-Call', _IRI_Parameters_release_Reason_Of_Intercepted_Call),
        ('nature-Of-The-intercepted-call', _IRI_Parameters_nature_Of_The_intercepted_call),
        ('serverCenterAddress', _IRI_Parameters_serverCenterAddress),
        ('sMS', _IRI_Parameters_sMS),
        ('cC-Link-Identifier', _IRI_Parameters_cC_Link_Identifier),
        ('national-Parameters', _IRI_Parameters_national_Parameters),
        ('gPRSCorrelationNumber', _IRI_Parameters_gPRSCorrelationNumber),
        ('gPRSevent', _IRI_Parameters_gPRSevent),
        ('sgsnAddress', _IRI_Parameters_sgsnAddress),
        ('gPRSOperationErrorCode', _IRI_Parameters_gPRSOperationErrorCode),
        ('ggsnAddress', _IRI_Parameters_ggsnAddress),
        ('qOS', _IRI_Parameters_qOS),
        ('networkIdentifier', _IRI_Parameters_networkIdentifier),
        ('sMSOriginatingAddress', _IRI_Parameters_sMSOriginatingAddress),
        ('sMSTerminatingAddress', _IRI_Parameters_sMSTerminatingAddress),
        ('iMSevent', _IRI_Parameters_iMSevent),
        ('sIPMessage', _IRI_Parameters_sIPMessage),
        ('servingSGSN-number', _IRI_Parameters_servingSGSN_number),
        ('servingSGSN-address', _IRI_Parameters_servingSGSN_address),
        ('tARGETACTIVITYMONITOR', _IRI_Parameters_tARGETACTIVITYMONITOR),
        ('ldiEvent', _IRI_Parameters_ldiEvent),
        ('correlation', _IRI_Parameters_correlation),
        ('tARGETACTIVITYMONITORind', _IRI_Parameters_tARGETACTIVITYMONITORind),
        ('tARGETCOMMSMONITORind', _IRI_Parameters_tARGETCOMMSMONITORind),
        ('tTRAFFICind', _IRI_Parameters_tTRAFFICind),
        ('cTTRAFFICind', _IRI_Parameters_cTTRAFFICind),
        ('servingSystem', _IRI_Parameters_servingSystem),
        ('national-HI2-ASN1parameters', _IRI_Parameters_national_HI2_ASN1parameters),
        ])
    IRI_Parameters._ext = ['ggsnAddress', 'qOS', 'networkIdentifier', 'sMSOriginatingAddress', 'sMSTerminatingAddress', 'iMSevent', 'sIPMessage', 'servingSGSN-number', 'servingSGSN-address', 'tARGETACTIVITYMONITOR', 'ldiEvent', 'correlation', 'tARGETACTIVITYMONITORind', 'tARGETCOMMSMONITORind', 'tTRAFFICind', 'cTTRAFFICind', 'servingSystem', 'national-HI2-ASN1parameters']
    
    #-----< CommunicationIdentifier >-----#
    CommunicationIdentifier = SEQ(name='CommunicationIdentifier', mode=MODE_TYPE)
    _CommunicationIdentifier_communication_Identity_Number = OCT_STR(name='communication-Identity-Number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CommunicationIdentifier_communication_Identity_Number._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _CommunicationIdentifier_network_Identifier = SEQ(name='network-Identifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Network-Identifier')))
    CommunicationIdentifier._cont = ASN1Dict([
        ('communication-Identity-Number', _CommunicationIdentifier_communication_Identity_Number),
        ('network-Identifier', _CommunicationIdentifier_network_Identifier),
        ])
    CommunicationIdentifier._ext = []
    
    #-----< Network-Identifier >-----#
    Network_Identifier = SEQ(name='Network-Identifier', mode=MODE_TYPE)
    _Network_Identifier_operator_Identifier = OCT_STR(name='operator-Identifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Network_Identifier_operator_Identifier._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    _Network_Identifier_network_Element_Identifier = CHOICE(name='network-Element-Identifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Network-Element-Identifier')), opt=True)
    Network_Identifier._cont = ASN1Dict([
        ('operator-Identifier', _Network_Identifier_operator_Identifier),
        ('network-Element-Identifier', _Network_Identifier_network_Element_Identifier),
        ])
    Network_Identifier._ext = []
    
    #-----< Network-Element-Identifier >-----#
    Network_Element_Identifier = CHOICE(name='Network-Element-Identifier', mode=MODE_TYPE)
    _Network_Element_Identifier_e164_Format = OCT_STR(name='e164-Format', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Network_Element_Identifier_e164_Format._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    _Network_Element_Identifier_x25_Format = OCT_STR(name='x25-Format', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Network_Element_Identifier_x25_Format._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    _Network_Element_Identifier_iP_Format = OCT_STR(name='iP-Format', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Network_Element_Identifier_iP_Format._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    _Network_Element_Identifier_dNS_Format = OCT_STR(name='dNS-Format', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Network_Element_Identifier_dNS_Format._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    _Network_Element_Identifier_iP_Address = SEQ(name='iP-Address', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')))
    Network_Element_Identifier._cont = ASN1Dict([
        ('e164-Format', _Network_Element_Identifier_e164_Format),
        ('x25-Format', _Network_Element_Identifier_x25_Format),
        ('iP-Format', _Network_Element_Identifier_iP_Format),
        ('dNS-Format', _Network_Element_Identifier_dNS_Format),
        ('iP-Address', _Network_Element_Identifier_iP_Address),
        ])
    Network_Element_Identifier._ext = ['iP-Address']
    
    #-----< CC-Link-Identifier >-----#
    CC_Link_Identifier = OCT_STR(name='CC-Link-Identifier', mode=MODE_TYPE)
    CC_Link_Identifier._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< TimeStamp >-----#
    TimeStamp = CHOICE(name='TimeStamp', mode=MODE_TYPE)
    _TimeStamp_localTime = SEQ(name='localTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LocalTimeStamp')))
    _TimeStamp_utcTime = TIME_UTC(name='utcTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    TimeStamp._cont = ASN1Dict([
        ('localTime', _TimeStamp_localTime),
        ('utcTime', _TimeStamp_utcTime),
        ])
    TimeStamp._ext = None
    
    #-----< LocalTimeStamp >-----#
    LocalTimeStamp = SEQ(name='LocalTimeStamp', mode=MODE_TYPE)
    _LocalTimeStamp_generalizedTime = TIME_GEN(name='generalizedTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LocalTimeStamp_winterSummerIndication = ENUM(name='winterSummerIndication', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LocalTimeStamp_winterSummerIndication._cont = ASN1Dict([('notProvided', 0), ('winterTime', 1), ('summerTime', 2)])
    _LocalTimeStamp_winterSummerIndication._ext = []
    LocalTimeStamp._cont = ASN1Dict([
        ('generalizedTime', _LocalTimeStamp_generalizedTime),
        ('winterSummerIndication', _LocalTimeStamp_winterSummerIndication),
        ])
    LocalTimeStamp._ext = None
    
    #-----< PartyInformation >-----#
    PartyInformation = SEQ(name='PartyInformation', mode=MODE_TYPE)
    _PartyInformation_party_Qualifier = ENUM(name='party-Qualifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PartyInformation_party_Qualifier._cont = ASN1Dict([('originating-Party', 0), ('terminating-Party', 1), ('forwarded-to-Party', 2), ('gPRS-Target', 3)])
    _PartyInformation_party_Qualifier._ext = []
    _PartyInformation_partyIdentity = SEQ(name='partyIdentity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PartyInformation_partyIdentity_imei = OCT_STR(name='imei', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_imei._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    __PartyInformation_partyIdentity_tei = OCT_STR(name='tei', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_tei._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    __PartyInformation_partyIdentity_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_imsi._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    __PartyInformation_partyIdentity_callingPartyNumber = CHOICE(name='callingPartyNumber', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CallingPartyNumber')), opt=True)
    __PartyInformation_partyIdentity_calledPartyNumber = CHOICE(name='calledPartyNumber', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CalledPartyNumber')), opt=True)
    __PartyInformation_partyIdentity_msISDN = OCT_STR(name='msISDN', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_msISDN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    __PartyInformation_partyIdentity_e164_Format = OCT_STR(name='e164-Format', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_e164_Format._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    __PartyInformation_partyIdentity_sip_uri = OCT_STR(name='sip-uri', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_tel_url = OCT_STR(name='tel-url', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_party_Validity = ENUM(name='party-Validity', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_party_Validity._cont = ASN1Dict([('trusted', 0), ('untrusted', 1), ('operator-added', 2)])
    __PartyInformation_partyIdentity_party_Validity._ext = []
    __PartyInformation_partyIdentity_alphanumeric = STR_UTF8(name='alphanumeric', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyInformation_partyIdentity._cont = ASN1Dict([
        ('imei', __PartyInformation_partyIdentity_imei),
        ('tei', __PartyInformation_partyIdentity_tei),
        ('imsi', __PartyInformation_partyIdentity_imsi),
        ('callingPartyNumber', __PartyInformation_partyIdentity_callingPartyNumber),
        ('calledPartyNumber', __PartyInformation_partyIdentity_calledPartyNumber),
        ('msISDN', __PartyInformation_partyIdentity_msISDN),
        ('e164-Format', __PartyInformation_partyIdentity_e164_Format),
        ('sip-uri', __PartyInformation_partyIdentity_sip_uri),
        ('tel-url', __PartyInformation_partyIdentity_tel_url),
        ('party-Validity', __PartyInformation_partyIdentity_party_Validity),
        ('alphanumeric', __PartyInformation_partyIdentity_alphanumeric),
        ])
    _PartyInformation_partyIdentity._ext = ['e164-Format', 'sip-uri', 'tel-url', 'party-Validity', 'alphanumeric']
    _PartyInformation_services_Information = SEQ(name='services-Information', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Services-Information')), opt=True)
    _PartyInformation_supplementary_Services_Information = SEQ(name='supplementary-Services-Information', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Supplementary-Services')), opt=True)
    _PartyInformation_services_Data_Information = SEQ(name='services-Data-Information', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Services-Data-Information')), opt=True)
    PartyInformation._cont = ASN1Dict([
        ('party-Qualifier', _PartyInformation_party_Qualifier),
        ('partyIdentity', _PartyInformation_partyIdentity),
        ('services-Information', _PartyInformation_services_Information),
        ('supplementary-Services-Information', _PartyInformation_supplementary_Services_Information),
        ('services-Data-Information', _PartyInformation_services_Data_Information),
        ])
    PartyInformation._ext = []
    
    #-----< CallingPartyNumber >-----#
    CallingPartyNumber = CHOICE(name='CallingPartyNumber', mode=MODE_TYPE)
    _CallingPartyNumber_iSUP_Format = OCT_STR(name='iSUP-Format', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CallingPartyNumber_iSUP_Format._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    _CallingPartyNumber_dSS1_Format = OCT_STR(name='dSS1-Format', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CallingPartyNumber_dSS1_Format._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    _CallingPartyNumber_mAP_Format = OCT_STR(name='mAP-Format', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CallingPartyNumber_mAP_Format._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    CallingPartyNumber._cont = ASN1Dict([
        ('iSUP-Format', _CallingPartyNumber_iSUP_Format),
        ('dSS1-Format', _CallingPartyNumber_dSS1_Format),
        ('mAP-Format', _CallingPartyNumber_mAP_Format),
        ])
    CallingPartyNumber._ext = ['mAP-Format']
    
    #-----< CalledPartyNumber >-----#
    CalledPartyNumber = CHOICE(name='CalledPartyNumber', mode=MODE_TYPE)
    _CalledPartyNumber_iSUP_Format = OCT_STR(name='iSUP-Format', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CalledPartyNumber_iSUP_Format._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    _CalledPartyNumber_mAP_Format = OCT_STR(name='mAP-Format', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CalledPartyNumber_mAP_Format._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    _CalledPartyNumber_dSS1_Format = OCT_STR(name='dSS1-Format', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CalledPartyNumber_dSS1_Format._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    CalledPartyNumber._cont = ASN1Dict([
        ('iSUP-Format', _CalledPartyNumber_iSUP_Format),
        ('mAP-Format', _CalledPartyNumber_mAP_Format),
        ('dSS1-Format', _CalledPartyNumber_dSS1_Format),
        ])
    CalledPartyNumber._ext = []
    
    #-----< Location >-----#
    Location = SEQ(name='Location', mode=MODE_TYPE)
    _Location_e164_Number = OCT_STR(name='e164-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Location_e164_Number._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    _Location_globalCellID = OCT_STR(name='globalCellID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Location_globalCellID._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=7)], ev=None, er=[])
    _Location_tetraLocation = CHOICE(name='tetraLocation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TetraLocation')), opt=True)
    _Location_rAI = OCT_STR(name='rAI', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Location_rAI._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    _Location_gsmLocation = CHOICE(name='gsmLocation', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'GSMLocation')), opt=True)
    _Location_umtsLocation = CHOICE(name='umtsLocation', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'UMTSLocation')), opt=True)
    _Location_sAI = OCT_STR(name='sAI', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Location_sAI._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    _Location_oldRAI = OCT_STR(name='oldRAI', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Location_oldRAI._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    _Location_tAI = OCT_STR(name='tAI', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Location_tAI._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    _Location_eCGI = OCT_STR(name='eCGI', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Location_eCGI._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    Location._cont = ASN1Dict([
        ('e164-Number', _Location_e164_Number),
        ('globalCellID', _Location_globalCellID),
        ('tetraLocation', _Location_tetraLocation),
        ('rAI', _Location_rAI),
        ('gsmLocation', _Location_gsmLocation),
        ('umtsLocation', _Location_umtsLocation),
        ('sAI', _Location_sAI),
        ('oldRAI', _Location_oldRAI),
        ('tAI', _Location_tAI),
        ('eCGI', _Location_eCGI),
        ])
    Location._ext = ['oldRAI', 'tAI', 'eCGI']
    
    #-----< TetraLocation >-----#
    TetraLocation = CHOICE(name='TetraLocation', mode=MODE_TYPE)
    _TetraLocation_ms_Loc = SEQ(name='ms-Loc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __TetraLocation_ms_Loc_mcc = INT(name='mcc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __TetraLocation_ms_Loc_mcc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    __TetraLocation_ms_Loc_mnc = INT(name='mnc', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __TetraLocation_ms_Loc_mnc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16383)], ev=None, er=[])
    __TetraLocation_ms_Loc_lai = INT(name='lai', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __TetraLocation_ms_Loc_lai._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    __TetraLocation_ms_Loc_ci = INT(name='ci', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TetraLocation_ms_Loc._cont = ASN1Dict([
        ('mcc', __TetraLocation_ms_Loc_mcc),
        ('mnc', __TetraLocation_ms_Loc_mnc),
        ('lai', __TetraLocation_ms_Loc_lai),
        ('ci', __TetraLocation_ms_Loc_ci),
        ])
    _TetraLocation_ms_Loc._ext = None
    _TetraLocation_ls_Loc = INT(name='ls-Loc', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    TetraLocation._cont = ASN1Dict([
        ('ms-Loc', _TetraLocation_ms_Loc),
        ('ls-Loc', _TetraLocation_ls_Loc),
        ])
    TetraLocation._ext = None
    
    #-----< GSMLocation >-----#
    GSMLocation = CHOICE(name='GSMLocation', mode=MODE_TYPE)
    _GSMLocation_geoCoordinates = SEQ(name='geoCoordinates', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_geoCoordinates_latitude = STR_PRINT(name='latitude', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_geoCoordinates_latitude._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=7, ub=10)], ev=None, er=[])
    __GSMLocation_geoCoordinates_longitude = STR_PRINT(name='longitude', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_geoCoordinates_longitude._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=8, ub=11)], ev=None, er=[])
    __GSMLocation_geoCoordinates_mapDatum = ENUM(name='mapDatum', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'MapDatum')), default='wGS84')
    __GSMLocation_geoCoordinates_azimuth = INT(name='azimuth', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GSMLocation_geoCoordinates_azimuth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=359)], ev=None, er=[])
    _GSMLocation_geoCoordinates._cont = ASN1Dict([
        ('latitude', __GSMLocation_geoCoordinates_latitude),
        ('longitude', __GSMLocation_geoCoordinates_longitude),
        ('mapDatum', __GSMLocation_geoCoordinates_mapDatum),
        ('azimuth', __GSMLocation_geoCoordinates_azimuth),
        ])
    _GSMLocation_geoCoordinates._ext = ['azimuth']
    _GSMLocation_utmCoordinates = SEQ(name='utmCoordinates', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_utmCoordinates_utm_East = STR_PRINT(name='utm-East', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_utmCoordinates_utm_East._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    __GSMLocation_utmCoordinates_utm_North = STR_PRINT(name='utm-North', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_utmCoordinates_utm_North._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    __GSMLocation_utmCoordinates_mapDatum = ENUM(name='mapDatum', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'MapDatum')), default='wGS84')
    __GSMLocation_utmCoordinates_azimuth = INT(name='azimuth', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GSMLocation_utmCoordinates_azimuth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=359)], ev=None, er=[])
    _GSMLocation_utmCoordinates._cont = ASN1Dict([
        ('utm-East', __GSMLocation_utmCoordinates_utm_East),
        ('utm-North', __GSMLocation_utmCoordinates_utm_North),
        ('mapDatum', __GSMLocation_utmCoordinates_mapDatum),
        ('azimuth', __GSMLocation_utmCoordinates_azimuth),
        ])
    _GSMLocation_utmCoordinates._ext = ['azimuth']
    _GSMLocation_utmRefCoordinates = SEQ(name='utmRefCoordinates', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_utmRefCoordinates_utmref_string = STR_PRINT(name='utmref-string', mode=MODE_TYPE)
    __GSMLocation_utmRefCoordinates_utmref_string._const_sz = ASN1Set(rv=[13], rr=[], ev=None, er=[])
    __GSMLocation_utmRefCoordinates_mapDatum = ENUM(name='mapDatum', mode=MODE_TYPE, typeref=ASN1RefType(('HI2Operations', 'MapDatum')), default='wGS84')
    _GSMLocation_utmRefCoordinates._cont = ASN1Dict([
        ('utmref-string', __GSMLocation_utmRefCoordinates_utmref_string),
        ('mapDatum', __GSMLocation_utmRefCoordinates_mapDatum),
        ])
    _GSMLocation_utmRefCoordinates._ext = []
    _GSMLocation_wGS84Coordinates = OCT_STR(name='wGS84Coordinates', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    GSMLocation._cont = ASN1Dict([
        ('geoCoordinates', _GSMLocation_geoCoordinates),
        ('utmCoordinates', _GSMLocation_utmCoordinates),
        ('utmRefCoordinates', _GSMLocation_utmRefCoordinates),
        ('wGS84Coordinates', _GSMLocation_wGS84Coordinates),
        ])
    GSMLocation._ext = None
    
    #-----< MapDatum >-----#
    MapDatum = ENUM(name='MapDatum', mode=MODE_TYPE)
    MapDatum._cont = ASN1Dict([('wGS84', 0), ('wGS72', 1), ('eD50', 2)])
    MapDatum._ext = []
    
    #-----< UMTSLocation >-----#
    UMTSLocation = CHOICE(name='UMTSLocation', mode=MODE_TYPE)
    _UMTSLocation_point = SEQ(name='point', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'GA-Point')))
    _UMTSLocation_pointWithUnCertainty = SEQ(name='pointWithUnCertainty', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'GA-PointWithUnCertainty')))
    _UMTSLocation_polygon = SEQ_OF(name='polygon', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'GA-Polygon')))
    UMTSLocation._cont = ASN1Dict([
        ('point', _UMTSLocation_point),
        ('pointWithUnCertainty', _UMTSLocation_pointWithUnCertainty),
        ('polygon', _UMTSLocation_polygon),
        ])
    UMTSLocation._ext = []
    
    #-----< GeographicalCoordinates >-----#
    GeographicalCoordinates = SEQ(name='GeographicalCoordinates', mode=MODE_TYPE)
    _GeographicalCoordinates_latitudeSign = ENUM(name='latitudeSign', mode=MODE_TYPE)
    _GeographicalCoordinates_latitudeSign._cont = ASN1Dict([('north', 0), ('south', 1)])
    _GeographicalCoordinates_latitudeSign._ext = None
    _GeographicalCoordinates_latitude = INT(name='latitude', mode=MODE_TYPE)
    _GeographicalCoordinates_latitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8388607)], ev=None, er=[])
    _GeographicalCoordinates_longitude = INT(name='longitude', mode=MODE_TYPE)
    _GeographicalCoordinates_longitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    GeographicalCoordinates._cont = ASN1Dict([
        ('latitudeSign', _GeographicalCoordinates_latitudeSign),
        ('latitude', _GeographicalCoordinates_latitude),
        ('longitude', _GeographicalCoordinates_longitude),
        ])
    GeographicalCoordinates._ext = []
    
    #-----< GA-Point >-----#
    GA_Point = SEQ(name='GA-Point', mode=MODE_TYPE)
    _GA_Point_geographicalCoordinates = SEQ(name='geographicalCoordinates', mode=MODE_TYPE, typeref=ASN1RefType(('HI2Operations', 'GeographicalCoordinates')))
    GA_Point._cont = ASN1Dict([
        ('geographicalCoordinates', _GA_Point_geographicalCoordinates),
        ])
    GA_Point._ext = []
    
    #-----< GA-PointWithUnCertainty >-----#
    GA_PointWithUnCertainty = SEQ(name='GA-PointWithUnCertainty', mode=MODE_TYPE)
    _GA_PointWithUnCertainty_geographicalCoordinates = SEQ(name='geographicalCoordinates', mode=MODE_TYPE, typeref=ASN1RefType(('HI2Operations', 'GeographicalCoordinates')))
    _GA_PointWithUnCertainty_uncertaintyCode = INT(name='uncertaintyCode', mode=MODE_TYPE)
    _GA_PointWithUnCertainty_uncertaintyCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    GA_PointWithUnCertainty._cont = ASN1Dict([
        ('geographicalCoordinates', _GA_PointWithUnCertainty_geographicalCoordinates),
        ('uncertaintyCode', _GA_PointWithUnCertainty_uncertaintyCode),
        ])
    GA_PointWithUnCertainty._ext = None
    
    #-----< maxNrOfPoints >-----#
    maxNrOfPoints = INT(name='maxNrOfPoints', mode=MODE_VALUE)
    maxNrOfPoints._val = 15
    
    #-----< GA-Polygon >-----#
    GA_Polygon = SEQ_OF(name='GA-Polygon', mode=MODE_TYPE)
    _GA_Polygon__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    __GA_Polygon__item__geographicalCoordinates = SEQ(name='geographicalCoordinates', mode=MODE_TYPE, typeref=ASN1RefType(('HI2Operations', 'GeographicalCoordinates')))
    _GA_Polygon__item_._cont = ASN1Dict([
        ('geographicalCoordinates', __GA_Polygon__item__geographicalCoordinates),
        ])
    _GA_Polygon__item_._ext = []
    GA_Polygon._cont = _GA_Polygon__item_
    GA_Polygon._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    
    #-----< CallContentLinkCharacteristics >-----#
    CallContentLinkCharacteristics = SEQ(name='CallContentLinkCharacteristics', mode=MODE_TYPE)
    _CallContentLinkCharacteristics_cCLink_State = ENUM(name='cCLink-State', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CCLink-State')), opt=True)
    _CallContentLinkCharacteristics_release_Time = CHOICE(name='release-Time', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')), opt=True)
    _CallContentLinkCharacteristics_release_Reason = OCT_STR(name='release-Reason', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CallContentLinkCharacteristics_release_Reason._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _CallContentLinkCharacteristics_lEMF_Address = CHOICE(name='lEMF-Address', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CalledPartyNumber')), opt=True)
    CallContentLinkCharacteristics._cont = ASN1Dict([
        ('cCLink-State', _CallContentLinkCharacteristics_cCLink_State),
        ('release-Time', _CallContentLinkCharacteristics_release_Time),
        ('release-Reason', _CallContentLinkCharacteristics_release_Reason),
        ('lEMF-Address', _CallContentLinkCharacteristics_lEMF_Address),
        ])
    CallContentLinkCharacteristics._ext = []
    
    #-----< CCLink-State >-----#
    CCLink_State = ENUM(name='CCLink-State', mode=MODE_TYPE)
    CCLink_State._cont = ASN1Dict([('setUpInProcess', 1), ('callActive', 2), ('callReleased', 3), ('lack-of-resource', 4)])
    CCLink_State._ext = []
    
    #-----< Intercepted-Call-State >-----#
    Intercepted_Call_State = ENUM(name='Intercepted-Call-State', mode=MODE_TYPE)
    Intercepted_Call_State._cont = ASN1Dict([('idle', 1), ('setUpInProcess', 2), ('connected', 3)])
    Intercepted_Call_State._ext = []
    
    #-----< Services-Information >-----#
    Services_Information = SEQ(name='Services-Information', mode=MODE_TYPE)
    _Services_Information_iSUP_parameters = SET_OF(name='iSUP-parameters', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'ISUP-parameters')), opt=True)
    _Services_Information_dSS1_parameters_codeset_0 = SET_OF(name='dSS1-parameters-codeset-0', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DSS1-parameters-codeset-0')), opt=True)
    _Services_Information_mAP_parameters = SET_OF(name='mAP-parameters', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'MAP-parameters')), opt=True)
    Services_Information._cont = ASN1Dict([
        ('iSUP-parameters', _Services_Information_iSUP_parameters),
        ('dSS1-parameters-codeset-0', _Services_Information_dSS1_parameters_codeset_0),
        ('mAP-parameters', _Services_Information_mAP_parameters),
        ])
    Services_Information._ext = ['mAP-parameters']
    
    #-----< ISUP-parameters >-----#
    ISUP_parameters = SET_OF(name='ISUP-parameters', mode=MODE_TYPE)
    _ISUP_parameters__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _ISUP_parameters__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    ISUP_parameters._cont = _ISUP_parameters__item_
    ISUP_parameters._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    
    #-----< DSS1-parameters-codeset-0 >-----#
    DSS1_parameters_codeset_0 = SET_OF(name='DSS1-parameters-codeset-0', mode=MODE_TYPE)
    _DSS1_parameters_codeset_0__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _DSS1_parameters_codeset_0__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    DSS1_parameters_codeset_0._cont = _DSS1_parameters_codeset_0__item_
    DSS1_parameters_codeset_0._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    
    #-----< MAP-parameters >-----#
    MAP_parameters = SET_OF(name='MAP-parameters', mode=MODE_TYPE)
    _MAP_parameters__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _MAP_parameters__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    MAP_parameters._cont = _MAP_parameters__item_
    MAP_parameters._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    
    #-----< Supplementary-Services >-----#
    Supplementary_Services = SEQ(name='Supplementary-Services', mode=MODE_TYPE)
    _Supplementary_Services_standard_Supplementary_Services = SEQ(name='standard-Supplementary-Services', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Standard-Supplementary-Services')), opt=True)
    _Supplementary_Services_non_Standard_Supplementary_Services = SET_OF(name='non-Standard-Supplementary-Services', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Non-Standard-Supplementary-Services')), opt=True)
    _Supplementary_Services_other_Services = SET_OF(name='other-Services', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Other-Services')), opt=True)
    Supplementary_Services._cont = ASN1Dict([
        ('standard-Supplementary-Services', _Supplementary_Services_standard_Supplementary_Services),
        ('non-Standard-Supplementary-Services', _Supplementary_Services_non_Standard_Supplementary_Services),
        ('other-Services', _Supplementary_Services_other_Services),
        ])
    Supplementary_Services._ext = []
    
    #-----< Standard-Supplementary-Services >-----#
    Standard_Supplementary_Services = SEQ(name='Standard-Supplementary-Services', mode=MODE_TYPE)
    _Standard_Supplementary_Services_iSUP_SS_parameters = SET_OF(name='iSUP-SS-parameters', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'ISUP-SS-parameters')), opt=True)
    _Standard_Supplementary_Services_dSS1_SS_parameters_codeset_0 = SET_OF(name='dSS1-SS-parameters-codeset-0', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DSS1-SS-parameters-codeset-0')), opt=True)
    _Standard_Supplementary_Services_dSS1_SS_parameters_codeset_4 = SET_OF(name='dSS1-SS-parameters-codeset-4', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DSS1-SS-parameters-codeset-4')), opt=True)
    _Standard_Supplementary_Services_dSS1_SS_parameters_codeset_5 = SET_OF(name='dSS1-SS-parameters-codeset-5', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DSS1-SS-parameters-codeset-5')), opt=True)
    _Standard_Supplementary_Services_dSS1_SS_parameters_codeset_6 = SET_OF(name='dSS1-SS-parameters-codeset-6', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DSS1-SS-parameters-codeset-6')), opt=True)
    _Standard_Supplementary_Services_dSS1_SS_parameters_codeset_7 = SET_OF(name='dSS1-SS-parameters-codeset-7', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DSS1-SS-parameters-codeset-7')), opt=True)
    _Standard_Supplementary_Services_dSS1_SS_Invoke_components = SET_OF(name='dSS1-SS-Invoke-components', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DSS1-SS-Invoke-Components')), opt=True)
    _Standard_Supplementary_Services_mAP_SS_Parameters = SET_OF(name='mAP-SS-Parameters', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'MAP-SS-Parameters')), opt=True)
    _Standard_Supplementary_Services_mAP_SS_Invoke_Components = SET_OF(name='mAP-SS-Invoke-Components', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'MAP-SS-Invoke-Components')), opt=True)
    Standard_Supplementary_Services._cont = ASN1Dict([
        ('iSUP-SS-parameters', _Standard_Supplementary_Services_iSUP_SS_parameters),
        ('dSS1-SS-parameters-codeset-0', _Standard_Supplementary_Services_dSS1_SS_parameters_codeset_0),
        ('dSS1-SS-parameters-codeset-4', _Standard_Supplementary_Services_dSS1_SS_parameters_codeset_4),
        ('dSS1-SS-parameters-codeset-5', _Standard_Supplementary_Services_dSS1_SS_parameters_codeset_5),
        ('dSS1-SS-parameters-codeset-6', _Standard_Supplementary_Services_dSS1_SS_parameters_codeset_6),
        ('dSS1-SS-parameters-codeset-7', _Standard_Supplementary_Services_dSS1_SS_parameters_codeset_7),
        ('dSS1-SS-Invoke-components', _Standard_Supplementary_Services_dSS1_SS_Invoke_components),
        ('mAP-SS-Parameters', _Standard_Supplementary_Services_mAP_SS_Parameters),
        ('mAP-SS-Invoke-Components', _Standard_Supplementary_Services_mAP_SS_Invoke_Components),
        ])
    Standard_Supplementary_Services._ext = []
    
    #-----< Non-Standard-Supplementary-Services >-----#
    Non_Standard_Supplementary_Services = SET_OF(name='Non-Standard-Supplementary-Services', mode=MODE_TYPE)
    _Non_Standard_Supplementary_Services__item_ = CHOICE(name='_item_', mode=MODE_TYPE)
    __Non_Standard_Supplementary_Services__item__simpleIndication = ENUM(name='simpleIndication', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'SimpleIndication')))
    __Non_Standard_Supplementary_Services__item__sciData = OCT_STR(name='sciData', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'SciDataMode')))
    _Non_Standard_Supplementary_Services__item_._cont = ASN1Dict([
        ('simpleIndication', __Non_Standard_Supplementary_Services__item__simpleIndication),
        ('sciData', __Non_Standard_Supplementary_Services__item__sciData),
        ])
    _Non_Standard_Supplementary_Services__item_._ext = []
    Non_Standard_Supplementary_Services._cont = _Non_Standard_Supplementary_Services__item_
    Non_Standard_Supplementary_Services._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< Other-Services >-----#
    Other_Services = SET_OF(name='Other-Services', mode=MODE_TYPE)
    _Other_Services__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _Other_Services__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    Other_Services._cont = _Other_Services__item_
    Other_Services._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< ISUP-SS-parameters >-----#
    ISUP_SS_parameters = SET_OF(name='ISUP-SS-parameters', mode=MODE_TYPE)
    _ISUP_SS_parameters__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _ISUP_SS_parameters__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    ISUP_SS_parameters._cont = _ISUP_SS_parameters__item_
    ISUP_SS_parameters._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    
    #-----< DSS1-SS-parameters-codeset-0 >-----#
    DSS1_SS_parameters_codeset_0 = SET_OF(name='DSS1-SS-parameters-codeset-0', mode=MODE_TYPE)
    _DSS1_SS_parameters_codeset_0__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _DSS1_SS_parameters_codeset_0__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    DSS1_SS_parameters_codeset_0._cont = _DSS1_SS_parameters_codeset_0__item_
    DSS1_SS_parameters_codeset_0._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    
    #-----< DSS1-SS-parameters-codeset-4 >-----#
    DSS1_SS_parameters_codeset_4 = SET_OF(name='DSS1-SS-parameters-codeset-4', mode=MODE_TYPE)
    _DSS1_SS_parameters_codeset_4__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _DSS1_SS_parameters_codeset_4__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    DSS1_SS_parameters_codeset_4._cont = _DSS1_SS_parameters_codeset_4__item_
    DSS1_SS_parameters_codeset_4._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    
    #-----< DSS1-SS-parameters-codeset-5 >-----#
    DSS1_SS_parameters_codeset_5 = SET_OF(name='DSS1-SS-parameters-codeset-5', mode=MODE_TYPE)
    _DSS1_SS_parameters_codeset_5__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _DSS1_SS_parameters_codeset_5__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    DSS1_SS_parameters_codeset_5._cont = _DSS1_SS_parameters_codeset_5__item_
    DSS1_SS_parameters_codeset_5._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    
    #-----< DSS1-SS-parameters-codeset-6 >-----#
    DSS1_SS_parameters_codeset_6 = SET_OF(name='DSS1-SS-parameters-codeset-6', mode=MODE_TYPE)
    _DSS1_SS_parameters_codeset_6__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _DSS1_SS_parameters_codeset_6__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    DSS1_SS_parameters_codeset_6._cont = _DSS1_SS_parameters_codeset_6__item_
    DSS1_SS_parameters_codeset_6._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    
    #-----< DSS1-SS-parameters-codeset-7 >-----#
    DSS1_SS_parameters_codeset_7 = SET_OF(name='DSS1-SS-parameters-codeset-7', mode=MODE_TYPE)
    _DSS1_SS_parameters_codeset_7__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _DSS1_SS_parameters_codeset_7__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    DSS1_SS_parameters_codeset_7._cont = _DSS1_SS_parameters_codeset_7__item_
    DSS1_SS_parameters_codeset_7._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    
    #-----< DSS1-SS-Invoke-Components >-----#
    DSS1_SS_Invoke_Components = SET_OF(name='DSS1-SS-Invoke-Components', mode=MODE_TYPE)
    _DSS1_SS_Invoke_Components__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _DSS1_SS_Invoke_Components__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    DSS1_SS_Invoke_Components._cont = _DSS1_SS_Invoke_Components__item_
    DSS1_SS_Invoke_Components._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    
    #-----< MAP-SS-Invoke-Components >-----#
    MAP_SS_Invoke_Components = SET_OF(name='MAP-SS-Invoke-Components', mode=MODE_TYPE)
    _MAP_SS_Invoke_Components__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _MAP_SS_Invoke_Components__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    MAP_SS_Invoke_Components._cont = _MAP_SS_Invoke_Components__item_
    MAP_SS_Invoke_Components._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    
    #-----< MAP-SS-Parameters >-----#
    MAP_SS_Parameters = SET_OF(name='MAP-SS-Parameters', mode=MODE_TYPE)
    _MAP_SS_Parameters__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _MAP_SS_Parameters__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    MAP_SS_Parameters._cont = _MAP_SS_Parameters__item_
    MAP_SS_Parameters._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    
    #-----< SimpleIndication >-----#
    SimpleIndication = ENUM(name='SimpleIndication', mode=MODE_TYPE)
    SimpleIndication._cont = ASN1Dict([('call-Waiting-Indication', 0), ('add-conf-Indication', 1), ('call-on-hold-Indication', 2), ('retrieve-Indication', 3), ('suspend-Indication', 4), ('resume-Indication', 5), ('answer-Indication', 6)])
    SimpleIndication._ext = []
    
    #-----< SciDataMode >-----#
    SciDataMode = OCT_STR(name='SciDataMode', mode=MODE_TYPE)
    SciDataMode._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    
    #-----< SMS-report >-----#
    SMS_report = SEQ(name='SMS-report', mode=MODE_TYPE)
    _SMS_report_communicationIdentifier = SEQ(name='communicationIdentifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CommunicationIdentifier')))
    _SMS_report_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _SMS_report_sMS_Contents = SEQ(name='sMS-Contents', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SMS_report_sMS_Contents_initiator = ENUM(name='initiator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SMS_report_sMS_Contents_initiator._cont = ASN1Dict([('target', 0), ('server', 1), ('undefined-party', 2)])
    __SMS_report_sMS_Contents_initiator._ext = []
    __SMS_report_sMS_Contents_transfer_status = ENUM(name='transfer-status', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SMS_report_sMS_Contents_transfer_status._cont = ASN1Dict([('succeed-transfer', 0), ('not-succeed-transfer', 1), ('undefined', 2)])
    __SMS_report_sMS_Contents_transfer_status._ext = []
    __SMS_report_sMS_Contents_other_message = ENUM(name='other-message', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SMS_report_sMS_Contents_other_message._cont = ASN1Dict([('yes', 0), ('no', 1), ('undefined', 2)])
    __SMS_report_sMS_Contents_other_message._ext = []
    __SMS_report_sMS_Contents_content = OCT_STR(name='content', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SMS_report_sMS_Contents_content._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=270)], ev=None, er=[])
    __SMS_report_sMS_Contents_enhancedContent = SEQ(name='enhancedContent', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___SMS_report_sMS_Contents_enhancedContent_content = OCT_STR(name='content', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SMS_report_sMS_Contents_enhancedContent_character_encoding = ENUM(name='character-encoding', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SMS_report_sMS_Contents_enhancedContent_character_encoding._cont = ASN1Dict([('gsm-7-bit-ascii', 0), ('eight-bit-ascii', 1), ('eight-bit-binary', 2), ('ucs-2', 3), ('utf-8', 4), ('utf-16', 5), ('other', 6)])
    ___SMS_report_sMS_Contents_enhancedContent_character_encoding._ext = []
    __SMS_report_sMS_Contents_enhancedContent._cont = ASN1Dict([
        ('content', ___SMS_report_sMS_Contents_enhancedContent_content),
        ('character-encoding', ___SMS_report_sMS_Contents_enhancedContent_character_encoding),
        ])
    __SMS_report_sMS_Contents_enhancedContent._ext = None
    _SMS_report_sMS_Contents._cont = ASN1Dict([
        ('initiator', __SMS_report_sMS_Contents_initiator),
        ('transfer-status', __SMS_report_sMS_Contents_transfer_status),
        ('other-message', __SMS_report_sMS_Contents_other_message),
        ('content', __SMS_report_sMS_Contents_content),
        ('enhancedContent', __SMS_report_sMS_Contents_enhancedContent),
        ])
    _SMS_report_sMS_Contents._ext = ['enhancedContent']
    SMS_report._cont = ASN1Dict([
        ('communicationIdentifier', _SMS_report_communicationIdentifier),
        ('timeStamp', _SMS_report_timeStamp),
        ('sMS-Contents', _SMS_report_sMS_Contents),
        ])
    SMS_report._ext = None
    
    #-----< LawfulInterceptionIdentifier >-----#
    LawfulInterceptionIdentifier = OCT_STR(name='LawfulInterceptionIdentifier', mode=MODE_TYPE)
    LawfulInterceptionIdentifier._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    
    #-----< National-Parameters >-----#
    National_Parameters = SET_OF(name='National-Parameters', mode=MODE_TYPE)
    _National_Parameters__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _National_Parameters__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    National_Parameters._cont = _National_Parameters__item_
    National_Parameters._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=40)], ev=None, er=[])
    
    #-----< GPRSCorrelationNumber >-----#
    GPRSCorrelationNumber = OCT_STR(name='GPRSCorrelationNumber', mode=MODE_TYPE)
    GPRSCorrelationNumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=8, ub=20)], ev=None, er=[])
    
    #-----< GPRSEvent >-----#
    GPRSEvent = ENUM(name='GPRSEvent', mode=MODE_TYPE)
    GPRSEvent._cont = ASN1Dict([('pDPContextActivation', 1), ('startOfInterceptionWithPDPContextActive', 2), ('pDPContextDeactivation', 4), ('gPRSAttach', 5), ('gPRSDetach', 6), ('cellOrRAUpdate', 10), ('sMS', 11), ('pDPContextModification', 13), ('endOfInterceptionWithPDPContextActive', 14)])
    GPRSEvent._ext = ['pDPContextModification', 'endOfInterceptionWithPDPContextActive']
    
    #-----< Services-Data-Information >-----#
    Services_Data_Information = SEQ(name='Services-Data-Information', mode=MODE_TYPE)
    _Services_Data_Information_gPRS_parameters = SEQ(name='gPRS-parameters', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'GPRS-parameters')), opt=True)
    Services_Data_Information._cont = ASN1Dict([
        ('gPRS-parameters', _Services_Data_Information_gPRS_parameters),
        ])
    Services_Data_Information._ext = []
    
    #-----< GPRS-parameters >-----#
    GPRS_parameters = SEQ(name='GPRS-parameters', mode=MODE_TYPE)
    _GPRS_parameters_pDP_address_allocated_to_the_target = CHOICE(name='pDP-address-allocated-to-the-target', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    _GPRS_parameters_aPN = OCT_STR(name='aPN', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GPRS_parameters_aPN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=100)], ev=None, er=[])
    _GPRS_parameters_pDP_type = OCT_STR(name='pDP-type', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GPRS_parameters_pDP_type._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _GPRS_parameters_nSAPI = OCT_STR(name='nSAPI', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GPRS_parameters_nSAPI._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _GPRS_parameters_additionalIPaddress = CHOICE(name='additionalIPaddress', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    GPRS_parameters._cont = ASN1Dict([
        ('pDP-address-allocated-to-the-target', _GPRS_parameters_pDP_address_allocated_to_the_target),
        ('aPN', _GPRS_parameters_aPN),
        ('pDP-type', _GPRS_parameters_pDP_type),
        ('nSAPI', _GPRS_parameters_nSAPI),
        ('additionalIPaddress', _GPRS_parameters_additionalIPaddress),
        ])
    GPRS_parameters._ext = ['nSAPI', 'additionalIPaddress']
    
    #-----< GPRSOperationErrorCode >-----#
    GPRSOperationErrorCode = OCT_STR(name='GPRSOperationErrorCode', mode=MODE_TYPE)
    GPRSOperationErrorCode._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< DataNodeAddress >-----#
    DataNodeAddress = CHOICE(name='DataNodeAddress', mode=MODE_TYPE)
    _DataNodeAddress_ipAddress = SEQ(name='ipAddress', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')))
    _DataNodeAddress_x25Address = OCT_STR(name='x25Address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'X25Address')))
    DataNodeAddress._cont = ASN1Dict([
        ('ipAddress', _DataNodeAddress_ipAddress),
        ('x25Address', _DataNodeAddress_x25Address),
        ])
    DataNodeAddress._ext = []
    
    #-----< IPAddress >-----#
    IPAddress = SEQ(name='IPAddress', mode=MODE_TYPE)
    _IPAddress_iP_type = ENUM(name='iP-type', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IPAddress_iP_type._cont = ASN1Dict([('iPV4', 0), ('iPV6', 1)])
    _IPAddress_iP_type._ext = []
    _IPAddress_iP_value = CHOICE(name='iP-value', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IP-value')))
    _IPAddress_iP_assignment = ENUM(name='iP-assignment', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IPAddress_iP_assignment._cont = ASN1Dict([('static', 1), ('dynamic', 2), ('notKnown', 3)])
    _IPAddress_iP_assignment._ext = []
    _IPAddress_iPv6PrefixLength = INT(name='iPv6PrefixLength', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IPAddress_iPv6PrefixLength._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    _IPAddress_iPv4SubnetMask = OCT_STR(name='iPv4SubnetMask', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IPAddress_iPv4SubnetMask._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    IPAddress._cont = ASN1Dict([
        ('iP-type', _IPAddress_iP_type),
        ('iP-value', _IPAddress_iP_value),
        ('iP-assignment', _IPAddress_iP_assignment),
        ('iPv6PrefixLength', _IPAddress_iPv6PrefixLength),
        ('iPv4SubnetMask', _IPAddress_iPv4SubnetMask),
        ])
    IPAddress._ext = ['iPv6PrefixLength', 'iPv4SubnetMask']
    
    #-----< IP-value >-----#
    IP_value = CHOICE(name='IP-value', mode=MODE_TYPE)
    _IP_value_iPBinaryAddress = OCT_STR(name='iPBinaryAddress', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IP_value_iPBinaryAddress._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=4, ub=16)], ev=None, er=[])
    _IP_value_iPTextAddress = STR_IA5(name='iPTextAddress', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IP_value_iPTextAddress._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=7, ub=45)], ev=None, er=[])
    IP_value._cont = ASN1Dict([
        ('iPBinaryAddress', _IP_value_iPBinaryAddress),
        ('iPTextAddress', _IP_value_iPTextAddress),
        ])
    IP_value._ext = []
    
    #-----< X25Address >-----#
    X25Address = OCT_STR(name='X25Address', mode=MODE_TYPE)
    X25Address._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    
    #-----< National-HI2-ASN1parameters >-----#
    National_HI2_ASN1parameters = SEQ(name='National-HI2-ASN1parameters', mode=MODE_TYPE)
    _National_HI2_ASN1parameters_countryCode = STR_PRINT(name='countryCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _National_HI2_ASN1parameters_countryCode._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    National_HI2_ASN1parameters._cont = ASN1Dict([
        ('countryCode', _National_HI2_ASN1parameters_countryCode),
        ])
    National_HI2_ASN1parameters._ext = []
    
    _all_ = [
        lawfulInterceptDomainId,
        hi2DomainId,
        hi2OperationId,
        sending_of_IRI,
        _sending_of_IRI_val_ArgumentType,
        _IRIsContent_iRIContent,
        _IRIsContent_iRISequence,
        IRIsContent,
        _IRISequence__item_,
        IRISequence,
        _IRIContent_iRI_Begin_record,
        _IRIContent_iRI_End_record,
        _IRIContent_iRI_Continue_record,
        _IRIContent_iRI_Report_record,
        IRIContent,
        unknown_version,
        missing_parameter,
        unknown_parameter_value,
        unknown_parameter,
        OperationErrors,
        _IRI_Parameters_domainID,
        _IRI_Parameters_iRIversion,
        _IRI_Parameters_lawfulInterceptionIdentifier,
        _IRI_Parameters_communicationIdentifier,
        _IRI_Parameters_timeStamp,
        _IRI_Parameters_intercepted_Call_Direct,
        _IRI_Parameters_intercepted_Call_State,
        _IRI_Parameters_ringingDuration,
        _IRI_Parameters_conversationDuration,
        _IRI_Parameters_locationOfTheTarget,
        __IRI_Parameters_partyInformation__item_,
        _IRI_Parameters_partyInformation,
        __IRI_Parameters_callContentLinkInformation_cCLink1Characteristics,
        __IRI_Parameters_callContentLinkInformation_cCLink2Characteristics,
        _IRI_Parameters_callContentLinkInformation,
        _IRI_Parameters_release_Reason_Of_Intercepted_Call,
        _IRI_Parameters_nature_Of_The_intercepted_call,
        _IRI_Parameters_serverCenterAddress,
        _IRI_Parameters_sMS,
        _IRI_Parameters_cC_Link_Identifier,
        _IRI_Parameters_national_Parameters,
        _IRI_Parameters_gPRSCorrelationNumber,
        _IRI_Parameters_gPRSevent,
        _IRI_Parameters_sgsnAddress,
        _IRI_Parameters_gPRSOperationErrorCode,
        _IRI_Parameters_ggsnAddress,
        _IRI_Parameters_qOS,
        _IRI_Parameters_networkIdentifier,
        _IRI_Parameters_sMSOriginatingAddress,
        _IRI_Parameters_sMSTerminatingAddress,
        _IRI_Parameters_iMSevent,
        _IRI_Parameters_sIPMessage,
        _IRI_Parameters_servingSGSN_number,
        _IRI_Parameters_servingSGSN_address,
        _IRI_Parameters_tARGETACTIVITYMONITOR,
        _IRI_Parameters_ldiEvent,
        _IRI_Parameters_correlation,
        _IRI_Parameters_tARGETACTIVITYMONITORind,
        _IRI_Parameters_tARGETCOMMSMONITORind,
        _IRI_Parameters_tTRAFFICind,
        _IRI_Parameters_cTTRAFFICind,
        _IRI_Parameters_servingSystem,
        _IRI_Parameters_national_HI2_ASN1parameters,
        IRI_Parameters,
        _CommunicationIdentifier_communication_Identity_Number,
        _CommunicationIdentifier_network_Identifier,
        CommunicationIdentifier,
        _Network_Identifier_operator_Identifier,
        _Network_Identifier_network_Element_Identifier,
        Network_Identifier,
        _Network_Element_Identifier_e164_Format,
        _Network_Element_Identifier_x25_Format,
        _Network_Element_Identifier_iP_Format,
        _Network_Element_Identifier_dNS_Format,
        _Network_Element_Identifier_iP_Address,
        Network_Element_Identifier,
        CC_Link_Identifier,
        _TimeStamp_localTime,
        _TimeStamp_utcTime,
        TimeStamp,
        _LocalTimeStamp_generalizedTime,
        _LocalTimeStamp_winterSummerIndication,
        LocalTimeStamp,
        _PartyInformation_party_Qualifier,
        __PartyInformation_partyIdentity_imei,
        __PartyInformation_partyIdentity_tei,
        __PartyInformation_partyIdentity_imsi,
        __PartyInformation_partyIdentity_callingPartyNumber,
        __PartyInformation_partyIdentity_calledPartyNumber,
        __PartyInformation_partyIdentity_msISDN,
        __PartyInformation_partyIdentity_e164_Format,
        __PartyInformation_partyIdentity_sip_uri,
        __PartyInformation_partyIdentity_tel_url,
        __PartyInformation_partyIdentity_party_Validity,
        __PartyInformation_partyIdentity_alphanumeric,
        _PartyInformation_partyIdentity,
        _PartyInformation_services_Information,
        _PartyInformation_supplementary_Services_Information,
        _PartyInformation_services_Data_Information,
        PartyInformation,
        _CallingPartyNumber_iSUP_Format,
        _CallingPartyNumber_dSS1_Format,
        _CallingPartyNumber_mAP_Format,
        CallingPartyNumber,
        _CalledPartyNumber_iSUP_Format,
        _CalledPartyNumber_mAP_Format,
        _CalledPartyNumber_dSS1_Format,
        CalledPartyNumber,
        _Location_e164_Number,
        _Location_globalCellID,
        _Location_tetraLocation,
        _Location_rAI,
        _Location_gsmLocation,
        _Location_umtsLocation,
        _Location_sAI,
        _Location_oldRAI,
        _Location_tAI,
        _Location_eCGI,
        Location,
        __TetraLocation_ms_Loc_mcc,
        __TetraLocation_ms_Loc_mnc,
        __TetraLocation_ms_Loc_lai,
        __TetraLocation_ms_Loc_ci,
        _TetraLocation_ms_Loc,
        _TetraLocation_ls_Loc,
        TetraLocation,
        __GSMLocation_geoCoordinates_latitude,
        __GSMLocation_geoCoordinates_longitude,
        __GSMLocation_geoCoordinates_mapDatum,
        __GSMLocation_geoCoordinates_azimuth,
        _GSMLocation_geoCoordinates,
        __GSMLocation_utmCoordinates_utm_East,
        __GSMLocation_utmCoordinates_utm_North,
        __GSMLocation_utmCoordinates_mapDatum,
        __GSMLocation_utmCoordinates_azimuth,
        _GSMLocation_utmCoordinates,
        __GSMLocation_utmRefCoordinates_utmref_string,
        __GSMLocation_utmRefCoordinates_mapDatum,
        _GSMLocation_utmRefCoordinates,
        _GSMLocation_wGS84Coordinates,
        GSMLocation,
        MapDatum,
        _UMTSLocation_point,
        _UMTSLocation_pointWithUnCertainty,
        _UMTSLocation_polygon,
        UMTSLocation,
        _GeographicalCoordinates_latitudeSign,
        _GeographicalCoordinates_latitude,
        _GeographicalCoordinates_longitude,
        GeographicalCoordinates,
        _GA_Point_geographicalCoordinates,
        GA_Point,
        _GA_PointWithUnCertainty_geographicalCoordinates,
        _GA_PointWithUnCertainty_uncertaintyCode,
        GA_PointWithUnCertainty,
        maxNrOfPoints,
        __GA_Polygon__item__geographicalCoordinates,
        _GA_Polygon__item_,
        GA_Polygon,
        _CallContentLinkCharacteristics_cCLink_State,
        _CallContentLinkCharacteristics_release_Time,
        _CallContentLinkCharacteristics_release_Reason,
        _CallContentLinkCharacteristics_lEMF_Address,
        CallContentLinkCharacteristics,
        CCLink_State,
        Intercepted_Call_State,
        _Services_Information_iSUP_parameters,
        _Services_Information_dSS1_parameters_codeset_0,
        _Services_Information_mAP_parameters,
        Services_Information,
        _ISUP_parameters__item_,
        ISUP_parameters,
        _DSS1_parameters_codeset_0__item_,
        DSS1_parameters_codeset_0,
        _MAP_parameters__item_,
        MAP_parameters,
        _Supplementary_Services_standard_Supplementary_Services,
        _Supplementary_Services_non_Standard_Supplementary_Services,
        _Supplementary_Services_other_Services,
        Supplementary_Services,
        _Standard_Supplementary_Services_iSUP_SS_parameters,
        _Standard_Supplementary_Services_dSS1_SS_parameters_codeset_0,
        _Standard_Supplementary_Services_dSS1_SS_parameters_codeset_4,
        _Standard_Supplementary_Services_dSS1_SS_parameters_codeset_5,
        _Standard_Supplementary_Services_dSS1_SS_parameters_codeset_6,
        _Standard_Supplementary_Services_dSS1_SS_parameters_codeset_7,
        _Standard_Supplementary_Services_dSS1_SS_Invoke_components,
        _Standard_Supplementary_Services_mAP_SS_Parameters,
        _Standard_Supplementary_Services_mAP_SS_Invoke_Components,
        Standard_Supplementary_Services,
        __Non_Standard_Supplementary_Services__item__simpleIndication,
        __Non_Standard_Supplementary_Services__item__sciData,
        _Non_Standard_Supplementary_Services__item_,
        Non_Standard_Supplementary_Services,
        _Other_Services__item_,
        Other_Services,
        _ISUP_SS_parameters__item_,
        ISUP_SS_parameters,
        _DSS1_SS_parameters_codeset_0__item_,
        DSS1_SS_parameters_codeset_0,
        _DSS1_SS_parameters_codeset_4__item_,
        DSS1_SS_parameters_codeset_4,
        _DSS1_SS_parameters_codeset_5__item_,
        DSS1_SS_parameters_codeset_5,
        _DSS1_SS_parameters_codeset_6__item_,
        DSS1_SS_parameters_codeset_6,
        _DSS1_SS_parameters_codeset_7__item_,
        DSS1_SS_parameters_codeset_7,
        _DSS1_SS_Invoke_Components__item_,
        DSS1_SS_Invoke_Components,
        _MAP_SS_Invoke_Components__item_,
        MAP_SS_Invoke_Components,
        _MAP_SS_Parameters__item_,
        MAP_SS_Parameters,
        SimpleIndication,
        SciDataMode,
        _SMS_report_communicationIdentifier,
        _SMS_report_timeStamp,
        __SMS_report_sMS_Contents_initiator,
        __SMS_report_sMS_Contents_transfer_status,
        __SMS_report_sMS_Contents_other_message,
        __SMS_report_sMS_Contents_content,
        ___SMS_report_sMS_Contents_enhancedContent_content,
        ___SMS_report_sMS_Contents_enhancedContent_character_encoding,
        __SMS_report_sMS_Contents_enhancedContent,
        _SMS_report_sMS_Contents,
        SMS_report,
        LawfulInterceptionIdentifier,
        _National_Parameters__item_,
        National_Parameters,
        GPRSCorrelationNumber,
        GPRSEvent,
        _Services_Data_Information_gPRS_parameters,
        Services_Data_Information,
        _GPRS_parameters_pDP_address_allocated_to_the_target,
        _GPRS_parameters_aPN,
        _GPRS_parameters_pDP_type,
        _GPRS_parameters_nSAPI,
        _GPRS_parameters_additionalIPaddress,
        GPRS_parameters,
        GPRSOperationErrorCode,
        _DataNodeAddress_ipAddress,
        _DataNodeAddress_x25Address,
        DataNodeAddress,
        _IPAddress_iP_type,
        _IPAddress_iP_value,
        _IPAddress_iP_assignment,
        _IPAddress_iPv6PrefixLength,
        _IPAddress_iPv4SubnetMask,
        IPAddress,
        _IP_value_iPBinaryAddress,
        _IP_value_iPTextAddress,
        IP_value,
        X25Address,
        _National_HI2_ASN1parameters_countryCode,
        National_HI2_ASN1parameters,
    ]

class HI3CCLinkData:

    _name_  = 'HI3CCLinkData'
    _oid_   = [0, 4, 0, 2, 2, 2, 4, 2]
    
    _obj_ = [
        'UUS1-Content',
        'Direction-Indication',
        'Service-Information',
        ]
    _type_ = [
        'UUS1-Content',
        'Direction-Indication',
        'Service-Information',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< UUS1-Content >-----#
    UUS1_Content = SEQ(name='UUS1-Content', mode=MODE_TYPE)
    _UUS1_Content_lawfullInterceptionIdentifier = OCT_STR(name='lawfullInterceptionIdentifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')))
    _UUS1_Content_communicationIdentifier = SEQ(name='communicationIdentifier', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CommunicationIdentifier')))
    _UUS1_Content_cC_Link_Identifier = OCT_STR(name='cC-Link-Identifier', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CC-Link-Identifier')), opt=True)
    _UUS1_Content_direction_Indication = ENUM(name='direction-Indication', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI3CCLinkData', 'Direction-Indication')))
    _UUS1_Content_bearer_capability = OCT_STR(name='bearer-capability', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UUS1_Content_bearer_capability._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=12)], ev=None, er=[])
    _UUS1_Content_service_Information = SET(name='service-Information', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI3CCLinkData', 'Service-Information')), opt=True)
    UUS1_Content._cont = ASN1Dict([
        ('lawfullInterceptionIdentifier', _UUS1_Content_lawfullInterceptionIdentifier),
        ('communicationIdentifier', _UUS1_Content_communicationIdentifier),
        ('cC-Link-Identifier', _UUS1_Content_cC_Link_Identifier),
        ('direction-Indication', _UUS1_Content_direction_Indication),
        ('bearer-capability', _UUS1_Content_bearer_capability),
        ('service-Information', _UUS1_Content_service_Information),
        ])
    UUS1_Content._ext = []
    
    #-----< Direction-Indication >-----#
    Direction_Indication = ENUM(name='Direction-Indication', mode=MODE_TYPE)
    Direction_Indication._cont = ASN1Dict([('mono-mode', 0), ('cc-from-target', 1), ('cc-from-other-party', 2)])
    Direction_Indication._ext = []
    
    #-----< Service-Information >-----#
    Service_Information = SET(name='Service-Information', mode=MODE_TYPE)
    _Service_Information_high_layer_capability = OCT_STR(name='high-layer-capability', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Service_Information_high_layer_capability._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _Service_Information_tMR = OCT_STR(name='tMR', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Service_Information_tMR._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _Service_Information_bearerServiceCode = OCT_STR(name='bearerServiceCode', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Service_Information_bearerServiceCode._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _Service_Information_teleServiceCode = OCT_STR(name='teleServiceCode', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Service_Information_teleServiceCode._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    Service_Information._cont = ASN1Dict([
        ('high-layer-capability', _Service_Information_high_layer_capability),
        ('tMR', _Service_Information_tMR),
        ('bearerServiceCode', _Service_Information_bearerServiceCode),
        ('teleServiceCode', _Service_Information_teleServiceCode),
        ])
    Service_Information._ext = None
    
    _all_ = [
        _UUS1_Content_lawfullInterceptionIdentifier,
        _UUS1_Content_communicationIdentifier,
        _UUS1_Content_cC_Link_Identifier,
        _UUS1_Content_direction_Indication,
        _UUS1_Content_bearer_capability,
        _UUS1_Content_service_Information,
        UUS1_Content,
        Direction_Indication,
        _Service_Information_high_layer_capability,
        _Service_Information_tMR,
        _Service_Information_bearerServiceCode,
        _Service_Information_teleServiceCode,
        Service_Information,
    ]

class IWLANUmtsHI2Operations:

    _name_  = 'IWLANUmtsHI2Operations'
    _oid_   = [0, 4, 0, 2, 2, 4, 6, 16, 0]
    
    _obj_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi2wlanDomainId',
        'IWLANUmtsIRIsContent',
        'IWLANUmtsIRISequence',
        'IWLANUmtsIRIContent',
        'IRI-Parameters',
        'PartyInformation',
        'CorrelationNumber',
        'I-WLANEvent',
        'Services-Data-Information',
        'I-WLAN-parameters',
        'I-WLANOperationErrorCode',
        'I-WLANinformation',
        'VisitedPLMNID',
        'SessionAliveTime',
        'PacketDataHeaderInformation',
        'PacketDataHeaderReport',
        'PacketDataHeaderMapped',
        'TPDU-direction',
        'PacketDataHeaderCopy',
        'PacketDataSummaryReport',
        'PacketFlowSummary',
        'ReportReason',
        'ReportInterval',
        ]
    _type_ = [
        'IWLANUmtsIRIsContent',
        'IWLANUmtsIRISequence',
        'IWLANUmtsIRIContent',
        'IRI-Parameters',
        'PartyInformation',
        'CorrelationNumber',
        'I-WLANEvent',
        'Services-Data-Information',
        'I-WLAN-parameters',
        'I-WLANOperationErrorCode',
        'I-WLANinformation',
        'VisitedPLMNID',
        'SessionAliveTime',
        'PacketDataHeaderInformation',
        'PacketDataHeaderReport',
        'PacketDataHeaderMapped',
        'TPDU-direction',
        'PacketDataHeaderCopy',
        'PacketDataSummaryReport',
        'PacketFlowSummary',
        'ReportReason',
        'ReportInterval',
        ]
    _set_ = [
        ]
    _val_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi2wlanDomainId',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< lawfulInterceptDomainId >-----#
    lawfulInterceptDomainId = OID(name='lawfulInterceptDomainId', mode=MODE_VALUE)
    lawfulInterceptDomainId._val = (0, 4, 0, 2, 2)
    
    #-----< threeGPPSUBDomainId >-----#
    threeGPPSUBDomainId = OID(name='threeGPPSUBDomainId', mode=MODE_VALUE)
    threeGPPSUBDomainId._val = (0, 4, 0, 2, 2, 4)
    
    #-----< hi2wlanDomainId >-----#
    hi2wlanDomainId = OID(name='hi2wlanDomainId', mode=MODE_VALUE)
    hi2wlanDomainId._val = (0, 4, 0, 2, 2, 4, 6, 16, 1)
    
    #-----< IWLANUmtsIRIsContent >-----#
    IWLANUmtsIRIsContent = CHOICE(name='IWLANUmtsIRIsContent', mode=MODE_TYPE)
    _IWLANUmtsIRIsContent_iWLANumtsiRIContent = CHOICE(name='iWLANumtsiRIContent', mode=MODE_TYPE, typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'IWLANUmtsIRIContent')))
    _IWLANUmtsIRIsContent_iWLANumtsIRISequence = SEQ_OF(name='iWLANumtsIRISequence', mode=MODE_TYPE, typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'IWLANUmtsIRISequence')))
    IWLANUmtsIRIsContent._cont = ASN1Dict([
        ('iWLANumtsiRIContent', _IWLANUmtsIRIsContent_iWLANumtsiRIContent),
        ('iWLANumtsIRISequence', _IWLANUmtsIRIsContent_iWLANumtsIRISequence),
        ])
    IWLANUmtsIRIsContent._ext = None
    
    #-----< IWLANUmtsIRISequence >-----#
    IWLANUmtsIRISequence = SEQ_OF(name='IWLANUmtsIRISequence', mode=MODE_TYPE)
    _IWLANUmtsIRISequence__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'IWLANUmtsIRIContent')))
    IWLANUmtsIRISequence._cont = _IWLANUmtsIRISequence__item_
    
    #-----< IWLANUmtsIRIContent >-----#
    IWLANUmtsIRIContent = CHOICE(name='IWLANUmtsIRIContent', mode=MODE_TYPE)
    _IWLANUmtsIRIContent_iRI_Begin_record = SEQ(name='iRI-Begin-record', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'IRI-Parameters')))
    _IWLANUmtsIRIContent_iRI_End_record = SEQ(name='iRI-End-record', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'IRI-Parameters')))
    _IWLANUmtsIRIContent_iRI_Report_record = SEQ(name='iRI-Report-record', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'IRI-Parameters')))
    IWLANUmtsIRIContent._cont = ASN1Dict([
        ('iRI-Begin-record', _IWLANUmtsIRIContent_iRI_Begin_record),
        ('iRI-End-record', _IWLANUmtsIRIContent_iRI_End_record),
        ('iRI-Report-record', _IWLANUmtsIRIContent_iRI_Report_record),
        ])
    IWLANUmtsIRIContent._ext = []
    
    #-----< IRI-Parameters >-----#
    IRI_Parameters = SEQ(name='IRI-Parameters', mode=MODE_TYPE)
    _IRI_Parameters_hi2iwlanDomainId = OID(name='hi2iwlanDomainId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IRI_Parameters_lawfulInterceptionIdentifier = OCT_STR(name='lawfulInterceptionIdentifier', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')))
    _IRI_Parameters_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _IRI_Parameters_initiator = ENUM(name='initiator', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_initiator._cont = ASN1Dict([('not-Available', 0), ('originating-Target', 1), ('terminating-Target', 2)])
    _IRI_Parameters_initiator._ext = []
    _IRI_Parameters_partyInformation = SET_OF(name='partyInformation', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_partyInformation__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'PartyInformation')))
    _IRI_Parameters_partyInformation._cont = __IRI_Parameters_partyInformation__item_
    _IRI_Parameters_partyInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    _IRI_Parameters_national_Parameters = SET_OF(name='national-Parameters', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'National-Parameters')), opt=True)
    _IRI_Parameters_networkIdentifier = SEQ(name='networkIdentifier', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Network-Identifier')), opt=True)
    _IRI_Parameters_i_WLANevent = ENUM(name='i-WLANevent', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'I-WLANEvent')), opt=True)
    _IRI_Parameters_correlationNumber = OCT_STR(name='correlationNumber', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'CorrelationNumber')), opt=True)
    _IRI_Parameters_i_WLANOperationErrorCode = OCT_STR(name='i-WLANOperationErrorCode', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'I-WLANOperationErrorCode')), opt=True)
    _IRI_Parameters_i_wLANinformation = SEQ(name='i-wLANinformation', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'I-WLANinformation')), opt=True)
    _IRI_Parameters_visitedPLMNID = OCT_STR(name='visitedPLMNID', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'VisitedPLMNID')), opt=True)
    _IRI_Parameters_national_HI2_ASN1parameters = SEQ(name='national-HI2-ASN1parameters', mode=MODE_TYPE, tag=(255, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'National-HI2-ASN1parameters')), opt=True)
    _IRI_Parameters_nSAPI = OCT_STR(name='nSAPI', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_nSAPI._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _IRI_Parameters_packetDataHeaderInformation = CHOICE(name='packetDataHeaderInformation', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'PacketDataHeaderInformation')), opt=True)
    IRI_Parameters._cont = ASN1Dict([
        ('hi2iwlanDomainId', _IRI_Parameters_hi2iwlanDomainId),
        ('lawfulInterceptionIdentifier', _IRI_Parameters_lawfulInterceptionIdentifier),
        ('timeStamp', _IRI_Parameters_timeStamp),
        ('initiator', _IRI_Parameters_initiator),
        ('partyInformation', _IRI_Parameters_partyInformation),
        ('national-Parameters', _IRI_Parameters_national_Parameters),
        ('networkIdentifier', _IRI_Parameters_networkIdentifier),
        ('i-WLANevent', _IRI_Parameters_i_WLANevent),
        ('correlationNumber', _IRI_Parameters_correlationNumber),
        ('i-WLANOperationErrorCode', _IRI_Parameters_i_WLANOperationErrorCode),
        ('i-wLANinformation', _IRI_Parameters_i_wLANinformation),
        ('visitedPLMNID', _IRI_Parameters_visitedPLMNID),
        ('national-HI2-ASN1parameters', _IRI_Parameters_national_HI2_ASN1parameters),
        ('nSAPI', _IRI_Parameters_nSAPI),
        ('packetDataHeaderInformation', _IRI_Parameters_packetDataHeaderInformation),
        ])
    IRI_Parameters._ext = ['nSAPI', 'packetDataHeaderInformation']
    
    #-----< PartyInformation >-----#
    PartyInformation = SEQ(name='PartyInformation', mode=MODE_TYPE)
    _PartyInformation_party_Qualifier = ENUM(name='party-Qualifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PartyInformation_party_Qualifier._cont = ASN1Dict([('iWLAN-Target', 1)])
    _PartyInformation_party_Qualifier._ext = []
    _PartyInformation_partyIdentity = SEQ(name='partyIdentity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PartyInformation_partyIdentity_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_imsi._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    __PartyInformation_partyIdentity_msISDN = OCT_STR(name='msISDN', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_msISDN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    __PartyInformation_partyIdentity_nai = OCT_STR(name='nai', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyInformation_partyIdentity._cont = ASN1Dict([
        ('imsi', __PartyInformation_partyIdentity_imsi),
        ('msISDN', __PartyInformation_partyIdentity_msISDN),
        ('nai', __PartyInformation_partyIdentity_nai),
        ])
    _PartyInformation_partyIdentity._ext = []
    _PartyInformation_services_Data_Information = SEQ(name='services-Data-Information', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'Services-Data-Information')), opt=True)
    PartyInformation._cont = ASN1Dict([
        ('party-Qualifier', _PartyInformation_party_Qualifier),
        ('partyIdentity', _PartyInformation_partyIdentity),
        ('services-Data-Information', _PartyInformation_services_Data_Information),
        ])
    PartyInformation._ext = []
    
    #-----< CorrelationNumber >-----#
    CorrelationNumber = OCT_STR(name='CorrelationNumber', mode=MODE_TYPE)
    CorrelationNumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=8, ub=20)], ev=None, er=[])
    
    #-----< I-WLANEvent >-----#
    I_WLANEvent = ENUM(name='I-WLANEvent', mode=MODE_TYPE)
    I_WLANEvent._cont = ASN1Dict([('i-WLANAccessInitiation', 1), ('i-WLANAccessTermination', 2), ('i-WLANTunnelEstablishment', 3), ('i-WLANTunnelDisconnect', 4), ('startOfInterceptionCommunicationActive', 5), ('packetDataHeaderInformation', 6)])
    I_WLANEvent._ext = ['packetDataHeaderInformation']
    
    #-----< Services-Data-Information >-----#
    Services_Data_Information = SEQ(name='Services-Data-Information', mode=MODE_TYPE)
    _Services_Data_Information_i_WLAN_parameters = SEQ(name='i-WLAN-parameters', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'I-WLAN-parameters')), opt=True)
    Services_Data_Information._cont = ASN1Dict([
        ('i-WLAN-parameters', _Services_Data_Information_i_WLAN_parameters),
        ])
    Services_Data_Information._ext = []
    
    #-----< I-WLAN-parameters >-----#
    I_WLAN_parameters = SEQ(name='I-WLAN-parameters', mode=MODE_TYPE)
    _I_WLAN_parameters_wlan_local_IP_address_of_the_target = CHOICE(name='wlan-local-IP-address-of-the-target', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    _I_WLAN_parameters_w_APN = OCT_STR(name='w-APN', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _I_WLAN_parameters_w_APN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=100)], ev=None, er=[])
    _I_WLAN_parameters_wlan_remote_IP_address_of_the_target = CHOICE(name='wlan-remote-IP-address-of-the-target', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    I_WLAN_parameters._cont = ASN1Dict([
        ('wlan-local-IP-address-of-the-target', _I_WLAN_parameters_wlan_local_IP_address_of_the_target),
        ('w-APN', _I_WLAN_parameters_w_APN),
        ('wlan-remote-IP-address-of-the-target', _I_WLAN_parameters_wlan_remote_IP_address_of_the_target),
        ])
    I_WLAN_parameters._ext = []
    
    #-----< I-WLANOperationErrorCode >-----#
    I_WLANOperationErrorCode = OCT_STR(name='I-WLANOperationErrorCode', mode=MODE_TYPE)
    
    #-----< I-WLANinformation >-----#
    I_WLANinformation = SEQ(name='I-WLANinformation', mode=MODE_TYPE)
    _I_WLANinformation_wLANOperatorName = OCT_STR(name='wLANOperatorName', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _I_WLANinformation_wLANLocationData = OCT_STR(name='wLANLocationData', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _I_WLANinformation_wLANLocationInformation = OCT_STR(name='wLANLocationInformation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _I_WLANinformation_nASIPIPv6Address = SEQ(name='nASIPIPv6Address', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')), opt=True)
    _I_WLANinformation_wLANMACAddress = OCT_STR(name='wLANMACAddress', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _I_WLANinformation_sessionAliveTimer = OCT_STR(name='sessionAliveTimer', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'SessionAliveTime')), opt=True)
    _I_WLANinformation_geographicalCoordinates = SEQ(name='geographicalCoordinates', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'GeographicalCoordinates')), opt=True)
    _I_WLANinformation_civicAddress = CHOICE(name='civicAddress', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'CivicAddress')), opt=True)
    I_WLANinformation._cont = ASN1Dict([
        ('wLANOperatorName', _I_WLANinformation_wLANOperatorName),
        ('wLANLocationData', _I_WLANinformation_wLANLocationData),
        ('wLANLocationInformation', _I_WLANinformation_wLANLocationInformation),
        ('nASIPIPv6Address', _I_WLANinformation_nASIPIPv6Address),
        ('wLANMACAddress', _I_WLANinformation_wLANMACAddress),
        ('sessionAliveTimer', _I_WLANinformation_sessionAliveTimer),
        ('geographicalCoordinates', _I_WLANinformation_geographicalCoordinates),
        ('civicAddress', _I_WLANinformation_civicAddress),
        ])
    I_WLANinformation._ext = ['geographicalCoordinates', 'civicAddress']
    
    #-----< VisitedPLMNID >-----#
    VisitedPLMNID = OCT_STR(name='VisitedPLMNID', mode=MODE_TYPE)
    
    #-----< SessionAliveTime >-----#
    SessionAliveTime = OCT_STR(name='SessionAliveTime', mode=MODE_TYPE)
    
    #-----< PacketDataHeaderInformation >-----#
    PacketDataHeaderInformation = CHOICE(name='PacketDataHeaderInformation', mode=MODE_TYPE)
    _PacketDataHeaderInformation_packetDataHeader = CHOICE(name='packetDataHeader', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'PacketDataHeaderReport')))
    _PacketDataHeaderInformation_packetDataSummary = SEQ_OF(name='packetDataSummary', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'PacketDataSummaryReport')))
    PacketDataHeaderInformation._cont = ASN1Dict([
        ('packetDataHeader', _PacketDataHeaderInformation_packetDataHeader),
        ('packetDataSummary', _PacketDataHeaderInformation_packetDataSummary),
        ])
    PacketDataHeaderInformation._ext = []
    
    #-----< PacketDataHeaderReport >-----#
    PacketDataHeaderReport = CHOICE(name='PacketDataHeaderReport', mode=MODE_TYPE)
    _PacketDataHeaderReport_packetDataHeaderMapped = SEQ(name='packetDataHeaderMapped', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'PacketDataHeaderMapped')))
    _PacketDataHeaderReport_packetDataHeaderCopy = SEQ(name='packetDataHeaderCopy', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'PacketDataHeaderCopy')))
    PacketDataHeaderReport._cont = ASN1Dict([
        ('packetDataHeaderMapped', _PacketDataHeaderReport_packetDataHeaderMapped),
        ('packetDataHeaderCopy', _PacketDataHeaderReport_packetDataHeaderCopy),
        ])
    PacketDataHeaderReport._ext = []
    
    #-----< PacketDataHeaderMapped >-----#
    PacketDataHeaderMapped = SEQ(name='PacketDataHeaderMapped', mode=MODE_TYPE)
    _PacketDataHeaderMapped_sourceIPAddress = SEQ(name='sourceIPAddress', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')), opt=True)
    _PacketDataHeaderMapped_sourcePortNumber = INT(name='sourcePortNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketDataHeaderMapped_sourcePortNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _PacketDataHeaderMapped_destinationIPAddress = SEQ(name='destinationIPAddress', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')), opt=True)
    _PacketDataHeaderMapped_destinationPortNumber = INT(name='destinationPortNumber', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketDataHeaderMapped_destinationPortNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _PacketDataHeaderMapped_transportProtocol = INT(name='transportProtocol', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketDataHeaderMapped_packetsize = INT(name='packetsize', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketDataHeaderMapped_flowLabel = INT(name='flowLabel', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketDataHeaderMapped_packetCount = INT(name='packetCount', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketDataHeaderMapped_direction = ENUM(name='direction', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'TPDU-direction')))
    PacketDataHeaderMapped._cont = ASN1Dict([
        ('sourceIPAddress', _PacketDataHeaderMapped_sourceIPAddress),
        ('sourcePortNumber', _PacketDataHeaderMapped_sourcePortNumber),
        ('destinationIPAddress', _PacketDataHeaderMapped_destinationIPAddress),
        ('destinationPortNumber', _PacketDataHeaderMapped_destinationPortNumber),
        ('transportProtocol', _PacketDataHeaderMapped_transportProtocol),
        ('packetsize', _PacketDataHeaderMapped_packetsize),
        ('flowLabel', _PacketDataHeaderMapped_flowLabel),
        ('packetCount', _PacketDataHeaderMapped_packetCount),
        ('direction', _PacketDataHeaderMapped_direction),
        ])
    PacketDataHeaderMapped._ext = []
    
    #-----< TPDU-direction >-----#
    TPDU_direction = ENUM(name='TPDU-direction', mode=MODE_TYPE)
    TPDU_direction._cont = ASN1Dict([('from-target', 1), ('to-target', 2), ('unknown', 3)])
    TPDU_direction._ext = None
    
    #-----< PacketDataHeaderCopy >-----#
    PacketDataHeaderCopy = SEQ(name='PacketDataHeaderCopy', mode=MODE_TYPE)
    _PacketDataHeaderCopy_direction = ENUM(name='direction', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'TPDU-direction')))
    _PacketDataHeaderCopy_headerCopy = OCT_STR(name='headerCopy', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PacketDataHeaderCopy._cont = ASN1Dict([
        ('direction', _PacketDataHeaderCopy_direction),
        ('headerCopy', _PacketDataHeaderCopy_headerCopy),
        ])
    PacketDataHeaderCopy._ext = []
    
    #-----< PacketDataSummaryReport >-----#
    PacketDataSummaryReport = SEQ_OF(name='PacketDataSummaryReport', mode=MODE_TYPE)
    _PacketDataSummaryReport__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'PacketFlowSummary')))
    PacketDataSummaryReport._cont = _PacketDataSummaryReport__item_
    
    #-----< PacketFlowSummary >-----#
    PacketFlowSummary = SEQ(name='PacketFlowSummary', mode=MODE_TYPE)
    _PacketFlowSummary_sourceIPAddress = SEQ(name='sourceIPAddress', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')))
    _PacketFlowSummary_sourcePortNumber = INT(name='sourcePortNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketFlowSummary_sourcePortNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _PacketFlowSummary_destinationIPAddress = SEQ(name='destinationIPAddress', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')))
    _PacketFlowSummary_destinationPortNumber = INT(name='destinationPortNumber', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketFlowSummary_destinationPortNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _PacketFlowSummary_transportProtocol = INT(name='transportProtocol', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PacketFlowSummary_flowLabel = INT(name='flowLabel', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketFlowSummary_summaryPeriod = SEQ(name='summaryPeriod', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'ReportInterval')))
    _PacketFlowSummary_packetCount = INT(name='packetCount', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PacketFlowSummary_sumOfPacketSizes = INT(name='sumOfPacketSizes', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PacketFlowSummary_packetDataSummaryReason = ENUM(name='packetDataSummaryReason', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('IWLANUmtsHI2Operations', 'ReportReason')))
    PacketFlowSummary._cont = ASN1Dict([
        ('sourceIPAddress', _PacketFlowSummary_sourceIPAddress),
        ('sourcePortNumber', _PacketFlowSummary_sourcePortNumber),
        ('destinationIPAddress', _PacketFlowSummary_destinationIPAddress),
        ('destinationPortNumber', _PacketFlowSummary_destinationPortNumber),
        ('transportProtocol', _PacketFlowSummary_transportProtocol),
        ('flowLabel', _PacketFlowSummary_flowLabel),
        ('summaryPeriod', _PacketFlowSummary_summaryPeriod),
        ('packetCount', _PacketFlowSummary_packetCount),
        ('sumOfPacketSizes', _PacketFlowSummary_sumOfPacketSizes),
        ('packetDataSummaryReason', _PacketFlowSummary_packetDataSummaryReason),
        ])
    PacketFlowSummary._ext = []
    
    #-----< ReportReason >-----#
    ReportReason = ENUM(name='ReportReason', mode=MODE_TYPE)
    ReportReason._cont = ASN1Dict([('timerExpired', 0), ('countThresholdHit', 1), ('pDPComtextDeactivated', 2), ('pDPContextModification', 3), ('otherOrUnknown', 4)])
    ReportReason._ext = []
    
    #-----< ReportInterval >-----#
    ReportInterval = SEQ(name='ReportInterval', mode=MODE_TYPE)
    _ReportInterval_firstPacketTimeStamp = CHOICE(name='firstPacketTimeStamp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _ReportInterval_lastPacketTimeStamp = CHOICE(name='lastPacketTimeStamp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    ReportInterval._cont = ASN1Dict([
        ('firstPacketTimeStamp', _ReportInterval_firstPacketTimeStamp),
        ('lastPacketTimeStamp', _ReportInterval_lastPacketTimeStamp),
        ])
    ReportInterval._ext = []
    
    _all_ = [
        lawfulInterceptDomainId,
        threeGPPSUBDomainId,
        hi2wlanDomainId,
        _IWLANUmtsIRIsContent_iWLANumtsiRIContent,
        _IWLANUmtsIRIsContent_iWLANumtsIRISequence,
        IWLANUmtsIRIsContent,
        _IWLANUmtsIRISequence__item_,
        IWLANUmtsIRISequence,
        _IWLANUmtsIRIContent_iRI_Begin_record,
        _IWLANUmtsIRIContent_iRI_End_record,
        _IWLANUmtsIRIContent_iRI_Report_record,
        IWLANUmtsIRIContent,
        _IRI_Parameters_hi2iwlanDomainId,
        _IRI_Parameters_lawfulInterceptionIdentifier,
        _IRI_Parameters_timeStamp,
        _IRI_Parameters_initiator,
        __IRI_Parameters_partyInformation__item_,
        _IRI_Parameters_partyInformation,
        _IRI_Parameters_national_Parameters,
        _IRI_Parameters_networkIdentifier,
        _IRI_Parameters_i_WLANevent,
        _IRI_Parameters_correlationNumber,
        _IRI_Parameters_i_WLANOperationErrorCode,
        _IRI_Parameters_i_wLANinformation,
        _IRI_Parameters_visitedPLMNID,
        _IRI_Parameters_national_HI2_ASN1parameters,
        _IRI_Parameters_nSAPI,
        _IRI_Parameters_packetDataHeaderInformation,
        IRI_Parameters,
        _PartyInformation_party_Qualifier,
        __PartyInformation_partyIdentity_imsi,
        __PartyInformation_partyIdentity_msISDN,
        __PartyInformation_partyIdentity_nai,
        _PartyInformation_partyIdentity,
        _PartyInformation_services_Data_Information,
        PartyInformation,
        CorrelationNumber,
        I_WLANEvent,
        _Services_Data_Information_i_WLAN_parameters,
        Services_Data_Information,
        _I_WLAN_parameters_wlan_local_IP_address_of_the_target,
        _I_WLAN_parameters_w_APN,
        _I_WLAN_parameters_wlan_remote_IP_address_of_the_target,
        I_WLAN_parameters,
        I_WLANOperationErrorCode,
        _I_WLANinformation_wLANOperatorName,
        _I_WLANinformation_wLANLocationData,
        _I_WLANinformation_wLANLocationInformation,
        _I_WLANinformation_nASIPIPv6Address,
        _I_WLANinformation_wLANMACAddress,
        _I_WLANinformation_sessionAliveTimer,
        _I_WLANinformation_geographicalCoordinates,
        _I_WLANinformation_civicAddress,
        I_WLANinformation,
        VisitedPLMNID,
        SessionAliveTime,
        _PacketDataHeaderInformation_packetDataHeader,
        _PacketDataHeaderInformation_packetDataSummary,
        PacketDataHeaderInformation,
        _PacketDataHeaderReport_packetDataHeaderMapped,
        _PacketDataHeaderReport_packetDataHeaderCopy,
        PacketDataHeaderReport,
        _PacketDataHeaderMapped_sourceIPAddress,
        _PacketDataHeaderMapped_sourcePortNumber,
        _PacketDataHeaderMapped_destinationIPAddress,
        _PacketDataHeaderMapped_destinationPortNumber,
        _PacketDataHeaderMapped_transportProtocol,
        _PacketDataHeaderMapped_packetsize,
        _PacketDataHeaderMapped_flowLabel,
        _PacketDataHeaderMapped_packetCount,
        _PacketDataHeaderMapped_direction,
        PacketDataHeaderMapped,
        TPDU_direction,
        _PacketDataHeaderCopy_direction,
        _PacketDataHeaderCopy_headerCopy,
        PacketDataHeaderCopy,
        _PacketDataSummaryReport__item_,
        PacketDataSummaryReport,
        _PacketFlowSummary_sourceIPAddress,
        _PacketFlowSummary_sourcePortNumber,
        _PacketFlowSummary_destinationIPAddress,
        _PacketFlowSummary_destinationPortNumber,
        _PacketFlowSummary_transportProtocol,
        _PacketFlowSummary_flowLabel,
        _PacketFlowSummary_summaryPeriod,
        _PacketFlowSummary_packetCount,
        _PacketFlowSummary_sumOfPacketSizes,
        _PacketFlowSummary_packetDataSummaryReason,
        PacketFlowSummary,
        ReportReason,
        _ReportInterval_firstPacketTimeStamp,
        _ReportInterval_lastPacketTimeStamp,
        ReportInterval,
    ]

class MBMSUmtsHI2Operations:

    _name_  = 'MBMSUmtsHI2Operations'
    _oid_   = [0, 4, 0, 2, 2, 4, 7, 16, 0]
    
    _obj_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi2mbmsDomainId',
        'MBMSUmtsIRIsContent',
        'MBMSUmtsIRISequence',
        'MBMSUmtsIRIContent',
        'IRI-Parameters',
        'PartyInformation',
        'CorrelationNumber',
        'MBMSEvent',
        'Services-Data-Information',
        'MBMSparameters',
        'MBMSinformation',
        'MBMSSerSubscriberList',
        'MBMSNodeList',
        'VisitedPLMNID',
        ]
    _type_ = [
        'MBMSUmtsIRIsContent',
        'MBMSUmtsIRISequence',
        'MBMSUmtsIRIContent',
        'IRI-Parameters',
        'PartyInformation',
        'CorrelationNumber',
        'MBMSEvent',
        'Services-Data-Information',
        'MBMSparameters',
        'MBMSinformation',
        'MBMSSerSubscriberList',
        'MBMSNodeList',
        'VisitedPLMNID',
        ]
    _set_ = [
        ]
    _val_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi2mbmsDomainId',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< lawfulInterceptDomainId >-----#
    lawfulInterceptDomainId = OID(name='lawfulInterceptDomainId', mode=MODE_VALUE)
    lawfulInterceptDomainId._val = (0, 4, 0, 2, 2)
    
    #-----< threeGPPSUBDomainId >-----#
    threeGPPSUBDomainId = OID(name='threeGPPSUBDomainId', mode=MODE_VALUE)
    threeGPPSUBDomainId._val = (0, 4, 0, 2, 2, 4)
    
    #-----< hi2mbmsDomainId >-----#
    hi2mbmsDomainId = OID(name='hi2mbmsDomainId', mode=MODE_VALUE)
    hi2mbmsDomainId._val = (0, 4, 0, 2, 2, 4, 7, 16, 0)
    
    #-----< MBMSUmtsIRIsContent >-----#
    MBMSUmtsIRIsContent = CHOICE(name='MBMSUmtsIRIsContent', mode=MODE_TYPE)
    _MBMSUmtsIRIsContent_mBMSumtsiRIContent = CHOICE(name='mBMSumtsiRIContent', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MBMSUmtsHI2Operations', 'MBMSUmtsIRIContent')))
    _MBMSUmtsIRIsContent_mBMSumtsIRISequence = SEQ_OF(name='mBMSumtsIRISequence', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MBMSUmtsHI2Operations', 'MBMSUmtsIRISequence')))
    MBMSUmtsIRIsContent._cont = ASN1Dict([
        ('mBMSumtsiRIContent', _MBMSUmtsIRIsContent_mBMSumtsiRIContent),
        ('mBMSumtsIRISequence', _MBMSUmtsIRIsContent_mBMSumtsIRISequence),
        ])
    MBMSUmtsIRIsContent._ext = None
    
    #-----< MBMSUmtsIRISequence >-----#
    MBMSUmtsIRISequence = SEQ_OF(name='MBMSUmtsIRISequence', mode=MODE_TYPE)
    _MBMSUmtsIRISequence__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MBMSUmtsHI2Operations', 'MBMSUmtsIRIContent')))
    MBMSUmtsIRISequence._cont = _MBMSUmtsIRISequence__item_
    
    #-----< MBMSUmtsIRIContent >-----#
    MBMSUmtsIRIContent = CHOICE(name='MBMSUmtsIRIContent', mode=MODE_TYPE)
    _MBMSUmtsIRIContent_iRI_Begin_record = SEQ(name='iRI-Begin-record', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MBMSUmtsHI2Operations', 'IRI-Parameters')))
    _MBMSUmtsIRIContent_iRI_End_record = SEQ(name='iRI-End-record', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MBMSUmtsHI2Operations', 'IRI-Parameters')))
    _MBMSUmtsIRIContent_iRI_Report_record = SEQ(name='iRI-Report-record', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MBMSUmtsHI2Operations', 'IRI-Parameters')))
    MBMSUmtsIRIContent._cont = ASN1Dict([
        ('iRI-Begin-record', _MBMSUmtsIRIContent_iRI_Begin_record),
        ('iRI-End-record', _MBMSUmtsIRIContent_iRI_End_record),
        ('iRI-Report-record', _MBMSUmtsIRIContent_iRI_Report_record),
        ])
    MBMSUmtsIRIContent._ext = []
    
    #-----< IRI-Parameters >-----#
    IRI_Parameters = SEQ(name='IRI-Parameters', mode=MODE_TYPE)
    _IRI_Parameters_hi2mbmsDomainId = OID(name='hi2mbmsDomainId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IRI_Parameters_lawfulInterceptionIdentifier = OCT_STR(name='lawfulInterceptionIdentifier', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')))
    _IRI_Parameters_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _IRI_Parameters_initiator = ENUM(name='initiator', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_initiator._cont = ASN1Dict([('not-Available', 0), ('originating-Target', 1), ('network-initiated', 2), ('off-online-action', 3)])
    _IRI_Parameters_initiator._ext = []
    _IRI_Parameters_partyInformation = SET_OF(name='partyInformation', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_partyInformation__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MBMSUmtsHI2Operations', 'PartyInformation')))
    _IRI_Parameters_partyInformation._cont = __IRI_Parameters_partyInformation__item_
    _IRI_Parameters_partyInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    _IRI_Parameters_national_Parameters = SET_OF(name='national-Parameters', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'National-Parameters')), opt=True)
    _IRI_Parameters_networkIdentifier = SEQ(name='networkIdentifier', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Network-Identifier')), opt=True)
    _IRI_Parameters_mBMSevent = ENUM(name='mBMSevent', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MBMSUmtsHI2Operations', 'MBMSEvent')), opt=True)
    _IRI_Parameters_correlationNumber = OCT_STR(name='correlationNumber', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MBMSUmtsHI2Operations', 'CorrelationNumber')), opt=True)
    _IRI_Parameters_mbmsInformation = SEQ(name='mbmsInformation', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MBMSUmtsHI2Operations', 'MBMSinformation')), opt=True)
    _IRI_Parameters_visitedPLMNID = STR_UTF8(name='visitedPLMNID', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MBMSUmtsHI2Operations', 'VisitedPLMNID')), opt=True)
    _IRI_Parameters_national_HI2_ASN1parameters = SEQ(name='national-HI2-ASN1parameters', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'National-HI2-ASN1parameters')), opt=True)
    IRI_Parameters._cont = ASN1Dict([
        ('hi2mbmsDomainId', _IRI_Parameters_hi2mbmsDomainId),
        ('lawfulInterceptionIdentifier', _IRI_Parameters_lawfulInterceptionIdentifier),
        ('timeStamp', _IRI_Parameters_timeStamp),
        ('initiator', _IRI_Parameters_initiator),
        ('partyInformation', _IRI_Parameters_partyInformation),
        ('national-Parameters', _IRI_Parameters_national_Parameters),
        ('networkIdentifier', _IRI_Parameters_networkIdentifier),
        ('mBMSevent', _IRI_Parameters_mBMSevent),
        ('correlationNumber', _IRI_Parameters_correlationNumber),
        ('mbmsInformation', _IRI_Parameters_mbmsInformation),
        ('visitedPLMNID', _IRI_Parameters_visitedPLMNID),
        ('national-HI2-ASN1parameters', _IRI_Parameters_national_HI2_ASN1parameters),
        ])
    IRI_Parameters._ext = []
    
    #-----< PartyInformation >-----#
    PartyInformation = SEQ(name='PartyInformation', mode=MODE_TYPE)
    _PartyInformation_party_Qualifier = ENUM(name='party-Qualifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PartyInformation_party_Qualifier._cont = ASN1Dict([('mBMS-Target', 1)])
    _PartyInformation_party_Qualifier._ext = []
    _PartyInformation_partyIdentity = SEQ(name='partyIdentity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PartyInformation_partyIdentity_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_imsi._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    _PartyInformation_partyIdentity._cont = ASN1Dict([
        ('imsi', __PartyInformation_partyIdentity_imsi),
        ])
    _PartyInformation_partyIdentity._ext = []
    PartyInformation._cont = ASN1Dict([
        ('party-Qualifier', _PartyInformation_party_Qualifier),
        ('partyIdentity', _PartyInformation_partyIdentity),
        ])
    PartyInformation._ext = []
    
    #-----< CorrelationNumber >-----#
    CorrelationNumber = OCT_STR(name='CorrelationNumber', mode=MODE_TYPE)
    CorrelationNumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=8, ub=20)], ev=None, er=[])
    
    #-----< MBMSEvent >-----#
    MBMSEvent = ENUM(name='MBMSEvent', mode=MODE_TYPE)
    MBMSEvent._cont = ASN1Dict([('mBMSServiceJoining', 1), ('mBMSServiceLeaving', 2), ('mBMSSubscriptionActivation', 3), ('mBMSSubscriptionModification', 4), ('mBMSSubscriptionTermination', 5), ('startofInterceptWithMBMSServiceActive', 6)])
    MBMSEvent._ext = []
    
    #-----< Services-Data-Information >-----#
    Services_Data_Information = SEQ(name='Services-Data-Information', mode=MODE_TYPE)
    _Services_Data_Information_mBMSparameters = SEQ(name='mBMSparameters', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MBMSUmtsHI2Operations', 'MBMSparameters')), opt=True)
    Services_Data_Information._cont = ASN1Dict([
        ('mBMSparameters', _Services_Data_Information_mBMSparameters),
        ])
    Services_Data_Information._ext = []
    
    #-----< MBMSparameters >-----#
    MBMSparameters = SEQ(name='MBMSparameters', mode=MODE_TYPE)
    _MBMSparameters_aPN = STR_UTF8(name='aPN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    MBMSparameters._cont = ASN1Dict([
        ('aPN', _MBMSparameters_aPN),
        ])
    MBMSparameters._ext = []
    
    #-----< MBMSinformation >-----#
    MBMSinformation = SEQ(name='MBMSinformation', mode=MODE_TYPE)
    _MBMSinformation_mbmsServiceName = STR_UTF8(name='mbmsServiceName', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MBMSinformation_mbms_join_time = STR_UTF8(name='mbms-join-time', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MBMSinformation_mbms_Mode = ENUM(name='mbms-Mode', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MBMSinformation_mbms_Mode._cont = ASN1Dict([('multicast', 0), ('broadcast', 1)])
    _MBMSinformation_mbms_Mode._ext = []
    _MBMSinformation_mbmsIPIPv6Address = SEQ(name='mbmsIPIPv6Address', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')), opt=True)
    _MBMSinformation_mbmsLeavingReason = ENUM(name='mbmsLeavingReason', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MBMSinformation_mbmsLeavingReason._cont = ASN1Dict([('uEinitiatedRequested', 0), ('bMSCorNetworkTerminated', 1)])
    _MBMSinformation_mbmsLeavingReason._ext = []
    _MBMSinformation_mbmsSubsTermReason = ENUM(name='mbmsSubsTermReason', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MBMSinformation_mbmsSubsTermReason._cont = ASN1Dict([('userInitiated', 0), ('subscriptionExpired', 1)])
    _MBMSinformation_mbmsSubsTermReason._ext = []
    _MBMSinformation_mBMSapn = STR_UTF8(name='mBMSapn', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MBMSinformation_mbmsSerSubscriberList = SEQ_OF(name='mbmsSerSubscriberList', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MBMSUmtsHI2Operations', 'MBMSSerSubscriberList')), opt=True)
    _MBMSinformation_mbmsNodeList = SEQ_OF(name='mbmsNodeList', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MBMSUmtsHI2Operations', 'MBMSNodeList')), opt=True)
    MBMSinformation._cont = ASN1Dict([
        ('mbmsServiceName', _MBMSinformation_mbmsServiceName),
        ('mbms-join-time', _MBMSinformation_mbms_join_time),
        ('mbms-Mode', _MBMSinformation_mbms_Mode),
        ('mbmsIPIPv6Address', _MBMSinformation_mbmsIPIPv6Address),
        ('mbmsLeavingReason', _MBMSinformation_mbmsLeavingReason),
        ('mbmsSubsTermReason', _MBMSinformation_mbmsSubsTermReason),
        ('mBMSapn', _MBMSinformation_mBMSapn),
        ('mbmsSerSubscriberList', _MBMSinformation_mbmsSerSubscriberList),
        ('mbmsNodeList', _MBMSinformation_mbmsNodeList),
        ])
    MBMSinformation._ext = []
    
    #-----< MBMSSerSubscriberList >-----#
    MBMSSerSubscriberList = SEQ_OF(name='MBMSSerSubscriberList', mode=MODE_TYPE)
    _MBMSSerSubscriberList__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    __MBMSSerSubscriberList__item__mBMSSERSUBSCRIBERLIST = STR_UTF8(name='mBMSSERSUBSCRIBERLIST', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MBMSSerSubscriberList__item_._cont = ASN1Dict([
        ('mBMSSERSUBSCRIBERLIST', __MBMSSerSubscriberList__item__mBMSSERSUBSCRIBERLIST),
        ])
    _MBMSSerSubscriberList__item_._ext = []
    MBMSSerSubscriberList._cont = _MBMSSerSubscriberList__item_
    
    #-----< MBMSNodeList >-----#
    MBMSNodeList = SEQ_OF(name='MBMSNodeList', mode=MODE_TYPE)
    _MBMSNodeList__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    __MBMSNodeList__item__mBMSNODELIST = SEQ(name='mBMSNODELIST', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___MBMSNodeList__item__mBMSNODELIST_mbmsnodeIPAdress = SEQ(name='mbmsnodeIPAdress', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')), opt=True)
    ___MBMSNodeList__item__mBMSNODELIST_mbmsnodeName = STR_UTF8(name='mbmsnodeName', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MBMSNodeList__item__mBMSNODELIST._cont = ASN1Dict([
        ('mbmsnodeIPAdress', ___MBMSNodeList__item__mBMSNODELIST_mbmsnodeIPAdress),
        ('mbmsnodeName', ___MBMSNodeList__item__mBMSNODELIST_mbmsnodeName),
        ])
    __MBMSNodeList__item__mBMSNODELIST._ext = []
    _MBMSNodeList__item_._cont = ASN1Dict([
        ('mBMSNODELIST', __MBMSNodeList__item__mBMSNODELIST),
        ])
    _MBMSNodeList__item_._ext = []
    MBMSNodeList._cont = _MBMSNodeList__item_
    
    #-----< VisitedPLMNID >-----#
    VisitedPLMNID = STR_UTF8(name='VisitedPLMNID', mode=MODE_TYPE)
    
    _all_ = [
        lawfulInterceptDomainId,
        threeGPPSUBDomainId,
        hi2mbmsDomainId,
        _MBMSUmtsIRIsContent_mBMSumtsiRIContent,
        _MBMSUmtsIRIsContent_mBMSumtsIRISequence,
        MBMSUmtsIRIsContent,
        _MBMSUmtsIRISequence__item_,
        MBMSUmtsIRISequence,
        _MBMSUmtsIRIContent_iRI_Begin_record,
        _MBMSUmtsIRIContent_iRI_End_record,
        _MBMSUmtsIRIContent_iRI_Report_record,
        MBMSUmtsIRIContent,
        _IRI_Parameters_hi2mbmsDomainId,
        _IRI_Parameters_lawfulInterceptionIdentifier,
        _IRI_Parameters_timeStamp,
        _IRI_Parameters_initiator,
        __IRI_Parameters_partyInformation__item_,
        _IRI_Parameters_partyInformation,
        _IRI_Parameters_national_Parameters,
        _IRI_Parameters_networkIdentifier,
        _IRI_Parameters_mBMSevent,
        _IRI_Parameters_correlationNumber,
        _IRI_Parameters_mbmsInformation,
        _IRI_Parameters_visitedPLMNID,
        _IRI_Parameters_national_HI2_ASN1parameters,
        IRI_Parameters,
        _PartyInformation_party_Qualifier,
        __PartyInformation_partyIdentity_imsi,
        _PartyInformation_partyIdentity,
        PartyInformation,
        CorrelationNumber,
        MBMSEvent,
        _Services_Data_Information_mBMSparameters,
        Services_Data_Information,
        _MBMSparameters_aPN,
        MBMSparameters,
        _MBMSinformation_mbmsServiceName,
        _MBMSinformation_mbms_join_time,
        _MBMSinformation_mbms_Mode,
        _MBMSinformation_mbmsIPIPv6Address,
        _MBMSinformation_mbmsLeavingReason,
        _MBMSinformation_mbmsSubsTermReason,
        _MBMSinformation_mBMSapn,
        _MBMSinformation_mbmsSerSubscriberList,
        _MBMSinformation_mbmsNodeList,
        MBMSinformation,
        __MBMSSerSubscriberList__item__mBMSSERSUBSCRIBERLIST,
        _MBMSSerSubscriberList__item_,
        MBMSSerSubscriberList,
        ___MBMSNodeList__item__mBMSNODELIST_mbmsnodeIPAdress,
        ___MBMSNodeList__item__mBMSNODELIST_mbmsnodeName,
        __MBMSNodeList__item__mBMSNODELIST,
        _MBMSNodeList__item_,
        MBMSNodeList,
        VisitedPLMNID,
    ]

class Mms_HI3_PS:

    _name_  = 'Mms-HI3-PS'
    _oid_   = [0, 4, 0, 2, 2, 4, 17, 16, 0]
    
    _obj_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi3DomainId',
        'CC-PDU',
        'MMSLIC-header',
        'TPDU-direction',
        'National-HI3-ASN1parameters',
        'ICE-type',
        ]
    _type_ = [
        'CC-PDU',
        'MMSLIC-header',
        'TPDU-direction',
        'National-HI3-ASN1parameters',
        'ICE-type',
        ]
    _set_ = [
        ]
    _val_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi3DomainId',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< lawfulInterceptDomainId >-----#
    lawfulInterceptDomainId = OID(name='lawfulInterceptDomainId', mode=MODE_VALUE)
    lawfulInterceptDomainId._val = (0, 4, 0, 2, 2)
    
    #-----< threeGPPSUBDomainId >-----#
    threeGPPSUBDomainId = OID(name='threeGPPSUBDomainId', mode=MODE_VALUE)
    threeGPPSUBDomainId._val = (0, 4, 0, 2, 2, 4)
    
    #-----< hi3DomainId >-----#
    hi3DomainId = OID(name='hi3DomainId', mode=MODE_VALUE)
    hi3DomainId._val = (0, 4, 0, 2, 2, 4, 17, 16, 0)
    
    #-----< CC-PDU >-----#
    CC_PDU = SEQ(name='CC-PDU', mode=MODE_TYPE)
    _CC_PDU_mmSLIC_header = SEQ(name='mmSLIC-header', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Mms-HI3-PS', 'MMSLIC-header')))
    _CC_PDU_payload = OCT_STR(name='payload', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    CC_PDU._cont = ASN1Dict([
        ('mmSLIC-header', _CC_PDU_mmSLIC_header),
        ('payload', _CC_PDU_payload),
        ])
    CC_PDU._ext = None
    
    #-----< MMSLIC-header >-----#
    MMSLIC_header = SEQ(name='MMSLIC-header', mode=MODE_TYPE)
    _MMSLIC_header_hi3MmsDomainId = OID(name='hi3MmsDomainId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MMSLIC_header_lIID = OCT_STR(name='lIID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')), opt=True)
    _MMSLIC_header_mMSCorrelationNNumber = OCT_STR(name='mMSCorrelationNNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'MMSCorrelationNumber')))
    _MMSLIC_header_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _MMSLIC_header_t_PDU_direction = ENUM(name='t-PDU-direction', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Mms-HI3-PS', 'TPDU-direction')))
    _MMSLIC_header_mMSVersion = INT(name='mMSVersion', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MMSLIC_header_transactionID = STR_UTF8(name='transactionID', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MMSLIC_header_national_HI3_ASN1parameters = SEQ(name='national-HI3-ASN1parameters', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Mms-HI3-PS', 'National-HI3-ASN1parameters')), opt=True)
    _MMSLIC_header_ice_type = ENUM(name='ice-type', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Mms-HI3-PS', 'ICE-type')), opt=True)
    MMSLIC_header._cont = ASN1Dict([
        ('hi3MmsDomainId', _MMSLIC_header_hi3MmsDomainId),
        ('lIID', _MMSLIC_header_lIID),
        ('mMSCorrelationNNumber', _MMSLIC_header_mMSCorrelationNNumber),
        ('timeStamp', _MMSLIC_header_timeStamp),
        ('t-PDU-direction', _MMSLIC_header_t_PDU_direction),
        ('mMSVersion', _MMSLIC_header_mMSVersion),
        ('transactionID', _MMSLIC_header_transactionID),
        ('national-HI3-ASN1parameters', _MMSLIC_header_national_HI3_ASN1parameters),
        ('ice-type', _MMSLIC_header_ice_type),
        ])
    MMSLIC_header._ext = []
    
    #-----< TPDU-direction >-----#
    TPDU_direction = ENUM(name='TPDU-direction', mode=MODE_TYPE)
    TPDU_direction._cont = ASN1Dict([('from-target', 1), ('to-target', 2), ('unknown', 3)])
    TPDU_direction._ext = None
    
    #-----< National-HI3-ASN1parameters >-----#
    National_HI3_ASN1parameters = SEQ(name='National-HI3-ASN1parameters', mode=MODE_TYPE)
    _National_HI3_ASN1parameters_countryCode = STR_PRINT(name='countryCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _National_HI3_ASN1parameters_countryCode._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    National_HI3_ASN1parameters._cont = ASN1Dict([
        ('countryCode', _National_HI3_ASN1parameters_countryCode),
        ])
    National_HI3_ASN1parameters._ext = []
    
    #-----< ICE-type >-----#
    ICE_type = ENUM(name='ICE-type', mode=MODE_TYPE)
    ICE_type._cont = ASN1Dict([('mMSC', 1), ('mMSProxyRelay', 2)])
    ICE_type._ext = []
    
    _all_ = [
        lawfulInterceptDomainId,
        threeGPPSUBDomainId,
        hi3DomainId,
        _CC_PDU_mmSLIC_header,
        _CC_PDU_payload,
        CC_PDU,
        _MMSLIC_header_hi3MmsDomainId,
        _MMSLIC_header_lIID,
        _MMSLIC_header_mMSCorrelationNNumber,
        _MMSLIC_header_timeStamp,
        _MMSLIC_header_t_PDU_direction,
        _MMSLIC_header_mMSVersion,
        _MMSLIC_header_transactionID,
        _MMSLIC_header_national_HI3_ASN1parameters,
        _MMSLIC_header_ice_type,
        MMSLIC_header,
        TPDU_direction,
        _National_HI3_ASN1parameters_countryCode,
        National_HI3_ASN1parameters,
        ICE_type,
    ]

class MmsHI2Operations:

    _name_  = 'MmsHI2Operations'
    _oid_   = [0, 4, 0, 2, 2, 4, 16, 16, 0]
    
    _obj_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi2mmsDomainId',
        'MmsIRIsContent',
        'MmsIRISequence',
        'MmsIRIContent',
        'IRI-Parameters',
        'PartyInformation',
        'Address',
        'Addresses',
        'ClassIdentifier',
        'ContentClass',
        'ContentLocation',
        'ElementDescriptor',
        'EncodedString',
        'EncodedTextString',
        'From',
        'FromAddresses',
        'MessageClass',
        'MMBoxDescriptionPdus',
        'MMFlags',
        'MMSAttributes',
        'MMSCorrelationNumber',
        'MMSEvent',
        'MMSParties',
        'MMSState',
        'MMSStatus',
        'ParameterName',
        'ParameterValue',
        'PreviouslySentBy',
        'PreviouslySentByDateTime',
        'Priority',
        'ResponseStatus',
        'ResponseStatusText',
        'ActualResponseStatus',
        'StoreStatus',
        'TokenAction',
        'YesNo',
        ]
    _type_ = [
        'MmsIRIsContent',
        'MmsIRISequence',
        'MmsIRIContent',
        'IRI-Parameters',
        'PartyInformation',
        'Address',
        'Addresses',
        'ClassIdentifier',
        'ContentClass',
        'ContentLocation',
        'ElementDescriptor',
        'EncodedString',
        'EncodedTextString',
        'From',
        'FromAddresses',
        'MessageClass',
        'MMBoxDescriptionPdus',
        'MMFlags',
        'MMSAttributes',
        'MMSCorrelationNumber',
        'MMSEvent',
        'MMSParties',
        'MMSState',
        'MMSStatus',
        'ParameterName',
        'ParameterValue',
        'PreviouslySentBy',
        'PreviouslySentByDateTime',
        'Priority',
        'ResponseStatus',
        'ResponseStatusText',
        'ActualResponseStatus',
        'StoreStatus',
        'TokenAction',
        'YesNo',
        ]
    _set_ = [
        ]
    _val_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi2mmsDomainId',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< lawfulInterceptDomainId >-----#
    lawfulInterceptDomainId = OID(name='lawfulInterceptDomainId', mode=MODE_VALUE)
    lawfulInterceptDomainId._val = (0, 4, 0, 2, 2)
    
    #-----< threeGPPSUBDomainId >-----#
    threeGPPSUBDomainId = OID(name='threeGPPSUBDomainId', mode=MODE_VALUE)
    threeGPPSUBDomainId._val = (0, 4, 0, 2, 2, 4)
    
    #-----< hi2mmsDomainId >-----#
    hi2mmsDomainId = OID(name='hi2mmsDomainId', mode=MODE_VALUE)
    hi2mmsDomainId._val = (0, 4, 0, 2, 2, 4, 16, 16, 0)
    
    #-----< MmsIRIsContent >-----#
    MmsIRIsContent = CHOICE(name='MmsIRIsContent', mode=MODE_TYPE)
    _MmsIRIsContent_mmsiRIContent = CHOICE(name='mmsiRIContent', mode=MODE_TYPE, typeref=ASN1RefType(('MmsHI2Operations', 'MmsIRIContent')))
    _MmsIRIsContent_mmsIRISequence = SEQ_OF(name='mmsIRISequence', mode=MODE_TYPE, typeref=ASN1RefType(('MmsHI2Operations', 'MmsIRISequence')))
    MmsIRIsContent._cont = ASN1Dict([
        ('mmsiRIContent', _MmsIRIsContent_mmsiRIContent),
        ('mmsIRISequence', _MmsIRIsContent_mmsIRISequence),
        ])
    MmsIRIsContent._ext = None
    
    #-----< MmsIRISequence >-----#
    MmsIRISequence = SEQ_OF(name='MmsIRISequence', mode=MODE_TYPE)
    _MmsIRISequence__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MmsHI2Operations', 'MmsIRIContent')))
    MmsIRISequence._cont = _MmsIRISequence__item_
    
    #-----< MmsIRIContent >-----#
    MmsIRIContent = CHOICE(name='MmsIRIContent', mode=MODE_TYPE)
    _MmsIRIContent_iRI_Begin_record = SEQ(name='iRI-Begin-record', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'IRI-Parameters')))
    _MmsIRIContent_iRI_End_record = SEQ(name='iRI-End-record', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'IRI-Parameters')))
    _MmsIRIContent_iRI_Continue_record = SEQ(name='iRI-Continue-record', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'IRI-Parameters')))
    _MmsIRIContent_iRI_Report_record = SEQ(name='iRI-Report-record', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'IRI-Parameters')))
    MmsIRIContent._cont = ASN1Dict([
        ('iRI-Begin-record', _MmsIRIContent_iRI_Begin_record),
        ('iRI-End-record', _MmsIRIContent_iRI_End_record),
        ('iRI-Continue-record', _MmsIRIContent_iRI_Continue_record),
        ('iRI-Report-record', _MmsIRIContent_iRI_Report_record),
        ])
    MmsIRIContent._ext = None
    
    #-----< IRI-Parameters >-----#
    IRI_Parameters = SEQ(name='IRI-Parameters', mode=MODE_TYPE)
    _IRI_Parameters_hi2mmsDomainId = OID(name='hi2mmsDomainId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IRI_Parameters_lawfulInterceptionIdentifier = OCT_STR(name='lawfulInterceptionIdentifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')))
    _IRI_Parameters_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _IRI_Parameters_locationOfTheTarget = SEQ(name='locationOfTheTarget', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'Location')), opt=True)
    _IRI_Parameters_partyInformation = SET_OF(name='partyInformation', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_partyInformation__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MmsHI2Operations', 'PartyInformation')))
    _IRI_Parameters_partyInformation._cont = __IRI_Parameters_partyInformation__item_
    _IRI_Parameters_partyInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    _IRI_Parameters_mMSevent = ENUM(name='mMSevent', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'MMSEvent')), opt=True)
    _IRI_Parameters_serviceCenterAddress = SEQ(name='serviceCenterAddress', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'PartyInformation')), opt=True)
    _IRI_Parameters_mMSParties = SEQ(name='mMSParties', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'MMSParties')), opt=True)
    _IRI_Parameters_mMSVersion = INT(name='mMSVersion', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_transactionID = STR_UTF8(name='transactionID', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_messageID = STR_UTF8(name='messageID', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_mMSDateTime = TIME_GEN(name='mMSDateTime', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_messageClass = CHOICE(name='messageClass', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'MessageClass')), opt=True)
    _IRI_Parameters_expiry = TIME_GEN(name='expiry', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_distributionIndicator = BOOL(name='distributionIndicator', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'YesNo')), opt=True)
    _IRI_Parameters_elementDescriptor = SEQ(name='elementDescriptor', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'ElementDescriptor')), opt=True)
    _IRI_Parameters_retrievalMode = BOOL(name='retrievalMode', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'YesNo')), opt=True)
    _IRI_Parameters_retrievalModeText = CHOICE(name='retrievalModeText', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'EncodedString')), opt=True)
    _IRI_Parameters_senderVisibility = BOOL(name='senderVisibility', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'YesNo')), opt=True)
    _IRI_Parameters_deliveryReport = BOOL(name='deliveryReport', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'YesNo')), opt=True)
    _IRI_Parameters_readReport = BOOL(name='readReport', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'YesNo')), opt=True)
    _IRI_Parameters_applicID = STR_UTF8(name='applicID', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_replyApplicID = STR_UTF8(name='replyApplicID', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_auxApplicInfo = STR_UTF8(name='auxApplicInfo', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_contentClass = ENUM(name='contentClass', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'ContentClass')), opt=True)
    _IRI_Parameters_dRMContent = BOOL(name='dRMContent', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'YesNo')), opt=True)
    _IRI_Parameters_replaceID = STR_UTF8(name='replaceID', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_contentLocation = SEQ(name='contentLocation', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'ContentLocation')), opt=True)
    _IRI_Parameters_mMSStatus = ENUM(name='mMSStatus', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'MMSStatus')), opt=True)
    _IRI_Parameters_reportAllowed = BOOL(name='reportAllowed', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'YesNo')), opt=True)
    _IRI_Parameters_previouslySentBy = SEQ(name='previouslySentBy', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'PreviouslySentBy')), opt=True)
    _IRI_Parameters_previouslySentByDateTime = SEQ(name='previouslySentByDateTime', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'PreviouslySentByDateTime')), opt=True)
    _IRI_Parameters_mMState = ENUM(name='mMState', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'MMSState')), opt=True)
    _IRI_Parameters_desiredDeliveryTime = TIME_GEN(name='desiredDeliveryTime', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_deliveryReportAllowed = BOOL(name='deliveryReportAllowed', mode=MODE_TYPE, tag=(36, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'YesNo')), opt=True)
    _IRI_Parameters_store = BOOL(name='store', mode=MODE_TYPE, tag=(37, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'YesNo')), opt=True)
    _IRI_Parameters_responseStatus = SEQ(name='responseStatus', mode=MODE_TYPE, tag=(38, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'ResponseStatus')), opt=True)
    _IRI_Parameters_responseStatusText = SEQ(name='responseStatusText', mode=MODE_TYPE, tag=(39, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'ResponseStatusText')), opt=True)
    _IRI_Parameters_storeStatus = ENUM(name='storeStatus', mode=MODE_TYPE, tag=(40, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'StoreStatus')), opt=True)
    _IRI_Parameters_storeStatusText = CHOICE(name='storeStatusText', mode=MODE_TYPE, tag=(41, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'EncodedString')), opt=True)
    _IRI_Parameters_mMFlags = SEQ(name='mMFlags', mode=MODE_TYPE, tag=(43, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'MMFlags')), opt=True)
    _IRI_Parameters_mMBoxDescriptionPdus = SEQ_OF(name='mMBoxDescriptionPdus', mode=MODE_TYPE, tag=(44, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_mMBoxDescriptionPdus__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MmsHI2Operations', 'MMBoxDescriptionPdus')))
    _IRI_Parameters_mMBoxDescriptionPdus._cont = __IRI_Parameters_mMBoxDescriptionPdus__item_
    _IRI_Parameters_cancelID = STR_UTF8(name='cancelID', mode=MODE_TYPE, tag=(45, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_cancelStatus = BOOL(name='cancelStatus', mode=MODE_TYPE, tag=(46, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'YesNo')), opt=True)
    _IRI_Parameters_mMSStart = INT(name='mMSStart', mode=MODE_TYPE, tag=(47, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_mMSLimit = INT(name='mMSLimit', mode=MODE_TYPE, tag=(48, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_mMSAttributes = CHOICE(name='mMSAttributes', mode=MODE_TYPE, tag=(49, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'MMSAttributes')), opt=True)
    _IRI_Parameters_mMSTotals = BOOL(name='mMSTotals', mode=MODE_TYPE, tag=(50, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'YesNo')), opt=True)
    _IRI_Parameters_mMSQuotas = BOOL(name='mMSQuotas', mode=MODE_TYPE, tag=(51, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'YesNo')), opt=True)
    _IRI_Parameters_mMSMessageCount = INT(name='mMSMessageCount', mode=MODE_TYPE, tag=(52, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_messageSize = INT(name='messageSize', mode=MODE_TYPE, tag=(53, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_mMSForwardReqDateTime = TIME_GEN(name='mMSForwardReqDateTime', mode=MODE_TYPE, tag=(54, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_adaptationAllowed = BOOL(name='adaptationAllowed', mode=MODE_TYPE, tag=(55, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'YesNo')), opt=True)
    _IRI_Parameters_priority = ENUM(name='priority', mode=MODE_TYPE, tag=(56, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'Priority')), opt=True)
    _IRI_Parameters_mMSCorrelationNumber = OCT_STR(name='mMSCorrelationNumber', mode=MODE_TYPE, tag=(57, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'MMSCorrelationNumber')), opt=True)
    _IRI_Parameters_contentType = OCT_STR(name='contentType', mode=MODE_TYPE, tag=(58, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_national_Parameters = SET_OF(name='national-Parameters', mode=MODE_TYPE, tag=(59, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'National-Parameters')), opt=True)
    IRI_Parameters._cont = ASN1Dict([
        ('hi2mmsDomainId', _IRI_Parameters_hi2mmsDomainId),
        ('lawfulInterceptionIdentifier', _IRI_Parameters_lawfulInterceptionIdentifier),
        ('timeStamp', _IRI_Parameters_timeStamp),
        ('locationOfTheTarget', _IRI_Parameters_locationOfTheTarget),
        ('partyInformation', _IRI_Parameters_partyInformation),
        ('mMSevent', _IRI_Parameters_mMSevent),
        ('serviceCenterAddress', _IRI_Parameters_serviceCenterAddress),
        ('mMSParties', _IRI_Parameters_mMSParties),
        ('mMSVersion', _IRI_Parameters_mMSVersion),
        ('transactionID', _IRI_Parameters_transactionID),
        ('messageID', _IRI_Parameters_messageID),
        ('mMSDateTime', _IRI_Parameters_mMSDateTime),
        ('messageClass', _IRI_Parameters_messageClass),
        ('expiry', _IRI_Parameters_expiry),
        ('distributionIndicator', _IRI_Parameters_distributionIndicator),
        ('elementDescriptor', _IRI_Parameters_elementDescriptor),
        ('retrievalMode', _IRI_Parameters_retrievalMode),
        ('retrievalModeText', _IRI_Parameters_retrievalModeText),
        ('senderVisibility', _IRI_Parameters_senderVisibility),
        ('deliveryReport', _IRI_Parameters_deliveryReport),
        ('readReport', _IRI_Parameters_readReport),
        ('applicID', _IRI_Parameters_applicID),
        ('replyApplicID', _IRI_Parameters_replyApplicID),
        ('auxApplicInfo', _IRI_Parameters_auxApplicInfo),
        ('contentClass', _IRI_Parameters_contentClass),
        ('dRMContent', _IRI_Parameters_dRMContent),
        ('replaceID', _IRI_Parameters_replaceID),
        ('contentLocation', _IRI_Parameters_contentLocation),
        ('mMSStatus', _IRI_Parameters_mMSStatus),
        ('reportAllowed', _IRI_Parameters_reportAllowed),
        ('previouslySentBy', _IRI_Parameters_previouslySentBy),
        ('previouslySentByDateTime', _IRI_Parameters_previouslySentByDateTime),
        ('mMState', _IRI_Parameters_mMState),
        ('desiredDeliveryTime', _IRI_Parameters_desiredDeliveryTime),
        ('deliveryReportAllowed', _IRI_Parameters_deliveryReportAllowed),
        ('store', _IRI_Parameters_store),
        ('responseStatus', _IRI_Parameters_responseStatus),
        ('responseStatusText', _IRI_Parameters_responseStatusText),
        ('storeStatus', _IRI_Parameters_storeStatus),
        ('storeStatusText', _IRI_Parameters_storeStatusText),
        ('mMFlags', _IRI_Parameters_mMFlags),
        ('mMBoxDescriptionPdus', _IRI_Parameters_mMBoxDescriptionPdus),
        ('cancelID', _IRI_Parameters_cancelID),
        ('cancelStatus', _IRI_Parameters_cancelStatus),
        ('mMSStart', _IRI_Parameters_mMSStart),
        ('mMSLimit', _IRI_Parameters_mMSLimit),
        ('mMSAttributes', _IRI_Parameters_mMSAttributes),
        ('mMSTotals', _IRI_Parameters_mMSTotals),
        ('mMSQuotas', _IRI_Parameters_mMSQuotas),
        ('mMSMessageCount', _IRI_Parameters_mMSMessageCount),
        ('messageSize', _IRI_Parameters_messageSize),
        ('mMSForwardReqDateTime', _IRI_Parameters_mMSForwardReqDateTime),
        ('adaptationAllowed', _IRI_Parameters_adaptationAllowed),
        ('priority', _IRI_Parameters_priority),
        ('mMSCorrelationNumber', _IRI_Parameters_mMSCorrelationNumber),
        ('contentType', _IRI_Parameters_contentType),
        ('national-Parameters', _IRI_Parameters_national_Parameters),
        ])
    IRI_Parameters._ext = None
    
    #-----< PartyInformation >-----#
    PartyInformation = SEQ(name='PartyInformation', mode=MODE_TYPE)
    _PartyInformation_party_Qualifier = ENUM(name='party-Qualifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PartyInformation_party_Qualifier._cont = ASN1Dict([('mMS-Target', 1)])
    _PartyInformation_party_Qualifier._ext = []
    _PartyInformation_partyIdentity = SEQ(name='partyIdentity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PartyInformation_partyIdentity_mSISDN = OCT_STR(name='mSISDN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_mMSAddress = OCT_STR(name='mMSAddress', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_mMSAddressNonLocalID = OCT_STR(name='mMSAddressNonLocalID', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_e_Mail = OCT_STR(name='e-Mail', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_e164_Format = OCT_STR(name='e164-Format', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_e164_Format._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    __PartyInformation_partyIdentity_iPAddress = SEQ(name='iPAddress', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')), opt=True)
    __PartyInformation_partyIdentity_alphanum_Shortcode = OCT_STR(name='alphanum-Shortcode', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_num_Shortcode = OCT_STR(name='num-Shortcode', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_iMSI = OCT_STR(name='iMSI', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyInformation_partyIdentity._cont = ASN1Dict([
        ('mSISDN', __PartyInformation_partyIdentity_mSISDN),
        ('mMSAddress', __PartyInformation_partyIdentity_mMSAddress),
        ('mMSAddressNonLocalID', __PartyInformation_partyIdentity_mMSAddressNonLocalID),
        ('e-Mail', __PartyInformation_partyIdentity_e_Mail),
        ('e164-Format', __PartyInformation_partyIdentity_e164_Format),
        ('iPAddress', __PartyInformation_partyIdentity_iPAddress),
        ('alphanum-Shortcode', __PartyInformation_partyIdentity_alphanum_Shortcode),
        ('num-Shortcode', __PartyInformation_partyIdentity_num_Shortcode),
        ('iMSI', __PartyInformation_partyIdentity_iMSI),
        ])
    _PartyInformation_partyIdentity._ext = []
    PartyInformation._cont = ASN1Dict([
        ('party-Qualifier', _PartyInformation_party_Qualifier),
        ('partyIdentity', _PartyInformation_partyIdentity),
        ])
    PartyInformation._ext = []
    
    #-----< Address >-----#
    Address = CHOICE(name='Address', mode=MODE_TYPE, typeref=ASN1RefType(('MmsHI2Operations', 'EncodedString')))
    
    #-----< Addresses >-----#
    Addresses = SEQ_OF(name='Addresses', mode=MODE_TYPE)
    _Addresses__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MmsHI2Operations', 'Address')))
    Addresses._cont = _Addresses__item_
    
    #-----< ClassIdentifier >-----#
    ClassIdentifier = ENUM(name='ClassIdentifier', mode=MODE_TYPE)
    ClassIdentifier._cont = ASN1Dict([('personal', 0), ('advertisement', 1), ('informational', 2), ('auto', 3)])
    ClassIdentifier._ext = []
    
    #-----< ContentClass >-----#
    ContentClass = ENUM(name='ContentClass', mode=MODE_TYPE)
    ContentClass._cont = ASN1Dict([('text', 0), ('image-basic', 1), ('image-rich', 2), ('video-basic', 3), ('video-rich', 4), ('megapixel', 5), ('content-basic', 6), ('content-rich', 7)])
    ContentClass._ext = []
    
    #-----< ContentLocation >-----#
    ContentLocation = SEQ(name='ContentLocation', mode=MODE_TYPE)
    _ContentLocation_contentLocationURI = OCT_STR(name='contentLocationURI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ContentLocation_statusCount = INT(name='statusCount', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ContentLocation._cont = ASN1Dict([
        ('contentLocationURI', _ContentLocation_contentLocationURI),
        ('statusCount', _ContentLocation_statusCount),
        ])
    ContentLocation._ext = []
    
    #-----< ElementDescriptor >-----#
    ElementDescriptor = SEQ(name='ElementDescriptor', mode=MODE_TYPE)
    _ElementDescriptor_contentReferenceValue = STR_UTF8(name='contentReferenceValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ElementDescriptor_parameterName = CHOICE(name='parameterName', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'ParameterName')))
    _ElementDescriptor_parameterValue = CHOICE(name='parameterValue', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'ParameterValue')))
    ElementDescriptor._cont = ASN1Dict([
        ('contentReferenceValue', _ElementDescriptor_contentReferenceValue),
        ('parameterName', _ElementDescriptor_parameterName),
        ('parameterValue', _ElementDescriptor_parameterValue),
        ])
    ElementDescriptor._ext = []
    
    #-----< EncodedString >-----#
    EncodedString = CHOICE(name='EncodedString', mode=MODE_TYPE)
    _EncodedString_text = STR_UTF8(name='text', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EncodedString_encodedTextString = SEQ(name='encodedTextString', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'EncodedTextString')))
    EncodedString._cont = ASN1Dict([
        ('text', _EncodedString_text),
        ('encodedTextString', _EncodedString_encodedTextString),
        ])
    EncodedString._ext = []
    
    #-----< EncodedTextString >-----#
    EncodedTextString = SEQ(name='EncodedTextString', mode=MODE_TYPE)
    _EncodedTextString_stringType = OCT_STR(name='stringType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EncodedTextString_actualString = OCT_STR(name='actualString', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    EncodedTextString._cont = ASN1Dict([
        ('stringType', _EncodedTextString_stringType),
        ('actualString', _EncodedTextString_actualString),
        ])
    EncodedTextString._ext = []
    
    #-----< From >-----#
    From = SEQ_OF(name='From', mode=MODE_TYPE)
    _From__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MmsHI2Operations', 'FromAddresses')))
    From._cont = _From__item_
    
    #-----< FromAddresses >-----#
    FromAddresses = CHOICE(name='FromAddresses', mode=MODE_TYPE)
    _FromAddresses_actualAddress = CHOICE(name='actualAddress', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'EncodedString')))
    _FromAddresses_insertToken = NULL(name='insertToken', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    FromAddresses._cont = ASN1Dict([
        ('actualAddress', _FromAddresses_actualAddress),
        ('insertToken', _FromAddresses_insertToken),
        ])
    FromAddresses._ext = []
    
    #-----< MessageClass >-----#
    MessageClass = CHOICE(name='MessageClass', mode=MODE_TYPE)
    _MessageClass_classIdentifier = ENUM(name='classIdentifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'ClassIdentifier')))
    _MessageClass_tokenText = OCT_STR(name='tokenText', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    MessageClass._cont = ASN1Dict([
        ('classIdentifier', _MessageClass_classIdentifier),
        ('tokenText', _MessageClass_tokenText),
        ])
    MessageClass._ext = []
    
    #-----< MMBoxDescriptionPdus >-----#
    MMBoxDescriptionPdus = SEQ(name='MMBoxDescriptionPdus', mode=MODE_TYPE)
    _MMBoxDescriptionPdus_mMSCorrelation = OCT_STR(name='mMSCorrelation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'MMSCorrelationNumber')), opt=True)
    _MMBoxDescriptionPdus_toAddresses = SEQ_OF(name='toAddresses', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'Addresses')))
    _MMBoxDescriptionPdus_cCAddresses = SEQ_OF(name='cCAddresses', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'Addresses')), opt=True)
    _MMBoxDescriptionPdus_bCCAddresses = SEQ_OF(name='bCCAddresses', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'Addresses')), opt=True)
    _MMBoxDescriptionPdus_fromAddress = SEQ_OF(name='fromAddress', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'From')))
    _MMBoxDescriptionPdus_messageID = STR_UTF8(name='messageID', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MMBoxDescriptionPdus_mMSDateTime = TIME_GEN(name='mMSDateTime', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MMBoxDescriptionPdus_previouslySentBy = SEQ(name='previouslySentBy', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'PreviouslySentBy')), opt=True)
    _MMBoxDescriptionPdus_previouslySentByDateTime = SEQ(name='previouslySentByDateTime', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'PreviouslySentByDateTime')), opt=True)
    _MMBoxDescriptionPdus_mMState = ENUM(name='mMState', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'MMSState')), opt=True)
    _MMBoxDescriptionPdus_mMFlags = SEQ(name='mMFlags', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'MMFlags')), opt=True)
    _MMBoxDescriptionPdus_messageClass = CHOICE(name='messageClass', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'MessageClass')), opt=True)
    _MMBoxDescriptionPdus_priority = ENUM(name='priority', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'Priority')), opt=True)
    _MMBoxDescriptionPdus_deliveryTime = TIME_GEN(name='deliveryTime', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MMBoxDescriptionPdus_expiry = TIME_GEN(name='expiry', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MMBoxDescriptionPdus_deliveryReport = BOOL(name='deliveryReport', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'YesNo')), opt=True)
    _MMBoxDescriptionPdus_readReport = BOOL(name='readReport', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'YesNo')), opt=True)
    _MMBoxDescriptionPdus_messageSize = INT(name='messageSize', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MMBoxDescriptionPdus_contentLocation = SEQ(name='contentLocation', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'ContentLocation')), opt=True)
    _MMBoxDescriptionPdus_contentType = OCT_STR(name='contentType', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    MMBoxDescriptionPdus._cont = ASN1Dict([
        ('mMSCorrelation', _MMBoxDescriptionPdus_mMSCorrelation),
        ('toAddresses', _MMBoxDescriptionPdus_toAddresses),
        ('cCAddresses', _MMBoxDescriptionPdus_cCAddresses),
        ('bCCAddresses', _MMBoxDescriptionPdus_bCCAddresses),
        ('fromAddress', _MMBoxDescriptionPdus_fromAddress),
        ('messageID', _MMBoxDescriptionPdus_messageID),
        ('mMSDateTime', _MMBoxDescriptionPdus_mMSDateTime),
        ('previouslySentBy', _MMBoxDescriptionPdus_previouslySentBy),
        ('previouslySentByDateTime', _MMBoxDescriptionPdus_previouslySentByDateTime),
        ('mMState', _MMBoxDescriptionPdus_mMState),
        ('mMFlags', _MMBoxDescriptionPdus_mMFlags),
        ('messageClass', _MMBoxDescriptionPdus_messageClass),
        ('priority', _MMBoxDescriptionPdus_priority),
        ('deliveryTime', _MMBoxDescriptionPdus_deliveryTime),
        ('expiry', _MMBoxDescriptionPdus_expiry),
        ('deliveryReport', _MMBoxDescriptionPdus_deliveryReport),
        ('readReport', _MMBoxDescriptionPdus_readReport),
        ('messageSize', _MMBoxDescriptionPdus_messageSize),
        ('contentLocation', _MMBoxDescriptionPdus_contentLocation),
        ('contentType', _MMBoxDescriptionPdus_contentType),
        ])
    MMBoxDescriptionPdus._ext = []
    
    #-----< MMFlags >-----#
    MMFlags = SEQ(name='MMFlags', mode=MODE_TYPE)
    _MMFlags_tokenAction = ENUM(name='tokenAction', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'TokenAction')))
    _MMFlags_mmFlagkeywords = CHOICE(name='mmFlagkeywords', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'EncodedString')))
    MMFlags._cont = ASN1Dict([
        ('tokenAction', _MMFlags_tokenAction),
        ('mmFlagkeywords', _MMFlags_mmFlagkeywords),
        ])
    MMFlags._ext = None
    
    #-----< MMSAttributes >-----#
    MMSAttributes = CHOICE(name='MMSAttributes', mode=MODE_TYPE)
    _MMSAttributes_attributeApplicID = STR_UTF8(name='attributeApplicID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MMSAttributes_attributeAuxApplicInfo = STR_UTF8(name='attributeAuxApplicInfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MMSAttributes_attributeBCC = CHOICE(name='attributeBCC', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'Address')))
    _MMSAttributes_attributeCC = CHOICE(name='attributeCC', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'Address')))
    _MMSAttributes_attributeContent = OCT_STR(name='attributeContent', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MMSAttributes_attributeContentType = OCT_STR(name='attributeContentType', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MMSAttributes_attributeDate = TIME_GEN(name='attributeDate', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MMSAttributes_attributeDeliveryReport = BOOL(name='attributeDeliveryReport', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'YesNo')))
    _MMSAttributes_attributeDeliveryTime = TIME_GEN(name='attributeDeliveryTime', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MMSAttributes_attributeExpiry = TIME_GEN(name='attributeExpiry', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MMSAttributes_attributeFrom = SEQ_OF(name='attributeFrom', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'From')))
    _MMSAttributes_attributeMessageClass = CHOICE(name='attributeMessageClass', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'MessageClass')))
    _MMSAttributes_attributeMessageID = STR_UTF8(name='attributeMessageID', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MMSAttributes_attributeMessageSize = INT(name='attributeMessageSize', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MMSAttributes_attributePriority = ENUM(name='attributePriority', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'Priority')))
    _MMSAttributes_attributeReadReport = BOOL(name='attributeReadReport', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'YesNo')))
    _MMSAttributes_attributeTo = CHOICE(name='attributeTo', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'Address')))
    _MMSAttributes_attributeReplyApplicID = STR_UTF8(name='attributeReplyApplicID', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MMSAttributes_attributePreviouslySentBy = SEQ(name='attributePreviouslySentBy', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'PreviouslySentBy')))
    _MMSAttributes_attributePreviouslySentByDateTime = SEQ(name='attributePreviouslySentByDateTime', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'PreviouslySentByDateTime')))
    _MMSAttributes_attributeAdditionalHeaders = OCT_STR(name='attributeAdditionalHeaders', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    MMSAttributes._cont = ASN1Dict([
        ('attributeApplicID', _MMSAttributes_attributeApplicID),
        ('attributeAuxApplicInfo', _MMSAttributes_attributeAuxApplicInfo),
        ('attributeBCC', _MMSAttributes_attributeBCC),
        ('attributeCC', _MMSAttributes_attributeCC),
        ('attributeContent', _MMSAttributes_attributeContent),
        ('attributeContentType', _MMSAttributes_attributeContentType),
        ('attributeDate', _MMSAttributes_attributeDate),
        ('attributeDeliveryReport', _MMSAttributes_attributeDeliveryReport),
        ('attributeDeliveryTime', _MMSAttributes_attributeDeliveryTime),
        ('attributeExpiry', _MMSAttributes_attributeExpiry),
        ('attributeFrom', _MMSAttributes_attributeFrom),
        ('attributeMessageClass', _MMSAttributes_attributeMessageClass),
        ('attributeMessageID', _MMSAttributes_attributeMessageID),
        ('attributeMessageSize', _MMSAttributes_attributeMessageSize),
        ('attributePriority', _MMSAttributes_attributePriority),
        ('attributeReadReport', _MMSAttributes_attributeReadReport),
        ('attributeTo', _MMSAttributes_attributeTo),
        ('attributeReplyApplicID', _MMSAttributes_attributeReplyApplicID),
        ('attributePreviouslySentBy', _MMSAttributes_attributePreviouslySentBy),
        ('attributePreviouslySentByDateTime', _MMSAttributes_attributePreviouslySentByDateTime),
        ('attributeAdditionalHeaders', _MMSAttributes_attributeAdditionalHeaders),
        ])
    MMSAttributes._ext = []
    
    #-----< MMSCorrelationNumber >-----#
    MMSCorrelationNumber = OCT_STR(name='MMSCorrelationNumber', mode=MODE_TYPE)
    
    #-----< MMSEvent >-----#
    MMSEvent = ENUM(name='MMSEvent', mode=MODE_TYPE)
    MMSEvent._cont = ASN1Dict([('send', 0), ('notification', 1), ('notificationResponse', 2), ('retrieval', 3), ('retrievalAcknowledgement', 4), ('forwarding', 5), ('store', 6), ('upload', 7), ('delete', 8), ('delivery', 9), ('readReplyFromTarget', 10), ('readReplyToTarget', 11), ('cancel', 12), ('viewRequest', 13), ('viewConfirm', 14)])
    MMSEvent._ext = []
    
    #-----< MMSParties >-----#
    MMSParties = SEQ(name='MMSParties', mode=MODE_TYPE)
    _MMSParties_toAddresses = SEQ_OF(name='toAddresses', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'Addresses')), opt=True)
    _MMSParties_cCAddresses = SEQ_OF(name='cCAddresses', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'Addresses')), opt=True)
    _MMSParties_bCCAddresses = SEQ_OF(name='bCCAddresses', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'Addresses')), opt=True)
    _MMSParties_fromAddresses = SEQ_OF(name='fromAddresses', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'From')), opt=True)
    MMSParties._cont = ASN1Dict([
        ('toAddresses', _MMSParties_toAddresses),
        ('cCAddresses', _MMSParties_cCAddresses),
        ('bCCAddresses', _MMSParties_bCCAddresses),
        ('fromAddresses', _MMSParties_fromAddresses),
        ])
    MMSParties._ext = []
    
    #-----< MMSState >-----#
    MMSState = ENUM(name='MMSState', mode=MODE_TYPE)
    MMSState._cont = ASN1Dict([('draft', 0), ('sent', 1), ('new', 2), ('retreived', 3), ('forwarded', 4)])
    MMSState._ext = []
    
    #-----< MMSStatus >-----#
    MMSStatus = ENUM(name='MMSStatus', mode=MODE_TYPE)
    MMSStatus._cont = ASN1Dict([('expired', 0), ('retrieved', 1), ('rejected', 2), ('deferred', 3), ('unrecognised', 4), ('indeterminate', 5), ('forwarded', 6), ('unreachable', 7)])
    MMSStatus._ext = []
    
    #-----< ParameterName >-----#
    ParameterName = CHOICE(name='ParameterName', mode=MODE_TYPE)
    _ParameterName_integername = INT(name='integername', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ParameterName_textName = STR_UTF8(name='textName', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ParameterName._cont = ASN1Dict([
        ('integername', _ParameterName_integername),
        ('textName', _ParameterName_textName),
        ])
    ParameterName._ext = []
    
    #-----< ParameterValue >-----#
    ParameterValue = CHOICE(name='ParameterValue', mode=MODE_TYPE)
    _ParameterValue_intValue = OCT_STR(name='intValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ParameterValue_textValue = STR_UTF8(name='textValue', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ParameterValue._cont = ASN1Dict([
        ('intValue', _ParameterValue_intValue),
        ('textValue', _ParameterValue_textValue),
        ])
    ParameterValue._ext = []
    
    #-----< PreviouslySentBy >-----#
    PreviouslySentBy = SEQ(name='PreviouslySentBy', mode=MODE_TYPE)
    _PreviouslySentBy_forwardedCount = INT(name='forwardedCount', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PreviouslySentBy_forwardedPartyID = CHOICE(name='forwardedPartyID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'EncodedString')))
    PreviouslySentBy._cont = ASN1Dict([
        ('forwardedCount', _PreviouslySentBy_forwardedCount),
        ('forwardedPartyID', _PreviouslySentBy_forwardedPartyID),
        ])
    PreviouslySentBy._ext = []
    
    #-----< PreviouslySentByDateTime >-----#
    PreviouslySentByDateTime = SEQ(name='PreviouslySentByDateTime', mode=MODE_TYPE)
    _PreviouslySentByDateTime_forwardedCount = INT(name='forwardedCount', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PreviouslySentByDateTime_forwardedDateTime = TIME_GEN(name='forwardedDateTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PreviouslySentByDateTime._cont = ASN1Dict([
        ('forwardedCount', _PreviouslySentByDateTime_forwardedCount),
        ('forwardedDateTime', _PreviouslySentByDateTime_forwardedDateTime),
        ])
    PreviouslySentByDateTime._ext = []
    
    #-----< Priority >-----#
    Priority = ENUM(name='Priority', mode=MODE_TYPE)
    Priority._cont = ASN1Dict([('low', 0), ('normal', 1), ('high', 2)])
    Priority._ext = []
    
    #-----< ResponseStatus >-----#
    ResponseStatus = SEQ(name='ResponseStatus', mode=MODE_TYPE)
    _ResponseStatus_statusCount = CHOICE(name='statusCount', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'EncodedString')), opt=True)
    _ResponseStatus_actualResponseStatus = ENUM(name='actualResponseStatus', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'ActualResponseStatus')))
    ResponseStatus._cont = ASN1Dict([
        ('statusCount', _ResponseStatus_statusCount),
        ('actualResponseStatus', _ResponseStatus_actualResponseStatus),
        ])
    ResponseStatus._ext = []
    
    #-----< ResponseStatusText >-----#
    ResponseStatusText = SEQ(name='ResponseStatusText', mode=MODE_TYPE)
    _ResponseStatusText_statusCount = CHOICE(name='statusCount', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'EncodedString')), opt=True)
    _ResponseStatusText_actualResponseStatusText = CHOICE(name='actualResponseStatusText', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MmsHI2Operations', 'EncodedString')))
    ResponseStatusText._cont = ASN1Dict([
        ('statusCount', _ResponseStatusText_statusCount),
        ('actualResponseStatusText', _ResponseStatusText_actualResponseStatusText),
        ])
    ResponseStatusText._ext = []
    
    #-----< ActualResponseStatus >-----#
    ActualResponseStatus = ENUM(name='ActualResponseStatus', mode=MODE_TYPE)
    ActualResponseStatus._cont = ASN1Dict([('ok', 0), ('errorUnspecified', 1), ('errorServiceDenied', 2), ('errorMessageFormatCorrupt', 3), ('errorSendingAddressUnresolved', 4), ('errorMessageNotFound', 5), ('errorNetworkProblem', 6), ('errorContentNotAccepted', 7), ('errorUnsuportedMessage', 8), ('errorTransientFailure', 9), ('errorTransientSendingAddressUnresolved', 10), ('errorTransientMessageNotFound', 11), ('errorTransientNetworkProblem', 12), ('errorTransientPartialSucess', 13), ('errorPermanentFailure', 14), ('errorPermanentServiceDenied', 15), ('errorPermanentMessageFormatCorrupt', 16), ('errorPermanentSendingAddressUnresolved', 17), ('errorPermanentMessageNotFound', 18), ('errorPermanentContentNotAccepted', 19), ('errorPermanentReplyChargingLimitationsNotMet', 20), ('errorPermanentReplyChargingRequestNotAccepted', 21), ('errorPermanentReplyChargingForwardingDenied', 22), ('errorPermanentReplyChargingNotSupported', 23), ('errorPermanentAddressHidingNotSupported', 24), ('errorPermanentLackOfPrepaid', 25)])
    ActualResponseStatus._ext = []
    
    #-----< StoreStatus >-----#
    StoreStatus = ENUM(name='StoreStatus', mode=MODE_TYPE)
    StoreStatus._cont = ASN1Dict([('success', 0), ('errorTransient', 1), ('high', 2)])
    StoreStatus._ext = []
    
    #-----< TokenAction >-----#
    TokenAction = ENUM(name='TokenAction', mode=MODE_TYPE)
    TokenAction._cont = ASN1Dict([('addToken', 0), ('removeToken', 1), ('filterToken', 2)])
    TokenAction._ext = []
    
    #-----< YesNo >-----#
    YesNo = BOOL(name='YesNo', mode=MODE_TYPE)
    
    _all_ = [
        lawfulInterceptDomainId,
        threeGPPSUBDomainId,
        hi2mmsDomainId,
        _MmsIRIsContent_mmsiRIContent,
        _MmsIRIsContent_mmsIRISequence,
        MmsIRIsContent,
        _MmsIRISequence__item_,
        MmsIRISequence,
        _MmsIRIContent_iRI_Begin_record,
        _MmsIRIContent_iRI_End_record,
        _MmsIRIContent_iRI_Continue_record,
        _MmsIRIContent_iRI_Report_record,
        MmsIRIContent,
        _IRI_Parameters_hi2mmsDomainId,
        _IRI_Parameters_lawfulInterceptionIdentifier,
        _IRI_Parameters_timeStamp,
        _IRI_Parameters_locationOfTheTarget,
        __IRI_Parameters_partyInformation__item_,
        _IRI_Parameters_partyInformation,
        _IRI_Parameters_mMSevent,
        _IRI_Parameters_serviceCenterAddress,
        _IRI_Parameters_mMSParties,
        _IRI_Parameters_mMSVersion,
        _IRI_Parameters_transactionID,
        _IRI_Parameters_messageID,
        _IRI_Parameters_mMSDateTime,
        _IRI_Parameters_messageClass,
        _IRI_Parameters_expiry,
        _IRI_Parameters_distributionIndicator,
        _IRI_Parameters_elementDescriptor,
        _IRI_Parameters_retrievalMode,
        _IRI_Parameters_retrievalModeText,
        _IRI_Parameters_senderVisibility,
        _IRI_Parameters_deliveryReport,
        _IRI_Parameters_readReport,
        _IRI_Parameters_applicID,
        _IRI_Parameters_replyApplicID,
        _IRI_Parameters_auxApplicInfo,
        _IRI_Parameters_contentClass,
        _IRI_Parameters_dRMContent,
        _IRI_Parameters_replaceID,
        _IRI_Parameters_contentLocation,
        _IRI_Parameters_mMSStatus,
        _IRI_Parameters_reportAllowed,
        _IRI_Parameters_previouslySentBy,
        _IRI_Parameters_previouslySentByDateTime,
        _IRI_Parameters_mMState,
        _IRI_Parameters_desiredDeliveryTime,
        _IRI_Parameters_deliveryReportAllowed,
        _IRI_Parameters_store,
        _IRI_Parameters_responseStatus,
        _IRI_Parameters_responseStatusText,
        _IRI_Parameters_storeStatus,
        _IRI_Parameters_storeStatusText,
        _IRI_Parameters_mMFlags,
        __IRI_Parameters_mMBoxDescriptionPdus__item_,
        _IRI_Parameters_mMBoxDescriptionPdus,
        _IRI_Parameters_cancelID,
        _IRI_Parameters_cancelStatus,
        _IRI_Parameters_mMSStart,
        _IRI_Parameters_mMSLimit,
        _IRI_Parameters_mMSAttributes,
        _IRI_Parameters_mMSTotals,
        _IRI_Parameters_mMSQuotas,
        _IRI_Parameters_mMSMessageCount,
        _IRI_Parameters_messageSize,
        _IRI_Parameters_mMSForwardReqDateTime,
        _IRI_Parameters_adaptationAllowed,
        _IRI_Parameters_priority,
        _IRI_Parameters_mMSCorrelationNumber,
        _IRI_Parameters_contentType,
        _IRI_Parameters_national_Parameters,
        IRI_Parameters,
        _PartyInformation_party_Qualifier,
        __PartyInformation_partyIdentity_mSISDN,
        __PartyInformation_partyIdentity_mMSAddress,
        __PartyInformation_partyIdentity_mMSAddressNonLocalID,
        __PartyInformation_partyIdentity_e_Mail,
        __PartyInformation_partyIdentity_e164_Format,
        __PartyInformation_partyIdentity_iPAddress,
        __PartyInformation_partyIdentity_alphanum_Shortcode,
        __PartyInformation_partyIdentity_num_Shortcode,
        __PartyInformation_partyIdentity_iMSI,
        _PartyInformation_partyIdentity,
        PartyInformation,
        Address,
        _Addresses__item_,
        Addresses,
        ClassIdentifier,
        ContentClass,
        _ContentLocation_contentLocationURI,
        _ContentLocation_statusCount,
        ContentLocation,
        _ElementDescriptor_contentReferenceValue,
        _ElementDescriptor_parameterName,
        _ElementDescriptor_parameterValue,
        ElementDescriptor,
        _EncodedString_text,
        _EncodedString_encodedTextString,
        EncodedString,
        _EncodedTextString_stringType,
        _EncodedTextString_actualString,
        EncodedTextString,
        _From__item_,
        From,
        _FromAddresses_actualAddress,
        _FromAddresses_insertToken,
        FromAddresses,
        _MessageClass_classIdentifier,
        _MessageClass_tokenText,
        MessageClass,
        _MMBoxDescriptionPdus_mMSCorrelation,
        _MMBoxDescriptionPdus_toAddresses,
        _MMBoxDescriptionPdus_cCAddresses,
        _MMBoxDescriptionPdus_bCCAddresses,
        _MMBoxDescriptionPdus_fromAddress,
        _MMBoxDescriptionPdus_messageID,
        _MMBoxDescriptionPdus_mMSDateTime,
        _MMBoxDescriptionPdus_previouslySentBy,
        _MMBoxDescriptionPdus_previouslySentByDateTime,
        _MMBoxDescriptionPdus_mMState,
        _MMBoxDescriptionPdus_mMFlags,
        _MMBoxDescriptionPdus_messageClass,
        _MMBoxDescriptionPdus_priority,
        _MMBoxDescriptionPdus_deliveryTime,
        _MMBoxDescriptionPdus_expiry,
        _MMBoxDescriptionPdus_deliveryReport,
        _MMBoxDescriptionPdus_readReport,
        _MMBoxDescriptionPdus_messageSize,
        _MMBoxDescriptionPdus_contentLocation,
        _MMBoxDescriptionPdus_contentType,
        MMBoxDescriptionPdus,
        _MMFlags_tokenAction,
        _MMFlags_mmFlagkeywords,
        MMFlags,
        _MMSAttributes_attributeApplicID,
        _MMSAttributes_attributeAuxApplicInfo,
        _MMSAttributes_attributeBCC,
        _MMSAttributes_attributeCC,
        _MMSAttributes_attributeContent,
        _MMSAttributes_attributeContentType,
        _MMSAttributes_attributeDate,
        _MMSAttributes_attributeDeliveryReport,
        _MMSAttributes_attributeDeliveryTime,
        _MMSAttributes_attributeExpiry,
        _MMSAttributes_attributeFrom,
        _MMSAttributes_attributeMessageClass,
        _MMSAttributes_attributeMessageID,
        _MMSAttributes_attributeMessageSize,
        _MMSAttributes_attributePriority,
        _MMSAttributes_attributeReadReport,
        _MMSAttributes_attributeTo,
        _MMSAttributes_attributeReplyApplicID,
        _MMSAttributes_attributePreviouslySentBy,
        _MMSAttributes_attributePreviouslySentByDateTime,
        _MMSAttributes_attributeAdditionalHeaders,
        MMSAttributes,
        MMSCorrelationNumber,
        MMSEvent,
        _MMSParties_toAddresses,
        _MMSParties_cCAddresses,
        _MMSParties_bCCAddresses,
        _MMSParties_fromAddresses,
        MMSParties,
        MMSState,
        MMSStatus,
        _ParameterName_integername,
        _ParameterName_textName,
        ParameterName,
        _ParameterValue_intValue,
        _ParameterValue_textValue,
        ParameterValue,
        _PreviouslySentBy_forwardedCount,
        _PreviouslySentBy_forwardedPartyID,
        PreviouslySentBy,
        _PreviouslySentByDateTime_forwardedCount,
        _PreviouslySentByDateTime_forwardedDateTime,
        PreviouslySentByDateTime,
        Priority,
        _ResponseStatus_statusCount,
        _ResponseStatus_actualResponseStatus,
        ResponseStatus,
        _ResponseStatusText_statusCount,
        _ResponseStatusText_actualResponseStatusText,
        ResponseStatusText,
        ActualResponseStatus,
        StoreStatus,
        TokenAction,
        YesNo,
    ]

class ProSeHI2Operations:

    _name_  = 'ProSeHI2Operations'
    _oid_   = [0, 4, 0, 2, 2, 4, 15, 16, 0]
    
    _obj_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi2ProSeDomainId',
        'ProSeIRIsContent',
        'ProSeIRISequence',
        'ProSeIRIContent',
        'IRI-Parameters',
        'ProSeEventData',
        'ProSeDirectDiscovery',
        'ProSeDirectDiscoveryEvent',
        'TargetRole',
        'DirectDiscoveryData',
        'ProSeAppMask',
        'ProSeMaskSequence',
        ]
    _type_ = [
        'ProSeIRIsContent',
        'ProSeIRISequence',
        'ProSeIRIContent',
        'IRI-Parameters',
        'ProSeEventData',
        'ProSeDirectDiscovery',
        'ProSeDirectDiscoveryEvent',
        'TargetRole',
        'DirectDiscoveryData',
        'ProSeAppMask',
        'ProSeMaskSequence',
        ]
    _set_ = [
        ]
    _val_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi2ProSeDomainId',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< lawfulInterceptDomainId >-----#
    lawfulInterceptDomainId = OID(name='lawfulInterceptDomainId', mode=MODE_VALUE)
    lawfulInterceptDomainId._val = (0, 4, 0, 2, 2)
    
    #-----< threeGPPSUBDomainId >-----#
    threeGPPSUBDomainId = OID(name='threeGPPSUBDomainId', mode=MODE_VALUE)
    threeGPPSUBDomainId._val = (0, 4, 0, 2, 2, 4)
    
    #-----< hi2ProSeDomainId >-----#
    hi2ProSeDomainId = OID(name='hi2ProSeDomainId', mode=MODE_VALUE)
    hi2ProSeDomainId._val = (0, 4, 0, 2, 2, 4, 15, 16, 0)
    
    #-----< ProSeIRIsContent >-----#
    ProSeIRIsContent = CHOICE(name='ProSeIRIsContent', mode=MODE_TYPE)
    _ProSeIRIsContent_proseIRIContent = CHOICE(name='proseIRIContent', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ProSeHI2Operations', 'ProSeIRIContent')))
    _ProSeIRIsContent_proseIRISequence = SEQ_OF(name='proseIRISequence', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ProSeHI2Operations', 'ProSeIRISequence')))
    ProSeIRIsContent._cont = ASN1Dict([
        ('proseIRIContent', _ProSeIRIsContent_proseIRIContent),
        ('proseIRISequence', _ProSeIRIsContent_proseIRISequence),
        ])
    ProSeIRIsContent._ext = None
    
    #-----< ProSeIRISequence >-----#
    ProSeIRISequence = SEQ_OF(name='ProSeIRISequence', mode=MODE_TYPE)
    _ProSeIRISequence__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ProSeHI2Operations', 'ProSeIRIContent')))
    ProSeIRISequence._cont = _ProSeIRISequence__item_
    
    #-----< ProSeIRIContent >-----#
    ProSeIRIContent = CHOICE(name='ProSeIRIContent', mode=MODE_TYPE)
    _ProSeIRIContent_iRI_Report_record = SEQ(name='iRI-Report-record', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ProSeHI2Operations', 'IRI-Parameters')))
    ProSeIRIContent._cont = ASN1Dict([
        ('iRI-Report-record', _ProSeIRIContent_iRI_Report_record),
        ])
    ProSeIRIContent._ext = []
    
    #-----< IRI-Parameters >-----#
    IRI_Parameters = SEQ(name='IRI-Parameters', mode=MODE_TYPE)
    _IRI_Parameters_hi2ProSeDomainId = OID(name='hi2ProSeDomainId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IRI_Parameters_lawfulInterceptionIdentifier = OCT_STR(name='lawfulInterceptionIdentifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')))
    _IRI_Parameters_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _IRI_Parameters_networkIdentifier = SEQ(name='networkIdentifier', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Network-Identifier')))
    _IRI_Parameters_proseEventData = CHOICE(name='proseEventData', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ProSeHI2Operations', 'ProSeEventData')))
    _IRI_Parameters_national_Parameters = SET_OF(name='national-Parameters', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'National-Parameters')), opt=True)
    _IRI_Parameters_national_HI2_ASN1parameters = SEQ(name='national-HI2-ASN1parameters', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'National-HI2-ASN1parameters')), opt=True)
    IRI_Parameters._cont = ASN1Dict([
        ('hi2ProSeDomainId', _IRI_Parameters_hi2ProSeDomainId),
        ('lawfulInterceptionIdentifier', _IRI_Parameters_lawfulInterceptionIdentifier),
        ('timeStamp', _IRI_Parameters_timeStamp),
        ('networkIdentifier', _IRI_Parameters_networkIdentifier),
        ('proseEventData', _IRI_Parameters_proseEventData),
        ('national-Parameters', _IRI_Parameters_national_Parameters),
        ('national-HI2-ASN1parameters', _IRI_Parameters_national_HI2_ASN1parameters),
        ])
    IRI_Parameters._ext = []
    
    #-----< ProSeEventData >-----#
    ProSeEventData = CHOICE(name='ProSeEventData', mode=MODE_TYPE)
    _ProSeEventData_proseDirectDiscovery = SEQ(name='proseDirectDiscovery', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ProSeHI2Operations', 'ProSeDirectDiscovery')))
    ProSeEventData._cont = ASN1Dict([
        ('proseDirectDiscovery', _ProSeEventData_proseDirectDiscovery),
        ])
    ProSeEventData._ext = []
    
    #-----< ProSeDirectDiscovery >-----#
    ProSeDirectDiscovery = SEQ(name='ProSeDirectDiscovery', mode=MODE_TYPE)
    _ProSeDirectDiscovery_proseDirectDiscoveryEvent = ENUM(name='proseDirectDiscoveryEvent', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ProSeHI2Operations', 'ProSeDirectDiscoveryEvent')))
    _ProSeDirectDiscovery_targetImsi = OCT_STR(name='targetImsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProSeDirectDiscovery_targetImsi._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    _ProSeDirectDiscovery_targetRole = ENUM(name='targetRole', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ProSeHI2Operations', 'TargetRole')))
    _ProSeDirectDiscovery_directDiscoveryData = SEQ(name='directDiscoveryData', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ProSeHI2Operations', 'DirectDiscoveryData')))
    _ProSeDirectDiscovery_metadata = STR_UTF8(name='metadata', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProSeDirectDiscovery_otherUeImsi = OCT_STR(name='otherUeImsi', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProSeDirectDiscovery_otherUeImsi._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    ProSeDirectDiscovery._cont = ASN1Dict([
        ('proseDirectDiscoveryEvent', _ProSeDirectDiscovery_proseDirectDiscoveryEvent),
        ('targetImsi', _ProSeDirectDiscovery_targetImsi),
        ('targetRole', _ProSeDirectDiscovery_targetRole),
        ('directDiscoveryData', _ProSeDirectDiscovery_directDiscoveryData),
        ('metadata', _ProSeDirectDiscovery_metadata),
        ('otherUeImsi', _ProSeDirectDiscovery_otherUeImsi),
        ])
    ProSeDirectDiscovery._ext = []
    
    #-----< ProSeDirectDiscoveryEvent >-----#
    ProSeDirectDiscoveryEvent = ENUM(name='ProSeDirectDiscoveryEvent', mode=MODE_TYPE)
    ProSeDirectDiscoveryEvent._cont = ASN1Dict([('proseDiscoveryRequest', 1), ('proseMatchReport', 2)])
    ProSeDirectDiscoveryEvent._ext = []
    
    #-----< TargetRole >-----#
    TargetRole = ENUM(name='TargetRole', mode=MODE_TYPE)
    TargetRole._cont = ASN1Dict([('announcingUE', 1), ('monitoringUE', 2)])
    TargetRole._ext = []
    
    #-----< DirectDiscoveryData >-----#
    DirectDiscoveryData = SEQ(name='DirectDiscoveryData', mode=MODE_TYPE)
    _DirectDiscoveryData_discoveryPLMNID = STR_UTF8(name='discoveryPLMNID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DirectDiscoveryData_proseAppIdName = STR_UTF8(name='proseAppIdName', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DirectDiscoveryData_proseAppCode = OCT_STR(name='proseAppCode', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DirectDiscoveryData_proseAppCode._const_sz = ASN1Set(rv=[23], rr=[], ev=None, er=[])
    _DirectDiscoveryData_proseAppMask = CHOICE(name='proseAppMask', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ProSeHI2Operations', 'ProSeAppMask')), opt=True)
    _DirectDiscoveryData_timer = INT(name='timer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    DirectDiscoveryData._cont = ASN1Dict([
        ('discoveryPLMNID', _DirectDiscoveryData_discoveryPLMNID),
        ('proseAppIdName', _DirectDiscoveryData_proseAppIdName),
        ('proseAppCode', _DirectDiscoveryData_proseAppCode),
        ('proseAppMask', _DirectDiscoveryData_proseAppMask),
        ('timer', _DirectDiscoveryData_timer),
        ])
    DirectDiscoveryData._ext = []
    
    #-----< ProSeAppMask >-----#
    ProSeAppMask = CHOICE(name='ProSeAppMask', mode=MODE_TYPE)
    _ProSeAppMask_proseMask = OCT_STR(name='proseMask', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProSeAppMask_proseMask._const_sz = ASN1Set(rv=[23], rr=[], ev=None, er=[])
    _ProSeAppMask_proseMaskSequence = SEQ_OF(name='proseMaskSequence', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ProSeHI2Operations', 'ProSeMaskSequence')))
    ProSeAppMask._cont = ASN1Dict([
        ('proseMask', _ProSeAppMask_proseMask),
        ('proseMaskSequence', _ProSeAppMask_proseMaskSequence),
        ])
    ProSeAppMask._ext = None
    
    #-----< ProSeMaskSequence >-----#
    ProSeMaskSequence = SEQ_OF(name='ProSeMaskSequence', mode=MODE_TYPE)
    _ProSeMaskSequence__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _ProSeMaskSequence__item_._const_sz = ASN1Set(rv=[23], rr=[], ev=None, er=[])
    ProSeMaskSequence._cont = _ProSeMaskSequence__item_
    
    _all_ = [
        lawfulInterceptDomainId,
        threeGPPSUBDomainId,
        hi2ProSeDomainId,
        _ProSeIRIsContent_proseIRIContent,
        _ProSeIRIsContent_proseIRISequence,
        ProSeIRIsContent,
        _ProSeIRISequence__item_,
        ProSeIRISequence,
        _ProSeIRIContent_iRI_Report_record,
        ProSeIRIContent,
        _IRI_Parameters_hi2ProSeDomainId,
        _IRI_Parameters_lawfulInterceptionIdentifier,
        _IRI_Parameters_timeStamp,
        _IRI_Parameters_networkIdentifier,
        _IRI_Parameters_proseEventData,
        _IRI_Parameters_national_Parameters,
        _IRI_Parameters_national_HI2_ASN1parameters,
        IRI_Parameters,
        _ProSeEventData_proseDirectDiscovery,
        ProSeEventData,
        _ProSeDirectDiscovery_proseDirectDiscoveryEvent,
        _ProSeDirectDiscovery_targetImsi,
        _ProSeDirectDiscovery_targetRole,
        _ProSeDirectDiscovery_directDiscoveryData,
        _ProSeDirectDiscovery_metadata,
        _ProSeDirectDiscovery_otherUeImsi,
        ProSeDirectDiscovery,
        ProSeDirectDiscoveryEvent,
        TargetRole,
        _DirectDiscoveryData_discoveryPLMNID,
        _DirectDiscoveryData_proseAppIdName,
        _DirectDiscoveryData_proseAppCode,
        _DirectDiscoveryData_proseAppMask,
        _DirectDiscoveryData_timer,
        DirectDiscoveryData,
        _ProSeAppMask_proseMask,
        _ProSeAppMask_proseMaskSequence,
        ProSeAppMask,
        _ProSeMaskSequence__item_,
        ProSeMaskSequence,
    ]

class Remote_Operations_Information_Objects:

    _name_  = 'Remote-Operations-Information-Objects'
    _oid_   = [2, 4, 5, 0]
    
    _obj_ = [
        'OPERATION',
        'ERROR',
        'OPERATION-PACKAGE',
        'CONNECTION-PACKAGE',
        'CONTRACT',
        'ROS-OBJECT-CLASS',
        'Code',
        'Priority',
        'refuse',
        'emptyBind',
        'emptyUnbind',
        ]
    _type_ = [
        'OPERATION',
        'ERROR',
        'OPERATION-PACKAGE',
        'CONNECTION-PACKAGE',
        'CONTRACT',
        'ROS-OBJECT-CLASS',
        'Code',
        'Priority',
        ]
    _set_ = [
        ]
    _val_ = [
        'refuse',
        'emptyBind',
        'emptyUnbind',
        ]
    _class_ = [
        'OPERATION',
        'ERROR',
        'OPERATION-PACKAGE',
        'CONNECTION-PACKAGE',
        'CONTRACT',
        'ROS-OBJECT-CLASS',
        'refuse',
        'emptyBind',
        'emptyUnbind',
        ]
    _param_ = [
        ]
    
    #-----< OPERATION >-----#
    OPERATION = CLASS(name='OPERATION', mode=MODE_TYPE)
    _OPERATION_ArgumentType = OPEN(name='ArgumentType', mode=MODE_TYPE, opt=True)
    _OPERATION_argumentTypeOptional = BOOL(name='argumentTypeOptional', mode=MODE_VALUE, opt=True)
    _OPERATION_returnResult = BOOL(name='returnResult', mode=MODE_VALUE, default=True)
    _OPERATION_ResultType = OPEN(name='ResultType', mode=MODE_TYPE, opt=True)
    _OPERATION_resultTypeOptional = BOOL(name='resultTypeOptional', mode=MODE_VALUE, opt=True)
    _OPERATION_Errors = CLASS(name='Errors', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')), opt=True)
    _OPERATION_Linked = CLASS(name='Linked', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')), opt=True)
    _OPERATION_synchronous = BOOL(name='synchronous', mode=MODE_VALUE, default=False)
    _OPERATION_alwaysReturns = BOOL(name='alwaysReturns', mode=MODE_VALUE, default=True)
    _OPERATION_InvokePriority = INT(name='InvokePriority', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'Priority')), opt=True)
    _OPERATION_ResultPriority = INT(name='ResultPriority', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'Priority')), opt=True)
    _OPERATION_operationCode = CHOICE(name='operationCode', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'Code')), opt=True, uniq=True)
    OPERATION._cont = ASN1Dict([
        ('ArgumentType', _OPERATION_ArgumentType),
        ('argumentTypeOptional', _OPERATION_argumentTypeOptional),
        ('returnResult', _OPERATION_returnResult),
        ('ResultType', _OPERATION_ResultType),
        ('resultTypeOptional', _OPERATION_resultTypeOptional),
        ('Errors', _OPERATION_Errors),
        ('Linked', _OPERATION_Linked),
        ('synchronous', _OPERATION_synchronous),
        ('alwaysReturns', _OPERATION_alwaysReturns),
        ('InvokePriority', _OPERATION_InvokePriority),
        ('ResultPriority', _OPERATION_ResultPriority),
        ('operationCode', _OPERATION_operationCode),
        ])
    
    #-----< ERROR >-----#
    ERROR = CLASS(name='ERROR', mode=MODE_TYPE)
    _ERROR_ParameterType = OPEN(name='ParameterType', mode=MODE_TYPE, opt=True)
    _ERROR_parameterTypeOptional = BOOL(name='parameterTypeOptional', mode=MODE_VALUE, opt=True)
    _ERROR_ErrorPriority = INT(name='ErrorPriority', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'Priority')), opt=True)
    _ERROR_errorCode = CHOICE(name='errorCode', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'Code')), opt=True, uniq=True)
    ERROR._cont = ASN1Dict([
        ('ParameterType', _ERROR_ParameterType),
        ('parameterTypeOptional', _ERROR_parameterTypeOptional),
        ('ErrorPriority', _ERROR_ErrorPriority),
        ('errorCode', _ERROR_errorCode),
        ])
    
    #-----< OPERATION-PACKAGE >-----#
    OPERATION_PACKAGE = CLASS(name='OPERATION-PACKAGE', mode=MODE_TYPE)
    _OPERATION_PACKAGE_Both = CLASS(name='Both', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')), opt=True)
    _OPERATION_PACKAGE_Consumer = CLASS(name='Consumer', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')), opt=True)
    _OPERATION_PACKAGE_Supplier = CLASS(name='Supplier', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')), opt=True)
    _OPERATION_PACKAGE_id = OID(name='id', mode=MODE_VALUE, opt=True, uniq=True)
    OPERATION_PACKAGE._cont = ASN1Dict([
        ('Both', _OPERATION_PACKAGE_Both),
        ('Consumer', _OPERATION_PACKAGE_Consumer),
        ('Supplier', _OPERATION_PACKAGE_Supplier),
        ('id', _OPERATION_PACKAGE_id),
        ])
    
    #-----< CONNECTION-PACKAGE >-----#
    CONNECTION_PACKAGE = CLASS(name='CONNECTION-PACKAGE', mode=MODE_TYPE)
    _CONNECTION_PACKAGE_bind = CLASS(name='bind', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')), default=dict([('Errors', ASN1Set(rv=[dict([('errorCode', ('local', -1))])], rr=[], ev=None, er=[])), ('synchronous', True)]))
    _CONNECTION_PACKAGE_unbind = CLASS(name='unbind', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')), default=dict([('synchronous', True)]))
    _CONNECTION_PACKAGE_responderCanUnbind = BOOL(name='responderCanUnbind', mode=MODE_VALUE, default=False)
    _CONNECTION_PACKAGE_unbindCanFail = BOOL(name='unbindCanFail', mode=MODE_VALUE, default=False)
    _CONNECTION_PACKAGE_id = OID(name='id', mode=MODE_VALUE, opt=True, uniq=True)
    CONNECTION_PACKAGE._cont = ASN1Dict([
        ('bind', _CONNECTION_PACKAGE_bind),
        ('unbind', _CONNECTION_PACKAGE_unbind),
        ('responderCanUnbind', _CONNECTION_PACKAGE_responderCanUnbind),
        ('unbindCanFail', _CONNECTION_PACKAGE_unbindCanFail),
        ('id', _CONNECTION_PACKAGE_id),
        ])
    
    #-----< CONTRACT >-----#
    CONTRACT = CLASS(name='CONTRACT', mode=MODE_TYPE)
    _CONTRACT_connection = CLASS(name='connection', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'CONNECTION-PACKAGE')), opt=True)
    _CONTRACT_OperationsOf = CLASS(name='OperationsOf', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION-PACKAGE')), opt=True)
    _CONTRACT_InitiatorConsumerOf = CLASS(name='InitiatorConsumerOf', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION-PACKAGE')), opt=True)
    _CONTRACT_InitiatorSupplierOf = CLASS(name='InitiatorSupplierOf', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION-PACKAGE')), opt=True)
    _CONTRACT_id = OID(name='id', mode=MODE_VALUE, opt=True, uniq=True)
    CONTRACT._cont = ASN1Dict([
        ('connection', _CONTRACT_connection),
        ('OperationsOf', _CONTRACT_OperationsOf),
        ('InitiatorConsumerOf', _CONTRACT_InitiatorConsumerOf),
        ('InitiatorSupplierOf', _CONTRACT_InitiatorSupplierOf),
        ('id', _CONTRACT_id),
        ])
    
    #-----< ROS-OBJECT-CLASS >-----#
    ROS_OBJECT_CLASS = CLASS(name='ROS-OBJECT-CLASS', mode=MODE_TYPE)
    _ROS_OBJECT_CLASS_Is = CLASS(name='Is', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ROS-OBJECT-CLASS')), opt=True)
    _ROS_OBJECT_CLASS_Initiates = CLASS(name='Initiates', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'CONTRACT')), opt=True)
    _ROS_OBJECT_CLASS_Responds = CLASS(name='Responds', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'CONTRACT')), opt=True)
    _ROS_OBJECT_CLASS_InitiatesAndResponds = CLASS(name='InitiatesAndResponds', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'CONTRACT')), opt=True)
    _ROS_OBJECT_CLASS_id = OID(name='id', mode=MODE_VALUE, uniq=True)
    ROS_OBJECT_CLASS._cont = ASN1Dict([
        ('Is', _ROS_OBJECT_CLASS_Is),
        ('Initiates', _ROS_OBJECT_CLASS_Initiates),
        ('Responds', _ROS_OBJECT_CLASS_Responds),
        ('InitiatesAndResponds', _ROS_OBJECT_CLASS_InitiatesAndResponds),
        ('id', _ROS_OBJECT_CLASS_id),
        ])
    
    #-----< Code >-----#
    Code = CHOICE(name='Code', mode=MODE_TYPE)
    _Code_local = INT(name='local', mode=MODE_TYPE)
    _Code_global_ = OID(name='global', mode=MODE_TYPE)
    Code._cont = ASN1Dict([
        ('local', _Code_local),
        ('global', _Code_global_),
        ])
    Code._ext = None
    
    #-----< Priority >-----#
    Priority = INT(name='Priority', mode=MODE_TYPE)
    Priority._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=None)], ev=None, er=[])
    
    #-----< refuse >-----#
    refuse = CLASS(name='refuse', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    refuse._val = dict([('errorCode', ('local', -1))])
    
    #-----< emptyBind >-----#
    emptyBind = CLASS(name='emptyBind', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    emptyBind._val = dict([('Errors', ASN1Set(rv=[dict([('errorCode', ('local', -1))])], rr=[], ev=None, er=[])), ('synchronous', True)])
    
    #-----< emptyUnbind >-----#
    emptyUnbind = CLASS(name='emptyUnbind', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    emptyUnbind._val = dict([('synchronous', True)])
    
    _all_ = [
        _OPERATION_ArgumentType,
        _OPERATION_argumentTypeOptional,
        _OPERATION_returnResult,
        _OPERATION_ResultType,
        _OPERATION_resultTypeOptional,
        _OPERATION_Errors,
        _OPERATION_Linked,
        _OPERATION_synchronous,
        _OPERATION_alwaysReturns,
        _OPERATION_InvokePriority,
        _OPERATION_ResultPriority,
        _OPERATION_operationCode,
        OPERATION,
        _ERROR_ParameterType,
        _ERROR_parameterTypeOptional,
        _ERROR_ErrorPriority,
        _ERROR_errorCode,
        ERROR,
        _OPERATION_PACKAGE_Both,
        _OPERATION_PACKAGE_Consumer,
        _OPERATION_PACKAGE_Supplier,
        _OPERATION_PACKAGE_id,
        OPERATION_PACKAGE,
        _CONNECTION_PACKAGE_bind,
        _CONNECTION_PACKAGE_unbind,
        _CONNECTION_PACKAGE_responderCanUnbind,
        _CONNECTION_PACKAGE_unbindCanFail,
        _CONNECTION_PACKAGE_id,
        CONNECTION_PACKAGE,
        _CONTRACT_connection,
        _CONTRACT_OperationsOf,
        _CONTRACT_InitiatorConsumerOf,
        _CONTRACT_InitiatorSupplierOf,
        _CONTRACT_id,
        CONTRACT,
        _ROS_OBJECT_CLASS_Is,
        _ROS_OBJECT_CLASS_Initiates,
        _ROS_OBJECT_CLASS_Responds,
        _ROS_OBJECT_CLASS_InitiatesAndResponds,
        _ROS_OBJECT_CLASS_id,
        ROS_OBJECT_CLASS,
        _Code_local,
        _Code_global_,
        Code,
        Priority,
        refuse,
        emptyBind,
        emptyUnbind,
    ]

class PCESP:

    _name_  = 'PCESP'
    _oid_   = [1, 3, 6, 1, 4, 1, 4491, 2, 2, 5, 1, 4]
    
    _obj_ = [
        'ProtocolVersion',
        'CdcPdu',
        'Message',
        'Answer',
        'CCChange',
        'CCClose',
        'CCOpen',
        'ConferencePartyChange',
        'DialedDigitExtraction',
        'MediaReport',
        'NetworkSignal',
        'Origination',
        'Redirection',
        'Release',
        'ServiceInstance',
        'SubjectSignal',
        'TerminationAttempt',
        'AccessingElementId',
        'AlertingSignal',
        'AudibleSignal',
        'CallId',
        'CaseId',
        'CCCId',
        'EventTime',
        'FlowDirection',
        'PartyId',
        'RedirectedFromInfo',
        'ResourceState',
        'SDP',
        'TerminalDisplayInfo',
        'TransitCarrierId',
        ]
    _type_ = [
        'ProtocolVersion',
        'CdcPdu',
        'Message',
        'Answer',
        'CCChange',
        'CCClose',
        'CCOpen',
        'ConferencePartyChange',
        'DialedDigitExtraction',
        'MediaReport',
        'NetworkSignal',
        'Origination',
        'Redirection',
        'Release',
        'ServiceInstance',
        'SubjectSignal',
        'TerminationAttempt',
        'AccessingElementId',
        'AlertingSignal',
        'AudibleSignal',
        'CallId',
        'CaseId',
        'CCCId',
        'EventTime',
        'FlowDirection',
        'PartyId',
        'RedirectedFromInfo',
        'ResourceState',
        'SDP',
        'TerminalDisplayInfo',
        'TransitCarrierId',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< ProtocolVersion >-----#
    ProtocolVersion = ENUM(name='ProtocolVersion', mode=MODE_TYPE)
    ProtocolVersion._cont = ASN1Dict([('v3', 3), ('v4', 4)])
    ProtocolVersion._ext = []
    
    #-----< CdcPdu >-----#
    CdcPdu = SEQ(name='CdcPdu', mode=MODE_TYPE)
    _CdcPdu_protocolVersion = ENUM(name='protocolVersion', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'ProtocolVersion')))
    _CdcPdu_message = CHOICE(name='message', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'Message')))
    CdcPdu._cont = ASN1Dict([
        ('protocolVersion', _CdcPdu_protocolVersion),
        ('message', _CdcPdu_message),
        ])
    CdcPdu._ext = []
    
    #-----< Message >-----#
    Message = CHOICE(name='Message', mode=MODE_TYPE)
    _Message_answer = SEQ(name='answer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'Answer')))
    _Message_ccclose = SEQ(name='ccclose', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CCClose')))
    _Message_ccopen = SEQ(name='ccopen', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CCOpen')))
    _Message_reserved0 = NULL(name='reserved0', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Message_origination = SEQ(name='origination', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'Origination')))
    _Message_reserved1 = NULL(name='reserved1', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Message_redirection = SEQ(name='redirection', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'Redirection')))
    _Message_release = SEQ(name='release', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'Release')))
    _Message_reserved2 = NULL(name='reserved2', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Message_terminationattempt = SEQ(name='terminationattempt', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'TerminationAttempt')))
    _Message_reserved = NULL(name='reserved', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Message_ccchange = SEQ(name='ccchange', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CCChange')))
    _Message_reserved3 = NULL(name='reserved3', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Message_reserved4 = NULL(name='reserved4', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Message_dialeddigitextraction = SEQ(name='dialeddigitextraction', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'DialedDigitExtraction')))
    _Message_networksignal = SEQ(name='networksignal', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'NetworkSignal')))
    _Message_subjectsignal = SEQ(name='subjectsignal', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'SubjectSignal')))
    _Message_mediareport = SEQ(name='mediareport', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'MediaReport')))
    _Message_serviceinstance = SEQ(name='serviceinstance', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'ServiceInstance')))
    _Message_confpartychange = SEQ(name='confpartychange', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'ConferencePartyChange')))
    Message._cont = ASN1Dict([
        ('answer', _Message_answer),
        ('ccclose', _Message_ccclose),
        ('ccopen', _Message_ccopen),
        ('reserved0', _Message_reserved0),
        ('origination', _Message_origination),
        ('reserved1', _Message_reserved1),
        ('redirection', _Message_redirection),
        ('release', _Message_release),
        ('reserved2', _Message_reserved2),
        ('terminationattempt', _Message_terminationattempt),
        ('reserved', _Message_reserved),
        ('ccchange', _Message_ccchange),
        ('reserved3', _Message_reserved3),
        ('reserved4', _Message_reserved4),
        ('dialeddigitextraction', _Message_dialeddigitextraction),
        ('networksignal', _Message_networksignal),
        ('subjectsignal', _Message_subjectsignal),
        ('mediareport', _Message_mediareport),
        ('serviceinstance', _Message_serviceinstance),
        ('confpartychange', _Message_confpartychange),
        ])
    Message._ext = []
    
    #-----< Answer >-----#
    Answer = SEQ(name='Answer', mode=MODE_TYPE)
    _Answer_caseId = STR_VIS(name='caseId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CaseId')))
    _Answer_accessingElementId = STR_VIS(name='accessingElementId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'AccessingElementId')))
    _Answer_eventTime = TIME_GEN(name='eventTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'EventTime')))
    _Answer_callId = SEQ(name='callId', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CallId')))
    _Answer_answering = SEQ(name='answering', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'PartyId')), opt=True)
    Answer._cont = ASN1Dict([
        ('caseId', _Answer_caseId),
        ('accessingElementId', _Answer_accessingElementId),
        ('eventTime', _Answer_eventTime),
        ('callId', _Answer_callId),
        ('answering', _Answer_answering),
        ])
    Answer._ext = []
    
    #-----< CCChange >-----#
    CCChange = SEQ(name='CCChange', mode=MODE_TYPE)
    _CCChange_caseId = STR_VIS(name='caseId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CaseId')))
    _CCChange_accessingElementId = STR_VIS(name='accessingElementId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'AccessingElementId')))
    _CCChange_eventTime = TIME_GEN(name='eventTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'EventTime')))
    _CCChange_callId = SEQ(name='callId', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CallId')))
    _CCChange_cCCId = CHOICE(name='cCCId', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('PCESP', 'CCCId')))
    _CCChange_subject = STR_UTF8(name='subject', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'SDP')), opt=True)
    _CCChange_associate = STR_UTF8(name='associate', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'SDP')), opt=True)
    _CCChange_flowDirection = ENUM(name='flowDirection', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'FlowDirection')))
    _CCChange_resourceState = ENUM(name='resourceState', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'ResourceState')), opt=True)
    CCChange._cont = ASN1Dict([
        ('caseId', _CCChange_caseId),
        ('accessingElementId', _CCChange_accessingElementId),
        ('eventTime', _CCChange_eventTime),
        ('callId', _CCChange_callId),
        ('cCCId', _CCChange_cCCId),
        ('subject', _CCChange_subject),
        ('associate', _CCChange_associate),
        ('flowDirection', _CCChange_flowDirection),
        ('resourceState', _CCChange_resourceState),
        ])
    CCChange._ext = []
    
    #-----< CCClose >-----#
    CCClose = SEQ(name='CCClose', mode=MODE_TYPE)
    _CCClose_caseId = STR_VIS(name='caseId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CaseId')))
    _CCClose_accessingElementId = STR_VIS(name='accessingElementId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'AccessingElementId')))
    _CCClose_eventTime = TIME_GEN(name='eventTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'EventTime')))
    _CCClose_cCCId = CHOICE(name='cCCId', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('PCESP', 'CCCId')))
    _CCClose_flowDirection = ENUM(name='flowDirection', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'FlowDirection')))
    CCClose._cont = ASN1Dict([
        ('caseId', _CCClose_caseId),
        ('accessingElementId', _CCClose_accessingElementId),
        ('eventTime', _CCClose_eventTime),
        ('cCCId', _CCClose_cCCId),
        ('flowDirection', _CCClose_flowDirection),
        ])
    CCClose._ext = []
    
    #-----< CCOpen >-----#
    CCOpen = SEQ(name='CCOpen', mode=MODE_TYPE)
    _CCOpen_caseId = STR_VIS(name='caseId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CaseId')))
    _CCOpen_accessingElementId = STR_VIS(name='accessingElementId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'AccessingElementId')))
    _CCOpen_eventTime = TIME_GEN(name='eventTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'EventTime')))
    _CCOpen_ccOpenOption = CHOICE(name='ccOpenOption', mode=MODE_TYPE)
    __CCOpen_ccOpenOption_ccOpenTime = SEQ_OF(name='ccOpenTime', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CCOpen_ccOpenOption_ccOpenTime__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PCESP', 'CallId')))
    __CCOpen_ccOpenOption_ccOpenTime._cont = ___CCOpen_ccOpenOption_ccOpenTime__item_
    __CCOpen_ccOpenOption_reserved0 = NULL(name='reserved0', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CCOpen_ccOpenOption._cont = ASN1Dict([
        ('ccOpenTime', __CCOpen_ccOpenOption_ccOpenTime),
        ('reserved0', __CCOpen_ccOpenOption_reserved0),
        ])
    _CCOpen_ccOpenOption._ext = []
    _CCOpen_cCCId = CHOICE(name='cCCId', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('PCESP', 'CCCId')))
    _CCOpen_subject = STR_UTF8(name='subject', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'SDP')), opt=True)
    _CCOpen_associate = STR_UTF8(name='associate', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'SDP')), opt=True)
    _CCOpen_flowDirection = ENUM(name='flowDirection', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'FlowDirection')))
    CCOpen._cont = ASN1Dict([
        ('caseId', _CCOpen_caseId),
        ('accessingElementId', _CCOpen_accessingElementId),
        ('eventTime', _CCOpen_eventTime),
        ('ccOpenOption', _CCOpen_ccOpenOption),
        ('cCCId', _CCOpen_cCCId),
        ('subject', _CCOpen_subject),
        ('associate', _CCOpen_associate),
        ('flowDirection', _CCOpen_flowDirection),
        ])
    CCOpen._ext = []
    
    #-----< ConferencePartyChange >-----#
    ConferencePartyChange = SEQ(name='ConferencePartyChange', mode=MODE_TYPE)
    _ConferencePartyChange_caseId = STR_VIS(name='caseId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CaseId')))
    _ConferencePartyChange_accessingElementId = STR_VIS(name='accessingElementId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'AccessingElementId')))
    _ConferencePartyChange_eventTime = TIME_GEN(name='eventTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'EventTime')))
    _ConferencePartyChange_callId = SEQ(name='callId', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CallId')))
    _ConferencePartyChange_communicating = SEQ_OF(name='communicating', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ConferencePartyChange_communicating__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    ___ConferencePartyChange_communicating__item__partyId = SEQ_OF(name='partyId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____ConferencePartyChange_communicating__item__partyId__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PCESP', 'PartyId')))
    ___ConferencePartyChange_communicating__item__partyId._cont = ____ConferencePartyChange_communicating__item__partyId__item_
    ___ConferencePartyChange_communicating__item__cCCId = CHOICE(name='cCCId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('PCESP', 'CCCId')), opt=True)
    __ConferencePartyChange_communicating__item_._cont = ASN1Dict([
        ('partyId', ___ConferencePartyChange_communicating__item__partyId),
        ('cCCId', ___ConferencePartyChange_communicating__item__cCCId),
        ])
    __ConferencePartyChange_communicating__item_._ext = []
    _ConferencePartyChange_communicating._cont = __ConferencePartyChange_communicating__item_
    _ConferencePartyChange_removed = SEQ_OF(name='removed', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ConferencePartyChange_removed__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    ___ConferencePartyChange_removed__item__partyId = SEQ_OF(name='partyId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____ConferencePartyChange_removed__item__partyId__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PCESP', 'PartyId')))
    ___ConferencePartyChange_removed__item__partyId._cont = ____ConferencePartyChange_removed__item__partyId__item_
    ___ConferencePartyChange_removed__item__cCCId = CHOICE(name='cCCId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('PCESP', 'CCCId')), opt=True)
    __ConferencePartyChange_removed__item_._cont = ASN1Dict([
        ('partyId', ___ConferencePartyChange_removed__item__partyId),
        ('cCCId', ___ConferencePartyChange_removed__item__cCCId),
        ])
    __ConferencePartyChange_removed__item_._ext = []
    _ConferencePartyChange_removed._cont = __ConferencePartyChange_removed__item_
    _ConferencePartyChange_joined = SEQ_OF(name='joined', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ConferencePartyChange_joined__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    ___ConferencePartyChange_joined__item__partyId = SEQ_OF(name='partyId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____ConferencePartyChange_joined__item__partyId__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PCESP', 'PartyId')))
    ___ConferencePartyChange_joined__item__partyId._cont = ____ConferencePartyChange_joined__item__partyId__item_
    ___ConferencePartyChange_joined__item__cCCId = CHOICE(name='cCCId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('PCESP', 'CCCId')), opt=True)
    __ConferencePartyChange_joined__item_._cont = ASN1Dict([
        ('partyId', ___ConferencePartyChange_joined__item__partyId),
        ('cCCId', ___ConferencePartyChange_joined__item__cCCId),
        ])
    __ConferencePartyChange_joined__item_._ext = []
    _ConferencePartyChange_joined._cont = __ConferencePartyChange_joined__item_
    ConferencePartyChange._cont = ASN1Dict([
        ('caseId', _ConferencePartyChange_caseId),
        ('accessingElementId', _ConferencePartyChange_accessingElementId),
        ('eventTime', _ConferencePartyChange_eventTime),
        ('callId', _ConferencePartyChange_callId),
        ('communicating', _ConferencePartyChange_communicating),
        ('removed', _ConferencePartyChange_removed),
        ('joined', _ConferencePartyChange_joined),
        ])
    ConferencePartyChange._ext = []
    
    #-----< DialedDigitExtraction >-----#
    DialedDigitExtraction = SEQ(name='DialedDigitExtraction', mode=MODE_TYPE)
    _DialedDigitExtraction_caseId = STR_VIS(name='caseId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CaseId')))
    _DialedDigitExtraction_accessingElementId = STR_VIS(name='accessingElementId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'AccessingElementId')))
    _DialedDigitExtraction_eventTime = TIME_GEN(name='eventTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'EventTime')))
    _DialedDigitExtraction_callId = SEQ(name='callId', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CallId')))
    _DialedDigitExtraction_digits = STR_VIS(name='digits', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DialedDigitExtraction_digits._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=[], er=[])
    DialedDigitExtraction._cont = ASN1Dict([
        ('caseId', _DialedDigitExtraction_caseId),
        ('accessingElementId', _DialedDigitExtraction_accessingElementId),
        ('eventTime', _DialedDigitExtraction_eventTime),
        ('callId', _DialedDigitExtraction_callId),
        ('digits', _DialedDigitExtraction_digits),
        ])
    DialedDigitExtraction._ext = []
    
    #-----< MediaReport >-----#
    MediaReport = SEQ(name='MediaReport', mode=MODE_TYPE)
    _MediaReport_caseId = STR_VIS(name='caseId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CaseId')))
    _MediaReport_accessingElementId = STR_VIS(name='accessingElementId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'AccessingElementId')))
    _MediaReport_eventTime = TIME_GEN(name='eventTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'EventTime')))
    _MediaReport_callId = SEQ(name='callId', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CallId')))
    _MediaReport_subject = STR_UTF8(name='subject', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'SDP')), opt=True)
    _MediaReport_associate = STR_UTF8(name='associate', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'SDP')), opt=True)
    MediaReport._cont = ASN1Dict([
        ('caseId', _MediaReport_caseId),
        ('accessingElementId', _MediaReport_accessingElementId),
        ('eventTime', _MediaReport_eventTime),
        ('callId', _MediaReport_callId),
        ('subject', _MediaReport_subject),
        ('associate', _MediaReport_associate),
        ])
    MediaReport._ext = []
    
    #-----< NetworkSignal >-----#
    NetworkSignal = SEQ(name='NetworkSignal', mode=MODE_TYPE)
    _NetworkSignal_caseId = STR_VIS(name='caseId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CaseId')))
    _NetworkSignal_accessingElementId = STR_VIS(name='accessingElementId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'AccessingElementId')))
    _NetworkSignal_eventTime = TIME_GEN(name='eventTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'EventTime')))
    _NetworkSignal_callId = SEQ(name='callId', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CallId')))
    _NetworkSignal_alertingSignal = ENUM(name='alertingSignal', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'AlertingSignal')), opt=True)
    _NetworkSignal_subjectAudibleSignal = ENUM(name='subjectAudibleSignal', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'AudibleSignal')), opt=True)
    _NetworkSignal_terminalDisplayInfo = SEQ(name='terminalDisplayInfo', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'TerminalDisplayInfo')), opt=True)
    _NetworkSignal_other = STR_VIS(name='other', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _NetworkSignal_other._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=[], er=[])
    _NetworkSignal_signaledToPartyId = SEQ(name='signaledToPartyId', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'PartyId')))
    NetworkSignal._cont = ASN1Dict([
        ('caseId', _NetworkSignal_caseId),
        ('accessingElementId', _NetworkSignal_accessingElementId),
        ('eventTime', _NetworkSignal_eventTime),
        ('callId', _NetworkSignal_callId),
        ('alertingSignal', _NetworkSignal_alertingSignal),
        ('subjectAudibleSignal', _NetworkSignal_subjectAudibleSignal),
        ('terminalDisplayInfo', _NetworkSignal_terminalDisplayInfo),
        ('other', _NetworkSignal_other),
        ('signaledToPartyId', _NetworkSignal_signaledToPartyId),
        ])
    NetworkSignal._ext = []
    
    #-----< Origination >-----#
    Origination = SEQ(name='Origination', mode=MODE_TYPE)
    _Origination_caseId = STR_VIS(name='caseId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CaseId')))
    _Origination_accessingElementId = STR_VIS(name='accessingElementId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'AccessingElementId')))
    _Origination_eventTime = TIME_GEN(name='eventTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'EventTime')))
    _Origination_callId = SEQ(name='callId', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CallId')))
    _Origination_calling = SEQ(name='calling', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'PartyId')))
    _Origination_called = SEQ(name='called', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'PartyId')), opt=True)
    _Origination_input = CHOICE(name='input', mode=MODE_TYPE)
    __Origination_input_userinput = STR_VIS(name='userinput', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Origination_input_userinput._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=[], er=[])
    __Origination_input_translationinput = STR_VIS(name='translationinput', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Origination_input_translationinput._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=[], er=[])
    _Origination_input._cont = ASN1Dict([
        ('userinput', __Origination_input_userinput),
        ('translationinput', __Origination_input_translationinput),
        ])
    _Origination_input._ext = []
    _Origination_reserved0 = NULL(name='reserved0', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Origination_transitCarrierId = STR_VIS(name='transitCarrierId', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'TransitCarrierId')), opt=True)
    Origination._cont = ASN1Dict([
        ('caseId', _Origination_caseId),
        ('accessingElementId', _Origination_accessingElementId),
        ('eventTime', _Origination_eventTime),
        ('callId', _Origination_callId),
        ('calling', _Origination_calling),
        ('called', _Origination_called),
        ('input', _Origination_input),
        ('reserved0', _Origination_reserved0),
        ('transitCarrierId', _Origination_transitCarrierId),
        ])
    Origination._ext = []
    
    #-----< Redirection >-----#
    Redirection = SEQ(name='Redirection', mode=MODE_TYPE)
    _Redirection_caseId = STR_VIS(name='caseId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CaseId')))
    _Redirection_accessingElementId = STR_VIS(name='accessingElementId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'AccessingElementId')))
    _Redirection_eventTime = TIME_GEN(name='eventTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'EventTime')))
    _Redirection_old = SEQ(name='old', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CallId')))
    _Redirection_redirectedto = SEQ(name='redirectedto', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'PartyId')))
    _Redirection_transitCarrierId = STR_VIS(name='transitCarrierId', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'TransitCarrierId')), opt=True)
    _Redirection_reserved0 = NULL(name='reserved0', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Redirection_reserved1 = NULL(name='reserved1', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Redirection_new = SEQ(name='new', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CallId')), opt=True)
    _Redirection_redirectedfrom = SEQ(name='redirectedfrom', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'PartyId')), opt=True)
    Redirection._cont = ASN1Dict([
        ('caseId', _Redirection_caseId),
        ('accessingElementId', _Redirection_accessingElementId),
        ('eventTime', _Redirection_eventTime),
        ('old', _Redirection_old),
        ('redirectedto', _Redirection_redirectedto),
        ('transitCarrierId', _Redirection_transitCarrierId),
        ('reserved0', _Redirection_reserved0),
        ('reserved1', _Redirection_reserved1),
        ('new', _Redirection_new),
        ('redirectedfrom', _Redirection_redirectedfrom),
        ])
    Redirection._ext = []
    
    #-----< Release >-----#
    Release = SEQ(name='Release', mode=MODE_TYPE)
    _Release_caseId = STR_VIS(name='caseId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CaseId')))
    _Release_accessingElementId = STR_VIS(name='accessingElementId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'AccessingElementId')))
    _Release_eventTime = TIME_GEN(name='eventTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'EventTime')))
    _Release_callId = SEQ(name='callId', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CallId')))
    Release._cont = ASN1Dict([
        ('caseId', _Release_caseId),
        ('accessingElementId', _Release_accessingElementId),
        ('eventTime', _Release_eventTime),
        ('callId', _Release_callId),
        ])
    Release._ext = []
    
    #-----< ServiceInstance >-----#
    ServiceInstance = SEQ(name='ServiceInstance', mode=MODE_TYPE)
    _ServiceInstance_caseId = STR_VIS(name='caseId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CaseId')))
    _ServiceInstance_accessingElementId = STR_VIS(name='accessingElementId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'AccessingElementId')))
    _ServiceInstance_eventTime = TIME_GEN(name='eventTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'EventTime')))
    _ServiceInstance_callId = SEQ(name='callId', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CallId')))
    _ServiceInstance_relatedCallId = SEQ(name='relatedCallId', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CallId')), opt=True)
    _ServiceInstance_serviceName = STR_VIS(name='serviceName', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ServiceInstance_serviceName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=[], er=[])
    _ServiceInstance_firstCallCalling = SEQ(name='firstCallCalling', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'PartyId')), opt=True)
    _ServiceInstance_secondCallCalling = SEQ(name='secondCallCalling', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'PartyId')), opt=True)
    _ServiceInstance_called = SEQ(name='called', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'PartyId')), opt=True)
    _ServiceInstance_calling = SEQ(name='calling', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'PartyId')), opt=True)
    ServiceInstance._cont = ASN1Dict([
        ('caseId', _ServiceInstance_caseId),
        ('accessingElementId', _ServiceInstance_accessingElementId),
        ('eventTime', _ServiceInstance_eventTime),
        ('callId', _ServiceInstance_callId),
        ('relatedCallId', _ServiceInstance_relatedCallId),
        ('serviceName', _ServiceInstance_serviceName),
        ('firstCallCalling', _ServiceInstance_firstCallCalling),
        ('secondCallCalling', _ServiceInstance_secondCallCalling),
        ('called', _ServiceInstance_called),
        ('calling', _ServiceInstance_calling),
        ])
    ServiceInstance._ext = []
    
    #-----< SubjectSignal >-----#
    SubjectSignal = SEQ(name='SubjectSignal', mode=MODE_TYPE)
    _SubjectSignal_caseId = STR_VIS(name='caseId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CaseId')))
    _SubjectSignal_accessingElementId = STR_VIS(name='accessingElementId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'AccessingElementId')))
    _SubjectSignal_eventTime = TIME_GEN(name='eventTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'EventTime')))
    _SubjectSignal_callId = SEQ(name='callId', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CallId')), opt=True)
    _SubjectSignal_signal = SEQ(name='signal', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SubjectSignal_signal_switchhookFlash = STR_VIS(name='switchhookFlash', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SubjectSignal_signal_switchhookFlash._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=[], er=[])
    __SubjectSignal_signal_dialedDigits = STR_VIS(name='dialedDigits', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SubjectSignal_signal_dialedDigits._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=[], er=[])
    __SubjectSignal_signal_featureKey = STR_VIS(name='featureKey', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SubjectSignal_signal_featureKey._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=[], er=[])
    __SubjectSignal_signal_otherSignalingInformation = STR_VIS(name='otherSignalingInformation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SubjectSignal_signal_otherSignalingInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=[], er=[])
    _SubjectSignal_signal._cont = ASN1Dict([
        ('switchhookFlash', __SubjectSignal_signal_switchhookFlash),
        ('dialedDigits', __SubjectSignal_signal_dialedDigits),
        ('featureKey', __SubjectSignal_signal_featureKey),
        ('otherSignalingInformation', __SubjectSignal_signal_otherSignalingInformation),
        ])
    _SubjectSignal_signal._ext = []
    _SubjectSignal_signaledFromPartyId = SEQ(name='signaledFromPartyId', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'PartyId')))
    SubjectSignal._cont = ASN1Dict([
        ('caseId', _SubjectSignal_caseId),
        ('accessingElementId', _SubjectSignal_accessingElementId),
        ('eventTime', _SubjectSignal_eventTime),
        ('callId', _SubjectSignal_callId),
        ('signal', _SubjectSignal_signal),
        ('signaledFromPartyId', _SubjectSignal_signaledFromPartyId),
        ])
    SubjectSignal._ext = []
    
    #-----< TerminationAttempt >-----#
    TerminationAttempt = SEQ(name='TerminationAttempt', mode=MODE_TYPE)
    _TerminationAttempt_caseId = STR_VIS(name='caseId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CaseId')))
    _TerminationAttempt_accessingElementId = STR_VIS(name='accessingElementId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'AccessingElementId')))
    _TerminationAttempt_eventTime = TIME_GEN(name='eventTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'EventTime')))
    _TerminationAttempt_callId = SEQ(name='callId', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CallId')))
    _TerminationAttempt_calling = SEQ(name='calling', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'PartyId')), opt=True)
    _TerminationAttempt_called = SEQ(name='called', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'PartyId')), opt=True)
    _TerminationAttempt_reserved0 = NULL(name='reserved0', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TerminationAttempt_redirectedFromInfo = SEQ(name='redirectedFromInfo', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'RedirectedFromInfo')), opt=True)
    TerminationAttempt._cont = ASN1Dict([
        ('caseId', _TerminationAttempt_caseId),
        ('accessingElementId', _TerminationAttempt_accessingElementId),
        ('eventTime', _TerminationAttempt_eventTime),
        ('callId', _TerminationAttempt_callId),
        ('calling', _TerminationAttempt_calling),
        ('called', _TerminationAttempt_called),
        ('reserved0', _TerminationAttempt_reserved0),
        ('redirectedFromInfo', _TerminationAttempt_redirectedFromInfo),
        ])
    TerminationAttempt._ext = []
    
    #-----< AccessingElementId >-----#
    AccessingElementId = STR_VIS(name='AccessingElementId', mode=MODE_TYPE)
    AccessingElementId._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=[], er=[])
    
    #-----< AlertingSignal >-----#
    AlertingSignal = ENUM(name='AlertingSignal', mode=MODE_TYPE)
    AlertingSignal._cont = ASN1Dict([('notUsed', 0), ('alertingPattern0', 1), ('alertingPattern1', 2), ('alertingPattern2', 3), ('alertingPattern3', 4), ('alertingPattern4', 5), ('callWaitingPattern1', 6), ('callWaitingPattern2', 7), ('callWaitingPattern3', 8), ('callWaitingPattern4', 9), ('bargeInTone', 10), ('alertingPattern5', 11), ('alertingPattern6', 12), ('alertingPattern7', 13), ('alertingPattern8', 14), ('alertingPattern9', 15)])
    AlertingSignal._ext = []
    
    #-----< AudibleSignal >-----#
    AudibleSignal = ENUM(name='AudibleSignal', mode=MODE_TYPE)
    AudibleSignal._cont = ASN1Dict([('notUsed', 0), ('dialTone', 1), ('recallDialTone', 2), ('ringbackTone', 3), ('reorderTone', 4), ('busyTone', 5), ('confirmationTone', 6), ('expensiveRouteTone', 7), ('messageWaitingTone', 8), ('receiverOffHookTone', 9), ('specialInfoTone', 10), ('denialTone', 11), ('interceptTone', 12), ('answerTone', 13), ('tonesOff', 14), ('pipTone', 15), ('abbreviatedIntercept', 16), ('abbreviatedCongestion', 17), ('warningTone', 18), ('dialToneBurst', 19), ('numberUnObtainableTone', 20), ('authenticationFailureTone', 21)])
    AudibleSignal._ext = []
    
    #-----< CallId >-----#
    CallId = SEQ(name='CallId', mode=MODE_TYPE)
    _CallId_sequencenumber = STR_VIS(name='sequencenumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CallId_sequencenumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=[], er=[])
    _CallId_systemidentity = STR_VIS(name='systemidentity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CallId_systemidentity._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=[], er=[])
    CallId._cont = ASN1Dict([
        ('sequencenumber', _CallId_sequencenumber),
        ('systemidentity', _CallId_systemidentity),
        ])
    CallId._ext = []
    
    #-----< CaseId >-----#
    CaseId = STR_VIS(name='CaseId', mode=MODE_TYPE)
    CaseId._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=[], er=[])
    
    #-----< CCCId >-----#
    CCCId = CHOICE(name='CCCId', mode=MODE_TYPE)
    _CCCId_combCCC = STR_VIS(name='combCCC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CCCId_combCCC._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=[], er=[])
    _CCCId_sepCCCpair = SEQ(name='sepCCCpair', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CCCId_sepCCCpair_sepXmitCCC = STR_VIS(name='sepXmitCCC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CCCId_sepCCCpair_sepXmitCCC._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=[], er=[])
    __CCCId_sepCCCpair_sepRecvCCC = STR_VIS(name='sepRecvCCC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CCCId_sepCCCpair_sepRecvCCC._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=[], er=[])
    _CCCId_sepCCCpair._cont = ASN1Dict([
        ('sepXmitCCC', __CCCId_sepCCCpair_sepXmitCCC),
        ('sepRecvCCC', __CCCId_sepCCCpair_sepRecvCCC),
        ])
    _CCCId_sepCCCpair._ext = []
    CCCId._cont = ASN1Dict([
        ('combCCC', _CCCId_combCCC),
        ('sepCCCpair', _CCCId_sepCCCpair),
        ])
    CCCId._ext = []
    
    #-----< EventTime >-----#
    EventTime = TIME_GEN(name='EventTime', mode=MODE_TYPE)
    
    #-----< FlowDirection >-----#
    FlowDirection = ENUM(name='FlowDirection', mode=MODE_TYPE)
    FlowDirection._cont = ASN1Dict([('downstream', 1), ('upstream', 2), ('downstream-and-upstream', 3)])
    FlowDirection._ext = []
    
    #-----< PartyId >-----#
    PartyId = SEQ(name='PartyId', mode=MODE_TYPE)
    _PartyId_reserved0 = NULL(name='reserved0', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyId_reserved1 = NULL(name='reserved1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyId_reserved2 = NULL(name='reserved2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyId_reserved3 = NULL(name='reserved3', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyId_reserved4 = NULL(name='reserved4', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyId_reserved5 = NULL(name='reserved5', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyId_dn = STR_VIS(name='dn', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyId_dn._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=[], er=[])
    _PartyId_userProvided = STR_VIS(name='userProvided', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyId_userProvided._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=[], er=[])
    _PartyId_reserved6 = NULL(name='reserved6', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyId_reserved7 = NULL(name='reserved7', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyId_ipAddress = STR_VIS(name='ipAddress', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyId_ipAddress._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=[], er=[])
    _PartyId_reserved8 = NULL(name='reserved8', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyId_trunkId = STR_VIS(name='trunkId', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyId_trunkId._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=[], er=[])
    _PartyId_reserved9 = NULL(name='reserved9', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyId_genericAddress = STR_VIS(name='genericAddress', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyId_genericAddress._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=[], er=[])
    _PartyId_genericDigits = STR_VIS(name='genericDigits', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyId_genericDigits._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=[], er=[])
    _PartyId_genericName = STR_VIS(name='genericName', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyId_genericName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=48)], ev=[], er=[])
    _PartyId_port = STR_VIS(name='port', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyId_port._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=[], er=[])
    _PartyId_context = STR_VIS(name='context', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyId_context._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=[], er=[])
    PartyId._cont = ASN1Dict([
        ('reserved0', _PartyId_reserved0),
        ('reserved1', _PartyId_reserved1),
        ('reserved2', _PartyId_reserved2),
        ('reserved3', _PartyId_reserved3),
        ('reserved4', _PartyId_reserved4),
        ('reserved5', _PartyId_reserved5),
        ('dn', _PartyId_dn),
        ('userProvided', _PartyId_userProvided),
        ('reserved6', _PartyId_reserved6),
        ('reserved7', _PartyId_reserved7),
        ('ipAddress', _PartyId_ipAddress),
        ('reserved8', _PartyId_reserved8),
        ('trunkId', _PartyId_trunkId),
        ('reserved9', _PartyId_reserved9),
        ('genericAddress', _PartyId_genericAddress),
        ('genericDigits', _PartyId_genericDigits),
        ('genericName', _PartyId_genericName),
        ('port', _PartyId_port),
        ('context', _PartyId_context),
        ])
    PartyId._ext = []
    
    #-----< RedirectedFromInfo >-----#
    RedirectedFromInfo = SEQ(name='RedirectedFromInfo', mode=MODE_TYPE)
    _RedirectedFromInfo_lastRedirecting = SEQ(name='lastRedirecting', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'PartyId')), opt=True)
    _RedirectedFromInfo_originalCalled = SEQ(name='originalCalled', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'PartyId')), opt=True)
    _RedirectedFromInfo_numRedirections = INT(name='numRedirections', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RedirectedFromInfo_numRedirections._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=100)], ev=[], er=[])
    RedirectedFromInfo._cont = ASN1Dict([
        ('lastRedirecting', _RedirectedFromInfo_lastRedirecting),
        ('originalCalled', _RedirectedFromInfo_originalCalled),
        ('numRedirections', _RedirectedFromInfo_numRedirections),
        ])
    RedirectedFromInfo._ext = []
    
    #-----< ResourceState >-----#
    ResourceState = ENUM(name='ResourceState', mode=MODE_TYPE)
    ResourceState._cont = ASN1Dict([('reserved', 1), ('committed', 2)])
    ResourceState._ext = []
    
    #-----< SDP >-----#
    SDP = STR_UTF8(name='SDP', mode=MODE_TYPE)
    
    #-----< TerminalDisplayInfo >-----#
    TerminalDisplayInfo = SEQ(name='TerminalDisplayInfo', mode=MODE_TYPE)
    _TerminalDisplayInfo_generalDisplay = STR_VIS(name='generalDisplay', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TerminalDisplayInfo_generalDisplay._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=80)], ev=[], er=[])
    _TerminalDisplayInfo_calledNumber = STR_VIS(name='calledNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TerminalDisplayInfo_calledNumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=40)], ev=[], er=[])
    _TerminalDisplayInfo_callingNumber = STR_VIS(name='callingNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TerminalDisplayInfo_callingNumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=40)], ev=[], er=[])
    _TerminalDisplayInfo_callingName = STR_VIS(name='callingName', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TerminalDisplayInfo_callingName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=40)], ev=[], er=[])
    _TerminalDisplayInfo_originalCalledNumber = STR_VIS(name='originalCalledNumber', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TerminalDisplayInfo_originalCalledNumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=40)], ev=[], er=[])
    _TerminalDisplayInfo_lastRedirectingNumber = STR_VIS(name='lastRedirectingNumber', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TerminalDisplayInfo_lastRedirectingNumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=40)], ev=[], er=[])
    _TerminalDisplayInfo_redirectingName = STR_VIS(name='redirectingName', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TerminalDisplayInfo_redirectingName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=40)], ev=[], er=[])
    _TerminalDisplayInfo_redirectingReason = STR_VIS(name='redirectingReason', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TerminalDisplayInfo_redirectingReason._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=40)], ev=[], er=[])
    _TerminalDisplayInfo_messageWaitingNotif = STR_VIS(name='messageWaitingNotif', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TerminalDisplayInfo_messageWaitingNotif._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=40)], ev=[], er=[])
    TerminalDisplayInfo._cont = ASN1Dict([
        ('generalDisplay', _TerminalDisplayInfo_generalDisplay),
        ('calledNumber', _TerminalDisplayInfo_calledNumber),
        ('callingNumber', _TerminalDisplayInfo_callingNumber),
        ('callingName', _TerminalDisplayInfo_callingName),
        ('originalCalledNumber', _TerminalDisplayInfo_originalCalledNumber),
        ('lastRedirectingNumber', _TerminalDisplayInfo_lastRedirectingNumber),
        ('redirectingName', _TerminalDisplayInfo_redirectingName),
        ('redirectingReason', _TerminalDisplayInfo_redirectingReason),
        ('messageWaitingNotif', _TerminalDisplayInfo_messageWaitingNotif),
        ])
    TerminalDisplayInfo._ext = []
    
    #-----< TransitCarrierId >-----#
    TransitCarrierId = STR_VIS(name='TransitCarrierId', mode=MODE_TYPE)
    TransitCarrierId._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=7)], ev=[], er=[])
    
    _all_ = [
        ProtocolVersion,
        _CdcPdu_protocolVersion,
        _CdcPdu_message,
        CdcPdu,
        _Message_answer,
        _Message_ccclose,
        _Message_ccopen,
        _Message_reserved0,
        _Message_origination,
        _Message_reserved1,
        _Message_redirection,
        _Message_release,
        _Message_reserved2,
        _Message_terminationattempt,
        _Message_reserved,
        _Message_ccchange,
        _Message_reserved3,
        _Message_reserved4,
        _Message_dialeddigitextraction,
        _Message_networksignal,
        _Message_subjectsignal,
        _Message_mediareport,
        _Message_serviceinstance,
        _Message_confpartychange,
        Message,
        _Answer_caseId,
        _Answer_accessingElementId,
        _Answer_eventTime,
        _Answer_callId,
        _Answer_answering,
        Answer,
        _CCChange_caseId,
        _CCChange_accessingElementId,
        _CCChange_eventTime,
        _CCChange_callId,
        _CCChange_cCCId,
        _CCChange_subject,
        _CCChange_associate,
        _CCChange_flowDirection,
        _CCChange_resourceState,
        CCChange,
        _CCClose_caseId,
        _CCClose_accessingElementId,
        _CCClose_eventTime,
        _CCClose_cCCId,
        _CCClose_flowDirection,
        CCClose,
        _CCOpen_caseId,
        _CCOpen_accessingElementId,
        _CCOpen_eventTime,
        ___CCOpen_ccOpenOption_ccOpenTime__item_,
        __CCOpen_ccOpenOption_ccOpenTime,
        __CCOpen_ccOpenOption_reserved0,
        _CCOpen_ccOpenOption,
        _CCOpen_cCCId,
        _CCOpen_subject,
        _CCOpen_associate,
        _CCOpen_flowDirection,
        CCOpen,
        _ConferencePartyChange_caseId,
        _ConferencePartyChange_accessingElementId,
        _ConferencePartyChange_eventTime,
        _ConferencePartyChange_callId,
        ____ConferencePartyChange_communicating__item__partyId__item_,
        ___ConferencePartyChange_communicating__item__partyId,
        ___ConferencePartyChange_communicating__item__cCCId,
        __ConferencePartyChange_communicating__item_,
        _ConferencePartyChange_communicating,
        ____ConferencePartyChange_removed__item__partyId__item_,
        ___ConferencePartyChange_removed__item__partyId,
        ___ConferencePartyChange_removed__item__cCCId,
        __ConferencePartyChange_removed__item_,
        _ConferencePartyChange_removed,
        ____ConferencePartyChange_joined__item__partyId__item_,
        ___ConferencePartyChange_joined__item__partyId,
        ___ConferencePartyChange_joined__item__cCCId,
        __ConferencePartyChange_joined__item_,
        _ConferencePartyChange_joined,
        ConferencePartyChange,
        _DialedDigitExtraction_caseId,
        _DialedDigitExtraction_accessingElementId,
        _DialedDigitExtraction_eventTime,
        _DialedDigitExtraction_callId,
        _DialedDigitExtraction_digits,
        DialedDigitExtraction,
        _MediaReport_caseId,
        _MediaReport_accessingElementId,
        _MediaReport_eventTime,
        _MediaReport_callId,
        _MediaReport_subject,
        _MediaReport_associate,
        MediaReport,
        _NetworkSignal_caseId,
        _NetworkSignal_accessingElementId,
        _NetworkSignal_eventTime,
        _NetworkSignal_callId,
        _NetworkSignal_alertingSignal,
        _NetworkSignal_subjectAudibleSignal,
        _NetworkSignal_terminalDisplayInfo,
        _NetworkSignal_other,
        _NetworkSignal_signaledToPartyId,
        NetworkSignal,
        _Origination_caseId,
        _Origination_accessingElementId,
        _Origination_eventTime,
        _Origination_callId,
        _Origination_calling,
        _Origination_called,
        __Origination_input_userinput,
        __Origination_input_translationinput,
        _Origination_input,
        _Origination_reserved0,
        _Origination_transitCarrierId,
        Origination,
        _Redirection_caseId,
        _Redirection_accessingElementId,
        _Redirection_eventTime,
        _Redirection_old,
        _Redirection_redirectedto,
        _Redirection_transitCarrierId,
        _Redirection_reserved0,
        _Redirection_reserved1,
        _Redirection_new,
        _Redirection_redirectedfrom,
        Redirection,
        _Release_caseId,
        _Release_accessingElementId,
        _Release_eventTime,
        _Release_callId,
        Release,
        _ServiceInstance_caseId,
        _ServiceInstance_accessingElementId,
        _ServiceInstance_eventTime,
        _ServiceInstance_callId,
        _ServiceInstance_relatedCallId,
        _ServiceInstance_serviceName,
        _ServiceInstance_firstCallCalling,
        _ServiceInstance_secondCallCalling,
        _ServiceInstance_called,
        _ServiceInstance_calling,
        ServiceInstance,
        _SubjectSignal_caseId,
        _SubjectSignal_accessingElementId,
        _SubjectSignal_eventTime,
        _SubjectSignal_callId,
        __SubjectSignal_signal_switchhookFlash,
        __SubjectSignal_signal_dialedDigits,
        __SubjectSignal_signal_featureKey,
        __SubjectSignal_signal_otherSignalingInformation,
        _SubjectSignal_signal,
        _SubjectSignal_signaledFromPartyId,
        SubjectSignal,
        _TerminationAttempt_caseId,
        _TerminationAttempt_accessingElementId,
        _TerminationAttempt_eventTime,
        _TerminationAttempt_callId,
        _TerminationAttempt_calling,
        _TerminationAttempt_called,
        _TerminationAttempt_reserved0,
        _TerminationAttempt_redirectedFromInfo,
        TerminationAttempt,
        AccessingElementId,
        AlertingSignal,
        AudibleSignal,
        _CallId_sequencenumber,
        _CallId_systemidentity,
        CallId,
        CaseId,
        _CCCId_combCCC,
        __CCCId_sepCCCpair_sepXmitCCC,
        __CCCId_sepCCCpair_sepRecvCCC,
        _CCCId_sepCCCpair,
        CCCId,
        EventTime,
        FlowDirection,
        _PartyId_reserved0,
        _PartyId_reserved1,
        _PartyId_reserved2,
        _PartyId_reserved3,
        _PartyId_reserved4,
        _PartyId_reserved5,
        _PartyId_dn,
        _PartyId_userProvided,
        _PartyId_reserved6,
        _PartyId_reserved7,
        _PartyId_ipAddress,
        _PartyId_reserved8,
        _PartyId_trunkId,
        _PartyId_reserved9,
        _PartyId_genericAddress,
        _PartyId_genericDigits,
        _PartyId_genericName,
        _PartyId_port,
        _PartyId_context,
        PartyId,
        _RedirectedFromInfo_lastRedirecting,
        _RedirectedFromInfo_originalCalled,
        _RedirectedFromInfo_numRedirections,
        RedirectedFromInfo,
        ResourceState,
        SDP,
        _TerminalDisplayInfo_generalDisplay,
        _TerminalDisplayInfo_calledNumber,
        _TerminalDisplayInfo_callingNumber,
        _TerminalDisplayInfo_callingName,
        _TerminalDisplayInfo_originalCalledNumber,
        _TerminalDisplayInfo_lastRedirectingNumber,
        _TerminalDisplayInfo_redirectingName,
        _TerminalDisplayInfo_redirectingReason,
        _TerminalDisplayInfo_messageWaitingNotif,
        TerminalDisplayInfo,
        TransitCarrierId,
    ]

class TS101909201:

    _name_  = 'TS101909201'
    _oid_   = [0, 4, 0, 1909, 20, 1, 0]
    
    _obj_ = [
        'TARGETACTIVITYMONITOR-1',
        'TTRAFFIC',
        'CTTRAFFIC',
        'DirectionType',
        'UserSignalType',
        'IRITransactionType',
        'LocationType',
        'LIIDType',
        ]
    _type_ = [
        'TARGETACTIVITYMONITOR-1',
        'TTRAFFIC',
        'CTTRAFFIC',
        'DirectionType',
        'UserSignalType',
        'IRITransactionType',
        'LocationType',
        'LIIDType',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< TARGETACTIVITYMONITOR-1 >-----#
    TARGETACTIVITYMONITOR_1 = SEQ(name='TARGETACTIVITYMONITOR-1', mode=MODE_TYPE)
    _TARGETACTIVITYMONITOR_1_version = INT(name='version', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=1)
    _TARGETACTIVITYMONITOR_1_lIInstanceid = INT(name='lIInstanceid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('TS101909201', 'LIIDType')))
    _TARGETACTIVITYMONITOR_1_timestamp = TIME_UTC(name='timestamp', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TARGETACTIVITYMONITOR_1_targetLocation = CHOICE(name='targetLocation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('TS101909201', 'LocationType')))
    _TARGETACTIVITYMONITOR_1_direction = ENUM(name='direction', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('TS101909201', 'DirectionType')))
    _TARGETACTIVITYMONITOR_1_iRITransaction = ENUM(name='iRITransaction', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('TS101909201', 'IRITransactionType')), default='iRIreport')
    _TARGETACTIVITYMONITOR_1_iRITransactionNumber = INT(name='iRITransactionNumber', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TARGETACTIVITYMONITOR_1_userSignal = CHOICE(name='userSignal', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('TS101909201', 'UserSignalType')))
    _TARGETACTIVITYMONITOR_1_cryptoCheckSum = BIT_STR(name='cryptoCheckSum', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    TARGETACTIVITYMONITOR_1._cont = ASN1Dict([
        ('version', _TARGETACTIVITYMONITOR_1_version),
        ('lIInstanceid', _TARGETACTIVITYMONITOR_1_lIInstanceid),
        ('timestamp', _TARGETACTIVITYMONITOR_1_timestamp),
        ('targetLocation', _TARGETACTIVITYMONITOR_1_targetLocation),
        ('direction', _TARGETACTIVITYMONITOR_1_direction),
        ('iRITransaction', _TARGETACTIVITYMONITOR_1_iRITransaction),
        ('iRITransactionNumber', _TARGETACTIVITYMONITOR_1_iRITransactionNumber),
        ('userSignal', _TARGETACTIVITYMONITOR_1_userSignal),
        ('cryptoCheckSum', _TARGETACTIVITYMONITOR_1_cryptoCheckSum),
        ])
    TARGETACTIVITYMONITOR_1._ext = None
    
    #-----< TTRAFFIC >-----#
    TTRAFFIC = SEQ(name='TTRAFFIC', mode=MODE_TYPE)
    _TTRAFFIC_version = INT(name='version', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=1)
    _TTRAFFIC_lIInstanceid = INT(name='lIInstanceid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('TS101909201', 'LIIDType')))
    _TTRAFFIC_iRITransactionNumber = INT(name='iRITransactionNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TTRAFFIC_trafficPacket = BIT_STR(name='trafficPacket', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TTRAFFIC_cryptoChecksum = BIT_STR(name='cryptoChecksum', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    TTRAFFIC._cont = ASN1Dict([
        ('version', _TTRAFFIC_version),
        ('lIInstanceid', _TTRAFFIC_lIInstanceid),
        ('iRITransactionNumber', _TTRAFFIC_iRITransactionNumber),
        ('trafficPacket', _TTRAFFIC_trafficPacket),
        ('cryptoChecksum', _TTRAFFIC_cryptoChecksum),
        ])
    TTRAFFIC._ext = None
    
    #-----< CTTRAFFIC >-----#
    CTTRAFFIC = SEQ(name='CTTRAFFIC', mode=MODE_TYPE)
    _CTTRAFFIC_version = INT(name='version', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=1)
    _CTTRAFFIC_lIInstanceid = INT(name='lIInstanceid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('TS101909201', 'LIIDType')))
    _CTTRAFFIC_correspondentCount = INT(name='correspondentCount', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CTTRAFFIC_iRITransactionNumber = INT(name='iRITransactionNumber', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CTTRAFFIC_trafficPacket = BIT_STR(name='trafficPacket', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CTTRAFFIC_cryptoChecksum = BIT_STR(name='cryptoChecksum', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    CTTRAFFIC._cont = ASN1Dict([
        ('version', _CTTRAFFIC_version),
        ('lIInstanceid', _CTTRAFFIC_lIInstanceid),
        ('correspondentCount', _CTTRAFFIC_correspondentCount),
        ('iRITransactionNumber', _CTTRAFFIC_iRITransactionNumber),
        ('trafficPacket', _CTTRAFFIC_trafficPacket),
        ('cryptoChecksum', _CTTRAFFIC_cryptoChecksum),
        ])
    CTTRAFFIC._ext = None
    
    #-----< DirectionType >-----#
    DirectionType = ENUM(name='DirectionType', mode=MODE_TYPE)
    DirectionType._cont = ASN1Dict([('toTarget', 0), ('fromTarget', 1), ('unknown', 2)])
    DirectionType._ext = None
    
    #-----< UserSignalType >-----#
    UserSignalType = CHOICE(name='UserSignalType', mode=MODE_TYPE)
    _UserSignalType_copySignal = BIT_STR(name='copySignal', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UserSignalType_interpretedSignal = INT(name='interpretedSignal', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UserSignalType_cdcPdu = SEQ(name='cdcPdu', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PCESP', 'CdcPdu')))
    UserSignalType._cont = ASN1Dict([
        ('copySignal', _UserSignalType_copySignal),
        ('interpretedSignal', _UserSignalType_interpretedSignal),
        ('cdcPdu', _UserSignalType_cdcPdu),
        ])
    UserSignalType._ext = None
    
    #-----< IRITransactionType >-----#
    IRITransactionType = ENUM(name='IRITransactionType', mode=MODE_TYPE)
    IRITransactionType._cont = ASN1Dict([('iRIbegin', 0), ('iRIcontinue', 1), ('iRIend', 2), ('iRIreport', 3)])
    IRITransactionType._ext = None
    
    #-----< LocationType >-----#
    LocationType = CHOICE(name='LocationType', mode=MODE_TYPE)
    _LocationType_geodeticData = BIT_STR(name='geodeticData', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LocationType_nameAddress = STR_PRINT(name='nameAddress', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LocationType_nameAddress._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=100)], ev=None, er=[])
    LocationType._cont = ASN1Dict([
        ('geodeticData', _LocationType_geodeticData),
        ('nameAddress', _LocationType_nameAddress),
        ])
    LocationType._ext = None
    
    #-----< LIIDType >-----#
    LIIDType = INT(name='LIIDType', mode=MODE_TYPE)
    LIIDType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    _all_ = [
        _TARGETACTIVITYMONITOR_1_version,
        _TARGETACTIVITYMONITOR_1_lIInstanceid,
        _TARGETACTIVITYMONITOR_1_timestamp,
        _TARGETACTIVITYMONITOR_1_targetLocation,
        _TARGETACTIVITYMONITOR_1_direction,
        _TARGETACTIVITYMONITOR_1_iRITransaction,
        _TARGETACTIVITYMONITOR_1_iRITransactionNumber,
        _TARGETACTIVITYMONITOR_1_userSignal,
        _TARGETACTIVITYMONITOR_1_cryptoCheckSum,
        TARGETACTIVITYMONITOR_1,
        _TTRAFFIC_version,
        _TTRAFFIC_lIInstanceid,
        _TTRAFFIC_iRITransactionNumber,
        _TTRAFFIC_trafficPacket,
        _TTRAFFIC_cryptoChecksum,
        TTRAFFIC,
        _CTTRAFFIC_version,
        _CTTRAFFIC_lIInstanceid,
        _CTTRAFFIC_correspondentCount,
        _CTTRAFFIC_iRITransactionNumber,
        _CTTRAFFIC_trafficPacket,
        _CTTRAFFIC_cryptoChecksum,
        CTTRAFFIC,
        DirectionType,
        _UserSignalType_copySignal,
        _UserSignalType_interpretedSignal,
        _UserSignalType_cdcPdu,
        UserSignalType,
        IRITransactionType,
        _LocationType_geodeticData,
        _LocationType_nameAddress,
        LocationType,
        LIIDType,
    ]

class ThreeGPP_HI1NotificationOperations:

    _name_  = 'ThreeGPP-HI1NotificationOperations'
    _oid_   = [0, 4, 0, 2, 2, 4, 0, 1, 16, 0]
    
    _obj_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'threeGPP-hi1NotificationOperationsId',
        'threeGPP-hi1OperationId',
        'ThreeGPP-HI1-Operation',
        'Notification',
        'Alarm-Indicator',
        'ThreeGPP-National-HI1-ASN1parameters',
        'Target-Information',
        'TargetType',
        'DeliveryInformation',
        'InterceptionType',
        'BroadcastStatus',
        ]
    _type_ = [
        'ThreeGPP-HI1-Operation',
        'Notification',
        'Alarm-Indicator',
        'ThreeGPP-National-HI1-ASN1parameters',
        'Target-Information',
        'TargetType',
        'DeliveryInformation',
        'InterceptionType',
        'BroadcastStatus',
        ]
    _set_ = [
        ]
    _val_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'threeGPP-hi1NotificationOperationsId',
        'threeGPP-hi1OperationId',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< lawfulInterceptDomainId >-----#
    lawfulInterceptDomainId = OID(name='lawfulInterceptDomainId', mode=MODE_VALUE)
    lawfulInterceptDomainId._val = (0, 4, 0, 2, 2)
    
    #-----< threeGPPSUBDomainId >-----#
    threeGPPSUBDomainId = OID(name='threeGPPSUBDomainId', mode=MODE_VALUE)
    threeGPPSUBDomainId._val = (0, 4, 0, 2, 2, 4)
    
    #-----< threeGPP-hi1NotificationOperationsId >-----#
    threeGPP_hi1NotificationOperationsId = OID(name='threeGPP-hi1NotificationOperationsId', mode=MODE_VALUE)
    threeGPP_hi1NotificationOperationsId._val = (0, 4, 0, 2, 2, 4, 0, 1)
    
    #-----< threeGPP-hi1OperationId >-----#
    threeGPP_hi1OperationId = OID(name='threeGPP-hi1OperationId', mode=MODE_VALUE)
    threeGPP_hi1OperationId._val = (0, 4, 0, 2, 2, 4, 0, 1, 16, 0)
    
    #-----< ThreeGPP-HI1-Operation >-----#
    ThreeGPP_HI1_Operation = CHOICE(name='ThreeGPP-HI1-Operation', mode=MODE_TYPE)
    _ThreeGPP_HI1_Operation_liActivated = SEQ(name='liActivated', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ThreeGPP-HI1NotificationOperations', 'Notification')))
    _ThreeGPP_HI1_Operation_liDeactivated = SEQ(name='liDeactivated', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ThreeGPP-HI1NotificationOperations', 'Notification')))
    _ThreeGPP_HI1_Operation_liModified = SEQ(name='liModified', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ThreeGPP-HI1NotificationOperations', 'Notification')))
    _ThreeGPP_HI1_Operation_alarms_indicator = SEQ(name='alarms-indicator', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ThreeGPP-HI1NotificationOperations', 'Alarm-Indicator')))
    _ThreeGPP_HI1_Operation_threeGPP_National_HI1_ASN1parameters = SEQ(name='threeGPP-National-HI1-ASN1parameters', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ThreeGPP-HI1NotificationOperations', 'ThreeGPP-National-HI1-ASN1parameters')))
    ThreeGPP_HI1_Operation._cont = ASN1Dict([
        ('liActivated', _ThreeGPP_HI1_Operation_liActivated),
        ('liDeactivated', _ThreeGPP_HI1_Operation_liDeactivated),
        ('liModified', _ThreeGPP_HI1_Operation_liModified),
        ('alarms-indicator', _ThreeGPP_HI1_Operation_alarms_indicator),
        ('threeGPP-National-HI1-ASN1parameters', _ThreeGPP_HI1_Operation_threeGPP_National_HI1_ASN1parameters),
        ])
    ThreeGPP_HI1_Operation._ext = []
    
    #-----< Notification >-----#
    Notification = SEQ(name='Notification', mode=MODE_TYPE)
    _Notification_domainID = OID(name='domainID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Notification_lawfulInterceptionIdentifier = OCT_STR(name='lawfulInterceptionIdentifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')))
    _Notification_communicationIdentifier = SEQ(name='communicationIdentifier', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CommunicationIdentifier')), opt=True)
    _Notification_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _Notification_threeGPP_National_HI1_ASN1parameters = SEQ(name='threeGPP-National-HI1-ASN1parameters', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ThreeGPP-HI1NotificationOperations', 'ThreeGPP-National-HI1-ASN1parameters')), opt=True)
    _Notification_target_Information = SEQ(name='target-Information', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ThreeGPP-HI1NotificationOperations', 'Target-Information')), opt=True)
    _Notification_network_Identifier = SEQ(name='network-Identifier', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Network-Identifier')), opt=True)
    _Notification_broadcastStatus = ENUM(name='broadcastStatus', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ThreeGPP-HI1NotificationOperations', 'BroadcastStatus')), opt=True)
    Notification._cont = ASN1Dict([
        ('domainID', _Notification_domainID),
        ('lawfulInterceptionIdentifier', _Notification_lawfulInterceptionIdentifier),
        ('communicationIdentifier', _Notification_communicationIdentifier),
        ('timeStamp', _Notification_timeStamp),
        ('threeGPP-National-HI1-ASN1parameters', _Notification_threeGPP_National_HI1_ASN1parameters),
        ('target-Information', _Notification_target_Information),
        ('network-Identifier', _Notification_network_Identifier),
        ('broadcastStatus', _Notification_broadcastStatus),
        ])
    Notification._ext = []
    
    #-----< Alarm-Indicator >-----#
    Alarm_Indicator = SEQ(name='Alarm-Indicator', mode=MODE_TYPE)
    _Alarm_Indicator_domainID = OID(name='domainID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Alarm_Indicator_communicationIdentifier = SEQ(name='communicationIdentifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CommunicationIdentifier')), opt=True)
    _Alarm_Indicator_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _Alarm_Indicator_alarm_information = OCT_STR(name='alarm-information', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Alarm_Indicator_alarm_information._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    _Alarm_Indicator_lawfulInterceptionIdentifier = OCT_STR(name='lawfulInterceptionIdentifier', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')), opt=True)
    _Alarm_Indicator_threeGPP_National_HI1_ASN1parameters = SEQ(name='threeGPP-National-HI1-ASN1parameters', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ThreeGPP-HI1NotificationOperations', 'ThreeGPP-National-HI1-ASN1parameters')), opt=True)
    _Alarm_Indicator_target_Information = SEQ(name='target-Information', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ThreeGPP-HI1NotificationOperations', 'Target-Information')), opt=True)
    _Alarm_Indicator_network_Identifier = SEQ(name='network-Identifier', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Network-Identifier')), opt=True)
    _Alarm_Indicator_network_Element_Information = OCT_STR(name='network-Element-Information', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Alarm_Indicator_network_Element_Information._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    Alarm_Indicator._cont = ASN1Dict([
        ('domainID', _Alarm_Indicator_domainID),
        ('communicationIdentifier', _Alarm_Indicator_communicationIdentifier),
        ('timeStamp', _Alarm_Indicator_timeStamp),
        ('alarm-information', _Alarm_Indicator_alarm_information),
        ('lawfulInterceptionIdentifier', _Alarm_Indicator_lawfulInterceptionIdentifier),
        ('threeGPP-National-HI1-ASN1parameters', _Alarm_Indicator_threeGPP_National_HI1_ASN1parameters),
        ('target-Information', _Alarm_Indicator_target_Information),
        ('network-Identifier', _Alarm_Indicator_network_Identifier),
        ('network-Element-Information', _Alarm_Indicator_network_Element_Information),
        ])
    Alarm_Indicator._ext = []
    
    #-----< ThreeGPP-National-HI1-ASN1parameters >-----#
    ThreeGPP_National_HI1_ASN1parameters = SEQ(name='ThreeGPP-National-HI1-ASN1parameters', mode=MODE_TYPE)
    _ThreeGPP_National_HI1_ASN1parameters_domainID = OID(name='domainID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ThreeGPP_National_HI1_ASN1parameters_countryCode = STR_PRINT(name='countryCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ThreeGPP_National_HI1_ASN1parameters_countryCode._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    ThreeGPP_National_HI1_ASN1parameters._cont = ASN1Dict([
        ('domainID', _ThreeGPP_National_HI1_ASN1parameters_domainID),
        ('countryCode', _ThreeGPP_National_HI1_ASN1parameters_countryCode),
        ])
    ThreeGPP_National_HI1_ASN1parameters._ext = []
    
    #-----< Target-Information >-----#
    Target_Information = SEQ(name='Target-Information', mode=MODE_TYPE)
    _Target_Information_communicationIdentifier = SEQ(name='communicationIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CommunicationIdentifier')), opt=True)
    _Target_Information_network_Identifier = SEQ(name='network-Identifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Network-Identifier')), opt=True)
    _Target_Information_broadcastArea = OCT_STR(name='broadcastArea', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Target_Information_broadcastArea._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    _Target_Information_targetType = ENUM(name='targetType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ThreeGPP-HI1NotificationOperations', 'TargetType')), opt=True)
    _Target_Information_deliveryInformation = SEQ(name='deliveryInformation', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ThreeGPP-HI1NotificationOperations', 'DeliveryInformation')), opt=True)
    _Target_Information_liActivatedTime = CHOICE(name='liActivatedTime', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')), opt=True)
    _Target_Information_liDeactivatedTime = CHOICE(name='liDeactivatedTime', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')), opt=True)
    _Target_Information_liModificationTime = CHOICE(name='liModificationTime', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')), opt=True)
    _Target_Information_interceptionType = ENUM(name='interceptionType', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ThreeGPP-HI1NotificationOperations', 'InterceptionType')), opt=True)
    _Target_Information_liSetUpTime = CHOICE(name='liSetUpTime', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')), opt=True)
    Target_Information._cont = ASN1Dict([
        ('communicationIdentifier', _Target_Information_communicationIdentifier),
        ('network-Identifier', _Target_Information_network_Identifier),
        ('broadcastArea', _Target_Information_broadcastArea),
        ('targetType', _Target_Information_targetType),
        ('deliveryInformation', _Target_Information_deliveryInformation),
        ('liActivatedTime', _Target_Information_liActivatedTime),
        ('liDeactivatedTime', _Target_Information_liDeactivatedTime),
        ('liModificationTime', _Target_Information_liModificationTime),
        ('interceptionType', _Target_Information_interceptionType),
        ('liSetUpTime', _Target_Information_liSetUpTime),
        ])
    Target_Information._ext = ['liSetUpTime']
    
    #-----< TargetType >-----#
    TargetType = ENUM(name='TargetType', mode=MODE_TYPE)
    TargetType._cont = ASN1Dict([('mSISDN', 0), ('iMSI', 1), ('iMEI', 2), ('e164-Format', 3), ('nAI', 4), ('sip-URI', 5), ('tel-URI', 6), ('iMPU', 7), ('iMPI', 8)])
    TargetType._ext = []
    
    #-----< DeliveryInformation >-----#
    DeliveryInformation = SEQ(name='DeliveryInformation', mode=MODE_TYPE)
    _DeliveryInformation_hi2DeliveryNumber = CHOICE(name='hi2DeliveryNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CalledPartyNumber')), opt=True)
    _DeliveryInformation_hi3DeliveryNumber = CHOICE(name='hi3DeliveryNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CalledPartyNumber')), opt=True)
    _DeliveryInformation_hi2DeliveryIpAddress = SEQ(name='hi2DeliveryIpAddress', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')), opt=True)
    _DeliveryInformation_hi3DeliveryIpAddress = SEQ(name='hi3DeliveryIpAddress', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')), opt=True)
    DeliveryInformation._cont = ASN1Dict([
        ('hi2DeliveryNumber', _DeliveryInformation_hi2DeliveryNumber),
        ('hi3DeliveryNumber', _DeliveryInformation_hi3DeliveryNumber),
        ('hi2DeliveryIpAddress', _DeliveryInformation_hi2DeliveryIpAddress),
        ('hi3DeliveryIpAddress', _DeliveryInformation_hi3DeliveryIpAddress),
        ])
    DeliveryInformation._ext = []
    
    #-----< InterceptionType >-----#
    InterceptionType = ENUM(name='InterceptionType', mode=MODE_TYPE)
    InterceptionType._cont = ASN1Dict([('voiceIriCc', 0), ('voiceIriOnly', 1), ('dataIriCc', 2), ('dataIriOnly', 3), ('voiceAndDataIriCc', 4), ('voiceAndDataIriOnly', 5)])
    InterceptionType._ext = []
    
    #-----< BroadcastStatus >-----#
    BroadcastStatus = ENUM(name='BroadcastStatus', mode=MODE_TYPE)
    BroadcastStatus._cont = ASN1Dict([('succesfull', 0), ('unsuccesfull', 1)])
    BroadcastStatus._ext = []
    
    _all_ = [
        lawfulInterceptDomainId,
        threeGPPSUBDomainId,
        threeGPP_hi1NotificationOperationsId,
        threeGPP_hi1OperationId,
        _ThreeGPP_HI1_Operation_liActivated,
        _ThreeGPP_HI1_Operation_liDeactivated,
        _ThreeGPP_HI1_Operation_liModified,
        _ThreeGPP_HI1_Operation_alarms_indicator,
        _ThreeGPP_HI1_Operation_threeGPP_National_HI1_ASN1parameters,
        ThreeGPP_HI1_Operation,
        _Notification_domainID,
        _Notification_lawfulInterceptionIdentifier,
        _Notification_communicationIdentifier,
        _Notification_timeStamp,
        _Notification_threeGPP_National_HI1_ASN1parameters,
        _Notification_target_Information,
        _Notification_network_Identifier,
        _Notification_broadcastStatus,
        Notification,
        _Alarm_Indicator_domainID,
        _Alarm_Indicator_communicationIdentifier,
        _Alarm_Indicator_timeStamp,
        _Alarm_Indicator_alarm_information,
        _Alarm_Indicator_lawfulInterceptionIdentifier,
        _Alarm_Indicator_threeGPP_National_HI1_ASN1parameters,
        _Alarm_Indicator_target_Information,
        _Alarm_Indicator_network_Identifier,
        _Alarm_Indicator_network_Element_Information,
        Alarm_Indicator,
        _ThreeGPP_National_HI1_ASN1parameters_domainID,
        _ThreeGPP_National_HI1_ASN1parameters_countryCode,
        ThreeGPP_National_HI1_ASN1parameters,
        _Target_Information_communicationIdentifier,
        _Target_Information_network_Identifier,
        _Target_Information_broadcastArea,
        _Target_Information_targetType,
        _Target_Information_deliveryInformation,
        _Target_Information_liActivatedTime,
        _Target_Information_liDeactivatedTime,
        _Target_Information_liModificationTime,
        _Target_Information_interceptionType,
        _Target_Information_liSetUpTime,
        Target_Information,
        TargetType,
        _DeliveryInformation_hi2DeliveryNumber,
        _DeliveryInformation_hi3DeliveryNumber,
        _DeliveryInformation_hi2DeliveryIpAddress,
        _DeliveryInformation_hi3DeliveryIpAddress,
        DeliveryInformation,
        InterceptionType,
        BroadcastStatus,
    ]

class UMTS_HI3CircuitLIOperations:

    _name_  = 'UMTS-HI3CircuitLIOperations'
    _oid_   = [0, 4, 0, 2, 2, 4, 4, 16, 0]
    
    _obj_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi3CSDomainId',
        'UMTS-Content-Report',
        ]
    _type_ = [
        'UMTS-Content-Report',
        ]
    _set_ = [
        ]
    _val_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi3CSDomainId',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< lawfulInterceptDomainId >-----#
    lawfulInterceptDomainId = OID(name='lawfulInterceptDomainId', mode=MODE_VALUE)
    lawfulInterceptDomainId._val = (0, 4, 0, 2, 2)
    
    #-----< threeGPPSUBDomainId >-----#
    threeGPPSUBDomainId = OID(name='threeGPPSUBDomainId', mode=MODE_VALUE)
    threeGPPSUBDomainId._val = (0, 4, 0, 2, 2, 4)
    
    #-----< hi3CSDomainId >-----#
    hi3CSDomainId = OID(name='hi3CSDomainId', mode=MODE_VALUE)
    hi3CSDomainId._val = (0, 4, 0, 2, 2, 4, 4, 16, 0)
    
    #-----< UMTS-Content-Report >-----#
    UMTS_Content_Report = SEQ(name='UMTS-Content-Report', mode=MODE_TYPE)
    _UMTS_Content_Report_hi3CSDomainId = OID(name='hi3CSDomainId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UMTS_Content_Report_version = ENUM(name='version', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UMTS_Content_Report_version._cont = ASN1Dict([('version1', 1), ('version8', 8)])
    _UMTS_Content_Report_version._ext = ['version8']
    _UMTS_Content_Report_lawfulInterceptionIdentifier = OCT_STR(name='lawfulInterceptionIdentifier', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')), opt=True)
    _UMTS_Content_Report_communicationIdentifier = SEQ(name='communicationIdentifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CommunicationIdentifier')))
    _UMTS_Content_Report_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _UMTS_Content_Report_initiator = ENUM(name='initiator', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UMTS_Content_Report_initiator._cont = ASN1Dict([('originating-party', 0), ('terminating-party', 1), ('forwarded-to-party', 2), ('undefined-party', 3)])
    _UMTS_Content_Report_initiator._ext = []
    _UMTS_Content_Report_content = SEQ(name='content', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Supplementary-Services')), opt=True)
    _UMTS_Content_Report_sMS_report = SEQ(name='sMS-report', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'SMS-report')), opt=True)
    UMTS_Content_Report._cont = ASN1Dict([
        ('hi3CSDomainId', _UMTS_Content_Report_hi3CSDomainId),
        ('version', _UMTS_Content_Report_version),
        ('lawfulInterceptionIdentifier', _UMTS_Content_Report_lawfulInterceptionIdentifier),
        ('communicationIdentifier', _UMTS_Content_Report_communicationIdentifier),
        ('timeStamp', _UMTS_Content_Report_timeStamp),
        ('initiator', _UMTS_Content_Report_initiator),
        ('content', _UMTS_Content_Report_content),
        ('sMS-report', _UMTS_Content_Report_sMS_report),
        ])
    UMTS_Content_Report._ext = []
    
    _all_ = [
        lawfulInterceptDomainId,
        threeGPPSUBDomainId,
        hi3CSDomainId,
        _UMTS_Content_Report_hi3CSDomainId,
        _UMTS_Content_Report_version,
        _UMTS_Content_Report_lawfulInterceptionIdentifier,
        _UMTS_Content_Report_communicationIdentifier,
        _UMTS_Content_Report_timeStamp,
        _UMTS_Content_Report_initiator,
        _UMTS_Content_Report_content,
        _UMTS_Content_Report_sMS_report,
        UMTS_Content_Report,
    ]

class Umts_HI3_PS:

    _name_  = 'Umts-HI3-PS'
    _oid_   = [0, 4, 0, 2, 2, 4, 2, 7, 0]
    
    _obj_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi3DomainId',
        'CC-PDU',
        'ULIC-header',
        'Version',
        'TPDU-direction',
        'National-HI3-ASN1parameters',
        'ICE-type',
        ]
    _type_ = [
        'CC-PDU',
        'ULIC-header',
        'Version',
        'TPDU-direction',
        'National-HI3-ASN1parameters',
        'ICE-type',
        ]
    _set_ = [
        ]
    _val_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi3DomainId',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< lawfulInterceptDomainId >-----#
    lawfulInterceptDomainId = OID(name='lawfulInterceptDomainId', mode=MODE_VALUE)
    lawfulInterceptDomainId._val = (0, 4, 0, 2, 2)
    
    #-----< threeGPPSUBDomainId >-----#
    threeGPPSUBDomainId = OID(name='threeGPPSUBDomainId', mode=MODE_VALUE)
    threeGPPSUBDomainId._val = (0, 4, 0, 2, 2, 4)
    
    #-----< hi3DomainId >-----#
    hi3DomainId = OID(name='hi3DomainId', mode=MODE_VALUE)
    hi3DomainId._val = (0, 4, 0, 2, 2, 4, 2, 7, 0)
    
    #-----< CC-PDU >-----#
    CC_PDU = SEQ(name='CC-PDU', mode=MODE_TYPE)
    _CC_PDU_uLIC_header = SEQ(name='uLIC-header', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Umts-HI3-PS', 'ULIC-header')))
    _CC_PDU_payload = OCT_STR(name='payload', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    CC_PDU._cont = ASN1Dict([
        ('uLIC-header', _CC_PDU_uLIC_header),
        ('payload', _CC_PDU_payload),
        ])
    CC_PDU._ext = None
    
    #-----< ULIC-header >-----#
    ULIC_header = SEQ(name='ULIC-header', mode=MODE_TYPE)
    _ULIC_header_hi3DomainId = OID(name='hi3DomainId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ULIC_header_version = ENUM(name='version', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Umts-HI3-PS', 'Version')))
    _ULIC_header_lIID = OCT_STR(name='lIID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')), opt=True)
    _ULIC_header_correlation_Number = OCT_STR(name='correlation-Number', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'GPRSCorrelationNumber')))
    _ULIC_header_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')), opt=True)
    _ULIC_header_sequence_number = INT(name='sequence-number', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ULIC_header_sequence_number._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _ULIC_header_t_PDU_direction = ENUM(name='t-PDU-direction', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Umts-HI3-PS', 'TPDU-direction')))
    _ULIC_header_national_HI3_ASN1parameters = SEQ(name='national-HI3-ASN1parameters', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Umts-HI3-PS', 'National-HI3-ASN1parameters')), opt=True)
    _ULIC_header_ice_type = ENUM(name='ice-type', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Umts-HI3-PS', 'ICE-type')), opt=True)
    ULIC_header._cont = ASN1Dict([
        ('hi3DomainId', _ULIC_header_hi3DomainId),
        ('version', _ULIC_header_version),
        ('lIID', _ULIC_header_lIID),
        ('correlation-Number', _ULIC_header_correlation_Number),
        ('timeStamp', _ULIC_header_timeStamp),
        ('sequence-number', _ULIC_header_sequence_number),
        ('t-PDU-direction', _ULIC_header_t_PDU_direction),
        ('national-HI3-ASN1parameters', _ULIC_header_national_HI3_ASN1parameters),
        ('ice-type', _ULIC_header_ice_type),
        ])
    ULIC_header._ext = ['national-HI3-ASN1parameters', 'ice-type']
    
    #-----< Version >-----#
    Version = ENUM(name='Version', mode=MODE_TYPE)
    Version._cont = ASN1Dict([('version1', 1), ('version3', 3), ('lastVersion', 8)])
    Version._ext = ['version3', 'lastVersion']
    
    #-----< TPDU-direction >-----#
    TPDU_direction = ENUM(name='TPDU-direction', mode=MODE_TYPE)
    TPDU_direction._cont = ASN1Dict([('from-target', 1), ('to-target', 2), ('unknown', 3)])
    TPDU_direction._ext = None
    
    #-----< National-HI3-ASN1parameters >-----#
    National_HI3_ASN1parameters = SEQ(name='National-HI3-ASN1parameters', mode=MODE_TYPE)
    _National_HI3_ASN1parameters_countryCode = STR_PRINT(name='countryCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _National_HI3_ASN1parameters_countryCode._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    National_HI3_ASN1parameters._cont = ASN1Dict([
        ('countryCode', _National_HI3_ASN1parameters_countryCode),
        ])
    National_HI3_ASN1parameters._ext = []
    
    #-----< ICE-type >-----#
    ICE_type = ENUM(name='ICE-type', mode=MODE_TYPE)
    ICE_type._cont = ASN1Dict([('sgsn', 1), ('ggsn', 2)])
    ICE_type._ext = []
    
    _all_ = [
        lawfulInterceptDomainId,
        threeGPPSUBDomainId,
        hi3DomainId,
        _CC_PDU_uLIC_header,
        _CC_PDU_payload,
        CC_PDU,
        _ULIC_header_hi3DomainId,
        _ULIC_header_version,
        _ULIC_header_lIID,
        _ULIC_header_correlation_Number,
        _ULIC_header_timeStamp,
        _ULIC_header_sequence_number,
        _ULIC_header_t_PDU_direction,
        _ULIC_header_national_HI3_ASN1parameters,
        _ULIC_header_ice_type,
        ULIC_header,
        Version,
        TPDU_direction,
        _National_HI3_ASN1parameters_countryCode,
        National_HI3_ASN1parameters,
        ICE_type,
    ]

class UmtsCS_HI2Operations:

    _name_  = 'UmtsCS-HI2Operations'
    _oid_   = [0, 4, 0, 2, 2, 4, 3, 16, 0]
    
    _obj_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi2CSDomainId',
        'UmtsCS-IRIsContent',
        'UmtsCS-IRISequence',
        'UmtsCS-IRIContent',
        'IRI-Parameters',
        'Umts-Cs-Event',
        'Requesting-Node-Type',
        'Change-Of-Target-Identity',
        'Current-Previous-Systems',
        ]
    _type_ = [
        'UmtsCS-IRIsContent',
        'UmtsCS-IRISequence',
        'UmtsCS-IRIContent',
        'IRI-Parameters',
        'Umts-Cs-Event',
        'Requesting-Node-Type',
        'Change-Of-Target-Identity',
        'Current-Previous-Systems',
        ]
    _set_ = [
        ]
    _val_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi2CSDomainId',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< lawfulInterceptDomainId >-----#
    lawfulInterceptDomainId = OID(name='lawfulInterceptDomainId', mode=MODE_VALUE)
    lawfulInterceptDomainId._val = (0, 4, 0, 2, 2)
    
    #-----< threeGPPSUBDomainId >-----#
    threeGPPSUBDomainId = OID(name='threeGPPSUBDomainId', mode=MODE_VALUE)
    threeGPPSUBDomainId._val = (0, 4, 0, 2, 2, 4)
    
    #-----< hi2CSDomainId >-----#
    hi2CSDomainId = OID(name='hi2CSDomainId', mode=MODE_VALUE)
    hi2CSDomainId._val = (0, 4, 0, 2, 2, 4, 3, 16, 0)
    
    #-----< UmtsCS-IRIsContent >-----#
    UmtsCS_IRIsContent = CHOICE(name='UmtsCS-IRIsContent', mode=MODE_TYPE)
    _UmtsCS_IRIsContent_iRIContent = CHOICE(name='iRIContent', mode=MODE_TYPE, typeref=ASN1RefType(('UmtsCS-HI2Operations', 'UmtsCS-IRIContent')))
    _UmtsCS_IRIsContent_iRISequence = SEQ_OF(name='iRISequence', mode=MODE_TYPE, typeref=ASN1RefType(('UmtsCS-HI2Operations', 'UmtsCS-IRISequence')))
    UmtsCS_IRIsContent._cont = ASN1Dict([
        ('iRIContent', _UmtsCS_IRIsContent_iRIContent),
        ('iRISequence', _UmtsCS_IRIsContent_iRISequence),
        ])
    UmtsCS_IRIsContent._ext = None
    
    #-----< UmtsCS-IRISequence >-----#
    UmtsCS_IRISequence = SEQ_OF(name='UmtsCS-IRISequence', mode=MODE_TYPE)
    _UmtsCS_IRISequence__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('UmtsCS-HI2Operations', 'UmtsCS-IRIContent')))
    UmtsCS_IRISequence._cont = _UmtsCS_IRISequence__item_
    
    #-----< UmtsCS-IRIContent >-----#
    UmtsCS_IRIContent = CHOICE(name='UmtsCS-IRIContent', mode=MODE_TYPE)
    _UmtsCS_IRIContent_iRI_Begin_record = SEQ(name='iRI-Begin-record', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsCS-HI2Operations', 'IRI-Parameters')))
    _UmtsCS_IRIContent_iRI_End_record = SEQ(name='iRI-End-record', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsCS-HI2Operations', 'IRI-Parameters')))
    _UmtsCS_IRIContent_iRI_Continue_record = SEQ(name='iRI-Continue-record', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsCS-HI2Operations', 'IRI-Parameters')))
    _UmtsCS_IRIContent_iRI_Report_record = SEQ(name='iRI-Report-record', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsCS-HI2Operations', 'IRI-Parameters')))
    UmtsCS_IRIContent._cont = ASN1Dict([
        ('iRI-Begin-record', _UmtsCS_IRIContent_iRI_Begin_record),
        ('iRI-End-record', _UmtsCS_IRIContent_iRI_End_record),
        ('iRI-Continue-record', _UmtsCS_IRIContent_iRI_Continue_record),
        ('iRI-Report-record', _UmtsCS_IRIContent_iRI_Report_record),
        ])
    UmtsCS_IRIContent._ext = []
    
    #-----< IRI-Parameters >-----#
    IRI_Parameters = SEQ(name='IRI-Parameters', mode=MODE_TYPE)
    _IRI_Parameters_hi2CSDomainId = OID(name='hi2CSDomainId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IRI_Parameters_iRIversion = ENUM(name='iRIversion', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_iRIversion._cont = ASN1Dict([('version1', 1), ('version2', 2), ('version3', 3), ('lastVersion', 8)])
    _IRI_Parameters_iRIversion._ext = ['version2', 'version3', 'lastVersion']
    _IRI_Parameters_lawfulInterceptionIdentifier = OCT_STR(name='lawfulInterceptionIdentifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')))
    _IRI_Parameters_communicationIdentifier = SEQ(name='communicationIdentifier', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CommunicationIdentifier')))
    _IRI_Parameters_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _IRI_Parameters_intercepted_Call_Direct = ENUM(name='intercepted-Call-Direct', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_intercepted_Call_Direct._cont = ASN1Dict([('not-Available', 0), ('originating-Target', 1), ('terminating-Target', 2)])
    _IRI_Parameters_intercepted_Call_Direct._ext = []
    _IRI_Parameters_intercepted_Call_State = ENUM(name='intercepted-Call-State', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Intercepted-Call-State')), opt=True)
    _IRI_Parameters_ringingDuration = OCT_STR(name='ringingDuration', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_ringingDuration._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    _IRI_Parameters_conversationDuration = OCT_STR(name='conversationDuration', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_conversationDuration._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    _IRI_Parameters_locationOfTheTarget = SEQ(name='locationOfTheTarget', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'Location')), opt=True)
    _IRI_Parameters_partyInformation = SET_OF(name='partyInformation', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_partyInformation__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('HI2Operations', 'PartyInformation')))
    _IRI_Parameters_partyInformation._cont = __IRI_Parameters_partyInformation__item_
    _IRI_Parameters_partyInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    _IRI_Parameters_callContentLinkInformation = SEQ(name='callContentLinkInformation', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_callContentLinkInformation_cCLink1Characteristics = SEQ(name='cCLink1Characteristics', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CallContentLinkCharacteristics')), opt=True)
    __IRI_Parameters_callContentLinkInformation_cCLink2Characteristics = SEQ(name='cCLink2Characteristics', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CallContentLinkCharacteristics')), opt=True)
    _IRI_Parameters_callContentLinkInformation._cont = ASN1Dict([
        ('cCLink1Characteristics', __IRI_Parameters_callContentLinkInformation_cCLink1Characteristics),
        ('cCLink2Characteristics', __IRI_Parameters_callContentLinkInformation_cCLink2Characteristics),
        ])
    _IRI_Parameters_callContentLinkInformation._ext = []
    _IRI_Parameters_release_Reason_Of_Intercepted_Call = OCT_STR(name='release-Reason-Of-Intercepted-Call', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_release_Reason_Of_Intercepted_Call._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _IRI_Parameters_nature_Of_The_intercepted_call = ENUM(name='nature-Of-The-intercepted-call', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_nature_Of_The_intercepted_call._cont = ASN1Dict([('gSM-ISDN-PSTN-circuit-call', 0), ('gSM-SMS-Message', 1), ('uUS4-Messages', 2), ('tETRA-circuit-call', 3), ('teTRA-Packet-Data', 4), ('gPRS-Packet-Data', 5)])
    _IRI_Parameters_nature_Of_The_intercepted_call._ext = []
    _IRI_Parameters_serviceCenterAddress = SEQ(name='serviceCenterAddress', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'PartyInformation')), opt=True)
    _IRI_Parameters_sMS = SEQ(name='sMS', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'SMS-report')), opt=True)
    _IRI_Parameters_cC_Link_Identifier = OCT_STR(name='cC-Link-Identifier', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'CC-Link-Identifier')), opt=True)
    _IRI_Parameters_national_Parameters = SET_OF(name='national-Parameters', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'National-Parameters')), opt=True)
    _IRI_Parameters_umts_Cs_Event = ENUM(name='umts-Cs-Event', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsCS-HI2Operations', 'Umts-Cs-Event')), opt=True)
    _IRI_Parameters_serving_System_Identifier = OCT_STR(name='serving-System-Identifier', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_carrierSpecificData = OCT_STR(name='carrierSpecificData', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_current_Previous_Systems = SEQ(name='current-Previous-Systems', mode=MODE_TYPE, tag=(36, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsCS-HI2Operations', 'Current-Previous-Systems')), opt=True)
    _IRI_Parameters_change_Of_Target_Identity = SEQ(name='change-Of-Target-Identity', mode=MODE_TYPE, tag=(37, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsCS-HI2Operations', 'Change-Of-Target-Identity')), opt=True)
    _IRI_Parameters_requesting_Network_Identifier = OCT_STR(name='requesting-Network-Identifier', mode=MODE_TYPE, tag=(38, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_requesting_Node_Type = ENUM(name='requesting-Node-Type', mode=MODE_TYPE, tag=(39, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsCS-HI2Operations', 'Requesting-Node-Type')), opt=True)
    _IRI_Parameters_extendedLocParameters = SEQ(name='extendedLocParameters', mode=MODE_TYPE, tag=(40, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'ExtendedLocParameters')), opt=True)
    _IRI_Parameters_locationErrorCode = INT(name='locationErrorCode', mode=MODE_TYPE, tag=(41, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'LocationErrorCode')), opt=True)
    _IRI_Parameters_national_HI2_ASN1parameters = SEQ(name='national-HI2-ASN1parameters', mode=MODE_TYPE, tag=(255, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'National-HI2-ASN1parameters')), opt=True)
    IRI_Parameters._cont = ASN1Dict([
        ('hi2CSDomainId', _IRI_Parameters_hi2CSDomainId),
        ('iRIversion', _IRI_Parameters_iRIversion),
        ('lawfulInterceptionIdentifier', _IRI_Parameters_lawfulInterceptionIdentifier),
        ('communicationIdentifier', _IRI_Parameters_communicationIdentifier),
        ('timeStamp', _IRI_Parameters_timeStamp),
        ('intercepted-Call-Direct', _IRI_Parameters_intercepted_Call_Direct),
        ('intercepted-Call-State', _IRI_Parameters_intercepted_Call_State),
        ('ringingDuration', _IRI_Parameters_ringingDuration),
        ('conversationDuration', _IRI_Parameters_conversationDuration),
        ('locationOfTheTarget', _IRI_Parameters_locationOfTheTarget),
        ('partyInformation', _IRI_Parameters_partyInformation),
        ('callContentLinkInformation', _IRI_Parameters_callContentLinkInformation),
        ('release-Reason-Of-Intercepted-Call', _IRI_Parameters_release_Reason_Of_Intercepted_Call),
        ('nature-Of-The-intercepted-call', _IRI_Parameters_nature_Of_The_intercepted_call),
        ('serviceCenterAddress', _IRI_Parameters_serviceCenterAddress),
        ('sMS', _IRI_Parameters_sMS),
        ('cC-Link-Identifier', _IRI_Parameters_cC_Link_Identifier),
        ('national-Parameters', _IRI_Parameters_national_Parameters),
        ('umts-Cs-Event', _IRI_Parameters_umts_Cs_Event),
        ('serving-System-Identifier', _IRI_Parameters_serving_System_Identifier),
        ('carrierSpecificData', _IRI_Parameters_carrierSpecificData),
        ('current-Previous-Systems', _IRI_Parameters_current_Previous_Systems),
        ('change-Of-Target-Identity', _IRI_Parameters_change_Of_Target_Identity),
        ('requesting-Network-Identifier', _IRI_Parameters_requesting_Network_Identifier),
        ('requesting-Node-Type', _IRI_Parameters_requesting_Node_Type),
        ('extendedLocParameters', _IRI_Parameters_extendedLocParameters),
        ('locationErrorCode', _IRI_Parameters_locationErrorCode),
        ('national-HI2-ASN1parameters', _IRI_Parameters_national_HI2_ASN1parameters),
        ])
    IRI_Parameters._ext = ['umts-Cs-Event', 'serving-System-Identifier', 'carrierSpecificData', 'current-Previous-Systems', 'change-Of-Target-Identity', 'requesting-Network-Identifier', 'requesting-Node-Type', 'extendedLocParameters', 'locationErrorCode', 'national-HI2-ASN1parameters']
    
    #-----< Umts-Cs-Event >-----#
    Umts_Cs_Event = ENUM(name='Umts-Cs-Event', mode=MODE_TYPE)
    Umts_Cs_Event._cont = ASN1Dict([('call-establishment', 1), ('answer', 2), ('supplementary-Service', 3), ('handover', 4), ('release', 5), ('sMS', 6), ('location-update', 7), ('subscriber-Controlled-Input', 8), ('hLR-Subscriber-Record-Change', 9), ('serving-System', 10), ('cancel-Location', 11), ('register-Location', 12), ('location-Information-Request', 13)])
    Umts_Cs_Event._ext = ['hLR-Subscriber-Record-Change', 'serving-System', 'cancel-Location', 'register-Location', 'location-Information-Request']
    
    #-----< Requesting-Node-Type >-----#
    Requesting_Node_Type = ENUM(name='Requesting-Node-Type', mode=MODE_TYPE)
    Requesting_Node_Type._cont = ASN1Dict([('mSC', 1), ('sMS-Centre', 2), ('gMLC', 3), ('mME', 4), ('sGSN', 5)])
    Requesting_Node_Type._ext = []
    
    #-----< Change-Of-Target-Identity >-----#
    Change_Of_Target_Identity = SEQ(name='Change-Of-Target-Identity', mode=MODE_TYPE)
    _Change_Of_Target_Identity_new_MSISDN = SEQ(name='new-MSISDN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_old_MSISDN = SEQ(name='old-MSISDN', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_new_IMSI = SEQ(name='new-IMSI', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_old_IMSI = SEQ(name='old-IMSI', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_new_IMEI = SEQ(name='new-IMEI', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_old_IMEI = SEQ(name='old-IMEI', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'PartyInformation')), opt=True)
    Change_Of_Target_Identity._cont = ASN1Dict([
        ('new-MSISDN', _Change_Of_Target_Identity_new_MSISDN),
        ('old-MSISDN', _Change_Of_Target_Identity_old_MSISDN),
        ('new-IMSI', _Change_Of_Target_Identity_new_IMSI),
        ('old-IMSI', _Change_Of_Target_Identity_old_IMSI),
        ('new-IMEI', _Change_Of_Target_Identity_new_IMEI),
        ('old-IMEI', _Change_Of_Target_Identity_old_IMEI),
        ])
    Change_Of_Target_Identity._ext = ['new-IMEI', 'old-IMEI']
    
    #-----< Current-Previous-Systems >-----#
    Current_Previous_Systems = SEQ(name='Current-Previous-Systems', mode=MODE_TYPE)
    _Current_Previous_Systems_current_Serving_System_Identifier = OCT_STR(name='current-Serving-System-Identifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Current_Previous_Systems_current_Serving_MSC_Number = OCT_STR(name='current-Serving-MSC-Number', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Current_Previous_Systems_current_Serving_MSC_Address = OCT_STR(name='current-Serving-MSC-Address', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Current_Previous_Systems_previous_Serving_System_Identifier = OCT_STR(name='previous-Serving-System-Identifier', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Current_Previous_Systems_previous_Serving_MSC_Number = OCT_STR(name='previous-Serving-MSC-Number', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Current_Previous_Systems_previous_Serving_MSC_Address = OCT_STR(name='previous-Serving-MSC-Address', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Current_Previous_Systems._cont = ASN1Dict([
        ('current-Serving-System-Identifier', _Current_Previous_Systems_current_Serving_System_Identifier),
        ('current-Serving-MSC-Number', _Current_Previous_Systems_current_Serving_MSC_Number),
        ('current-Serving-MSC-Address', _Current_Previous_Systems_current_Serving_MSC_Address),
        ('previous-Serving-System-Identifier', _Current_Previous_Systems_previous_Serving_System_Identifier),
        ('previous-Serving-MSC-Number', _Current_Previous_Systems_previous_Serving_MSC_Number),
        ('previous-Serving-MSC-Address', _Current_Previous_Systems_previous_Serving_MSC_Address),
        ])
    Current_Previous_Systems._ext = []
    
    _all_ = [
        lawfulInterceptDomainId,
        threeGPPSUBDomainId,
        hi2CSDomainId,
        _UmtsCS_IRIsContent_iRIContent,
        _UmtsCS_IRIsContent_iRISequence,
        UmtsCS_IRIsContent,
        _UmtsCS_IRISequence__item_,
        UmtsCS_IRISequence,
        _UmtsCS_IRIContent_iRI_Begin_record,
        _UmtsCS_IRIContent_iRI_End_record,
        _UmtsCS_IRIContent_iRI_Continue_record,
        _UmtsCS_IRIContent_iRI_Report_record,
        UmtsCS_IRIContent,
        _IRI_Parameters_hi2CSDomainId,
        _IRI_Parameters_iRIversion,
        _IRI_Parameters_lawfulInterceptionIdentifier,
        _IRI_Parameters_communicationIdentifier,
        _IRI_Parameters_timeStamp,
        _IRI_Parameters_intercepted_Call_Direct,
        _IRI_Parameters_intercepted_Call_State,
        _IRI_Parameters_ringingDuration,
        _IRI_Parameters_conversationDuration,
        _IRI_Parameters_locationOfTheTarget,
        __IRI_Parameters_partyInformation__item_,
        _IRI_Parameters_partyInformation,
        __IRI_Parameters_callContentLinkInformation_cCLink1Characteristics,
        __IRI_Parameters_callContentLinkInformation_cCLink2Characteristics,
        _IRI_Parameters_callContentLinkInformation,
        _IRI_Parameters_release_Reason_Of_Intercepted_Call,
        _IRI_Parameters_nature_Of_The_intercepted_call,
        _IRI_Parameters_serviceCenterAddress,
        _IRI_Parameters_sMS,
        _IRI_Parameters_cC_Link_Identifier,
        _IRI_Parameters_national_Parameters,
        _IRI_Parameters_umts_Cs_Event,
        _IRI_Parameters_serving_System_Identifier,
        _IRI_Parameters_carrierSpecificData,
        _IRI_Parameters_current_Previous_Systems,
        _IRI_Parameters_change_Of_Target_Identity,
        _IRI_Parameters_requesting_Network_Identifier,
        _IRI_Parameters_requesting_Node_Type,
        _IRI_Parameters_extendedLocParameters,
        _IRI_Parameters_locationErrorCode,
        _IRI_Parameters_national_HI2_ASN1parameters,
        IRI_Parameters,
        Umts_Cs_Event,
        Requesting_Node_Type,
        _Change_Of_Target_Identity_new_MSISDN,
        _Change_Of_Target_Identity_old_MSISDN,
        _Change_Of_Target_Identity_new_IMSI,
        _Change_Of_Target_Identity_old_IMSI,
        _Change_Of_Target_Identity_new_IMEI,
        _Change_Of_Target_Identity_old_IMEI,
        Change_Of_Target_Identity,
        _Current_Previous_Systems_current_Serving_System_Identifier,
        _Current_Previous_Systems_current_Serving_MSC_Number,
        _Current_Previous_Systems_current_Serving_MSC_Address,
        _Current_Previous_Systems_previous_Serving_System_Identifier,
        _Current_Previous_Systems_previous_Serving_MSC_Number,
        _Current_Previous_Systems_previous_Serving_MSC_Address,
        Current_Previous_Systems,
    ]

class UmtsHI2Operations:

    _name_  = 'UmtsHI2Operations'
    _oid_   = [0, 4, 0, 2, 2, 4, 1, 16, 1]
    
    _obj_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi2DomainId',
        'UmtsIRIsContent',
        'UmtsIRISequence',
        'UmtsIRIContent',
        'IRI-Parameters',
        'PANI-Header-Info',
        'PANI-Location',
        'PartyInformation',
        'Location',
        'GlobalCellID',
        'Rai',
        'Sai',
        'GSMLocation',
        'MapDatum',
        'UMTSLocation',
        'GeographicalCoordinates',
        'GA-Point',
        'GA-PointWithUnCertainty',
        'maxNrOfPoints',
        'GA-Polygon',
        'CivicAddress',
        'XmlCivicAddress',
        'DetailedCivicAddress',
        'SMS-report',
        'GPRSCorrelationNumber',
        'CorrelationValues',
        'IMS-VoIP-Correlation',
        'IRI-to-CC-Correlation',
        'IRI-to-IRI-Correlation',
        'GPRSEvent',
        'CSREvent',
        'IMSevent',
        'Current-Previous-Systems',
        'Change-Of-Target-Identity',
        'Requesting-Node-Type',
        'Services-Data-Information',
        'GPRS-parameters',
        'GPRSOperationErrorCode',
        'LDIevent',
        'UmtsQos',
        'MediaDecryption-info',
        'CCKeyInfo',
        'MediaSecFailureIndication',
        'PacketDataHeaderInformation',
        'PacketDataHeaderReport',
        'PacketDataHeaderMapped',
        'TPDU-direction',
        'PacketDataHeaderCopy',
        'PacketDataSummaryReport',
        'PacketFlowSummary',
        'ReportReason',
        'ReportInterval',
        'ExtendedLocParameters',
        'LocationErrorCode',
        'PTCEncryptionInfo',
        'PTC',
        'AccessPolicyType',
        'AlertIndicator',
        'AssociatePresenceStatus',
        'PresenceType',
        'Emergency',
        'EmergencyGroupState',
        'PTCType',
        'FloorActivity',
        'GroupAuthRule',
        'ImminentPerilInd',
        'ImplicitFloorReq',
        'InitiationCause',
        'IPADirection',
        'ListManagementAction',
        'ListManagementType',
        'Priority-Level',
        'PreEstStatus',
        'PTCAddress',
        'RegistrationRequest',
        'RegistrationOutcome',
        'RTPSetting',
        'Port-Number',
        'TalkburstControlSetting',
        'Talk-burst-reason-code',
        ]
    _type_ = [
        'UmtsIRIsContent',
        'UmtsIRISequence',
        'UmtsIRIContent',
        'IRI-Parameters',
        'PANI-Header-Info',
        'PANI-Location',
        'PartyInformation',
        'Location',
        'GlobalCellID',
        'Rai',
        'Sai',
        'GSMLocation',
        'MapDatum',
        'UMTSLocation',
        'GeographicalCoordinates',
        'GA-Point',
        'GA-PointWithUnCertainty',
        'GA-Polygon',
        'CivicAddress',
        'XmlCivicAddress',
        'DetailedCivicAddress',
        'SMS-report',
        'GPRSCorrelationNumber',
        'CorrelationValues',
        'IMS-VoIP-Correlation',
        'IRI-to-CC-Correlation',
        'IRI-to-IRI-Correlation',
        'GPRSEvent',
        'CSREvent',
        'IMSevent',
        'Current-Previous-Systems',
        'Change-Of-Target-Identity',
        'Requesting-Node-Type',
        'Services-Data-Information',
        'GPRS-parameters',
        'GPRSOperationErrorCode',
        'LDIevent',
        'UmtsQos',
        'MediaDecryption-info',
        'CCKeyInfo',
        'MediaSecFailureIndication',
        'PacketDataHeaderInformation',
        'PacketDataHeaderReport',
        'PacketDataHeaderMapped',
        'TPDU-direction',
        'PacketDataHeaderCopy',
        'PacketDataSummaryReport',
        'PacketFlowSummary',
        'ReportReason',
        'ReportInterval',
        'ExtendedLocParameters',
        'LocationErrorCode',
        'PTCEncryptionInfo',
        'PTC',
        'AccessPolicyType',
        'AlertIndicator',
        'AssociatePresenceStatus',
        'PresenceType',
        'Emergency',
        'EmergencyGroupState',
        'PTCType',
        'FloorActivity',
        'GroupAuthRule',
        'ImminentPerilInd',
        'ImplicitFloorReq',
        'InitiationCause',
        'IPADirection',
        'ListManagementAction',
        'ListManagementType',
        'Priority-Level',
        'PreEstStatus',
        'PTCAddress',
        'RegistrationRequest',
        'RegistrationOutcome',
        'RTPSetting',
        'Port-Number',
        'TalkburstControlSetting',
        'Talk-burst-reason-code',
        ]
    _set_ = [
        ]
    _val_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi2DomainId',
        'maxNrOfPoints',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< lawfulInterceptDomainId >-----#
    lawfulInterceptDomainId = OID(name='lawfulInterceptDomainId', mode=MODE_VALUE)
    lawfulInterceptDomainId._val = (0, 4, 0, 2, 2)
    
    #-----< threeGPPSUBDomainId >-----#
    threeGPPSUBDomainId = OID(name='threeGPPSUBDomainId', mode=MODE_VALUE)
    threeGPPSUBDomainId._val = (0, 4, 0, 2, 2, 4)
    
    #-----< hi2DomainId >-----#
    hi2DomainId = OID(name='hi2DomainId', mode=MODE_VALUE)
    hi2DomainId._val = (0, 4, 0, 2, 2, 4, 1, 16, 1)
    
    #-----< UmtsIRIsContent >-----#
    UmtsIRIsContent = CHOICE(name='UmtsIRIsContent', mode=MODE_TYPE)
    _UmtsIRIsContent_umtsiRIContent = CHOICE(name='umtsiRIContent', mode=MODE_TYPE, typeref=ASN1RefType(('UmtsHI2Operations', 'UmtsIRIContent')))
    _UmtsIRIsContent_umtsIRISequence = SEQ_OF(name='umtsIRISequence', mode=MODE_TYPE, typeref=ASN1RefType(('UmtsHI2Operations', 'UmtsIRISequence')))
    UmtsIRIsContent._cont = ASN1Dict([
        ('umtsiRIContent', _UmtsIRIsContent_umtsiRIContent),
        ('umtsIRISequence', _UmtsIRIsContent_umtsIRISequence),
        ])
    UmtsIRIsContent._ext = None
    
    #-----< UmtsIRISequence >-----#
    UmtsIRISequence = SEQ_OF(name='UmtsIRISequence', mode=MODE_TYPE)
    _UmtsIRISequence__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('UmtsHI2Operations', 'UmtsIRIContent')))
    UmtsIRISequence._cont = _UmtsIRISequence__item_
    
    #-----< UmtsIRIContent >-----#
    UmtsIRIContent = CHOICE(name='UmtsIRIContent', mode=MODE_TYPE)
    _UmtsIRIContent_iRI_Begin_record = SEQ(name='iRI-Begin-record', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'IRI-Parameters')))
    _UmtsIRIContent_iRI_End_record = SEQ(name='iRI-End-record', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'IRI-Parameters')))
    _UmtsIRIContent_iRI_Continue_record = SEQ(name='iRI-Continue-record', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'IRI-Parameters')))
    _UmtsIRIContent_iRI_Report_record = SEQ(name='iRI-Report-record', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'IRI-Parameters')))
    UmtsIRIContent._cont = ASN1Dict([
        ('iRI-Begin-record', _UmtsIRIContent_iRI_Begin_record),
        ('iRI-End-record', _UmtsIRIContent_iRI_End_record),
        ('iRI-Continue-record', _UmtsIRIContent_iRI_Continue_record),
        ('iRI-Report-record', _UmtsIRIContent_iRI_Report_record),
        ])
    UmtsIRIContent._ext = None
    
    #-----< IRI-Parameters >-----#
    IRI_Parameters = SEQ(name='IRI-Parameters', mode=MODE_TYPE)
    _IRI_Parameters_hi2DomainId = OID(name='hi2DomainId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IRI_Parameters_iRIversion = ENUM(name='iRIversion', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_iRIversion._cont = ASN1Dict([('version2', 2), ('version3', 3), ('version4', 4), ('version6', 6), ('lastVersion', 8)])
    _IRI_Parameters_iRIversion._ext = ['version3', 'version4', 'version6', 'lastVersion']
    _IRI_Parameters_lawfulInterceptionIdentifier = OCT_STR(name='lawfulInterceptionIdentifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')))
    _IRI_Parameters_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _IRI_Parameters_initiator = ENUM(name='initiator', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_initiator._cont = ASN1Dict([('not-Available', 0), ('originating-Target', 1), ('terminating-Target', 2)])
    _IRI_Parameters_initiator._ext = []
    _IRI_Parameters_locationOfTheTarget = SEQ(name='locationOfTheTarget', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'Location')), opt=True)
    _IRI_Parameters_partyInformation = SET_OF(name='partyInformation', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_partyInformation__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('UmtsHI2Operations', 'PartyInformation')))
    _IRI_Parameters_partyInformation._cont = __IRI_Parameters_partyInformation__item_
    _IRI_Parameters_partyInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    _IRI_Parameters_serviceCenterAddress = SEQ(name='serviceCenterAddress', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PartyInformation')), opt=True)
    _IRI_Parameters_sMS = SEQ(name='sMS', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'SMS-report')), opt=True)
    _IRI_Parameters_national_Parameters = SET_OF(name='national-Parameters', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'National-Parameters')), opt=True)
    _IRI_Parameters_gPRSCorrelationNumber = OCT_STR(name='gPRSCorrelationNumber', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'GPRSCorrelationNumber')), opt=True)
    _IRI_Parameters_gPRSevent = ENUM(name='gPRSevent', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'GPRSEvent')), opt=True)
    _IRI_Parameters_sgsnAddress = CHOICE(name='sgsnAddress', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    _IRI_Parameters_gPRSOperationErrorCode = OCT_STR(name='gPRSOperationErrorCode', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'GPRSOperationErrorCode')), opt=True)
    _IRI_Parameters_ggsnAddress = CHOICE(name='ggsnAddress', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    _IRI_Parameters_qOS = CHOICE(name='qOS', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'UmtsQos')), opt=True)
    _IRI_Parameters_networkIdentifier = SEQ(name='networkIdentifier', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Network-Identifier')), opt=True)
    _IRI_Parameters_sMSOriginatingAddress = CHOICE(name='sMSOriginatingAddress', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    _IRI_Parameters_sMSTerminatingAddress = CHOICE(name='sMSTerminatingAddress', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    _IRI_Parameters_iMSevent = ENUM(name='iMSevent', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'IMSevent')), opt=True)
    _IRI_Parameters_sIPMessage = OCT_STR(name='sIPMessage', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_servingSGSN_number = OCT_STR(name='servingSGSN-number', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_servingSGSN_number._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    _IRI_Parameters_servingSGSN_address = OCT_STR(name='servingSGSN-address', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_servingSGSN_address._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=17)], ev=None, er=[])
    _IRI_Parameters_ldiEvent = ENUM(name='ldiEvent', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'LDIevent')), opt=True)
    _IRI_Parameters_correlation = CHOICE(name='correlation', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'CorrelationValues')), opt=True)
    _IRI_Parameters_mediaDecryption_info = SEQ_OF(name='mediaDecryption-info', mode=MODE_TYPE, tag=(36, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'MediaDecryption-info')), opt=True)
    _IRI_Parameters_servingS4_SGSN_address = OCT_STR(name='servingS4-SGSN-address', mode=MODE_TYPE, tag=(37, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_sipMessageHeaderOffer = OCT_STR(name='sipMessageHeaderOffer', mode=MODE_TYPE, tag=(38, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_sipMessageHeaderAnswer = OCT_STR(name='sipMessageHeaderAnswer', mode=MODE_TYPE, tag=(39, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_sdpOffer = OCT_STR(name='sdpOffer', mode=MODE_TYPE, tag=(40, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_sdpAnswer = OCT_STR(name='sdpAnswer', mode=MODE_TYPE, tag=(41, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_uLITimestamp = OCT_STR(name='uLITimestamp', mode=MODE_TYPE, tag=(42, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_uLITimestamp._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _IRI_Parameters_packetDataHeaderInformation = CHOICE(name='packetDataHeaderInformation', mode=MODE_TYPE, tag=(43, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PacketDataHeaderInformation')), opt=True)
    _IRI_Parameters_mediaSecFailureIndication = ENUM(name='mediaSecFailureIndication', mode=MODE_TYPE, tag=(44, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'MediaSecFailureIndication')), opt=True)
    _IRI_Parameters_pANI_Header_Info = SEQ_OF(name='pANI-Header-Info', mode=MODE_TYPE, tag=(45, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IRI_Parameters_pANI_Header_Info__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('UmtsHI2Operations', 'PANI-Header-Info')))
    _IRI_Parameters_pANI_Header_Info._cont = __IRI_Parameters_pANI_Header_Info__item_
    _IRI_Parameters_imsVoIP = SET_OF(name='imsVoIP', mode=MODE_TYPE, tag=(46, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'IMS-VoIP-Correlation')), opt=True)
    _IRI_Parameters_xCAPmessage = OCT_STR(name='xCAPmessage', mode=MODE_TYPE, tag=(47, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_ccUnavailableReason = STR_PRINT(name='ccUnavailableReason', mode=MODE_TYPE, tag=(48, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_carrierSpecificData = OCT_STR(name='carrierSpecificData', mode=MODE_TYPE, tag=(49, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_current_Previous_Systems = SEQ(name='current-Previous-Systems', mode=MODE_TYPE, tag=(50, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'Current-Previous-Systems')), opt=True)
    _IRI_Parameters_change_Of_Target_Identity = SEQ(name='change-Of-Target-Identity', mode=MODE_TYPE, tag=(51, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'Change-Of-Target-Identity')), opt=True)
    _IRI_Parameters_requesting_Network_Identifier = OCT_STR(name='requesting-Network-Identifier', mode=MODE_TYPE, tag=(52, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_requesting_Node_Type = ENUM(name='requesting-Node-Type', mode=MODE_TYPE, tag=(53, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'Requesting-Node-Type')), opt=True)
    _IRI_Parameters_serving_System_Identifier = OCT_STR(name='serving-System-Identifier', mode=MODE_TYPE, tag=(54, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IRI_Parameters_extendedLocParameters = SEQ(name='extendedLocParameters', mode=MODE_TYPE, tag=(55, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'ExtendedLocParameters')), opt=True)
    _IRI_Parameters_locationErrorCode = INT(name='locationErrorCode', mode=MODE_TYPE, tag=(56, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'LocationErrorCode')), opt=True)
    _IRI_Parameters_cSREvent = ENUM(name='cSREvent', mode=MODE_TYPE, tag=(57, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'CSREvent')), opt=True)
    _IRI_Parameters_ptc = SEQ(name='ptc', mode=MODE_TYPE, tag=(58, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PTC')), opt=True)
    _IRI_Parameters_ptcEncryption = SEQ(name='ptcEncryption', mode=MODE_TYPE, tag=(59, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PTCEncryptionInfo')), opt=True)
    _IRI_Parameters_national_HI2_ASN1parameters = SEQ(name='national-HI2-ASN1parameters', mode=MODE_TYPE, tag=(255, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'National-HI2-ASN1parameters')), opt=True)
    IRI_Parameters._cont = ASN1Dict([
        ('hi2DomainId', _IRI_Parameters_hi2DomainId),
        ('iRIversion', _IRI_Parameters_iRIversion),
        ('lawfulInterceptionIdentifier', _IRI_Parameters_lawfulInterceptionIdentifier),
        ('timeStamp', _IRI_Parameters_timeStamp),
        ('initiator', _IRI_Parameters_initiator),
        ('locationOfTheTarget', _IRI_Parameters_locationOfTheTarget),
        ('partyInformation', _IRI_Parameters_partyInformation),
        ('serviceCenterAddress', _IRI_Parameters_serviceCenterAddress),
        ('sMS', _IRI_Parameters_sMS),
        ('national-Parameters', _IRI_Parameters_national_Parameters),
        ('gPRSCorrelationNumber', _IRI_Parameters_gPRSCorrelationNumber),
        ('gPRSevent', _IRI_Parameters_gPRSevent),
        ('sgsnAddress', _IRI_Parameters_sgsnAddress),
        ('gPRSOperationErrorCode', _IRI_Parameters_gPRSOperationErrorCode),
        ('ggsnAddress', _IRI_Parameters_ggsnAddress),
        ('qOS', _IRI_Parameters_qOS),
        ('networkIdentifier', _IRI_Parameters_networkIdentifier),
        ('sMSOriginatingAddress', _IRI_Parameters_sMSOriginatingAddress),
        ('sMSTerminatingAddress', _IRI_Parameters_sMSTerminatingAddress),
        ('iMSevent', _IRI_Parameters_iMSevent),
        ('sIPMessage', _IRI_Parameters_sIPMessage),
        ('servingSGSN-number', _IRI_Parameters_servingSGSN_number),
        ('servingSGSN-address', _IRI_Parameters_servingSGSN_address),
        ('ldiEvent', _IRI_Parameters_ldiEvent),
        ('correlation', _IRI_Parameters_correlation),
        ('mediaDecryption-info', _IRI_Parameters_mediaDecryption_info),
        ('servingS4-SGSN-address', _IRI_Parameters_servingS4_SGSN_address),
        ('sipMessageHeaderOffer', _IRI_Parameters_sipMessageHeaderOffer),
        ('sipMessageHeaderAnswer', _IRI_Parameters_sipMessageHeaderAnswer),
        ('sdpOffer', _IRI_Parameters_sdpOffer),
        ('sdpAnswer', _IRI_Parameters_sdpAnswer),
        ('uLITimestamp', _IRI_Parameters_uLITimestamp),
        ('packetDataHeaderInformation', _IRI_Parameters_packetDataHeaderInformation),
        ('mediaSecFailureIndication', _IRI_Parameters_mediaSecFailureIndication),
        ('pANI-Header-Info', _IRI_Parameters_pANI_Header_Info),
        ('imsVoIP', _IRI_Parameters_imsVoIP),
        ('xCAPmessage', _IRI_Parameters_xCAPmessage),
        ('ccUnavailableReason', _IRI_Parameters_ccUnavailableReason),
        ('carrierSpecificData', _IRI_Parameters_carrierSpecificData),
        ('current-Previous-Systems', _IRI_Parameters_current_Previous_Systems),
        ('change-Of-Target-Identity', _IRI_Parameters_change_Of_Target_Identity),
        ('requesting-Network-Identifier', _IRI_Parameters_requesting_Network_Identifier),
        ('requesting-Node-Type', _IRI_Parameters_requesting_Node_Type),
        ('serving-System-Identifier', _IRI_Parameters_serving_System_Identifier),
        ('extendedLocParameters', _IRI_Parameters_extendedLocParameters),
        ('locationErrorCode', _IRI_Parameters_locationErrorCode),
        ('cSREvent', _IRI_Parameters_cSREvent),
        ('ptc', _IRI_Parameters_ptc),
        ('ptcEncryption', _IRI_Parameters_ptcEncryption),
        ('national-HI2-ASN1parameters', _IRI_Parameters_national_HI2_ASN1parameters),
        ])
    IRI_Parameters._ext = ['ldiEvent', 'correlation', 'mediaDecryption-info', 'servingS4-SGSN-address', 'sipMessageHeaderOffer', 'sipMessageHeaderAnswer', 'sdpOffer', 'sdpAnswer', 'uLITimestamp', 'packetDataHeaderInformation', 'mediaSecFailureIndication', 'pANI-Header-Info', 'imsVoIP', 'xCAPmessage', 'ccUnavailableReason', 'carrierSpecificData', 'current-Previous-Systems', 'change-Of-Target-Identity', 'requesting-Network-Identifier', 'requesting-Node-Type', 'serving-System-Identifier', 'extendedLocParameters', 'locationErrorCode', 'cSREvent', 'ptc', 'ptcEncryption', 'national-HI2-ASN1parameters']
    
    #-----< PANI-Header-Info >-----#
    PANI_Header_Info = SEQ(name='PANI-Header-Info', mode=MODE_TYPE)
    _PANI_Header_Info_access_Type = OCT_STR(name='access-Type', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PANI_Header_Info_access_Class = OCT_STR(name='access-Class', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PANI_Header_Info_network_Provided = NULL(name='network-Provided', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PANI_Header_Info_pANI_Location = SEQ(name='pANI-Location', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PANI-Location')), opt=True)
    PANI_Header_Info._cont = ASN1Dict([
        ('access-Type', _PANI_Header_Info_access_Type),
        ('access-Class', _PANI_Header_Info_access_Class),
        ('network-Provided', _PANI_Header_Info_network_Provided),
        ('pANI-Location', _PANI_Header_Info_pANI_Location),
        ])
    PANI_Header_Info._ext = []
    
    #-----< PANI-Location >-----#
    PANI_Location = SEQ(name='PANI-Location', mode=MODE_TYPE)
    _PANI_Location_raw_Location = OCT_STR(name='raw-Location', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PANI_Location_location = SEQ(name='location', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'Location')), opt=True)
    PANI_Location._cont = ASN1Dict([
        ('raw-Location', _PANI_Location_raw_Location),
        ('location', _PANI_Location_location),
        ])
    PANI_Location._ext = []
    
    #-----< PartyInformation >-----#
    PartyInformation = SEQ(name='PartyInformation', mode=MODE_TYPE)
    _PartyInformation_party_Qualifier = ENUM(name='party-Qualifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PartyInformation_party_Qualifier._cont = ASN1Dict([('gPRS-Target', 3)])
    _PartyInformation_party_Qualifier._ext = []
    _PartyInformation_partyIdentity = SEQ(name='partyIdentity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PartyInformation_partyIdentity_imei = OCT_STR(name='imei', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_imei._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    __PartyInformation_partyIdentity_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_imsi._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    __PartyInformation_partyIdentity_msISDN = OCT_STR(name='msISDN', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_msISDN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    __PartyInformation_partyIdentity_e164_Format = OCT_STR(name='e164-Format', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_e164_Format._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    __PartyInformation_partyIdentity_sip_uri = OCT_STR(name='sip-uri', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_tel_uri = OCT_STR(name='tel-uri', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_x_3GPP_Asserted_Identity = OCT_STR(name='x-3GPP-Asserted-Identity', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PartyInformation_partyIdentity_xUI = OCT_STR(name='xUI', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PartyInformation_partyIdentity._cont = ASN1Dict([
        ('imei', __PartyInformation_partyIdentity_imei),
        ('imsi', __PartyInformation_partyIdentity_imsi),
        ('msISDN', __PartyInformation_partyIdentity_msISDN),
        ('e164-Format', __PartyInformation_partyIdentity_e164_Format),
        ('sip-uri', __PartyInformation_partyIdentity_sip_uri),
        ('tel-uri', __PartyInformation_partyIdentity_tel_uri),
        ('x-3GPP-Asserted-Identity', __PartyInformation_partyIdentity_x_3GPP_Asserted_Identity),
        ('xUI', __PartyInformation_partyIdentity_xUI),
        ])
    _PartyInformation_partyIdentity._ext = ['tel-uri', 'x-3GPP-Asserted-Identity', 'xUI']
    _PartyInformation_services_Data_Information = SEQ(name='services-Data-Information', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'Services-Data-Information')), opt=True)
    PartyInformation._cont = ASN1Dict([
        ('party-Qualifier', _PartyInformation_party_Qualifier),
        ('partyIdentity', _PartyInformation_partyIdentity),
        ('services-Data-Information', _PartyInformation_services_Data_Information),
        ])
    PartyInformation._ext = []
    
    #-----< Location >-----#
    Location = SEQ(name='Location', mode=MODE_TYPE)
    _Location_e164_Number = OCT_STR(name='e164-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Location_e164_Number._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=25)], ev=None, er=[])
    _Location_globalCellID = OCT_STR(name='globalCellID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'GlobalCellID')), opt=True)
    _Location_rAI = OCT_STR(name='rAI', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'Rai')), opt=True)
    _Location_gsmLocation = CHOICE(name='gsmLocation', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'GSMLocation')), opt=True)
    _Location_umtsLocation = CHOICE(name='umtsLocation', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'UMTSLocation')), opt=True)
    _Location_sAI = OCT_STR(name='sAI', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'Sai')), opt=True)
    _Location_oldRAI = OCT_STR(name='oldRAI', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'Rai')), opt=True)
    _Location_tAI = OCT_STR(name='tAI', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Location_tAI._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    _Location_eCGI = OCT_STR(name='eCGI', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Location_eCGI._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _Location_civicAddress = CHOICE(name='civicAddress', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'CivicAddress')), opt=True)
    _Location_operatorSpecificInfo = OCT_STR(name='operatorSpecificInfo', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Location_uELocationTimestamp = CHOICE(name='uELocationTimestamp', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Location_uELocationTimestamp_timestamp = CHOICE(name='timestamp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    __Location_uELocationTimestamp_timestampUnknown = NULL(name='timestampUnknown', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Location_uELocationTimestamp._cont = ASN1Dict([
        ('timestamp', __Location_uELocationTimestamp_timestamp),
        ('timestampUnknown', __Location_uELocationTimestamp_timestampUnknown),
        ])
    _Location_uELocationTimestamp._ext = []
    Location._cont = ASN1Dict([
        ('e164-Number', _Location_e164_Number),
        ('globalCellID', _Location_globalCellID),
        ('rAI', _Location_rAI),
        ('gsmLocation', _Location_gsmLocation),
        ('umtsLocation', _Location_umtsLocation),
        ('sAI', _Location_sAI),
        ('oldRAI', _Location_oldRAI),
        ('tAI', _Location_tAI),
        ('eCGI', _Location_eCGI),
        ('civicAddress', _Location_civicAddress),
        ('operatorSpecificInfo', _Location_operatorSpecificInfo),
        ('uELocationTimestamp', _Location_uELocationTimestamp),
        ])
    Location._ext = ['oldRAI', 'tAI', 'eCGI', 'civicAddress', 'operatorSpecificInfo', 'uELocationTimestamp']
    
    #-----< GlobalCellID >-----#
    GlobalCellID = OCT_STR(name='GlobalCellID', mode=MODE_TYPE)
    GlobalCellID._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=7)], ev=None, er=[])
    
    #-----< Rai >-----#
    Rai = OCT_STR(name='Rai', mode=MODE_TYPE)
    Rai._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    
    #-----< Sai >-----#
    Sai = OCT_STR(name='Sai', mode=MODE_TYPE)
    Sai._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    
    #-----< GSMLocation >-----#
    GSMLocation = CHOICE(name='GSMLocation', mode=MODE_TYPE)
    _GSMLocation_geoCoordinates = SEQ(name='geoCoordinates', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_geoCoordinates_latitude = STR_PRINT(name='latitude', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_geoCoordinates_latitude._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=7, ub=10)], ev=None, er=[])
    __GSMLocation_geoCoordinates_longitude = STR_PRINT(name='longitude', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_geoCoordinates_longitude._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=8, ub=11)], ev=None, er=[])
    __GSMLocation_geoCoordinates_mapDatum = ENUM(name='mapDatum', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'MapDatum')), default='wGS84')
    __GSMLocation_geoCoordinates_azimuth = INT(name='azimuth', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GSMLocation_geoCoordinates_azimuth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=359)], ev=None, er=[])
    _GSMLocation_geoCoordinates._cont = ASN1Dict([
        ('latitude', __GSMLocation_geoCoordinates_latitude),
        ('longitude', __GSMLocation_geoCoordinates_longitude),
        ('mapDatum', __GSMLocation_geoCoordinates_mapDatum),
        ('azimuth', __GSMLocation_geoCoordinates_azimuth),
        ])
    _GSMLocation_geoCoordinates._ext = ['azimuth']
    _GSMLocation_utmCoordinates = SEQ(name='utmCoordinates', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_utmCoordinates_utm_East = STR_PRINT(name='utm-East', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_utmCoordinates_utm_East._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    __GSMLocation_utmCoordinates_utm_North = STR_PRINT(name='utm-North', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_utmCoordinates_utm_North._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    __GSMLocation_utmCoordinates_mapDatum = ENUM(name='mapDatum', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'MapDatum')), default='wGS84')
    __GSMLocation_utmCoordinates_azimuth = INT(name='azimuth', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GSMLocation_utmCoordinates_azimuth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=359)], ev=None, er=[])
    _GSMLocation_utmCoordinates._cont = ASN1Dict([
        ('utm-East', __GSMLocation_utmCoordinates_utm_East),
        ('utm-North', __GSMLocation_utmCoordinates_utm_North),
        ('mapDatum', __GSMLocation_utmCoordinates_mapDatum),
        ('azimuth', __GSMLocation_utmCoordinates_azimuth),
        ])
    _GSMLocation_utmCoordinates._ext = ['azimuth']
    _GSMLocation_utmRefCoordinates = SEQ(name='utmRefCoordinates', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GSMLocation_utmRefCoordinates_utmref_string = STR_PRINT(name='utmref-string', mode=MODE_TYPE)
    __GSMLocation_utmRefCoordinates_utmref_string._const_sz = ASN1Set(rv=[13], rr=[], ev=None, er=[])
    __GSMLocation_utmRefCoordinates_mapDatum = ENUM(name='mapDatum', mode=MODE_TYPE, typeref=ASN1RefType(('UmtsHI2Operations', 'MapDatum')), default='wGS84')
    _GSMLocation_utmRefCoordinates._cont = ASN1Dict([
        ('utmref-string', __GSMLocation_utmRefCoordinates_utmref_string),
        ('mapDatum', __GSMLocation_utmRefCoordinates_mapDatum),
        ])
    _GSMLocation_utmRefCoordinates._ext = []
    _GSMLocation_wGS84Coordinates = OCT_STR(name='wGS84Coordinates', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    GSMLocation._cont = ASN1Dict([
        ('geoCoordinates', _GSMLocation_geoCoordinates),
        ('utmCoordinates', _GSMLocation_utmCoordinates),
        ('utmRefCoordinates', _GSMLocation_utmRefCoordinates),
        ('wGS84Coordinates', _GSMLocation_wGS84Coordinates),
        ])
    GSMLocation._ext = None
    
    #-----< MapDatum >-----#
    MapDatum = ENUM(name='MapDatum', mode=MODE_TYPE)
    MapDatum._cont = ASN1Dict([('wGS84', 0), ('wGS72', 1), ('eD50', 2)])
    MapDatum._ext = []
    
    #-----< UMTSLocation >-----#
    UMTSLocation = CHOICE(name='UMTSLocation', mode=MODE_TYPE)
    _UMTSLocation_point = SEQ(name='point', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'GA-Point')))
    _UMTSLocation_pointWithUnCertainty = SEQ(name='pointWithUnCertainty', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'GA-PointWithUnCertainty')))
    _UMTSLocation_polygon = SEQ_OF(name='polygon', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'GA-Polygon')))
    UMTSLocation._cont = ASN1Dict([
        ('point', _UMTSLocation_point),
        ('pointWithUnCertainty', _UMTSLocation_pointWithUnCertainty),
        ('polygon', _UMTSLocation_polygon),
        ])
    UMTSLocation._ext = None
    
    #-----< GeographicalCoordinates >-----#
    GeographicalCoordinates = SEQ(name='GeographicalCoordinates', mode=MODE_TYPE)
    _GeographicalCoordinates_latitudeSign = ENUM(name='latitudeSign', mode=MODE_TYPE)
    _GeographicalCoordinates_latitudeSign._cont = ASN1Dict([('north', 0), ('south', 1)])
    _GeographicalCoordinates_latitudeSign._ext = None
    _GeographicalCoordinates_latitude = INT(name='latitude', mode=MODE_TYPE)
    _GeographicalCoordinates_latitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8388607)], ev=None, er=[])
    _GeographicalCoordinates_longitude = INT(name='longitude', mode=MODE_TYPE)
    _GeographicalCoordinates_longitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    GeographicalCoordinates._cont = ASN1Dict([
        ('latitudeSign', _GeographicalCoordinates_latitudeSign),
        ('latitude', _GeographicalCoordinates_latitude),
        ('longitude', _GeographicalCoordinates_longitude),
        ])
    GeographicalCoordinates._ext = []
    
    #-----< GA-Point >-----#
    GA_Point = SEQ(name='GA-Point', mode=MODE_TYPE)
    _GA_Point_geographicalCoordinates = SEQ(name='geographicalCoordinates', mode=MODE_TYPE, typeref=ASN1RefType(('UmtsHI2Operations', 'GeographicalCoordinates')))
    GA_Point._cont = ASN1Dict([
        ('geographicalCoordinates', _GA_Point_geographicalCoordinates),
        ])
    GA_Point._ext = []
    
    #-----< GA-PointWithUnCertainty >-----#
    GA_PointWithUnCertainty = SEQ(name='GA-PointWithUnCertainty', mode=MODE_TYPE)
    _GA_PointWithUnCertainty_geographicalCoordinates = SEQ(name='geographicalCoordinates', mode=MODE_TYPE, typeref=ASN1RefType(('UmtsHI2Operations', 'GeographicalCoordinates')))
    _GA_PointWithUnCertainty_uncertaintyCode = INT(name='uncertaintyCode', mode=MODE_TYPE)
    _GA_PointWithUnCertainty_uncertaintyCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    GA_PointWithUnCertainty._cont = ASN1Dict([
        ('geographicalCoordinates', _GA_PointWithUnCertainty_geographicalCoordinates),
        ('uncertaintyCode', _GA_PointWithUnCertainty_uncertaintyCode),
        ])
    GA_PointWithUnCertainty._ext = None
    
    #-----< maxNrOfPoints >-----#
    maxNrOfPoints = INT(name='maxNrOfPoints', mode=MODE_VALUE)
    maxNrOfPoints._val = 15
    
    #-----< GA-Polygon >-----#
    GA_Polygon = SEQ_OF(name='GA-Polygon', mode=MODE_TYPE)
    _GA_Polygon__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    __GA_Polygon__item__geographicalCoordinates = SEQ(name='geographicalCoordinates', mode=MODE_TYPE, typeref=ASN1RefType(('UmtsHI2Operations', 'GeographicalCoordinates')))
    _GA_Polygon__item_._cont = ASN1Dict([
        ('geographicalCoordinates', __GA_Polygon__item__geographicalCoordinates),
        ])
    _GA_Polygon__item_._ext = []
    GA_Polygon._cont = _GA_Polygon__item_
    GA_Polygon._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    
    #-----< CivicAddress >-----#
    CivicAddress = CHOICE(name='CivicAddress', mode=MODE_TYPE)
    _CivicAddress_detailedCivicAddress = SET_OF(name='detailedCivicAddress', mode=MODE_TYPE)
    __CivicAddress_detailedCivicAddress__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('UmtsHI2Operations', 'DetailedCivicAddress')))
    _CivicAddress_detailedCivicAddress._cont = __CivicAddress_detailedCivicAddress__item_
    _CivicAddress_xmlCivicAddress = STR_UTF8(name='xmlCivicAddress', mode=MODE_TYPE, typeref=ASN1RefType(('UmtsHI2Operations', 'XmlCivicAddress')))
    CivicAddress._cont = ASN1Dict([
        ('detailedCivicAddress', _CivicAddress_detailedCivicAddress),
        ('xmlCivicAddress', _CivicAddress_xmlCivicAddress),
        ])
    CivicAddress._ext = []
    
    #-----< XmlCivicAddress >-----#
    XmlCivicAddress = STR_UTF8(name='XmlCivicAddress', mode=MODE_TYPE)
    
    #-----< DetailedCivicAddress >-----#
    DetailedCivicAddress = SEQ(name='DetailedCivicAddress', mode=MODE_TYPE)
    _DetailedCivicAddress_building = STR_UTF8(name='building', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_room = STR_UTF8(name='room', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_placeType = STR_UTF8(name='placeType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_postalCommunityName = STR_UTF8(name='postalCommunityName', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_additionalCode = STR_UTF8(name='additionalCode', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_seat = STR_UTF8(name='seat', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_primaryRoad = STR_UTF8(name='primaryRoad', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_primaryRoadDirection = STR_UTF8(name='primaryRoadDirection', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_trailingStreetSuffix = STR_UTF8(name='trailingStreetSuffix', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_streetSuffix = STR_UTF8(name='streetSuffix', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_houseNumber = STR_UTF8(name='houseNumber', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_houseNumberSuffix = STR_UTF8(name='houseNumberSuffix', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_landmarkAddress = STR_UTF8(name='landmarkAddress', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_additionalLocation = STR_UTF8(name='additionalLocation', mode=MODE_TYPE, tag=(114, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_name = STR_UTF8(name='name', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_floor = STR_UTF8(name='floor', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_primaryStreet = STR_UTF8(name='primaryStreet', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_primaryStreetDirection = STR_UTF8(name='primaryStreetDirection', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_roadSection = STR_UTF8(name='roadSection', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_roadBranch = STR_UTF8(name='roadBranch', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_roadSubBranch = STR_UTF8(name='roadSubBranch', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_roadPreModifier = STR_UTF8(name='roadPreModifier', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_roadPostModifier = STR_UTF8(name='roadPostModifier', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_postalCode = STR_UTF8(name='postalCode', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_town = STR_UTF8(name='town', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_county = STR_UTF8(name='county', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetailedCivicAddress_country = STR_UTF8(name='country', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DetailedCivicAddress_language = STR_UTF8(name='language', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    DetailedCivicAddress._cont = ASN1Dict([
        ('building', _DetailedCivicAddress_building),
        ('room', _DetailedCivicAddress_room),
        ('placeType', _DetailedCivicAddress_placeType),
        ('postalCommunityName', _DetailedCivicAddress_postalCommunityName),
        ('additionalCode', _DetailedCivicAddress_additionalCode),
        ('seat', _DetailedCivicAddress_seat),
        ('primaryRoad', _DetailedCivicAddress_primaryRoad),
        ('primaryRoadDirection', _DetailedCivicAddress_primaryRoadDirection),
        ('trailingStreetSuffix', _DetailedCivicAddress_trailingStreetSuffix),
        ('streetSuffix', _DetailedCivicAddress_streetSuffix),
        ('houseNumber', _DetailedCivicAddress_houseNumber),
        ('houseNumberSuffix', _DetailedCivicAddress_houseNumberSuffix),
        ('landmarkAddress', _DetailedCivicAddress_landmarkAddress),
        ('additionalLocation', _DetailedCivicAddress_additionalLocation),
        ('name', _DetailedCivicAddress_name),
        ('floor', _DetailedCivicAddress_floor),
        ('primaryStreet', _DetailedCivicAddress_primaryStreet),
        ('primaryStreetDirection', _DetailedCivicAddress_primaryStreetDirection),
        ('roadSection', _DetailedCivicAddress_roadSection),
        ('roadBranch', _DetailedCivicAddress_roadBranch),
        ('roadSubBranch', _DetailedCivicAddress_roadSubBranch),
        ('roadPreModifier', _DetailedCivicAddress_roadPreModifier),
        ('roadPostModifier', _DetailedCivicAddress_roadPostModifier),
        ('postalCode', _DetailedCivicAddress_postalCode),
        ('town', _DetailedCivicAddress_town),
        ('county', _DetailedCivicAddress_county),
        ('country', _DetailedCivicAddress_country),
        ('language', _DetailedCivicAddress_language),
        ])
    DetailedCivicAddress._ext = []
    
    #-----< SMS-report >-----#
    SMS_report = SEQ(name='SMS-report', mode=MODE_TYPE)
    _SMS_report_sMS_Contents = SEQ(name='sMS-Contents', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SMS_report_sMS_Contents_sms_initiator = ENUM(name='sms-initiator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SMS_report_sMS_Contents_sms_initiator._cont = ASN1Dict([('target', 0), ('server', 1), ('undefined-party', 2)])
    __SMS_report_sMS_Contents_sms_initiator._ext = []
    __SMS_report_sMS_Contents_transfer_status = ENUM(name='transfer-status', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SMS_report_sMS_Contents_transfer_status._cont = ASN1Dict([('succeed-transfer', 0), ('not-succeed-transfer', 1), ('undefined', 2)])
    __SMS_report_sMS_Contents_transfer_status._ext = []
    __SMS_report_sMS_Contents_other_message = ENUM(name='other-message', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SMS_report_sMS_Contents_other_message._cont = ASN1Dict([('yes', 0), ('no', 1), ('undefined', 2)])
    __SMS_report_sMS_Contents_other_message._ext = []
    __SMS_report_sMS_Contents_content = OCT_STR(name='content', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SMS_report_sMS_Contents_content._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=270)], ev=None, er=[])
    _SMS_report_sMS_Contents._cont = ASN1Dict([
        ('sms-initiator', __SMS_report_sMS_Contents_sms_initiator),
        ('transfer-status', __SMS_report_sMS_Contents_transfer_status),
        ('other-message', __SMS_report_sMS_Contents_other_message),
        ('content', __SMS_report_sMS_Contents_content),
        ])
    _SMS_report_sMS_Contents._ext = []
    SMS_report._cont = ASN1Dict([
        ('sMS-Contents', _SMS_report_sMS_Contents),
        ])
    SMS_report._ext = None
    
    #-----< GPRSCorrelationNumber >-----#
    GPRSCorrelationNumber = OCT_STR(name='GPRSCorrelationNumber', mode=MODE_TYPE)
    GPRSCorrelationNumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=8, ub=20)], ev=None, er=[])
    
    #-----< CorrelationValues >-----#
    CorrelationValues = CHOICE(name='CorrelationValues', mode=MODE_TYPE)
    _CorrelationValues_iri_to_CC = SEQ(name='iri-to-CC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'IRI-to-CC-Correlation')))
    _CorrelationValues_iri_to_iri = OCT_STR(name='iri-to-iri', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'IRI-to-IRI-Correlation')))
    _CorrelationValues_both_IRI_CC = SEQ(name='both-IRI-CC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CorrelationValues_both_IRI_CC_iri_CC = SEQ(name='iri-CC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'IRI-to-CC-Correlation')))
    __CorrelationValues_both_IRI_CC_iri_IRI = OCT_STR(name='iri-IRI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'IRI-to-IRI-Correlation')))
    _CorrelationValues_both_IRI_CC._cont = ASN1Dict([
        ('iri-CC', __CorrelationValues_both_IRI_CC_iri_CC),
        ('iri-IRI', __CorrelationValues_both_IRI_CC_iri_IRI),
        ])
    _CorrelationValues_both_IRI_CC._ext = None
    CorrelationValues._cont = ASN1Dict([
        ('iri-to-CC', _CorrelationValues_iri_to_CC),
        ('iri-to-iri', _CorrelationValues_iri_to_iri),
        ('both-IRI-CC', _CorrelationValues_both_IRI_CC),
        ])
    CorrelationValues._ext = None
    
    #-----< IMS-VoIP-Correlation >-----#
    IMS_VoIP_Correlation = SET_OF(name='IMS-VoIP-Correlation', mode=MODE_TYPE)
    _IMS_VoIP_Correlation__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    __IMS_VoIP_Correlation__item__ims_iri = OCT_STR(name='ims-iri', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'IRI-to-IRI-Correlation')))
    __IMS_VoIP_Correlation__item__ims_cc = SEQ(name='ims-cc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'IRI-to-CC-Correlation')), opt=True)
    _IMS_VoIP_Correlation__item_._cont = ASN1Dict([
        ('ims-iri', __IMS_VoIP_Correlation__item__ims_iri),
        ('ims-cc', __IMS_VoIP_Correlation__item__ims_cc),
        ])
    _IMS_VoIP_Correlation__item_._ext = None
    IMS_VoIP_Correlation._cont = _IMS_VoIP_Correlation__item_
    
    #-----< IRI-to-CC-Correlation >-----#
    IRI_to_CC_Correlation = SEQ(name='IRI-to-CC-Correlation', mode=MODE_TYPE)
    _IRI_to_CC_Correlation_cc = SET_OF(name='cc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __IRI_to_CC_Correlation_cc__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _IRI_to_CC_Correlation_cc._cont = __IRI_to_CC_Correlation_cc__item_
    _IRI_to_CC_Correlation_iri = OCT_STR(name='iri', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    IRI_to_CC_Correlation._cont = ASN1Dict([
        ('cc', _IRI_to_CC_Correlation_cc),
        ('iri', _IRI_to_CC_Correlation_iri),
        ])
    IRI_to_CC_Correlation._ext = None
    
    #-----< IRI-to-IRI-Correlation >-----#
    IRI_to_IRI_Correlation = OCT_STR(name='IRI-to-IRI-Correlation', mode=MODE_TYPE)
    
    #-----< GPRSEvent >-----#
    GPRSEvent = ENUM(name='GPRSEvent', mode=MODE_TYPE)
    GPRSEvent._cont = ASN1Dict([('pDPContextActivation', 1), ('startOfInterceptionWithPDPContextActive', 2), ('pDPContextDeactivation', 4), ('gPRSAttach', 5), ('gPRSDetach', 6), ('locationInfoUpdate', 10), ('sMS', 11), ('pDPContextModification', 13), ('servingSystem', 14), ('startOfInterceptionWithMSAttached', 15), ('packetDataHeaderInformation', 16), ('hSS-Subscriber-Record-Change', 17), ('registration-Termination', 18), ('location-Up-Date', 19), ('cancel-Location', 20), ('register-Location', 21), ('location-Information-Request', 22)])
    GPRSEvent._ext = ['startOfInterceptionWithMSAttached', 'packetDataHeaderInformation', 'hSS-Subscriber-Record-Change', 'registration-Termination', 'location-Up-Date', 'cancel-Location', 'register-Location', 'location-Information-Request']
    
    #-----< CSREvent >-----#
    CSREvent = ENUM(name='CSREvent', mode=MODE_TYPE)
    CSREvent._cont = ASN1Dict([('cSREventMessage', 1)])
    CSREvent._ext = []
    
    #-----< IMSevent >-----#
    IMSevent = ENUM(name='IMSevent', mode=MODE_TYPE)
    IMSevent._cont = ASN1Dict([('unfilteredSIPmessage', 1), ('sIPheaderOnly', 2), ('decryptionKeysAvailable', 3), ('startOfInterceptionForIMSEstablishedSession', 4), ('xCAPRequest', 5), ('xCAPResponse', 6), ('ccUnavailable', 7)])
    IMSevent._ext = ['sIPheaderOnly', 'decryptionKeysAvailable', 'startOfInterceptionForIMSEstablishedSession', 'xCAPRequest', 'xCAPResponse', 'ccUnavailable']
    
    #-----< Current-Previous-Systems >-----#
    Current_Previous_Systems = SEQ(name='Current-Previous-Systems', mode=MODE_TYPE)
    _Current_Previous_Systems_serving_System_Identifier = OCT_STR(name='serving-System-Identifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Current_Previous_Systems_current_Serving_SGSN_Number = OCT_STR(name='current-Serving-SGSN-Number', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Current_Previous_Systems_current_Serving_SGSN_Address = OCT_STR(name='current-Serving-SGSN-Address', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Current_Previous_Systems_current_Serving_S4_SGSN_Address = OCT_STR(name='current-Serving-S4-SGSN-Address', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Current_Previous_Systems_previous_Serving_System_Identifier = OCT_STR(name='previous-Serving-System-Identifier', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Current_Previous_Systems_previous_Serving_SGSN_Number = OCT_STR(name='previous-Serving-SGSN-Number', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Current_Previous_Systems_previous_Serving_SGSN_Address = OCT_STR(name='previous-Serving-SGSN-Address', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Current_Previous_Systems_previous_Serving_S4_SGSN_Address = OCT_STR(name='previous-Serving-S4-SGSN-Address', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Current_Previous_Systems._cont = ASN1Dict([
        ('serving-System-Identifier', _Current_Previous_Systems_serving_System_Identifier),
        ('current-Serving-SGSN-Number', _Current_Previous_Systems_current_Serving_SGSN_Number),
        ('current-Serving-SGSN-Address', _Current_Previous_Systems_current_Serving_SGSN_Address),
        ('current-Serving-S4-SGSN-Address', _Current_Previous_Systems_current_Serving_S4_SGSN_Address),
        ('previous-Serving-System-Identifier', _Current_Previous_Systems_previous_Serving_System_Identifier),
        ('previous-Serving-SGSN-Number', _Current_Previous_Systems_previous_Serving_SGSN_Number),
        ('previous-Serving-SGSN-Address', _Current_Previous_Systems_previous_Serving_SGSN_Address),
        ('previous-Serving-S4-SGSN-Address', _Current_Previous_Systems_previous_Serving_S4_SGSN_Address),
        ])
    Current_Previous_Systems._ext = []
    
    #-----< Change-Of-Target-Identity >-----#
    Change_Of_Target_Identity = SEQ(name='Change-Of-Target-Identity', mode=MODE_TYPE)
    _Change_Of_Target_Identity_new_MSISDN = SEQ(name='new-MSISDN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_old_MSISDN = SEQ(name='old-MSISDN', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_new_IMSI = SEQ(name='new-IMSI', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_old_IMSI = SEQ(name='old-IMSI', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_new_IMEI = SEQ(name='new-IMEI', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_old_IMEI = SEQ(name='old-IMEI', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_new_IMPI = SEQ(name='new-IMPI', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_old_IMPI = SEQ(name='old-IMPI', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_new_SIP_URI = SEQ(name='new-SIP-URI', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_old_SIP_URI = SEQ(name='old-SIP-URI', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_new_TEL_URI = SEQ(name='new-TEL-URI', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PartyInformation')), opt=True)
    _Change_Of_Target_Identity_old_TEL_URI = SEQ(name='old-TEL-URI', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PartyInformation')), opt=True)
    Change_Of_Target_Identity._cont = ASN1Dict([
        ('new-MSISDN', _Change_Of_Target_Identity_new_MSISDN),
        ('old-MSISDN', _Change_Of_Target_Identity_old_MSISDN),
        ('new-IMSI', _Change_Of_Target_Identity_new_IMSI),
        ('old-IMSI', _Change_Of_Target_Identity_old_IMSI),
        ('new-IMEI', _Change_Of_Target_Identity_new_IMEI),
        ('old-IMEI', _Change_Of_Target_Identity_old_IMEI),
        ('new-IMPI', _Change_Of_Target_Identity_new_IMPI),
        ('old-IMPI', _Change_Of_Target_Identity_old_IMPI),
        ('new-SIP-URI', _Change_Of_Target_Identity_new_SIP_URI),
        ('old-SIP-URI', _Change_Of_Target_Identity_old_SIP_URI),
        ('new-TEL-URI', _Change_Of_Target_Identity_new_TEL_URI),
        ('old-TEL-URI', _Change_Of_Target_Identity_old_TEL_URI),
        ])
    Change_Of_Target_Identity._ext = ['new-IMPI', 'old-IMPI', 'new-SIP-URI', 'old-SIP-URI', 'new-TEL-URI', 'old-TEL-URI']
    
    #-----< Requesting-Node-Type >-----#
    Requesting_Node_Type = ENUM(name='Requesting-Node-Type', mode=MODE_TYPE)
    Requesting_Node_Type._cont = ASN1Dict([('mSC', 1), ('sMS-Centre', 2), ('gMLC', 3), ('mME', 4), ('sGSN', 5)])
    Requesting_Node_Type._ext = []
    
    #-----< Services-Data-Information >-----#
    Services_Data_Information = SEQ(name='Services-Data-Information', mode=MODE_TYPE)
    _Services_Data_Information_gPRS_parameters = SEQ(name='gPRS-parameters', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'GPRS-parameters')), opt=True)
    Services_Data_Information._cont = ASN1Dict([
        ('gPRS-parameters', _Services_Data_Information_gPRS_parameters),
        ])
    Services_Data_Information._ext = []
    
    #-----< GPRS-parameters >-----#
    GPRS_parameters = SEQ(name='GPRS-parameters', mode=MODE_TYPE)
    _GPRS_parameters_pDP_address_allocated_to_the_target = CHOICE(name='pDP-address-allocated-to-the-target', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    _GPRS_parameters_aPN = OCT_STR(name='aPN', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GPRS_parameters_aPN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=100)], ev=None, er=[])
    _GPRS_parameters_pDP_type = OCT_STR(name='pDP-type', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GPRS_parameters_pDP_type._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _GPRS_parameters_nSAPI = OCT_STR(name='nSAPI', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GPRS_parameters_nSAPI._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _GPRS_parameters_additionalIPaddress = CHOICE(name='additionalIPaddress', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'DataNodeAddress')), opt=True)
    GPRS_parameters._cont = ASN1Dict([
        ('pDP-address-allocated-to-the-target', _GPRS_parameters_pDP_address_allocated_to_the_target),
        ('aPN', _GPRS_parameters_aPN),
        ('pDP-type', _GPRS_parameters_pDP_type),
        ('nSAPI', _GPRS_parameters_nSAPI),
        ('additionalIPaddress', _GPRS_parameters_additionalIPaddress),
        ])
    GPRS_parameters._ext = ['nSAPI', 'additionalIPaddress']
    
    #-----< GPRSOperationErrorCode >-----#
    GPRSOperationErrorCode = OCT_STR(name='GPRSOperationErrorCode', mode=MODE_TYPE)
    
    #-----< LDIevent >-----#
    LDIevent = ENUM(name='LDIevent', mode=MODE_TYPE)
    LDIevent._cont = ASN1Dict([('targetEntersIA', 1), ('targetLeavesIA', 2)])
    LDIevent._ext = []
    
    #-----< UmtsQos >-----#
    UmtsQos = CHOICE(name='UmtsQos', mode=MODE_TYPE)
    _UmtsQos_qosMobileRadio = OCT_STR(name='qosMobileRadio', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UmtsQos_qosGn = OCT_STR(name='qosGn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    UmtsQos._cont = ASN1Dict([
        ('qosMobileRadio', _UmtsQos_qosMobileRadio),
        ('qosGn', _UmtsQos_qosGn),
        ])
    UmtsQos._ext = None
    
    #-----< MediaDecryption-info >-----#
    MediaDecryption_info = SEQ_OF(name='MediaDecryption-info', mode=MODE_TYPE)
    _MediaDecryption_info__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('UmtsHI2Operations', 'CCKeyInfo')))
    MediaDecryption_info._cont = _MediaDecryption_info__item_
    
    #-----< CCKeyInfo >-----#
    CCKeyInfo = SEQ(name='CCKeyInfo', mode=MODE_TYPE)
    _CCKeyInfo_cCCSID = OCT_STR(name='cCCSID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CCKeyInfo_cCDecKey = OCT_STR(name='cCDecKey', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CCKeyInfo_cCSalt = OCT_STR(name='cCSalt', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    CCKeyInfo._cont = ASN1Dict([
        ('cCCSID', _CCKeyInfo_cCCSID),
        ('cCDecKey', _CCKeyInfo_cCDecKey),
        ('cCSalt', _CCKeyInfo_cCSalt),
        ])
    CCKeyInfo._ext = []
    
    #-----< MediaSecFailureIndication >-----#
    MediaSecFailureIndication = ENUM(name='MediaSecFailureIndication', mode=MODE_TYPE)
    MediaSecFailureIndication._cont = ASN1Dict([('genericFailure', 0)])
    MediaSecFailureIndication._ext = []
    
    #-----< PacketDataHeaderInformation >-----#
    PacketDataHeaderInformation = CHOICE(name='PacketDataHeaderInformation', mode=MODE_TYPE)
    _PacketDataHeaderInformation_packetDataHeader = CHOICE(name='packetDataHeader', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PacketDataHeaderReport')))
    _PacketDataHeaderInformation_packetDataSummary = SEQ_OF(name='packetDataSummary', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PacketDataSummaryReport')))
    PacketDataHeaderInformation._cont = ASN1Dict([
        ('packetDataHeader', _PacketDataHeaderInformation_packetDataHeader),
        ('packetDataSummary', _PacketDataHeaderInformation_packetDataSummary),
        ])
    PacketDataHeaderInformation._ext = []
    
    #-----< PacketDataHeaderReport >-----#
    PacketDataHeaderReport = CHOICE(name='PacketDataHeaderReport', mode=MODE_TYPE)
    _PacketDataHeaderReport_packetDataHeaderMapped = SEQ(name='packetDataHeaderMapped', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PacketDataHeaderMapped')))
    _PacketDataHeaderReport_packetDataHeaderCopy = SEQ(name='packetDataHeaderCopy', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PacketDataHeaderCopy')))
    PacketDataHeaderReport._cont = ASN1Dict([
        ('packetDataHeaderMapped', _PacketDataHeaderReport_packetDataHeaderMapped),
        ('packetDataHeaderCopy', _PacketDataHeaderReport_packetDataHeaderCopy),
        ])
    PacketDataHeaderReport._ext = []
    
    #-----< PacketDataHeaderMapped >-----#
    PacketDataHeaderMapped = SEQ(name='PacketDataHeaderMapped', mode=MODE_TYPE)
    _PacketDataHeaderMapped_sourceIPAddress = SEQ(name='sourceIPAddress', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')))
    _PacketDataHeaderMapped_sourcePortNumber = INT(name='sourcePortNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketDataHeaderMapped_sourcePortNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _PacketDataHeaderMapped_destinationIPAddress = SEQ(name='destinationIPAddress', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')))
    _PacketDataHeaderMapped_destinationPortNumber = INT(name='destinationPortNumber', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketDataHeaderMapped_destinationPortNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _PacketDataHeaderMapped_transportProtocol = INT(name='transportProtocol', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PacketDataHeaderMapped_packetsize = INT(name='packetsize', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketDataHeaderMapped_flowLabel = INT(name='flowLabel', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketDataHeaderMapped_packetCount = INT(name='packetCount', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketDataHeaderMapped_direction = ENUM(name='direction', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'TPDU-direction')))
    PacketDataHeaderMapped._cont = ASN1Dict([
        ('sourceIPAddress', _PacketDataHeaderMapped_sourceIPAddress),
        ('sourcePortNumber', _PacketDataHeaderMapped_sourcePortNumber),
        ('destinationIPAddress', _PacketDataHeaderMapped_destinationIPAddress),
        ('destinationPortNumber', _PacketDataHeaderMapped_destinationPortNumber),
        ('transportProtocol', _PacketDataHeaderMapped_transportProtocol),
        ('packetsize', _PacketDataHeaderMapped_packetsize),
        ('flowLabel', _PacketDataHeaderMapped_flowLabel),
        ('packetCount', _PacketDataHeaderMapped_packetCount),
        ('direction', _PacketDataHeaderMapped_direction),
        ])
    PacketDataHeaderMapped._ext = []
    
    #-----< TPDU-direction >-----#
    TPDU_direction = ENUM(name='TPDU-direction', mode=MODE_TYPE)
    TPDU_direction._cont = ASN1Dict([('from-target', 1), ('to-target', 2), ('unknown', 3)])
    TPDU_direction._ext = None
    
    #-----< PacketDataHeaderCopy >-----#
    PacketDataHeaderCopy = SEQ(name='PacketDataHeaderCopy', mode=MODE_TYPE)
    _PacketDataHeaderCopy_direction = ENUM(name='direction', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'TPDU-direction')))
    _PacketDataHeaderCopy_headerCopy = OCT_STR(name='headerCopy', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PacketDataHeaderCopy._cont = ASN1Dict([
        ('direction', _PacketDataHeaderCopy_direction),
        ('headerCopy', _PacketDataHeaderCopy_headerCopy),
        ])
    PacketDataHeaderCopy._ext = []
    
    #-----< PacketDataSummaryReport >-----#
    PacketDataSummaryReport = SEQ_OF(name='PacketDataSummaryReport', mode=MODE_TYPE)
    _PacketDataSummaryReport__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('UmtsHI2Operations', 'PacketFlowSummary')))
    PacketDataSummaryReport._cont = _PacketDataSummaryReport__item_
    
    #-----< PacketFlowSummary >-----#
    PacketFlowSummary = SEQ(name='PacketFlowSummary', mode=MODE_TYPE)
    _PacketFlowSummary_sourceIPAddress = SEQ(name='sourceIPAddress', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')))
    _PacketFlowSummary_sourcePortNumber = INT(name='sourcePortNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketFlowSummary_sourcePortNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _PacketFlowSummary_destinationIPAddress = SEQ(name='destinationIPAddress', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')))
    _PacketFlowSummary_destinationPortNumber = INT(name='destinationPortNumber', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketFlowSummary_destinationPortNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _PacketFlowSummary_transportProtocol = INT(name='transportProtocol', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PacketFlowSummary_flowLabel = INT(name='flowLabel', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PacketFlowSummary_summaryPeriod = SEQ(name='summaryPeriod', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'ReportInterval')))
    _PacketFlowSummary_packetCount = INT(name='packetCount', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PacketFlowSummary_sumOfPacketSizes = INT(name='sumOfPacketSizes', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PacketFlowSummary_packetDataSummaryReason = ENUM(name='packetDataSummaryReason', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'ReportReason')))
    PacketFlowSummary._cont = ASN1Dict([
        ('sourceIPAddress', _PacketFlowSummary_sourceIPAddress),
        ('sourcePortNumber', _PacketFlowSummary_sourcePortNumber),
        ('destinationIPAddress', _PacketFlowSummary_destinationIPAddress),
        ('destinationPortNumber', _PacketFlowSummary_destinationPortNumber),
        ('transportProtocol', _PacketFlowSummary_transportProtocol),
        ('flowLabel', _PacketFlowSummary_flowLabel),
        ('summaryPeriod', _PacketFlowSummary_summaryPeriod),
        ('packetCount', _PacketFlowSummary_packetCount),
        ('sumOfPacketSizes', _PacketFlowSummary_sumOfPacketSizes),
        ('packetDataSummaryReason', _PacketFlowSummary_packetDataSummaryReason),
        ])
    PacketFlowSummary._ext = []
    
    #-----< ReportReason >-----#
    ReportReason = ENUM(name='ReportReason', mode=MODE_TYPE)
    ReportReason._cont = ASN1Dict([('timerExpired', 0), ('countThresholdHit', 1), ('pDPComtextDeactivated', 2), ('pDPContextModification', 3), ('otherOrUnknown', 4)])
    ReportReason._ext = []
    
    #-----< ReportInterval >-----#
    ReportInterval = SEQ(name='ReportInterval', mode=MODE_TYPE)
    _ReportInterval_firstPacketTimeStamp = CHOICE(name='firstPacketTimeStamp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _ReportInterval_lastPacketTimeStamp = CHOICE(name='lastPacketTimeStamp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    ReportInterval._cont = ASN1Dict([
        ('firstPacketTimeStamp', _ReportInterval_firstPacketTimeStamp),
        ('lastPacketTimeStamp', _ReportInterval_lastPacketTimeStamp),
        ])
    ReportInterval._ext = []
    
    #-----< ExtendedLocParameters >-----#
    ExtendedLocParameters = SEQ(name='ExtendedLocParameters', mode=MODE_TYPE)
    _ExtendedLocParameters_posMethod = STR_PRINT(name='posMethod', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ExtendedLocParameters_mapData = CHOICE(name='mapData', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ExtendedLocParameters_mapData_base64Map = STR_PRINT(name='base64Map', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ExtendedLocParameters_mapData_url = STR_PRINT(name='url', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ExtendedLocParameters_mapData._cont = ASN1Dict([
        ('base64Map', __ExtendedLocParameters_mapData_base64Map),
        ('url', __ExtendedLocParameters_mapData_url),
        ])
    _ExtendedLocParameters_mapData._ext = None
    _ExtendedLocParameters_altitude = SEQ(name='altitude', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ExtendedLocParameters_altitude_alt = STR_PRINT(name='alt', mode=MODE_TYPE)
    __ExtendedLocParameters_altitude_alt_uncertainty = STR_PRINT(name='alt-uncertainty', mode=MODE_TYPE, opt=True)
    _ExtendedLocParameters_altitude._cont = ASN1Dict([
        ('alt', __ExtendedLocParameters_altitude_alt),
        ('alt-uncertainty', __ExtendedLocParameters_altitude_alt_uncertainty),
        ])
    _ExtendedLocParameters_altitude._ext = None
    _ExtendedLocParameters_speed = STR_PRINT(name='speed', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ExtendedLocParameters_direction = STR_PRINT(name='direction', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ExtendedLocParameters_level_conf = STR_PRINT(name='level-conf', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ExtendedLocParameters_qOS_not_met = BOOL(name='qOS-not-met', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ExtendedLocParameters_motionStateList = SEQ(name='motionStateList', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ExtendedLocParameters_motionStateList_primaryMotionState = STR_PRINT(name='primaryMotionState', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ExtendedLocParameters_motionStateList_secondaryMotionState = SEQ_OF(name='secondaryMotionState', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___ExtendedLocParameters_motionStateList_secondaryMotionState__item_ = STR_PRINT(name='_item_', mode=MODE_TYPE)
    __ExtendedLocParameters_motionStateList_secondaryMotionState._cont = ___ExtendedLocParameters_motionStateList_secondaryMotionState__item_
    __ExtendedLocParameters_motionStateList_confidence = STR_PRINT(name='confidence', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ExtendedLocParameters_motionStateList._cont = ASN1Dict([
        ('primaryMotionState', __ExtendedLocParameters_motionStateList_primaryMotionState),
        ('secondaryMotionState', __ExtendedLocParameters_motionStateList_secondaryMotionState),
        ('confidence', __ExtendedLocParameters_motionStateList_confidence),
        ])
    _ExtendedLocParameters_motionStateList._ext = None
    _ExtendedLocParameters_floor = SEQ(name='floor', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ExtendedLocParameters_floor_floor_number = STR_PRINT(name='floor-number', mode=MODE_TYPE)
    __ExtendedLocParameters_floor_floor_number_uncertainty = STR_PRINT(name='floor-number-uncertainty', mode=MODE_TYPE, opt=True)
    _ExtendedLocParameters_floor._cont = ASN1Dict([
        ('floor-number', __ExtendedLocParameters_floor_floor_number),
        ('floor-number-uncertainty', __ExtendedLocParameters_floor_floor_number_uncertainty),
        ])
    _ExtendedLocParameters_floor._ext = None
    _ExtendedLocParameters_additional_info = STR_PRINT(name='additional-info', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ExtendedLocParameters_lALS_rawMLPPosData = STR_UTF8(name='lALS-rawMLPPosData', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ExtendedLocParameters._cont = ASN1Dict([
        ('posMethod', _ExtendedLocParameters_posMethod),
        ('mapData', _ExtendedLocParameters_mapData),
        ('altitude', _ExtendedLocParameters_altitude),
        ('speed', _ExtendedLocParameters_speed),
        ('direction', _ExtendedLocParameters_direction),
        ('level-conf', _ExtendedLocParameters_level_conf),
        ('qOS-not-met', _ExtendedLocParameters_qOS_not_met),
        ('motionStateList', _ExtendedLocParameters_motionStateList),
        ('floor', _ExtendedLocParameters_floor),
        ('additional-info', _ExtendedLocParameters_additional_info),
        ('lALS-rawMLPPosData', _ExtendedLocParameters_lALS_rawMLPPosData),
        ])
    ExtendedLocParameters._ext = []
    
    #-----< LocationErrorCode >-----#
    LocationErrorCode = INT(name='LocationErrorCode', mode=MODE_TYPE)
    LocationErrorCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=699)], ev=None, er=[])
    
    #-----< PTCEncryptionInfo >-----#
    PTCEncryptionInfo = SEQ(name='PTCEncryptionInfo', mode=MODE_TYPE)
    _PTCEncryptionInfo_cipher = STR_UTF8(name='cipher', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PTCEncryptionInfo_cryptoContext = STR_UTF8(name='cryptoContext', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTCEncryptionInfo_key = STR_UTF8(name='key', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PTCEncryptionInfo_keyEncoding = STR_UTF8(name='keyEncoding', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PTCEncryptionInfo_salt = STR_UTF8(name='salt', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTCEncryptionInfo_pTCOther = STR_UTF8(name='pTCOther', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    PTCEncryptionInfo._cont = ASN1Dict([
        ('cipher', _PTCEncryptionInfo_cipher),
        ('cryptoContext', _PTCEncryptionInfo_cryptoContext),
        ('key', _PTCEncryptionInfo_key),
        ('keyEncoding', _PTCEncryptionInfo_keyEncoding),
        ('salt', _PTCEncryptionInfo_salt),
        ('pTCOther', _PTCEncryptionInfo_pTCOther),
        ])
    PTCEncryptionInfo._ext = []
    
    #-----< PTC >-----#
    PTC = SEQ(name='PTC', mode=MODE_TYPE)
    _PTC_abandonCause = STR_UTF8(name='abandonCause', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_accessPolicyFailure = STR_UTF8(name='accessPolicyFailure', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_accessPolicyType = SEQ(name='accessPolicyType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'AccessPolicyType')), opt=True)
    _PTC_alertIndicator = ENUM(name='alertIndicator', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'AlertIndicator')), opt=True)
    _PTC_associatePresenceStatus = SEQ(name='associatePresenceStatus', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'AssociatePresenceStatus')), opt=True)
    _PTC_bearer_capability = STR_UTF8(name='bearer-capability', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_broadcastIndicator = BOOL(name='broadcastIndicator', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_contactID = STR_UTF8(name='contactID', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_emergency = ENUM(name='emergency', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'Emergency')), opt=True)
    _PTC_emergencyGroupState = SEQ(name='emergencyGroupState', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'EmergencyGroupState')), opt=True)
    _PTC_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')))
    _PTC_pTCType = ENUM(name='pTCType', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PTCType')), opt=True)
    _PTC_failureCode = STR_UTF8(name='failureCode', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_floorActivity = SEQ(name='floorActivity', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'FloorActivity')), opt=True)
    _PTC_floorSpeakerID = SEQ(name='floorSpeakerID', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PTCAddress')), opt=True)
    _PTC_groupAdSender = STR_UTF8(name='groupAdSender', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_groupAuthRule = ENUM(name='groupAuthRule', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'GroupAuthRule')), opt=True)
    _PTC_groupCharacteristics = STR_UTF8(name='groupCharacteristics', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_holdRetrieveInd = BOOL(name='holdRetrieveInd', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_imminentPerilInd = ENUM(name='imminentPerilInd', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'ImminentPerilInd')), opt=True)
    _PTC_implicitFloorReq = ENUM(name='implicitFloorReq', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'ImplicitFloorReq')), opt=True)
    _PTC_initiationCause = ENUM(name='initiationCause', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'InitiationCause')), opt=True)
    _PTC_invitationCause = STR_UTF8(name='invitationCause', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_iPAPartyID = STR_UTF8(name='iPAPartyID', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_iPADirection = ENUM(name='iPADirection', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'IPADirection')), opt=True)
    _PTC_listManagementAction = ENUM(name='listManagementAction', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'ListManagementAction')), opt=True)
    _PTC_listManagementFailure = STR_UTF8(name='listManagementFailure', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_listManagementType = ENUM(name='listManagementType', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'ListManagementType')), opt=True)
    _PTC_maxTBTime = STR_UTF8(name='maxTBTime', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_mCPTTGroupID = STR_UTF8(name='mCPTTGroupID', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_mCPTTID = STR_UTF8(name='mCPTTID', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_mCPTTInd = BOOL(name='mCPTTInd', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_location = SEQ(name='location', mode=MODE_TYPE, tag=(36, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'Location')), opt=True)
    _PTC_mCPTTOrganizationName = STR_UTF8(name='mCPTTOrganizationName', mode=MODE_TYPE, tag=(37, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_mediaStreamAvail = BOOL(name='mediaStreamAvail', mode=MODE_TYPE, tag=(38, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_priority_Level = ENUM(name='priority-Level', mode=MODE_TYPE, tag=(40, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'Priority-Level')), opt=True)
    _PTC_preEstSessionID = STR_UTF8(name='preEstSessionID', mode=MODE_TYPE, tag=(41, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_preEstStatus = ENUM(name='preEstStatus', mode=MODE_TYPE, tag=(42, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PreEstStatus')), opt=True)
    _PTC_pTCGroupID = STR_UTF8(name='pTCGroupID', mode=MODE_TYPE, tag=(43, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCIDList = STR_UTF8(name='pTCIDList', mode=MODE_TYPE, tag=(44, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCMediaCapability = STR_UTF8(name='pTCMediaCapability', mode=MODE_TYPE, tag=(45, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCOriginatingId = STR_UTF8(name='pTCOriginatingId', mode=MODE_TYPE, tag=(46, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCOther = STR_UTF8(name='pTCOther', mode=MODE_TYPE, tag=(47, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCParticipants = STR_UTF8(name='pTCParticipants', mode=MODE_TYPE, tag=(48, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCParty = STR_UTF8(name='pTCParty', mode=MODE_TYPE, tag=(49, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCPartyDrop = STR_UTF8(name='pTCPartyDrop', mode=MODE_TYPE, tag=(50, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCSessionInfo = STR_UTF8(name='pTCSessionInfo', mode=MODE_TYPE, tag=(51, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCServerURI = STR_UTF8(name='pTCServerURI', mode=MODE_TYPE, tag=(52, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCUserAccessPolicy = STR_UTF8(name='pTCUserAccessPolicy', mode=MODE_TYPE, tag=(53, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_pTCAddress = SEQ(name='pTCAddress', mode=MODE_TYPE, tag=(54, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PTCAddress')), opt=True)
    _PTC_queuedFloorControl = BOOL(name='queuedFloorControl', mode=MODE_TYPE, tag=(55, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_queuedPosition = STR_UTF8(name='queuedPosition', mode=MODE_TYPE, tag=(56, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_registrationRequest = ENUM(name='registrationRequest', mode=MODE_TYPE, tag=(57, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'RegistrationRequest')), opt=True)
    _PTC_registrationOutcome = ENUM(name='registrationOutcome', mode=MODE_TYPE, tag=(58, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'RegistrationOutcome')), opt=True)
    _PTC_retrieveID = STR_UTF8(name='retrieveID', mode=MODE_TYPE, tag=(59, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_rTPSetting = SEQ(name='rTPSetting', mode=MODE_TYPE, tag=(60, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'RTPSetting')), opt=True)
    _PTC_talkBurstPriority = ENUM(name='talkBurstPriority', mode=MODE_TYPE, tag=(61, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'Priority-Level')), opt=True)
    _PTC_talkBurstReason = STR_VIS(name='talkBurstReason', mode=MODE_TYPE, tag=(62, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'Talk-burst-reason-code')), opt=True)
    _PTC_talkburstControlSetting = SEQ(name='talkburstControlSetting', mode=MODE_TYPE, tag=(63, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'TalkburstControlSetting')), opt=True)
    _PTC_targetPresenceStatus = STR_UTF8(name='targetPresenceStatus', mode=MODE_TYPE, tag=(64, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_port_Number = INT(name='port-Number', mode=MODE_TYPE, tag=(65, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTC_port_Number._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    PTC._cont = ASN1Dict([
        ('abandonCause', _PTC_abandonCause),
        ('accessPolicyFailure', _PTC_accessPolicyFailure),
        ('accessPolicyType', _PTC_accessPolicyType),
        ('alertIndicator', _PTC_alertIndicator),
        ('associatePresenceStatus', _PTC_associatePresenceStatus),
        ('bearer-capability', _PTC_bearer_capability),
        ('broadcastIndicator', _PTC_broadcastIndicator),
        ('contactID', _PTC_contactID),
        ('emergency', _PTC_emergency),
        ('emergencyGroupState', _PTC_emergencyGroupState),
        ('timeStamp', _PTC_timeStamp),
        ('pTCType', _PTC_pTCType),
        ('failureCode', _PTC_failureCode),
        ('floorActivity', _PTC_floorActivity),
        ('floorSpeakerID', _PTC_floorSpeakerID),
        ('groupAdSender', _PTC_groupAdSender),
        ('groupAuthRule', _PTC_groupAuthRule),
        ('groupCharacteristics', _PTC_groupCharacteristics),
        ('holdRetrieveInd', _PTC_holdRetrieveInd),
        ('imminentPerilInd', _PTC_imminentPerilInd),
        ('implicitFloorReq', _PTC_implicitFloorReq),
        ('initiationCause', _PTC_initiationCause),
        ('invitationCause', _PTC_invitationCause),
        ('iPAPartyID', _PTC_iPAPartyID),
        ('iPADirection', _PTC_iPADirection),
        ('listManagementAction', _PTC_listManagementAction),
        ('listManagementFailure', _PTC_listManagementFailure),
        ('listManagementType', _PTC_listManagementType),
        ('maxTBTime', _PTC_maxTBTime),
        ('mCPTTGroupID', _PTC_mCPTTGroupID),
        ('mCPTTID', _PTC_mCPTTID),
        ('mCPTTInd', _PTC_mCPTTInd),
        ('location', _PTC_location),
        ('mCPTTOrganizationName', _PTC_mCPTTOrganizationName),
        ('mediaStreamAvail', _PTC_mediaStreamAvail),
        ('priority-Level', _PTC_priority_Level),
        ('preEstSessionID', _PTC_preEstSessionID),
        ('preEstStatus', _PTC_preEstStatus),
        ('pTCGroupID', _PTC_pTCGroupID),
        ('pTCIDList', _PTC_pTCIDList),
        ('pTCMediaCapability', _PTC_pTCMediaCapability),
        ('pTCOriginatingId', _PTC_pTCOriginatingId),
        ('pTCOther', _PTC_pTCOther),
        ('pTCParticipants', _PTC_pTCParticipants),
        ('pTCParty', _PTC_pTCParty),
        ('pTCPartyDrop', _PTC_pTCPartyDrop),
        ('pTCSessionInfo', _PTC_pTCSessionInfo),
        ('pTCServerURI', _PTC_pTCServerURI),
        ('pTCUserAccessPolicy', _PTC_pTCUserAccessPolicy),
        ('pTCAddress', _PTC_pTCAddress),
        ('queuedFloorControl', _PTC_queuedFloorControl),
        ('queuedPosition', _PTC_queuedPosition),
        ('registrationRequest', _PTC_registrationRequest),
        ('registrationOutcome', _PTC_registrationOutcome),
        ('retrieveID', _PTC_retrieveID),
        ('rTPSetting', _PTC_rTPSetting),
        ('talkBurstPriority', _PTC_talkBurstPriority),
        ('talkBurstReason', _PTC_talkBurstReason),
        ('talkburstControlSetting', _PTC_talkburstControlSetting),
        ('targetPresenceStatus', _PTC_targetPresenceStatus),
        ('port-Number', _PTC_port_Number),
        ])
    PTC._ext = []
    
    #-----< AccessPolicyType >-----#
    AccessPolicyType = SEQ(name='AccessPolicyType', mode=MODE_TYPE)
    _AccessPolicyType_userAccessPolicyAttempt = BOOL(name='userAccessPolicyAttempt', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AccessPolicyType_groupAuthorizationRulesAttempt = BOOL(name='groupAuthorizationRulesAttempt', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AccessPolicyType_userAccessPolicyQuery = BOOL(name='userAccessPolicyQuery', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AccessPolicyType_groupAuthorizationRulesQuery = BOOL(name='groupAuthorizationRulesQuery', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AccessPolicyType_userAccessPolicyResult = STR_UTF8(name='userAccessPolicyResult', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AccessPolicyType_groupAuthorizationRulesResult = STR_UTF8(name='groupAuthorizationRulesResult', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    AccessPolicyType._cont = ASN1Dict([
        ('userAccessPolicyAttempt', _AccessPolicyType_userAccessPolicyAttempt),
        ('groupAuthorizationRulesAttempt', _AccessPolicyType_groupAuthorizationRulesAttempt),
        ('userAccessPolicyQuery', _AccessPolicyType_userAccessPolicyQuery),
        ('groupAuthorizationRulesQuery', _AccessPolicyType_groupAuthorizationRulesQuery),
        ('userAccessPolicyResult', _AccessPolicyType_userAccessPolicyResult),
        ('groupAuthorizationRulesResult', _AccessPolicyType_groupAuthorizationRulesResult),
        ])
    AccessPolicyType._ext = []
    
    #-----< AlertIndicator >-----#
    AlertIndicator = ENUM(name='AlertIndicator', mode=MODE_TYPE)
    AlertIndicator._cont = ASN1Dict([('sent', 1), ('received', 2), ('cancelled', 3)])
    AlertIndicator._ext = []
    
    #-----< AssociatePresenceStatus >-----#
    AssociatePresenceStatus = SEQ(name='AssociatePresenceStatus', mode=MODE_TYPE)
    _AssociatePresenceStatus_presenceID = STR_UTF8(name='presenceID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AssociatePresenceStatus_presenceType = ENUM(name='presenceType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'PresenceType')))
    _AssociatePresenceStatus_presenceStatus = BOOL(name='presenceStatus', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    AssociatePresenceStatus._cont = ASN1Dict([
        ('presenceID', _AssociatePresenceStatus_presenceID),
        ('presenceType', _AssociatePresenceStatus_presenceType),
        ('presenceStatus', _AssociatePresenceStatus_presenceStatus),
        ])
    AssociatePresenceStatus._ext = []
    
    #-----< PresenceType >-----#
    PresenceType = ENUM(name='PresenceType', mode=MODE_TYPE)
    PresenceType._cont = ASN1Dict([('pTCClient', 1), ('pTCGroup', 2)])
    PresenceType._ext = []
    
    #-----< Emergency >-----#
    Emergency = ENUM(name='Emergency', mode=MODE_TYPE)
    Emergency._cont = ASN1Dict([('imminent', 1), ('peril', 2), ('cancel', 3)])
    Emergency._ext = []
    
    #-----< EmergencyGroupState >-----#
    EmergencyGroupState = SEQ(name='EmergencyGroupState', mode=MODE_TYPE)
    _EmergencyGroupState_clientEmergencyState = ENUM(name='clientEmergencyState', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EmergencyGroupState_clientEmergencyState._cont = ASN1Dict([('inform', 1), ('response', 2), ('cancelInform', 3), ('cancelResponse', 4)])
    _EmergencyGroupState_clientEmergencyState._ext = []
    _EmergencyGroupState_groupEmergencyState = ENUM(name='groupEmergencyState', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EmergencyGroupState_groupEmergencyState._cont = ASN1Dict([('inForm', 1), ('reSponse', 2), ('cancelInform', 3), ('cancelResponse', 4)])
    _EmergencyGroupState_groupEmergencyState._ext = []
    EmergencyGroupState._cont = ASN1Dict([
        ('clientEmergencyState', _EmergencyGroupState_clientEmergencyState),
        ('groupEmergencyState', _EmergencyGroupState_groupEmergencyState),
        ])
    EmergencyGroupState._ext = []
    
    #-----< PTCType >-----#
    PTCType = ENUM(name='PTCType', mode=MODE_TYPE)
    PTCType._cont = ASN1Dict([('pTCStartofInterception', 1), ('pTCServinSystem', 2), ('pTCSessionInitiation', 3), ('pTCSessionAbandonEndRecord', 4), ('pTCSessionStartContinueRecord', 5), ('pTCSessionEndRecord', 6), ('pTCPre-EstablishedSessionSessionRecord', 7), ('pTCInstantPersonalAlert', 8), ('pTCPartyJoin', 9), ('pTCPartyDrop', 10), ('pTCPartyHold-RetrieveRecord', 11), ('pTCMediaModification', 12), ('pTCGroupAdvertizement', 13), ('pTCFloorConttrol', 14), ('pTCTargetPressence', 15), ('pTCAssociatePressence', 16), ('pTCListManagementEvents', 17), ('pTCAccessPolicyEvents', 18), ('pTCMediaTypeNotification', 19), ('pTCGroupCallRequest', 20), ('pTCGroupCallCancel', 21), ('pTCGroupCallResponse', 22), ('pTCGroupCallInterrogate', 23), ('pTCMCPTTImminentGroupCall', 24), ('pTCCC', 25), ('pTCRegistration', 26), ('pTCEncryption', 27)])
    PTCType._ext = []
    
    #-----< FloorActivity >-----#
    FloorActivity = SEQ(name='FloorActivity', mode=MODE_TYPE)
    _FloorActivity_tBCP_Request = BOOL(name='tBCP-Request', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FloorActivity_tBCP_Granted = BOOL(name='tBCP-Granted', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FloorActivity_tBCP_Deny = BOOL(name='tBCP-Deny', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FloorActivity_tBCP_Queued = BOOL(name='tBCP-Queued', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FloorActivity_tBCP_Release = BOOL(name='tBCP-Release', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FloorActivity_tBCP_Revoke = BOOL(name='tBCP-Revoke', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FloorActivity_tBCP_Taken = BOOL(name='tBCP-Taken', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FloorActivity_tBCP_Idle = BOOL(name='tBCP-Idle', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    FloorActivity._cont = ASN1Dict([
        ('tBCP-Request', _FloorActivity_tBCP_Request),
        ('tBCP-Granted', _FloorActivity_tBCP_Granted),
        ('tBCP-Deny', _FloorActivity_tBCP_Deny),
        ('tBCP-Queued', _FloorActivity_tBCP_Queued),
        ('tBCP-Release', _FloorActivity_tBCP_Release),
        ('tBCP-Revoke', _FloorActivity_tBCP_Revoke),
        ('tBCP-Taken', _FloorActivity_tBCP_Taken),
        ('tBCP-Idle', _FloorActivity_tBCP_Idle),
        ])
    FloorActivity._ext = []
    
    #-----< GroupAuthRule >-----#
    GroupAuthRule = ENUM(name='GroupAuthRule', mode=MODE_TYPE)
    GroupAuthRule._cont = ASN1Dict([('allow-Initiating-PtcSession', 0), ('block-Initiating-PtcSession', 1), ('allow-Joining-PtcSession', 2), ('block-Joining-PtcSession', 3), ('allow-Add-Participants', 4), ('block-Add-Participants', 5), ('allow-Subscription-PtcSession-State', 6), ('block-Subscription-PtcSession-State', 7), ('allow-Anonymity', 8), ('forbid-Anonymity', 9)])
    GroupAuthRule._ext = []
    
    #-----< ImminentPerilInd >-----#
    ImminentPerilInd = ENUM(name='ImminentPerilInd', mode=MODE_TYPE)
    ImminentPerilInd._cont = ASN1Dict([('request', 1), ('response', 2), ('cancel', 3)])
    ImminentPerilInd._ext = []
    
    #-----< ImplicitFloorReq >-----#
    ImplicitFloorReq = ENUM(name='ImplicitFloorReq', mode=MODE_TYPE)
    ImplicitFloorReq._cont = ASN1Dict([('join', 1), ('rejoin', 2), ('release', 3)])
    ImplicitFloorReq._ext = []
    
    #-----< InitiationCause >-----#
    InitiationCause = ENUM(name='InitiationCause', mode=MODE_TYPE)
    InitiationCause._cont = ASN1Dict([('requests', 1), ('received', 2), ('pTCOriginatingId', 3)])
    InitiationCause._ext = []
    
    #-----< IPADirection >-----#
    IPADirection = ENUM(name='IPADirection', mode=MODE_TYPE)
    IPADirection._cont = ASN1Dict([('toTarget', 0), ('fromTarget', 1)])
    IPADirection._ext = []
    
    #-----< ListManagementAction >-----#
    ListManagementAction = ENUM(name='ListManagementAction', mode=MODE_TYPE)
    ListManagementAction._cont = ASN1Dict([('create', 1), ('modify', 2), ('retrieve', 3), ('delete', 4), ('notify', 5)])
    ListManagementAction._ext = []
    
    #-----< ListManagementType >-----#
    ListManagementType = ENUM(name='ListManagementType', mode=MODE_TYPE)
    ListManagementType._cont = ASN1Dict([('contactListManagementAttempt', 1), ('groupListManagementAttempt', 2), ('contactListManagementResult', 3), ('groupListManagementResult', 4), ('requestSuccessful', 5)])
    ListManagementType._ext = []
    
    #-----< Priority-Level >-----#
    Priority_Level = ENUM(name='Priority-Level', mode=MODE_TYPE)
    Priority_Level._cont = ASN1Dict([('pre-emptive', 0), ('high-priority', 1), ('normal-priority', 2), ('listen-only', 3)])
    Priority_Level._ext = []
    
    #-----< PreEstStatus >-----#
    PreEstStatus = ENUM(name='PreEstStatus', mode=MODE_TYPE)
    PreEstStatus._cont = ASN1Dict([('established', 1), ('modify', 2), ('released', 3)])
    PreEstStatus._ext = []
    
    #-----< PTCAddress >-----#
    PTCAddress = SEQ(name='PTCAddress', mode=MODE_TYPE)
    _PTCAddress_uri = STR_UTF8(name='uri', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PTCAddress_privacy_setting = BOOL(name='privacy-setting', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PTCAddress_privacy_alias = STR_VIS(name='privacy-alias', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTCAddress_nickname = STR_UTF8(name='nickname', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    PTCAddress._cont = ASN1Dict([
        ('uri', _PTCAddress_uri),
        ('privacy-setting', _PTCAddress_privacy_setting),
        ('privacy-alias', _PTCAddress_privacy_alias),
        ('nickname', _PTCAddress_nickname),
        ])
    PTCAddress._ext = []
    
    #-----< RegistrationRequest >-----#
    RegistrationRequest = ENUM(name='RegistrationRequest', mode=MODE_TYPE)
    RegistrationRequest._cont = ASN1Dict([('register', 1), ('re-register', 2), ('de-register', 3)])
    RegistrationRequest._ext = []
    
    #-----< RegistrationOutcome >-----#
    RegistrationOutcome = ENUM(name='RegistrationOutcome', mode=MODE_TYPE)
    RegistrationOutcome._cont = ASN1Dict([('success', 0), ('failure', 1)])
    RegistrationOutcome._ext = []
    
    #-----< RTPSetting >-----#
    RTPSetting = SEQ(name='RTPSetting', mode=MODE_TYPE)
    _RTPSetting_ip_address = SEQ(name='ip-address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'IPAddress')))
    _RTPSetting_port_number = INT(name='port-number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('UmtsHI2Operations', 'Port-Number')))
    RTPSetting._cont = ASN1Dict([
        ('ip-address', _RTPSetting_ip_address),
        ('port-number', _RTPSetting_port_number),
        ])
    RTPSetting._ext = []
    
    #-----< Port-Number >-----#
    Port_Number = INT(name='Port-Number', mode=MODE_TYPE)
    Port_Number._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< TalkburstControlSetting >-----#
    TalkburstControlSetting = SEQ(name='TalkburstControlSetting', mode=MODE_TYPE)
    _TalkburstControlSetting_talk_BurstControlProtocol = STR_UTF8(name='talk-BurstControlProtocol', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TalkburstControlSetting_talk_Burst_parameters = SET_OF(name='talk-Burst-parameters', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __TalkburstControlSetting_talk_Burst_parameters__item_ = STR_VIS(name='_item_', mode=MODE_TYPE)
    _TalkburstControlSetting_talk_Burst_parameters._cont = __TalkburstControlSetting_talk_Burst_parameters__item_
    _TalkburstControlSetting_tBCP_PortNumber = INT(name='tBCP-PortNumber', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TalkburstControlSetting_tBCP_PortNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    TalkburstControlSetting._cont = ASN1Dict([
        ('talk-BurstControlProtocol', _TalkburstControlSetting_talk_BurstControlProtocol),
        ('talk-Burst-parameters', _TalkburstControlSetting_talk_Burst_parameters),
        ('tBCP-PortNumber', _TalkburstControlSetting_tBCP_PortNumber),
        ])
    TalkburstControlSetting._ext = []
    
    #-----< Talk-burst-reason-code >-----#
    Talk_burst_reason_code = STR_VIS(name='Talk-burst-reason-code', mode=MODE_TYPE)
    
    _all_ = [
        lawfulInterceptDomainId,
        threeGPPSUBDomainId,
        hi2DomainId,
        _UmtsIRIsContent_umtsiRIContent,
        _UmtsIRIsContent_umtsIRISequence,
        UmtsIRIsContent,
        _UmtsIRISequence__item_,
        UmtsIRISequence,
        _UmtsIRIContent_iRI_Begin_record,
        _UmtsIRIContent_iRI_End_record,
        _UmtsIRIContent_iRI_Continue_record,
        _UmtsIRIContent_iRI_Report_record,
        UmtsIRIContent,
        _IRI_Parameters_hi2DomainId,
        _IRI_Parameters_iRIversion,
        _IRI_Parameters_lawfulInterceptionIdentifier,
        _IRI_Parameters_timeStamp,
        _IRI_Parameters_initiator,
        _IRI_Parameters_locationOfTheTarget,
        __IRI_Parameters_partyInformation__item_,
        _IRI_Parameters_partyInformation,
        _IRI_Parameters_serviceCenterAddress,
        _IRI_Parameters_sMS,
        _IRI_Parameters_national_Parameters,
        _IRI_Parameters_gPRSCorrelationNumber,
        _IRI_Parameters_gPRSevent,
        _IRI_Parameters_sgsnAddress,
        _IRI_Parameters_gPRSOperationErrorCode,
        _IRI_Parameters_ggsnAddress,
        _IRI_Parameters_qOS,
        _IRI_Parameters_networkIdentifier,
        _IRI_Parameters_sMSOriginatingAddress,
        _IRI_Parameters_sMSTerminatingAddress,
        _IRI_Parameters_iMSevent,
        _IRI_Parameters_sIPMessage,
        _IRI_Parameters_servingSGSN_number,
        _IRI_Parameters_servingSGSN_address,
        _IRI_Parameters_ldiEvent,
        _IRI_Parameters_correlation,
        _IRI_Parameters_mediaDecryption_info,
        _IRI_Parameters_servingS4_SGSN_address,
        _IRI_Parameters_sipMessageHeaderOffer,
        _IRI_Parameters_sipMessageHeaderAnswer,
        _IRI_Parameters_sdpOffer,
        _IRI_Parameters_sdpAnswer,
        _IRI_Parameters_uLITimestamp,
        _IRI_Parameters_packetDataHeaderInformation,
        _IRI_Parameters_mediaSecFailureIndication,
        __IRI_Parameters_pANI_Header_Info__item_,
        _IRI_Parameters_pANI_Header_Info,
        _IRI_Parameters_imsVoIP,
        _IRI_Parameters_xCAPmessage,
        _IRI_Parameters_ccUnavailableReason,
        _IRI_Parameters_carrierSpecificData,
        _IRI_Parameters_current_Previous_Systems,
        _IRI_Parameters_change_Of_Target_Identity,
        _IRI_Parameters_requesting_Network_Identifier,
        _IRI_Parameters_requesting_Node_Type,
        _IRI_Parameters_serving_System_Identifier,
        _IRI_Parameters_extendedLocParameters,
        _IRI_Parameters_locationErrorCode,
        _IRI_Parameters_cSREvent,
        _IRI_Parameters_ptc,
        _IRI_Parameters_ptcEncryption,
        _IRI_Parameters_national_HI2_ASN1parameters,
        IRI_Parameters,
        _PANI_Header_Info_access_Type,
        _PANI_Header_Info_access_Class,
        _PANI_Header_Info_network_Provided,
        _PANI_Header_Info_pANI_Location,
        PANI_Header_Info,
        _PANI_Location_raw_Location,
        _PANI_Location_location,
        PANI_Location,
        _PartyInformation_party_Qualifier,
        __PartyInformation_partyIdentity_imei,
        __PartyInformation_partyIdentity_imsi,
        __PartyInformation_partyIdentity_msISDN,
        __PartyInformation_partyIdentity_e164_Format,
        __PartyInformation_partyIdentity_sip_uri,
        __PartyInformation_partyIdentity_tel_uri,
        __PartyInformation_partyIdentity_x_3GPP_Asserted_Identity,
        __PartyInformation_partyIdentity_xUI,
        _PartyInformation_partyIdentity,
        _PartyInformation_services_Data_Information,
        PartyInformation,
        _Location_e164_Number,
        _Location_globalCellID,
        _Location_rAI,
        _Location_gsmLocation,
        _Location_umtsLocation,
        _Location_sAI,
        _Location_oldRAI,
        _Location_tAI,
        _Location_eCGI,
        _Location_civicAddress,
        _Location_operatorSpecificInfo,
        __Location_uELocationTimestamp_timestamp,
        __Location_uELocationTimestamp_timestampUnknown,
        _Location_uELocationTimestamp,
        Location,
        GlobalCellID,
        Rai,
        Sai,
        __GSMLocation_geoCoordinates_latitude,
        __GSMLocation_geoCoordinates_longitude,
        __GSMLocation_geoCoordinates_mapDatum,
        __GSMLocation_geoCoordinates_azimuth,
        _GSMLocation_geoCoordinates,
        __GSMLocation_utmCoordinates_utm_East,
        __GSMLocation_utmCoordinates_utm_North,
        __GSMLocation_utmCoordinates_mapDatum,
        __GSMLocation_utmCoordinates_azimuth,
        _GSMLocation_utmCoordinates,
        __GSMLocation_utmRefCoordinates_utmref_string,
        __GSMLocation_utmRefCoordinates_mapDatum,
        _GSMLocation_utmRefCoordinates,
        _GSMLocation_wGS84Coordinates,
        GSMLocation,
        MapDatum,
        _UMTSLocation_point,
        _UMTSLocation_pointWithUnCertainty,
        _UMTSLocation_polygon,
        UMTSLocation,
        _GeographicalCoordinates_latitudeSign,
        _GeographicalCoordinates_latitude,
        _GeographicalCoordinates_longitude,
        GeographicalCoordinates,
        _GA_Point_geographicalCoordinates,
        GA_Point,
        _GA_PointWithUnCertainty_geographicalCoordinates,
        _GA_PointWithUnCertainty_uncertaintyCode,
        GA_PointWithUnCertainty,
        maxNrOfPoints,
        __GA_Polygon__item__geographicalCoordinates,
        _GA_Polygon__item_,
        GA_Polygon,
        __CivicAddress_detailedCivicAddress__item_,
        _CivicAddress_detailedCivicAddress,
        _CivicAddress_xmlCivicAddress,
        CivicAddress,
        XmlCivicAddress,
        _DetailedCivicAddress_building,
        _DetailedCivicAddress_room,
        _DetailedCivicAddress_placeType,
        _DetailedCivicAddress_postalCommunityName,
        _DetailedCivicAddress_additionalCode,
        _DetailedCivicAddress_seat,
        _DetailedCivicAddress_primaryRoad,
        _DetailedCivicAddress_primaryRoadDirection,
        _DetailedCivicAddress_trailingStreetSuffix,
        _DetailedCivicAddress_streetSuffix,
        _DetailedCivicAddress_houseNumber,
        _DetailedCivicAddress_houseNumberSuffix,
        _DetailedCivicAddress_landmarkAddress,
        _DetailedCivicAddress_additionalLocation,
        _DetailedCivicAddress_name,
        _DetailedCivicAddress_floor,
        _DetailedCivicAddress_primaryStreet,
        _DetailedCivicAddress_primaryStreetDirection,
        _DetailedCivicAddress_roadSection,
        _DetailedCivicAddress_roadBranch,
        _DetailedCivicAddress_roadSubBranch,
        _DetailedCivicAddress_roadPreModifier,
        _DetailedCivicAddress_roadPostModifier,
        _DetailedCivicAddress_postalCode,
        _DetailedCivicAddress_town,
        _DetailedCivicAddress_county,
        _DetailedCivicAddress_country,
        _DetailedCivicAddress_language,
        DetailedCivicAddress,
        __SMS_report_sMS_Contents_sms_initiator,
        __SMS_report_sMS_Contents_transfer_status,
        __SMS_report_sMS_Contents_other_message,
        __SMS_report_sMS_Contents_content,
        _SMS_report_sMS_Contents,
        SMS_report,
        GPRSCorrelationNumber,
        _CorrelationValues_iri_to_CC,
        _CorrelationValues_iri_to_iri,
        __CorrelationValues_both_IRI_CC_iri_CC,
        __CorrelationValues_both_IRI_CC_iri_IRI,
        _CorrelationValues_both_IRI_CC,
        CorrelationValues,
        __IMS_VoIP_Correlation__item__ims_iri,
        __IMS_VoIP_Correlation__item__ims_cc,
        _IMS_VoIP_Correlation__item_,
        IMS_VoIP_Correlation,
        __IRI_to_CC_Correlation_cc__item_,
        _IRI_to_CC_Correlation_cc,
        _IRI_to_CC_Correlation_iri,
        IRI_to_CC_Correlation,
        IRI_to_IRI_Correlation,
        GPRSEvent,
        CSREvent,
        IMSevent,
        _Current_Previous_Systems_serving_System_Identifier,
        _Current_Previous_Systems_current_Serving_SGSN_Number,
        _Current_Previous_Systems_current_Serving_SGSN_Address,
        _Current_Previous_Systems_current_Serving_S4_SGSN_Address,
        _Current_Previous_Systems_previous_Serving_System_Identifier,
        _Current_Previous_Systems_previous_Serving_SGSN_Number,
        _Current_Previous_Systems_previous_Serving_SGSN_Address,
        _Current_Previous_Systems_previous_Serving_S4_SGSN_Address,
        Current_Previous_Systems,
        _Change_Of_Target_Identity_new_MSISDN,
        _Change_Of_Target_Identity_old_MSISDN,
        _Change_Of_Target_Identity_new_IMSI,
        _Change_Of_Target_Identity_old_IMSI,
        _Change_Of_Target_Identity_new_IMEI,
        _Change_Of_Target_Identity_old_IMEI,
        _Change_Of_Target_Identity_new_IMPI,
        _Change_Of_Target_Identity_old_IMPI,
        _Change_Of_Target_Identity_new_SIP_URI,
        _Change_Of_Target_Identity_old_SIP_URI,
        _Change_Of_Target_Identity_new_TEL_URI,
        _Change_Of_Target_Identity_old_TEL_URI,
        Change_Of_Target_Identity,
        Requesting_Node_Type,
        _Services_Data_Information_gPRS_parameters,
        Services_Data_Information,
        _GPRS_parameters_pDP_address_allocated_to_the_target,
        _GPRS_parameters_aPN,
        _GPRS_parameters_pDP_type,
        _GPRS_parameters_nSAPI,
        _GPRS_parameters_additionalIPaddress,
        GPRS_parameters,
        GPRSOperationErrorCode,
        LDIevent,
        _UmtsQos_qosMobileRadio,
        _UmtsQos_qosGn,
        UmtsQos,
        _MediaDecryption_info__item_,
        MediaDecryption_info,
        _CCKeyInfo_cCCSID,
        _CCKeyInfo_cCDecKey,
        _CCKeyInfo_cCSalt,
        CCKeyInfo,
        MediaSecFailureIndication,
        _PacketDataHeaderInformation_packetDataHeader,
        _PacketDataHeaderInformation_packetDataSummary,
        PacketDataHeaderInformation,
        _PacketDataHeaderReport_packetDataHeaderMapped,
        _PacketDataHeaderReport_packetDataHeaderCopy,
        PacketDataHeaderReport,
        _PacketDataHeaderMapped_sourceIPAddress,
        _PacketDataHeaderMapped_sourcePortNumber,
        _PacketDataHeaderMapped_destinationIPAddress,
        _PacketDataHeaderMapped_destinationPortNumber,
        _PacketDataHeaderMapped_transportProtocol,
        _PacketDataHeaderMapped_packetsize,
        _PacketDataHeaderMapped_flowLabel,
        _PacketDataHeaderMapped_packetCount,
        _PacketDataHeaderMapped_direction,
        PacketDataHeaderMapped,
        TPDU_direction,
        _PacketDataHeaderCopy_direction,
        _PacketDataHeaderCopy_headerCopy,
        PacketDataHeaderCopy,
        _PacketDataSummaryReport__item_,
        PacketDataSummaryReport,
        _PacketFlowSummary_sourceIPAddress,
        _PacketFlowSummary_sourcePortNumber,
        _PacketFlowSummary_destinationIPAddress,
        _PacketFlowSummary_destinationPortNumber,
        _PacketFlowSummary_transportProtocol,
        _PacketFlowSummary_flowLabel,
        _PacketFlowSummary_summaryPeriod,
        _PacketFlowSummary_packetCount,
        _PacketFlowSummary_sumOfPacketSizes,
        _PacketFlowSummary_packetDataSummaryReason,
        PacketFlowSummary,
        ReportReason,
        _ReportInterval_firstPacketTimeStamp,
        _ReportInterval_lastPacketTimeStamp,
        ReportInterval,
        _ExtendedLocParameters_posMethod,
        __ExtendedLocParameters_mapData_base64Map,
        __ExtendedLocParameters_mapData_url,
        _ExtendedLocParameters_mapData,
        __ExtendedLocParameters_altitude_alt,
        __ExtendedLocParameters_altitude_alt_uncertainty,
        _ExtendedLocParameters_altitude,
        _ExtendedLocParameters_speed,
        _ExtendedLocParameters_direction,
        _ExtendedLocParameters_level_conf,
        _ExtendedLocParameters_qOS_not_met,
        __ExtendedLocParameters_motionStateList_primaryMotionState,
        ___ExtendedLocParameters_motionStateList_secondaryMotionState__item_,
        __ExtendedLocParameters_motionStateList_secondaryMotionState,
        __ExtendedLocParameters_motionStateList_confidence,
        _ExtendedLocParameters_motionStateList,
        __ExtendedLocParameters_floor_floor_number,
        __ExtendedLocParameters_floor_floor_number_uncertainty,
        _ExtendedLocParameters_floor,
        _ExtendedLocParameters_additional_info,
        _ExtendedLocParameters_lALS_rawMLPPosData,
        ExtendedLocParameters,
        LocationErrorCode,
        _PTCEncryptionInfo_cipher,
        _PTCEncryptionInfo_cryptoContext,
        _PTCEncryptionInfo_key,
        _PTCEncryptionInfo_keyEncoding,
        _PTCEncryptionInfo_salt,
        _PTCEncryptionInfo_pTCOther,
        PTCEncryptionInfo,
        _PTC_abandonCause,
        _PTC_accessPolicyFailure,
        _PTC_accessPolicyType,
        _PTC_alertIndicator,
        _PTC_associatePresenceStatus,
        _PTC_bearer_capability,
        _PTC_broadcastIndicator,
        _PTC_contactID,
        _PTC_emergency,
        _PTC_emergencyGroupState,
        _PTC_timeStamp,
        _PTC_pTCType,
        _PTC_failureCode,
        _PTC_floorActivity,
        _PTC_floorSpeakerID,
        _PTC_groupAdSender,
        _PTC_groupAuthRule,
        _PTC_groupCharacteristics,
        _PTC_holdRetrieveInd,
        _PTC_imminentPerilInd,
        _PTC_implicitFloorReq,
        _PTC_initiationCause,
        _PTC_invitationCause,
        _PTC_iPAPartyID,
        _PTC_iPADirection,
        _PTC_listManagementAction,
        _PTC_listManagementFailure,
        _PTC_listManagementType,
        _PTC_maxTBTime,
        _PTC_mCPTTGroupID,
        _PTC_mCPTTID,
        _PTC_mCPTTInd,
        _PTC_location,
        _PTC_mCPTTOrganizationName,
        _PTC_mediaStreamAvail,
        _PTC_priority_Level,
        _PTC_preEstSessionID,
        _PTC_preEstStatus,
        _PTC_pTCGroupID,
        _PTC_pTCIDList,
        _PTC_pTCMediaCapability,
        _PTC_pTCOriginatingId,
        _PTC_pTCOther,
        _PTC_pTCParticipants,
        _PTC_pTCParty,
        _PTC_pTCPartyDrop,
        _PTC_pTCSessionInfo,
        _PTC_pTCServerURI,
        _PTC_pTCUserAccessPolicy,
        _PTC_pTCAddress,
        _PTC_queuedFloorControl,
        _PTC_queuedPosition,
        _PTC_registrationRequest,
        _PTC_registrationOutcome,
        _PTC_retrieveID,
        _PTC_rTPSetting,
        _PTC_talkBurstPriority,
        _PTC_talkBurstReason,
        _PTC_talkburstControlSetting,
        _PTC_targetPresenceStatus,
        _PTC_port_Number,
        PTC,
        _AccessPolicyType_userAccessPolicyAttempt,
        _AccessPolicyType_groupAuthorizationRulesAttempt,
        _AccessPolicyType_userAccessPolicyQuery,
        _AccessPolicyType_groupAuthorizationRulesQuery,
        _AccessPolicyType_userAccessPolicyResult,
        _AccessPolicyType_groupAuthorizationRulesResult,
        AccessPolicyType,
        AlertIndicator,
        _AssociatePresenceStatus_presenceID,
        _AssociatePresenceStatus_presenceType,
        _AssociatePresenceStatus_presenceStatus,
        AssociatePresenceStatus,
        PresenceType,
        Emergency,
        _EmergencyGroupState_clientEmergencyState,
        _EmergencyGroupState_groupEmergencyState,
        EmergencyGroupState,
        PTCType,
        _FloorActivity_tBCP_Request,
        _FloorActivity_tBCP_Granted,
        _FloorActivity_tBCP_Deny,
        _FloorActivity_tBCP_Queued,
        _FloorActivity_tBCP_Release,
        _FloorActivity_tBCP_Revoke,
        _FloorActivity_tBCP_Taken,
        _FloorActivity_tBCP_Idle,
        FloorActivity,
        GroupAuthRule,
        ImminentPerilInd,
        ImplicitFloorReq,
        InitiationCause,
        IPADirection,
        ListManagementAction,
        ListManagementType,
        Priority_Level,
        PreEstStatus,
        _PTCAddress_uri,
        _PTCAddress_privacy_setting,
        _PTCAddress_privacy_alias,
        _PTCAddress_nickname,
        PTCAddress,
        RegistrationRequest,
        RegistrationOutcome,
        _RTPSetting_ip_address,
        _RTPSetting_port_number,
        RTPSetting,
        Port_Number,
        _TalkburstControlSetting_talk_BurstControlProtocol,
        __TalkburstControlSetting_talk_Burst_parameters__item_,
        _TalkburstControlSetting_talk_Burst_parameters,
        _TalkburstControlSetting_tBCP_PortNumber,
        TalkburstControlSetting,
        Talk_burst_reason_code,
    ]

class VoIP_HI3_IMS:

    _name_  = 'VoIP-HI3-IMS'
    _oid_   = [0, 4, 0, 2, 2, 4, 12, 15, 1]
    
    _obj_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi3voipDomainId',
        'Voip-CC-PDU',
        'VoipLIC-header',
        'VoipCorrelationNumber',
        'TPDU-direction',
        'ICE-type',
        'Payload-description',
        ]
    _type_ = [
        'Voip-CC-PDU',
        'VoipLIC-header',
        'VoipCorrelationNumber',
        'TPDU-direction',
        'ICE-type',
        'Payload-description',
        ]
    _set_ = [
        ]
    _val_ = [
        'lawfulInterceptDomainId',
        'threeGPPSUBDomainId',
        'hi3voipDomainId',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< lawfulInterceptDomainId >-----#
    lawfulInterceptDomainId = OID(name='lawfulInterceptDomainId', mode=MODE_VALUE)
    lawfulInterceptDomainId._val = (0, 4, 0, 2, 2)
    
    #-----< threeGPPSUBDomainId >-----#
    threeGPPSUBDomainId = OID(name='threeGPPSUBDomainId', mode=MODE_VALUE)
    threeGPPSUBDomainId._val = (0, 4, 0, 2, 2, 4)
    
    #-----< hi3voipDomainId >-----#
    hi3voipDomainId = OID(name='hi3voipDomainId', mode=MODE_VALUE)
    hi3voipDomainId._val = (0, 4, 0, 2, 2, 4, 12, 15, 1)
    
    #-----< Voip-CC-PDU >-----#
    Voip_CC_PDU = SEQ(name='Voip-CC-PDU', mode=MODE_TYPE)
    _Voip_CC_PDU_voipLIC_header = SEQ(name='voipLIC-header', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('VoIP-HI3-IMS', 'VoipLIC-header')))
    _Voip_CC_PDU_payload = OCT_STR(name='payload', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Voip_CC_PDU._cont = ASN1Dict([
        ('voipLIC-header', _Voip_CC_PDU_voipLIC_header),
        ('payload', _Voip_CC_PDU_payload),
        ])
    Voip_CC_PDU._ext = None
    
    #-----< VoipLIC-header >-----#
    VoipLIC_header = SEQ(name='VoipLIC-header', mode=MODE_TYPE)
    _VoipLIC_header_hi3voipDomainId = OID(name='hi3voipDomainId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _VoipLIC_header_lIID = OCT_STR(name='lIID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'LawfulInterceptionIdentifier')), opt=True)
    _VoipLIC_header_voipCorrelationNumber = OCT_STR(name='voipCorrelationNumber', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('VoIP-HI3-IMS', 'VoipCorrelationNumber')))
    _VoipLIC_header_timeStamp = CHOICE(name='timeStamp', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'TimeStamp')), opt=True)
    _VoipLIC_header_sequence_number = INT(name='sequence-number', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _VoipLIC_header_sequence_number._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _VoipLIC_header_t_PDU_direction = ENUM(name='t-PDU-direction', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('VoIP-HI3-IMS', 'TPDU-direction')))
    _VoipLIC_header_national_HI3_ASN1parameters = SEQ(name='national-HI3-ASN1parameters', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Eps-HI3-PS', 'National-HI3-ASN1parameters')), opt=True)
    _VoipLIC_header_ice_type = ENUM(name='ice-type', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('VoIP-HI3-IMS', 'ICE-type')), opt=True)
    _VoipLIC_header_payload_description = SEQ(name='payload-description', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('VoIP-HI3-IMS', 'Payload-description')), opt=True)
    _VoipLIC_header_networkIdentifier = SEQ(name='networkIdentifier', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('HI2Operations', 'Network-Identifier')), opt=True)
    _VoipLIC_header_pTCSessionInfo = STR_UTF8(name='pTCSessionInfo', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    VoipLIC_header._cont = ASN1Dict([
        ('hi3voipDomainId', _VoipLIC_header_hi3voipDomainId),
        ('lIID', _VoipLIC_header_lIID),
        ('voipCorrelationNumber', _VoipLIC_header_voipCorrelationNumber),
        ('timeStamp', _VoipLIC_header_timeStamp),
        ('sequence-number', _VoipLIC_header_sequence_number),
        ('t-PDU-direction', _VoipLIC_header_t_PDU_direction),
        ('national-HI3-ASN1parameters', _VoipLIC_header_national_HI3_ASN1parameters),
        ('ice-type', _VoipLIC_header_ice_type),
        ('payload-description', _VoipLIC_header_payload_description),
        ('networkIdentifier', _VoipLIC_header_networkIdentifier),
        ('pTCSessionInfo', _VoipLIC_header_pTCSessionInfo),
        ])
    VoipLIC_header._ext = ['payload-description', 'networkIdentifier', 'pTCSessionInfo']
    
    #-----< VoipCorrelationNumber >-----#
    VoipCorrelationNumber = OCT_STR(name='VoipCorrelationNumber', mode=MODE_TYPE)
    
    #-----< TPDU-direction >-----#
    TPDU_direction = ENUM(name='TPDU-direction', mode=MODE_TYPE)
    TPDU_direction._cont = ASN1Dict([('from-target', 1), ('to-target', 2), ('combined', 3), ('unknown', 4)])
    TPDU_direction._ext = None
    
    #-----< ICE-type >-----#
    ICE_type = ENUM(name='ICE-type', mode=MODE_TYPE)
    ICE_type._cont = ASN1Dict([('ggsn', 1), ('pDN-GW', 2), ('aGW', 3), ('trGW', 4), ('mGW', 5), ('other', 6), ('unknown', 7), ('mRF', 8), ('lmISF', 9), ('sGW', 10)])
    ICE_type._ext = ['mRF', 'lmISF', 'sGW']
    
    #-----< Payload-description >-----#
    Payload_description = SEQ(name='Payload-description', mode=MODE_TYPE)
    _Payload_description_copyOfSDPdescription = OCT_STR(name='copyOfSDPdescription', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Payload_description_mediaFormat = INT(name='mediaFormat', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Payload_description_mediaFormat._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    _Payload_description_mediaAttributes = OCT_STR(name='mediaAttributes', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Payload_description._cont = ASN1Dict([
        ('copyOfSDPdescription', _Payload_description_copyOfSDPdescription),
        ('mediaFormat', _Payload_description_mediaFormat),
        ('mediaAttributes', _Payload_description_mediaAttributes),
        ])
    Payload_description._ext = ['mediaFormat', 'mediaAttributes']
    
    _all_ = [
        lawfulInterceptDomainId,
        threeGPPSUBDomainId,
        hi3voipDomainId,
        _Voip_CC_PDU_voipLIC_header,
        _Voip_CC_PDU_payload,
        Voip_CC_PDU,
        _VoipLIC_header_hi3voipDomainId,
        _VoipLIC_header_lIID,
        _VoipLIC_header_voipCorrelationNumber,
        _VoipLIC_header_timeStamp,
        _VoipLIC_header_sequence_number,
        _VoipLIC_header_t_PDU_direction,
        _VoipLIC_header_national_HI3_ASN1parameters,
        _VoipLIC_header_ice_type,
        _VoipLIC_header_payload_description,
        _VoipLIC_header_networkIdentifier,
        _VoipLIC_header_pTCSessionInfo,
        VoipLIC_header,
        VoipCorrelationNumber,
        TPDU_direction,
        ICE_type,
        _Payload_description_copyOfSDPdescription,
        _Payload_description_mediaFormat,
        _Payload_description_mediaAttributes,
        Payload_description,
    ]

init_modules(CONF_HI3_IMS, CONFHI2Operations, CSvoice_HI3_IP, EN301040, Eps_HI3_PS, EpsHI2Operations, GCSE_HI3, GCSEHI2Operations, HI2Operations, HI3CCLinkData, IWLANUmtsHI2Operations, MBMSUmtsHI2Operations, Mms_HI3_PS, MmsHI2Operations, ProSeHI2Operations, Remote_Operations_Information_Objects, PCESP, TS101909201, ThreeGPP_HI1NotificationOperations, UMTS_HI3CircuitLIOperations, Umts_HI3_PS, UmtsCS_HI2Operations, UmtsHI2Operations, VoIP_HI3_IMS)
