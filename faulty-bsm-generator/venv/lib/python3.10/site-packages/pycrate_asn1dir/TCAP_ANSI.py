# -*- coding: UTF-8 -*-
# Code automatically generated by pycrate_asn1c

from pycrate_asn1rt.utils            import *
from pycrate_asn1rt.err              import *
from pycrate_asn1rt.glob             import make_GLOBAL, GLOBAL
from pycrate_asn1rt.dictobj          import ASN1Dict
from pycrate_asn1rt.refobj           import *
from pycrate_asn1rt.setobj           import *
from pycrate_asn1rt.asnobj_basic     import *
from pycrate_asn1rt.asnobj_str       import *
from pycrate_asn1rt.asnobj_construct import *
from pycrate_asn1rt.asnobj_class     import *
from pycrate_asn1rt.asnobj_ext       import *
from pycrate_asn1rt.init             import init_modules

class TCAP_Remote_Operations_Information_Objects:

    _name_  = 'TCAP-Remote-Operations-Information-Objects'
    _oid_   = [1, 2, 840, 10013, 0, 1, 4]
    
    _obj_ = [
        'OPERATION',
        'ERROR',
        'OPERATION-PACKAGE',
        'CONNECTION-PACKAGE',
        'CONTRACT',
        'ROS-OBJECT-CLASS',
        'OperationCode',
        'ErrorCode',
        'Priority',
        'refuse',
        'emptyBind',
        'emptyUnbind',
        'InvokeId',
        'Errors',
        ]
    _type_ = [
        'OPERATION',
        'ERROR',
        'OPERATION-PACKAGE',
        'CONNECTION-PACKAGE',
        'CONTRACT',
        'ROS-OBJECT-CLASS',
        'OperationCode',
        'ErrorCode',
        'Priority',
        'InvokeId',
        ]
    _set_ = [
        'Errors',
        ]
    _val_ = [
        'refuse',
        'emptyBind',
        'emptyUnbind',
        ]
    _class_ = [
        'OPERATION',
        'ERROR',
        'OPERATION-PACKAGE',
        'CONNECTION-PACKAGE',
        'CONTRACT',
        'ROS-OBJECT-CLASS',
        'refuse',
        'emptyBind',
        'emptyUnbind',
        'Errors',
        ]
    _param_ = [
        'Errors',
        ]
    
    #-----< OPERATION >-----#
    OPERATION = CLASS(name='OPERATION', mode=MODE_TYPE)
    _OPERATION_ArgumentType = OPEN(name='ArgumentType', mode=MODE_TYPE, opt=True)
    _OPERATION_argumentTypeOptional = BOOL(name='argumentTypeOptional', mode=MODE_VALUE, opt=True)
    _OPERATION_returnResult = BOOL(name='returnResult', mode=MODE_VALUE, default=True)
    _OPERATION_ResultType = OPEN(name='ResultType', mode=MODE_TYPE, opt=True)
    _OPERATION_resultTypeOptional = BOOL(name='resultTypeOptional', mode=MODE_VALUE, opt=True)
    _OPERATION_Errors = CLASS(name='Errors', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'ERROR')), opt=True)
    _OPERATION_Linked = CLASS(name='Linked', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'OPERATION')), opt=True)
    _OPERATION_synchronous = BOOL(name='synchronous', mode=MODE_VALUE, default=False)
    _OPERATION_alwaysReturns = BOOL(name='alwaysReturns', mode=MODE_VALUE, default=True)
    _OPERATION_InvokePriority = INT(name='InvokePriority', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'Priority')), opt=True)
    _OPERATION_ResultPriority = INT(name='ResultPriority', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'Priority')), opt=True)
    _OPERATION_invokeLast = BOOL(name='invokeLast', mode=MODE_VALUE, default=False)
    _OPERATION_operationCode = CHOICE(name='operationCode', mode=MODE_VALUE, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'OperationCode')), opt=True, uniq=True)
    OPERATION._cont = ASN1Dict([
        ('ArgumentType', _OPERATION_ArgumentType),
        ('argumentTypeOptional', _OPERATION_argumentTypeOptional),
        ('returnResult', _OPERATION_returnResult),
        ('ResultType', _OPERATION_ResultType),
        ('resultTypeOptional', _OPERATION_resultTypeOptional),
        ('Errors', _OPERATION_Errors),
        ('Linked', _OPERATION_Linked),
        ('synchronous', _OPERATION_synchronous),
        ('alwaysReturns', _OPERATION_alwaysReturns),
        ('InvokePriority', _OPERATION_InvokePriority),
        ('ResultPriority', _OPERATION_ResultPriority),
        ('invokeLast', _OPERATION_invokeLast),
        ('operationCode', _OPERATION_operationCode),
        ])
    
    #-----< ERROR >-----#
    ERROR = CLASS(name='ERROR', mode=MODE_TYPE)
    _ERROR_ParameterType = OPEN(name='ParameterType', mode=MODE_TYPE, opt=True)
    _ERROR_parameterTypeOptional = BOOL(name='parameterTypeOptional', mode=MODE_VALUE, opt=True)
    _ERROR_ErrorPriority = INT(name='ErrorPriority', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'Priority')), opt=True)
    _ERROR_errorCode = CHOICE(name='errorCode', mode=MODE_VALUE, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'ErrorCode')), opt=True, uniq=True)
    ERROR._cont = ASN1Dict([
        ('ParameterType', _ERROR_ParameterType),
        ('parameterTypeOptional', _ERROR_parameterTypeOptional),
        ('ErrorPriority', _ERROR_ErrorPriority),
        ('errorCode', _ERROR_errorCode),
        ])
    
    #-----< OPERATION-PACKAGE >-----#
    OPERATION_PACKAGE = CLASS(name='OPERATION-PACKAGE', mode=MODE_TYPE)
    _OPERATION_PACKAGE_Both = CLASS(name='Both', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'OPERATION')), opt=True)
    _OPERATION_PACKAGE_Consumer = CLASS(name='Consumer', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'OPERATION')), opt=True)
    _OPERATION_PACKAGE_Supplier = CLASS(name='Supplier', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'OPERATION')), opt=True)
    _OPERATION_PACKAGE_id = OID(name='id', mode=MODE_VALUE, opt=True, uniq=True)
    OPERATION_PACKAGE._cont = ASN1Dict([
        ('Both', _OPERATION_PACKAGE_Both),
        ('Consumer', _OPERATION_PACKAGE_Consumer),
        ('Supplier', _OPERATION_PACKAGE_Supplier),
        ('id', _OPERATION_PACKAGE_id),
        ])
    
    #-----< CONNECTION-PACKAGE >-----#
    CONNECTION_PACKAGE = CLASS(name='CONNECTION-PACKAGE', mode=MODE_TYPE)
    _CONNECTION_PACKAGE_bind = CLASS(name='bind', mode=MODE_VALUE, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'OPERATION')), default=dict([('Errors', ASN1Set(rv=[dict([('errorCode', ('local', -1))])], rr=[], ev=None, er=[])), ('synchronous', True)]))
    _CONNECTION_PACKAGE_unbind = CLASS(name='unbind', mode=MODE_VALUE, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'OPERATION')), default=dict([('synchronous', True)]))
    _CONNECTION_PACKAGE_responderCanUnbind = BOOL(name='responderCanUnbind', mode=MODE_VALUE, default=False)
    _CONNECTION_PACKAGE_unbindCanFail = BOOL(name='unbindCanFail', mode=MODE_VALUE, default=False)
    _CONNECTION_PACKAGE_id = OID(name='id', mode=MODE_VALUE, opt=True, uniq=True)
    CONNECTION_PACKAGE._cont = ASN1Dict([
        ('bind', _CONNECTION_PACKAGE_bind),
        ('unbind', _CONNECTION_PACKAGE_unbind),
        ('responderCanUnbind', _CONNECTION_PACKAGE_responderCanUnbind),
        ('unbindCanFail', _CONNECTION_PACKAGE_unbindCanFail),
        ('id', _CONNECTION_PACKAGE_id),
        ])
    
    #-----< CONTRACT >-----#
    CONTRACT = CLASS(name='CONTRACT', mode=MODE_TYPE)
    _CONTRACT_connection = CLASS(name='connection', mode=MODE_VALUE, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'CONNECTION-PACKAGE')), opt=True)
    _CONTRACT_OperationsOf = CLASS(name='OperationsOf', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'OPERATION-PACKAGE')), opt=True)
    _CONTRACT_InitiatorConsumerOf = CLASS(name='InitiatorConsumerOf', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'OPERATION-PACKAGE')), opt=True)
    _CONTRACT_InitiatorSupplierOf = CLASS(name='InitiatorSupplierOf', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'OPERATION-PACKAGE')), opt=True)
    _CONTRACT_id = OID(name='id', mode=MODE_VALUE, opt=True, uniq=True)
    CONTRACT._cont = ASN1Dict([
        ('connection', _CONTRACT_connection),
        ('OperationsOf', _CONTRACT_OperationsOf),
        ('InitiatorConsumerOf', _CONTRACT_InitiatorConsumerOf),
        ('InitiatorSupplierOf', _CONTRACT_InitiatorSupplierOf),
        ('id', _CONTRACT_id),
        ])
    
    #-----< ROS-OBJECT-CLASS >-----#
    ROS_OBJECT_CLASS = CLASS(name='ROS-OBJECT-CLASS', mode=MODE_TYPE)
    _ROS_OBJECT_CLASS_Is = CLASS(name='Is', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'ROS-OBJECT-CLASS')), opt=True)
    _ROS_OBJECT_CLASS_Initiates = CLASS(name='Initiates', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'CONTRACT')), opt=True)
    _ROS_OBJECT_CLASS_Responds = CLASS(name='Responds', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'CONTRACT')), opt=True)
    _ROS_OBJECT_CLASS_InitiatesAndResponds = CLASS(name='InitiatesAndResponds', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'CONTRACT')), opt=True)
    _ROS_OBJECT_CLASS_id = OID(name='id', mode=MODE_VALUE, uniq=True)
    ROS_OBJECT_CLASS._cont = ASN1Dict([
        ('Is', _ROS_OBJECT_CLASS_Is),
        ('Initiates', _ROS_OBJECT_CLASS_Initiates),
        ('Responds', _ROS_OBJECT_CLASS_Responds),
        ('InitiatesAndResponds', _ROS_OBJECT_CLASS_InitiatesAndResponds),
        ('id', _ROS_OBJECT_CLASS_id),
        ])
    
    #-----< OperationCode >-----#
    OperationCode = CHOICE(name='OperationCode', mode=MODE_TYPE)
    _OperationCode_national = INT(name='national', mode=MODE_TYPE, tag=(16, TAG_PRIVATE, TAG_IMPLICIT))
    _OperationCode_national._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _OperationCode_private = INT(name='private', mode=MODE_TYPE, tag=(17, TAG_PRIVATE, TAG_IMPLICIT))
    OperationCode._cont = ASN1Dict([
        ('national', _OperationCode_national),
        ('private', _OperationCode_private),
        ])
    OperationCode._ext = None
    
    #-----< ErrorCode >-----#
    ErrorCode = CHOICE(name='ErrorCode', mode=MODE_TYPE)
    _ErrorCode_national = INT(name='national', mode=MODE_TYPE, tag=(19, TAG_PRIVATE, TAG_EXPLICIT))
    _ErrorCode_national._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _ErrorCode_private = INT(name='private', mode=MODE_TYPE, tag=(20, TAG_PRIVATE, TAG_EXPLICIT))
    _ErrorCode_local = INT(name='local', mode=MODE_TYPE)
    ErrorCode._cont = ASN1Dict([
        ('national', _ErrorCode_national),
        ('private', _ErrorCode_private),
        ('local', _ErrorCode_local),
        ])
    ErrorCode._ext = None
    
    #-----< Priority >-----#
    Priority = INT(name='Priority', mode=MODE_TYPE)
    Priority._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=None)], ev=None, er=[])
    
    #-----< refuse >-----#
    refuse = CLASS(name='refuse', mode=MODE_VALUE, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'ERROR')))
    refuse._val = dict([('errorCode', ('local', -1))])
    
    #-----< emptyBind >-----#
    emptyBind = CLASS(name='emptyBind', mode=MODE_VALUE, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'OPERATION')))
    emptyBind._val = dict([('Errors', ASN1Set(rv=[dict([('errorCode', ('local', -1))])], rr=[], ev=None, er=[])), ('synchronous', True)])
    
    #-----< emptyUnbind >-----#
    emptyUnbind = CLASS(name='emptyUnbind', mode=MODE_VALUE, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'OPERATION')))
    emptyUnbind._val = dict([('synchronous', True)])
    
    #-----< InvokeId >-----#
    InvokeId = CHOICE(name='InvokeId', mode=MODE_TYPE)
    _InvokeId_present = INT(name='present', mode=MODE_TYPE)
    _InvokeId_absent = NULL(name='absent', mode=MODE_TYPE)
    InvokeId._cont = ASN1Dict([
        ('present', _InvokeId_present),
        ('absent', _InvokeId_absent),
        ])
    InvokeId._ext = None
    
    #-----< Errors >-----#
    Errors = CLASS(name='Errors', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'ERROR')), param=True)
    
    _all_ = [
        _OPERATION_ArgumentType,
        _OPERATION_argumentTypeOptional,
        _OPERATION_returnResult,
        _OPERATION_ResultType,
        _OPERATION_resultTypeOptional,
        _OPERATION_Errors,
        _OPERATION_Linked,
        _OPERATION_synchronous,
        _OPERATION_alwaysReturns,
        _OPERATION_InvokePriority,
        _OPERATION_ResultPriority,
        _OPERATION_invokeLast,
        _OPERATION_operationCode,
        OPERATION,
        _ERROR_ParameterType,
        _ERROR_parameterTypeOptional,
        _ERROR_ErrorPriority,
        _ERROR_errorCode,
        ERROR,
        _OPERATION_PACKAGE_Both,
        _OPERATION_PACKAGE_Consumer,
        _OPERATION_PACKAGE_Supplier,
        _OPERATION_PACKAGE_id,
        OPERATION_PACKAGE,
        _CONNECTION_PACKAGE_bind,
        _CONNECTION_PACKAGE_unbind,
        _CONNECTION_PACKAGE_responderCanUnbind,
        _CONNECTION_PACKAGE_unbindCanFail,
        _CONNECTION_PACKAGE_id,
        CONNECTION_PACKAGE,
        _CONTRACT_connection,
        _CONTRACT_OperationsOf,
        _CONTRACT_InitiatorConsumerOf,
        _CONTRACT_InitiatorSupplierOf,
        _CONTRACT_id,
        CONTRACT,
        _ROS_OBJECT_CLASS_Is,
        _ROS_OBJECT_CLASS_Initiates,
        _ROS_OBJECT_CLASS_Responds,
        _ROS_OBJECT_CLASS_InitiatesAndResponds,
        _ROS_OBJECT_CLASS_id,
        ROS_OBJECT_CLASS,
        _OperationCode_national,
        _OperationCode_private,
        OperationCode,
        _ErrorCode_national,
        _ErrorCode_private,
        _ErrorCode_local,
        ErrorCode,
        Priority,
        refuse,
        emptyBind,
        emptyUnbind,
        _InvokeId_present,
        _InvokeId_absent,
        InvokeId,
    ]

class TCAPPackage:

    _name_  = 'TCAPPackage'
    _oid_   = [1, 2, 840, 10013, 0, 0, 4]
    
    _obj_ = [
        'PackageType',
        'UniTransactionPDU',
        'TransactionPDU',
        'TransactionID',
        'Abort',
        'P-Abort-cause',
        'DialoguePortion',
        'ProtocolVersion',
        'IntegerApplicationContext',
        'ObjectIDApplicationContext',
        'UserInformation',
        'Confidentiality',
        'UserAbortInformation',
        'ComponentSequence',
        'ComponentPDU',
        'Invoke',
        'ReturnResult',
        'ReturnError',
        'Reject',
        'RejectProblem',
        'TCInvokeIdSet',
        ]
    _type_ = [
        'PackageType',
        'UniTransactionPDU',
        'TransactionPDU',
        'TransactionID',
        'Abort',
        'P-Abort-cause',
        'DialoguePortion',
        'ProtocolVersion',
        'IntegerApplicationContext',
        'ObjectIDApplicationContext',
        'UserInformation',
        'Confidentiality',
        'UserAbortInformation',
        'ComponentSequence',
        'ComponentPDU',
        'Invoke',
        'ReturnResult',
        'ReturnError',
        'Reject',
        'RejectProblem',
        ]
    _set_ = [
        'TCInvokeIdSet',
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        'ComponentPDU',
        'Invoke',
        'ReturnResult',
        'ReturnError',
        ]
    
    #-----< PackageType >-----#
    PackageType = CHOICE(name='PackageType', mode=MODE_TYPE)
    _PackageType_unidirectional = SEQ(name='unidirectional', mode=MODE_TYPE, tag=(1, TAG_PRIVATE, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPPackage', 'UniTransactionPDU')))
    _PackageType_queryWithPerm = SEQ(name='queryWithPerm', mode=MODE_TYPE, tag=(2, TAG_PRIVATE, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPPackage', 'TransactionPDU')))
    _PackageType_queryWithoutPerm = SEQ(name='queryWithoutPerm', mode=MODE_TYPE, tag=(3, TAG_PRIVATE, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPPackage', 'TransactionPDU')))
    _PackageType_response = SEQ(name='response', mode=MODE_TYPE, tag=(4, TAG_PRIVATE, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPPackage', 'TransactionPDU')))
    _PackageType_conversationWithPerm = SEQ(name='conversationWithPerm', mode=MODE_TYPE, tag=(5, TAG_PRIVATE, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPPackage', 'TransactionPDU')))
    _PackageType_conversationWithoutPerm = SEQ(name='conversationWithoutPerm', mode=MODE_TYPE, tag=(6, TAG_PRIVATE, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPPackage', 'TransactionPDU')))
    _PackageType_abort = SEQ(name='abort', mode=MODE_TYPE, tag=(22, TAG_PRIVATE, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPPackage', 'Abort')))
    PackageType._cont = ASN1Dict([
        ('unidirectional', _PackageType_unidirectional),
        ('queryWithPerm', _PackageType_queryWithPerm),
        ('queryWithoutPerm', _PackageType_queryWithoutPerm),
        ('response', _PackageType_response),
        ('conversationWithPerm', _PackageType_conversationWithPerm),
        ('conversationWithoutPerm', _PackageType_conversationWithoutPerm),
        ('abort', _PackageType_abort),
        ])
    PackageType._ext = None
    
    #-----< UniTransactionPDU >-----#
    UniTransactionPDU = SEQ(name='UniTransactionPDU', mode=MODE_TYPE)
    _UniTransactionPDU_identifier = OCT_STR(name='identifier', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPPackage', 'TransactionID')))
    _UniTransactionPDU_dialoguePortion = SEQ(name='dialoguePortion', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPPackage', 'DialoguePortion')), opt=True)
    _UniTransactionPDU_componentPortion = SEQ_OF(name='componentPortion', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPPackage', 'ComponentSequence')))
    UniTransactionPDU._cont = ASN1Dict([
        ('identifier', _UniTransactionPDU_identifier),
        ('dialoguePortion', _UniTransactionPDU_dialoguePortion),
        ('componentPortion', _UniTransactionPDU_componentPortion),
        ])
    UniTransactionPDU._ext = None
    
    #-----< TransactionPDU >-----#
    TransactionPDU = SEQ(name='TransactionPDU', mode=MODE_TYPE)
    _TransactionPDU_identifier = OCT_STR(name='identifier', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPPackage', 'TransactionID')))
    _TransactionPDU_dialoguePortion = SEQ(name='dialoguePortion', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPPackage', 'DialoguePortion')), opt=True)
    _TransactionPDU_componentPortion = SEQ_OF(name='componentPortion', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPPackage', 'ComponentSequence')), opt=True)
    TransactionPDU._cont = ASN1Dict([
        ('identifier', _TransactionPDU_identifier),
        ('dialoguePortion', _TransactionPDU_dialoguePortion),
        ('componentPortion', _TransactionPDU_componentPortion),
        ])
    TransactionPDU._ext = None
    
    #-----< TransactionID >-----#
    TransactionID = OCT_STR(name='TransactionID', mode=MODE_TYPE, tag=(7, TAG_PRIVATE, TAG_IMPLICIT))
    
    #-----< Abort >-----#
    Abort = SEQ(name='Abort', mode=MODE_TYPE)
    _Abort_identifier = OCT_STR(name='identifier', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPPackage', 'TransactionID')))
    _Abort_dialoguePortion = SEQ(name='dialoguePortion', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPPackage', 'DialoguePortion')), opt=True)
    _Abort_causeInformation = CHOICE(name='causeInformation', mode=MODE_TYPE, opt=True)
    __Abort_causeInformation_abortCause = INT(name='abortCause', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPPackage', 'P-Abort-cause')))
    __Abort_causeInformation_userInformation = EXT(name='userInformation', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPPackage', 'UserAbortInformation')))
    _Abort_causeInformation._cont = ASN1Dict([
        ('abortCause', __Abort_causeInformation_abortCause),
        ('userInformation', __Abort_causeInformation_userInformation),
        ])
    _Abort_causeInformation._ext = None
    Abort._cont = ASN1Dict([
        ('identifier', _Abort_identifier),
        ('dialoguePortion', _Abort_dialoguePortion),
        ('causeInformation', _Abort_causeInformation),
        ])
    Abort._ext = None
    
    #-----< P-Abort-cause >-----#
    P_Abort_cause = INT(name='P-Abort-cause', mode=MODE_TYPE, tag=(23, TAG_PRIVATE, TAG_IMPLICIT))
    P_Abort_cause._cont = ASN1Dict([('unrecognizedPackageType', 1), ('incorrectTransactionPortion', 2), ('badlyStructuredTransactionPortion', 3), ('unassignedRespondingTransactionID', 4), ('permissionToReleaseProblem', 5), ('resourceUnavailable', 6), ('unrecognizedDialoguePortionID', 7), ('badlyStructuredDialoguePortion', 8), ('missingDialoguePortion', 9), ('inconsistentDialoguePortion', 10)])
    
    #-----< DialoguePortion >-----#
    DialoguePortion = SEQ(name='DialoguePortion', mode=MODE_TYPE, tag=(25, TAG_PRIVATE, TAG_IMPLICIT))
    _DialoguePortion_version = OCT_STR(name='version', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPPackage', 'ProtocolVersion')), opt=True)
    _DialoguePortion_applicationContext = CHOICE(name='applicationContext', mode=MODE_TYPE, opt=True)
    __DialoguePortion_applicationContext_integerApplicationId = INT(name='integerApplicationId', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPPackage', 'IntegerApplicationContext')))
    __DialoguePortion_applicationContext_objectApplicationId = OID(name='objectApplicationId', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPPackage', 'ObjectIDApplicationContext')))
    _DialoguePortion_applicationContext._cont = ASN1Dict([
        ('integerApplicationId', __DialoguePortion_applicationContext_integerApplicationId),
        ('objectApplicationId', __DialoguePortion_applicationContext_objectApplicationId),
        ])
    _DialoguePortion_applicationContext._ext = None
    _DialoguePortion_userInformation = SEQ_OF(name='userInformation', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPPackage', 'UserInformation')), opt=True)
    _DialoguePortion_securityContext = CHOICE(name='securityContext', mode=MODE_TYPE, opt=True)
    __DialoguePortion_securityContext_integerSecurityId = INT(name='integerSecurityId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DialoguePortion_securityContext_objectSecurityId = OID(name='objectSecurityId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DialoguePortion_securityContext._cont = ASN1Dict([
        ('integerSecurityId', __DialoguePortion_securityContext_integerSecurityId),
        ('objectSecurityId', __DialoguePortion_securityContext_objectSecurityId),
        ])
    _DialoguePortion_securityContext._ext = None
    _DialoguePortion_confidentiality = SEQ(name='confidentiality', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPPackage', 'Confidentiality')), opt=True)
    DialoguePortion._cont = ASN1Dict([
        ('version', _DialoguePortion_version),
        ('applicationContext', _DialoguePortion_applicationContext),
        ('userInformation', _DialoguePortion_userInformation),
        ('securityContext', _DialoguePortion_securityContext),
        ('confidentiality', _DialoguePortion_confidentiality),
        ])
    DialoguePortion._ext = None
    
    #-----< ProtocolVersion >-----#
    ProtocolVersion = OCT_STR(name='ProtocolVersion', mode=MODE_TYPE, tag=(26, TAG_PRIVATE, TAG_IMPLICIT))
    ProtocolVersion._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< IntegerApplicationContext >-----#
    IntegerApplicationContext = INT(name='IntegerApplicationContext', mode=MODE_TYPE, tag=(27, TAG_PRIVATE, TAG_IMPLICIT))
    
    #-----< ObjectIDApplicationContext >-----#
    ObjectIDApplicationContext = OID(name='ObjectIDApplicationContext', mode=MODE_TYPE, tag=(28, TAG_PRIVATE, TAG_IMPLICIT))
    
    #-----< UserInformation >-----#
    UserInformation = SEQ_OF(name='UserInformation', mode=MODE_TYPE, tag=(29, TAG_PRIVATE, TAG_IMPLICIT))
    _UserInformation__item_ = EXT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('_IMPL_', 'EXTERNAL')))
    UserInformation._cont = _UserInformation__item_
    
    #-----< Confidentiality >-----#
    Confidentiality = SEQ(name='Confidentiality', mode=MODE_TYPE)
    _Confidentiality_confidentialityId = CHOICE(name='confidentialityId', mode=MODE_TYPE, opt=True)
    __Confidentiality_confidentialityId_integerConfidentialityId = INT(name='integerConfidentialityId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Confidentiality_confidentialityId_objectConfidentialityId = OID(name='objectConfidentialityId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Confidentiality_confidentialityId._cont = ASN1Dict([
        ('integerConfidentialityId', __Confidentiality_confidentialityId_integerConfidentialityId),
        ('objectConfidentialityId', __Confidentiality_confidentialityId_objectConfidentialityId),
        ])
    _Confidentiality_confidentialityId._ext = None
    Confidentiality._cont = ASN1Dict([
        ('confidentialityId', _Confidentiality_confidentialityId),
        ])
    Confidentiality._ext = []
    
    #-----< UserAbortInformation >-----#
    UserAbortInformation = EXT(name='UserAbortInformation', mode=MODE_TYPE, tag=(24, TAG_PRIVATE, TAG_EXPLICIT), typeref=ASN1RefType(('_IMPL_', 'EXTERNAL')))
    
    #-----< ComponentSequence >-----#
    ComponentSequence = SEQ_OF(name='ComponentSequence', mode=MODE_TYPE, tag=(8, TAG_PRIVATE, TAG_IMPLICIT))
    _ComponentSequence__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPPackage', 'ComponentPDU')))
    __ComponentSequence__item__invokeLast = SEQ(name='invokeLast', mode=MODE_TYPE, tag=(9, TAG_PRIVATE, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPPackage', 'Invoke')))
    ___ComponentSequence__item__invokeLast_componentIDs = OCT_STR(name='componentIDs', mode=MODE_TYPE, tag=(15, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    ___ComponentSequence__item__invokeLast_componentIDs._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2)], ev=None, er=[])
    ___ComponentSequence__item__invokeLast_opcode = CHOICE(name='opcode', mode=MODE_TYPE, typeref=ASN1RefClassField(('TCAP-Remote-Operations-Information-Objects', 'OPERATION'), ['operationCode']))
    ____ComponentSequence__item__invokeLast_opcode_tab = CLASS(name='_tab_OPERATION', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'OPERATION')))
    ____ComponentSequence__item__invokeLast_opcode_tab._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    ___ComponentSequence__item__invokeLast_opcode._const_tab = ____ComponentSequence__item__invokeLast_opcode_tab
    ___ComponentSequence__item__invokeLast_opcode._const_tab_at = None
    ___ComponentSequence__item__invokeLast_opcode._const_tab_id = 'operationCode'
    ___ComponentSequence__item__invokeLast_parameter = OPEN(name='parameter', mode=MODE_TYPE, typeref=ASN1RefClassField(('TCAP-Remote-Operations-Information-Objects', 'OPERATION'), ['ResultType']), opt=True)
    ____ComponentSequence__item__invokeLast_parameter_tab = CLASS(name='_tab_OPERATION', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'OPERATION')))
    ____ComponentSequence__item__invokeLast_parameter_tab._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    ___ComponentSequence__item__invokeLast_parameter._const_tab = ____ComponentSequence__item__invokeLast_parameter_tab
    ___ComponentSequence__item__invokeLast_parameter._const_tab_at = ('..', 'opcode')
    ___ComponentSequence__item__invokeLast_parameter._const_tab_id = 'ResultType'
    __ComponentSequence__item__invokeLast._cont = ASN1Dict([
        ('componentIDs', ___ComponentSequence__item__invokeLast_componentIDs),
        ('opcode', ___ComponentSequence__item__invokeLast_opcode),
        ('parameter', ___ComponentSequence__item__invokeLast_parameter),
        ])
    __ComponentSequence__item__invokeLast._ext = None
    __ComponentSequence__item__returnResultLast = SEQ(name='returnResultLast', mode=MODE_TYPE, tag=(10, TAG_PRIVATE, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPPackage', 'ReturnResult')))
    ___ComponentSequence__item__returnResultLast_componentID = OCT_STR(name='componentID', mode=MODE_TYPE, tag=(15, TAG_PRIVATE, TAG_IMPLICIT))
    ___ComponentSequence__item__returnResultLast_componentID._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    ___ComponentSequence__item__returnResultLast_parameter = OPEN(name='parameter', mode=MODE_TYPE, typeref=ASN1RefClassField(('TCAP-Remote-Operations-Information-Objects', 'OPERATION'), ['ResultType']), opt=True)
    __ComponentSequence__item__returnResultLast._cont = ASN1Dict([
        ('componentID', ___ComponentSequence__item__returnResultLast_componentID),
        ('parameter', ___ComponentSequence__item__returnResultLast_parameter),
        ])
    __ComponentSequence__item__returnResultLast._ext = None
    __ComponentSequence__item__returnError = SEQ(name='returnError', mode=MODE_TYPE, tag=(11, TAG_PRIVATE, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPPackage', 'ReturnError')))
    ___ComponentSequence__item__returnError_componentID = OCT_STR(name='componentID', mode=MODE_TYPE, tag=(15, TAG_PRIVATE, TAG_IMPLICIT))
    ___ComponentSequence__item__returnError_componentID._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    ___ComponentSequence__item__returnError_errorCode = CHOICE(name='errorCode', mode=MODE_TYPE, typeref=ASN1RefClassField(('TCAP-Remote-Operations-Information-Objects', 'ERROR'), ['errorCode']))
    ____ComponentSequence__item__returnError_errorCode_tab = CLASS(name='_tab_ERROR', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'ERROR')))
    ____ComponentSequence__item__returnError_errorCode_tab._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    ___ComponentSequence__item__returnError_errorCode._const_tab = ____ComponentSequence__item__returnError_errorCode_tab
    ___ComponentSequence__item__returnError_errorCode._const_tab_at = None
    ___ComponentSequence__item__returnError_errorCode._const_tab_id = 'errorCode'
    ___ComponentSequence__item__returnError_parameter = OPEN(name='parameter', mode=MODE_TYPE, typeref=ASN1RefClassField(('TCAP-Remote-Operations-Information-Objects', 'ERROR'), ['ParameterType']), opt=True)
    ____ComponentSequence__item__returnError_parameter_tab = CLASS(name='_tab_ERROR', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'ERROR')))
    ____ComponentSequence__item__returnError_parameter_tab._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    ___ComponentSequence__item__returnError_parameter._const_tab = ____ComponentSequence__item__returnError_parameter_tab
    ___ComponentSequence__item__returnError_parameter._const_tab_at = ('..', 'errorCode')
    ___ComponentSequence__item__returnError_parameter._const_tab_id = 'ParameterType'
    __ComponentSequence__item__returnError._cont = ASN1Dict([
        ('componentID', ___ComponentSequence__item__returnError_componentID),
        ('errorCode', ___ComponentSequence__item__returnError_errorCode),
        ('parameter', ___ComponentSequence__item__returnError_parameter),
        ])
    __ComponentSequence__item__returnError._ext = None
    __ComponentSequence__item__reject = SEQ(name='reject', mode=MODE_TYPE, tag=(12, TAG_PRIVATE, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPPackage', 'Reject')))
    __ComponentSequence__item__invokeNotLast = SEQ(name='invokeNotLast', mode=MODE_TYPE, tag=(13, TAG_PRIVATE, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPPackage', 'Invoke')))
    ___ComponentSequence__item__invokeNotLast_componentIDs = OCT_STR(name='componentIDs', mode=MODE_TYPE, tag=(15, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    ___ComponentSequence__item__invokeNotLast_componentIDs._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2)], ev=None, er=[])
    ___ComponentSequence__item__invokeNotLast_opcode = CHOICE(name='opcode', mode=MODE_TYPE, typeref=ASN1RefClassField(('TCAP-Remote-Operations-Information-Objects', 'OPERATION'), ['operationCode']))
    ____ComponentSequence__item__invokeNotLast_opcode_tab = CLASS(name='_tab_OPERATION', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'OPERATION')))
    ____ComponentSequence__item__invokeNotLast_opcode_tab._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    ___ComponentSequence__item__invokeNotLast_opcode._const_tab = ____ComponentSequence__item__invokeNotLast_opcode_tab
    ___ComponentSequence__item__invokeNotLast_opcode._const_tab_at = None
    ___ComponentSequence__item__invokeNotLast_opcode._const_tab_id = 'operationCode'
    ___ComponentSequence__item__invokeNotLast_parameter = OPEN(name='parameter', mode=MODE_TYPE, typeref=ASN1RefClassField(('TCAP-Remote-Operations-Information-Objects', 'OPERATION'), ['ResultType']), opt=True)
    ____ComponentSequence__item__invokeNotLast_parameter_tab = CLASS(name='_tab_OPERATION', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'OPERATION')))
    ____ComponentSequence__item__invokeNotLast_parameter_tab._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    ___ComponentSequence__item__invokeNotLast_parameter._const_tab = ____ComponentSequence__item__invokeNotLast_parameter_tab
    ___ComponentSequence__item__invokeNotLast_parameter._const_tab_at = ('..', 'opcode')
    ___ComponentSequence__item__invokeNotLast_parameter._const_tab_id = 'ResultType'
    __ComponentSequence__item__invokeNotLast._cont = ASN1Dict([
        ('componentIDs', ___ComponentSequence__item__invokeNotLast_componentIDs),
        ('opcode', ___ComponentSequence__item__invokeNotLast_opcode),
        ('parameter', ___ComponentSequence__item__invokeNotLast_parameter),
        ])
    __ComponentSequence__item__invokeNotLast._ext = None
    __ComponentSequence__item__returnResultNotLast = SEQ(name='returnResultNotLast', mode=MODE_TYPE, tag=(14, TAG_PRIVATE, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPPackage', 'ReturnResult')))
    ___ComponentSequence__item__returnResultNotLast_componentID = OCT_STR(name='componentID', mode=MODE_TYPE, tag=(15, TAG_PRIVATE, TAG_IMPLICIT))
    ___ComponentSequence__item__returnResultNotLast_componentID._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    ___ComponentSequence__item__returnResultNotLast_parameter = OPEN(name='parameter', mode=MODE_TYPE, typeref=ASN1RefClassField(('TCAP-Remote-Operations-Information-Objects', 'OPERATION'), ['ResultType']), opt=True)
    __ComponentSequence__item__returnResultNotLast._cont = ASN1Dict([
        ('componentID', ___ComponentSequence__item__returnResultNotLast_componentID),
        ('parameter', ___ComponentSequence__item__returnResultNotLast_parameter),
        ])
    __ComponentSequence__item__returnResultNotLast._ext = None
    _ComponentSequence__item_._cont = ASN1Dict([
        ('invokeLast', __ComponentSequence__item__invokeLast),
        ('returnResultLast', __ComponentSequence__item__returnResultLast),
        ('returnError', __ComponentSequence__item__returnError),
        ('reject', __ComponentSequence__item__reject),
        ('invokeNotLast', __ComponentSequence__item__invokeNotLast),
        ('returnResultNotLast', __ComponentSequence__item__returnResultNotLast),
        ])
    _ComponentSequence__item_._ext = None
    ComponentSequence._cont = _ComponentSequence__item_
    
    #-----< ComponentPDU >-----#
    ComponentPDU = CHOICE(name='ComponentPDU', mode=MODE_TYPE, param=True)
    
    #-----< Invoke >-----#
    Invoke = SEQ(name='Invoke', mode=MODE_TYPE, param=True)
    
    #-----< ReturnResult >-----#
    ReturnResult = SEQ(name='ReturnResult', mode=MODE_TYPE)
    _ReturnResult_componentID = OCT_STR(name='componentID', mode=MODE_TYPE, tag=(15, TAG_PRIVATE, TAG_IMPLICIT))
    _ReturnResult_componentID._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _ReturnResult_parameter = OPEN(name='parameter', mode=MODE_TYPE, typeref=ASN1RefClassField(('TCAP-Remote-Operations-Information-Objects', 'OPERATION'), ['ResultType']), opt=True)
    ReturnResult._cont = ASN1Dict([
        ('componentID', _ReturnResult_componentID),
        ('parameter', _ReturnResult_parameter),
        ])
    ReturnResult._ext = None
    
    #-----< ReturnError >-----#
    ReturnError = SEQ(name='ReturnError', mode=MODE_TYPE, param=True)
    
    #-----< Reject >-----#
    Reject = SEQ(name='Reject', mode=MODE_TYPE)
    _Reject_componentID = OCT_STR(name='componentID', mode=MODE_TYPE, tag=(15, TAG_PRIVATE, TAG_IMPLICIT))
    _Reject_componentID._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _Reject_rejectProblem = INT(name='rejectProblem', mode=MODE_TYPE, tag=(21, TAG_PRIVATE, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPPackage', 'RejectProblem')))
    _Reject_parameter = CHOICE(name='parameter', mode=MODE_TYPE)
    __Reject_parameter_paramSequence = SEQ(name='paramSequence', mode=MODE_TYPE, tag=(16, TAG_PRIVATE, TAG_IMPLICIT))
    __Reject_parameter_paramSequence._cont = ASN1Dict([
        ])
    __Reject_parameter_paramSequence._ext = None
    __Reject_parameter_paramSet = SET(name='paramSet', mode=MODE_TYPE, tag=(18, TAG_PRIVATE, TAG_IMPLICIT))
    __Reject_parameter_paramSet._cont = ASN1Dict([
        ])
    __Reject_parameter_paramSet._ext = None
    _Reject_parameter._cont = ASN1Dict([
        ('paramSequence', __Reject_parameter_paramSequence),
        ('paramSet', __Reject_parameter_paramSet),
        ])
    _Reject_parameter._ext = None
    Reject._cont = ASN1Dict([
        ('componentID', _Reject_componentID),
        ('rejectProblem', _Reject_rejectProblem),
        ('parameter', _Reject_parameter),
        ])
    Reject._ext = None
    
    #-----< RejectProblem >-----#
    RejectProblem = INT(name='RejectProblem', mode=MODE_TYPE)
    RejectProblem._cont = ASN1Dict([('generalunrecognisedComponentType', 257), ('generalincorrectComponentPortion', 258), ('generalbadlyStructuredCompPortion', 259), ('generalincorrectComponentCoding', 260), ('invokeduplicateInvocation', 513), ('invokeunrecognisedOperation', 514), ('invokeincorrectParameter', 515), ('invokeunrecognisedCorrelationID', 516), ('returnResultunrecognisedCorrelationID', 769), ('returnResultunexpectedReturnResult', 770), ('returnResultincorrectParameter', 771), ('returnErrorunrecognisedCorrelationID', 1025), ('returnErrorunexpectedReturnError', 1026), ('returnErrorunrecognisedError', 1027), ('returnErrorunexpectedError', 1028), ('returnErrorincorrectParameter', 1029), ('transactionunrecognizedPackageType', 1281), ('transactionincorrectTransPortion', 1282), ('transactionbadlyStructuredTransPortion', 1283), ('transactionunassignedRespondingTransID', 1284), ('transactionpermissionToReleaseProblem', 1285), ('transactionresourceUnavailable', 1286)])
    
    #-----< TCInvokeIdSet >-----#
    TCInvokeIdSet = CHOICE(name='TCInvokeIdSet', mode=MODE_SET, typeref=ASN1RefType(('TCAP-Remote-Operations-Information-Objects', 'InvokeId')))
    TCInvokeIdSet._val = ASN1Set(rv=[('present', -128), ('present', -127), ('present', -126), ('present', -125), ('present', -124), ('present', -123), ('present', -122), ('present', -121), ('present', -120), ('present', -119), ('present', -118), ('present', -117), ('present', -116), ('present', -115), ('present', -114), ('present', -113), ('present', -112), ('present', -111), ('present', -110), ('present', -109), ('present', -108), ('present', -107), ('present', -106), ('present', -105), ('present', -104), ('present', -103), ('present', -102), ('present', -101), ('present', -100), ('present', -99), ('present', -98), ('present', -97), ('present', -96), ('present', -95), ('present', -94), ('present', -93), ('present', -92), ('present', -91), ('present', -90), ('present', -89), ('present', -88), ('present', -87), ('present', -86), ('present', -85), ('present', -84), ('present', -83), ('present', -82), ('present', -81), ('present', -80), ('present', -79), ('present', -78), ('present', -77), ('present', -76), ('present', -75), ('present', -74), ('present', -73), ('present', -72), ('present', -71), ('present', -70), ('present', -69), ('present', -68), ('present', -67), ('present', -66), ('present', -65), ('present', -64), ('present', -63), ('present', -62), ('present', -61), ('present', -60), ('present', -59), ('present', -58), ('present', -57), ('present', -56), ('present', -55), ('present', -54), ('present', -53), ('present', -52), ('present', -51), ('present', -50), ('present', -49), ('present', -48), ('present', -47), ('present', -46), ('present', -45), ('present', -44), ('present', -43), ('present', -42), ('present', -41), ('present', -40), ('present', -39), ('present', -38), ('present', -37), ('present', -36), ('present', -35), ('present', -34), ('present', -33), ('present', -32), ('present', -31), ('present', -30), ('present', -29), ('present', -28), ('present', -27), ('present', -26), ('present', -25), ('present', -24), ('present', -23), ('present', -22), ('present', -21), ('present', -20), ('present', -19), ('present', -18), ('present', -17), ('present', -16), ('present', -15), ('present', -14), ('present', -13), ('present', -12), ('present', -11), ('present', -10), ('present', -9), ('present', -8), ('present', -7), ('present', -6), ('present', -5), ('present', -4), ('present', -3), ('present', -2), ('present', -1), ('present', 0), ('present', 1), ('present', 2), ('present', 3), ('present', 4), ('present', 5), ('present', 6), ('present', 7), ('present', 8), ('present', 9), ('present', 10), ('present', 11), ('present', 12), ('present', 13), ('present', 14), ('present', 15), ('present', 16), ('present', 17), ('present', 18), ('present', 19), ('present', 20), ('present', 21), ('present', 22), ('present', 23), ('present', 24), ('present', 25), ('present', 26), ('present', 27), ('present', 28), ('present', 29), ('present', 30), ('present', 31), ('present', 32), ('present', 33), ('present', 34), ('present', 35), ('present', 36), ('present', 37), ('present', 38), ('present', 39), ('present', 40), ('present', 41), ('present', 42), ('present', 43), ('present', 44), ('present', 45), ('present', 46), ('present', 47), ('present', 48), ('present', 49), ('present', 50), ('present', 51), ('present', 52), ('present', 53), ('present', 54), ('present', 55), ('present', 56), ('present', 57), ('present', 58), ('present', 59), ('present', 60), ('present', 61), ('present', 62), ('present', 63), ('present', 64), ('present', 65), ('present', 66), ('present', 67), ('present', 68), ('present', 69), ('present', 70), ('present', 71), ('present', 72), ('present', 73), ('present', 74), ('present', 75), ('present', 76), ('present', 77), ('present', 78), ('present', 79), ('present', 80), ('present', 81), ('present', 82), ('present', 83), ('present', 84), ('present', 85), ('present', 86), ('present', 87), ('present', 88), ('present', 89), ('present', 90), ('present', 91), ('present', 92), ('present', 93), ('present', 94), ('present', 95), ('present', 96), ('present', 97), ('present', 98), ('present', 99), ('present', 100), ('present', 101), ('present', 102), ('present', 103), ('present', 104), ('present', 105), ('present', 106), ('present', 107), ('present', 108), ('present', 109), ('present', 110), ('present', 111), ('present', 112), ('present', 113), ('present', 114), ('present', 115), ('present', 116), ('present', 117), ('present', 118), ('present', 119), ('present', 120), ('present', 121), ('present', 122), ('present', 123), ('present', 124), ('present', 125), ('present', 126), ('present', 127)], rr=[], ev=None, er=[])
    
    _all_ = [
        _PackageType_unidirectional,
        _PackageType_queryWithPerm,
        _PackageType_queryWithoutPerm,
        _PackageType_response,
        _PackageType_conversationWithPerm,
        _PackageType_conversationWithoutPerm,
        _PackageType_abort,
        PackageType,
        _UniTransactionPDU_identifier,
        _UniTransactionPDU_dialoguePortion,
        _UniTransactionPDU_componentPortion,
        UniTransactionPDU,
        _TransactionPDU_identifier,
        _TransactionPDU_dialoguePortion,
        _TransactionPDU_componentPortion,
        TransactionPDU,
        TransactionID,
        _Abort_identifier,
        _Abort_dialoguePortion,
        __Abort_causeInformation_abortCause,
        __Abort_causeInformation_userInformation,
        _Abort_causeInformation,
        Abort,
        P_Abort_cause,
        _DialoguePortion_version,
        __DialoguePortion_applicationContext_integerApplicationId,
        __DialoguePortion_applicationContext_objectApplicationId,
        _DialoguePortion_applicationContext,
        _DialoguePortion_userInformation,
        __DialoguePortion_securityContext_integerSecurityId,
        __DialoguePortion_securityContext_objectSecurityId,
        _DialoguePortion_securityContext,
        _DialoguePortion_confidentiality,
        DialoguePortion,
        ProtocolVersion,
        IntegerApplicationContext,
        ObjectIDApplicationContext,
        _UserInformation__item_,
        UserInformation,
        __Confidentiality_confidentialityId_integerConfidentialityId,
        __Confidentiality_confidentialityId_objectConfidentialityId,
        _Confidentiality_confidentialityId,
        Confidentiality,
        UserAbortInformation,
        ___ComponentSequence__item__invokeLast_componentIDs,
        ____ComponentSequence__item__invokeLast_opcode_tab,
        ___ComponentSequence__item__invokeLast_opcode,
        ____ComponentSequence__item__invokeLast_parameter_tab,
        ___ComponentSequence__item__invokeLast_parameter,
        __ComponentSequence__item__invokeLast,
        ___ComponentSequence__item__returnResultLast_componentID,
        ___ComponentSequence__item__returnResultLast_parameter,
        __ComponentSequence__item__returnResultLast,
        ___ComponentSequence__item__returnError_componentID,
        ____ComponentSequence__item__returnError_errorCode_tab,
        ___ComponentSequence__item__returnError_errorCode,
        ____ComponentSequence__item__returnError_parameter_tab,
        ___ComponentSequence__item__returnError_parameter,
        __ComponentSequence__item__returnError,
        __ComponentSequence__item__reject,
        ___ComponentSequence__item__invokeNotLast_componentIDs,
        ____ComponentSequence__item__invokeNotLast_opcode_tab,
        ___ComponentSequence__item__invokeNotLast_opcode,
        ____ComponentSequence__item__invokeNotLast_parameter_tab,
        ___ComponentSequence__item__invokeNotLast_parameter,
        __ComponentSequence__item__invokeNotLast,
        ___ComponentSequence__item__returnResultNotLast_componentID,
        ___ComponentSequence__item__returnResultNotLast_parameter,
        __ComponentSequence__item__returnResultNotLast,
        _ComponentSequence__item_,
        ComponentSequence,
        _ReturnResult_componentID,
        _ReturnResult_parameter,
        ReturnResult,
        _Reject_componentID,
        _Reject_rejectProblem,
        __Reject_parameter_paramSequence,
        __Reject_parameter_paramSet,
        _Reject_parameter,
        Reject,
        RejectProblem,
        TCInvokeIdSet,
    ]

class _IMPL_:

    _name_ = '_IMPL_'
    _oid_  = []
    _obj_  = ['REAL', 'EXTERNAL', 'EMBEDDED PDV', 'CHARACTER STRING', 'TYPE-IDENTIFIER', 'ABSTRACT-SYNTAX']
    
    #-----< REAL >-----#
    REAL = SEQ(name='REAL', mode=MODE_TYPE)
    _REAL_mantissa = INT(name='mantissa', mode=MODE_TYPE)
    _REAL_base = INT(name='base', mode=MODE_TYPE)
    _REAL_base._const_val = ASN1Set(rv=[2, 10], rr=[], ev=None, er=[])
    _REAL_exponent = INT(name='exponent', mode=MODE_TYPE)
    REAL._cont = ASN1Dict([
        ('mantissa', _REAL_mantissa),
        ('base', _REAL_base),
        ('exponent', _REAL_exponent),
        ])
    REAL._ext = None
    
    #-----< EXTERNAL >-----#
    EXTERNAL = SEQ(name='EXTERNAL', mode=MODE_TYPE)
    _EXTERNAL_identification = CHOICE(name='identification', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EXTERNAL_identification_syntaxes = SEQ(name='syntaxes', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___EXTERNAL_identification_syntaxes_abstract = OID(name='abstract', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___EXTERNAL_identification_syntaxes_transfer = OID(name='transfer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EXTERNAL_identification_syntaxes._cont = ASN1Dict([
        ('abstract', ___EXTERNAL_identification_syntaxes_abstract),
        ('transfer', ___EXTERNAL_identification_syntaxes_transfer),
        ])
    __EXTERNAL_identification_syntaxes._ext = None
    __EXTERNAL_identification_syntax = OID(name='syntax', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EXTERNAL_identification_presentation_context_id = INT(name='presentation-context-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EXTERNAL_identification_context_negotiation = SEQ(name='context-negotiation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___EXTERNAL_identification_context_negotiation_presentation_context_id = INT(name='presentation-context-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___EXTERNAL_identification_context_negotiation_transfer_syntax = OID(name='transfer-syntax', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EXTERNAL_identification_context_negotiation._cont = ASN1Dict([
        ('presentation-context-id', ___EXTERNAL_identification_context_negotiation_presentation_context_id),
        ('transfer-syntax', ___EXTERNAL_identification_context_negotiation_transfer_syntax),
        ])
    __EXTERNAL_identification_context_negotiation._ext = None
    __EXTERNAL_identification_transfer_syntax = OID(name='transfer-syntax', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EXTERNAL_identification_fixed = NULL(name='fixed', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    _EXTERNAL_identification._cont = ASN1Dict([
        ('syntaxes', __EXTERNAL_identification_syntaxes),
        ('syntax', __EXTERNAL_identification_syntax),
        ('presentation-context-id', __EXTERNAL_identification_presentation_context_id),
        ('context-negotiation', __EXTERNAL_identification_context_negotiation),
        ('transfer-syntax', __EXTERNAL_identification_transfer_syntax),
        ('fixed', __EXTERNAL_identification_fixed),
        ])
    _EXTERNAL_identification._ext = None
    _EXTERNAL_data_value_descriptor = OBJ_DESC(name='data-value-descriptor', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    _EXTERNAL_data_value = OCT_STR(name='data-value', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    EXTERNAL._cont = ASN1Dict([
        ('identification', _EXTERNAL_identification),
        ('data-value-descriptor', _EXTERNAL_data_value_descriptor),
        ('data-value', _EXTERNAL_data_value),
        ])
    EXTERNAL._ext = None
    
    #-----< EMBEDDED PDV >-----#
    EMBEDDED_PDV = SEQ(name='EMBEDDED PDV', mode=MODE_TYPE)
    _EMBEDDED_PDV_identification = CHOICE(name='identification', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EMBEDDED_PDV_identification_syntaxes = SEQ(name='syntaxes', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___EMBEDDED_PDV_identification_syntaxes_abstract = OID(name='abstract', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___EMBEDDED_PDV_identification_syntaxes_transfer = OID(name='transfer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EMBEDDED_PDV_identification_syntaxes._cont = ASN1Dict([
        ('abstract', ___EMBEDDED_PDV_identification_syntaxes_abstract),
        ('transfer', ___EMBEDDED_PDV_identification_syntaxes_transfer),
        ])
    __EMBEDDED_PDV_identification_syntaxes._ext = None
    __EMBEDDED_PDV_identification_syntax = OID(name='syntax', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EMBEDDED_PDV_identification_presentation_context_id = INT(name='presentation-context-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EMBEDDED_PDV_identification_context_negotiation = SEQ(name='context-negotiation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___EMBEDDED_PDV_identification_context_negotiation_presentation_context_id = INT(name='presentation-context-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___EMBEDDED_PDV_identification_context_negotiation_transfer_syntax = OID(name='transfer-syntax', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EMBEDDED_PDV_identification_context_negotiation._cont = ASN1Dict([
        ('presentation-context-id', ___EMBEDDED_PDV_identification_context_negotiation_presentation_context_id),
        ('transfer-syntax', ___EMBEDDED_PDV_identification_context_negotiation_transfer_syntax),
        ])
    __EMBEDDED_PDV_identification_context_negotiation._ext = None
    __EMBEDDED_PDV_identification_transfer_syntax = OID(name='transfer-syntax', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EMBEDDED_PDV_identification_fixed = NULL(name='fixed', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    _EMBEDDED_PDV_identification._cont = ASN1Dict([
        ('syntaxes', __EMBEDDED_PDV_identification_syntaxes),
        ('syntax', __EMBEDDED_PDV_identification_syntax),
        ('presentation-context-id', __EMBEDDED_PDV_identification_presentation_context_id),
        ('context-negotiation', __EMBEDDED_PDV_identification_context_negotiation),
        ('transfer-syntax', __EMBEDDED_PDV_identification_transfer_syntax),
        ('fixed', __EMBEDDED_PDV_identification_fixed),
        ])
    _EMBEDDED_PDV_identification._ext = None
    _EMBEDDED_PDV_data_value_descriptor = OBJ_DESC(name='data-value-descriptor', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    _EMBEDDED_PDV_data_value = OCT_STR(name='data-value', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    EMBEDDED_PDV._cont = ASN1Dict([
        ('identification', _EMBEDDED_PDV_identification),
        ('data-value-descriptor', _EMBEDDED_PDV_data_value_descriptor),
        ('data-value', _EMBEDDED_PDV_data_value),
        ])
    EMBEDDED_PDV._ext = None
    
    #-----< CHARACTER STRING >-----#
    CHARACTER_STRING = SEQ(name='CHARACTER STRING', mode=MODE_TYPE)
    _CHARACTER_STRING_identification = CHOICE(name='identification', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CHARACTER_STRING_identification_syntaxes = SEQ(name='syntaxes', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___CHARACTER_STRING_identification_syntaxes_abstract = OID(name='abstract', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___CHARACTER_STRING_identification_syntaxes_transfer = OID(name='transfer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CHARACTER_STRING_identification_syntaxes._cont = ASN1Dict([
        ('abstract', ___CHARACTER_STRING_identification_syntaxes_abstract),
        ('transfer', ___CHARACTER_STRING_identification_syntaxes_transfer),
        ])
    __CHARACTER_STRING_identification_syntaxes._ext = None
    __CHARACTER_STRING_identification_syntax = OID(name='syntax', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CHARACTER_STRING_identification_presentation_context_id = INT(name='presentation-context-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CHARACTER_STRING_identification_context_negotiation = SEQ(name='context-negotiation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___CHARACTER_STRING_identification_context_negotiation_presentation_context_id = INT(name='presentation-context-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___CHARACTER_STRING_identification_context_negotiation_transfer_syntax = OID(name='transfer-syntax', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CHARACTER_STRING_identification_context_negotiation._cont = ASN1Dict([
        ('presentation-context-id', ___CHARACTER_STRING_identification_context_negotiation_presentation_context_id),
        ('transfer-syntax', ___CHARACTER_STRING_identification_context_negotiation_transfer_syntax),
        ])
    __CHARACTER_STRING_identification_context_negotiation._ext = None
    __CHARACTER_STRING_identification_transfer_syntax = OID(name='transfer-syntax', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CHARACTER_STRING_identification_fixed = NULL(name='fixed', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    _CHARACTER_STRING_identification._cont = ASN1Dict([
        ('syntaxes', __CHARACTER_STRING_identification_syntaxes),
        ('syntax', __CHARACTER_STRING_identification_syntax),
        ('presentation-context-id', __CHARACTER_STRING_identification_presentation_context_id),
        ('context-negotiation', __CHARACTER_STRING_identification_context_negotiation),
        ('transfer-syntax', __CHARACTER_STRING_identification_transfer_syntax),
        ('fixed', __CHARACTER_STRING_identification_fixed),
        ])
    _CHARACTER_STRING_identification._ext = None
    _CHARACTER_STRING_data_value_descriptor = OBJ_DESC(name='data-value-descriptor', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    _CHARACTER_STRING_string_value = OCT_STR(name='string-value', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    CHARACTER_STRING._cont = ASN1Dict([
        ('identification', _CHARACTER_STRING_identification),
        ('data-value-descriptor', _CHARACTER_STRING_data_value_descriptor),
        ('string-value', _CHARACTER_STRING_string_value),
        ])
    CHARACTER_STRING._ext = None
    
    #-----< TYPE-IDENTIFIER >-----#
    TYPE_IDENTIFIER = CLASS(name='TYPE-IDENTIFIER', mode=MODE_TYPE)
    _TYPE_IDENTIFIER_id = OID(name='id', mode=MODE_VALUE, uniq=True)
    _TYPE_IDENTIFIER_Type = OPEN(name='Type', mode=MODE_TYPE)
    TYPE_IDENTIFIER._cont = ASN1Dict([
        ('id', _TYPE_IDENTIFIER_id),
        ('Type', _TYPE_IDENTIFIER_Type),
        ])
    
    #-----< ABSTRACT-SYNTAX >-----#
    ABSTRACT_SYNTAX = CLASS(name='ABSTRACT-SYNTAX', mode=MODE_TYPE)
    _ABSTRACT_SYNTAX_id = OID(name='id', mode=MODE_VALUE)
    _ABSTRACT_SYNTAX_Type = OPEN(name='Type', mode=MODE_TYPE)
    _ABSTRACT_SYNTAX_property = BIT_STR(name='property', mode=MODE_VALUE, default=(0, 0))
    _ABSTRACT_SYNTAX_property._cont = ASN1Dict([('handles-invalid-encodings', 0)])
    ABSTRACT_SYNTAX._cont = ASN1Dict([
        ('id', _ABSTRACT_SYNTAX_id),
        ('Type', _ABSTRACT_SYNTAX_Type),
        ('property', _ABSTRACT_SYNTAX_property),
        ])
    
    _all_ = [
        _REAL_mantissa,
        _REAL_base,
        _REAL_exponent,
        REAL,
        ___EXTERNAL_identification_syntaxes_abstract,
        ___EXTERNAL_identification_syntaxes_transfer,
        __EXTERNAL_identification_syntaxes,
        __EXTERNAL_identification_syntax,
        __EXTERNAL_identification_presentation_context_id,
        ___EXTERNAL_identification_context_negotiation_presentation_context_id,
        ___EXTERNAL_identification_context_negotiation_transfer_syntax,
        __EXTERNAL_identification_context_negotiation,
        __EXTERNAL_identification_transfer_syntax,
        __EXTERNAL_identification_fixed,
        _EXTERNAL_identification,
        _EXTERNAL_data_value_descriptor,
        _EXTERNAL_data_value,
        EXTERNAL,
        ___EMBEDDED_PDV_identification_syntaxes_abstract,
        ___EMBEDDED_PDV_identification_syntaxes_transfer,
        __EMBEDDED_PDV_identification_syntaxes,
        __EMBEDDED_PDV_identification_syntax,
        __EMBEDDED_PDV_identification_presentation_context_id,
        ___EMBEDDED_PDV_identification_context_negotiation_presentation_context_id,
        ___EMBEDDED_PDV_identification_context_negotiation_transfer_syntax,
        __EMBEDDED_PDV_identification_context_negotiation,
        __EMBEDDED_PDV_identification_transfer_syntax,
        __EMBEDDED_PDV_identification_fixed,
        _EMBEDDED_PDV_identification,
        _EMBEDDED_PDV_data_value_descriptor,
        _EMBEDDED_PDV_data_value,
        EMBEDDED_PDV,
        ___CHARACTER_STRING_identification_syntaxes_abstract,
        ___CHARACTER_STRING_identification_syntaxes_transfer,
        __CHARACTER_STRING_identification_syntaxes,
        __CHARACTER_STRING_identification_syntax,
        __CHARACTER_STRING_identification_presentation_context_id,
        ___CHARACTER_STRING_identification_context_negotiation_presentation_context_id,
        ___CHARACTER_STRING_identification_context_negotiation_transfer_syntax,
        __CHARACTER_STRING_identification_context_negotiation,
        __CHARACTER_STRING_identification_transfer_syntax,
        __CHARACTER_STRING_identification_fixed,
        _CHARACTER_STRING_identification,
        _CHARACTER_STRING_data_value_descriptor,
        _CHARACTER_STRING_string_value,
        CHARACTER_STRING,
        _TYPE_IDENTIFIER_id,
        _TYPE_IDENTIFIER_Type,
        TYPE_IDENTIFIER,
        _ABSTRACT_SYNTAX_id,
        _ABSTRACT_SYNTAX_Type,
        _ABSTRACT_SYNTAX_property,
        ABSTRACT_SYNTAX,
    ]

init_modules(TCAP_Remote_Operations_Information_Objects, TCAPPackage, _IMPL_)
