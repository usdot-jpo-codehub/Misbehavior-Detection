# -*- coding: UTF-8 -*-
# Code automatically generated by pycrate_asn1c

from pycrate_asn1rt.utils            import *
from pycrate_asn1rt.err              import *
from pycrate_asn1rt.glob             import make_GLOBAL, GLOBAL
from pycrate_asn1rt.dictobj          import ASN1Dict
from pycrate_asn1rt.refobj           import *
from pycrate_asn1rt.setobj           import *
from pycrate_asn1rt.asnobj_basic     import *
from pycrate_asn1rt.asnobj_str       import *
from pycrate_asn1rt.asnobj_construct import *
from pycrate_asn1rt.asnobj_class     import *
from pycrate_asn1rt.asnobj_ext       import *
from pycrate_asn1rt.init             import init_modules

class DialoguePDUs:

    _name_  = 'DialoguePDUs'
    _oid_   = [0, 0, 17, 773, 2, 2, 1]
    
    _obj_ = [
        'dialogue-as-id',
        'DialoguePDU',
        'AARQ-apdu',
        'AARE-apdu',
        'RLRQ-apdu',
        'RLRE-apdu',
        'ABRT-apdu',
        'ABRT-source',
        'Associate-result',
        'Associate-source-diagnostic',
        'Release-request-reason',
        'Release-response-reason',
        ]
    _type_ = [
        'DialoguePDU',
        'AARQ-apdu',
        'AARE-apdu',
        'RLRQ-apdu',
        'RLRE-apdu',
        'ABRT-apdu',
        'ABRT-source',
        'Associate-result',
        'Associate-source-diagnostic',
        'Release-request-reason',
        'Release-response-reason',
        ]
    _set_ = [
        ]
    _val_ = [
        'dialogue-as-id',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< dialogue-as-id >-----#
    dialogue_as_id = OID(name='dialogue-as-id', mode=MODE_VALUE)
    dialogue_as_id._val = (0, 0, 17, 773, 1, 1, 1)
    
    #-----< DialoguePDU >-----#
    DialoguePDU = CHOICE(name='DialoguePDU', mode=MODE_TYPE)
    _DialoguePDU_dialogueRequest = SEQ(name='dialogueRequest', mode=MODE_TYPE, typeref=ASN1RefType(('DialoguePDUs', 'AARQ-apdu')))
    _DialoguePDU_dialogueResponse = SEQ(name='dialogueResponse', mode=MODE_TYPE, typeref=ASN1RefType(('DialoguePDUs', 'AARE-apdu')))
    _DialoguePDU_dialogueAbort = SEQ(name='dialogueAbort', mode=MODE_TYPE, typeref=ASN1RefType(('DialoguePDUs', 'ABRT-apdu')))
    DialoguePDU._cont = ASN1Dict([
        ('dialogueRequest', _DialoguePDU_dialogueRequest),
        ('dialogueResponse', _DialoguePDU_dialogueResponse),
        ('dialogueAbort', _DialoguePDU_dialogueAbort),
        ])
    DialoguePDU._ext = None
    
    #-----< AARQ-apdu >-----#
    AARQ_apdu = SEQ(name='AARQ-apdu', mode=MODE_TYPE, tag=(0, TAG_APPLICATION, TAG_IMPLICIT))
    _AARQ_apdu_protocol_version = BIT_STR(name='protocol-version', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=(1, 1))
    _AARQ_apdu_protocol_version._cont = ASN1Dict([('version1', 0)])
    _AARQ_apdu_application_context_name = OID(name='application-context-name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    _AARQ_apdu_user_information = SEQ_OF(name='user-information', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __AARQ_apdu_user_information__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Pycrate-TCAP-MAP-Dialogue', 'TcapDialogueExternal')))
    _AARQ_apdu_user_information._cont = __AARQ_apdu_user_information__item_
    AARQ_apdu._cont = ASN1Dict([
        ('protocol-version', _AARQ_apdu_protocol_version),
        ('application-context-name', _AARQ_apdu_application_context_name),
        ('user-information', _AARQ_apdu_user_information),
        ])
    AARQ_apdu._ext = None
    
    #-----< AARE-apdu >-----#
    AARE_apdu = SEQ(name='AARE-apdu', mode=MODE_TYPE, tag=(1, TAG_APPLICATION, TAG_IMPLICIT))
    _AARE_apdu_protocol_version = BIT_STR(name='protocol-version', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=(1, 1))
    _AARE_apdu_protocol_version._cont = ASN1Dict([('version1', 0)])
    _AARE_apdu_application_context_name = OID(name='application-context-name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    _AARE_apdu_result = INT(name='result', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DialoguePDUs', 'Associate-result')))
    _AARE_apdu_result_source_diagnostic = CHOICE(name='result-source-diagnostic', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DialoguePDUs', 'Associate-source-diagnostic')))
    _AARE_apdu_user_information = SEQ_OF(name='user-information', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __AARE_apdu_user_information__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Pycrate-TCAP-MAP-Dialogue', 'TcapDialogueExternal')))
    _AARE_apdu_user_information._cont = __AARE_apdu_user_information__item_
    AARE_apdu._cont = ASN1Dict([
        ('protocol-version', _AARE_apdu_protocol_version),
        ('application-context-name', _AARE_apdu_application_context_name),
        ('result', _AARE_apdu_result),
        ('result-source-diagnostic', _AARE_apdu_result_source_diagnostic),
        ('user-information', _AARE_apdu_user_information),
        ])
    AARE_apdu._ext = None
    
    #-----< RLRQ-apdu >-----#
    RLRQ_apdu = SEQ(name='RLRQ-apdu', mode=MODE_TYPE, tag=(2, TAG_APPLICATION, TAG_IMPLICIT))
    _RLRQ_apdu_reason = INT(name='reason', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DialoguePDUs', 'Release-request-reason')), opt=True)
    _RLRQ_apdu_user_information = SEQ_OF(name='user-information', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RLRQ_apdu_user_information__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Pycrate-TCAP-MAP-Dialogue', 'TcapDialogueExternal')))
    _RLRQ_apdu_user_information._cont = __RLRQ_apdu_user_information__item_
    RLRQ_apdu._cont = ASN1Dict([
        ('reason', _RLRQ_apdu_reason),
        ('user-information', _RLRQ_apdu_user_information),
        ])
    RLRQ_apdu._ext = None
    
    #-----< RLRE-apdu >-----#
    RLRE_apdu = SEQ(name='RLRE-apdu', mode=MODE_TYPE, tag=(3, TAG_APPLICATION, TAG_IMPLICIT))
    _RLRE_apdu_reason = INT(name='reason', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DialoguePDUs', 'Release-response-reason')), opt=True)
    _RLRE_apdu_user_information = SEQ_OF(name='user-information', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RLRE_apdu_user_information__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Pycrate-TCAP-MAP-Dialogue', 'TcapDialogueExternal')))
    _RLRE_apdu_user_information._cont = __RLRE_apdu_user_information__item_
    RLRE_apdu._cont = ASN1Dict([
        ('reason', _RLRE_apdu_reason),
        ('user-information', _RLRE_apdu_user_information),
        ])
    RLRE_apdu._ext = None
    
    #-----< ABRT-apdu >-----#
    ABRT_apdu = SEQ(name='ABRT-apdu', mode=MODE_TYPE, tag=(4, TAG_APPLICATION, TAG_IMPLICIT))
    _ABRT_apdu_abort_source = INT(name='abort-source', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DialoguePDUs', 'ABRT-source')))
    _ABRT_apdu_user_information = SEQ_OF(name='user-information', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ABRT_apdu_user_information__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Pycrate-TCAP-MAP-Dialogue', 'TcapDialogueExternal')))
    _ABRT_apdu_user_information._cont = __ABRT_apdu_user_information__item_
    ABRT_apdu._cont = ASN1Dict([
        ('abort-source', _ABRT_apdu_abort_source),
        ('user-information', _ABRT_apdu_user_information),
        ])
    ABRT_apdu._ext = None
    
    #-----< ABRT-source >-----#
    ABRT_source = INT(name='ABRT-source', mode=MODE_TYPE)
    ABRT_source._cont = ASN1Dict([('dialogue-service-user', 0), ('dialogue-service-provider', 1)])
    
    #-----< Associate-result >-----#
    Associate_result = INT(name='Associate-result', mode=MODE_TYPE)
    Associate_result._cont = ASN1Dict([('accepted', 0), ('reject-permanent', 1)])
    
    #-----< Associate-source-diagnostic >-----#
    Associate_source_diagnostic = CHOICE(name='Associate-source-diagnostic', mode=MODE_TYPE)
    _Associate_source_diagnostic_dialogue_service_user = INT(name='dialogue-service-user', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    _Associate_source_diagnostic_dialogue_service_user._cont = ASN1Dict([('null', 0), ('no-reason-given', 1), ('application-context-name-not-supported', 2)])
    _Associate_source_diagnostic_dialogue_service_provider = INT(name='dialogue-service-provider', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    _Associate_source_diagnostic_dialogue_service_provider._cont = ASN1Dict([('null', 0), ('no-reason-given', 1), ('no-common-dialogue-portion', 2)])
    Associate_source_diagnostic._cont = ASN1Dict([
        ('dialogue-service-user', _Associate_source_diagnostic_dialogue_service_user),
        ('dialogue-service-provider', _Associate_source_diagnostic_dialogue_service_provider),
        ])
    Associate_source_diagnostic._ext = None
    
    #-----< Release-request-reason >-----#
    Release_request_reason = INT(name='Release-request-reason', mode=MODE_TYPE)
    Release_request_reason._cont = ASN1Dict([('normal', 0), ('urgent', 1), ('user-defined', 30)])
    
    #-----< Release-response-reason >-----#
    Release_response_reason = INT(name='Release-response-reason', mode=MODE_TYPE)
    Release_response_reason._cont = ASN1Dict([('normal', 0), ('not-finished', 1), ('user-defined', 30)])
    
    _all_ = [
        dialogue_as_id,
        _DialoguePDU_dialogueRequest,
        _DialoguePDU_dialogueResponse,
        _DialoguePDU_dialogueAbort,
        DialoguePDU,
        _AARQ_apdu_protocol_version,
        _AARQ_apdu_application_context_name,
        __AARQ_apdu_user_information__item_,
        _AARQ_apdu_user_information,
        AARQ_apdu,
        _AARE_apdu_protocol_version,
        _AARE_apdu_application_context_name,
        _AARE_apdu_result,
        _AARE_apdu_result_source_diagnostic,
        __AARE_apdu_user_information__item_,
        _AARE_apdu_user_information,
        AARE_apdu,
        _RLRQ_apdu_reason,
        __RLRQ_apdu_user_information__item_,
        _RLRQ_apdu_user_information,
        RLRQ_apdu,
        _RLRE_apdu_reason,
        __RLRE_apdu_user_information__item_,
        _RLRE_apdu_user_information,
        RLRE_apdu,
        _ABRT_apdu_abort_source,
        __ABRT_apdu_user_information__item_,
        _ABRT_apdu_user_information,
        ABRT_apdu,
        ABRT_source,
        Associate_result,
        _Associate_source_diagnostic_dialogue_service_user,
        _Associate_source_diagnostic_dialogue_service_provider,
        Associate_source_diagnostic,
        Release_request_reason,
        Release_response_reason,
    ]

class EricssonMAP_Extensions:

    _name_  = 'EricssonMAP-Extensions'
    _oid_   = []
    
    _obj_ = [
        'EnhancedCheckIMEI-Arg',
        'EricssonExtensionType',
        'IsdArgType',
        'IsdArgData',
        'PrivateFeatureData',
        'OickInfo',
        'INCategoryKey',
        'SubscriptionTypeInfo',
        'SubscriptionType',
        'IsdResType',
        'IsdResData',
        'DsdArgType',
        'DsdArgData',
        'SRIArgType',
        'SriArgData',
        'SRIResType',
        'SriResData',
        'PrnArgType',
        'PrnArgData',
        'UlArgType',
        'UlArgData',
        'PrivateFeatureUlArgData',
        'ExtraProtocolId',
        'ExtraSignalInfo',
        'SaiArgType',
        'SaiResType',
        'AtiArgType',
        'AtiResType',
        'RdArgType',
        'RequestedInfoType',
        'ExtAtiArgType',
        'AtiArgData',
        'PrivateFeatureCode',
        ]
    _type_ = [
        'EnhancedCheckIMEI-Arg',
        'EricssonExtensionType',
        'IsdArgType',
        'IsdArgData',
        'PrivateFeatureData',
        'OickInfo',
        'INCategoryKey',
        'SubscriptionTypeInfo',
        'SubscriptionType',
        'IsdResType',
        'IsdResData',
        'DsdArgType',
        'DsdArgData',
        'SRIArgType',
        'SriArgData',
        'SRIResType',
        'SriResData',
        'PrnArgType',
        'PrnArgData',
        'UlArgType',
        'UlArgData',
        'PrivateFeatureUlArgData',
        'ExtraProtocolId',
        'ExtraSignalInfo',
        'SaiArgType',
        'SaiResType',
        'AtiArgType',
        'AtiResType',
        'RdArgType',
        'RequestedInfoType',
        'ExtAtiArgType',
        'AtiArgData',
        'PrivateFeatureCode',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< EnhancedCheckIMEI-Arg >-----#
    EnhancedCheckIMEI_Arg = SEQ(name='EnhancedCheckIMEI-Arg', mode=MODE_TYPE)
    _EnhancedCheckIMEI_Arg_imei = OCT_STR(name='imei', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMEI')))
    _EnhancedCheckIMEI_Arg_requestedEquipmentInfo = BIT_STR(name='requestedEquipmentInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RequestedEquipmentInfo')), opt=True)
    _EnhancedCheckIMEI_Arg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(1, TAG_PRIVATE, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _EnhancedCheckIMEI_Arg_locationInformation = OCT_STR(name='locationInformation', mode=MODE_TYPE, tag=(3, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    _EnhancedCheckIMEI_Arg_locationInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=7)], ev=None, er=[])
    _EnhancedCheckIMEI_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    EnhancedCheckIMEI_Arg._cont = ASN1Dict([
        ('imei', _EnhancedCheckIMEI_Arg_imei),
        ('requestedEquipmentInfo', _EnhancedCheckIMEI_Arg_requestedEquipmentInfo),
        ('imsi', _EnhancedCheckIMEI_Arg_imsi),
        ('locationInformation', _EnhancedCheckIMEI_Arg_locationInformation),
        ('extensionContainer', _EnhancedCheckIMEI_Arg_extensionContainer),
        ])
    EnhancedCheckIMEI_Arg._ext = []
    
    #-----< EricssonExtensionType >-----#
    EricssonExtensionType = CHOICE(name='EricssonExtensionType', mode=MODE_TYPE)
    _EricssonExtensionType_isdArgType = SEQ_OF(name='isdArgType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'IsdArgType')))
    _EricssonExtensionType_isdResType = SEQ_OF(name='isdResType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'IsdResType')))
    _EricssonExtensionType_dsdArgType = SEQ_OF(name='dsdArgType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'DsdArgType')))
    _EricssonExtensionType_sriArgType = SEQ_OF(name='sriArgType', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'SRIArgType')))
    _EricssonExtensionType_sriResType = SEQ_OF(name='sriResType', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'SRIResType')))
    _EricssonExtensionType_prnArgType = SEQ_OF(name='prnArgType', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'PrnArgType')))
    _EricssonExtensionType_ulArgType = SEQ_OF(name='ulArgType', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'UlArgType')))
    _EricssonExtensionType_rdArgType = SEQ(name='rdArgType', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'RdArgType')))
    _EricssonExtensionType_saiArgType = SEQ(name='saiArgType', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'SaiArgType')))
    _EricssonExtensionType_saiResType = SEQ(name='saiResType', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'SaiResType')))
    _EricssonExtensionType_atiArgType = SEQ(name='atiArgType', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'AtiArgType')))
    _EricssonExtensionType_atiResType = SEQ(name='atiResType', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'AtiResType')))
    _EricssonExtensionType_extAtiArgType = SEQ_OF(name='extAtiArgType', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'ExtAtiArgType')))
    EricssonExtensionType._cont = ASN1Dict([
        ('isdArgType', _EricssonExtensionType_isdArgType),
        ('isdResType', _EricssonExtensionType_isdResType),
        ('dsdArgType', _EricssonExtensionType_dsdArgType),
        ('sriArgType', _EricssonExtensionType_sriArgType),
        ('sriResType', _EricssonExtensionType_sriResType),
        ('prnArgType', _EricssonExtensionType_prnArgType),
        ('ulArgType', _EricssonExtensionType_ulArgType),
        ('rdArgType', _EricssonExtensionType_rdArgType),
        ('saiArgType', _EricssonExtensionType_saiArgType),
        ('saiResType', _EricssonExtensionType_saiResType),
        ('atiArgType', _EricssonExtensionType_atiArgType),
        ('atiResType', _EricssonExtensionType_atiResType),
        ('extAtiArgType', _EricssonExtensionType_extAtiArgType),
        ])
    EricssonExtensionType._ext = None
    
    #-----< IsdArgType >-----#
    IsdArgType = SEQ_OF(name='IsdArgType', mode=MODE_TYPE)
    _IsdArgType__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EricssonMAP-Extensions', 'IsdArgData')))
    IsdArgType._cont = _IsdArgType__item_
    IsdArgType._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< IsdArgData >-----#
    IsdArgData = SEQ(name='IsdArgData', mode=MODE_TYPE)
    _IsdArgData_privateFeatureCode = OCT_STR(name='privateFeatureCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'PrivateFeatureCode')), opt=True)
    _IsdArgData_privateFeatureData = CHOICE(name='privateFeatureData', mode=MODE_TYPE, typeref=ASN1RefType(('EricssonMAP-Extensions', 'PrivateFeatureData')), opt=True)
    IsdArgData._cont = ASN1Dict([
        ('privateFeatureCode', _IsdArgData_privateFeatureCode),
        ('privateFeatureData', _IsdArgData_privateFeatureData),
        ])
    IsdArgData._ext = []
    
    #-----< PrivateFeatureData >-----#
    PrivateFeatureData = CHOICE(name='PrivateFeatureData', mode=MODE_TYPE)
    _PrivateFeatureData_subscriptionTypeInfo = SEQ(name='subscriptionTypeInfo', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'SubscriptionTypeInfo')))
    _PrivateFeatureData_oickInfo = SEQ(name='oickInfo', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'OickInfo')))
    PrivateFeatureData._cont = ASN1Dict([
        ('subscriptionTypeInfo', _PrivateFeatureData_subscriptionTypeInfo),
        ('oickInfo', _PrivateFeatureData_oickInfo),
        ])
    PrivateFeatureData._ext = None
    
    #-----< OickInfo >-----#
    OickInfo = SEQ(name='OickInfo', mode=MODE_TYPE)
    _OickInfo_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _OickInfo_inCategoryKey = OCT_STR(name='inCategoryKey', mode=MODE_TYPE, typeref=ASN1RefType(('EricssonMAP-Extensions', 'INCategoryKey')))
    OickInfo._cont = ASN1Dict([
        ('ss-Status', _OickInfo_ss_Status),
        ('inCategoryKey', _OickInfo_inCategoryKey),
        ])
    OickInfo._ext = None
    
    #-----< INCategoryKey >-----#
    INCategoryKey = OCT_STR(name='INCategoryKey', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'TBCD-STRING')))
    INCategoryKey._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< SubscriptionTypeInfo >-----#
    SubscriptionTypeInfo = SEQ(name='SubscriptionTypeInfo', mode=MODE_TYPE)
    _SubscriptionTypeInfo_subscriptionType = OCT_STR(name='subscriptionType', mode=MODE_TYPE, typeref=ASN1RefType(('EricssonMAP-Extensions', 'SubscriptionType')))
    SubscriptionTypeInfo._cont = ASN1Dict([
        ('subscriptionType', _SubscriptionTypeInfo_subscriptionType),
        ])
    SubscriptionTypeInfo._ext = None
    
    #-----< SubscriptionType >-----#
    SubscriptionType = OCT_STR(name='SubscriptionType', mode=MODE_TYPE)
    SubscriptionType._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< IsdResType >-----#
    IsdResType = SEQ_OF(name='IsdResType', mode=MODE_TYPE)
    _IsdResType__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EricssonMAP-Extensions', 'IsdResData')))
    IsdResType._cont = _IsdResType__item_
    IsdResType._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< IsdResData >-----#
    IsdResData = SEQ(name='IsdResData', mode=MODE_TYPE)
    _IsdResData_supportedPrivateFeature = OCT_STR(name='supportedPrivateFeature', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'PrivateFeatureCode')), opt=True)
    IsdResData._cont = ASN1Dict([
        ('supportedPrivateFeature', _IsdResData_supportedPrivateFeature),
        ])
    IsdResData._ext = []
    
    #-----< DsdArgType >-----#
    DsdArgType = SEQ_OF(name='DsdArgType', mode=MODE_TYPE)
    _DsdArgType__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EricssonMAP-Extensions', 'DsdArgData')))
    DsdArgType._cont = _DsdArgType__item_
    DsdArgType._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< DsdArgData >-----#
    DsdArgData = SEQ(name='DsdArgData', mode=MODE_TYPE)
    _DsdArgData_privateFeatureWithdraw = OCT_STR(name='privateFeatureWithdraw', mode=MODE_TYPE, typeref=ASN1RefType(('EricssonMAP-Extensions', 'PrivateFeatureCode')))
    DsdArgData._cont = ASN1Dict([
        ('privateFeatureWithdraw', _DsdArgData_privateFeatureWithdraw),
        ])
    DsdArgData._ext = None
    
    #-----< SRIArgType >-----#
    SRIArgType = SEQ_OF(name='SRIArgType', mode=MODE_TYPE)
    _SRIArgType__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EricssonMAP-Extensions', 'SriArgData')))
    SRIArgType._cont = _SRIArgType__item_
    SRIArgType._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< SriArgData >-----#
    SriArgData = SEQ(name='SriArgData', mode=MODE_TYPE)
    _SriArgData_privateFeatureCode = OCT_STR(name='privateFeatureCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'PrivateFeatureCode')), opt=True)
    _SriArgData_extraNetworkInfo = SEQ(name='extraNetworkInfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'ExtraSignalInfo')), opt=True)
    SriArgData._cont = ASN1Dict([
        ('privateFeatureCode', _SriArgData_privateFeatureCode),
        ('extraNetworkInfo', _SriArgData_extraNetworkInfo),
        ])
    SriArgData._ext = []
    
    #-----< SRIResType >-----#
    SRIResType = SEQ_OF(name='SRIResType', mode=MODE_TYPE)
    _SRIResType__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EricssonMAP-Extensions', 'SriResData')))
    SRIResType._cont = _SRIResType__item_
    SRIResType._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< SriResData >-----#
    SriResData = SEQ(name='SriResData', mode=MODE_TYPE)
    _SriResData_privateFeatureCode = OCT_STR(name='privateFeatureCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'PrivateFeatureCode')), opt=True)
    _SriResData_inCategoryKey = OCT_STR(name='inCategoryKey', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'INCategoryKey')), opt=True)
    _SriResData_subscriptionType = OCT_STR(name='subscriptionType', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'SubscriptionType')), opt=True)
    SriResData._cont = ASN1Dict([
        ('privateFeatureCode', _SriResData_privateFeatureCode),
        ('inCategoryKey', _SriResData_inCategoryKey),
        ('subscriptionType', _SriResData_subscriptionType),
        ])
    SriResData._ext = []
    
    #-----< PrnArgType >-----#
    PrnArgType = SEQ_OF(name='PrnArgType', mode=MODE_TYPE)
    _PrnArgType__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EricssonMAP-Extensions', 'PrnArgData')))
    PrnArgType._cont = _PrnArgType__item_
    PrnArgType._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< PrnArgData >-----#
    PrnArgData = SEQ(name='PrnArgData', mode=MODE_TYPE)
    _PrnArgData_privateFeatureCode = OCT_STR(name='privateFeatureCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'PrivateFeatureCode')), opt=True)
    _PrnArgData_extraNetworkInfo = SEQ(name='extraNetworkInfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'ExtraSignalInfo')), opt=True)
    PrnArgData._cont = ASN1Dict([
        ('privateFeatureCode', _PrnArgData_privateFeatureCode),
        ('extraNetworkInfo', _PrnArgData_extraNetworkInfo),
        ])
    PrnArgData._ext = ['extraNetworkInfo']
    
    #-----< UlArgType >-----#
    UlArgType = SEQ_OF(name='UlArgType', mode=MODE_TYPE)
    _UlArgType__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EricssonMAP-Extensions', 'UlArgData')))
    UlArgType._cont = _UlArgType__item_
    UlArgType._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< UlArgData >-----#
    UlArgData = SEQ(name='UlArgData', mode=MODE_TYPE)
    _UlArgData_privateFeatureCode = OCT_STR(name='privateFeatureCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'PrivateFeatureCode')), opt=True)
    _UlArgData_privateFeatureUlArgData = CHOICE(name='privateFeatureUlArgData', mode=MODE_TYPE, typeref=ASN1RefType(('EricssonMAP-Extensions', 'PrivateFeatureUlArgData')), opt=True)
    UlArgData._cont = ASN1Dict([
        ('privateFeatureCode', _UlArgData_privateFeatureCode),
        ('privateFeatureUlArgData', _UlArgData_privateFeatureUlArgData),
        ])
    UlArgData._ext = []
    
    #-----< PrivateFeatureUlArgData >-----#
    PrivateFeatureUlArgData = CHOICE(name='PrivateFeatureUlArgData', mode=MODE_TYPE)
    _PrivateFeatureUlArgData_adc = OCT_STR(name='adc', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMEI')))
    PrivateFeatureUlArgData._cont = ASN1Dict([
        ('adc', _PrivateFeatureUlArgData_adc),
        ])
    PrivateFeatureUlArgData._ext = None
    
    #-----< ExtraProtocolId >-----#
    ExtraProtocolId = INT(name='ExtraProtocolId', mode=MODE_TYPE)
    ExtraProtocolId._cont = ASN1Dict([('q763', 1)])
    ExtraProtocolId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< ExtraSignalInfo >-----#
    ExtraSignalInfo = SEQ(name='ExtraSignalInfo', mode=MODE_TYPE, tag=(1, TAG_PRIVATE, TAG_IMPLICIT))
    _ExtraSignalInfo_protocolId = INT(name='protocolId', mode=MODE_TYPE, typeref=ASN1RefType(('EricssonMAP-Extensions', 'ExtraProtocolId')))
    _ExtraSignalInfo_signalInfo = OCT_STR(name='signalInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')))
    ExtraSignalInfo._cont = ASN1Dict([
        ('protocolId', _ExtraSignalInfo_protocolId),
        ('signalInfo', _ExtraSignalInfo_signalInfo),
        ])
    ExtraSignalInfo._ext = None
    
    #-----< SaiArgType >-----#
    SaiArgType = SEQ(name='SaiArgType', mode=MODE_TYPE)
    _SaiArgType_msisdn = NULL(name='msisdn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SaiArgType_noAuthenVectorsRequested = NULL(name='noAuthenVectorsRequested', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SaiArgType._cont = ASN1Dict([
        ('msisdn', _SaiArgType_msisdn),
        ('noAuthenVectorsRequested', _SaiArgType_noAuthenVectorsRequested),
        ])
    SaiArgType._ext = None
    
    #-----< SaiResType >-----#
    SaiResType = SEQ(name='SaiResType', mode=MODE_TYPE)
    _SaiResType_msIsdn = OCT_STR(name='msIsdn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    SaiResType._cont = ASN1Dict([
        ('msIsdn', _SaiResType_msIsdn),
        ])
    SaiResType._ext = None
    
    #-----< AtiArgType >-----#
    AtiArgType = SEQ(name='AtiArgType', mode=MODE_TYPE)
    _AtiArgType_requestedInfoType = SEQ(name='requestedInfoType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'RequestedInfoType')), opt=True)
    AtiArgType._cont = ASN1Dict([
        ('requestedInfoType', _AtiArgType_requestedInfoType),
        ])
    AtiArgType._ext = None
    
    #-----< AtiResType >-----#
    AtiResType = SEQ(name='AtiResType', mode=MODE_TYPE)
    _AtiResType_toBeDecided = NULL(name='toBeDecided', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    AtiResType._cont = ASN1Dict([
        ('toBeDecided', _AtiResType_toBeDecided),
        ])
    AtiResType._ext = None
    
    #-----< RdArgType >-----#
    RdArgType = SEQ(name='RdArgType', mode=MODE_TYPE)
    _RdArgType_toBeDecidedOne = NULL(name='toBeDecidedOne', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    RdArgType._cont = ASN1Dict([
        ('toBeDecidedOne', _RdArgType_toBeDecidedOne),
        ])
    RdArgType._ext = None
    
    #-----< RequestedInfoType >-----#
    RequestedInfoType = SEQ(name='RequestedInfoType', mode=MODE_TYPE)
    _RequestedInfoType_sgsnNumber = NULL(name='sgsnNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    RequestedInfoType._cont = ASN1Dict([
        ('sgsnNumber', _RequestedInfoType_sgsnNumber),
        ])
    RequestedInfoType._ext = None
    
    #-----< ExtAtiArgType >-----#
    ExtAtiArgType = SEQ_OF(name='ExtAtiArgType', mode=MODE_TYPE)
    _ExtAtiArgType__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EricssonMAP-Extensions', 'AtiArgData')))
    ExtAtiArgType._cont = _ExtAtiArgType__item_
    ExtAtiArgType._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< AtiArgData >-----#
    AtiArgData = SEQ(name='AtiArgData', mode=MODE_TYPE)
    _AtiArgData_privateFeatureCode = OCT_STR(name='privateFeatureCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EricssonMAP-Extensions', 'PrivateFeatureCode')), opt=True)
    AtiArgData._cont = ASN1Dict([
        ('privateFeatureCode', _AtiArgData_privateFeatureCode),
        ])
    AtiArgData._ext = []
    
    #-----< PrivateFeatureCode >-----#
    PrivateFeatureCode = OCT_STR(name='PrivateFeatureCode', mode=MODE_TYPE)
    PrivateFeatureCode._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    _all_ = [
        _EnhancedCheckIMEI_Arg_imei,
        _EnhancedCheckIMEI_Arg_requestedEquipmentInfo,
        _EnhancedCheckIMEI_Arg_imsi,
        _EnhancedCheckIMEI_Arg_locationInformation,
        _EnhancedCheckIMEI_Arg_extensionContainer,
        EnhancedCheckIMEI_Arg,
        _EricssonExtensionType_isdArgType,
        _EricssonExtensionType_isdResType,
        _EricssonExtensionType_dsdArgType,
        _EricssonExtensionType_sriArgType,
        _EricssonExtensionType_sriResType,
        _EricssonExtensionType_prnArgType,
        _EricssonExtensionType_ulArgType,
        _EricssonExtensionType_rdArgType,
        _EricssonExtensionType_saiArgType,
        _EricssonExtensionType_saiResType,
        _EricssonExtensionType_atiArgType,
        _EricssonExtensionType_atiResType,
        _EricssonExtensionType_extAtiArgType,
        EricssonExtensionType,
        _IsdArgType__item_,
        IsdArgType,
        _IsdArgData_privateFeatureCode,
        _IsdArgData_privateFeatureData,
        IsdArgData,
        _PrivateFeatureData_subscriptionTypeInfo,
        _PrivateFeatureData_oickInfo,
        PrivateFeatureData,
        _OickInfo_ss_Status,
        _OickInfo_inCategoryKey,
        OickInfo,
        INCategoryKey,
        _SubscriptionTypeInfo_subscriptionType,
        SubscriptionTypeInfo,
        SubscriptionType,
        _IsdResType__item_,
        IsdResType,
        _IsdResData_supportedPrivateFeature,
        IsdResData,
        _DsdArgType__item_,
        DsdArgType,
        _DsdArgData_privateFeatureWithdraw,
        DsdArgData,
        _SRIArgType__item_,
        SRIArgType,
        _SriArgData_privateFeatureCode,
        _SriArgData_extraNetworkInfo,
        SriArgData,
        _SRIResType__item_,
        SRIResType,
        _SriResData_privateFeatureCode,
        _SriResData_inCategoryKey,
        _SriResData_subscriptionType,
        SriResData,
        _PrnArgType__item_,
        PrnArgType,
        _PrnArgData_privateFeatureCode,
        _PrnArgData_extraNetworkInfo,
        PrnArgData,
        _UlArgType__item_,
        UlArgType,
        _UlArgData_privateFeatureCode,
        _UlArgData_privateFeatureUlArgData,
        UlArgData,
        _PrivateFeatureUlArgData_adc,
        PrivateFeatureUlArgData,
        ExtraProtocolId,
        _ExtraSignalInfo_protocolId,
        _ExtraSignalInfo_signalInfo,
        ExtraSignalInfo,
        _SaiArgType_msisdn,
        _SaiArgType_noAuthenVectorsRequested,
        SaiArgType,
        _SaiResType_msIsdn,
        SaiResType,
        _AtiArgType_requestedInfoType,
        AtiArgType,
        _AtiResType_toBeDecided,
        AtiResType,
        _RdArgType_toBeDecidedOne,
        RdArgType,
        _RequestedInfoType_sgsnNumber,
        RequestedInfoType,
        _ExtAtiArgType__item_,
        ExtAtiArgType,
        _AtiArgData_privateFeatureCode,
        AtiArgData,
        PrivateFeatureCode,
    ]

class MAP_ApplicationContexts:

    _name_  = 'MAP-ApplicationContexts'
    _oid_   = [0, 4, 0, 0, 1, 3, 2, 19]
    
    _obj_ = [
        'map-ac',
        'networkLocUpContext-v3',
        'locationCancellationContext-v3',
        'roamingNumberEnquiryContext-v3',
        'authenticationFailureReportContext-v3',
        'locationInfoRetrievalContext-v3',
        'resetContext-v3',
        'handoverControlContext-v3',
        'equipmentMngtContext-v3',
        'infoRetrievalContext-v3',
        'interVlrInfoRetrievalContext-v3',
        'subscriberDataMngtContext-v3',
        'tracingContext-v3',
        'networkFunctionalSsContext-v2',
        'networkUnstructuredSsContext-v2',
        'shortMsgGatewayContext-v3',
        'shortMsgMO-RelayContext-v3',
        'shortMsgAlertContext-v2',
        'mwdMngtContext-v3',
        'shortMsgMT-RelayContext-v3',
        'shortMsgMT-Relay-VGCS-Context-v3',
        'imsiRetrievalContext-v2',
        'msPurgingContext-v3',
        'subscriberInfoEnquiryContext-v3',
        'anyTimeInfoEnquiryContext-v3',
        'callControlTransferContext-v4',
        'ss-InvocationNotificationContext-v3',
        'groupCallControlContext-v3',
        'groupCallInfoRetrievalContext-v3',
        'gprsLocationUpdateContext-v3',
        'gprsLocationInfoRetrievalContext-v4',
        'failureReportContext-v3',
        'gprsNotifyContext-v3',
        'reportingContext-v3',
        'callCompletionContext-v3',
        'istAlertingContext-v3',
        'serviceTerminationContext-v3',
        'locationSvcGatewayContext-v3',
        'locationSvcEnquiryContext-v3',
        'mm-EventReportingContext-v3',
        'anyTimeInfoHandlingContext-v3',
        'subscriberDataModificationNotificationContext-v3',
        'resourceManagementContext-v3',
        'vcsgLocationUpdateContext-v3',
        'vcsgLocationCancellationContext-v3',
        ]
    _type_ = [
        ]
    _set_ = [
        ]
    _val_ = [
        'map-ac',
        'networkLocUpContext-v3',
        'locationCancellationContext-v3',
        'roamingNumberEnquiryContext-v3',
        'authenticationFailureReportContext-v3',
        'locationInfoRetrievalContext-v3',
        'resetContext-v3',
        'handoverControlContext-v3',
        'equipmentMngtContext-v3',
        'infoRetrievalContext-v3',
        'interVlrInfoRetrievalContext-v3',
        'subscriberDataMngtContext-v3',
        'tracingContext-v3',
        'networkFunctionalSsContext-v2',
        'networkUnstructuredSsContext-v2',
        'shortMsgGatewayContext-v3',
        'shortMsgMO-RelayContext-v3',
        'shortMsgAlertContext-v2',
        'mwdMngtContext-v3',
        'shortMsgMT-RelayContext-v3',
        'shortMsgMT-Relay-VGCS-Context-v3',
        'imsiRetrievalContext-v2',
        'msPurgingContext-v3',
        'subscriberInfoEnquiryContext-v3',
        'anyTimeInfoEnquiryContext-v3',
        'callControlTransferContext-v4',
        'ss-InvocationNotificationContext-v3',
        'groupCallControlContext-v3',
        'groupCallInfoRetrievalContext-v3',
        'gprsLocationUpdateContext-v3',
        'gprsLocationInfoRetrievalContext-v4',
        'failureReportContext-v3',
        'gprsNotifyContext-v3',
        'reportingContext-v3',
        'callCompletionContext-v3',
        'istAlertingContext-v3',
        'serviceTerminationContext-v3',
        'locationSvcGatewayContext-v3',
        'locationSvcEnquiryContext-v3',
        'mm-EventReportingContext-v3',
        'anyTimeInfoHandlingContext-v3',
        'subscriberDataModificationNotificationContext-v3',
        'resourceManagementContext-v3',
        'vcsgLocationUpdateContext-v3',
        'vcsgLocationCancellationContext-v3',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< map-ac >-----#
    map_ac = OID(name='map-ac', mode=MODE_VALUE)
    map_ac._val = (0, 4, 0, 0, 1, 0)
    
    #-----< networkLocUpContext-v3 >-----#
    networkLocUpContext_v3 = OID(name='networkLocUpContext-v3', mode=MODE_VALUE)
    networkLocUpContext_v3._val = (0, 4, 0, 0, 1, 0, 1, 3)
    
    #-----< locationCancellationContext-v3 >-----#
    locationCancellationContext_v3 = OID(name='locationCancellationContext-v3', mode=MODE_VALUE)
    locationCancellationContext_v3._val = (0, 4, 0, 0, 1, 0, 2, 3)
    
    #-----< roamingNumberEnquiryContext-v3 >-----#
    roamingNumberEnquiryContext_v3 = OID(name='roamingNumberEnquiryContext-v3', mode=MODE_VALUE)
    roamingNumberEnquiryContext_v3._val = (0, 4, 0, 0, 1, 0, 3, 3)
    
    #-----< authenticationFailureReportContext-v3 >-----#
    authenticationFailureReportContext_v3 = OID(name='authenticationFailureReportContext-v3', mode=MODE_VALUE)
    authenticationFailureReportContext_v3._val = (0, 4, 0, 0, 1, 0, 39, 3)
    
    #-----< locationInfoRetrievalContext-v3 >-----#
    locationInfoRetrievalContext_v3 = OID(name='locationInfoRetrievalContext-v3', mode=MODE_VALUE)
    locationInfoRetrievalContext_v3._val = (0, 4, 0, 0, 1, 0, 5, 3)
    
    #-----< resetContext-v3 >-----#
    resetContext_v3 = OID(name='resetContext-v3', mode=MODE_VALUE)
    resetContext_v3._val = (0, 4, 0, 0, 1, 0, 10, 3)
    
    #-----< handoverControlContext-v3 >-----#
    handoverControlContext_v3 = OID(name='handoverControlContext-v3', mode=MODE_VALUE)
    handoverControlContext_v3._val = (0, 4, 0, 0, 1, 0, 11, 3)
    
    #-----< equipmentMngtContext-v3 >-----#
    equipmentMngtContext_v3 = OID(name='equipmentMngtContext-v3', mode=MODE_VALUE)
    equipmentMngtContext_v3._val = (0, 4, 0, 0, 1, 0, 13, 3)
    
    #-----< infoRetrievalContext-v3 >-----#
    infoRetrievalContext_v3 = OID(name='infoRetrievalContext-v3', mode=MODE_VALUE)
    infoRetrievalContext_v3._val = (0, 4, 0, 0, 1, 0, 14, 3)
    
    #-----< interVlrInfoRetrievalContext-v3 >-----#
    interVlrInfoRetrievalContext_v3 = OID(name='interVlrInfoRetrievalContext-v3', mode=MODE_VALUE)
    interVlrInfoRetrievalContext_v3._val = (0, 4, 0, 0, 1, 0, 15, 3)
    
    #-----< subscriberDataMngtContext-v3 >-----#
    subscriberDataMngtContext_v3 = OID(name='subscriberDataMngtContext-v3', mode=MODE_VALUE)
    subscriberDataMngtContext_v3._val = (0, 4, 0, 0, 1, 0, 16, 3)
    
    #-----< tracingContext-v3 >-----#
    tracingContext_v3 = OID(name='tracingContext-v3', mode=MODE_VALUE)
    tracingContext_v3._val = (0, 4, 0, 0, 1, 0, 17, 3)
    
    #-----< networkFunctionalSsContext-v2 >-----#
    networkFunctionalSsContext_v2 = OID(name='networkFunctionalSsContext-v2', mode=MODE_VALUE)
    networkFunctionalSsContext_v2._val = (0, 4, 0, 0, 1, 0, 18, 2)
    
    #-----< networkUnstructuredSsContext-v2 >-----#
    networkUnstructuredSsContext_v2 = OID(name='networkUnstructuredSsContext-v2', mode=MODE_VALUE)
    networkUnstructuredSsContext_v2._val = (0, 4, 0, 0, 1, 0, 19, 2)
    
    #-----< shortMsgGatewayContext-v3 >-----#
    shortMsgGatewayContext_v3 = OID(name='shortMsgGatewayContext-v3', mode=MODE_VALUE)
    shortMsgGatewayContext_v3._val = (0, 4, 0, 0, 1, 0, 20, 3)
    
    #-----< shortMsgMO-RelayContext-v3 >-----#
    shortMsgMO_RelayContext_v3 = OID(name='shortMsgMO-RelayContext-v3', mode=MODE_VALUE)
    shortMsgMO_RelayContext_v3._val = (0, 4, 0, 0, 1, 0, 21, 3)
    
    #-----< shortMsgAlertContext-v2 >-----#
    shortMsgAlertContext_v2 = OID(name='shortMsgAlertContext-v2', mode=MODE_VALUE)
    shortMsgAlertContext_v2._val = (0, 4, 0, 0, 1, 0, 23, 2)
    
    #-----< mwdMngtContext-v3 >-----#
    mwdMngtContext_v3 = OID(name='mwdMngtContext-v3', mode=MODE_VALUE)
    mwdMngtContext_v3._val = (0, 4, 0, 0, 1, 0, 24, 3)
    
    #-----< shortMsgMT-RelayContext-v3 >-----#
    shortMsgMT_RelayContext_v3 = OID(name='shortMsgMT-RelayContext-v3', mode=MODE_VALUE)
    shortMsgMT_RelayContext_v3._val = (0, 4, 0, 0, 1, 0, 25, 3)
    
    #-----< shortMsgMT-Relay-VGCS-Context-v3 >-----#
    shortMsgMT_Relay_VGCS_Context_v3 = OID(name='shortMsgMT-Relay-VGCS-Context-v3', mode=MODE_VALUE)
    shortMsgMT_Relay_VGCS_Context_v3._val = (0, 4, 0, 0, 1, 0, 41, 3)
    
    #-----< imsiRetrievalContext-v2 >-----#
    imsiRetrievalContext_v2 = OID(name='imsiRetrievalContext-v2', mode=MODE_VALUE)
    imsiRetrievalContext_v2._val = (0, 4, 0, 0, 1, 0, 26, 2)
    
    #-----< msPurgingContext-v3 >-----#
    msPurgingContext_v3 = OID(name='msPurgingContext-v3', mode=MODE_VALUE)
    msPurgingContext_v3._val = (0, 4, 0, 0, 1, 0, 27, 3)
    
    #-----< subscriberInfoEnquiryContext-v3 >-----#
    subscriberInfoEnquiryContext_v3 = OID(name='subscriberInfoEnquiryContext-v3', mode=MODE_VALUE)
    subscriberInfoEnquiryContext_v3._val = (0, 4, 0, 0, 1, 0, 28, 3)
    
    #-----< anyTimeInfoEnquiryContext-v3 >-----#
    anyTimeInfoEnquiryContext_v3 = OID(name='anyTimeInfoEnquiryContext-v3', mode=MODE_VALUE)
    anyTimeInfoEnquiryContext_v3._val = (0, 4, 0, 0, 1, 0, 29, 3)
    
    #-----< callControlTransferContext-v4 >-----#
    callControlTransferContext_v4 = OID(name='callControlTransferContext-v4', mode=MODE_VALUE)
    callControlTransferContext_v4._val = (0, 4, 0, 0, 1, 0, 6, 4)
    
    #-----< ss-InvocationNotificationContext-v3 >-----#
    ss_InvocationNotificationContext_v3 = OID(name='ss-InvocationNotificationContext-v3', mode=MODE_VALUE)
    ss_InvocationNotificationContext_v3._val = (0, 4, 0, 0, 1, 0, 36, 3)
    
    #-----< groupCallControlContext-v3 >-----#
    groupCallControlContext_v3 = OID(name='groupCallControlContext-v3', mode=MODE_VALUE)
    groupCallControlContext_v3._val = (0, 4, 0, 0, 1, 0, 31, 3)
    
    #-----< groupCallInfoRetrievalContext-v3 >-----#
    groupCallInfoRetrievalContext_v3 = OID(name='groupCallInfoRetrievalContext-v3', mode=MODE_VALUE)
    groupCallInfoRetrievalContext_v3._val = (0, 4, 0, 0, 1, 0, 45, 3)
    
    #-----< gprsLocationUpdateContext-v3 >-----#
    gprsLocationUpdateContext_v3 = OID(name='gprsLocationUpdateContext-v3', mode=MODE_VALUE)
    gprsLocationUpdateContext_v3._val = (0, 4, 0, 0, 1, 0, 32, 3)
    
    #-----< gprsLocationInfoRetrievalContext-v4 >-----#
    gprsLocationInfoRetrievalContext_v4 = OID(name='gprsLocationInfoRetrievalContext-v4', mode=MODE_VALUE)
    gprsLocationInfoRetrievalContext_v4._val = (0, 4, 0, 0, 1, 0, 33, 4)
    
    #-----< failureReportContext-v3 >-----#
    failureReportContext_v3 = OID(name='failureReportContext-v3', mode=MODE_VALUE)
    failureReportContext_v3._val = (0, 4, 0, 0, 1, 0, 34, 3)
    
    #-----< gprsNotifyContext-v3 >-----#
    gprsNotifyContext_v3 = OID(name='gprsNotifyContext-v3', mode=MODE_VALUE)
    gprsNotifyContext_v3._val = (0, 4, 0, 0, 1, 0, 35, 3)
    
    #-----< reportingContext-v3 >-----#
    reportingContext_v3 = OID(name='reportingContext-v3', mode=MODE_VALUE)
    reportingContext_v3._val = (0, 4, 0, 0, 1, 0, 7, 3)
    
    #-----< callCompletionContext-v3 >-----#
    callCompletionContext_v3 = OID(name='callCompletionContext-v3', mode=MODE_VALUE)
    callCompletionContext_v3._val = (0, 4, 0, 0, 1, 0, 8, 3)
    
    #-----< istAlertingContext-v3 >-----#
    istAlertingContext_v3 = OID(name='istAlertingContext-v3', mode=MODE_VALUE)
    istAlertingContext_v3._val = (0, 4, 0, 0, 1, 0, 4, 3)
    
    #-----< serviceTerminationContext-v3 >-----#
    serviceTerminationContext_v3 = OID(name='serviceTerminationContext-v3', mode=MODE_VALUE)
    serviceTerminationContext_v3._val = (0, 4, 0, 0, 1, 0, 9, 3)
    
    #-----< locationSvcGatewayContext-v3 >-----#
    locationSvcGatewayContext_v3 = OID(name='locationSvcGatewayContext-v3', mode=MODE_VALUE)
    locationSvcGatewayContext_v3._val = (0, 4, 0, 0, 1, 0, 37, 3)
    
    #-----< locationSvcEnquiryContext-v3 >-----#
    locationSvcEnquiryContext_v3 = OID(name='locationSvcEnquiryContext-v3', mode=MODE_VALUE)
    locationSvcEnquiryContext_v3._val = (0, 4, 0, 0, 1, 0, 38, 3)
    
    #-----< mm-EventReportingContext-v3 >-----#
    mm_EventReportingContext_v3 = OID(name='mm-EventReportingContext-v3', mode=MODE_VALUE)
    mm_EventReportingContext_v3._val = (0, 4, 0, 0, 1, 0, 42, 3)
    
    #-----< anyTimeInfoHandlingContext-v3 >-----#
    anyTimeInfoHandlingContext_v3 = OID(name='anyTimeInfoHandlingContext-v3', mode=MODE_VALUE)
    anyTimeInfoHandlingContext_v3._val = (0, 4, 0, 0, 1, 0, 43, 3)
    
    #-----< subscriberDataModificationNotificationContext-v3 >-----#
    subscriberDataModificationNotificationContext_v3 = OID(name='subscriberDataModificationNotificationContext-v3', mode=MODE_VALUE)
    subscriberDataModificationNotificationContext_v3._val = (0, 4, 0, 0, 1, 0, 22, 3)
    
    #-----< resourceManagementContext-v3 >-----#
    resourceManagementContext_v3 = OID(name='resourceManagementContext-v3', mode=MODE_VALUE)
    resourceManagementContext_v3._val = (0, 4, 0, 0, 1, 0, 44, 3)
    
    #-----< vcsgLocationUpdateContext-v3 >-----#
    vcsgLocationUpdateContext_v3 = OID(name='vcsgLocationUpdateContext-v3', mode=MODE_VALUE)
    vcsgLocationUpdateContext_v3._val = (0, 4, 0, 0, 1, 0, 46, 3)
    
    #-----< vcsgLocationCancellationContext-v3 >-----#
    vcsgLocationCancellationContext_v3 = OID(name='vcsgLocationCancellationContext-v3', mode=MODE_VALUE)
    vcsgLocationCancellationContext_v3._val = (0, 4, 0, 0, 1, 0, 47, 3)
    
    _all_ = [
        map_ac,
        networkLocUpContext_v3,
        locationCancellationContext_v3,
        roamingNumberEnquiryContext_v3,
        authenticationFailureReportContext_v3,
        locationInfoRetrievalContext_v3,
        resetContext_v3,
        handoverControlContext_v3,
        equipmentMngtContext_v3,
        infoRetrievalContext_v3,
        interVlrInfoRetrievalContext_v3,
        subscriberDataMngtContext_v3,
        tracingContext_v3,
        networkFunctionalSsContext_v2,
        networkUnstructuredSsContext_v2,
        shortMsgGatewayContext_v3,
        shortMsgMO_RelayContext_v3,
        shortMsgAlertContext_v2,
        mwdMngtContext_v3,
        shortMsgMT_RelayContext_v3,
        shortMsgMT_Relay_VGCS_Context_v3,
        imsiRetrievalContext_v2,
        msPurgingContext_v3,
        subscriberInfoEnquiryContext_v3,
        anyTimeInfoEnquiryContext_v3,
        callControlTransferContext_v4,
        ss_InvocationNotificationContext_v3,
        groupCallControlContext_v3,
        groupCallInfoRetrievalContext_v3,
        gprsLocationUpdateContext_v3,
        gprsLocationInfoRetrievalContext_v4,
        failureReportContext_v3,
        gprsNotifyContext_v3,
        reportingContext_v3,
        callCompletionContext_v3,
        istAlertingContext_v3,
        serviceTerminationContext_v3,
        locationSvcGatewayContext_v3,
        locationSvcEnquiryContext_v3,
        mm_EventReportingContext_v3,
        anyTimeInfoHandlingContext_v3,
        subscriberDataModificationNotificationContext_v3,
        resourceManagementContext_v3,
        vcsgLocationUpdateContext_v3,
        vcsgLocationCancellationContext_v3,
    ]

class MAP_BS_Code:

    _name_  = 'MAP-BS-Code'
    _oid_   = [0, 4, 0, 0, 1, 3, 20, 19]
    
    _obj_ = [
        'BearerServiceCode',
        'Ext-BearerServiceCode',
        'allBearerServices',
        'allDataCDA-Services',
        'dataCDA-300bps',
        'dataCDA-1200bps',
        'dataCDA-1200-75bps',
        'dataCDA-2400bps',
        'dataCDA-4800bps',
        'dataCDA-9600bps',
        'general-dataCDA',
        'allDataCDS-Services',
        'dataCDS-1200bps',
        'dataCDS-2400bps',
        'dataCDS-4800bps',
        'dataCDS-9600bps',
        'general-dataCDS',
        'allPadAccessCA-Services',
        'padAccessCA-300bps',
        'padAccessCA-1200bps',
        'padAccessCA-1200-75bps',
        'padAccessCA-2400bps',
        'padAccessCA-4800bps',
        'padAccessCA-9600bps',
        'general-padAccessCA',
        'allDataPDS-Services',
        'dataPDS-2400bps',
        'dataPDS-4800bps',
        'dataPDS-9600bps',
        'general-dataPDS',
        'allAlternateSpeech-DataCDA',
        'allAlternateSpeech-DataCDS',
        'allSpeechFollowedByDataCDA',
        'allSpeechFollowedByDataCDS',
        'allDataCircuitAsynchronous',
        'allAsynchronousServices',
        'allDataCircuitSynchronous',
        'allSynchronousServices',
        'allPLMN-specificBS',
        'plmn-specificBS-1',
        'plmn-specificBS-2',
        'plmn-specificBS-3',
        'plmn-specificBS-4',
        'plmn-specificBS-5',
        'plmn-specificBS-6',
        'plmn-specificBS-7',
        'plmn-specificBS-8',
        'plmn-specificBS-9',
        'plmn-specificBS-A',
        'plmn-specificBS-B',
        'plmn-specificBS-C',
        'plmn-specificBS-D',
        'plmn-specificBS-E',
        'plmn-specificBS-F',
        ]
    _type_ = [
        'BearerServiceCode',
        'Ext-BearerServiceCode',
        ]
    _set_ = [
        ]
    _val_ = [
        'allBearerServices',
        'allDataCDA-Services',
        'dataCDA-300bps',
        'dataCDA-1200bps',
        'dataCDA-1200-75bps',
        'dataCDA-2400bps',
        'dataCDA-4800bps',
        'dataCDA-9600bps',
        'general-dataCDA',
        'allDataCDS-Services',
        'dataCDS-1200bps',
        'dataCDS-2400bps',
        'dataCDS-4800bps',
        'dataCDS-9600bps',
        'general-dataCDS',
        'allPadAccessCA-Services',
        'padAccessCA-300bps',
        'padAccessCA-1200bps',
        'padAccessCA-1200-75bps',
        'padAccessCA-2400bps',
        'padAccessCA-4800bps',
        'padAccessCA-9600bps',
        'general-padAccessCA',
        'allDataPDS-Services',
        'dataPDS-2400bps',
        'dataPDS-4800bps',
        'dataPDS-9600bps',
        'general-dataPDS',
        'allAlternateSpeech-DataCDA',
        'allAlternateSpeech-DataCDS',
        'allSpeechFollowedByDataCDA',
        'allSpeechFollowedByDataCDS',
        'allDataCircuitAsynchronous',
        'allAsynchronousServices',
        'allDataCircuitSynchronous',
        'allSynchronousServices',
        'allPLMN-specificBS',
        'plmn-specificBS-1',
        'plmn-specificBS-2',
        'plmn-specificBS-3',
        'plmn-specificBS-4',
        'plmn-specificBS-5',
        'plmn-specificBS-6',
        'plmn-specificBS-7',
        'plmn-specificBS-8',
        'plmn-specificBS-9',
        'plmn-specificBS-A',
        'plmn-specificBS-B',
        'plmn-specificBS-C',
        'plmn-specificBS-D',
        'plmn-specificBS-E',
        'plmn-specificBS-F',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< BearerServiceCode >-----#
    BearerServiceCode = OCT_STR(name='BearerServiceCode', mode=MODE_TYPE)
    BearerServiceCode._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< Ext-BearerServiceCode >-----#
    Ext_BearerServiceCode = OCT_STR(name='Ext-BearerServiceCode', mode=MODE_TYPE)
    Ext_BearerServiceCode._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< allBearerServices >-----#
    allBearerServices = OCT_STR(name='allBearerServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allBearerServices._val = b'\x00'
    
    #-----< allDataCDA-Services >-----#
    allDataCDA_Services = OCT_STR(name='allDataCDA-Services', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allDataCDA_Services._val = b'\x10'
    
    #-----< dataCDA-300bps >-----#
    dataCDA_300bps = OCT_STR(name='dataCDA-300bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDA_300bps._val = b'\x11'
    
    #-----< dataCDA-1200bps >-----#
    dataCDA_1200bps = OCT_STR(name='dataCDA-1200bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDA_1200bps._val = b'\x12'
    
    #-----< dataCDA-1200-75bps >-----#
    dataCDA_1200_75bps = OCT_STR(name='dataCDA-1200-75bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDA_1200_75bps._val = b'\x13'
    
    #-----< dataCDA-2400bps >-----#
    dataCDA_2400bps = OCT_STR(name='dataCDA-2400bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDA_2400bps._val = b'\x14'
    
    #-----< dataCDA-4800bps >-----#
    dataCDA_4800bps = OCT_STR(name='dataCDA-4800bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDA_4800bps._val = b'\x15'
    
    #-----< dataCDA-9600bps >-----#
    dataCDA_9600bps = OCT_STR(name='dataCDA-9600bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDA_9600bps._val = b'\x16'
    
    #-----< general-dataCDA >-----#
    general_dataCDA = OCT_STR(name='general-dataCDA', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    general_dataCDA._val = b'\x17'
    
    #-----< allDataCDS-Services >-----#
    allDataCDS_Services = OCT_STR(name='allDataCDS-Services', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allDataCDS_Services._val = b'\x18'
    
    #-----< dataCDS-1200bps >-----#
    dataCDS_1200bps = OCT_STR(name='dataCDS-1200bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDS_1200bps._val = b'\x1a'
    
    #-----< dataCDS-2400bps >-----#
    dataCDS_2400bps = OCT_STR(name='dataCDS-2400bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDS_2400bps._val = b'\x1c'
    
    #-----< dataCDS-4800bps >-----#
    dataCDS_4800bps = OCT_STR(name='dataCDS-4800bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDS_4800bps._val = b'\x1d'
    
    #-----< dataCDS-9600bps >-----#
    dataCDS_9600bps = OCT_STR(name='dataCDS-9600bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDS_9600bps._val = b'\x1e'
    
    #-----< general-dataCDS >-----#
    general_dataCDS = OCT_STR(name='general-dataCDS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    general_dataCDS._val = b'\x1f'
    
    #-----< allPadAccessCA-Services >-----#
    allPadAccessCA_Services = OCT_STR(name='allPadAccessCA-Services', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allPadAccessCA_Services._val = b' '
    
    #-----< padAccessCA-300bps >-----#
    padAccessCA_300bps = OCT_STR(name='padAccessCA-300bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    padAccessCA_300bps._val = b'!'
    
    #-----< padAccessCA-1200bps >-----#
    padAccessCA_1200bps = OCT_STR(name='padAccessCA-1200bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    padAccessCA_1200bps._val = b'"'
    
    #-----< padAccessCA-1200-75bps >-----#
    padAccessCA_1200_75bps = OCT_STR(name='padAccessCA-1200-75bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    padAccessCA_1200_75bps._val = b'#'
    
    #-----< padAccessCA-2400bps >-----#
    padAccessCA_2400bps = OCT_STR(name='padAccessCA-2400bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    padAccessCA_2400bps._val = b'$'
    
    #-----< padAccessCA-4800bps >-----#
    padAccessCA_4800bps = OCT_STR(name='padAccessCA-4800bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    padAccessCA_4800bps._val = b'%'
    
    #-----< padAccessCA-9600bps >-----#
    padAccessCA_9600bps = OCT_STR(name='padAccessCA-9600bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    padAccessCA_9600bps._val = b'&'
    
    #-----< general-padAccessCA >-----#
    general_padAccessCA = OCT_STR(name='general-padAccessCA', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    general_padAccessCA._val = b"'"
    
    #-----< allDataPDS-Services >-----#
    allDataPDS_Services = OCT_STR(name='allDataPDS-Services', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allDataPDS_Services._val = b'('
    
    #-----< dataPDS-2400bps >-----#
    dataPDS_2400bps = OCT_STR(name='dataPDS-2400bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataPDS_2400bps._val = b','
    
    #-----< dataPDS-4800bps >-----#
    dataPDS_4800bps = OCT_STR(name='dataPDS-4800bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataPDS_4800bps._val = b'-'
    
    #-----< dataPDS-9600bps >-----#
    dataPDS_9600bps = OCT_STR(name='dataPDS-9600bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataPDS_9600bps._val = b'.'
    
    #-----< general-dataPDS >-----#
    general_dataPDS = OCT_STR(name='general-dataPDS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    general_dataPDS._val = b'/'
    
    #-----< allAlternateSpeech-DataCDA >-----#
    allAlternateSpeech_DataCDA = OCT_STR(name='allAlternateSpeech-DataCDA', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allAlternateSpeech_DataCDA._val = b'0'
    
    #-----< allAlternateSpeech-DataCDS >-----#
    allAlternateSpeech_DataCDS = OCT_STR(name='allAlternateSpeech-DataCDS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allAlternateSpeech_DataCDS._val = b'8'
    
    #-----< allSpeechFollowedByDataCDA >-----#
    allSpeechFollowedByDataCDA = OCT_STR(name='allSpeechFollowedByDataCDA', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allSpeechFollowedByDataCDA._val = b'@'
    
    #-----< allSpeechFollowedByDataCDS >-----#
    allSpeechFollowedByDataCDS = OCT_STR(name='allSpeechFollowedByDataCDS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allSpeechFollowedByDataCDS._val = b'H'
    
    #-----< allDataCircuitAsynchronous >-----#
    allDataCircuitAsynchronous = OCT_STR(name='allDataCircuitAsynchronous', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allDataCircuitAsynchronous._val = b'P'
    
    #-----< allAsynchronousServices >-----#
    allAsynchronousServices = OCT_STR(name='allAsynchronousServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allAsynchronousServices._val = b'`'
    
    #-----< allDataCircuitSynchronous >-----#
    allDataCircuitSynchronous = OCT_STR(name='allDataCircuitSynchronous', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allDataCircuitSynchronous._val = b'X'
    
    #-----< allSynchronousServices >-----#
    allSynchronousServices = OCT_STR(name='allSynchronousServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allSynchronousServices._val = b'h'
    
    #-----< allPLMN-specificBS >-----#
    allPLMN_specificBS = OCT_STR(name='allPLMN-specificBS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allPLMN_specificBS._val = b'\xd0'
    
    #-----< plmn-specificBS-1 >-----#
    plmn_specificBS_1 = OCT_STR(name='plmn-specificBS-1', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_1._val = b'\xd1'
    
    #-----< plmn-specificBS-2 >-----#
    plmn_specificBS_2 = OCT_STR(name='plmn-specificBS-2', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_2._val = b'\xd2'
    
    #-----< plmn-specificBS-3 >-----#
    plmn_specificBS_3 = OCT_STR(name='plmn-specificBS-3', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_3._val = b'\xd3'
    
    #-----< plmn-specificBS-4 >-----#
    plmn_specificBS_4 = OCT_STR(name='plmn-specificBS-4', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_4._val = b'\xd4'
    
    #-----< plmn-specificBS-5 >-----#
    plmn_specificBS_5 = OCT_STR(name='plmn-specificBS-5', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_5._val = b'\xd5'
    
    #-----< plmn-specificBS-6 >-----#
    plmn_specificBS_6 = OCT_STR(name='plmn-specificBS-6', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_6._val = b'\xd6'
    
    #-----< plmn-specificBS-7 >-----#
    plmn_specificBS_7 = OCT_STR(name='plmn-specificBS-7', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_7._val = b'\xd7'
    
    #-----< plmn-specificBS-8 >-----#
    plmn_specificBS_8 = OCT_STR(name='plmn-specificBS-8', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_8._val = b'\xd8'
    
    #-----< plmn-specificBS-9 >-----#
    plmn_specificBS_9 = OCT_STR(name='plmn-specificBS-9', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_9._val = b'\xd9'
    
    #-----< plmn-specificBS-A >-----#
    plmn_specificBS_A = OCT_STR(name='plmn-specificBS-A', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_A._val = b'\xda'
    
    #-----< plmn-specificBS-B >-----#
    plmn_specificBS_B = OCT_STR(name='plmn-specificBS-B', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_B._val = b'\xdb'
    
    #-----< plmn-specificBS-C >-----#
    plmn_specificBS_C = OCT_STR(name='plmn-specificBS-C', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_C._val = b'\xdc'
    
    #-----< plmn-specificBS-D >-----#
    plmn_specificBS_D = OCT_STR(name='plmn-specificBS-D', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_D._val = b'\xdd'
    
    #-----< plmn-specificBS-E >-----#
    plmn_specificBS_E = OCT_STR(name='plmn-specificBS-E', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_E._val = b'\xde'
    
    #-----< plmn-specificBS-F >-----#
    plmn_specificBS_F = OCT_STR(name='plmn-specificBS-F', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_F._val = b'\xdf'
    
    _all_ = [
        BearerServiceCode,
        Ext_BearerServiceCode,
        allBearerServices,
        allDataCDA_Services,
        dataCDA_300bps,
        dataCDA_1200bps,
        dataCDA_1200_75bps,
        dataCDA_2400bps,
        dataCDA_4800bps,
        dataCDA_9600bps,
        general_dataCDA,
        allDataCDS_Services,
        dataCDS_1200bps,
        dataCDS_2400bps,
        dataCDS_4800bps,
        dataCDS_9600bps,
        general_dataCDS,
        allPadAccessCA_Services,
        padAccessCA_300bps,
        padAccessCA_1200bps,
        padAccessCA_1200_75bps,
        padAccessCA_2400bps,
        padAccessCA_4800bps,
        padAccessCA_9600bps,
        general_padAccessCA,
        allDataPDS_Services,
        dataPDS_2400bps,
        dataPDS_4800bps,
        dataPDS_9600bps,
        general_dataPDS,
        allAlternateSpeech_DataCDA,
        allAlternateSpeech_DataCDS,
        allSpeechFollowedByDataCDA,
        allSpeechFollowedByDataCDS,
        allDataCircuitAsynchronous,
        allAsynchronousServices,
        allDataCircuitSynchronous,
        allSynchronousServices,
        allPLMN_specificBS,
        plmn_specificBS_1,
        plmn_specificBS_2,
        plmn_specificBS_3,
        plmn_specificBS_4,
        plmn_specificBS_5,
        plmn_specificBS_6,
        plmn_specificBS_7,
        plmn_specificBS_8,
        plmn_specificBS_9,
        plmn_specificBS_A,
        plmn_specificBS_B,
        plmn_specificBS_C,
        plmn_specificBS_D,
        plmn_specificBS_E,
        plmn_specificBS_F,
    ]

class MAP_CH_DataTypes:

    _name_  = 'MAP-CH-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 13, 19]
    
    _obj_ = [
        'CUG-CheckInfo',
        'NumberOfForwarding',
        'SendRoutingInfoArg',
        'SuppressionOfAnnouncement',
        'SuppressMTSS',
        'InterrogationType',
        'OR-Phase',
        'CallReferenceNumber',
        'ForwardingReason',
        'SupportedCCBS-Phase',
        'CallDiversionTreatmentIndicator',
        'SendRoutingInfoRes',
        'AllowedServices',
        'UnavailabilityCause',
        'CCBS-Indicators',
        'RoutingInfo',
        'ForwardingData',
        'ProvideRoamingNumberArg',
        'ProvideRoamingNumberRes',
        'ResumeCallHandlingArg',
        'UU-Data',
        'UUIndicator',
        'UUI',
        'ResumeCallHandlingRes',
        'CamelInfo',
        'ExtendedRoutingInfo',
        'CamelRoutingInfo',
        'GmscCamelSubscriptionInfo',
        'SetReportingStateArg',
        'ReportingState',
        'SetReportingStateRes',
        'CCBS-SubscriberStatus',
        'StatusReportArg',
        'EventReportData',
        'CallReportData',
        'MonitoringMode',
        'CallOutcome',
        'StatusReportRes',
        'RemoteUserFreeArg',
        'RemoteUserFreeRes',
        'RUF-Outcome',
        'IST-AlertArg',
        'IST-AlertRes',
        'IST-CommandArg',
        'IST-CommandRes',
        'CallTerminationIndicator',
        'ReleaseResourcesArg',
        'ReleaseResourcesRes',
        ]
    _type_ = [
        'CUG-CheckInfo',
        'NumberOfForwarding',
        'SendRoutingInfoArg',
        'SuppressionOfAnnouncement',
        'SuppressMTSS',
        'InterrogationType',
        'OR-Phase',
        'CallReferenceNumber',
        'ForwardingReason',
        'SupportedCCBS-Phase',
        'CallDiversionTreatmentIndicator',
        'SendRoutingInfoRes',
        'AllowedServices',
        'UnavailabilityCause',
        'CCBS-Indicators',
        'RoutingInfo',
        'ForwardingData',
        'ProvideRoamingNumberArg',
        'ProvideRoamingNumberRes',
        'ResumeCallHandlingArg',
        'UU-Data',
        'UUIndicator',
        'UUI',
        'ResumeCallHandlingRes',
        'CamelInfo',
        'ExtendedRoutingInfo',
        'CamelRoutingInfo',
        'GmscCamelSubscriptionInfo',
        'SetReportingStateArg',
        'ReportingState',
        'SetReportingStateRes',
        'CCBS-SubscriberStatus',
        'StatusReportArg',
        'EventReportData',
        'CallReportData',
        'MonitoringMode',
        'CallOutcome',
        'StatusReportRes',
        'RemoteUserFreeArg',
        'RemoteUserFreeRes',
        'RUF-Outcome',
        'IST-AlertArg',
        'IST-AlertRes',
        'IST-CommandArg',
        'IST-CommandRes',
        'CallTerminationIndicator',
        'ReleaseResourcesArg',
        'ReleaseResourcesRes',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< CUG-CheckInfo >-----#
    CUG_CheckInfo = SEQ(name='CUG-CheckInfo', mode=MODE_TYPE)
    _CUG_CheckInfo_cug_Interlock = OCT_STR(name='cug-Interlock', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CUG-Interlock')))
    _CUG_CheckInfo_cug_OutgoingAccess = NULL(name='cug-OutgoingAccess', mode=MODE_TYPE, opt=True)
    _CUG_CheckInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CUG_CheckInfo._cont = ASN1Dict([
        ('cug-Interlock', _CUG_CheckInfo_cug_Interlock),
        ('cug-OutgoingAccess', _CUG_CheckInfo_cug_OutgoingAccess),
        ('extensionContainer', _CUG_CheckInfo_extensionContainer),
        ])
    CUG_CheckInfo._ext = []
    
    #-----< NumberOfForwarding >-----#
    NumberOfForwarding = INT(name='NumberOfForwarding', mode=MODE_TYPE)
    NumberOfForwarding._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< SendRoutingInfoArg >-----#
    SendRoutingInfoArg = SEQ(name='SendRoutingInfoArg', mode=MODE_TYPE)
    _SendRoutingInfoArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _SendRoutingInfoArg_cug_CheckInfo = SEQ(name='cug-CheckInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'CUG-CheckInfo')), opt=True)
    _SendRoutingInfoArg_numberOfForwarding = INT(name='numberOfForwarding', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'NumberOfForwarding')), opt=True)
    _SendRoutingInfoArg_interrogationType = ENUM(name='interrogationType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'InterrogationType')))
    _SendRoutingInfoArg_or_Interrogation = NULL(name='or-Interrogation', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SendRoutingInfoArg_or_Capability = INT(name='or-Capability', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'OR-Phase')), opt=True)
    _SendRoutingInfoArg_gmsc_OrGsmSCF_Address = OCT_STR(name='gmsc-OrGsmSCF-Address', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _SendRoutingInfoArg_callReferenceNumber = OCT_STR(name='callReferenceNumber', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'CallReferenceNumber')), opt=True)
    _SendRoutingInfoArg_forwardingReason = ENUM(name='forwardingReason', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'ForwardingReason')), opt=True)
    _SendRoutingInfoArg_basicServiceGroup = CHOICE(name='basicServiceGroup', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')), opt=True)
    _SendRoutingInfoArg_networkSignalInfo = SEQ(name='networkSignalInfo', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ExternalSignalInfo')), opt=True)
    _SendRoutingInfoArg_camelInfo = SEQ(name='camelInfo', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'CamelInfo')), opt=True)
    _SendRoutingInfoArg_suppressionOfAnnouncement = NULL(name='suppressionOfAnnouncement', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'SuppressionOfAnnouncement')), opt=True)
    _SendRoutingInfoArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SendRoutingInfoArg_alertingPattern = OCT_STR(name='alertingPattern', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')), opt=True)
    _SendRoutingInfoArg_ccbs_Call = NULL(name='ccbs-Call', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SendRoutingInfoArg_supportedCCBS_Phase = INT(name='supportedCCBS-Phase', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'SupportedCCBS-Phase')), opt=True)
    _SendRoutingInfoArg_additionalSignalInfo = SEQ(name='additionalSignalInfo', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-ExternalSignalInfo')), opt=True)
    _SendRoutingInfoArg_istSupportIndicator = ENUM(name='istSupportIndicator', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'IST-SupportIndicator')), opt=True)
    _SendRoutingInfoArg_pre_pagingSupported = NULL(name='pre-pagingSupported', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SendRoutingInfoArg_callDiversionTreatmentIndicator = OCT_STR(name='callDiversionTreatmentIndicator', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'CallDiversionTreatmentIndicator')), opt=True)
    _SendRoutingInfoArg_longFTN_Supported = NULL(name='longFTN-Supported', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SendRoutingInfoArg_suppress_VT_CSI = NULL(name='suppress-VT-CSI', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SendRoutingInfoArg_suppressIncomingCallBarring = NULL(name='suppressIncomingCallBarring', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SendRoutingInfoArg_gsmSCF_InitiatedCall = NULL(name='gsmSCF-InitiatedCall', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SendRoutingInfoArg_basicServiceGroup2 = CHOICE(name='basicServiceGroup2', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')), opt=True)
    _SendRoutingInfoArg_networkSignalInfo2 = SEQ(name='networkSignalInfo2', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ExternalSignalInfo')), opt=True)
    _SendRoutingInfoArg_suppressMTSS = BIT_STR(name='suppressMTSS', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'SuppressMTSS')), opt=True)
    _SendRoutingInfoArg_mtRoamingRetrySupported = NULL(name='mtRoamingRetrySupported', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SendRoutingInfoArg_callPriority = INT(name='callPriority', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')), opt=True)
    SendRoutingInfoArg._cont = ASN1Dict([
        ('msisdn', _SendRoutingInfoArg_msisdn),
        ('cug-CheckInfo', _SendRoutingInfoArg_cug_CheckInfo),
        ('numberOfForwarding', _SendRoutingInfoArg_numberOfForwarding),
        ('interrogationType', _SendRoutingInfoArg_interrogationType),
        ('or-Interrogation', _SendRoutingInfoArg_or_Interrogation),
        ('or-Capability', _SendRoutingInfoArg_or_Capability),
        ('gmsc-OrGsmSCF-Address', _SendRoutingInfoArg_gmsc_OrGsmSCF_Address),
        ('callReferenceNumber', _SendRoutingInfoArg_callReferenceNumber),
        ('forwardingReason', _SendRoutingInfoArg_forwardingReason),
        ('basicServiceGroup', _SendRoutingInfoArg_basicServiceGroup),
        ('networkSignalInfo', _SendRoutingInfoArg_networkSignalInfo),
        ('camelInfo', _SendRoutingInfoArg_camelInfo),
        ('suppressionOfAnnouncement', _SendRoutingInfoArg_suppressionOfAnnouncement),
        ('extensionContainer', _SendRoutingInfoArg_extensionContainer),
        ('alertingPattern', _SendRoutingInfoArg_alertingPattern),
        ('ccbs-Call', _SendRoutingInfoArg_ccbs_Call),
        ('supportedCCBS-Phase', _SendRoutingInfoArg_supportedCCBS_Phase),
        ('additionalSignalInfo', _SendRoutingInfoArg_additionalSignalInfo),
        ('istSupportIndicator', _SendRoutingInfoArg_istSupportIndicator),
        ('pre-pagingSupported', _SendRoutingInfoArg_pre_pagingSupported),
        ('callDiversionTreatmentIndicator', _SendRoutingInfoArg_callDiversionTreatmentIndicator),
        ('longFTN-Supported', _SendRoutingInfoArg_longFTN_Supported),
        ('suppress-VT-CSI', _SendRoutingInfoArg_suppress_VT_CSI),
        ('suppressIncomingCallBarring', _SendRoutingInfoArg_suppressIncomingCallBarring),
        ('gsmSCF-InitiatedCall', _SendRoutingInfoArg_gsmSCF_InitiatedCall),
        ('basicServiceGroup2', _SendRoutingInfoArg_basicServiceGroup2),
        ('networkSignalInfo2', _SendRoutingInfoArg_networkSignalInfo2),
        ('suppressMTSS', _SendRoutingInfoArg_suppressMTSS),
        ('mtRoamingRetrySupported', _SendRoutingInfoArg_mtRoamingRetrySupported),
        ('callPriority', _SendRoutingInfoArg_callPriority),
        ])
    SendRoutingInfoArg._ext = ['alertingPattern', 'ccbs-Call', 'supportedCCBS-Phase', 'additionalSignalInfo', 'istSupportIndicator', 'pre-pagingSupported', 'callDiversionTreatmentIndicator', 'longFTN-Supported', 'suppress-VT-CSI', 'suppressIncomingCallBarring', 'gsmSCF-InitiatedCall', 'basicServiceGroup2', 'networkSignalInfo2', 'suppressMTSS', 'mtRoamingRetrySupported', 'callPriority']
    
    #-----< SuppressionOfAnnouncement >-----#
    SuppressionOfAnnouncement = NULL(name='SuppressionOfAnnouncement', mode=MODE_TYPE)
    
    #-----< SuppressMTSS >-----#
    SuppressMTSS = BIT_STR(name='SuppressMTSS', mode=MODE_TYPE)
    SuppressMTSS._cont = ASN1Dict([('suppressCUG', 0), ('suppressCCBS', 1)])
    SuppressMTSS._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=16)], ev=None, er=[])
    
    #-----< InterrogationType >-----#
    InterrogationType = ENUM(name='InterrogationType', mode=MODE_TYPE)
    InterrogationType._cont = ASN1Dict([('basicCall', 0), ('forwarding', 1)])
    InterrogationType._ext = None
    
    #-----< OR-Phase >-----#
    OR_Phase = INT(name='OR-Phase', mode=MODE_TYPE)
    OR_Phase._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=127)], ev=None, er=[])
    
    #-----< CallReferenceNumber >-----#
    CallReferenceNumber = OCT_STR(name='CallReferenceNumber', mode=MODE_TYPE)
    CallReferenceNumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< ForwardingReason >-----#
    ForwardingReason = ENUM(name='ForwardingReason', mode=MODE_TYPE)
    ForwardingReason._cont = ASN1Dict([('notReachable', 0), ('busy', 1), ('noReply', 2)])
    ForwardingReason._ext = None
    
    #-----< SupportedCCBS-Phase >-----#
    SupportedCCBS_Phase = INT(name='SupportedCCBS-Phase', mode=MODE_TYPE)
    SupportedCCBS_Phase._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=127)], ev=None, er=[])
    
    #-----< CallDiversionTreatmentIndicator >-----#
    CallDiversionTreatmentIndicator = OCT_STR(name='CallDiversionTreatmentIndicator', mode=MODE_TYPE)
    CallDiversionTreatmentIndicator._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< SendRoutingInfoRes >-----#
    SendRoutingInfoRes = SEQ(name='SendRoutingInfoRes', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SendRoutingInfoRes_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _SendRoutingInfoRes_extendedRoutingInfo = CHOICE(name='extendedRoutingInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ExtendedRoutingInfo')), opt=True)
    _SendRoutingInfoRes_cug_CheckInfo = SEQ(name='cug-CheckInfo', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'CUG-CheckInfo')), opt=True)
    _SendRoutingInfoRes_cugSubscriptionFlag = NULL(name='cugSubscriptionFlag', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SendRoutingInfoRes_subscriberInfo = SEQ(name='subscriberInfo', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SubscriberInfo')), opt=True)
    _SendRoutingInfoRes_ss_List = SEQ_OF(name='ss-List', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-List')), opt=True)
    _SendRoutingInfoRes_basicService = CHOICE(name='basicService', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')), opt=True)
    _SendRoutingInfoRes_forwardingInterrogationRequired = NULL(name='forwardingInterrogationRequired', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SendRoutingInfoRes_vmsc_Address = OCT_STR(name='vmsc-Address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SendRoutingInfoRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SendRoutingInfoRes_naea_PreferredCI = SEQ(name='naea-PreferredCI', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NAEA-PreferredCI')), opt=True)
    _SendRoutingInfoRes_ccbs_Indicators = SEQ(name='ccbs-Indicators', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'CCBS-Indicators')), opt=True)
    _SendRoutingInfoRes_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SendRoutingInfoRes_numberPortabilityStatus = ENUM(name='numberPortabilityStatus', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'NumberPortabilityStatus')), opt=True)
    _SendRoutingInfoRes_istAlertTimer = INT(name='istAlertTimer', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'IST-AlertTimerValue')), opt=True)
    _SendRoutingInfoRes_supportedCamelPhasesInVMSC = BIT_STR(name='supportedCamelPhasesInVMSC', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedCamelPhases')), opt=True)
    _SendRoutingInfoRes_offeredCamel4CSIsInVMSC = BIT_STR(name='offeredCamel4CSIsInVMSC', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'OfferedCamel4CSIs')), opt=True)
    _SendRoutingInfoRes_routingInfo2 = CHOICE(name='routingInfo2', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'RoutingInfo')), opt=True)
    _SendRoutingInfoRes_ss_List2 = SEQ_OF(name='ss-List2', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-List')), opt=True)
    _SendRoutingInfoRes_basicService2 = CHOICE(name='basicService2', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')), opt=True)
    _SendRoutingInfoRes_allowedServices = BIT_STR(name='allowedServices', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'AllowedServices')), opt=True)
    _SendRoutingInfoRes_unavailabilityCause = ENUM(name='unavailabilityCause', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'UnavailabilityCause')), opt=True)
    _SendRoutingInfoRes_releaseResourcesSupported = NULL(name='releaseResourcesSupported', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SendRoutingInfoRes_gsm_BearerCapability = SEQ(name='gsm-BearerCapability', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ExternalSignalInfo')), opt=True)
    SendRoutingInfoRes._cont = ASN1Dict([
        ('imsi', _SendRoutingInfoRes_imsi),
        ('extendedRoutingInfo', _SendRoutingInfoRes_extendedRoutingInfo),
        ('cug-CheckInfo', _SendRoutingInfoRes_cug_CheckInfo),
        ('cugSubscriptionFlag', _SendRoutingInfoRes_cugSubscriptionFlag),
        ('subscriberInfo', _SendRoutingInfoRes_subscriberInfo),
        ('ss-List', _SendRoutingInfoRes_ss_List),
        ('basicService', _SendRoutingInfoRes_basicService),
        ('forwardingInterrogationRequired', _SendRoutingInfoRes_forwardingInterrogationRequired),
        ('vmsc-Address', _SendRoutingInfoRes_vmsc_Address),
        ('extensionContainer', _SendRoutingInfoRes_extensionContainer),
        ('naea-PreferredCI', _SendRoutingInfoRes_naea_PreferredCI),
        ('ccbs-Indicators', _SendRoutingInfoRes_ccbs_Indicators),
        ('msisdn', _SendRoutingInfoRes_msisdn),
        ('numberPortabilityStatus', _SendRoutingInfoRes_numberPortabilityStatus),
        ('istAlertTimer', _SendRoutingInfoRes_istAlertTimer),
        ('supportedCamelPhasesInVMSC', _SendRoutingInfoRes_supportedCamelPhasesInVMSC),
        ('offeredCamel4CSIsInVMSC', _SendRoutingInfoRes_offeredCamel4CSIsInVMSC),
        ('routingInfo2', _SendRoutingInfoRes_routingInfo2),
        ('ss-List2', _SendRoutingInfoRes_ss_List2),
        ('basicService2', _SendRoutingInfoRes_basicService2),
        ('allowedServices', _SendRoutingInfoRes_allowedServices),
        ('unavailabilityCause', _SendRoutingInfoRes_unavailabilityCause),
        ('releaseResourcesSupported', _SendRoutingInfoRes_releaseResourcesSupported),
        ('gsm-BearerCapability', _SendRoutingInfoRes_gsm_BearerCapability),
        ])
    SendRoutingInfoRes._ext = ['naea-PreferredCI', 'ccbs-Indicators', 'msisdn', 'numberPortabilityStatus', 'istAlertTimer', 'supportedCamelPhasesInVMSC', 'offeredCamel4CSIsInVMSC', 'routingInfo2', 'ss-List2', 'basicService2', 'allowedServices', 'unavailabilityCause', 'releaseResourcesSupported', 'gsm-BearerCapability']
    
    #-----< AllowedServices >-----#
    AllowedServices = BIT_STR(name='AllowedServices', mode=MODE_TYPE)
    AllowedServices._cont = ASN1Dict([('firstServiceAllowed', 0), ('secondServiceAllowed', 1)])
    AllowedServices._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=8)], ev=None, er=[])
    
    #-----< UnavailabilityCause >-----#
    UnavailabilityCause = ENUM(name='UnavailabilityCause', mode=MODE_TYPE)
    UnavailabilityCause._cont = ASN1Dict([('bearerServiceNotProvisioned', 1), ('teleserviceNotProvisioned', 2), ('absentSubscriber', 3), ('busySubscriber', 4), ('callBarred', 5), ('cug-Reject', 6)])
    UnavailabilityCause._ext = []
    
    #-----< CCBS-Indicators >-----#
    CCBS_Indicators = SEQ(name='CCBS-Indicators', mode=MODE_TYPE)
    _CCBS_Indicators_ccbs_Possible = NULL(name='ccbs-Possible', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CCBS_Indicators_keepCCBS_CallIndicator = NULL(name='keepCCBS-CallIndicator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CCBS_Indicators_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CCBS_Indicators._cont = ASN1Dict([
        ('ccbs-Possible', _CCBS_Indicators_ccbs_Possible),
        ('keepCCBS-CallIndicator', _CCBS_Indicators_keepCCBS_CallIndicator),
        ('extensionContainer', _CCBS_Indicators_extensionContainer),
        ])
    CCBS_Indicators._ext = []
    
    #-----< RoutingInfo >-----#
    RoutingInfo = CHOICE(name='RoutingInfo', mode=MODE_TYPE)
    _RoutingInfo_roamingNumber = OCT_STR(name='roamingNumber', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _RoutingInfo_forwardingData = SEQ(name='forwardingData', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ForwardingData')))
    RoutingInfo._cont = ASN1Dict([
        ('roamingNumber', _RoutingInfo_roamingNumber),
        ('forwardingData', _RoutingInfo_forwardingData),
        ])
    RoutingInfo._ext = None
    
    #-----< ForwardingData >-----#
    ForwardingData = SEQ(name='ForwardingData', mode=MODE_TYPE)
    _ForwardingData_forwardedToNumber = OCT_STR(name='forwardedToNumber', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _ForwardingData_forwardedToSubaddress = OCT_STR(name='forwardedToSubaddress', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-SubaddressString')), opt=True)
    _ForwardingData_forwardingOptions = OCT_STR(name='forwardingOptions', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'ForwardingOptions')), opt=True)
    _ForwardingData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ForwardingData_longForwardedToNumber = OCT_STR(name='longForwardedToNumber', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'FTN-AddressString')), opt=True)
    ForwardingData._cont = ASN1Dict([
        ('forwardedToNumber', _ForwardingData_forwardedToNumber),
        ('forwardedToSubaddress', _ForwardingData_forwardedToSubaddress),
        ('forwardingOptions', _ForwardingData_forwardingOptions),
        ('extensionContainer', _ForwardingData_extensionContainer),
        ('longForwardedToNumber', _ForwardingData_longForwardedToNumber),
        ])
    ForwardingData._ext = ['longForwardedToNumber']
    
    #-----< ProvideRoamingNumberArg >-----#
    ProvideRoamingNumberArg = SEQ(name='ProvideRoamingNumberArg', mode=MODE_TYPE)
    _ProvideRoamingNumberArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _ProvideRoamingNumberArg_msc_Number = OCT_STR(name='msc-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _ProvideRoamingNumberArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _ProvideRoamingNumberArg_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')), opt=True)
    _ProvideRoamingNumberArg_gsm_BearerCapability = SEQ(name='gsm-BearerCapability', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ExternalSignalInfo')), opt=True)
    _ProvideRoamingNumberArg_networkSignalInfo = SEQ(name='networkSignalInfo', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ExternalSignalInfo')), opt=True)
    _ProvideRoamingNumberArg_suppressionOfAnnouncement = NULL(name='suppressionOfAnnouncement', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'SuppressionOfAnnouncement')), opt=True)
    _ProvideRoamingNumberArg_gmsc_Address = OCT_STR(name='gmsc-Address', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _ProvideRoamingNumberArg_callReferenceNumber = OCT_STR(name='callReferenceNumber', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'CallReferenceNumber')), opt=True)
    _ProvideRoamingNumberArg_or_Interrogation = NULL(name='or-Interrogation', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProvideRoamingNumberArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ProvideRoamingNumberArg_alertingPattern = OCT_STR(name='alertingPattern', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')), opt=True)
    _ProvideRoamingNumberArg_ccbs_Call = NULL(name='ccbs-Call', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProvideRoamingNumberArg_supportedCamelPhasesInInterrogatingNode = BIT_STR(name='supportedCamelPhasesInInterrogatingNode', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedCamelPhases')), opt=True)
    _ProvideRoamingNumberArg_additionalSignalInfo = SEQ(name='additionalSignalInfo', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-ExternalSignalInfo')), opt=True)
    _ProvideRoamingNumberArg_orNotSupportedInGMSC = NULL(name='orNotSupportedInGMSC', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProvideRoamingNumberArg_pre_pagingSupported = NULL(name='pre-pagingSupported', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProvideRoamingNumberArg_longFTN_Supported = NULL(name='longFTN-Supported', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProvideRoamingNumberArg_suppress_VT_CSI = NULL(name='suppress-VT-CSI', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProvideRoamingNumberArg_offeredCamel4CSIsInInterrogatingNode = BIT_STR(name='offeredCamel4CSIsInInterrogatingNode', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'OfferedCamel4CSIs')), opt=True)
    _ProvideRoamingNumberArg_mtRoamingRetrySupported = NULL(name='mtRoamingRetrySupported', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProvideRoamingNumberArg_pagingArea = SEQ_OF(name='pagingArea', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PagingArea')), opt=True)
    _ProvideRoamingNumberArg_callPriority = INT(name='callPriority', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')), opt=True)
    _ProvideRoamingNumberArg_mtrf_Indicator = NULL(name='mtrf-Indicator', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProvideRoamingNumberArg_oldMSC_Number = OCT_STR(name='oldMSC-Number', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _ProvideRoamingNumberArg_lastUsedLtePLMN_Id = OCT_STR(name='lastUsedLtePLMN-Id', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')), opt=True)
    ProvideRoamingNumberArg._cont = ASN1Dict([
        ('imsi', _ProvideRoamingNumberArg_imsi),
        ('msc-Number', _ProvideRoamingNumberArg_msc_Number),
        ('msisdn', _ProvideRoamingNumberArg_msisdn),
        ('lmsi', _ProvideRoamingNumberArg_lmsi),
        ('gsm-BearerCapability', _ProvideRoamingNumberArg_gsm_BearerCapability),
        ('networkSignalInfo', _ProvideRoamingNumberArg_networkSignalInfo),
        ('suppressionOfAnnouncement', _ProvideRoamingNumberArg_suppressionOfAnnouncement),
        ('gmsc-Address', _ProvideRoamingNumberArg_gmsc_Address),
        ('callReferenceNumber', _ProvideRoamingNumberArg_callReferenceNumber),
        ('or-Interrogation', _ProvideRoamingNumberArg_or_Interrogation),
        ('extensionContainer', _ProvideRoamingNumberArg_extensionContainer),
        ('alertingPattern', _ProvideRoamingNumberArg_alertingPattern),
        ('ccbs-Call', _ProvideRoamingNumberArg_ccbs_Call),
        ('supportedCamelPhasesInInterrogatingNode', _ProvideRoamingNumberArg_supportedCamelPhasesInInterrogatingNode),
        ('additionalSignalInfo', _ProvideRoamingNumberArg_additionalSignalInfo),
        ('orNotSupportedInGMSC', _ProvideRoamingNumberArg_orNotSupportedInGMSC),
        ('pre-pagingSupported', _ProvideRoamingNumberArg_pre_pagingSupported),
        ('longFTN-Supported', _ProvideRoamingNumberArg_longFTN_Supported),
        ('suppress-VT-CSI', _ProvideRoamingNumberArg_suppress_VT_CSI),
        ('offeredCamel4CSIsInInterrogatingNode', _ProvideRoamingNumberArg_offeredCamel4CSIsInInterrogatingNode),
        ('mtRoamingRetrySupported', _ProvideRoamingNumberArg_mtRoamingRetrySupported),
        ('pagingArea', _ProvideRoamingNumberArg_pagingArea),
        ('callPriority', _ProvideRoamingNumberArg_callPriority),
        ('mtrf-Indicator', _ProvideRoamingNumberArg_mtrf_Indicator),
        ('oldMSC-Number', _ProvideRoamingNumberArg_oldMSC_Number),
        ('lastUsedLtePLMN-Id', _ProvideRoamingNumberArg_lastUsedLtePLMN_Id),
        ])
    ProvideRoamingNumberArg._ext = ['alertingPattern', 'ccbs-Call', 'supportedCamelPhasesInInterrogatingNode', 'additionalSignalInfo', 'orNotSupportedInGMSC', 'pre-pagingSupported', 'longFTN-Supported', 'suppress-VT-CSI', 'offeredCamel4CSIsInInterrogatingNode', 'mtRoamingRetrySupported', 'pagingArea', 'callPriority', 'mtrf-Indicator', 'oldMSC-Number', 'lastUsedLtePLMN-Id']
    
    #-----< ProvideRoamingNumberRes >-----#
    ProvideRoamingNumberRes = SEQ(name='ProvideRoamingNumberRes', mode=MODE_TYPE)
    _ProvideRoamingNumberRes_roamingNumber = OCT_STR(name='roamingNumber', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _ProvideRoamingNumberRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ProvideRoamingNumberRes_releaseResourcesSupported = NULL(name='releaseResourcesSupported', mode=MODE_TYPE, opt=True)
    _ProvideRoamingNumberRes_vmsc_Address = OCT_STR(name='vmsc-Address', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    ProvideRoamingNumberRes._cont = ASN1Dict([
        ('roamingNumber', _ProvideRoamingNumberRes_roamingNumber),
        ('extensionContainer', _ProvideRoamingNumberRes_extensionContainer),
        ('releaseResourcesSupported', _ProvideRoamingNumberRes_releaseResourcesSupported),
        ('vmsc-Address', _ProvideRoamingNumberRes_vmsc_Address),
        ])
    ProvideRoamingNumberRes._ext = ['releaseResourcesSupported', 'vmsc-Address']
    
    #-----< ResumeCallHandlingArg >-----#
    ResumeCallHandlingArg = SEQ(name='ResumeCallHandlingArg', mode=MODE_TYPE)
    _ResumeCallHandlingArg_callReferenceNumber = OCT_STR(name='callReferenceNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'CallReferenceNumber')), opt=True)
    _ResumeCallHandlingArg_basicServiceGroup = CHOICE(name='basicServiceGroup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')), opt=True)
    _ResumeCallHandlingArg_forwardingData = SEQ(name='forwardingData', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'ForwardingData')), opt=True)
    _ResumeCallHandlingArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _ResumeCallHandlingArg_cug_CheckInfo = SEQ(name='cug-CheckInfo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'CUG-CheckInfo')), opt=True)
    _ResumeCallHandlingArg_o_CSI = SEQ(name='o-CSI', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-CSI')), opt=True)
    _ResumeCallHandlingArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ResumeCallHandlingArg_ccbs_Possible = NULL(name='ccbs-Possible', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ResumeCallHandlingArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _ResumeCallHandlingArg_uu_Data = SEQ(name='uu-Data', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'UU-Data')), opt=True)
    _ResumeCallHandlingArg_allInformationSent = NULL(name='allInformationSent', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ResumeCallHandlingArg_d_csi = SEQ(name='d-csi', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'D-CSI')), opt=True)
    _ResumeCallHandlingArg_o_BcsmCamelTDPCriteriaList = SEQ_OF(name='o-BcsmCamelTDPCriteriaList', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-BcsmCamelTDPCriteriaList')), opt=True)
    _ResumeCallHandlingArg_basicServiceGroup2 = CHOICE(name='basicServiceGroup2', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')), opt=True)
    _ResumeCallHandlingArg_mtRoamingRetry = NULL(name='mtRoamingRetry', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ResumeCallHandlingArg._cont = ASN1Dict([
        ('callReferenceNumber', _ResumeCallHandlingArg_callReferenceNumber),
        ('basicServiceGroup', _ResumeCallHandlingArg_basicServiceGroup),
        ('forwardingData', _ResumeCallHandlingArg_forwardingData),
        ('imsi', _ResumeCallHandlingArg_imsi),
        ('cug-CheckInfo', _ResumeCallHandlingArg_cug_CheckInfo),
        ('o-CSI', _ResumeCallHandlingArg_o_CSI),
        ('extensionContainer', _ResumeCallHandlingArg_extensionContainer),
        ('ccbs-Possible', _ResumeCallHandlingArg_ccbs_Possible),
        ('msisdn', _ResumeCallHandlingArg_msisdn),
        ('uu-Data', _ResumeCallHandlingArg_uu_Data),
        ('allInformationSent', _ResumeCallHandlingArg_allInformationSent),
        ('d-csi', _ResumeCallHandlingArg_d_csi),
        ('o-BcsmCamelTDPCriteriaList', _ResumeCallHandlingArg_o_BcsmCamelTDPCriteriaList),
        ('basicServiceGroup2', _ResumeCallHandlingArg_basicServiceGroup2),
        ('mtRoamingRetry', _ResumeCallHandlingArg_mtRoamingRetry),
        ])
    ResumeCallHandlingArg._ext = ['d-csi', 'o-BcsmCamelTDPCriteriaList', 'basicServiceGroup2', 'mtRoamingRetry']
    
    #-----< UU-Data >-----#
    UU_Data = SEQ(name='UU-Data', mode=MODE_TYPE)
    _UU_Data_uuIndicator = OCT_STR(name='uuIndicator', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'UUIndicator')), opt=True)
    _UU_Data_uui = OCT_STR(name='uui', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'UUI')), opt=True)
    _UU_Data_uusCFInteraction = NULL(name='uusCFInteraction', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UU_Data_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    UU_Data._cont = ASN1Dict([
        ('uuIndicator', _UU_Data_uuIndicator),
        ('uui', _UU_Data_uui),
        ('uusCFInteraction', _UU_Data_uusCFInteraction),
        ('extensionContainer', _UU_Data_extensionContainer),
        ])
    UU_Data._ext = []
    
    #-----< UUIndicator >-----#
    UUIndicator = OCT_STR(name='UUIndicator', mode=MODE_TYPE)
    UUIndicator._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< UUI >-----#
    UUI = OCT_STR(name='UUI', mode=MODE_TYPE)
    UUI._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=131)], ev=None, er=[])
    
    #-----< ResumeCallHandlingRes >-----#
    ResumeCallHandlingRes = SEQ(name='ResumeCallHandlingRes', mode=MODE_TYPE)
    _ResumeCallHandlingRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ResumeCallHandlingRes._cont = ASN1Dict([
        ('extensionContainer', _ResumeCallHandlingRes_extensionContainer),
        ])
    ResumeCallHandlingRes._ext = []
    
    #-----< CamelInfo >-----#
    CamelInfo = SEQ(name='CamelInfo', mode=MODE_TYPE)
    _CamelInfo_supportedCamelPhases = BIT_STR(name='supportedCamelPhases', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedCamelPhases')))
    _CamelInfo_suppress_T_CSI = NULL(name='suppress-T-CSI', mode=MODE_TYPE, opt=True)
    _CamelInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _CamelInfo_offeredCamel4CSIs = BIT_STR(name='offeredCamel4CSIs', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'OfferedCamel4CSIs')), opt=True)
    CamelInfo._cont = ASN1Dict([
        ('supportedCamelPhases', _CamelInfo_supportedCamelPhases),
        ('suppress-T-CSI', _CamelInfo_suppress_T_CSI),
        ('extensionContainer', _CamelInfo_extensionContainer),
        ('offeredCamel4CSIs', _CamelInfo_offeredCamel4CSIs),
        ])
    CamelInfo._ext = ['offeredCamel4CSIs']
    
    #-----< ExtendedRoutingInfo >-----#
    ExtendedRoutingInfo = CHOICE(name='ExtendedRoutingInfo', mode=MODE_TYPE)
    _ExtendedRoutingInfo_routingInfo = CHOICE(name='routingInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'RoutingInfo')))
    _ExtendedRoutingInfo_camelRoutingInfo = SEQ(name='camelRoutingInfo', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'CamelRoutingInfo')))
    ExtendedRoutingInfo._cont = ASN1Dict([
        ('routingInfo', _ExtendedRoutingInfo_routingInfo),
        ('camelRoutingInfo', _ExtendedRoutingInfo_camelRoutingInfo),
        ])
    ExtendedRoutingInfo._ext = None
    
    #-----< CamelRoutingInfo >-----#
    CamelRoutingInfo = SEQ(name='CamelRoutingInfo', mode=MODE_TYPE)
    _CamelRoutingInfo_forwardingData = SEQ(name='forwardingData', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ForwardingData')), opt=True)
    _CamelRoutingInfo_gmscCamelSubscriptionInfo = SEQ(name='gmscCamelSubscriptionInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'GmscCamelSubscriptionInfo')))
    _CamelRoutingInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CamelRoutingInfo._cont = ASN1Dict([
        ('forwardingData', _CamelRoutingInfo_forwardingData),
        ('gmscCamelSubscriptionInfo', _CamelRoutingInfo_gmscCamelSubscriptionInfo),
        ('extensionContainer', _CamelRoutingInfo_extensionContainer),
        ])
    CamelRoutingInfo._ext = []
    
    #-----< GmscCamelSubscriptionInfo >-----#
    GmscCamelSubscriptionInfo = SEQ(name='GmscCamelSubscriptionInfo', mode=MODE_TYPE)
    _GmscCamelSubscriptionInfo_t_CSI = SEQ(name='t-CSI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-CSI')), opt=True)
    _GmscCamelSubscriptionInfo_o_CSI = SEQ(name='o-CSI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-CSI')), opt=True)
    _GmscCamelSubscriptionInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _GmscCamelSubscriptionInfo_o_BcsmCamelTDP_CriteriaList = SEQ_OF(name='o-BcsmCamelTDP-CriteriaList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-BcsmCamelTDPCriteriaList')), opt=True)
    _GmscCamelSubscriptionInfo_t_BCSM_CAMEL_TDP_CriteriaList = SEQ_OF(name='t-BCSM-CAMEL-TDP-CriteriaList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-BCSM-CAMEL-TDP-CriteriaList')), opt=True)
    _GmscCamelSubscriptionInfo_d_csi = SEQ(name='d-csi', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'D-CSI')), opt=True)
    GmscCamelSubscriptionInfo._cont = ASN1Dict([
        ('t-CSI', _GmscCamelSubscriptionInfo_t_CSI),
        ('o-CSI', _GmscCamelSubscriptionInfo_o_CSI),
        ('extensionContainer', _GmscCamelSubscriptionInfo_extensionContainer),
        ('o-BcsmCamelTDP-CriteriaList', _GmscCamelSubscriptionInfo_o_BcsmCamelTDP_CriteriaList),
        ('t-BCSM-CAMEL-TDP-CriteriaList', _GmscCamelSubscriptionInfo_t_BCSM_CAMEL_TDP_CriteriaList),
        ('d-csi', _GmscCamelSubscriptionInfo_d_csi),
        ])
    GmscCamelSubscriptionInfo._ext = ['o-BcsmCamelTDP-CriteriaList', 't-BCSM-CAMEL-TDP-CriteriaList', 'd-csi']
    
    #-----< SetReportingStateArg >-----#
    SetReportingStateArg = SEQ(name='SetReportingStateArg', mode=MODE_TYPE)
    _SetReportingStateArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _SetReportingStateArg_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')), opt=True)
    _SetReportingStateArg_ccbs_Monitoring = ENUM(name='ccbs-Monitoring', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'ReportingState')), opt=True)
    _SetReportingStateArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SetReportingStateArg._cont = ASN1Dict([
        ('imsi', _SetReportingStateArg_imsi),
        ('lmsi', _SetReportingStateArg_lmsi),
        ('ccbs-Monitoring', _SetReportingStateArg_ccbs_Monitoring),
        ('extensionContainer', _SetReportingStateArg_extensionContainer),
        ])
    SetReportingStateArg._ext = []
    
    #-----< ReportingState >-----#
    ReportingState = ENUM(name='ReportingState', mode=MODE_TYPE)
    ReportingState._cont = ASN1Dict([('stopMonitoring', 0), ('startMonitoring', 1)])
    ReportingState._ext = []
    
    #-----< SetReportingStateRes >-----#
    SetReportingStateRes = SEQ(name='SetReportingStateRes', mode=MODE_TYPE)
    _SetReportingStateRes_ccbs_SubscriberStatus = ENUM(name='ccbs-SubscriberStatus', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'CCBS-SubscriberStatus')), opt=True)
    _SetReportingStateRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SetReportingStateRes._cont = ASN1Dict([
        ('ccbs-SubscriberStatus', _SetReportingStateRes_ccbs_SubscriberStatus),
        ('extensionContainer', _SetReportingStateRes_extensionContainer),
        ])
    SetReportingStateRes._ext = []
    
    #-----< CCBS-SubscriberStatus >-----#
    CCBS_SubscriberStatus = ENUM(name='CCBS-SubscriberStatus', mode=MODE_TYPE)
    CCBS_SubscriberStatus._cont = ASN1Dict([('ccbsNotIdle', 0), ('ccbsIdle', 1), ('ccbsNotReachable', 2)])
    CCBS_SubscriberStatus._ext = []
    
    #-----< StatusReportArg >-----#
    StatusReportArg = SEQ(name='StatusReportArg', mode=MODE_TYPE)
    _StatusReportArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _StatusReportArg_eventReportData = SEQ(name='eventReportData', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'EventReportData')), opt=True)
    _StatusReportArg_callReportdata = SEQ(name='callReportdata', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'CallReportData')), opt=True)
    _StatusReportArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    StatusReportArg._cont = ASN1Dict([
        ('imsi', _StatusReportArg_imsi),
        ('eventReportData', _StatusReportArg_eventReportData),
        ('callReportdata', _StatusReportArg_callReportdata),
        ('extensionContainer', _StatusReportArg_extensionContainer),
        ])
    StatusReportArg._ext = []
    
    #-----< EventReportData >-----#
    EventReportData = SEQ(name='EventReportData', mode=MODE_TYPE)
    _EventReportData_ccbs_SubscriberStatus = ENUM(name='ccbs-SubscriberStatus', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'CCBS-SubscriberStatus')), opt=True)
    _EventReportData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    EventReportData._cont = ASN1Dict([
        ('ccbs-SubscriberStatus', _EventReportData_ccbs_SubscriberStatus),
        ('extensionContainer', _EventReportData_extensionContainer),
        ])
    EventReportData._ext = []
    
    #-----< CallReportData >-----#
    CallReportData = SEQ(name='CallReportData', mode=MODE_TYPE)
    _CallReportData_monitoringMode = ENUM(name='monitoringMode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'MonitoringMode')), opt=True)
    _CallReportData_callOutcome = ENUM(name='callOutcome', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'CallOutcome')), opt=True)
    _CallReportData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CallReportData._cont = ASN1Dict([
        ('monitoringMode', _CallReportData_monitoringMode),
        ('callOutcome', _CallReportData_callOutcome),
        ('extensionContainer', _CallReportData_extensionContainer),
        ])
    CallReportData._ext = []
    
    #-----< MonitoringMode >-----#
    MonitoringMode = ENUM(name='MonitoringMode', mode=MODE_TYPE)
    MonitoringMode._cont = ASN1Dict([('a-side', 0), ('b-side', 1)])
    MonitoringMode._ext = []
    
    #-----< CallOutcome >-----#
    CallOutcome = ENUM(name='CallOutcome', mode=MODE_TYPE)
    CallOutcome._cont = ASN1Dict([('success', 0), ('failure', 1), ('busy', 2)])
    CallOutcome._ext = []
    
    #-----< StatusReportRes >-----#
    StatusReportRes = SEQ(name='StatusReportRes', mode=MODE_TYPE)
    _StatusReportRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    StatusReportRes._cont = ASN1Dict([
        ('extensionContainer', _StatusReportRes_extensionContainer),
        ])
    StatusReportRes._ext = []
    
    #-----< RemoteUserFreeArg >-----#
    RemoteUserFreeArg = SEQ(name='RemoteUserFreeArg', mode=MODE_TYPE)
    _RemoteUserFreeArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _RemoteUserFreeArg_callInfo = SEQ(name='callInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ExternalSignalInfo')))
    _RemoteUserFreeArg_ccbs_Feature = SEQ(name='ccbs-Feature', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CCBS-Feature')))
    _RemoteUserFreeArg_translatedB_Number = OCT_STR(name='translatedB-Number', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _RemoteUserFreeArg_replaceB_Number = NULL(name='replaceB-Number', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RemoteUserFreeArg_alertingPattern = OCT_STR(name='alertingPattern', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')), opt=True)
    _RemoteUserFreeArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    RemoteUserFreeArg._cont = ASN1Dict([
        ('imsi', _RemoteUserFreeArg_imsi),
        ('callInfo', _RemoteUserFreeArg_callInfo),
        ('ccbs-Feature', _RemoteUserFreeArg_ccbs_Feature),
        ('translatedB-Number', _RemoteUserFreeArg_translatedB_Number),
        ('replaceB-Number', _RemoteUserFreeArg_replaceB_Number),
        ('alertingPattern', _RemoteUserFreeArg_alertingPattern),
        ('extensionContainer', _RemoteUserFreeArg_extensionContainer),
        ])
    RemoteUserFreeArg._ext = []
    
    #-----< RemoteUserFreeRes >-----#
    RemoteUserFreeRes = SEQ(name='RemoteUserFreeRes', mode=MODE_TYPE)
    _RemoteUserFreeRes_ruf_Outcome = ENUM(name='ruf-Outcome', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'RUF-Outcome')))
    _RemoteUserFreeRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    RemoteUserFreeRes._cont = ASN1Dict([
        ('ruf-Outcome', _RemoteUserFreeRes_ruf_Outcome),
        ('extensionContainer', _RemoteUserFreeRes_extensionContainer),
        ])
    RemoteUserFreeRes._ext = []
    
    #-----< RUF-Outcome >-----#
    RUF_Outcome = ENUM(name='RUF-Outcome', mode=MODE_TYPE)
    RUF_Outcome._cont = ASN1Dict([('accepted', 0), ('rejected', 1), ('noResponseFromFreeMS', 2), ('noResponseFromBusyMS', 3), ('udubFromFreeMS', 4), ('udubFromBusyMS', 5)])
    RUF_Outcome._ext = []
    
    #-----< IST-AlertArg >-----#
    IST_AlertArg = SEQ(name='IST-AlertArg', mode=MODE_TYPE)
    _IST_AlertArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _IST_AlertArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    IST_AlertArg._cont = ASN1Dict([
        ('imsi', _IST_AlertArg_imsi),
        ('extensionContainer', _IST_AlertArg_extensionContainer),
        ])
    IST_AlertArg._ext = []
    
    #-----< IST-AlertRes >-----#
    IST_AlertRes = SEQ(name='IST-AlertRes', mode=MODE_TYPE)
    _IST_AlertRes_istAlertTimer = INT(name='istAlertTimer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'IST-AlertTimerValue')), opt=True)
    _IST_AlertRes_istInformationWithdraw = NULL(name='istInformationWithdraw', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IST_AlertRes_callTerminationIndicator = ENUM(name='callTerminationIndicator', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CH-DataTypes', 'CallTerminationIndicator')), opt=True)
    _IST_AlertRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    IST_AlertRes._cont = ASN1Dict([
        ('istAlertTimer', _IST_AlertRes_istAlertTimer),
        ('istInformationWithdraw', _IST_AlertRes_istInformationWithdraw),
        ('callTerminationIndicator', _IST_AlertRes_callTerminationIndicator),
        ('extensionContainer', _IST_AlertRes_extensionContainer),
        ])
    IST_AlertRes._ext = []
    
    #-----< IST-CommandArg >-----#
    IST_CommandArg = SEQ(name='IST-CommandArg', mode=MODE_TYPE)
    _IST_CommandArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _IST_CommandArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    IST_CommandArg._cont = ASN1Dict([
        ('imsi', _IST_CommandArg_imsi),
        ('extensionContainer', _IST_CommandArg_extensionContainer),
        ])
    IST_CommandArg._ext = []
    
    #-----< IST-CommandRes >-----#
    IST_CommandRes = SEQ(name='IST-CommandRes', mode=MODE_TYPE)
    _IST_CommandRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    IST_CommandRes._cont = ASN1Dict([
        ('extensionContainer', _IST_CommandRes_extensionContainer),
        ])
    IST_CommandRes._ext = []
    
    #-----< CallTerminationIndicator >-----#
    CallTerminationIndicator = ENUM(name='CallTerminationIndicator', mode=MODE_TYPE)
    CallTerminationIndicator._cont = ASN1Dict([('terminateCallActivityReferred', 0), ('terminateAllCallActivities', 1)])
    CallTerminationIndicator._ext = []
    
    #-----< ReleaseResourcesArg >-----#
    ReleaseResourcesArg = SEQ(name='ReleaseResourcesArg', mode=MODE_TYPE)
    _ReleaseResourcesArg_msrn = OCT_STR(name='msrn', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _ReleaseResourcesArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ReleaseResourcesArg._cont = ASN1Dict([
        ('msrn', _ReleaseResourcesArg_msrn),
        ('extensionContainer', _ReleaseResourcesArg_extensionContainer),
        ])
    ReleaseResourcesArg._ext = []
    
    #-----< ReleaseResourcesRes >-----#
    ReleaseResourcesRes = SEQ(name='ReleaseResourcesRes', mode=MODE_TYPE)
    _ReleaseResourcesRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ReleaseResourcesRes._cont = ASN1Dict([
        ('extensionContainer', _ReleaseResourcesRes_extensionContainer),
        ])
    ReleaseResourcesRes._ext = []
    
    _all_ = [
        _CUG_CheckInfo_cug_Interlock,
        _CUG_CheckInfo_cug_OutgoingAccess,
        _CUG_CheckInfo_extensionContainer,
        CUG_CheckInfo,
        NumberOfForwarding,
        _SendRoutingInfoArg_msisdn,
        _SendRoutingInfoArg_cug_CheckInfo,
        _SendRoutingInfoArg_numberOfForwarding,
        _SendRoutingInfoArg_interrogationType,
        _SendRoutingInfoArg_or_Interrogation,
        _SendRoutingInfoArg_or_Capability,
        _SendRoutingInfoArg_gmsc_OrGsmSCF_Address,
        _SendRoutingInfoArg_callReferenceNumber,
        _SendRoutingInfoArg_forwardingReason,
        _SendRoutingInfoArg_basicServiceGroup,
        _SendRoutingInfoArg_networkSignalInfo,
        _SendRoutingInfoArg_camelInfo,
        _SendRoutingInfoArg_suppressionOfAnnouncement,
        _SendRoutingInfoArg_extensionContainer,
        _SendRoutingInfoArg_alertingPattern,
        _SendRoutingInfoArg_ccbs_Call,
        _SendRoutingInfoArg_supportedCCBS_Phase,
        _SendRoutingInfoArg_additionalSignalInfo,
        _SendRoutingInfoArg_istSupportIndicator,
        _SendRoutingInfoArg_pre_pagingSupported,
        _SendRoutingInfoArg_callDiversionTreatmentIndicator,
        _SendRoutingInfoArg_longFTN_Supported,
        _SendRoutingInfoArg_suppress_VT_CSI,
        _SendRoutingInfoArg_suppressIncomingCallBarring,
        _SendRoutingInfoArg_gsmSCF_InitiatedCall,
        _SendRoutingInfoArg_basicServiceGroup2,
        _SendRoutingInfoArg_networkSignalInfo2,
        _SendRoutingInfoArg_suppressMTSS,
        _SendRoutingInfoArg_mtRoamingRetrySupported,
        _SendRoutingInfoArg_callPriority,
        SendRoutingInfoArg,
        SuppressionOfAnnouncement,
        SuppressMTSS,
        InterrogationType,
        OR_Phase,
        CallReferenceNumber,
        ForwardingReason,
        SupportedCCBS_Phase,
        CallDiversionTreatmentIndicator,
        _SendRoutingInfoRes_imsi,
        _SendRoutingInfoRes_extendedRoutingInfo,
        _SendRoutingInfoRes_cug_CheckInfo,
        _SendRoutingInfoRes_cugSubscriptionFlag,
        _SendRoutingInfoRes_subscriberInfo,
        _SendRoutingInfoRes_ss_List,
        _SendRoutingInfoRes_basicService,
        _SendRoutingInfoRes_forwardingInterrogationRequired,
        _SendRoutingInfoRes_vmsc_Address,
        _SendRoutingInfoRes_extensionContainer,
        _SendRoutingInfoRes_naea_PreferredCI,
        _SendRoutingInfoRes_ccbs_Indicators,
        _SendRoutingInfoRes_msisdn,
        _SendRoutingInfoRes_numberPortabilityStatus,
        _SendRoutingInfoRes_istAlertTimer,
        _SendRoutingInfoRes_supportedCamelPhasesInVMSC,
        _SendRoutingInfoRes_offeredCamel4CSIsInVMSC,
        _SendRoutingInfoRes_routingInfo2,
        _SendRoutingInfoRes_ss_List2,
        _SendRoutingInfoRes_basicService2,
        _SendRoutingInfoRes_allowedServices,
        _SendRoutingInfoRes_unavailabilityCause,
        _SendRoutingInfoRes_releaseResourcesSupported,
        _SendRoutingInfoRes_gsm_BearerCapability,
        SendRoutingInfoRes,
        AllowedServices,
        UnavailabilityCause,
        _CCBS_Indicators_ccbs_Possible,
        _CCBS_Indicators_keepCCBS_CallIndicator,
        _CCBS_Indicators_extensionContainer,
        CCBS_Indicators,
        _RoutingInfo_roamingNumber,
        _RoutingInfo_forwardingData,
        RoutingInfo,
        _ForwardingData_forwardedToNumber,
        _ForwardingData_forwardedToSubaddress,
        _ForwardingData_forwardingOptions,
        _ForwardingData_extensionContainer,
        _ForwardingData_longForwardedToNumber,
        ForwardingData,
        _ProvideRoamingNumberArg_imsi,
        _ProvideRoamingNumberArg_msc_Number,
        _ProvideRoamingNumberArg_msisdn,
        _ProvideRoamingNumberArg_lmsi,
        _ProvideRoamingNumberArg_gsm_BearerCapability,
        _ProvideRoamingNumberArg_networkSignalInfo,
        _ProvideRoamingNumberArg_suppressionOfAnnouncement,
        _ProvideRoamingNumberArg_gmsc_Address,
        _ProvideRoamingNumberArg_callReferenceNumber,
        _ProvideRoamingNumberArg_or_Interrogation,
        _ProvideRoamingNumberArg_extensionContainer,
        _ProvideRoamingNumberArg_alertingPattern,
        _ProvideRoamingNumberArg_ccbs_Call,
        _ProvideRoamingNumberArg_supportedCamelPhasesInInterrogatingNode,
        _ProvideRoamingNumberArg_additionalSignalInfo,
        _ProvideRoamingNumberArg_orNotSupportedInGMSC,
        _ProvideRoamingNumberArg_pre_pagingSupported,
        _ProvideRoamingNumberArg_longFTN_Supported,
        _ProvideRoamingNumberArg_suppress_VT_CSI,
        _ProvideRoamingNumberArg_offeredCamel4CSIsInInterrogatingNode,
        _ProvideRoamingNumberArg_mtRoamingRetrySupported,
        _ProvideRoamingNumberArg_pagingArea,
        _ProvideRoamingNumberArg_callPriority,
        _ProvideRoamingNumberArg_mtrf_Indicator,
        _ProvideRoamingNumberArg_oldMSC_Number,
        _ProvideRoamingNumberArg_lastUsedLtePLMN_Id,
        ProvideRoamingNumberArg,
        _ProvideRoamingNumberRes_roamingNumber,
        _ProvideRoamingNumberRes_extensionContainer,
        _ProvideRoamingNumberRes_releaseResourcesSupported,
        _ProvideRoamingNumberRes_vmsc_Address,
        ProvideRoamingNumberRes,
        _ResumeCallHandlingArg_callReferenceNumber,
        _ResumeCallHandlingArg_basicServiceGroup,
        _ResumeCallHandlingArg_forwardingData,
        _ResumeCallHandlingArg_imsi,
        _ResumeCallHandlingArg_cug_CheckInfo,
        _ResumeCallHandlingArg_o_CSI,
        _ResumeCallHandlingArg_extensionContainer,
        _ResumeCallHandlingArg_ccbs_Possible,
        _ResumeCallHandlingArg_msisdn,
        _ResumeCallHandlingArg_uu_Data,
        _ResumeCallHandlingArg_allInformationSent,
        _ResumeCallHandlingArg_d_csi,
        _ResumeCallHandlingArg_o_BcsmCamelTDPCriteriaList,
        _ResumeCallHandlingArg_basicServiceGroup2,
        _ResumeCallHandlingArg_mtRoamingRetry,
        ResumeCallHandlingArg,
        _UU_Data_uuIndicator,
        _UU_Data_uui,
        _UU_Data_uusCFInteraction,
        _UU_Data_extensionContainer,
        UU_Data,
        UUIndicator,
        UUI,
        _ResumeCallHandlingRes_extensionContainer,
        ResumeCallHandlingRes,
        _CamelInfo_supportedCamelPhases,
        _CamelInfo_suppress_T_CSI,
        _CamelInfo_extensionContainer,
        _CamelInfo_offeredCamel4CSIs,
        CamelInfo,
        _ExtendedRoutingInfo_routingInfo,
        _ExtendedRoutingInfo_camelRoutingInfo,
        ExtendedRoutingInfo,
        _CamelRoutingInfo_forwardingData,
        _CamelRoutingInfo_gmscCamelSubscriptionInfo,
        _CamelRoutingInfo_extensionContainer,
        CamelRoutingInfo,
        _GmscCamelSubscriptionInfo_t_CSI,
        _GmscCamelSubscriptionInfo_o_CSI,
        _GmscCamelSubscriptionInfo_extensionContainer,
        _GmscCamelSubscriptionInfo_o_BcsmCamelTDP_CriteriaList,
        _GmscCamelSubscriptionInfo_t_BCSM_CAMEL_TDP_CriteriaList,
        _GmscCamelSubscriptionInfo_d_csi,
        GmscCamelSubscriptionInfo,
        _SetReportingStateArg_imsi,
        _SetReportingStateArg_lmsi,
        _SetReportingStateArg_ccbs_Monitoring,
        _SetReportingStateArg_extensionContainer,
        SetReportingStateArg,
        ReportingState,
        _SetReportingStateRes_ccbs_SubscriberStatus,
        _SetReportingStateRes_extensionContainer,
        SetReportingStateRes,
        CCBS_SubscriberStatus,
        _StatusReportArg_imsi,
        _StatusReportArg_eventReportData,
        _StatusReportArg_callReportdata,
        _StatusReportArg_extensionContainer,
        StatusReportArg,
        _EventReportData_ccbs_SubscriberStatus,
        _EventReportData_extensionContainer,
        EventReportData,
        _CallReportData_monitoringMode,
        _CallReportData_callOutcome,
        _CallReportData_extensionContainer,
        CallReportData,
        MonitoringMode,
        CallOutcome,
        _StatusReportRes_extensionContainer,
        StatusReportRes,
        _RemoteUserFreeArg_imsi,
        _RemoteUserFreeArg_callInfo,
        _RemoteUserFreeArg_ccbs_Feature,
        _RemoteUserFreeArg_translatedB_Number,
        _RemoteUserFreeArg_replaceB_Number,
        _RemoteUserFreeArg_alertingPattern,
        _RemoteUserFreeArg_extensionContainer,
        RemoteUserFreeArg,
        _RemoteUserFreeRes_ruf_Outcome,
        _RemoteUserFreeRes_extensionContainer,
        RemoteUserFreeRes,
        RUF_Outcome,
        _IST_AlertArg_imsi,
        _IST_AlertArg_extensionContainer,
        IST_AlertArg,
        _IST_AlertRes_istAlertTimer,
        _IST_AlertRes_istInformationWithdraw,
        _IST_AlertRes_callTerminationIndicator,
        _IST_AlertRes_extensionContainer,
        IST_AlertRes,
        _IST_CommandArg_imsi,
        _IST_CommandArg_extensionContainer,
        IST_CommandArg,
        _IST_CommandRes_extensionContainer,
        IST_CommandRes,
        CallTerminationIndicator,
        _ReleaseResourcesArg_msrn,
        _ReleaseResourcesArg_extensionContainer,
        ReleaseResourcesArg,
        _ReleaseResourcesRes_extensionContainer,
        ReleaseResourcesRes,
    ]

class MAP_CallHandlingOperations:

    _name_  = 'MAP-CallHandlingOperations'
    _oid_   = [0, 4, 0, 0, 1, 3, 7, 19]
    
    _obj_ = [
        'sendRoutingInfo',
        'provideRoamingNumber',
        'resumeCallHandling',
        'setReportingState',
        'statusReport',
        'remoteUserFree',
        'ist-Alert',
        'ist-Command',
        'releaseResources',
        ]
    _type_ = [
        ]
    _set_ = [
        ]
    _val_ = [
        'sendRoutingInfo',
        'provideRoamingNumber',
        'resumeCallHandling',
        'setReportingState',
        'statusReport',
        'remoteUserFree',
        'ist-Alert',
        'ist-Command',
        'releaseResources',
        ]
    _class_ = [
        'sendRoutingInfo',
        'provideRoamingNumber',
        'resumeCallHandling',
        'setReportingState',
        'statusReport',
        'remoteUserFree',
        'ist-Alert',
        'ist-Command',
        'releaseResources',
        ]
    _param_ = [
        ]
    
    #-----< sendRoutingInfo >-----#
    sendRoutingInfo = CLASS(name='sendRoutingInfo', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _sendRoutingInfo_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SendRoutingInfoArg')))
    _sendRoutingInfo_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SendRoutingInfoRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'OR-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NumberChangedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BearerServNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TeleservNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_10 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BusySubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_11 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoSubscriberReplyParam')))
    __sendRoutingInfo_Errors_val_ParameterType_12 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    __sendRoutingInfo_Errors_val_ParameterType_13 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CUG-RejectParam')))
    __sendRoutingInfo_Errors_val_ParameterType_14 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ForwardingViolationParam')))
    sendRoutingInfo._val = dict([('ArgumentType', _sendRoutingInfo_val_ArgumentType), ('ResultType', _sendRoutingInfo_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 44))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10), ('errorCode', ('local', 45))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_11), ('errorCode', ('local', 46))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_12), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_13), ('errorCode', ('local', 15))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_14), ('errorCode', ('local', 14))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 22))])
    
    #-----< provideRoamingNumber >-----#
    provideRoamingNumber = CLASS(name='provideRoamingNumber', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _provideRoamingNumber_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ProvideRoamingNumberArg')))
    _provideRoamingNumber_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ProvideRoamingNumberRes')))
    __sendRoutingInfo_Errors_val_ParameterType_5_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoRoamingNbParam')))
    provideRoamingNumber._val = dict([('ArgumentType', _provideRoamingNumber_val_ArgumentType), ('ResultType', _provideRoamingNumber_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_0), ('errorCode', ('local', 39))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 4))])
    
    #-----< resumeCallHandling >-----#
    resumeCallHandling = CLASS(name='resumeCallHandling', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _resumeCallHandling_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ResumeCallHandlingArg')))
    _resumeCallHandling_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ResumeCallHandlingRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ForwardingFailedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'OR-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    resumeCallHandling._val = dict([('ArgumentType', _resumeCallHandling_val_ArgumentType), ('ResultType', _resumeCallHandling_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 47))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 6))])
    
    #-----< setReportingState >-----#
    setReportingState = CLASS(name='setReportingState', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _setReportingState_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SetReportingStateArg')))
    _setReportingState_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SetReportingStateRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ResourceLimitationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    setReportingState._val = dict([('ArgumentType', _setReportingState_val_ArgumentType), ('ResultType', _setReportingState_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_1), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 73))])
    
    #-----< statusReport >-----#
    statusReport = CLASS(name='statusReport', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _statusReport_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'StatusReportArg')))
    _statusReport_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'StatusReportRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1_2 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    statusReport._val = dict([('ArgumentType', _statusReport_val_ArgumentType), ('ResultType', _statusReport_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_2), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 74))])
    
    #-----< remoteUserFree >-----#
    remoteUserFree = CLASS(name='remoteUserFree', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _remoteUserFree_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'RemoteUserFreeArg')))
    _remoteUserFree_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'RemoteUserFreeRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IncompatibleTerminalParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_1 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BusySubscriberParam')))
    remoteUserFree._val = dict([('ArgumentType', _remoteUserFree_val_ArgumentType), ('ResultType', _remoteUserFree_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 28))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_2), ('errorCode', ('local', 45))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 75))])
    
    #-----< ist-Alert >-----#
    ist_Alert = CLASS(name='ist-Alert', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _ist_Alert_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-AlertArg')))
    _ist_Alert_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-AlertRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ResourceLimitationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_2 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    ist_Alert._val = dict([('ArgumentType', _ist_Alert_val_ArgumentType), ('ResultType', _ist_Alert_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_3), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_1), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_2), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 87))])
    
    #-----< ist-Command >-----#
    ist_Command = CLASS(name='ist-Command', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _ist_Command_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-CommandArg')))
    _ist_Command_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-CommandRes')))
    ist_Command._val = dict([('ArgumentType', _ist_Command_val_ArgumentType), ('ResultType', _ist_Command_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_3), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_1), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_2), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 88))])
    
    #-----< releaseResources >-----#
    releaseResources = CLASS(name='releaseResources', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _releaseResources_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ReleaseResourcesArg')))
    _releaseResources_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ReleaseResourcesRes')))
    releaseResources._val = dict([('ArgumentType', _releaseResources_val_ArgumentType), ('ResultType', _releaseResources_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_2), ('errorCode', ('local', 34))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 20))])
    
    _all_ = [
        sendRoutingInfo,
        _sendRoutingInfo_val_ArgumentType,
        _sendRoutingInfo_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0,
        __sendRoutingInfo_Errors_val_ParameterType_1,
        __sendRoutingInfo_Errors_val_ParameterType_2,
        __sendRoutingInfo_Errors_val_ParameterType_3,
        __sendRoutingInfo_Errors_val_ParameterType_4,
        __sendRoutingInfo_Errors_val_ParameterType_5,
        __sendRoutingInfo_Errors_val_ParameterType_6,
        __sendRoutingInfo_Errors_val_ParameterType_7,
        __sendRoutingInfo_Errors_val_ParameterType_8,
        __sendRoutingInfo_Errors_val_ParameterType_9,
        __sendRoutingInfo_Errors_val_ParameterType_10,
        __sendRoutingInfo_Errors_val_ParameterType_11,
        __sendRoutingInfo_Errors_val_ParameterType_12,
        __sendRoutingInfo_Errors_val_ParameterType_13,
        __sendRoutingInfo_Errors_val_ParameterType_14,
        provideRoamingNumber,
        _provideRoamingNumber_val_ArgumentType,
        _provideRoamingNumber_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_5_0,
        __sendRoutingInfo_Errors_val_ParameterType_6_0,
        resumeCallHandling,
        _resumeCallHandling_val_ArgumentType,
        _resumeCallHandling_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0_0,
        __sendRoutingInfo_Errors_val_ParameterType_1_0,
        __sendRoutingInfo_Errors_val_ParameterType_3_0,
        setReportingState,
        _setReportingState_val_ArgumentType,
        _setReportingState_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_1_1,
        __sendRoutingInfo_Errors_val_ParameterType_4_0,
        __sendRoutingInfo_Errors_val_ParameterType_5_1,
        statusReport,
        _statusReport_val_ArgumentType,
        _statusReport_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0_1,
        __sendRoutingInfo_Errors_val_ParameterType_1_2,
        remoteUserFree,
        _remoteUserFree_val_ArgumentType,
        _remoteUserFree_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0_2,
        __sendRoutingInfo_Errors_val_ParameterType_2_0,
        __sendRoutingInfo_Errors_val_ParameterType_3_1,
        __sendRoutingInfo_Errors_val_ParameterType_4_1,
        __sendRoutingInfo_Errors_val_ParameterType_5_2,
        ist_Alert,
        _ist_Alert_val_ArgumentType,
        _ist_Alert_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_1_3,
        __sendRoutingInfo_Errors_val_ParameterType_2_1,
        __sendRoutingInfo_Errors_val_ParameterType_3_2,
        __sendRoutingInfo_Errors_val_ParameterType_4_2,
        ist_Command,
        _ist_Command_val_ArgumentType,
        _ist_Command_val_ResultType,
        releaseResources,
        _releaseResources_val_ArgumentType,
        _releaseResources_val_ResultType,
    ]

class MAP_CommonDataTypes:

    _name_  = 'MAP-CommonDataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 18, 19]
    
    _obj_ = [
        'TBCD-STRING',
        'DiameterIdentity',
        'AddressString',
        'maxAddressLength',
        'ISDN-AddressString',
        'maxISDN-AddressLength',
        'FTN-AddressString',
        'maxFTN-AddressLength',
        'ISDN-SubaddressString',
        'maxISDN-SubaddressLength',
        'ExternalSignalInfo',
        'SignalInfo',
        'maxSignalInfoLength',
        'ProtocolId',
        'Ext-ExternalSignalInfo',
        'Ext-ProtocolId',
        'AccessNetworkSignalInfo',
        'LongSignalInfo',
        'maxLongSignalInfoLength',
        'AccessNetworkProtocolId',
        'AlertingPattern',
        'alertingLevel-0',
        'alertingLevel-1',
        'alertingLevel-2',
        'alertingCategory-1',
        'alertingCategory-2',
        'alertingCategory-3',
        'alertingCategory-4',
        'alertingCategory-5',
        'GSN-Address',
        'Time',
        'IMSI',
        'Identity',
        'IMSI-WithLMSI',
        'ASCI-CallReference',
        'TMSI',
        'SubscriberId',
        'IMEI',
        'HLR-Id',
        'HLR-List',
        'maxNumOfHLR-Id',
        'LMSI',
        'GlobalCellId',
        'NetworkResource',
        'AdditionalNetworkResource',
        'NAEA-PreferredCI',
        'NAEA-CIC',
        'SubscriberIdentity',
        'LCSClientExternalID',
        'LCSClientInternalID',
        'LCSServiceTypeID',
        'emergencyServices',
        'emergencyAlertServices',
        'personTracking',
        'fleetManagement',
        'assetManagement',
        'trafficCongestionReporting',
        'roadsideAssistance',
        'routingToNearestCommercialEnterprise',
        'navigation',
        'citySightseeing',
        'localizedAdvertising',
        'mobileYellowPages',
        'trafficAndPublicTransportationInfo',
        'weather',
        'assetAndServiceFinding',
        'gaming',
        'findYourFriend',
        'dating',
        'chatting',
        'routeFinding',
        'whereAmI',
        'serv64',
        'serv65',
        'serv66',
        'serv67',
        'serv68',
        'serv69',
        'serv70',
        'serv71',
        'serv72',
        'serv73',
        'serv74',
        'serv75',
        'serv76',
        'serv77',
        'serv78',
        'serv79',
        'serv80',
        'serv81',
        'serv82',
        'serv83',
        'serv84',
        'serv85',
        'serv86',
        'serv87',
        'serv88',
        'serv89',
        'serv90',
        'serv91',
        'serv92',
        'serv93',
        'serv94',
        'serv95',
        'serv96',
        'serv97',
        'serv98',
        'serv99',
        'serv100',
        'serv101',
        'serv102',
        'serv103',
        'serv104',
        'serv105',
        'serv106',
        'serv107',
        'serv108',
        'serv109',
        'serv110',
        'serv111',
        'serv112',
        'serv113',
        'serv114',
        'serv115',
        'serv116',
        'serv117',
        'serv118',
        'serv119',
        'serv120',
        'serv121',
        'serv122',
        'serv123',
        'serv124',
        'serv125',
        'serv126',
        'serv127',
        'PLMN-Id',
        'E-UTRAN-CGI',
        'NR-CGI',
        'TA-Id',
        'NR-TA-Id',
        'RAIdentity',
        'NetworkNodeDiameterAddress',
        'CellGlobalIdOrServiceAreaIdOrLAI',
        'CellGlobalIdOrServiceAreaIdFixedLength',
        'LAIFixedLength',
        'BasicServiceCode',
        'Ext-BasicServiceCode',
        'EMLPP-Info',
        'EMLPP-Priority',
        'priorityLevelA',
        'priorityLevelB',
        'priorityLevel0',
        'priorityLevel1',
        'priorityLevel2',
        'priorityLevel3',
        'priorityLevel4',
        'MC-SS-Info',
        'MaxMC-Bearers',
        'MC-Bearers',
        'maxNumOfMC-Bearers',
        'Ext-SS-Status',
        'AgeOfLocationInformation',
        ]
    _type_ = [
        'TBCD-STRING',
        'DiameterIdentity',
        'AddressString',
        'ISDN-AddressString',
        'FTN-AddressString',
        'ISDN-SubaddressString',
        'ExternalSignalInfo',
        'SignalInfo',
        'ProtocolId',
        'Ext-ExternalSignalInfo',
        'Ext-ProtocolId',
        'AccessNetworkSignalInfo',
        'LongSignalInfo',
        'AccessNetworkProtocolId',
        'AlertingPattern',
        'GSN-Address',
        'Time',
        'IMSI',
        'Identity',
        'IMSI-WithLMSI',
        'ASCI-CallReference',
        'TMSI',
        'SubscriberId',
        'IMEI',
        'HLR-Id',
        'HLR-List',
        'LMSI',
        'GlobalCellId',
        'NetworkResource',
        'AdditionalNetworkResource',
        'NAEA-PreferredCI',
        'NAEA-CIC',
        'SubscriberIdentity',
        'LCSClientExternalID',
        'LCSClientInternalID',
        'LCSServiceTypeID',
        'PLMN-Id',
        'E-UTRAN-CGI',
        'NR-CGI',
        'TA-Id',
        'NR-TA-Id',
        'RAIdentity',
        'NetworkNodeDiameterAddress',
        'CellGlobalIdOrServiceAreaIdOrLAI',
        'CellGlobalIdOrServiceAreaIdFixedLength',
        'LAIFixedLength',
        'BasicServiceCode',
        'Ext-BasicServiceCode',
        'EMLPP-Info',
        'EMLPP-Priority',
        'MC-SS-Info',
        'MaxMC-Bearers',
        'MC-Bearers',
        'Ext-SS-Status',
        'AgeOfLocationInformation',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxAddressLength',
        'maxISDN-AddressLength',
        'maxFTN-AddressLength',
        'maxISDN-SubaddressLength',
        'maxSignalInfoLength',
        'maxLongSignalInfoLength',
        'alertingLevel-0',
        'alertingLevel-1',
        'alertingLevel-2',
        'alertingCategory-1',
        'alertingCategory-2',
        'alertingCategory-3',
        'alertingCategory-4',
        'alertingCategory-5',
        'maxNumOfHLR-Id',
        'emergencyServices',
        'emergencyAlertServices',
        'personTracking',
        'fleetManagement',
        'assetManagement',
        'trafficCongestionReporting',
        'roadsideAssistance',
        'routingToNearestCommercialEnterprise',
        'navigation',
        'citySightseeing',
        'localizedAdvertising',
        'mobileYellowPages',
        'trafficAndPublicTransportationInfo',
        'weather',
        'assetAndServiceFinding',
        'gaming',
        'findYourFriend',
        'dating',
        'chatting',
        'routeFinding',
        'whereAmI',
        'serv64',
        'serv65',
        'serv66',
        'serv67',
        'serv68',
        'serv69',
        'serv70',
        'serv71',
        'serv72',
        'serv73',
        'serv74',
        'serv75',
        'serv76',
        'serv77',
        'serv78',
        'serv79',
        'serv80',
        'serv81',
        'serv82',
        'serv83',
        'serv84',
        'serv85',
        'serv86',
        'serv87',
        'serv88',
        'serv89',
        'serv90',
        'serv91',
        'serv92',
        'serv93',
        'serv94',
        'serv95',
        'serv96',
        'serv97',
        'serv98',
        'serv99',
        'serv100',
        'serv101',
        'serv102',
        'serv103',
        'serv104',
        'serv105',
        'serv106',
        'serv107',
        'serv108',
        'serv109',
        'serv110',
        'serv111',
        'serv112',
        'serv113',
        'serv114',
        'serv115',
        'serv116',
        'serv117',
        'serv118',
        'serv119',
        'serv120',
        'serv121',
        'serv122',
        'serv123',
        'serv124',
        'serv125',
        'serv126',
        'serv127',
        'priorityLevelA',
        'priorityLevelB',
        'priorityLevel0',
        'priorityLevel1',
        'priorityLevel2',
        'priorityLevel3',
        'priorityLevel4',
        'maxNumOfMC-Bearers',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< TBCD-STRING >-----#
    TBCD_STRING = OCT_STR(name='TBCD-STRING', mode=MODE_TYPE)
    
    #-----< DiameterIdentity >-----#
    DiameterIdentity = OCT_STR(name='DiameterIdentity', mode=MODE_TYPE)
    DiameterIdentity._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=9, ub=255)], ev=None, er=[])
    
    #-----< AddressString >-----#
    AddressString = OCT_STR(name='AddressString', mode=MODE_TYPE)
    AddressString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< maxAddressLength >-----#
    maxAddressLength = INT(name='maxAddressLength', mode=MODE_VALUE)
    maxAddressLength._val = 20
    
    #-----< ISDN-AddressString >-----#
    ISDN_AddressString = OCT_STR(name='ISDN-AddressString', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')))
    ISDN_AddressString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    
    #-----< maxISDN-AddressLength >-----#
    maxISDN_AddressLength = INT(name='maxISDN-AddressLength', mode=MODE_VALUE)
    maxISDN_AddressLength._val = 9
    
    #-----< FTN-AddressString >-----#
    FTN_AddressString = OCT_STR(name='FTN-AddressString', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')))
    FTN_AddressString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    
    #-----< maxFTN-AddressLength >-----#
    maxFTN_AddressLength = INT(name='maxFTN-AddressLength', mode=MODE_VALUE)
    maxFTN_AddressLength._val = 15
    
    #-----< ISDN-SubaddressString >-----#
    ISDN_SubaddressString = OCT_STR(name='ISDN-SubaddressString', mode=MODE_TYPE)
    ISDN_SubaddressString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=21)], ev=None, er=[])
    
    #-----< maxISDN-SubaddressLength >-----#
    maxISDN_SubaddressLength = INT(name='maxISDN-SubaddressLength', mode=MODE_VALUE)
    maxISDN_SubaddressLength._val = 21
    
    #-----< ExternalSignalInfo >-----#
    ExternalSignalInfo = SEQ(name='ExternalSignalInfo', mode=MODE_TYPE)
    _ExternalSignalInfo_protocolId = ENUM(name='protocolId', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ProtocolId')))
    _ExternalSignalInfo_signalInfo = OCT_STR(name='signalInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')))
    _ExternalSignalInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ExternalSignalInfo._cont = ASN1Dict([
        ('protocolId', _ExternalSignalInfo_protocolId),
        ('signalInfo', _ExternalSignalInfo_signalInfo),
        ('extensionContainer', _ExternalSignalInfo_extensionContainer),
        ])
    ExternalSignalInfo._ext = []
    
    #-----< SignalInfo >-----#
    SignalInfo = OCT_STR(name='SignalInfo', mode=MODE_TYPE)
    SignalInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=200)], ev=None, er=[])
    
    #-----< maxSignalInfoLength >-----#
    maxSignalInfoLength = INT(name='maxSignalInfoLength', mode=MODE_VALUE)
    maxSignalInfoLength._val = 200
    
    #-----< ProtocolId >-----#
    ProtocolId = ENUM(name='ProtocolId', mode=MODE_TYPE)
    ProtocolId._cont = ASN1Dict([('gsm-0408', 1), ('gsm-0806', 2), ('gsm-BSSMAP', 3), ('ets-300102-1', 4)])
    ProtocolId._ext = None
    
    #-----< Ext-ExternalSignalInfo >-----#
    Ext_ExternalSignalInfo = SEQ(name='Ext-ExternalSignalInfo', mode=MODE_TYPE)
    _Ext_ExternalSignalInfo_ext_ProtocolId = ENUM(name='ext-ProtocolId', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-ProtocolId')))
    _Ext_ExternalSignalInfo_signalInfo = OCT_STR(name='signalInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')))
    _Ext_ExternalSignalInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    Ext_ExternalSignalInfo._cont = ASN1Dict([
        ('ext-ProtocolId', _Ext_ExternalSignalInfo_ext_ProtocolId),
        ('signalInfo', _Ext_ExternalSignalInfo_signalInfo),
        ('extensionContainer', _Ext_ExternalSignalInfo_extensionContainer),
        ])
    Ext_ExternalSignalInfo._ext = []
    
    #-----< Ext-ProtocolId >-----#
    Ext_ProtocolId = ENUM(name='Ext-ProtocolId', mode=MODE_TYPE)
    Ext_ProtocolId._cont = ASN1Dict([('ets-300356', 1)])
    Ext_ProtocolId._ext = []
    
    #-----< AccessNetworkSignalInfo >-----#
    AccessNetworkSignalInfo = SEQ(name='AccessNetworkSignalInfo', mode=MODE_TYPE)
    _AccessNetworkSignalInfo_accessNetworkProtocolId = ENUM(name='accessNetworkProtocolId', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AccessNetworkProtocolId')))
    _AccessNetworkSignalInfo_signalInfo = OCT_STR(name='signalInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LongSignalInfo')))
    _AccessNetworkSignalInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    AccessNetworkSignalInfo._cont = ASN1Dict([
        ('accessNetworkProtocolId', _AccessNetworkSignalInfo_accessNetworkProtocolId),
        ('signalInfo', _AccessNetworkSignalInfo_signalInfo),
        ('extensionContainer', _AccessNetworkSignalInfo_extensionContainer),
        ])
    AccessNetworkSignalInfo._ext = []
    
    #-----< LongSignalInfo >-----#
    LongSignalInfo = OCT_STR(name='LongSignalInfo', mode=MODE_TYPE)
    LongSignalInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2560)], ev=None, er=[])
    
    #-----< maxLongSignalInfoLength >-----#
    maxLongSignalInfoLength = INT(name='maxLongSignalInfoLength', mode=MODE_VALUE)
    maxLongSignalInfoLength._val = 2560
    
    #-----< AccessNetworkProtocolId >-----#
    AccessNetworkProtocolId = ENUM(name='AccessNetworkProtocolId', mode=MODE_TYPE)
    AccessNetworkProtocolId._cont = ASN1Dict([('ts3G-48006', 1), ('ts3G-25413', 2)])
    AccessNetworkProtocolId._ext = []
    
    #-----< AlertingPattern >-----#
    AlertingPattern = OCT_STR(name='AlertingPattern', mode=MODE_TYPE)
    AlertingPattern._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< alertingLevel-0 >-----#
    alertingLevel_0 = OCT_STR(name='alertingLevel-0', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')))
    alertingLevel_0._val = b'\x00'
    
    #-----< alertingLevel-1 >-----#
    alertingLevel_1 = OCT_STR(name='alertingLevel-1', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')))
    alertingLevel_1._val = b'\x01'
    
    #-----< alertingLevel-2 >-----#
    alertingLevel_2 = OCT_STR(name='alertingLevel-2', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')))
    alertingLevel_2._val = b'\x02'
    
    #-----< alertingCategory-1 >-----#
    alertingCategory_1 = OCT_STR(name='alertingCategory-1', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')))
    alertingCategory_1._val = b'\x04'
    
    #-----< alertingCategory-2 >-----#
    alertingCategory_2 = OCT_STR(name='alertingCategory-2', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')))
    alertingCategory_2._val = b'\x05'
    
    #-----< alertingCategory-3 >-----#
    alertingCategory_3 = OCT_STR(name='alertingCategory-3', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')))
    alertingCategory_3._val = b'\x06'
    
    #-----< alertingCategory-4 >-----#
    alertingCategory_4 = OCT_STR(name='alertingCategory-4', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')))
    alertingCategory_4._val = b'\x07'
    
    #-----< alertingCategory-5 >-----#
    alertingCategory_5 = OCT_STR(name='alertingCategory-5', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')))
    alertingCategory_5._val = b'\x08'
    
    #-----< GSN-Address >-----#
    GSN_Address = OCT_STR(name='GSN-Address', mode=MODE_TYPE)
    GSN_Address._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=17)], ev=None, er=[])
    
    #-----< Time >-----#
    Time = OCT_STR(name='Time', mode=MODE_TYPE)
    Time._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< IMSI >-----#
    IMSI = OCT_STR(name='IMSI', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'TBCD-STRING')))
    IMSI._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    
    #-----< Identity >-----#
    Identity = CHOICE(name='Identity', mode=MODE_TYPE)
    _Identity_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _Identity_imsi_WithLMSI = SEQ(name='imsi-WithLMSI', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI-WithLMSI')))
    Identity._cont = ASN1Dict([
        ('imsi', _Identity_imsi),
        ('imsi-WithLMSI', _Identity_imsi_WithLMSI),
        ])
    Identity._ext = None
    
    #-----< IMSI-WithLMSI >-----#
    IMSI_WithLMSI = SEQ(name='IMSI-WithLMSI', mode=MODE_TYPE)
    _IMSI_WithLMSI_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _IMSI_WithLMSI_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')))
    IMSI_WithLMSI._cont = ASN1Dict([
        ('imsi', _IMSI_WithLMSI_imsi),
        ('lmsi', _IMSI_WithLMSI_lmsi),
        ])
    IMSI_WithLMSI._ext = []
    
    #-----< ASCI-CallReference >-----#
    ASCI_CallReference = OCT_STR(name='ASCI-CallReference', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'TBCD-STRING')))
    ASCI_CallReference._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< TMSI >-----#
    TMSI = OCT_STR(name='TMSI', mode=MODE_TYPE)
    TMSI._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    
    #-----< SubscriberId >-----#
    SubscriberId = CHOICE(name='SubscriberId', mode=MODE_TYPE)
    _SubscriberId_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _SubscriberId_tmsi = OCT_STR(name='tmsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'TMSI')))
    SubscriberId._cont = ASN1Dict([
        ('imsi', _SubscriberId_imsi),
        ('tmsi', _SubscriberId_tmsi),
        ])
    SubscriberId._ext = None
    
    #-----< IMEI >-----#
    IMEI = OCT_STR(name='IMEI', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'TBCD-STRING')))
    IMEI._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< HLR-Id >-----#
    HLR_Id = OCT_STR(name='HLR-Id', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    
    #-----< HLR-List >-----#
    HLR_List = SEQ_OF(name='HLR-List', mode=MODE_TYPE)
    _HLR_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'HLR-Id')))
    HLR_List._cont = _HLR_List__item_
    HLR_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< maxNumOfHLR-Id >-----#
    maxNumOfHLR_Id = INT(name='maxNumOfHLR-Id', mode=MODE_VALUE)
    maxNumOfHLR_Id._val = 50
    
    #-----< LMSI >-----#
    LMSI = OCT_STR(name='LMSI', mode=MODE_TYPE)
    LMSI._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< GlobalCellId >-----#
    GlobalCellId = OCT_STR(name='GlobalCellId', mode=MODE_TYPE)
    GlobalCellId._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=7)], ev=None, er=[])
    
    #-----< NetworkResource >-----#
    NetworkResource = ENUM(name='NetworkResource', mode=MODE_TYPE)
    NetworkResource._cont = ASN1Dict([('plmn', 0), ('hlr', 1), ('vlr', 2), ('pvlr', 3), ('controllingMSC', 4), ('vmsc', 5), ('eir', 6), ('rss', 7)])
    NetworkResource._ext = None
    
    #-----< AdditionalNetworkResource >-----#
    AdditionalNetworkResource = ENUM(name='AdditionalNetworkResource', mode=MODE_TYPE)
    AdditionalNetworkResource._cont = ASN1Dict([('sgsn', 0), ('ggsn', 1), ('gmlc', 2), ('gsmSCF', 3), ('nplr', 4), ('auc', 5), ('ue', 6), ('mme', 7)])
    AdditionalNetworkResource._ext = ['ue', 'mme']
    
    #-----< NAEA-PreferredCI >-----#
    NAEA_PreferredCI = SEQ(name='NAEA-PreferredCI', mode=MODE_TYPE)
    _NAEA_PreferredCI_naea_PreferredCIC = OCT_STR(name='naea-PreferredCIC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NAEA-CIC')))
    _NAEA_PreferredCI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    NAEA_PreferredCI._cont = ASN1Dict([
        ('naea-PreferredCIC', _NAEA_PreferredCI_naea_PreferredCIC),
        ('extensionContainer', _NAEA_PreferredCI_extensionContainer),
        ])
    NAEA_PreferredCI._ext = []
    
    #-----< NAEA-CIC >-----#
    NAEA_CIC = OCT_STR(name='NAEA-CIC', mode=MODE_TYPE)
    NAEA_CIC._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< SubscriberIdentity >-----#
    SubscriberIdentity = CHOICE(name='SubscriberIdentity', mode=MODE_TYPE)
    _SubscriberIdentity_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _SubscriberIdentity_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    SubscriberIdentity._cont = ASN1Dict([
        ('imsi', _SubscriberIdentity_imsi),
        ('msisdn', _SubscriberIdentity_msisdn),
        ])
    SubscriberIdentity._ext = None
    
    #-----< LCSClientExternalID >-----#
    LCSClientExternalID = SEQ(name='LCSClientExternalID', mode=MODE_TYPE)
    _LCSClientExternalID_externalAddress = OCT_STR(name='externalAddress', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _LCSClientExternalID_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    LCSClientExternalID._cont = ASN1Dict([
        ('externalAddress', _LCSClientExternalID_externalAddress),
        ('extensionContainer', _LCSClientExternalID_extensionContainer),
        ])
    LCSClientExternalID._ext = []
    
    #-----< LCSClientInternalID >-----#
    LCSClientInternalID = ENUM(name='LCSClientInternalID', mode=MODE_TYPE)
    LCSClientInternalID._cont = ASN1Dict([('broadcastService', 0), ('o-andM-HPLMN', 1), ('o-andM-VPLMN', 2), ('anonymousLocation', 3), ('targetMSsubscribedService', 4)])
    LCSClientInternalID._ext = []
    
    #-----< LCSServiceTypeID >-----#
    LCSServiceTypeID = INT(name='LCSServiceTypeID', mode=MODE_TYPE)
    LCSServiceTypeID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< emergencyServices >-----#
    emergencyServices = INT(name='emergencyServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    emergencyServices._val = 0
    
    #-----< emergencyAlertServices >-----#
    emergencyAlertServices = INT(name='emergencyAlertServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    emergencyAlertServices._val = 1
    
    #-----< personTracking >-----#
    personTracking = INT(name='personTracking', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    personTracking._val = 2
    
    #-----< fleetManagement >-----#
    fleetManagement = INT(name='fleetManagement', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    fleetManagement._val = 3
    
    #-----< assetManagement >-----#
    assetManagement = INT(name='assetManagement', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    assetManagement._val = 4
    
    #-----< trafficCongestionReporting >-----#
    trafficCongestionReporting = INT(name='trafficCongestionReporting', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    trafficCongestionReporting._val = 5
    
    #-----< roadsideAssistance >-----#
    roadsideAssistance = INT(name='roadsideAssistance', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    roadsideAssistance._val = 6
    
    #-----< routingToNearestCommercialEnterprise >-----#
    routingToNearestCommercialEnterprise = INT(name='routingToNearestCommercialEnterprise', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    routingToNearestCommercialEnterprise._val = 7
    
    #-----< navigation >-----#
    navigation = INT(name='navigation', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    navigation._val = 8
    
    #-----< citySightseeing >-----#
    citySightseeing = INT(name='citySightseeing', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    citySightseeing._val = 9
    
    #-----< localizedAdvertising >-----#
    localizedAdvertising = INT(name='localizedAdvertising', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    localizedAdvertising._val = 10
    
    #-----< mobileYellowPages >-----#
    mobileYellowPages = INT(name='mobileYellowPages', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    mobileYellowPages._val = 11
    
    #-----< trafficAndPublicTransportationInfo >-----#
    trafficAndPublicTransportationInfo = INT(name='trafficAndPublicTransportationInfo', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    trafficAndPublicTransportationInfo._val = 12
    
    #-----< weather >-----#
    weather = INT(name='weather', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    weather._val = 13
    
    #-----< assetAndServiceFinding >-----#
    assetAndServiceFinding = INT(name='assetAndServiceFinding', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    assetAndServiceFinding._val = 14
    
    #-----< gaming >-----#
    gaming = INT(name='gaming', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    gaming._val = 15
    
    #-----< findYourFriend >-----#
    findYourFriend = INT(name='findYourFriend', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    findYourFriend._val = 16
    
    #-----< dating >-----#
    dating = INT(name='dating', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    dating._val = 17
    
    #-----< chatting >-----#
    chatting = INT(name='chatting', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    chatting._val = 18
    
    #-----< routeFinding >-----#
    routeFinding = INT(name='routeFinding', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    routeFinding._val = 19
    
    #-----< whereAmI >-----#
    whereAmI = INT(name='whereAmI', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    whereAmI._val = 20
    
    #-----< serv64 >-----#
    serv64 = INT(name='serv64', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv64._val = 64
    
    #-----< serv65 >-----#
    serv65 = INT(name='serv65', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv65._val = 65
    
    #-----< serv66 >-----#
    serv66 = INT(name='serv66', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv66._val = 66
    
    #-----< serv67 >-----#
    serv67 = INT(name='serv67', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv67._val = 67
    
    #-----< serv68 >-----#
    serv68 = INT(name='serv68', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv68._val = 68
    
    #-----< serv69 >-----#
    serv69 = INT(name='serv69', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv69._val = 69
    
    #-----< serv70 >-----#
    serv70 = INT(name='serv70', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv70._val = 70
    
    #-----< serv71 >-----#
    serv71 = INT(name='serv71', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv71._val = 71
    
    #-----< serv72 >-----#
    serv72 = INT(name='serv72', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv72._val = 72
    
    #-----< serv73 >-----#
    serv73 = INT(name='serv73', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv73._val = 73
    
    #-----< serv74 >-----#
    serv74 = INT(name='serv74', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv74._val = 74
    
    #-----< serv75 >-----#
    serv75 = INT(name='serv75', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv75._val = 75
    
    #-----< serv76 >-----#
    serv76 = INT(name='serv76', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv76._val = 76
    
    #-----< serv77 >-----#
    serv77 = INT(name='serv77', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv77._val = 77
    
    #-----< serv78 >-----#
    serv78 = INT(name='serv78', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv78._val = 78
    
    #-----< serv79 >-----#
    serv79 = INT(name='serv79', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv79._val = 79
    
    #-----< serv80 >-----#
    serv80 = INT(name='serv80', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv80._val = 80
    
    #-----< serv81 >-----#
    serv81 = INT(name='serv81', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv81._val = 81
    
    #-----< serv82 >-----#
    serv82 = INT(name='serv82', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv82._val = 82
    
    #-----< serv83 >-----#
    serv83 = INT(name='serv83', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv83._val = 83
    
    #-----< serv84 >-----#
    serv84 = INT(name='serv84', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv84._val = 84
    
    #-----< serv85 >-----#
    serv85 = INT(name='serv85', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv85._val = 85
    
    #-----< serv86 >-----#
    serv86 = INT(name='serv86', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv86._val = 86
    
    #-----< serv87 >-----#
    serv87 = INT(name='serv87', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv87._val = 87
    
    #-----< serv88 >-----#
    serv88 = INT(name='serv88', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv88._val = 88
    
    #-----< serv89 >-----#
    serv89 = INT(name='serv89', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv89._val = 89
    
    #-----< serv90 >-----#
    serv90 = INT(name='serv90', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv90._val = 90
    
    #-----< serv91 >-----#
    serv91 = INT(name='serv91', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv91._val = 91
    
    #-----< serv92 >-----#
    serv92 = INT(name='serv92', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv92._val = 92
    
    #-----< serv93 >-----#
    serv93 = INT(name='serv93', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv93._val = 93
    
    #-----< serv94 >-----#
    serv94 = INT(name='serv94', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv94._val = 94
    
    #-----< serv95 >-----#
    serv95 = INT(name='serv95', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv95._val = 95
    
    #-----< serv96 >-----#
    serv96 = INT(name='serv96', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv96._val = 96
    
    #-----< serv97 >-----#
    serv97 = INT(name='serv97', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv97._val = 97
    
    #-----< serv98 >-----#
    serv98 = INT(name='serv98', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv98._val = 98
    
    #-----< serv99 >-----#
    serv99 = INT(name='serv99', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv99._val = 99
    
    #-----< serv100 >-----#
    serv100 = INT(name='serv100', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv100._val = 100
    
    #-----< serv101 >-----#
    serv101 = INT(name='serv101', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv101._val = 101
    
    #-----< serv102 >-----#
    serv102 = INT(name='serv102', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv102._val = 102
    
    #-----< serv103 >-----#
    serv103 = INT(name='serv103', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv103._val = 103
    
    #-----< serv104 >-----#
    serv104 = INT(name='serv104', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv104._val = 104
    
    #-----< serv105 >-----#
    serv105 = INT(name='serv105', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv105._val = 105
    
    #-----< serv106 >-----#
    serv106 = INT(name='serv106', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv106._val = 106
    
    #-----< serv107 >-----#
    serv107 = INT(name='serv107', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv107._val = 107
    
    #-----< serv108 >-----#
    serv108 = INT(name='serv108', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv108._val = 108
    
    #-----< serv109 >-----#
    serv109 = INT(name='serv109', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv109._val = 109
    
    #-----< serv110 >-----#
    serv110 = INT(name='serv110', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv110._val = 110
    
    #-----< serv111 >-----#
    serv111 = INT(name='serv111', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv111._val = 111
    
    #-----< serv112 >-----#
    serv112 = INT(name='serv112', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv112._val = 112
    
    #-----< serv113 >-----#
    serv113 = INT(name='serv113', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv113._val = 113
    
    #-----< serv114 >-----#
    serv114 = INT(name='serv114', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv114._val = 114
    
    #-----< serv115 >-----#
    serv115 = INT(name='serv115', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv115._val = 115
    
    #-----< serv116 >-----#
    serv116 = INT(name='serv116', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv116._val = 116
    
    #-----< serv117 >-----#
    serv117 = INT(name='serv117', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv117._val = 117
    
    #-----< serv118 >-----#
    serv118 = INT(name='serv118', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv118._val = 118
    
    #-----< serv119 >-----#
    serv119 = INT(name='serv119', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv119._val = 119
    
    #-----< serv120 >-----#
    serv120 = INT(name='serv120', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv120._val = 120
    
    #-----< serv121 >-----#
    serv121 = INT(name='serv121', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv121._val = 121
    
    #-----< serv122 >-----#
    serv122 = INT(name='serv122', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv122._val = 122
    
    #-----< serv123 >-----#
    serv123 = INT(name='serv123', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv123._val = 123
    
    #-----< serv124 >-----#
    serv124 = INT(name='serv124', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv124._val = 124
    
    #-----< serv125 >-----#
    serv125 = INT(name='serv125', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv125._val = 125
    
    #-----< serv126 >-----#
    serv126 = INT(name='serv126', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv126._val = 126
    
    #-----< serv127 >-----#
    serv127 = INT(name='serv127', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv127._val = 127
    
    #-----< PLMN-Id >-----#
    PLMN_Id = OCT_STR(name='PLMN-Id', mode=MODE_TYPE)
    PLMN_Id._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< E-UTRAN-CGI >-----#
    E_UTRAN_CGI = OCT_STR(name='E-UTRAN-CGI', mode=MODE_TYPE)
    E_UTRAN_CGI._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    
    #-----< NR-CGI >-----#
    NR_CGI = OCT_STR(name='NR-CGI', mode=MODE_TYPE)
    NR_CGI._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< TA-Id >-----#
    TA_Id = OCT_STR(name='TA-Id', mode=MODE_TYPE)
    TA_Id._const_sz = ASN1Set(rv=[5], rr=[], ev=None, er=[])
    
    #-----< NR-TA-Id >-----#
    NR_TA_Id = OCT_STR(name='NR-TA-Id', mode=MODE_TYPE)
    NR_TA_Id._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    
    #-----< RAIdentity >-----#
    RAIdentity = OCT_STR(name='RAIdentity', mode=MODE_TYPE)
    RAIdentity._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    
    #-----< NetworkNodeDiameterAddress >-----#
    NetworkNodeDiameterAddress = SEQ(name='NetworkNodeDiameterAddress', mode=MODE_TYPE)
    _NetworkNodeDiameterAddress_diameter_Name = OCT_STR(name='diameter-Name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')))
    _NetworkNodeDiameterAddress_diameter_Realm = OCT_STR(name='diameter-Realm', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')))
    NetworkNodeDiameterAddress._cont = ASN1Dict([
        ('diameter-Name', _NetworkNodeDiameterAddress_diameter_Name),
        ('diameter-Realm', _NetworkNodeDiameterAddress_diameter_Realm),
        ])
    NetworkNodeDiameterAddress._ext = None
    
    #-----< CellGlobalIdOrServiceAreaIdOrLAI >-----#
    CellGlobalIdOrServiceAreaIdOrLAI = CHOICE(name='CellGlobalIdOrServiceAreaIdOrLAI', mode=MODE_TYPE)
    _CellGlobalIdOrServiceAreaIdOrLAI_cellGlobalIdOrServiceAreaIdFixedLength = OCT_STR(name='cellGlobalIdOrServiceAreaIdFixedLength', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'CellGlobalIdOrServiceAreaIdFixedLength')))
    _CellGlobalIdOrServiceAreaIdOrLAI_laiFixedLength = OCT_STR(name='laiFixedLength', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LAIFixedLength')))
    CellGlobalIdOrServiceAreaIdOrLAI._cont = ASN1Dict([
        ('cellGlobalIdOrServiceAreaIdFixedLength', _CellGlobalIdOrServiceAreaIdOrLAI_cellGlobalIdOrServiceAreaIdFixedLength),
        ('laiFixedLength', _CellGlobalIdOrServiceAreaIdOrLAI_laiFixedLength),
        ])
    CellGlobalIdOrServiceAreaIdOrLAI._ext = None
    
    #-----< CellGlobalIdOrServiceAreaIdFixedLength >-----#
    CellGlobalIdOrServiceAreaIdFixedLength = OCT_STR(name='CellGlobalIdOrServiceAreaIdFixedLength', mode=MODE_TYPE)
    CellGlobalIdOrServiceAreaIdFixedLength._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    
    #-----< LAIFixedLength >-----#
    LAIFixedLength = OCT_STR(name='LAIFixedLength', mode=MODE_TYPE)
    LAIFixedLength._const_sz = ASN1Set(rv=[5], rr=[], ev=None, er=[])
    
    #-----< BasicServiceCode >-----#
    BasicServiceCode = CHOICE(name='BasicServiceCode', mode=MODE_TYPE)
    _BasicServiceCode_bearerService = OCT_STR(name='bearerService', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    _BasicServiceCode_teleservice = OCT_STR(name='teleservice', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    BasicServiceCode._cont = ASN1Dict([
        ('bearerService', _BasicServiceCode_bearerService),
        ('teleservice', _BasicServiceCode_teleservice),
        ])
    BasicServiceCode._ext = None
    
    #-----< Ext-BasicServiceCode >-----#
    Ext_BasicServiceCode = CHOICE(name='Ext-BasicServiceCode', mode=MODE_TYPE)
    _Ext_BasicServiceCode_ext_BearerService = OCT_STR(name='ext-BearerService', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-BS-Code', 'Ext-BearerServiceCode')))
    _Ext_BasicServiceCode_ext_Teleservice = OCT_STR(name='ext-Teleservice', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-TS-Code', 'Ext-TeleserviceCode')))
    Ext_BasicServiceCode._cont = ASN1Dict([
        ('ext-BearerService', _Ext_BasicServiceCode_ext_BearerService),
        ('ext-Teleservice', _Ext_BasicServiceCode_ext_Teleservice),
        ])
    Ext_BasicServiceCode._ext = None
    
    #-----< EMLPP-Info >-----#
    EMLPP_Info = SEQ(name='EMLPP-Info', mode=MODE_TYPE)
    _EMLPP_Info_maximumentitledPriority = INT(name='maximumentitledPriority', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')))
    _EMLPP_Info_defaultPriority = INT(name='defaultPriority', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')))
    _EMLPP_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    EMLPP_Info._cont = ASN1Dict([
        ('maximumentitledPriority', _EMLPP_Info_maximumentitledPriority),
        ('defaultPriority', _EMLPP_Info_defaultPriority),
        ('extensionContainer', _EMLPP_Info_extensionContainer),
        ])
    EMLPP_Info._ext = []
    
    #-----< EMLPP-Priority >-----#
    EMLPP_Priority = INT(name='EMLPP-Priority', mode=MODE_TYPE)
    EMLPP_Priority._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    
    #-----< priorityLevelA >-----#
    priorityLevelA = INT(name='priorityLevelA', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')))
    priorityLevelA._val = 6
    
    #-----< priorityLevelB >-----#
    priorityLevelB = INT(name='priorityLevelB', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')))
    priorityLevelB._val = 5
    
    #-----< priorityLevel0 >-----#
    priorityLevel0 = INT(name='priorityLevel0', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')))
    priorityLevel0._val = 0
    
    #-----< priorityLevel1 >-----#
    priorityLevel1 = INT(name='priorityLevel1', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')))
    priorityLevel1._val = 1
    
    #-----< priorityLevel2 >-----#
    priorityLevel2 = INT(name='priorityLevel2', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')))
    priorityLevel2._val = 2
    
    #-----< priorityLevel3 >-----#
    priorityLevel3 = INT(name='priorityLevel3', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')))
    priorityLevel3._val = 3
    
    #-----< priorityLevel4 >-----#
    priorityLevel4 = INT(name='priorityLevel4', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')))
    priorityLevel4._val = 4
    
    #-----< MC-SS-Info >-----#
    MC_SS_Info = SEQ(name='MC-SS-Info', mode=MODE_TYPE)
    _MC_SS_Info_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _MC_SS_Info_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _MC_SS_Info_nbrSB = INT(name='nbrSB', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'MaxMC-Bearers')))
    _MC_SS_Info_nbrUser = INT(name='nbrUser', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'MC-Bearers')))
    _MC_SS_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MC_SS_Info._cont = ASN1Dict([
        ('ss-Code', _MC_SS_Info_ss_Code),
        ('ss-Status', _MC_SS_Info_ss_Status),
        ('nbrSB', _MC_SS_Info_nbrSB),
        ('nbrUser', _MC_SS_Info_nbrUser),
        ('extensionContainer', _MC_SS_Info_extensionContainer),
        ])
    MC_SS_Info._ext = []
    
    #-----< MaxMC-Bearers >-----#
    MaxMC_Bearers = INT(name='MaxMC-Bearers', mode=MODE_TYPE)
    MaxMC_Bearers._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=7)], ev=None, er=[])
    
    #-----< MC-Bearers >-----#
    MC_Bearers = INT(name='MC-Bearers', mode=MODE_TYPE)
    MC_Bearers._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=7)], ev=None, er=[])
    
    #-----< maxNumOfMC-Bearers >-----#
    maxNumOfMC_Bearers = INT(name='maxNumOfMC-Bearers', mode=MODE_VALUE)
    maxNumOfMC_Bearers._val = 7
    
    #-----< Ext-SS-Status >-----#
    Ext_SS_Status = OCT_STR(name='Ext-SS-Status', mode=MODE_TYPE)
    Ext_SS_Status._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< AgeOfLocationInformation >-----#
    AgeOfLocationInformation = INT(name='AgeOfLocationInformation', mode=MODE_TYPE)
    AgeOfLocationInformation._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    
    _all_ = [
        TBCD_STRING,
        DiameterIdentity,
        AddressString,
        maxAddressLength,
        ISDN_AddressString,
        maxISDN_AddressLength,
        FTN_AddressString,
        maxFTN_AddressLength,
        ISDN_SubaddressString,
        maxISDN_SubaddressLength,
        _ExternalSignalInfo_protocolId,
        _ExternalSignalInfo_signalInfo,
        _ExternalSignalInfo_extensionContainer,
        ExternalSignalInfo,
        SignalInfo,
        maxSignalInfoLength,
        ProtocolId,
        _Ext_ExternalSignalInfo_ext_ProtocolId,
        _Ext_ExternalSignalInfo_signalInfo,
        _Ext_ExternalSignalInfo_extensionContainer,
        Ext_ExternalSignalInfo,
        Ext_ProtocolId,
        _AccessNetworkSignalInfo_accessNetworkProtocolId,
        _AccessNetworkSignalInfo_signalInfo,
        _AccessNetworkSignalInfo_extensionContainer,
        AccessNetworkSignalInfo,
        LongSignalInfo,
        maxLongSignalInfoLength,
        AccessNetworkProtocolId,
        AlertingPattern,
        alertingLevel_0,
        alertingLevel_1,
        alertingLevel_2,
        alertingCategory_1,
        alertingCategory_2,
        alertingCategory_3,
        alertingCategory_4,
        alertingCategory_5,
        GSN_Address,
        Time,
        IMSI,
        _Identity_imsi,
        _Identity_imsi_WithLMSI,
        Identity,
        _IMSI_WithLMSI_imsi,
        _IMSI_WithLMSI_lmsi,
        IMSI_WithLMSI,
        ASCI_CallReference,
        TMSI,
        _SubscriberId_imsi,
        _SubscriberId_tmsi,
        SubscriberId,
        IMEI,
        HLR_Id,
        _HLR_List__item_,
        HLR_List,
        maxNumOfHLR_Id,
        LMSI,
        GlobalCellId,
        NetworkResource,
        AdditionalNetworkResource,
        _NAEA_PreferredCI_naea_PreferredCIC,
        _NAEA_PreferredCI_extensionContainer,
        NAEA_PreferredCI,
        NAEA_CIC,
        _SubscriberIdentity_imsi,
        _SubscriberIdentity_msisdn,
        SubscriberIdentity,
        _LCSClientExternalID_externalAddress,
        _LCSClientExternalID_extensionContainer,
        LCSClientExternalID,
        LCSClientInternalID,
        LCSServiceTypeID,
        emergencyServices,
        emergencyAlertServices,
        personTracking,
        fleetManagement,
        assetManagement,
        trafficCongestionReporting,
        roadsideAssistance,
        routingToNearestCommercialEnterprise,
        navigation,
        citySightseeing,
        localizedAdvertising,
        mobileYellowPages,
        trafficAndPublicTransportationInfo,
        weather,
        assetAndServiceFinding,
        gaming,
        findYourFriend,
        dating,
        chatting,
        routeFinding,
        whereAmI,
        serv64,
        serv65,
        serv66,
        serv67,
        serv68,
        serv69,
        serv70,
        serv71,
        serv72,
        serv73,
        serv74,
        serv75,
        serv76,
        serv77,
        serv78,
        serv79,
        serv80,
        serv81,
        serv82,
        serv83,
        serv84,
        serv85,
        serv86,
        serv87,
        serv88,
        serv89,
        serv90,
        serv91,
        serv92,
        serv93,
        serv94,
        serv95,
        serv96,
        serv97,
        serv98,
        serv99,
        serv100,
        serv101,
        serv102,
        serv103,
        serv104,
        serv105,
        serv106,
        serv107,
        serv108,
        serv109,
        serv110,
        serv111,
        serv112,
        serv113,
        serv114,
        serv115,
        serv116,
        serv117,
        serv118,
        serv119,
        serv120,
        serv121,
        serv122,
        serv123,
        serv124,
        serv125,
        serv126,
        serv127,
        PLMN_Id,
        E_UTRAN_CGI,
        NR_CGI,
        TA_Id,
        NR_TA_Id,
        RAIdentity,
        _NetworkNodeDiameterAddress_diameter_Name,
        _NetworkNodeDiameterAddress_diameter_Realm,
        NetworkNodeDiameterAddress,
        _CellGlobalIdOrServiceAreaIdOrLAI_cellGlobalIdOrServiceAreaIdFixedLength,
        _CellGlobalIdOrServiceAreaIdOrLAI_laiFixedLength,
        CellGlobalIdOrServiceAreaIdOrLAI,
        CellGlobalIdOrServiceAreaIdFixedLength,
        LAIFixedLength,
        _BasicServiceCode_bearerService,
        _BasicServiceCode_teleservice,
        BasicServiceCode,
        _Ext_BasicServiceCode_ext_BearerService,
        _Ext_BasicServiceCode_ext_Teleservice,
        Ext_BasicServiceCode,
        _EMLPP_Info_maximumentitledPriority,
        _EMLPP_Info_defaultPriority,
        _EMLPP_Info_extensionContainer,
        EMLPP_Info,
        EMLPP_Priority,
        priorityLevelA,
        priorityLevelB,
        priorityLevel0,
        priorityLevel1,
        priorityLevel2,
        priorityLevel3,
        priorityLevel4,
        _MC_SS_Info_ss_Code,
        _MC_SS_Info_ss_Status,
        _MC_SS_Info_nbrSB,
        _MC_SS_Info_nbrUser,
        _MC_SS_Info_extensionContainer,
        MC_SS_Info,
        MaxMC_Bearers,
        MC_Bearers,
        maxNumOfMC_Bearers,
        Ext_SS_Status,
        AgeOfLocationInformation,
    ]

class MAP_DialogueInformation:

    _name_  = 'MAP-DialogueInformation'
    _oid_   = [0, 4, 0, 0, 1, 3, 3, 19]
    
    _obj_ = [
        'map-DialogueAS',
        'MAP-DialoguePDU',
        'MAP-OpenInfo',
        'MAP-AcceptInfo',
        'MAP-CloseInfo',
        'MAP-RefuseInfo',
        'Reason',
        'MAP-UserAbortInfo',
        'MAP-UserAbortChoice',
        'ResourceUnavailableReason',
        'ProcedureCancellationReason',
        'MAP-ProviderAbortInfo',
        'MAP-ProviderAbortReason',
        ]
    _type_ = [
        'MAP-DialoguePDU',
        'MAP-OpenInfo',
        'MAP-AcceptInfo',
        'MAP-CloseInfo',
        'MAP-RefuseInfo',
        'Reason',
        'MAP-UserAbortInfo',
        'MAP-UserAbortChoice',
        'ResourceUnavailableReason',
        'ProcedureCancellationReason',
        'MAP-ProviderAbortInfo',
        'MAP-ProviderAbortReason',
        ]
    _set_ = [
        ]
    _val_ = [
        'map-DialogueAS',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< map-DialogueAS >-----#
    map_DialogueAS = OID(name='map-DialogueAS', mode=MODE_VALUE)
    map_DialogueAS._val = (0, 4, 0, 0, 1, 1, 1, 1)
    
    #-----< MAP-DialoguePDU >-----#
    MAP_DialoguePDU = CHOICE(name='MAP-DialoguePDU', mode=MODE_TYPE)
    _MAP_DialoguePDU_map_open = SEQ(name='map-open', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-DialogueInformation', 'MAP-OpenInfo')))
    _MAP_DialoguePDU_map_accept = SEQ(name='map-accept', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-DialogueInformation', 'MAP-AcceptInfo')))
    _MAP_DialoguePDU_map_close = SEQ(name='map-close', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-DialogueInformation', 'MAP-CloseInfo')))
    _MAP_DialoguePDU_map_refuse = SEQ(name='map-refuse', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-DialogueInformation', 'MAP-RefuseInfo')))
    _MAP_DialoguePDU_map_userAbort = SEQ(name='map-userAbort', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-DialogueInformation', 'MAP-UserAbortInfo')))
    _MAP_DialoguePDU_map_providerAbort = SEQ(name='map-providerAbort', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-DialogueInformation', 'MAP-ProviderAbortInfo')))
    MAP_DialoguePDU._cont = ASN1Dict([
        ('map-open', _MAP_DialoguePDU_map_open),
        ('map-accept', _MAP_DialoguePDU_map_accept),
        ('map-close', _MAP_DialoguePDU_map_close),
        ('map-refuse', _MAP_DialoguePDU_map_refuse),
        ('map-userAbort', _MAP_DialoguePDU_map_userAbort),
        ('map-providerAbort', _MAP_DialoguePDU_map_providerAbort),
        ])
    MAP_DialoguePDU._ext = None
    
    #-----< MAP-OpenInfo >-----#
    MAP_OpenInfo = SEQ(name='MAP-OpenInfo', mode=MODE_TYPE)
    _MAP_OpenInfo_destinationReference = OCT_STR(name='destinationReference', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')), opt=True)
    _MAP_OpenInfo_originationReference = OCT_STR(name='originationReference', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')), opt=True)
    _MAP_OpenInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MAP_OpenInfo._cont = ASN1Dict([
        ('destinationReference', _MAP_OpenInfo_destinationReference),
        ('originationReference', _MAP_OpenInfo_originationReference),
        ('extensionContainer', _MAP_OpenInfo_extensionContainer),
        ])
    MAP_OpenInfo._ext = ['extensionContainer']
    
    #-----< MAP-AcceptInfo >-----#
    MAP_AcceptInfo = SEQ(name='MAP-AcceptInfo', mode=MODE_TYPE)
    _MAP_AcceptInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MAP_AcceptInfo._cont = ASN1Dict([
        ('extensionContainer', _MAP_AcceptInfo_extensionContainer),
        ])
    MAP_AcceptInfo._ext = ['extensionContainer']
    
    #-----< MAP-CloseInfo >-----#
    MAP_CloseInfo = SEQ(name='MAP-CloseInfo', mode=MODE_TYPE)
    _MAP_CloseInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MAP_CloseInfo._cont = ASN1Dict([
        ('extensionContainer', _MAP_CloseInfo_extensionContainer),
        ])
    MAP_CloseInfo._ext = ['extensionContainer']
    
    #-----< MAP-RefuseInfo >-----#
    MAP_RefuseInfo = SEQ(name='MAP-RefuseInfo', mode=MODE_TYPE)
    _MAP_RefuseInfo_reason = ENUM(name='reason', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-DialogueInformation', 'Reason')))
    _MAP_RefuseInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _MAP_RefuseInfo_alternativeApplicationContext = OID(name='alternativeApplicationContext', mode=MODE_TYPE, opt=True)
    MAP_RefuseInfo._cont = ASN1Dict([
        ('reason', _MAP_RefuseInfo_reason),
        ('extensionContainer', _MAP_RefuseInfo_extensionContainer),
        ('alternativeApplicationContext', _MAP_RefuseInfo_alternativeApplicationContext),
        ])
    MAP_RefuseInfo._ext = ['extensionContainer', 'alternativeApplicationContext']
    
    #-----< Reason >-----#
    Reason = ENUM(name='Reason', mode=MODE_TYPE)
    Reason._cont = ASN1Dict([('noReasonGiven', 0), ('invalidDestinationReference', 1), ('invalidOriginatingReference', 2)])
    Reason._ext = None
    
    #-----< MAP-UserAbortInfo >-----#
    MAP_UserAbortInfo = SEQ(name='MAP-UserAbortInfo', mode=MODE_TYPE)
    _MAP_UserAbortInfo_map_UserAbortChoice = CHOICE(name='map-UserAbortChoice', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-DialogueInformation', 'MAP-UserAbortChoice')))
    _MAP_UserAbortInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MAP_UserAbortInfo._cont = ASN1Dict([
        ('map-UserAbortChoice', _MAP_UserAbortInfo_map_UserAbortChoice),
        ('extensionContainer', _MAP_UserAbortInfo_extensionContainer),
        ])
    MAP_UserAbortInfo._ext = ['extensionContainer']
    
    #-----< MAP-UserAbortChoice >-----#
    MAP_UserAbortChoice = CHOICE(name='MAP-UserAbortChoice', mode=MODE_TYPE)
    _MAP_UserAbortChoice_userSpecificReason = NULL(name='userSpecificReason', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MAP_UserAbortChoice_userResourceLimitation = NULL(name='userResourceLimitation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MAP_UserAbortChoice_resourceUnavailable = ENUM(name='resourceUnavailable', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-DialogueInformation', 'ResourceUnavailableReason')))
    _MAP_UserAbortChoice_applicationProcedureCancellation = ENUM(name='applicationProcedureCancellation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-DialogueInformation', 'ProcedureCancellationReason')))
    MAP_UserAbortChoice._cont = ASN1Dict([
        ('userSpecificReason', _MAP_UserAbortChoice_userSpecificReason),
        ('userResourceLimitation', _MAP_UserAbortChoice_userResourceLimitation),
        ('resourceUnavailable', _MAP_UserAbortChoice_resourceUnavailable),
        ('applicationProcedureCancellation', _MAP_UserAbortChoice_applicationProcedureCancellation),
        ])
    MAP_UserAbortChoice._ext = None
    
    #-----< ResourceUnavailableReason >-----#
    ResourceUnavailableReason = ENUM(name='ResourceUnavailableReason', mode=MODE_TYPE)
    ResourceUnavailableReason._cont = ASN1Dict([('shortTermResourceLimitation', 0), ('longTermResourceLimitation', 1)])
    ResourceUnavailableReason._ext = None
    
    #-----< ProcedureCancellationReason >-----#
    ProcedureCancellationReason = ENUM(name='ProcedureCancellationReason', mode=MODE_TYPE)
    ProcedureCancellationReason._cont = ASN1Dict([('handoverCancellation', 0), ('radioChannelRelease', 1), ('networkPathRelease', 2), ('callRelease', 3), ('associatedProcedureFailure', 4), ('tandemDialogueRelease', 5), ('remoteOperationsFailure', 6)])
    ProcedureCancellationReason._ext = None
    
    #-----< MAP-ProviderAbortInfo >-----#
    MAP_ProviderAbortInfo = SEQ(name='MAP-ProviderAbortInfo', mode=MODE_TYPE)
    _MAP_ProviderAbortInfo_map_ProviderAbortReason = ENUM(name='map-ProviderAbortReason', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-DialogueInformation', 'MAP-ProviderAbortReason')))
    _MAP_ProviderAbortInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MAP_ProviderAbortInfo._cont = ASN1Dict([
        ('map-ProviderAbortReason', _MAP_ProviderAbortInfo_map_ProviderAbortReason),
        ('extensionContainer', _MAP_ProviderAbortInfo_extensionContainer),
        ])
    MAP_ProviderAbortInfo._ext = ['extensionContainer']
    
    #-----< MAP-ProviderAbortReason >-----#
    MAP_ProviderAbortReason = ENUM(name='MAP-ProviderAbortReason', mode=MODE_TYPE)
    MAP_ProviderAbortReason._cont = ASN1Dict([('abnormalDialogue', 0), ('invalidPDU', 1)])
    MAP_ProviderAbortReason._ext = None
    
    _all_ = [
        map_DialogueAS,
        _MAP_DialoguePDU_map_open,
        _MAP_DialoguePDU_map_accept,
        _MAP_DialoguePDU_map_close,
        _MAP_DialoguePDU_map_refuse,
        _MAP_DialoguePDU_map_userAbort,
        _MAP_DialoguePDU_map_providerAbort,
        MAP_DialoguePDU,
        _MAP_OpenInfo_destinationReference,
        _MAP_OpenInfo_originationReference,
        _MAP_OpenInfo_extensionContainer,
        MAP_OpenInfo,
        _MAP_AcceptInfo_extensionContainer,
        MAP_AcceptInfo,
        _MAP_CloseInfo_extensionContainer,
        MAP_CloseInfo,
        _MAP_RefuseInfo_reason,
        _MAP_RefuseInfo_extensionContainer,
        _MAP_RefuseInfo_alternativeApplicationContext,
        MAP_RefuseInfo,
        Reason,
        _MAP_UserAbortInfo_map_UserAbortChoice,
        _MAP_UserAbortInfo_extensionContainer,
        MAP_UserAbortInfo,
        _MAP_UserAbortChoice_userSpecificReason,
        _MAP_UserAbortChoice_userResourceLimitation,
        _MAP_UserAbortChoice_resourceUnavailable,
        _MAP_UserAbortChoice_applicationProcedureCancellation,
        MAP_UserAbortChoice,
        ResourceUnavailableReason,
        ProcedureCancellationReason,
        _MAP_ProviderAbortInfo_map_ProviderAbortReason,
        _MAP_ProviderAbortInfo_extensionContainer,
        MAP_ProviderAbortInfo,
        MAP_ProviderAbortReason,
    ]

class MAP_ER_DataTypes:

    _name_  = 'MAP-ER-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 17, 19]
    
    _obj_ = [
        'RoamingNotAllowedParam',
        'AdditionalRoamingNotAllowedCause',
        'RoamingNotAllowedCause',
        'CallBarredParam',
        'CallBarringCause',
        'ExtensibleCallBarredParam',
        'CUG-RejectParam',
        'CUG-RejectCause',
        'SS-IncompatibilityCause',
        'PW-RegistrationFailureCause',
        'SM-EnumeratedDeliveryFailureCause',
        'SM-DeliveryFailureCause',
        'AbsentSubscriberSM-Param',
        'AbsentSubscriberDiagnosticSM',
        'SystemFailureParam',
        'ExtensibleSystemFailureParam',
        'FailureCauseParam',
        'DataMissingParam',
        'UnexpectedDataParam',
        'FacilityNotSupParam',
        'OR-NotAllowedParam',
        'UnknownSubscriberParam',
        'UnknownSubscriberDiagnostic',
        'NumberChangedParam',
        'UnidentifiedSubParam',
        'IllegalSubscriberParam',
        'IllegalEquipmentParam',
        'BearerServNotProvParam',
        'TeleservNotProvParam',
        'TracingBufferFullParam',
        'NoRoamingNbParam',
        'AbsentSubscriberParam',
        'AbsentSubscriberReason',
        'BusySubscriberParam',
        'NoSubscriberReplyParam',
        'ForwardingViolationParam',
        'ForwardingFailedParam',
        'ATI-NotAllowedParam',
        'ATSI-NotAllowedParam',
        'ATM-NotAllowedParam',
        'IllegalSS-OperationParam',
        'SS-NotAvailableParam',
        'SS-SubscriptionViolationParam',
        'InformationNotAvailableParam',
        'SubBusyForMT-SMS-Param',
        'MessageWaitListFullParam',
        'ResourceLimitationParam',
        'NoGroupCallNbParam',
        'IncompatibleTerminalParam',
        'ShortTermDenialParam',
        'LongTermDenialParam',
        'UnauthorizedRequestingNetwork-Param',
        'UnauthorizedLCSClient-Param',
        'UnauthorizedLCSClient-Diagnostic',
        'PositionMethodFailure-Param',
        'PositionMethodFailure-Diagnostic',
        'UnknownOrUnreachableLCSClient-Param',
        'MM-EventNotSupported-Param',
        'TargetCellOutsideGCA-Param',
        'OngoingGroupCallParam',
        ]
    _type_ = [
        'RoamingNotAllowedParam',
        'AdditionalRoamingNotAllowedCause',
        'RoamingNotAllowedCause',
        'CallBarredParam',
        'CallBarringCause',
        'ExtensibleCallBarredParam',
        'CUG-RejectParam',
        'CUG-RejectCause',
        'SS-IncompatibilityCause',
        'PW-RegistrationFailureCause',
        'SM-EnumeratedDeliveryFailureCause',
        'SM-DeliveryFailureCause',
        'AbsentSubscriberSM-Param',
        'AbsentSubscriberDiagnosticSM',
        'SystemFailureParam',
        'ExtensibleSystemFailureParam',
        'FailureCauseParam',
        'DataMissingParam',
        'UnexpectedDataParam',
        'FacilityNotSupParam',
        'OR-NotAllowedParam',
        'UnknownSubscriberParam',
        'UnknownSubscriberDiagnostic',
        'NumberChangedParam',
        'UnidentifiedSubParam',
        'IllegalSubscriberParam',
        'IllegalEquipmentParam',
        'BearerServNotProvParam',
        'TeleservNotProvParam',
        'TracingBufferFullParam',
        'NoRoamingNbParam',
        'AbsentSubscriberParam',
        'AbsentSubscriberReason',
        'BusySubscriberParam',
        'NoSubscriberReplyParam',
        'ForwardingViolationParam',
        'ForwardingFailedParam',
        'ATI-NotAllowedParam',
        'ATSI-NotAllowedParam',
        'ATM-NotAllowedParam',
        'IllegalSS-OperationParam',
        'SS-NotAvailableParam',
        'SS-SubscriptionViolationParam',
        'InformationNotAvailableParam',
        'SubBusyForMT-SMS-Param',
        'MessageWaitListFullParam',
        'ResourceLimitationParam',
        'NoGroupCallNbParam',
        'IncompatibleTerminalParam',
        'ShortTermDenialParam',
        'LongTermDenialParam',
        'UnauthorizedRequestingNetwork-Param',
        'UnauthorizedLCSClient-Param',
        'UnauthorizedLCSClient-Diagnostic',
        'PositionMethodFailure-Param',
        'PositionMethodFailure-Diagnostic',
        'UnknownOrUnreachableLCSClient-Param',
        'MM-EventNotSupported-Param',
        'TargetCellOutsideGCA-Param',
        'OngoingGroupCallParam',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< RoamingNotAllowedParam >-----#
    RoamingNotAllowedParam = SEQ(name='RoamingNotAllowedParam', mode=MODE_TYPE)
    _RoamingNotAllowedParam_roamingNotAllowedCause = ENUM(name='roamingNotAllowedCause', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'RoamingNotAllowedCause')))
    _RoamingNotAllowedParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _RoamingNotAllowedParam_additionalRoamingNotAllowedCause = ENUM(name='additionalRoamingNotAllowedCause', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AdditionalRoamingNotAllowedCause')), opt=True)
    RoamingNotAllowedParam._cont = ASN1Dict([
        ('roamingNotAllowedCause', _RoamingNotAllowedParam_roamingNotAllowedCause),
        ('extensionContainer', _RoamingNotAllowedParam_extensionContainer),
        ('additionalRoamingNotAllowedCause', _RoamingNotAllowedParam_additionalRoamingNotAllowedCause),
        ])
    RoamingNotAllowedParam._ext = ['additionalRoamingNotAllowedCause']
    
    #-----< AdditionalRoamingNotAllowedCause >-----#
    AdditionalRoamingNotAllowedCause = ENUM(name='AdditionalRoamingNotAllowedCause', mode=MODE_TYPE)
    AdditionalRoamingNotAllowedCause._cont = ASN1Dict([('supportedRAT-TypesNotAllowed', 0)])
    AdditionalRoamingNotAllowedCause._ext = []
    
    #-----< RoamingNotAllowedCause >-----#
    RoamingNotAllowedCause = ENUM(name='RoamingNotAllowedCause', mode=MODE_TYPE)
    RoamingNotAllowedCause._cont = ASN1Dict([('plmnRoamingNotAllowed', 0), ('operatorDeterminedBarring', 3)])
    RoamingNotAllowedCause._ext = None
    
    #-----< CallBarredParam >-----#
    CallBarredParam = CHOICE(name='CallBarredParam', mode=MODE_TYPE)
    _CallBarredParam_callBarringCause = ENUM(name='callBarringCause', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarringCause')))
    _CallBarredParam_extensibleCallBarredParam = SEQ(name='extensibleCallBarredParam', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ExtensibleCallBarredParam')))
    CallBarredParam._cont = ASN1Dict([
        ('callBarringCause', _CallBarredParam_callBarringCause),
        ('extensibleCallBarredParam', _CallBarredParam_extensibleCallBarredParam),
        ])
    CallBarredParam._ext = None
    
    #-----< CallBarringCause >-----#
    CallBarringCause = ENUM(name='CallBarringCause', mode=MODE_TYPE)
    CallBarringCause._cont = ASN1Dict([('barringServiceActive', 0), ('operatorBarring', 1)])
    CallBarringCause._ext = None
    
    #-----< ExtensibleCallBarredParam >-----#
    ExtensibleCallBarredParam = SEQ(name='ExtensibleCallBarredParam', mode=MODE_TYPE)
    _ExtensibleCallBarredParam_callBarringCause = ENUM(name='callBarringCause', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarringCause')), opt=True)
    _ExtensibleCallBarredParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ExtensibleCallBarredParam_unauthorisedMessageOriginator = NULL(name='unauthorisedMessageOriginator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ExtensibleCallBarredParam_anonymousCallRejection = NULL(name='anonymousCallRejection', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ExtensibleCallBarredParam._cont = ASN1Dict([
        ('callBarringCause', _ExtensibleCallBarredParam_callBarringCause),
        ('extensionContainer', _ExtensibleCallBarredParam_extensionContainer),
        ('unauthorisedMessageOriginator', _ExtensibleCallBarredParam_unauthorisedMessageOriginator),
        ('anonymousCallRejection', _ExtensibleCallBarredParam_anonymousCallRejection),
        ])
    ExtensibleCallBarredParam._ext = ['unauthorisedMessageOriginator', 'anonymousCallRejection']
    
    #-----< CUG-RejectParam >-----#
    CUG_RejectParam = SEQ(name='CUG-RejectParam', mode=MODE_TYPE)
    _CUG_RejectParam_cug_RejectCause = ENUM(name='cug-RejectCause', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CUG-RejectCause')), opt=True)
    _CUG_RejectParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CUG_RejectParam._cont = ASN1Dict([
        ('cug-RejectCause', _CUG_RejectParam_cug_RejectCause),
        ('extensionContainer', _CUG_RejectParam_extensionContainer),
        ])
    CUG_RejectParam._ext = []
    
    #-----< CUG-RejectCause >-----#
    CUG_RejectCause = ENUM(name='CUG-RejectCause', mode=MODE_TYPE)
    CUG_RejectCause._cont = ASN1Dict([('incomingCallsBarredWithinCUG', 0), ('subscriberNotMemberOfCUG', 1), ('requestedBasicServiceViolatesCUG-Constraints', 5), ('calledPartySS-InteractionViolation', 7)])
    CUG_RejectCause._ext = None
    
    #-----< SS-IncompatibilityCause >-----#
    SS_IncompatibilityCause = SEQ(name='SS-IncompatibilityCause', mode=MODE_TYPE)
    _SS_IncompatibilityCause_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')), opt=True)
    _SS_IncompatibilityCause_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'BasicServiceCode')), opt=True)
    _SS_IncompatibilityCause_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')), opt=True)
    SS_IncompatibilityCause._cont = ASN1Dict([
        ('ss-Code', _SS_IncompatibilityCause_ss_Code),
        ('basicService', _SS_IncompatibilityCause_basicService),
        ('ss-Status', _SS_IncompatibilityCause_ss_Status),
        ])
    SS_IncompatibilityCause._ext = []
    
    #-----< PW-RegistrationFailureCause >-----#
    PW_RegistrationFailureCause = ENUM(name='PW-RegistrationFailureCause', mode=MODE_TYPE)
    PW_RegistrationFailureCause._cont = ASN1Dict([('undetermined', 0), ('invalidFormat', 1), ('newPasswordsMismatch', 2)])
    PW_RegistrationFailureCause._ext = None
    
    #-----< SM-EnumeratedDeliveryFailureCause >-----#
    SM_EnumeratedDeliveryFailureCause = ENUM(name='SM-EnumeratedDeliveryFailureCause', mode=MODE_TYPE)
    SM_EnumeratedDeliveryFailureCause._cont = ASN1Dict([('memoryCapacityExceeded', 0), ('equipmentProtocolError', 1), ('equipmentNotSM-Equipped', 2), ('unknownServiceCentre', 3), ('sc-Congestion', 4), ('invalidSME-Address', 5), ('subscriberNotSC-Subscriber', 6)])
    SM_EnumeratedDeliveryFailureCause._ext = None
    
    #-----< SM-DeliveryFailureCause >-----#
    SM_DeliveryFailureCause = SEQ(name='SM-DeliveryFailureCause', mode=MODE_TYPE)
    _SM_DeliveryFailureCause_sm_EnumeratedDeliveryFailureCause = ENUM(name='sm-EnumeratedDeliveryFailureCause', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SM-EnumeratedDeliveryFailureCause')))
    _SM_DeliveryFailureCause_diagnosticInfo = OCT_STR(name='diagnosticInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')), opt=True)
    _SM_DeliveryFailureCause_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SM_DeliveryFailureCause._cont = ASN1Dict([
        ('sm-EnumeratedDeliveryFailureCause', _SM_DeliveryFailureCause_sm_EnumeratedDeliveryFailureCause),
        ('diagnosticInfo', _SM_DeliveryFailureCause_diagnosticInfo),
        ('extensionContainer', _SM_DeliveryFailureCause_extensionContainer),
        ])
    SM_DeliveryFailureCause._ext = []
    
    #-----< AbsentSubscriberSM-Param >-----#
    AbsentSubscriberSM_Param = SEQ(name='AbsentSubscriberSM-Param', mode=MODE_TYPE)
    _AbsentSubscriberSM_Param_absentSubscriberDiagnosticSM = INT(name='absentSubscriberDiagnosticSM', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    _AbsentSubscriberSM_Param_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _AbsentSubscriberSM_Param_additionalAbsentSubscriberDiagnosticSM = INT(name='additionalAbsentSubscriberDiagnosticSM', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    _AbsentSubscriberSM_Param_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _AbsentSubscriberSM_Param_requestedRetransmissionTime = OCT_STR(name='requestedRetransmissionTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Time')), opt=True)
    _AbsentSubscriberSM_Param_userIdentifierAlert = OCT_STR(name='userIdentifierAlert', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    AbsentSubscriberSM_Param._cont = ASN1Dict([
        ('absentSubscriberDiagnosticSM', _AbsentSubscriberSM_Param_absentSubscriberDiagnosticSM),
        ('extensionContainer', _AbsentSubscriberSM_Param_extensionContainer),
        ('additionalAbsentSubscriberDiagnosticSM', _AbsentSubscriberSM_Param_additionalAbsentSubscriberDiagnosticSM),
        ('imsi', _AbsentSubscriberSM_Param_imsi),
        ('requestedRetransmissionTime', _AbsentSubscriberSM_Param_requestedRetransmissionTime),
        ('userIdentifierAlert', _AbsentSubscriberSM_Param_userIdentifierAlert),
        ])
    AbsentSubscriberSM_Param._ext = ['additionalAbsentSubscriberDiagnosticSM', 'imsi', 'requestedRetransmissionTime', 'userIdentifierAlert']
    
    #-----< AbsentSubscriberDiagnosticSM >-----#
    AbsentSubscriberDiagnosticSM = INT(name='AbsentSubscriberDiagnosticSM', mode=MODE_TYPE)
    AbsentSubscriberDiagnosticSM._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< SystemFailureParam >-----#
    SystemFailureParam = CHOICE(name='SystemFailureParam', mode=MODE_TYPE)
    _SystemFailureParam_networkResource = ENUM(name='networkResource', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkResource')))
    _SystemFailureParam_extensibleSystemFailureParam = SEQ(name='extensibleSystemFailureParam', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ExtensibleSystemFailureParam')))
    SystemFailureParam._cont = ASN1Dict([
        ('networkResource', _SystemFailureParam_networkResource),
        ('extensibleSystemFailureParam', _SystemFailureParam_extensibleSystemFailureParam),
        ])
    SystemFailureParam._ext = None
    
    #-----< ExtensibleSystemFailureParam >-----#
    ExtensibleSystemFailureParam = SEQ(name='ExtensibleSystemFailureParam', mode=MODE_TYPE)
    _ExtensibleSystemFailureParam_networkResource = ENUM(name='networkResource', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkResource')), opt=True)
    _ExtensibleSystemFailureParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ExtensibleSystemFailureParam_additionalNetworkResource = ENUM(name='additionalNetworkResource', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AdditionalNetworkResource')), opt=True)
    _ExtensibleSystemFailureParam_failureCauseParam = ENUM(name='failureCauseParam', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'FailureCauseParam')), opt=True)
    ExtensibleSystemFailureParam._cont = ASN1Dict([
        ('networkResource', _ExtensibleSystemFailureParam_networkResource),
        ('extensionContainer', _ExtensibleSystemFailureParam_extensionContainer),
        ('additionalNetworkResource', _ExtensibleSystemFailureParam_additionalNetworkResource),
        ('failureCauseParam', _ExtensibleSystemFailureParam_failureCauseParam),
        ])
    ExtensibleSystemFailureParam._ext = ['additionalNetworkResource', 'failureCauseParam']
    
    #-----< FailureCauseParam >-----#
    FailureCauseParam = ENUM(name='FailureCauseParam', mode=MODE_TYPE)
    FailureCauseParam._cont = ASN1Dict([('limitReachedOnNumberOfConcurrentLocationRequests', 0)])
    FailureCauseParam._ext = []
    
    #-----< DataMissingParam >-----#
    DataMissingParam = SEQ(name='DataMissingParam', mode=MODE_TYPE)
    _DataMissingParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    DataMissingParam._cont = ASN1Dict([
        ('extensionContainer', _DataMissingParam_extensionContainer),
        ])
    DataMissingParam._ext = []
    
    #-----< UnexpectedDataParam >-----#
    UnexpectedDataParam = SEQ(name='UnexpectedDataParam', mode=MODE_TYPE)
    _UnexpectedDataParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _UnexpectedDataParam_unexpectedSubscriber = NULL(name='unexpectedSubscriber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    UnexpectedDataParam._cont = ASN1Dict([
        ('extensionContainer', _UnexpectedDataParam_extensionContainer),
        ('unexpectedSubscriber', _UnexpectedDataParam_unexpectedSubscriber),
        ])
    UnexpectedDataParam._ext = ['unexpectedSubscriber']
    
    #-----< FacilityNotSupParam >-----#
    FacilityNotSupParam = SEQ(name='FacilityNotSupParam', mode=MODE_TYPE)
    _FacilityNotSupParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _FacilityNotSupParam_shapeOfLocationEstimateNotSupported = NULL(name='shapeOfLocationEstimateNotSupported', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _FacilityNotSupParam_neededLcsCapabilityNotSupportedInServingNode = NULL(name='neededLcsCapabilityNotSupportedInServingNode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    FacilityNotSupParam._cont = ASN1Dict([
        ('extensionContainer', _FacilityNotSupParam_extensionContainer),
        ('shapeOfLocationEstimateNotSupported', _FacilityNotSupParam_shapeOfLocationEstimateNotSupported),
        ('neededLcsCapabilityNotSupportedInServingNode', _FacilityNotSupParam_neededLcsCapabilityNotSupportedInServingNode),
        ])
    FacilityNotSupParam._ext = ['shapeOfLocationEstimateNotSupported', 'neededLcsCapabilityNotSupportedInServingNode']
    
    #-----< OR-NotAllowedParam >-----#
    OR_NotAllowedParam = SEQ(name='OR-NotAllowedParam', mode=MODE_TYPE)
    _OR_NotAllowedParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    OR_NotAllowedParam._cont = ASN1Dict([
        ('extensionContainer', _OR_NotAllowedParam_extensionContainer),
        ])
    OR_NotAllowedParam._ext = []
    
    #-----< UnknownSubscriberParam >-----#
    UnknownSubscriberParam = SEQ(name='UnknownSubscriberParam', mode=MODE_TYPE)
    _UnknownSubscriberParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _UnknownSubscriberParam_unknownSubscriberDiagnostic = ENUM(name='unknownSubscriberDiagnostic', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberDiagnostic')), opt=True)
    UnknownSubscriberParam._cont = ASN1Dict([
        ('extensionContainer', _UnknownSubscriberParam_extensionContainer),
        ('unknownSubscriberDiagnostic', _UnknownSubscriberParam_unknownSubscriberDiagnostic),
        ])
    UnknownSubscriberParam._ext = ['unknownSubscriberDiagnostic']
    
    #-----< UnknownSubscriberDiagnostic >-----#
    UnknownSubscriberDiagnostic = ENUM(name='UnknownSubscriberDiagnostic', mode=MODE_TYPE)
    UnknownSubscriberDiagnostic._cont = ASN1Dict([('imsiUnknown', 0), ('gprs-eps-SubscriptionUnknown', 1), ('npdbMismatch', 2)])
    UnknownSubscriberDiagnostic._ext = ['npdbMismatch']
    
    #-----< NumberChangedParam >-----#
    NumberChangedParam = SEQ(name='NumberChangedParam', mode=MODE_TYPE)
    _NumberChangedParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    NumberChangedParam._cont = ASN1Dict([
        ('extensionContainer', _NumberChangedParam_extensionContainer),
        ])
    NumberChangedParam._ext = []
    
    #-----< UnidentifiedSubParam >-----#
    UnidentifiedSubParam = SEQ(name='UnidentifiedSubParam', mode=MODE_TYPE)
    _UnidentifiedSubParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    UnidentifiedSubParam._cont = ASN1Dict([
        ('extensionContainer', _UnidentifiedSubParam_extensionContainer),
        ])
    UnidentifiedSubParam._ext = []
    
    #-----< IllegalSubscriberParam >-----#
    IllegalSubscriberParam = SEQ(name='IllegalSubscriberParam', mode=MODE_TYPE)
    _IllegalSubscriberParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    IllegalSubscriberParam._cont = ASN1Dict([
        ('extensionContainer', _IllegalSubscriberParam_extensionContainer),
        ])
    IllegalSubscriberParam._ext = []
    
    #-----< IllegalEquipmentParam >-----#
    IllegalEquipmentParam = SEQ(name='IllegalEquipmentParam', mode=MODE_TYPE)
    _IllegalEquipmentParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    IllegalEquipmentParam._cont = ASN1Dict([
        ('extensionContainer', _IllegalEquipmentParam_extensionContainer),
        ])
    IllegalEquipmentParam._ext = []
    
    #-----< BearerServNotProvParam >-----#
    BearerServNotProvParam = SEQ(name='BearerServNotProvParam', mode=MODE_TYPE)
    _BearerServNotProvParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    BearerServNotProvParam._cont = ASN1Dict([
        ('extensionContainer', _BearerServNotProvParam_extensionContainer),
        ])
    BearerServNotProvParam._ext = []
    
    #-----< TeleservNotProvParam >-----#
    TeleservNotProvParam = SEQ(name='TeleservNotProvParam', mode=MODE_TYPE)
    _TeleservNotProvParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    TeleservNotProvParam._cont = ASN1Dict([
        ('extensionContainer', _TeleservNotProvParam_extensionContainer),
        ])
    TeleservNotProvParam._ext = []
    
    #-----< TracingBufferFullParam >-----#
    TracingBufferFullParam = SEQ(name='TracingBufferFullParam', mode=MODE_TYPE)
    _TracingBufferFullParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    TracingBufferFullParam._cont = ASN1Dict([
        ('extensionContainer', _TracingBufferFullParam_extensionContainer),
        ])
    TracingBufferFullParam._ext = []
    
    #-----< NoRoamingNbParam >-----#
    NoRoamingNbParam = SEQ(name='NoRoamingNbParam', mode=MODE_TYPE)
    _NoRoamingNbParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    NoRoamingNbParam._cont = ASN1Dict([
        ('extensionContainer', _NoRoamingNbParam_extensionContainer),
        ])
    NoRoamingNbParam._ext = []
    
    #-----< AbsentSubscriberParam >-----#
    AbsentSubscriberParam = SEQ(name='AbsentSubscriberParam', mode=MODE_TYPE)
    _AbsentSubscriberParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _AbsentSubscriberParam_absentSubscriberReason = ENUM(name='absentSubscriberReason', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberReason')), opt=True)
    AbsentSubscriberParam._cont = ASN1Dict([
        ('extensionContainer', _AbsentSubscriberParam_extensionContainer),
        ('absentSubscriberReason', _AbsentSubscriberParam_absentSubscriberReason),
        ])
    AbsentSubscriberParam._ext = ['absentSubscriberReason']
    
    #-----< AbsentSubscriberReason >-----#
    AbsentSubscriberReason = ENUM(name='AbsentSubscriberReason', mode=MODE_TYPE)
    AbsentSubscriberReason._cont = ASN1Dict([('imsiDetach', 0), ('restrictedArea', 1), ('noPageResponse', 2), ('purgedMS', 3), ('mtRoamingRetry', 4), ('busySubscriber', 5)])
    AbsentSubscriberReason._ext = ['purgedMS', 'mtRoamingRetry', 'busySubscriber']
    
    #-----< BusySubscriberParam >-----#
    BusySubscriberParam = SEQ(name='BusySubscriberParam', mode=MODE_TYPE)
    _BusySubscriberParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _BusySubscriberParam_ccbs_Possible = NULL(name='ccbs-Possible', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BusySubscriberParam_ccbs_Busy = NULL(name='ccbs-Busy', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    BusySubscriberParam._cont = ASN1Dict([
        ('extensionContainer', _BusySubscriberParam_extensionContainer),
        ('ccbs-Possible', _BusySubscriberParam_ccbs_Possible),
        ('ccbs-Busy', _BusySubscriberParam_ccbs_Busy),
        ])
    BusySubscriberParam._ext = ['ccbs-Possible', 'ccbs-Busy']
    
    #-----< NoSubscriberReplyParam >-----#
    NoSubscriberReplyParam = SEQ(name='NoSubscriberReplyParam', mode=MODE_TYPE)
    _NoSubscriberReplyParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    NoSubscriberReplyParam._cont = ASN1Dict([
        ('extensionContainer', _NoSubscriberReplyParam_extensionContainer),
        ])
    NoSubscriberReplyParam._ext = []
    
    #-----< ForwardingViolationParam >-----#
    ForwardingViolationParam = SEQ(name='ForwardingViolationParam', mode=MODE_TYPE)
    _ForwardingViolationParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ForwardingViolationParam._cont = ASN1Dict([
        ('extensionContainer', _ForwardingViolationParam_extensionContainer),
        ])
    ForwardingViolationParam._ext = []
    
    #-----< ForwardingFailedParam >-----#
    ForwardingFailedParam = SEQ(name='ForwardingFailedParam', mode=MODE_TYPE)
    _ForwardingFailedParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ForwardingFailedParam._cont = ASN1Dict([
        ('extensionContainer', _ForwardingFailedParam_extensionContainer),
        ])
    ForwardingFailedParam._ext = []
    
    #-----< ATI-NotAllowedParam >-----#
    ATI_NotAllowedParam = SEQ(name='ATI-NotAllowedParam', mode=MODE_TYPE)
    _ATI_NotAllowedParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ATI_NotAllowedParam._cont = ASN1Dict([
        ('extensionContainer', _ATI_NotAllowedParam_extensionContainer),
        ])
    ATI_NotAllowedParam._ext = []
    
    #-----< ATSI-NotAllowedParam >-----#
    ATSI_NotAllowedParam = SEQ(name='ATSI-NotAllowedParam', mode=MODE_TYPE)
    _ATSI_NotAllowedParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ATSI_NotAllowedParam._cont = ASN1Dict([
        ('extensionContainer', _ATSI_NotAllowedParam_extensionContainer),
        ])
    ATSI_NotAllowedParam._ext = []
    
    #-----< ATM-NotAllowedParam >-----#
    ATM_NotAllowedParam = SEQ(name='ATM-NotAllowedParam', mode=MODE_TYPE)
    _ATM_NotAllowedParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ATM_NotAllowedParam._cont = ASN1Dict([
        ('extensionContainer', _ATM_NotAllowedParam_extensionContainer),
        ])
    ATM_NotAllowedParam._ext = []
    
    #-----< IllegalSS-OperationParam >-----#
    IllegalSS_OperationParam = SEQ(name='IllegalSS-OperationParam', mode=MODE_TYPE)
    _IllegalSS_OperationParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    IllegalSS_OperationParam._cont = ASN1Dict([
        ('extensionContainer', _IllegalSS_OperationParam_extensionContainer),
        ])
    IllegalSS_OperationParam._ext = []
    
    #-----< SS-NotAvailableParam >-----#
    SS_NotAvailableParam = SEQ(name='SS-NotAvailableParam', mode=MODE_TYPE)
    _SS_NotAvailableParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SS_NotAvailableParam._cont = ASN1Dict([
        ('extensionContainer', _SS_NotAvailableParam_extensionContainer),
        ])
    SS_NotAvailableParam._ext = []
    
    #-----< SS-SubscriptionViolationParam >-----#
    SS_SubscriptionViolationParam = SEQ(name='SS-SubscriptionViolationParam', mode=MODE_TYPE)
    _SS_SubscriptionViolationParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SS_SubscriptionViolationParam._cont = ASN1Dict([
        ('extensionContainer', _SS_SubscriptionViolationParam_extensionContainer),
        ])
    SS_SubscriptionViolationParam._ext = []
    
    #-----< InformationNotAvailableParam >-----#
    InformationNotAvailableParam = SEQ(name='InformationNotAvailableParam', mode=MODE_TYPE)
    _InformationNotAvailableParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    InformationNotAvailableParam._cont = ASN1Dict([
        ('extensionContainer', _InformationNotAvailableParam_extensionContainer),
        ])
    InformationNotAvailableParam._ext = []
    
    #-----< SubBusyForMT-SMS-Param >-----#
    SubBusyForMT_SMS_Param = SEQ(name='SubBusyForMT-SMS-Param', mode=MODE_TYPE)
    _SubBusyForMT_SMS_Param_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SubBusyForMT_SMS_Param_gprsConnectionSuspended = NULL(name='gprsConnectionSuspended', mode=MODE_TYPE, opt=True)
    SubBusyForMT_SMS_Param._cont = ASN1Dict([
        ('extensionContainer', _SubBusyForMT_SMS_Param_extensionContainer),
        ('gprsConnectionSuspended', _SubBusyForMT_SMS_Param_gprsConnectionSuspended),
        ])
    SubBusyForMT_SMS_Param._ext = ['gprsConnectionSuspended']
    
    #-----< MessageWaitListFullParam >-----#
    MessageWaitListFullParam = SEQ(name='MessageWaitListFullParam', mode=MODE_TYPE)
    _MessageWaitListFullParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MessageWaitListFullParam._cont = ASN1Dict([
        ('extensionContainer', _MessageWaitListFullParam_extensionContainer),
        ])
    MessageWaitListFullParam._ext = []
    
    #-----< ResourceLimitationParam >-----#
    ResourceLimitationParam = SEQ(name='ResourceLimitationParam', mode=MODE_TYPE)
    _ResourceLimitationParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ResourceLimitationParam._cont = ASN1Dict([
        ('extensionContainer', _ResourceLimitationParam_extensionContainer),
        ])
    ResourceLimitationParam._ext = []
    
    #-----< NoGroupCallNbParam >-----#
    NoGroupCallNbParam = SEQ(name='NoGroupCallNbParam', mode=MODE_TYPE)
    _NoGroupCallNbParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    NoGroupCallNbParam._cont = ASN1Dict([
        ('extensionContainer', _NoGroupCallNbParam_extensionContainer),
        ])
    NoGroupCallNbParam._ext = []
    
    #-----< IncompatibleTerminalParam >-----#
    IncompatibleTerminalParam = SEQ(name='IncompatibleTerminalParam', mode=MODE_TYPE)
    _IncompatibleTerminalParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    IncompatibleTerminalParam._cont = ASN1Dict([
        ('extensionContainer', _IncompatibleTerminalParam_extensionContainer),
        ])
    IncompatibleTerminalParam._ext = []
    
    #-----< ShortTermDenialParam >-----#
    ShortTermDenialParam = SEQ(name='ShortTermDenialParam', mode=MODE_TYPE)
    ShortTermDenialParam._cont = ASN1Dict([
        ])
    ShortTermDenialParam._ext = []
    
    #-----< LongTermDenialParam >-----#
    LongTermDenialParam = SEQ(name='LongTermDenialParam', mode=MODE_TYPE)
    LongTermDenialParam._cont = ASN1Dict([
        ])
    LongTermDenialParam._ext = []
    
    #-----< UnauthorizedRequestingNetwork-Param >-----#
    UnauthorizedRequestingNetwork_Param = SEQ(name='UnauthorizedRequestingNetwork-Param', mode=MODE_TYPE)
    _UnauthorizedRequestingNetwork_Param_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    UnauthorizedRequestingNetwork_Param._cont = ASN1Dict([
        ('extensionContainer', _UnauthorizedRequestingNetwork_Param_extensionContainer),
        ])
    UnauthorizedRequestingNetwork_Param._ext = []
    
    #-----< UnauthorizedLCSClient-Param >-----#
    UnauthorizedLCSClient_Param = SEQ(name='UnauthorizedLCSClient-Param', mode=MODE_TYPE)
    _UnauthorizedLCSClient_Param_unauthorizedLCSClient_Diagnostic = ENUM(name='unauthorizedLCSClient-Diagnostic', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedLCSClient-Diagnostic')), opt=True)
    _UnauthorizedLCSClient_Param_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    UnauthorizedLCSClient_Param._cont = ASN1Dict([
        ('unauthorizedLCSClient-Diagnostic', _UnauthorizedLCSClient_Param_unauthorizedLCSClient_Diagnostic),
        ('extensionContainer', _UnauthorizedLCSClient_Param_extensionContainer),
        ])
    UnauthorizedLCSClient_Param._ext = []
    
    #-----< UnauthorizedLCSClient-Diagnostic >-----#
    UnauthorizedLCSClient_Diagnostic = ENUM(name='UnauthorizedLCSClient-Diagnostic', mode=MODE_TYPE)
    UnauthorizedLCSClient_Diagnostic._cont = ASN1Dict([('noAdditionalInformation', 0), ('clientNotInMSPrivacyExceptionList', 1), ('callToClientNotSetup', 2), ('privacyOverrideNotApplicable', 3), ('disallowedByLocalRegulatoryRequirements', 4), ('unauthorizedPrivacyClass', 5), ('unauthorizedCallSessionUnrelatedExternalClient', 6), ('unauthorizedCallSessionRelatedExternalClient', 7)])
    UnauthorizedLCSClient_Diagnostic._ext = ['unauthorizedPrivacyClass', 'unauthorizedCallSessionUnrelatedExternalClient', 'unauthorizedCallSessionRelatedExternalClient']
    
    #-----< PositionMethodFailure-Param >-----#
    PositionMethodFailure_Param = SEQ(name='PositionMethodFailure-Param', mode=MODE_TYPE)
    _PositionMethodFailure_Param_positionMethodFailure_Diagnostic = ENUM(name='positionMethodFailure-Diagnostic', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'PositionMethodFailure-Diagnostic')), opt=True)
    _PositionMethodFailure_Param_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    PositionMethodFailure_Param._cont = ASN1Dict([
        ('positionMethodFailure-Diagnostic', _PositionMethodFailure_Param_positionMethodFailure_Diagnostic),
        ('extensionContainer', _PositionMethodFailure_Param_extensionContainer),
        ])
    PositionMethodFailure_Param._ext = []
    
    #-----< PositionMethodFailure-Diagnostic >-----#
    PositionMethodFailure_Diagnostic = ENUM(name='PositionMethodFailure-Diagnostic', mode=MODE_TYPE)
    PositionMethodFailure_Diagnostic._cont = ASN1Dict([('congestion', 0), ('insufficientResources', 1), ('insufficientMeasurementData', 2), ('inconsistentMeasurementData', 3), ('locationProcedureNotCompleted', 4), ('locationProcedureNotSupportedByTargetMS', 5), ('qoSNotAttainable', 6), ('positionMethodNotAvailableInNetwork', 7), ('positionMethodNotAvailableInLocationArea', 8)])
    PositionMethodFailure_Diagnostic._ext = []
    
    #-----< UnknownOrUnreachableLCSClient-Param >-----#
    UnknownOrUnreachableLCSClient_Param = SEQ(name='UnknownOrUnreachableLCSClient-Param', mode=MODE_TYPE)
    _UnknownOrUnreachableLCSClient_Param_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    UnknownOrUnreachableLCSClient_Param._cont = ASN1Dict([
        ('extensionContainer', _UnknownOrUnreachableLCSClient_Param_extensionContainer),
        ])
    UnknownOrUnreachableLCSClient_Param._ext = []
    
    #-----< MM-EventNotSupported-Param >-----#
    MM_EventNotSupported_Param = SEQ(name='MM-EventNotSupported-Param', mode=MODE_TYPE)
    _MM_EventNotSupported_Param_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MM_EventNotSupported_Param._cont = ASN1Dict([
        ('extensionContainer', _MM_EventNotSupported_Param_extensionContainer),
        ])
    MM_EventNotSupported_Param._ext = []
    
    #-----< TargetCellOutsideGCA-Param >-----#
    TargetCellOutsideGCA_Param = SEQ(name='TargetCellOutsideGCA-Param', mode=MODE_TYPE)
    _TargetCellOutsideGCA_Param_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    TargetCellOutsideGCA_Param._cont = ASN1Dict([
        ('extensionContainer', _TargetCellOutsideGCA_Param_extensionContainer),
        ])
    TargetCellOutsideGCA_Param._ext = []
    
    #-----< OngoingGroupCallParam >-----#
    OngoingGroupCallParam = SEQ(name='OngoingGroupCallParam', mode=MODE_TYPE)
    _OngoingGroupCallParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    OngoingGroupCallParam._cont = ASN1Dict([
        ('extensionContainer', _OngoingGroupCallParam_extensionContainer),
        ])
    OngoingGroupCallParam._ext = []
    
    _all_ = [
        _RoamingNotAllowedParam_roamingNotAllowedCause,
        _RoamingNotAllowedParam_extensionContainer,
        _RoamingNotAllowedParam_additionalRoamingNotAllowedCause,
        RoamingNotAllowedParam,
        AdditionalRoamingNotAllowedCause,
        RoamingNotAllowedCause,
        _CallBarredParam_callBarringCause,
        _CallBarredParam_extensibleCallBarredParam,
        CallBarredParam,
        CallBarringCause,
        _ExtensibleCallBarredParam_callBarringCause,
        _ExtensibleCallBarredParam_extensionContainer,
        _ExtensibleCallBarredParam_unauthorisedMessageOriginator,
        _ExtensibleCallBarredParam_anonymousCallRejection,
        ExtensibleCallBarredParam,
        _CUG_RejectParam_cug_RejectCause,
        _CUG_RejectParam_extensionContainer,
        CUG_RejectParam,
        CUG_RejectCause,
        _SS_IncompatibilityCause_ss_Code,
        _SS_IncompatibilityCause_basicService,
        _SS_IncompatibilityCause_ss_Status,
        SS_IncompatibilityCause,
        PW_RegistrationFailureCause,
        SM_EnumeratedDeliveryFailureCause,
        _SM_DeliveryFailureCause_sm_EnumeratedDeliveryFailureCause,
        _SM_DeliveryFailureCause_diagnosticInfo,
        _SM_DeliveryFailureCause_extensionContainer,
        SM_DeliveryFailureCause,
        _AbsentSubscriberSM_Param_absentSubscriberDiagnosticSM,
        _AbsentSubscriberSM_Param_extensionContainer,
        _AbsentSubscriberSM_Param_additionalAbsentSubscriberDiagnosticSM,
        _AbsentSubscriberSM_Param_imsi,
        _AbsentSubscriberSM_Param_requestedRetransmissionTime,
        _AbsentSubscriberSM_Param_userIdentifierAlert,
        AbsentSubscriberSM_Param,
        AbsentSubscriberDiagnosticSM,
        _SystemFailureParam_networkResource,
        _SystemFailureParam_extensibleSystemFailureParam,
        SystemFailureParam,
        _ExtensibleSystemFailureParam_networkResource,
        _ExtensibleSystemFailureParam_extensionContainer,
        _ExtensibleSystemFailureParam_additionalNetworkResource,
        _ExtensibleSystemFailureParam_failureCauseParam,
        ExtensibleSystemFailureParam,
        FailureCauseParam,
        _DataMissingParam_extensionContainer,
        DataMissingParam,
        _UnexpectedDataParam_extensionContainer,
        _UnexpectedDataParam_unexpectedSubscriber,
        UnexpectedDataParam,
        _FacilityNotSupParam_extensionContainer,
        _FacilityNotSupParam_shapeOfLocationEstimateNotSupported,
        _FacilityNotSupParam_neededLcsCapabilityNotSupportedInServingNode,
        FacilityNotSupParam,
        _OR_NotAllowedParam_extensionContainer,
        OR_NotAllowedParam,
        _UnknownSubscriberParam_extensionContainer,
        _UnknownSubscriberParam_unknownSubscriberDiagnostic,
        UnknownSubscriberParam,
        UnknownSubscriberDiagnostic,
        _NumberChangedParam_extensionContainer,
        NumberChangedParam,
        _UnidentifiedSubParam_extensionContainer,
        UnidentifiedSubParam,
        _IllegalSubscriberParam_extensionContainer,
        IllegalSubscriberParam,
        _IllegalEquipmentParam_extensionContainer,
        IllegalEquipmentParam,
        _BearerServNotProvParam_extensionContainer,
        BearerServNotProvParam,
        _TeleservNotProvParam_extensionContainer,
        TeleservNotProvParam,
        _TracingBufferFullParam_extensionContainer,
        TracingBufferFullParam,
        _NoRoamingNbParam_extensionContainer,
        NoRoamingNbParam,
        _AbsentSubscriberParam_extensionContainer,
        _AbsentSubscriberParam_absentSubscriberReason,
        AbsentSubscriberParam,
        AbsentSubscriberReason,
        _BusySubscriberParam_extensionContainer,
        _BusySubscriberParam_ccbs_Possible,
        _BusySubscriberParam_ccbs_Busy,
        BusySubscriberParam,
        _NoSubscriberReplyParam_extensionContainer,
        NoSubscriberReplyParam,
        _ForwardingViolationParam_extensionContainer,
        ForwardingViolationParam,
        _ForwardingFailedParam_extensionContainer,
        ForwardingFailedParam,
        _ATI_NotAllowedParam_extensionContainer,
        ATI_NotAllowedParam,
        _ATSI_NotAllowedParam_extensionContainer,
        ATSI_NotAllowedParam,
        _ATM_NotAllowedParam_extensionContainer,
        ATM_NotAllowedParam,
        _IllegalSS_OperationParam_extensionContainer,
        IllegalSS_OperationParam,
        _SS_NotAvailableParam_extensionContainer,
        SS_NotAvailableParam,
        _SS_SubscriptionViolationParam_extensionContainer,
        SS_SubscriptionViolationParam,
        _InformationNotAvailableParam_extensionContainer,
        InformationNotAvailableParam,
        _SubBusyForMT_SMS_Param_extensionContainer,
        _SubBusyForMT_SMS_Param_gprsConnectionSuspended,
        SubBusyForMT_SMS_Param,
        _MessageWaitListFullParam_extensionContainer,
        MessageWaitListFullParam,
        _ResourceLimitationParam_extensionContainer,
        ResourceLimitationParam,
        _NoGroupCallNbParam_extensionContainer,
        NoGroupCallNbParam,
        _IncompatibleTerminalParam_extensionContainer,
        IncompatibleTerminalParam,
        ShortTermDenialParam,
        LongTermDenialParam,
        _UnauthorizedRequestingNetwork_Param_extensionContainer,
        UnauthorizedRequestingNetwork_Param,
        _UnauthorizedLCSClient_Param_unauthorizedLCSClient_Diagnostic,
        _UnauthorizedLCSClient_Param_extensionContainer,
        UnauthorizedLCSClient_Param,
        UnauthorizedLCSClient_Diagnostic,
        _PositionMethodFailure_Param_positionMethodFailure_Diagnostic,
        _PositionMethodFailure_Param_extensionContainer,
        PositionMethodFailure_Param,
        PositionMethodFailure_Diagnostic,
        _UnknownOrUnreachableLCSClient_Param_extensionContainer,
        UnknownOrUnreachableLCSClient_Param,
        _MM_EventNotSupported_Param_extensionContainer,
        MM_EventNotSupported_Param,
        _TargetCellOutsideGCA_Param_extensionContainer,
        TargetCellOutsideGCA_Param,
        _OngoingGroupCallParam_extensionContainer,
        OngoingGroupCallParam,
    ]

class MAP_Errors:

    _name_  = 'MAP-Errors'
    _oid_   = [0, 4, 0, 0, 1, 3, 10, 19]
    
    _obj_ = [
        'systemFailure',
        'dataMissing',
        'unexpectedDataValue',
        'facilityNotSupported',
        'incompatibleTerminal',
        'resourceLimitation',
        'unknownSubscriber',
        'numberChanged',
        'unknownMSC',
        'unidentifiedSubscriber',
        'unknownEquipment',
        'roamingNotAllowed',
        'illegalSubscriber',
        'illegalEquipment',
        'bearerServiceNotProvisioned',
        'teleserviceNotProvisioned',
        'noHandoverNumberAvailable',
        'subsequentHandoverFailure',
        'targetCellOutsideGroupCallArea',
        'tracingBufferFull',
        'noRoamingNumberAvailable',
        'absentSubscriber',
        'busySubscriber',
        'noSubscriberReply',
        'callBarred',
        'forwardingViolation',
        'forwardingFailed',
        'cug-Reject',
        'or-NotAllowed',
        'ati-NotAllowed',
        'atsi-NotAllowed',
        'atm-NotAllowed',
        'informationNotAvailable',
        'illegalSS-Operation',
        'ss-ErrorStatus',
        'ss-NotAvailable',
        'ss-SubscriptionViolation',
        'ss-Incompatibility',
        'unknownAlphabet',
        'ussd-Busy',
        'pw-RegistrationFailure',
        'negativePW-Check',
        'numberOfPW-AttemptsViolation',
        'shortTermDenial',
        'longTermDenial',
        'subscriberBusyForMT-SMS',
        'sm-DeliveryFailure',
        'messageWaitingListFull',
        'absentSubscriberSM',
        'noGroupCallNumberAvailable',
        'ongoingGroupCall',
        'unauthorizedRequestingNetwork',
        'unauthorizedLCSClient',
        'positionMethodFailure',
        'unknownOrUnreachableLCSClient',
        'mm-EventNotSupported',
        ]
    _type_ = [
        ]
    _set_ = [
        ]
    _val_ = [
        'systemFailure',
        'dataMissing',
        'unexpectedDataValue',
        'facilityNotSupported',
        'incompatibleTerminal',
        'resourceLimitation',
        'unknownSubscriber',
        'numberChanged',
        'unknownMSC',
        'unidentifiedSubscriber',
        'unknownEquipment',
        'roamingNotAllowed',
        'illegalSubscriber',
        'illegalEquipment',
        'bearerServiceNotProvisioned',
        'teleserviceNotProvisioned',
        'noHandoverNumberAvailable',
        'subsequentHandoverFailure',
        'targetCellOutsideGroupCallArea',
        'tracingBufferFull',
        'noRoamingNumberAvailable',
        'absentSubscriber',
        'busySubscriber',
        'noSubscriberReply',
        'callBarred',
        'forwardingViolation',
        'forwardingFailed',
        'cug-Reject',
        'or-NotAllowed',
        'ati-NotAllowed',
        'atsi-NotAllowed',
        'atm-NotAllowed',
        'informationNotAvailable',
        'illegalSS-Operation',
        'ss-ErrorStatus',
        'ss-NotAvailable',
        'ss-SubscriptionViolation',
        'ss-Incompatibility',
        'unknownAlphabet',
        'ussd-Busy',
        'pw-RegistrationFailure',
        'negativePW-Check',
        'numberOfPW-AttemptsViolation',
        'shortTermDenial',
        'longTermDenial',
        'subscriberBusyForMT-SMS',
        'sm-DeliveryFailure',
        'messageWaitingListFull',
        'absentSubscriberSM',
        'noGroupCallNumberAvailable',
        'ongoingGroupCall',
        'unauthorizedRequestingNetwork',
        'unauthorizedLCSClient',
        'positionMethodFailure',
        'unknownOrUnreachableLCSClient',
        'mm-EventNotSupported',
        ]
    _class_ = [
        'systemFailure',
        'dataMissing',
        'unexpectedDataValue',
        'facilityNotSupported',
        'incompatibleTerminal',
        'resourceLimitation',
        'unknownSubscriber',
        'numberChanged',
        'unknownMSC',
        'unidentifiedSubscriber',
        'unknownEquipment',
        'roamingNotAllowed',
        'illegalSubscriber',
        'illegalEquipment',
        'bearerServiceNotProvisioned',
        'teleserviceNotProvisioned',
        'noHandoverNumberAvailable',
        'subsequentHandoverFailure',
        'targetCellOutsideGroupCallArea',
        'tracingBufferFull',
        'noRoamingNumberAvailable',
        'absentSubscriber',
        'busySubscriber',
        'noSubscriberReply',
        'callBarred',
        'forwardingViolation',
        'forwardingFailed',
        'cug-Reject',
        'or-NotAllowed',
        'ati-NotAllowed',
        'atsi-NotAllowed',
        'atm-NotAllowed',
        'informationNotAvailable',
        'illegalSS-Operation',
        'ss-ErrorStatus',
        'ss-NotAvailable',
        'ss-SubscriptionViolation',
        'ss-Incompatibility',
        'unknownAlphabet',
        'ussd-Busy',
        'pw-RegistrationFailure',
        'negativePW-Check',
        'numberOfPW-AttemptsViolation',
        'shortTermDenial',
        'longTermDenial',
        'subscriberBusyForMT-SMS',
        'sm-DeliveryFailure',
        'messageWaitingListFull',
        'absentSubscriberSM',
        'noGroupCallNumberAvailable',
        'ongoingGroupCall',
        'unauthorizedRequestingNetwork',
        'unauthorizedLCSClient',
        'positionMethodFailure',
        'unknownOrUnreachableLCSClient',
        'mm-EventNotSupported',
        ]
    _param_ = [
        ]
    
    #-----< systemFailure >-----#
    systemFailure = CLASS(name='systemFailure', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _systemFailure_val_ParameterType = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    systemFailure._val = dict([('ParameterType', _systemFailure_val_ParameterType), ('errorCode', ('local', 34))])
    
    #-----< dataMissing >-----#
    dataMissing = CLASS(name='dataMissing', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _dataMissing_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    dataMissing._val = dict([('ParameterType', _dataMissing_val_ParameterType), ('errorCode', ('local', 35))])
    
    #-----< unexpectedDataValue >-----#
    unexpectedDataValue = CLASS(name='unexpectedDataValue', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _unexpectedDataValue_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    unexpectedDataValue._val = dict([('ParameterType', _unexpectedDataValue_val_ParameterType), ('errorCode', ('local', 36))])
    
    #-----< facilityNotSupported >-----#
    facilityNotSupported = CLASS(name='facilityNotSupported', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _facilityNotSupported_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    facilityNotSupported._val = dict([('ParameterType', _facilityNotSupported_val_ParameterType), ('errorCode', ('local', 21))])
    
    #-----< incompatibleTerminal >-----#
    incompatibleTerminal = CLASS(name='incompatibleTerminal', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _incompatibleTerminal_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IncompatibleTerminalParam')))
    incompatibleTerminal._val = dict([('ParameterType', _incompatibleTerminal_val_ParameterType), ('errorCode', ('local', 28))])
    
    #-----< resourceLimitation >-----#
    resourceLimitation = CLASS(name='resourceLimitation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _resourceLimitation_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ResourceLimitationParam')))
    resourceLimitation._val = dict([('ParameterType', _resourceLimitation_val_ParameterType), ('errorCode', ('local', 51))])
    
    #-----< unknownSubscriber >-----#
    unknownSubscriber = CLASS(name='unknownSubscriber', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _unknownSubscriber_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    unknownSubscriber._val = dict([('ParameterType', _unknownSubscriber_val_ParameterType), ('errorCode', ('local', 1))])
    
    #-----< numberChanged >-----#
    numberChanged = CLASS(name='numberChanged', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _numberChanged_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NumberChangedParam')))
    numberChanged._val = dict([('ParameterType', _numberChanged_val_ParameterType), ('errorCode', ('local', 44))])
    
    #-----< unknownMSC >-----#
    unknownMSC = CLASS(name='unknownMSC', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    unknownMSC._val = dict([('errorCode', ('local', 3))])
    
    #-----< unidentifiedSubscriber >-----#
    unidentifiedSubscriber = CLASS(name='unidentifiedSubscriber', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _unidentifiedSubscriber_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    unidentifiedSubscriber._val = dict([('ParameterType', _unidentifiedSubscriber_val_ParameterType), ('errorCode', ('local', 5))])
    
    #-----< unknownEquipment >-----#
    unknownEquipment = CLASS(name='unknownEquipment', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    unknownEquipment._val = dict([('errorCode', ('local', 7))])
    
    #-----< roamingNotAllowed >-----#
    roamingNotAllowed = CLASS(name='roamingNotAllowed', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _roamingNotAllowed_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'RoamingNotAllowedParam')))
    roamingNotAllowed._val = dict([('ParameterType', _roamingNotAllowed_val_ParameterType), ('errorCode', ('local', 8))])
    
    #-----< illegalSubscriber >-----#
    illegalSubscriber = CLASS(name='illegalSubscriber', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _illegalSubscriber_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSubscriberParam')))
    illegalSubscriber._val = dict([('ParameterType', _illegalSubscriber_val_ParameterType), ('errorCode', ('local', 9))])
    
    #-----< illegalEquipment >-----#
    illegalEquipment = CLASS(name='illegalEquipment', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _illegalEquipment_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalEquipmentParam')))
    illegalEquipment._val = dict([('ParameterType', _illegalEquipment_val_ParameterType), ('errorCode', ('local', 12))])
    
    #-----< bearerServiceNotProvisioned >-----#
    bearerServiceNotProvisioned = CLASS(name='bearerServiceNotProvisioned', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _bearerServiceNotProvisioned_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BearerServNotProvParam')))
    bearerServiceNotProvisioned._val = dict([('ParameterType', _bearerServiceNotProvisioned_val_ParameterType), ('errorCode', ('local', 10))])
    
    #-----< teleserviceNotProvisioned >-----#
    teleserviceNotProvisioned = CLASS(name='teleserviceNotProvisioned', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _teleserviceNotProvisioned_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TeleservNotProvParam')))
    teleserviceNotProvisioned._val = dict([('ParameterType', _teleserviceNotProvisioned_val_ParameterType), ('errorCode', ('local', 11))])
    
    #-----< noHandoverNumberAvailable >-----#
    noHandoverNumberAvailable = CLASS(name='noHandoverNumberAvailable', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    noHandoverNumberAvailable._val = dict([('errorCode', ('local', 25))])
    
    #-----< subsequentHandoverFailure >-----#
    subsequentHandoverFailure = CLASS(name='subsequentHandoverFailure', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    subsequentHandoverFailure._val = dict([('errorCode', ('local', 26))])
    
    #-----< targetCellOutsideGroupCallArea >-----#
    targetCellOutsideGroupCallArea = CLASS(name='targetCellOutsideGroupCallArea', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _targetCellOutsideGroupCallArea_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TargetCellOutsideGCA-Param')))
    targetCellOutsideGroupCallArea._val = dict([('ParameterType', _targetCellOutsideGroupCallArea_val_ParameterType), ('errorCode', ('local', 42))])
    
    #-----< tracingBufferFull >-----#
    tracingBufferFull = CLASS(name='tracingBufferFull', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _tracingBufferFull_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TracingBufferFullParam')))
    tracingBufferFull._val = dict([('ParameterType', _tracingBufferFull_val_ParameterType), ('errorCode', ('local', 40))])
    
    #-----< noRoamingNumberAvailable >-----#
    noRoamingNumberAvailable = CLASS(name='noRoamingNumberAvailable', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _noRoamingNumberAvailable_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoRoamingNbParam')))
    noRoamingNumberAvailable._val = dict([('ParameterType', _noRoamingNumberAvailable_val_ParameterType), ('errorCode', ('local', 39))])
    
    #-----< absentSubscriber >-----#
    absentSubscriber = CLASS(name='absentSubscriber', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _absentSubscriber_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    absentSubscriber._val = dict([('ParameterType', _absentSubscriber_val_ParameterType), ('errorCode', ('local', 27))])
    
    #-----< busySubscriber >-----#
    busySubscriber = CLASS(name='busySubscriber', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _busySubscriber_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BusySubscriberParam')))
    busySubscriber._val = dict([('ParameterType', _busySubscriber_val_ParameterType), ('errorCode', ('local', 45))])
    
    #-----< noSubscriberReply >-----#
    noSubscriberReply = CLASS(name='noSubscriberReply', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _noSubscriberReply_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoSubscriberReplyParam')))
    noSubscriberReply._val = dict([('ParameterType', _noSubscriberReply_val_ParameterType), ('errorCode', ('local', 46))])
    
    #-----< callBarred >-----#
    callBarred = CLASS(name='callBarred', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _callBarred_val_ParameterType = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    callBarred._val = dict([('ParameterType', _callBarred_val_ParameterType), ('errorCode', ('local', 13))])
    
    #-----< forwardingViolation >-----#
    forwardingViolation = CLASS(name='forwardingViolation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _forwardingViolation_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ForwardingViolationParam')))
    forwardingViolation._val = dict([('ParameterType', _forwardingViolation_val_ParameterType), ('errorCode', ('local', 14))])
    
    #-----< forwardingFailed >-----#
    forwardingFailed = CLASS(name='forwardingFailed', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _forwardingFailed_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ForwardingFailedParam')))
    forwardingFailed._val = dict([('ParameterType', _forwardingFailed_val_ParameterType), ('errorCode', ('local', 47))])
    
    #-----< cug-Reject >-----#
    cug_Reject = CLASS(name='cug-Reject', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _cug_Reject_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CUG-RejectParam')))
    cug_Reject._val = dict([('ParameterType', _cug_Reject_val_ParameterType), ('errorCode', ('local', 15))])
    
    #-----< or-NotAllowed >-----#
    or_NotAllowed = CLASS(name='or-NotAllowed', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _or_NotAllowed_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'OR-NotAllowedParam')))
    or_NotAllowed._val = dict([('ParameterType', _or_NotAllowed_val_ParameterType), ('errorCode', ('local', 48))])
    
    #-----< ati-NotAllowed >-----#
    ati_NotAllowed = CLASS(name='ati-NotAllowed', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _ati_NotAllowed_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATI-NotAllowedParam')))
    ati_NotAllowed._val = dict([('ParameterType', _ati_NotAllowed_val_ParameterType), ('errorCode', ('local', 49))])
    
    #-----< atsi-NotAllowed >-----#
    atsi_NotAllowed = CLASS(name='atsi-NotAllowed', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _atsi_NotAllowed_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATSI-NotAllowedParam')))
    atsi_NotAllowed._val = dict([('ParameterType', _atsi_NotAllowed_val_ParameterType), ('errorCode', ('local', 60))])
    
    #-----< atm-NotAllowed >-----#
    atm_NotAllowed = CLASS(name='atm-NotAllowed', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _atm_NotAllowed_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATM-NotAllowedParam')))
    atm_NotAllowed._val = dict([('ParameterType', _atm_NotAllowed_val_ParameterType), ('errorCode', ('local', 61))])
    
    #-----< informationNotAvailable >-----#
    informationNotAvailable = CLASS(name='informationNotAvailable', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _informationNotAvailable_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'InformationNotAvailableParam')))
    informationNotAvailable._val = dict([('ParameterType', _informationNotAvailable_val_ParameterType), ('errorCode', ('local', 62))])
    
    #-----< illegalSS-Operation >-----#
    illegalSS_Operation = CLASS(name='illegalSS-Operation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _illegalSS_Operation_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSS-OperationParam')))
    illegalSS_Operation._val = dict([('ParameterType', _illegalSS_Operation_val_ParameterType), ('errorCode', ('local', 16))])
    
    #-----< ss-ErrorStatus >-----#
    ss_ErrorStatus = CLASS(name='ss-ErrorStatus', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _ss_ErrorStatus_val_ParameterType = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    ss_ErrorStatus._val = dict([('ParameterType', _ss_ErrorStatus_val_ParameterType), ('errorCode', ('local', 17))])
    
    #-----< ss-NotAvailable >-----#
    ss_NotAvailable = CLASS(name='ss-NotAvailable', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _ss_NotAvailable_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-NotAvailableParam')))
    ss_NotAvailable._val = dict([('ParameterType', _ss_NotAvailable_val_ParameterType), ('errorCode', ('local', 18))])
    
    #-----< ss-SubscriptionViolation >-----#
    ss_SubscriptionViolation = CLASS(name='ss-SubscriptionViolation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _ss_SubscriptionViolation_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-SubscriptionViolationParam')))
    ss_SubscriptionViolation._val = dict([('ParameterType', _ss_SubscriptionViolation_val_ParameterType), ('errorCode', ('local', 19))])
    
    #-----< ss-Incompatibility >-----#
    ss_Incompatibility = CLASS(name='ss-Incompatibility', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _ss_Incompatibility_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    ss_Incompatibility._val = dict([('ParameterType', _ss_Incompatibility_val_ParameterType), ('errorCode', ('local', 20))])
    
    #-----< unknownAlphabet >-----#
    unknownAlphabet = CLASS(name='unknownAlphabet', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    unknownAlphabet._val = dict([('errorCode', ('local', 71))])
    
    #-----< ussd-Busy >-----#
    ussd_Busy = CLASS(name='ussd-Busy', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    ussd_Busy._val = dict([('errorCode', ('local', 72))])
    
    #-----< pw-RegistrationFailure >-----#
    pw_RegistrationFailure = CLASS(name='pw-RegistrationFailure', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _pw_RegistrationFailure_val_ParameterType = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'PW-RegistrationFailureCause')))
    pw_RegistrationFailure._val = dict([('ParameterType', _pw_RegistrationFailure_val_ParameterType), ('errorCode', ('local', 37))])
    
    #-----< negativePW-Check >-----#
    negativePW_Check = CLASS(name='negativePW-Check', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    negativePW_Check._val = dict([('errorCode', ('local', 38))])
    
    #-----< numberOfPW-AttemptsViolation >-----#
    numberOfPW_AttemptsViolation = CLASS(name='numberOfPW-AttemptsViolation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    numberOfPW_AttemptsViolation._val = dict([('errorCode', ('local', 43))])
    
    #-----< shortTermDenial >-----#
    shortTermDenial = CLASS(name='shortTermDenial', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _shortTermDenial_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ShortTermDenialParam')))
    shortTermDenial._val = dict([('ParameterType', _shortTermDenial_val_ParameterType), ('errorCode', ('local', 29))])
    
    #-----< longTermDenial >-----#
    longTermDenial = CLASS(name='longTermDenial', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _longTermDenial_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'LongTermDenialParam')))
    longTermDenial._val = dict([('ParameterType', _longTermDenial_val_ParameterType), ('errorCode', ('local', 30))])
    
    #-----< subscriberBusyForMT-SMS >-----#
    subscriberBusyForMT_SMS = CLASS(name='subscriberBusyForMT-SMS', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _subscriberBusyForMT_SMS_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SubBusyForMT-SMS-Param')))
    subscriberBusyForMT_SMS._val = dict([('ParameterType', _subscriberBusyForMT_SMS_val_ParameterType), ('errorCode', ('local', 31))])
    
    #-----< sm-DeliveryFailure >-----#
    sm_DeliveryFailure = CLASS(name='sm-DeliveryFailure', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _sm_DeliveryFailure_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SM-DeliveryFailureCause')))
    sm_DeliveryFailure._val = dict([('ParameterType', _sm_DeliveryFailure_val_ParameterType), ('errorCode', ('local', 32))])
    
    #-----< messageWaitingListFull >-----#
    messageWaitingListFull = CLASS(name='messageWaitingListFull', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _messageWaitingListFull_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'MessageWaitListFullParam')))
    messageWaitingListFull._val = dict([('ParameterType', _messageWaitingListFull_val_ParameterType), ('errorCode', ('local', 33))])
    
    #-----< absentSubscriberSM >-----#
    absentSubscriberSM = CLASS(name='absentSubscriberSM', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _absentSubscriberSM_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberSM-Param')))
    absentSubscriberSM._val = dict([('ParameterType', _absentSubscriberSM_val_ParameterType), ('errorCode', ('local', 6))])
    
    #-----< noGroupCallNumberAvailable >-----#
    noGroupCallNumberAvailable = CLASS(name='noGroupCallNumberAvailable', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _noGroupCallNumberAvailable_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoGroupCallNbParam')))
    noGroupCallNumberAvailable._val = dict([('ParameterType', _noGroupCallNumberAvailable_val_ParameterType), ('errorCode', ('local', 50))])
    
    #-----< ongoingGroupCall >-----#
    ongoingGroupCall = CLASS(name='ongoingGroupCall', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _ongoingGroupCall_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'OngoingGroupCallParam')))
    ongoingGroupCall._val = dict([('ParameterType', _ongoingGroupCall_val_ParameterType), ('errorCode', ('local', 22))])
    
    #-----< unauthorizedRequestingNetwork >-----#
    unauthorizedRequestingNetwork = CLASS(name='unauthorizedRequestingNetwork', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _unauthorizedRequestingNetwork_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedRequestingNetwork-Param')))
    unauthorizedRequestingNetwork._val = dict([('ParameterType', _unauthorizedRequestingNetwork_val_ParameterType), ('errorCode', ('local', 52))])
    
    #-----< unauthorizedLCSClient >-----#
    unauthorizedLCSClient = CLASS(name='unauthorizedLCSClient', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _unauthorizedLCSClient_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedLCSClient-Param')))
    unauthorizedLCSClient._val = dict([('ParameterType', _unauthorizedLCSClient_val_ParameterType), ('errorCode', ('local', 53))])
    
    #-----< positionMethodFailure >-----#
    positionMethodFailure = CLASS(name='positionMethodFailure', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _positionMethodFailure_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'PositionMethodFailure-Param')))
    positionMethodFailure._val = dict([('ParameterType', _positionMethodFailure_val_ParameterType), ('errorCode', ('local', 54))])
    
    #-----< unknownOrUnreachableLCSClient >-----#
    unknownOrUnreachableLCSClient = CLASS(name='unknownOrUnreachableLCSClient', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _unknownOrUnreachableLCSClient_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownOrUnreachableLCSClient-Param')))
    unknownOrUnreachableLCSClient._val = dict([('ParameterType', _unknownOrUnreachableLCSClient_val_ParameterType), ('errorCode', ('local', 58))])
    
    #-----< mm-EventNotSupported >-----#
    mm_EventNotSupported = CLASS(name='mm-EventNotSupported', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _mm_EventNotSupported_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'MM-EventNotSupported-Param')))
    mm_EventNotSupported._val = dict([('ParameterType', _mm_EventNotSupported_val_ParameterType), ('errorCode', ('local', 59))])
    
    _all_ = [
        systemFailure,
        _systemFailure_val_ParameterType,
        dataMissing,
        _dataMissing_val_ParameterType,
        unexpectedDataValue,
        _unexpectedDataValue_val_ParameterType,
        facilityNotSupported,
        _facilityNotSupported_val_ParameterType,
        incompatibleTerminal,
        _incompatibleTerminal_val_ParameterType,
        resourceLimitation,
        _resourceLimitation_val_ParameterType,
        unknownSubscriber,
        _unknownSubscriber_val_ParameterType,
        numberChanged,
        _numberChanged_val_ParameterType,
        unknownMSC,
        unidentifiedSubscriber,
        _unidentifiedSubscriber_val_ParameterType,
        unknownEquipment,
        roamingNotAllowed,
        _roamingNotAllowed_val_ParameterType,
        illegalSubscriber,
        _illegalSubscriber_val_ParameterType,
        illegalEquipment,
        _illegalEquipment_val_ParameterType,
        bearerServiceNotProvisioned,
        _bearerServiceNotProvisioned_val_ParameterType,
        teleserviceNotProvisioned,
        _teleserviceNotProvisioned_val_ParameterType,
        noHandoverNumberAvailable,
        subsequentHandoverFailure,
        targetCellOutsideGroupCallArea,
        _targetCellOutsideGroupCallArea_val_ParameterType,
        tracingBufferFull,
        _tracingBufferFull_val_ParameterType,
        noRoamingNumberAvailable,
        _noRoamingNumberAvailable_val_ParameterType,
        absentSubscriber,
        _absentSubscriber_val_ParameterType,
        busySubscriber,
        _busySubscriber_val_ParameterType,
        noSubscriberReply,
        _noSubscriberReply_val_ParameterType,
        callBarred,
        _callBarred_val_ParameterType,
        forwardingViolation,
        _forwardingViolation_val_ParameterType,
        forwardingFailed,
        _forwardingFailed_val_ParameterType,
        cug_Reject,
        _cug_Reject_val_ParameterType,
        or_NotAllowed,
        _or_NotAllowed_val_ParameterType,
        ati_NotAllowed,
        _ati_NotAllowed_val_ParameterType,
        atsi_NotAllowed,
        _atsi_NotAllowed_val_ParameterType,
        atm_NotAllowed,
        _atm_NotAllowed_val_ParameterType,
        informationNotAvailable,
        _informationNotAvailable_val_ParameterType,
        illegalSS_Operation,
        _illegalSS_Operation_val_ParameterType,
        ss_ErrorStatus,
        _ss_ErrorStatus_val_ParameterType,
        ss_NotAvailable,
        _ss_NotAvailable_val_ParameterType,
        ss_SubscriptionViolation,
        _ss_SubscriptionViolation_val_ParameterType,
        ss_Incompatibility,
        _ss_Incompatibility_val_ParameterType,
        unknownAlphabet,
        ussd_Busy,
        pw_RegistrationFailure,
        _pw_RegistrationFailure_val_ParameterType,
        negativePW_Check,
        numberOfPW_AttemptsViolation,
        shortTermDenial,
        _shortTermDenial_val_ParameterType,
        longTermDenial,
        _longTermDenial_val_ParameterType,
        subscriberBusyForMT_SMS,
        _subscriberBusyForMT_SMS_val_ParameterType,
        sm_DeliveryFailure,
        _sm_DeliveryFailure_val_ParameterType,
        messageWaitingListFull,
        _messageWaitingListFull_val_ParameterType,
        absentSubscriberSM,
        _absentSubscriberSM_val_ParameterType,
        noGroupCallNumberAvailable,
        _noGroupCallNumberAvailable_val_ParameterType,
        ongoingGroupCall,
        _ongoingGroupCall_val_ParameterType,
        unauthorizedRequestingNetwork,
        _unauthorizedRequestingNetwork_val_ParameterType,
        unauthorizedLCSClient,
        _unauthorizedLCSClient_val_ParameterType,
        positionMethodFailure,
        _positionMethodFailure_val_ParameterType,
        unknownOrUnreachableLCSClient,
        _unknownOrUnreachableLCSClient_val_ParameterType,
        mm_EventNotSupported,
        _mm_EventNotSupported_val_ParameterType,
    ]

class MAP_ExtensionDataTypes:

    _name_  = 'MAP-ExtensionDataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 21, 19]
    
    _obj_ = [
        'MAP-EXTENSION',
        'ExtensionContainer',
        'SLR-ArgExtensionContainer',
        'PrivateExtensionList',
        'PrivateExtension',
        'maxNumOfPrivateExtensions',
        'ExtensionSet',
        'PCS-Extensions',
        'SLR-Arg-PCS-Extensions',
        ]
    _type_ = [
        'MAP-EXTENSION',
        'ExtensionContainer',
        'SLR-ArgExtensionContainer',
        'PrivateExtensionList',
        'PrivateExtension',
        'PCS-Extensions',
        'SLR-Arg-PCS-Extensions',
        ]
    _set_ = [
        'ExtensionSet',
        ]
    _val_ = [
        'maxNumOfPrivateExtensions',
        ]
    _class_ = [
        'MAP-EXTENSION',
        'ExtensionSet',
        ]
    _param_ = [
        ]
    
    #-----< MAP-EXTENSION >-----#
    MAP_EXTENSION = CLASS(name='MAP-EXTENSION', mode=MODE_TYPE)
    _MAP_EXTENSION_ExtensionType = OPEN(name='ExtensionType', mode=MODE_TYPE, opt=True)
    _MAP_EXTENSION_extensionId = OID(name='extensionId', mode=MODE_VALUE)
    MAP_EXTENSION._cont = ASN1Dict([
        ('ExtensionType', _MAP_EXTENSION_ExtensionType),
        ('extensionId', _MAP_EXTENSION_extensionId),
        ])
    
    #-----< ExtensionContainer >-----#
    ExtensionContainer = SEQ(name='ExtensionContainer', mode=MODE_TYPE)
    _ExtensionContainer_privateExtensionList = SEQ_OF(name='privateExtensionList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'PrivateExtensionList')), opt=True)
    _ExtensionContainer_pcs_Extensions = SEQ(name='pcs-Extensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'PCS-Extensions')), opt=True)
    ExtensionContainer._cont = ASN1Dict([
        ('privateExtensionList', _ExtensionContainer_privateExtensionList),
        ('pcs-Extensions', _ExtensionContainer_pcs_Extensions),
        ])
    ExtensionContainer._ext = []
    
    #-----< SLR-ArgExtensionContainer >-----#
    SLR_ArgExtensionContainer = SEQ(name='SLR-ArgExtensionContainer', mode=MODE_TYPE)
    _SLR_ArgExtensionContainer_privateExtensionList = SEQ_OF(name='privateExtensionList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'PrivateExtensionList')), opt=True)
    _SLR_ArgExtensionContainer_slr_Arg_PCS_Extensions = SEQ(name='slr-Arg-PCS-Extensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'SLR-Arg-PCS-Extensions')), opt=True)
    SLR_ArgExtensionContainer._cont = ASN1Dict([
        ('privateExtensionList', _SLR_ArgExtensionContainer_privateExtensionList),
        ('slr-Arg-PCS-Extensions', _SLR_ArgExtensionContainer_slr_Arg_PCS_Extensions),
        ])
    SLR_ArgExtensionContainer._ext = []
    
    #-----< PrivateExtensionList >-----#
    PrivateExtensionList = SEQ_OF(name='PrivateExtensionList', mode=MODE_TYPE)
    _PrivateExtensionList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'PrivateExtension')))
    PrivateExtensionList._cont = _PrivateExtensionList__item_
    PrivateExtensionList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< PrivateExtension >-----#
    PrivateExtension = SEQ(name='PrivateExtension', mode=MODE_TYPE)
    _PrivateExtension_extId = OID(name='extId', mode=MODE_TYPE, typeref=ASN1RefClassField(('MAP-ExtensionDataTypes', 'MAP-EXTENSION'), ['extensionId']))
    __PrivateExtension_extId_tab = CLASS(name='_tab_MAP-EXTENSION', mode=MODE_SET, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'MAP-EXTENSION')))
    __PrivateExtension_extId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    _PrivateExtension_extId._const_tab = __PrivateExtension_extId_tab
    _PrivateExtension_extId._const_tab_at = None
    _PrivateExtension_extId._const_tab_id = 'extensionId'
    _PrivateExtension_extType = OPEN(name='extType', mode=MODE_TYPE, typeref=ASN1RefClassField(('MAP-ExtensionDataTypes', 'MAP-EXTENSION'), ['ExtensionType']), opt=True)
    __PrivateExtension_extType_tab = CLASS(name='_tab_MAP-EXTENSION', mode=MODE_SET, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'MAP-EXTENSION')))
    __PrivateExtension_extType_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    _PrivateExtension_extType._const_tab = __PrivateExtension_extType_tab
    _PrivateExtension_extType._const_tab_at = ('..', 'extId')
    _PrivateExtension_extType._const_tab_id = 'ExtensionType'
    PrivateExtension._cont = ASN1Dict([
        ('extId', _PrivateExtension_extId),
        ('extType', _PrivateExtension_extType),
        ])
    PrivateExtension._ext = None
    
    #-----< maxNumOfPrivateExtensions >-----#
    maxNumOfPrivateExtensions = INT(name='maxNumOfPrivateExtensions', mode=MODE_VALUE)
    maxNumOfPrivateExtensions._val = 10
    
    #-----< ExtensionSet >-----#
    ExtensionSet = CLASS(name='ExtensionSet', mode=MODE_SET, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'MAP-EXTENSION')))
    ExtensionSet._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< PCS-Extensions >-----#
    PCS_Extensions = SEQ(name='PCS-Extensions', mode=MODE_TYPE)
    PCS_Extensions._cont = ASN1Dict([
        ])
    PCS_Extensions._ext = []
    
    #-----< SLR-Arg-PCS-Extensions >-----#
    SLR_Arg_PCS_Extensions = SEQ(name='SLR-Arg-PCS-Extensions', mode=MODE_TYPE)
    _SLR_Arg_PCS_Extensions_na_ESRK_Request = NULL(name='na-ESRK-Request', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SLR_Arg_PCS_Extensions._cont = ASN1Dict([
        ('na-ESRK-Request', _SLR_Arg_PCS_Extensions_na_ESRK_Request),
        ])
    SLR_Arg_PCS_Extensions._ext = ['na-ESRK-Request']
    
    _all_ = [
        _MAP_EXTENSION_ExtensionType,
        _MAP_EXTENSION_extensionId,
        MAP_EXTENSION,
        _ExtensionContainer_privateExtensionList,
        _ExtensionContainer_pcs_Extensions,
        ExtensionContainer,
        _SLR_ArgExtensionContainer_privateExtensionList,
        _SLR_ArgExtensionContainer_slr_Arg_PCS_Extensions,
        SLR_ArgExtensionContainer,
        _PrivateExtensionList__item_,
        PrivateExtensionList,
        __PrivateExtension_extId_tab,
        _PrivateExtension_extId,
        __PrivateExtension_extType_tab,
        _PrivateExtension_extType,
        PrivateExtension,
        maxNumOfPrivateExtensions,
        ExtensionSet,
        PCS_Extensions,
        _SLR_Arg_PCS_Extensions_na_ESRK_Request,
        SLR_Arg_PCS_Extensions,
    ]

class MAP_Frame:

    _name_  = 'MAP-Frame'
    _oid_   = []
    
    _obj_ = [
        'ZZZZ-Dummy',
        ]
    _type_ = [
        'ZZZZ-Dummy',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< ZZZZ-Dummy >-----#
    ZZZZ_Dummy = NULL(name='ZZZZ-Dummy', mode=MODE_TYPE)
    
    _all_ = [
        ZZZZ_Dummy,
    ]

class MAP_GR_DataTypes:

    _name_  = 'MAP-GR-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 23, 19]
    
    _obj_ = [
        'PrepareGroupCallArg',
        'VSTK',
        'VSTK-RAND',
        'PrepareGroupCallRes',
        'SendGroupCallEndSignalArg',
        'TalkerPriority',
        'SendGroupCallEndSignalRes',
        'ForwardGroupCallSignallingArg',
        'ProcessGroupCallSignallingArg',
        'GroupKeyNumber',
        'CODEC-Info',
        'CipheringAlgorithm',
        'StateAttributes',
        'SendGroupCallInfoArg',
        'RequestedInfo',
        'SendGroupCallInfoRes',
        ]
    _type_ = [
        'PrepareGroupCallArg',
        'VSTK',
        'VSTK-RAND',
        'PrepareGroupCallRes',
        'SendGroupCallEndSignalArg',
        'TalkerPriority',
        'SendGroupCallEndSignalRes',
        'ForwardGroupCallSignallingArg',
        'ProcessGroupCallSignallingArg',
        'GroupKeyNumber',
        'CODEC-Info',
        'CipheringAlgorithm',
        'StateAttributes',
        'SendGroupCallInfoArg',
        'RequestedInfo',
        'SendGroupCallInfoRes',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< PrepareGroupCallArg >-----#
    PrepareGroupCallArg = SEQ(name='PrepareGroupCallArg', mode=MODE_TYPE)
    _PrepareGroupCallArg_teleservice = OCT_STR(name='teleservice', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-TS-Code', 'Ext-TeleserviceCode')))
    _PrepareGroupCallArg_asciCallReference = OCT_STR(name='asciCallReference', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ASCI-CallReference')))
    _PrepareGroupCallArg_codec_Info = OCT_STR(name='codec-Info', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'CODEC-Info')))
    _PrepareGroupCallArg_cipheringAlgorithm = OCT_STR(name='cipheringAlgorithm', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'CipheringAlgorithm')))
    _PrepareGroupCallArg_groupKeyNumber_Vk_Id = INT(name='groupKeyNumber-Vk-Id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-GR-DataTypes', 'GroupKeyNumber')), opt=True)
    _PrepareGroupCallArg_groupKey = OCT_STR(name='groupKey', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Kc')), opt=True)
    _PrepareGroupCallArg_priority = INT(name='priority', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')), opt=True)
    _PrepareGroupCallArg_uplinkFree = NULL(name='uplinkFree', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PrepareGroupCallArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _PrepareGroupCallArg_vstk = OCT_STR(name='vstk', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-GR-DataTypes', 'VSTK')), opt=True)
    _PrepareGroupCallArg_vstk_rand = OCT_STR(name='vstk-rand', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-GR-DataTypes', 'VSTK-RAND')), opt=True)
    _PrepareGroupCallArg_talkerChannelParameter = NULL(name='talkerChannelParameter', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PrepareGroupCallArg_uplinkReplyIndicator = NULL(name='uplinkReplyIndicator', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    PrepareGroupCallArg._cont = ASN1Dict([
        ('teleservice', _PrepareGroupCallArg_teleservice),
        ('asciCallReference', _PrepareGroupCallArg_asciCallReference),
        ('codec-Info', _PrepareGroupCallArg_codec_Info),
        ('cipheringAlgorithm', _PrepareGroupCallArg_cipheringAlgorithm),
        ('groupKeyNumber-Vk-Id', _PrepareGroupCallArg_groupKeyNumber_Vk_Id),
        ('groupKey', _PrepareGroupCallArg_groupKey),
        ('priority', _PrepareGroupCallArg_priority),
        ('uplinkFree', _PrepareGroupCallArg_uplinkFree),
        ('extensionContainer', _PrepareGroupCallArg_extensionContainer),
        ('vstk', _PrepareGroupCallArg_vstk),
        ('vstk-rand', _PrepareGroupCallArg_vstk_rand),
        ('talkerChannelParameter', _PrepareGroupCallArg_talkerChannelParameter),
        ('uplinkReplyIndicator', _PrepareGroupCallArg_uplinkReplyIndicator),
        ])
    PrepareGroupCallArg._ext = ['vstk', 'vstk-rand', 'talkerChannelParameter', 'uplinkReplyIndicator']
    
    #-----< VSTK >-----#
    VSTK = OCT_STR(name='VSTK', mode=MODE_TYPE)
    VSTK._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< VSTK-RAND >-----#
    VSTK_RAND = OCT_STR(name='VSTK-RAND', mode=MODE_TYPE)
    VSTK_RAND._const_sz = ASN1Set(rv=[5], rr=[], ev=None, er=[])
    
    #-----< PrepareGroupCallRes >-----#
    PrepareGroupCallRes = SEQ(name='PrepareGroupCallRes', mode=MODE_TYPE)
    _PrepareGroupCallRes_groupCallNumber = OCT_STR(name='groupCallNumber', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _PrepareGroupCallRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    PrepareGroupCallRes._cont = ASN1Dict([
        ('groupCallNumber', _PrepareGroupCallRes_groupCallNumber),
        ('extensionContainer', _PrepareGroupCallRes_extensionContainer),
        ])
    PrepareGroupCallRes._ext = []
    
    #-----< SendGroupCallEndSignalArg >-----#
    SendGroupCallEndSignalArg = SEQ(name='SendGroupCallEndSignalArg', mode=MODE_TYPE)
    _SendGroupCallEndSignalArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _SendGroupCallEndSignalArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SendGroupCallEndSignalArg_talkerPriority = ENUM(name='talkerPriority', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-GR-DataTypes', 'TalkerPriority')), opt=True)
    _SendGroupCallEndSignalArg_additionalInfo = BIT_STR(name='additionalInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdditionalInfo')), opt=True)
    SendGroupCallEndSignalArg._cont = ASN1Dict([
        ('imsi', _SendGroupCallEndSignalArg_imsi),
        ('extensionContainer', _SendGroupCallEndSignalArg_extensionContainer),
        ('talkerPriority', _SendGroupCallEndSignalArg_talkerPriority),
        ('additionalInfo', _SendGroupCallEndSignalArg_additionalInfo),
        ])
    SendGroupCallEndSignalArg._ext = ['talkerPriority', 'additionalInfo']
    
    #-----< TalkerPriority >-----#
    TalkerPriority = ENUM(name='TalkerPriority', mode=MODE_TYPE)
    TalkerPriority._cont = ASN1Dict([('normal', 0), ('privileged', 1), ('emergency', 2)])
    TalkerPriority._ext = None
    
    #-----< SendGroupCallEndSignalRes >-----#
    SendGroupCallEndSignalRes = SEQ(name='SendGroupCallEndSignalRes', mode=MODE_TYPE)
    _SendGroupCallEndSignalRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SendGroupCallEndSignalRes._cont = ASN1Dict([
        ('extensionContainer', _SendGroupCallEndSignalRes_extensionContainer),
        ])
    SendGroupCallEndSignalRes._ext = []
    
    #-----< ForwardGroupCallSignallingArg >-----#
    ForwardGroupCallSignallingArg = SEQ(name='ForwardGroupCallSignallingArg', mode=MODE_TYPE)
    _ForwardGroupCallSignallingArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _ForwardGroupCallSignallingArg_uplinkRequestAck = NULL(name='uplinkRequestAck', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ForwardGroupCallSignallingArg_uplinkReleaseIndication = NULL(name='uplinkReleaseIndication', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ForwardGroupCallSignallingArg_uplinkRejectCommand = NULL(name='uplinkRejectCommand', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ForwardGroupCallSignallingArg_uplinkSeizedCommand = NULL(name='uplinkSeizedCommand', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ForwardGroupCallSignallingArg_uplinkReleaseCommand = NULL(name='uplinkReleaseCommand', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ForwardGroupCallSignallingArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ForwardGroupCallSignallingArg_stateAttributes = SEQ(name='stateAttributes', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-GR-DataTypes', 'StateAttributes')), opt=True)
    _ForwardGroupCallSignallingArg_talkerPriority = ENUM(name='talkerPriority', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-GR-DataTypes', 'TalkerPriority')), opt=True)
    _ForwardGroupCallSignallingArg_additionalInfo = BIT_STR(name='additionalInfo', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdditionalInfo')), opt=True)
    _ForwardGroupCallSignallingArg_emergencyModeResetCommandFlag = NULL(name='emergencyModeResetCommandFlag', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ForwardGroupCallSignallingArg_sm_RP_UI = OCT_STR(name='sm-RP-UI', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')), opt=True)
    _ForwardGroupCallSignallingArg_an_APDU = SEQ(name='an-APDU', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AccessNetworkSignalInfo')), opt=True)
    ForwardGroupCallSignallingArg._cont = ASN1Dict([
        ('imsi', _ForwardGroupCallSignallingArg_imsi),
        ('uplinkRequestAck', _ForwardGroupCallSignallingArg_uplinkRequestAck),
        ('uplinkReleaseIndication', _ForwardGroupCallSignallingArg_uplinkReleaseIndication),
        ('uplinkRejectCommand', _ForwardGroupCallSignallingArg_uplinkRejectCommand),
        ('uplinkSeizedCommand', _ForwardGroupCallSignallingArg_uplinkSeizedCommand),
        ('uplinkReleaseCommand', _ForwardGroupCallSignallingArg_uplinkReleaseCommand),
        ('extensionContainer', _ForwardGroupCallSignallingArg_extensionContainer),
        ('stateAttributes', _ForwardGroupCallSignallingArg_stateAttributes),
        ('talkerPriority', _ForwardGroupCallSignallingArg_talkerPriority),
        ('additionalInfo', _ForwardGroupCallSignallingArg_additionalInfo),
        ('emergencyModeResetCommandFlag', _ForwardGroupCallSignallingArg_emergencyModeResetCommandFlag),
        ('sm-RP-UI', _ForwardGroupCallSignallingArg_sm_RP_UI),
        ('an-APDU', _ForwardGroupCallSignallingArg_an_APDU),
        ])
    ForwardGroupCallSignallingArg._ext = ['stateAttributes', 'talkerPriority', 'additionalInfo', 'emergencyModeResetCommandFlag', 'sm-RP-UI', 'an-APDU']
    
    #-----< ProcessGroupCallSignallingArg >-----#
    ProcessGroupCallSignallingArg = SEQ(name='ProcessGroupCallSignallingArg', mode=MODE_TYPE)
    _ProcessGroupCallSignallingArg_uplinkRequest = NULL(name='uplinkRequest', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProcessGroupCallSignallingArg_uplinkReleaseIndication = NULL(name='uplinkReleaseIndication', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProcessGroupCallSignallingArg_releaseGroupCall = NULL(name='releaseGroupCall', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProcessGroupCallSignallingArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ProcessGroupCallSignallingArg_talkerPriority = ENUM(name='talkerPriority', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-GR-DataTypes', 'TalkerPriority')), opt=True)
    _ProcessGroupCallSignallingArg_additionalInfo = BIT_STR(name='additionalInfo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdditionalInfo')), opt=True)
    _ProcessGroupCallSignallingArg_emergencyModeResetCommandFlag = NULL(name='emergencyModeResetCommandFlag', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProcessGroupCallSignallingArg_an_APDU = SEQ(name='an-APDU', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AccessNetworkSignalInfo')), opt=True)
    ProcessGroupCallSignallingArg._cont = ASN1Dict([
        ('uplinkRequest', _ProcessGroupCallSignallingArg_uplinkRequest),
        ('uplinkReleaseIndication', _ProcessGroupCallSignallingArg_uplinkReleaseIndication),
        ('releaseGroupCall', _ProcessGroupCallSignallingArg_releaseGroupCall),
        ('extensionContainer', _ProcessGroupCallSignallingArg_extensionContainer),
        ('talkerPriority', _ProcessGroupCallSignallingArg_talkerPriority),
        ('additionalInfo', _ProcessGroupCallSignallingArg_additionalInfo),
        ('emergencyModeResetCommandFlag', _ProcessGroupCallSignallingArg_emergencyModeResetCommandFlag),
        ('an-APDU', _ProcessGroupCallSignallingArg_an_APDU),
        ])
    ProcessGroupCallSignallingArg._ext = ['talkerPriority', 'additionalInfo', 'emergencyModeResetCommandFlag', 'an-APDU']
    
    #-----< GroupKeyNumber >-----#
    GroupKeyNumber = INT(name='GroupKeyNumber', mode=MODE_TYPE)
    GroupKeyNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    
    #-----< CODEC-Info >-----#
    CODEC_Info = OCT_STR(name='CODEC-Info', mode=MODE_TYPE)
    CODEC_Info._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=10)], ev=None, er=[])
    
    #-----< CipheringAlgorithm >-----#
    CipheringAlgorithm = OCT_STR(name='CipheringAlgorithm', mode=MODE_TYPE)
    CipheringAlgorithm._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< StateAttributes >-----#
    StateAttributes = SEQ(name='StateAttributes', mode=MODE_TYPE)
    _StateAttributes_downlinkAttached = NULL(name='downlinkAttached', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _StateAttributes_uplinkAttached = NULL(name='uplinkAttached', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _StateAttributes_dualCommunication = NULL(name='dualCommunication', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _StateAttributes_callOriginator = NULL(name='callOriginator', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    StateAttributes._cont = ASN1Dict([
        ('downlinkAttached', _StateAttributes_downlinkAttached),
        ('uplinkAttached', _StateAttributes_uplinkAttached),
        ('dualCommunication', _StateAttributes_dualCommunication),
        ('callOriginator', _StateAttributes_callOriginator),
        ])
    StateAttributes._ext = None
    
    #-----< SendGroupCallInfoArg >-----#
    SendGroupCallInfoArg = SEQ(name='SendGroupCallInfoArg', mode=MODE_TYPE)
    _SendGroupCallInfoArg_requestedInfo = ENUM(name='requestedInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'RequestedInfo')))
    _SendGroupCallInfoArg_groupId = OCT_STR(name='groupId', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Long-GroupId')))
    _SendGroupCallInfoArg_teleservice = OCT_STR(name='teleservice', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-TS-Code', 'Ext-TeleserviceCode')))
    _SendGroupCallInfoArg_cellId = OCT_STR(name='cellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GlobalCellId')), opt=True)
    _SendGroupCallInfoArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _SendGroupCallInfoArg_tmsi = OCT_STR(name='tmsi', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'TMSI')), opt=True)
    _SendGroupCallInfoArg_additionalInfo = BIT_STR(name='additionalInfo', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdditionalInfo')), opt=True)
    _SendGroupCallInfoArg_talkerPriority = ENUM(name='talkerPriority', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-GR-DataTypes', 'TalkerPriority')), opt=True)
    _SendGroupCallInfoArg_cksn = OCT_STR(name='cksn', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Cksn')), opt=True)
    _SendGroupCallInfoArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SendGroupCallInfoArg._cont = ASN1Dict([
        ('requestedInfo', _SendGroupCallInfoArg_requestedInfo),
        ('groupId', _SendGroupCallInfoArg_groupId),
        ('teleservice', _SendGroupCallInfoArg_teleservice),
        ('cellId', _SendGroupCallInfoArg_cellId),
        ('imsi', _SendGroupCallInfoArg_imsi),
        ('tmsi', _SendGroupCallInfoArg_tmsi),
        ('additionalInfo', _SendGroupCallInfoArg_additionalInfo),
        ('talkerPriority', _SendGroupCallInfoArg_talkerPriority),
        ('cksn', _SendGroupCallInfoArg_cksn),
        ('extensionContainer', _SendGroupCallInfoArg_extensionContainer),
        ])
    SendGroupCallInfoArg._ext = []
    
    #-----< RequestedInfo >-----#
    RequestedInfo = ENUM(name='RequestedInfo', mode=MODE_TYPE)
    RequestedInfo._cont = ASN1Dict([('anchorMSC-AddressAndASCI-CallReference', 0), ('imsiAndAdditionalInfoAndAdditionalSubscription', 1)])
    RequestedInfo._ext = []
    
    #-----< SendGroupCallInfoRes >-----#
    SendGroupCallInfoRes = SEQ(name='SendGroupCallInfoRes', mode=MODE_TYPE)
    _SendGroupCallInfoRes_anchorMSC_Address = OCT_STR(name='anchorMSC-Address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SendGroupCallInfoRes_asciCallReference = OCT_STR(name='asciCallReference', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ASCI-CallReference')), opt=True)
    _SendGroupCallInfoRes_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _SendGroupCallInfoRes_additionalInfo = BIT_STR(name='additionalInfo', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdditionalInfo')), opt=True)
    _SendGroupCallInfoRes_additionalSubscriptions = BIT_STR(name='additionalSubscriptions', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdditionalSubscriptions')), opt=True)
    _SendGroupCallInfoRes_kc = OCT_STR(name='kc', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Kc')), opt=True)
    _SendGroupCallInfoRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SendGroupCallInfoRes._cont = ASN1Dict([
        ('anchorMSC-Address', _SendGroupCallInfoRes_anchorMSC_Address),
        ('asciCallReference', _SendGroupCallInfoRes_asciCallReference),
        ('imsi', _SendGroupCallInfoRes_imsi),
        ('additionalInfo', _SendGroupCallInfoRes_additionalInfo),
        ('additionalSubscriptions', _SendGroupCallInfoRes_additionalSubscriptions),
        ('kc', _SendGroupCallInfoRes_kc),
        ('extensionContainer', _SendGroupCallInfoRes_extensionContainer),
        ])
    SendGroupCallInfoRes._ext = []
    
    _all_ = [
        _PrepareGroupCallArg_teleservice,
        _PrepareGroupCallArg_asciCallReference,
        _PrepareGroupCallArg_codec_Info,
        _PrepareGroupCallArg_cipheringAlgorithm,
        _PrepareGroupCallArg_groupKeyNumber_Vk_Id,
        _PrepareGroupCallArg_groupKey,
        _PrepareGroupCallArg_priority,
        _PrepareGroupCallArg_uplinkFree,
        _PrepareGroupCallArg_extensionContainer,
        _PrepareGroupCallArg_vstk,
        _PrepareGroupCallArg_vstk_rand,
        _PrepareGroupCallArg_talkerChannelParameter,
        _PrepareGroupCallArg_uplinkReplyIndicator,
        PrepareGroupCallArg,
        VSTK,
        VSTK_RAND,
        _PrepareGroupCallRes_groupCallNumber,
        _PrepareGroupCallRes_extensionContainer,
        PrepareGroupCallRes,
        _SendGroupCallEndSignalArg_imsi,
        _SendGroupCallEndSignalArg_extensionContainer,
        _SendGroupCallEndSignalArg_talkerPriority,
        _SendGroupCallEndSignalArg_additionalInfo,
        SendGroupCallEndSignalArg,
        TalkerPriority,
        _SendGroupCallEndSignalRes_extensionContainer,
        SendGroupCallEndSignalRes,
        _ForwardGroupCallSignallingArg_imsi,
        _ForwardGroupCallSignallingArg_uplinkRequestAck,
        _ForwardGroupCallSignallingArg_uplinkReleaseIndication,
        _ForwardGroupCallSignallingArg_uplinkRejectCommand,
        _ForwardGroupCallSignallingArg_uplinkSeizedCommand,
        _ForwardGroupCallSignallingArg_uplinkReleaseCommand,
        _ForwardGroupCallSignallingArg_extensionContainer,
        _ForwardGroupCallSignallingArg_stateAttributes,
        _ForwardGroupCallSignallingArg_talkerPriority,
        _ForwardGroupCallSignallingArg_additionalInfo,
        _ForwardGroupCallSignallingArg_emergencyModeResetCommandFlag,
        _ForwardGroupCallSignallingArg_sm_RP_UI,
        _ForwardGroupCallSignallingArg_an_APDU,
        ForwardGroupCallSignallingArg,
        _ProcessGroupCallSignallingArg_uplinkRequest,
        _ProcessGroupCallSignallingArg_uplinkReleaseIndication,
        _ProcessGroupCallSignallingArg_releaseGroupCall,
        _ProcessGroupCallSignallingArg_extensionContainer,
        _ProcessGroupCallSignallingArg_talkerPriority,
        _ProcessGroupCallSignallingArg_additionalInfo,
        _ProcessGroupCallSignallingArg_emergencyModeResetCommandFlag,
        _ProcessGroupCallSignallingArg_an_APDU,
        ProcessGroupCallSignallingArg,
        GroupKeyNumber,
        CODEC_Info,
        CipheringAlgorithm,
        _StateAttributes_downlinkAttached,
        _StateAttributes_uplinkAttached,
        _StateAttributes_dualCommunication,
        _StateAttributes_callOriginator,
        StateAttributes,
        _SendGroupCallInfoArg_requestedInfo,
        _SendGroupCallInfoArg_groupId,
        _SendGroupCallInfoArg_teleservice,
        _SendGroupCallInfoArg_cellId,
        _SendGroupCallInfoArg_imsi,
        _SendGroupCallInfoArg_tmsi,
        _SendGroupCallInfoArg_additionalInfo,
        _SendGroupCallInfoArg_talkerPriority,
        _SendGroupCallInfoArg_cksn,
        _SendGroupCallInfoArg_extensionContainer,
        SendGroupCallInfoArg,
        RequestedInfo,
        _SendGroupCallInfoRes_anchorMSC_Address,
        _SendGroupCallInfoRes_asciCallReference,
        _SendGroupCallInfoRes_imsi,
        _SendGroupCallInfoRes_additionalInfo,
        _SendGroupCallInfoRes_additionalSubscriptions,
        _SendGroupCallInfoRes_kc,
        _SendGroupCallInfoRes_extensionContainer,
        SendGroupCallInfoRes,
    ]

class MAP_Group_Call_Operations:

    _name_  = 'MAP-Group-Call-Operations'
    _oid_   = [0, 4, 0, 0, 1, 3, 22, 19]
    
    _obj_ = [
        'prepareGroupCall',
        'sendGroupCallEndSignal',
        'processGroupCallSignalling',
        'forwardGroupCallSignalling',
        'sendGroupCallInfo',
        ]
    _type_ = [
        ]
    _set_ = [
        ]
    _val_ = [
        'prepareGroupCall',
        'sendGroupCallEndSignal',
        'processGroupCallSignalling',
        'forwardGroupCallSignalling',
        'sendGroupCallInfo',
        ]
    _class_ = [
        'prepareGroupCall',
        'sendGroupCallEndSignal',
        'processGroupCallSignalling',
        'forwardGroupCallSignalling',
        'sendGroupCallInfo',
        ]
    _param_ = [
        ]
    
    #-----< prepareGroupCall >-----#
    prepareGroupCall = CLASS(name='prepareGroupCall', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _prepareGroupCall_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'PrepareGroupCallArg')))
    _prepareGroupCall_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'PrepareGroupCallRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoGroupCallNbParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    prepareGroupCall._val = dict([('ArgumentType', _prepareGroupCall_val_ArgumentType), ('ResultType', _prepareGroupCall_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 50))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 39))])
    
    #-----< sendGroupCallEndSignal >-----#
    sendGroupCallEndSignal = CLASS(name='sendGroupCallEndSignal', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _sendGroupCallEndSignal_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallEndSignalArg')))
    _sendGroupCallEndSignal_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallEndSignalRes')))
    sendGroupCallEndSignal._val = dict([('ArgumentType', _sendGroupCallEndSignal_val_ArgumentType), ('ResultType', _sendGroupCallEndSignal_val_ResultType), ('operationCode', ('local', 40))])
    
    #-----< processGroupCallSignalling >-----#
    processGroupCallSignalling = CLASS(name='processGroupCallSignalling', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _processGroupCallSignalling_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'ProcessGroupCallSignallingArg')))
    processGroupCallSignalling._val = dict([('ArgumentType', _processGroupCallSignalling_val_ArgumentType), ('operationCode', ('local', 41))])
    
    #-----< forwardGroupCallSignalling >-----#
    forwardGroupCallSignalling = CLASS(name='forwardGroupCallSignalling', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _forwardGroupCallSignalling_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'ForwardGroupCallSignallingArg')))
    forwardGroupCallSignalling._val = dict([('ArgumentType', _forwardGroupCallSignalling_val_ArgumentType), ('operationCode', ('local', 42))])
    
    #-----< sendGroupCallInfo >-----#
    sendGroupCallInfo = CLASS(name='sendGroupCallInfo', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _sendGroupCallInfo_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallInfoArg')))
    _sendGroupCallInfo_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallInfoRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'OngoingGroupCallParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TeleservNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    sendGroupCallInfo._val = dict([('ArgumentType', _sendGroupCallInfo_val_ArgumentType), ('ResultType', _sendGroupCallInfo_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 22))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 84))])
    
    _all_ = [
        prepareGroupCall,
        _prepareGroupCall_val_ArgumentType,
        _prepareGroupCall_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0,
        __sendRoutingInfo_Errors_val_ParameterType_1,
        __sendRoutingInfo_Errors_val_ParameterType_2,
        sendGroupCallEndSignal,
        _sendGroupCallEndSignal_val_ArgumentType,
        _sendGroupCallEndSignal_val_ResultType,
        processGroupCallSignalling,
        _processGroupCallSignalling_val_ArgumentType,
        forwardGroupCallSignalling,
        _forwardGroupCallSignalling_val_ArgumentType,
        sendGroupCallInfo,
        _sendGroupCallInfo_val_ArgumentType,
        _sendGroupCallInfo_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_1_0,
        __sendRoutingInfo_Errors_val_ParameterType_3,
        __sendRoutingInfo_Errors_val_ParameterType_4,
        __sendRoutingInfo_Errors_val_ParameterType_5,
    ]

class MAP_LCS_DataTypes:

    _name_  = 'MAP-LCS-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 25, 19]
    
    _obj_ = [
        'RoutingInfoForLCS-Arg',
        'RoutingInfoForLCS-Res',
        'LCSLocationInfo',
        'ProvideSubscriberLocation-Arg',
        'LocationType',
        'LocationEstimateType',
        'DeferredLocationEventType',
        'LCS-ClientID',
        'LCSClientType',
        'LCSClientName',
        'NameString',
        'maxNameStringLength',
        'LCSRequestorID',
        'RequestorIDString',
        'maxRequestorIDStringLength',
        'LCS-FormatIndicator',
        'LCS-Priority',
        'LCS-QoS',
        'Horizontal-Accuracy',
        'Vertical-Accuracy',
        'ResponseTime',
        'ResponseTimeCategory',
        'SupportedGADShapes',
        'LCS-ReferenceNumber',
        'LCSCodeword',
        'LCSCodewordString',
        'maxLCSCodewordStringLength',
        'LCS-PrivacyCheck',
        'PrivacyCheckRelatedAction',
        'AreaEventInfo',
        'AreaDefinition',
        'AreaList',
        'maxNumOfAreas',
        'Area',
        'AreaType',
        'AreaIdentification',
        'OccurrenceInfo',
        'IntervalTime',
        'PeriodicLDRInfo',
        'ReportingAmount',
        'maxReportingAmount',
        'ReportingInterval',
        'maxReportingInterval',
        'ReportingPLMNList',
        'PLMNList',
        'maxNumOfReportingPLMN',
        'ReportingPLMN',
        'RAN-Technology',
        'ProvideSubscriberLocation-Res',
        'AccuracyFulfilmentIndicator',
        'Ext-GeographicalInformation',
        'maxExt-GeographicalInformation',
        'VelocityEstimate',
        'PositioningDataInformation',
        'maxPositioningDataInformation',
        'UtranPositioningDataInfo',
        'maxUtranPositioningDataInfo',
        'GeranGANSSpositioningData',
        'maxGeranGANSSpositioningData',
        'UtranGANSSpositioningData',
        'maxUtranGANSSpositioningData',
        'UtranAdditionalPositioningData',
        'maxUtranAdditionalPositioningData',
        'UtranBaroPressureMeas',
        'UtranCivicAddress',
        'Add-GeographicalInformation',
        'maxAdd-GeographicalInformation',
        'SubscriberLocationReport-Arg',
        'Deferredmt-lrData',
        'LCS-Event',
        'TerminationCause',
        'SequenceNumber',
        'ServingNodeAddress',
        'SubscriberLocationReport-Res',
        ]
    _type_ = [
        'RoutingInfoForLCS-Arg',
        'RoutingInfoForLCS-Res',
        'LCSLocationInfo',
        'ProvideSubscriberLocation-Arg',
        'LocationType',
        'LocationEstimateType',
        'DeferredLocationEventType',
        'LCS-ClientID',
        'LCSClientType',
        'LCSClientName',
        'NameString',
        'LCSRequestorID',
        'RequestorIDString',
        'LCS-FormatIndicator',
        'LCS-Priority',
        'LCS-QoS',
        'Horizontal-Accuracy',
        'Vertical-Accuracy',
        'ResponseTime',
        'ResponseTimeCategory',
        'SupportedGADShapes',
        'LCS-ReferenceNumber',
        'LCSCodeword',
        'LCSCodewordString',
        'LCS-PrivacyCheck',
        'PrivacyCheckRelatedAction',
        'AreaEventInfo',
        'AreaDefinition',
        'AreaList',
        'Area',
        'AreaType',
        'AreaIdentification',
        'OccurrenceInfo',
        'IntervalTime',
        'PeriodicLDRInfo',
        'ReportingAmount',
        'ReportingInterval',
        'ReportingPLMNList',
        'PLMNList',
        'ReportingPLMN',
        'RAN-Technology',
        'ProvideSubscriberLocation-Res',
        'AccuracyFulfilmentIndicator',
        'Ext-GeographicalInformation',
        'VelocityEstimate',
        'PositioningDataInformation',
        'UtranPositioningDataInfo',
        'GeranGANSSpositioningData',
        'UtranGANSSpositioningData',
        'UtranAdditionalPositioningData',
        'UtranBaroPressureMeas',
        'UtranCivicAddress',
        'Add-GeographicalInformation',
        'SubscriberLocationReport-Arg',
        'Deferredmt-lrData',
        'LCS-Event',
        'TerminationCause',
        'SequenceNumber',
        'ServingNodeAddress',
        'SubscriberLocationReport-Res',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxNameStringLength',
        'maxRequestorIDStringLength',
        'maxLCSCodewordStringLength',
        'maxNumOfAreas',
        'maxReportingAmount',
        'maxReportingInterval',
        'maxNumOfReportingPLMN',
        'maxExt-GeographicalInformation',
        'maxPositioningDataInformation',
        'maxUtranPositioningDataInfo',
        'maxGeranGANSSpositioningData',
        'maxUtranGANSSpositioningData',
        'maxUtranAdditionalPositioningData',
        'maxAdd-GeographicalInformation',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< RoutingInfoForLCS-Arg >-----#
    RoutingInfoForLCS_Arg = SEQ(name='RoutingInfoForLCS-Arg', mode=MODE_TYPE)
    _RoutingInfoForLCS_Arg_mlcNumber = OCT_STR(name='mlcNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _RoutingInfoForLCS_Arg_targetMS = CHOICE(name='targetMS', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'SubscriberIdentity')))
    _RoutingInfoForLCS_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    RoutingInfoForLCS_Arg._cont = ASN1Dict([
        ('mlcNumber', _RoutingInfoForLCS_Arg_mlcNumber),
        ('targetMS', _RoutingInfoForLCS_Arg_targetMS),
        ('extensionContainer', _RoutingInfoForLCS_Arg_extensionContainer),
        ])
    RoutingInfoForLCS_Arg._ext = []
    
    #-----< RoutingInfoForLCS-Res >-----#
    RoutingInfoForLCS_Res = SEQ(name='RoutingInfoForLCS-Res', mode=MODE_TYPE)
    _RoutingInfoForLCS_Res_targetMS = CHOICE(name='targetMS', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'SubscriberIdentity')))
    _RoutingInfoForLCS_Res_lcsLocationInfo = SEQ(name='lcsLocationInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCSLocationInfo')))
    _RoutingInfoForLCS_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _RoutingInfoForLCS_Res_v_gmlc_Address = OCT_STR(name='v-gmlc-Address', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _RoutingInfoForLCS_Res_h_gmlc_Address = OCT_STR(name='h-gmlc-Address', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _RoutingInfoForLCS_Res_ppr_Address = OCT_STR(name='ppr-Address', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _RoutingInfoForLCS_Res_additional_v_gmlc_Address = OCT_STR(name='additional-v-gmlc-Address', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    RoutingInfoForLCS_Res._cont = ASN1Dict([
        ('targetMS', _RoutingInfoForLCS_Res_targetMS),
        ('lcsLocationInfo', _RoutingInfoForLCS_Res_lcsLocationInfo),
        ('extensionContainer', _RoutingInfoForLCS_Res_extensionContainer),
        ('v-gmlc-Address', _RoutingInfoForLCS_Res_v_gmlc_Address),
        ('h-gmlc-Address', _RoutingInfoForLCS_Res_h_gmlc_Address),
        ('ppr-Address', _RoutingInfoForLCS_Res_ppr_Address),
        ('additional-v-gmlc-Address', _RoutingInfoForLCS_Res_additional_v_gmlc_Address),
        ])
    RoutingInfoForLCS_Res._ext = ['v-gmlc-Address', 'h-gmlc-Address', 'ppr-Address', 'additional-v-gmlc-Address']
    
    #-----< LCSLocationInfo >-----#
    LCSLocationInfo = SEQ(name='LCSLocationInfo', mode=MODE_TYPE)
    _LCSLocationInfo_networkNode_Number = OCT_STR(name='networkNode-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _LCSLocationInfo_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')), opt=True)
    _LCSLocationInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _LCSLocationInfo_gprsNodeIndicator = NULL(name='gprsNodeIndicator', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LCSLocationInfo_additional_Number = CHOICE(name='additional-Number', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'Additional-Number')), opt=True)
    _LCSLocationInfo_supportedLCS_CapabilitySets = BIT_STR(name='supportedLCS-CapabilitySets', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedLCS-CapabilitySets')), opt=True)
    _LCSLocationInfo_additional_LCS_CapabilitySets = BIT_STR(name='additional-LCS-CapabilitySets', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedLCS-CapabilitySets')), opt=True)
    _LCSLocationInfo_mme_Name = OCT_STR(name='mme-Name', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')), opt=True)
    _LCSLocationInfo_aaa_Server_Name = OCT_STR(name='aaa-Server-Name', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')), opt=True)
    _LCSLocationInfo_sgsn_Name = OCT_STR(name='sgsn-Name', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')), opt=True)
    _LCSLocationInfo_sgsn_Realm = OCT_STR(name='sgsn-Realm', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')), opt=True)
    LCSLocationInfo._cont = ASN1Dict([
        ('networkNode-Number', _LCSLocationInfo_networkNode_Number),
        ('lmsi', _LCSLocationInfo_lmsi),
        ('extensionContainer', _LCSLocationInfo_extensionContainer),
        ('gprsNodeIndicator', _LCSLocationInfo_gprsNodeIndicator),
        ('additional-Number', _LCSLocationInfo_additional_Number),
        ('supportedLCS-CapabilitySets', _LCSLocationInfo_supportedLCS_CapabilitySets),
        ('additional-LCS-CapabilitySets', _LCSLocationInfo_additional_LCS_CapabilitySets),
        ('mme-Name', _LCSLocationInfo_mme_Name),
        ('aaa-Server-Name', _LCSLocationInfo_aaa_Server_Name),
        ('sgsn-Name', _LCSLocationInfo_sgsn_Name),
        ('sgsn-Realm', _LCSLocationInfo_sgsn_Realm),
        ])
    LCSLocationInfo._ext = ['gprsNodeIndicator', 'additional-Number', 'supportedLCS-CapabilitySets', 'additional-LCS-CapabilitySets', 'mme-Name', 'aaa-Server-Name', 'sgsn-Name', 'sgsn-Realm']
    
    #-----< ProvideSubscriberLocation-Arg >-----#
    ProvideSubscriberLocation_Arg = SEQ(name='ProvideSubscriberLocation-Arg', mode=MODE_TYPE)
    _ProvideSubscriberLocation_Arg_locationType = SEQ(name='locationType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LocationType')))
    _ProvideSubscriberLocation_Arg_mlc_Number = OCT_STR(name='mlc-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _ProvideSubscriberLocation_Arg_lcs_ClientID = SEQ(name='lcs-ClientID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-ClientID')), opt=True)
    _ProvideSubscriberLocation_Arg_privacyOverride = NULL(name='privacyOverride', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProvideSubscriberLocation_Arg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _ProvideSubscriberLocation_Arg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _ProvideSubscriberLocation_Arg_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')), opt=True)
    _ProvideSubscriberLocation_Arg_imei = OCT_STR(name='imei', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMEI')), opt=True)
    _ProvideSubscriberLocation_Arg_lcs_Priority = OCT_STR(name='lcs-Priority', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-Priority')), opt=True)
    _ProvideSubscriberLocation_Arg_lcs_QoS = SEQ(name='lcs-QoS', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-QoS')), opt=True)
    _ProvideSubscriberLocation_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ProvideSubscriberLocation_Arg_supportedGADShapes = BIT_STR(name='supportedGADShapes', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'SupportedGADShapes')), opt=True)
    _ProvideSubscriberLocation_Arg_lcs_ReferenceNumber = OCT_STR(name='lcs-ReferenceNumber', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-ReferenceNumber')), opt=True)
    _ProvideSubscriberLocation_Arg_lcsServiceTypeID = INT(name='lcsServiceTypeID', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')), opt=True)
    _ProvideSubscriberLocation_Arg_lcsCodeword = SEQ(name='lcsCodeword', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCSCodeword')), opt=True)
    _ProvideSubscriberLocation_Arg_lcs_PrivacyCheck = SEQ(name='lcs-PrivacyCheck', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-PrivacyCheck')), opt=True)
    _ProvideSubscriberLocation_Arg_areaEventInfo = SEQ(name='areaEventInfo', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'AreaEventInfo')), opt=True)
    _ProvideSubscriberLocation_Arg_h_gmlc_Address = OCT_STR(name='h-gmlc-Address', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _ProvideSubscriberLocation_Arg_mo_lrShortCircuitIndicator = NULL(name='mo-lrShortCircuitIndicator', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProvideSubscriberLocation_Arg_periodicLDRInfo = SEQ(name='periodicLDRInfo', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'PeriodicLDRInfo')), opt=True)
    _ProvideSubscriberLocation_Arg_reportingPLMNList = SEQ(name='reportingPLMNList', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ReportingPLMNList')), opt=True)
    ProvideSubscriberLocation_Arg._cont = ASN1Dict([
        ('locationType', _ProvideSubscriberLocation_Arg_locationType),
        ('mlc-Number', _ProvideSubscriberLocation_Arg_mlc_Number),
        ('lcs-ClientID', _ProvideSubscriberLocation_Arg_lcs_ClientID),
        ('privacyOverride', _ProvideSubscriberLocation_Arg_privacyOverride),
        ('imsi', _ProvideSubscriberLocation_Arg_imsi),
        ('msisdn', _ProvideSubscriberLocation_Arg_msisdn),
        ('lmsi', _ProvideSubscriberLocation_Arg_lmsi),
        ('imei', _ProvideSubscriberLocation_Arg_imei),
        ('lcs-Priority', _ProvideSubscriberLocation_Arg_lcs_Priority),
        ('lcs-QoS', _ProvideSubscriberLocation_Arg_lcs_QoS),
        ('extensionContainer', _ProvideSubscriberLocation_Arg_extensionContainer),
        ('supportedGADShapes', _ProvideSubscriberLocation_Arg_supportedGADShapes),
        ('lcs-ReferenceNumber', _ProvideSubscriberLocation_Arg_lcs_ReferenceNumber),
        ('lcsServiceTypeID', _ProvideSubscriberLocation_Arg_lcsServiceTypeID),
        ('lcsCodeword', _ProvideSubscriberLocation_Arg_lcsCodeword),
        ('lcs-PrivacyCheck', _ProvideSubscriberLocation_Arg_lcs_PrivacyCheck),
        ('areaEventInfo', _ProvideSubscriberLocation_Arg_areaEventInfo),
        ('h-gmlc-Address', _ProvideSubscriberLocation_Arg_h_gmlc_Address),
        ('mo-lrShortCircuitIndicator', _ProvideSubscriberLocation_Arg_mo_lrShortCircuitIndicator),
        ('periodicLDRInfo', _ProvideSubscriberLocation_Arg_periodicLDRInfo),
        ('reportingPLMNList', _ProvideSubscriberLocation_Arg_reportingPLMNList),
        ])
    ProvideSubscriberLocation_Arg._ext = ['supportedGADShapes', 'lcs-ReferenceNumber', 'lcsServiceTypeID', 'lcsCodeword', 'lcs-PrivacyCheck', 'areaEventInfo', 'h-gmlc-Address', 'mo-lrShortCircuitIndicator', 'periodicLDRInfo', 'reportingPLMNList']
    
    #-----< LocationType >-----#
    LocationType = SEQ(name='LocationType', mode=MODE_TYPE)
    _LocationType_locationEstimateType = ENUM(name='locationEstimateType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LocationEstimateType')))
    _LocationType_deferredLocationEventType = BIT_STR(name='deferredLocationEventType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'DeferredLocationEventType')), opt=True)
    LocationType._cont = ASN1Dict([
        ('locationEstimateType', _LocationType_locationEstimateType),
        ('deferredLocationEventType', _LocationType_deferredLocationEventType),
        ])
    LocationType._ext = ['deferredLocationEventType']
    
    #-----< LocationEstimateType >-----#
    LocationEstimateType = ENUM(name='LocationEstimateType', mode=MODE_TYPE)
    LocationEstimateType._cont = ASN1Dict([('currentLocation', 0), ('currentOrLastKnownLocation', 1), ('initialLocation', 2), ('activateDeferredLocation', 3), ('cancelDeferredLocation', 4), ('notificationVerificationOnly', 5)])
    LocationEstimateType._ext = ['activateDeferredLocation', 'cancelDeferredLocation', 'notificationVerificationOnly']
    
    #-----< DeferredLocationEventType >-----#
    DeferredLocationEventType = BIT_STR(name='DeferredLocationEventType', mode=MODE_TYPE)
    DeferredLocationEventType._cont = ASN1Dict([('msAvailable', 0), ('enteringIntoArea', 1), ('leavingFromArea', 2), ('beingInsideArea', 3), ('periodicLDR', 4)])
    DeferredLocationEventType._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< LCS-ClientID >-----#
    LCS_ClientID = SEQ(name='LCS-ClientID', mode=MODE_TYPE)
    _LCS_ClientID_lcsClientType = ENUM(name='lcsClientType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCSClientType')))
    _LCS_ClientID_lcsClientExternalID = SEQ(name='lcsClientExternalID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSClientExternalID')), opt=True)
    _LCS_ClientID_lcsClientDialedByMS = OCT_STR(name='lcsClientDialedByMS', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')), opt=True)
    _LCS_ClientID_lcsClientInternalID = ENUM(name='lcsClientInternalID', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSClientInternalID')), opt=True)
    _LCS_ClientID_lcsClientName = SEQ(name='lcsClientName', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCSClientName')), opt=True)
    _LCS_ClientID_lcsAPN = OCT_STR(name='lcsAPN', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN')), opt=True)
    _LCS_ClientID_lcsRequestorID = SEQ(name='lcsRequestorID', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCSRequestorID')), opt=True)
    LCS_ClientID._cont = ASN1Dict([
        ('lcsClientType', _LCS_ClientID_lcsClientType),
        ('lcsClientExternalID', _LCS_ClientID_lcsClientExternalID),
        ('lcsClientDialedByMS', _LCS_ClientID_lcsClientDialedByMS),
        ('lcsClientInternalID', _LCS_ClientID_lcsClientInternalID),
        ('lcsClientName', _LCS_ClientID_lcsClientName),
        ('lcsAPN', _LCS_ClientID_lcsAPN),
        ('lcsRequestorID', _LCS_ClientID_lcsRequestorID),
        ])
    LCS_ClientID._ext = ['lcsAPN', 'lcsRequestorID']
    
    #-----< LCSClientType >-----#
    LCSClientType = ENUM(name='LCSClientType', mode=MODE_TYPE)
    LCSClientType._cont = ASN1Dict([('emergencyServices', 0), ('valueAddedServices', 1), ('plmnOperatorServices', 2), ('lawfulInterceptServices', 3)])
    LCSClientType._ext = []
    
    #-----< LCSClientName >-----#
    LCSClientName = SEQ(name='LCSClientName', mode=MODE_TYPE)
    _LCSClientName_dataCodingScheme = OCT_STR(name='dataCodingScheme', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-DataCodingScheme')))
    _LCSClientName_nameString = OCT_STR(name='nameString', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'NameString')))
    _LCSClientName_lcs_FormatIndicator = ENUM(name='lcs-FormatIndicator', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-FormatIndicator')), opt=True)
    LCSClientName._cont = ASN1Dict([
        ('dataCodingScheme', _LCSClientName_dataCodingScheme),
        ('nameString', _LCSClientName_nameString),
        ('lcs-FormatIndicator', _LCSClientName_lcs_FormatIndicator),
        ])
    LCSClientName._ext = ['lcs-FormatIndicator']
    
    #-----< NameString >-----#
    NameString = OCT_STR(name='NameString', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-String')))
    NameString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=63)], ev=None, er=[])
    
    #-----< maxNameStringLength >-----#
    maxNameStringLength = INT(name='maxNameStringLength', mode=MODE_VALUE)
    maxNameStringLength._val = 63
    
    #-----< LCSRequestorID >-----#
    LCSRequestorID = SEQ(name='LCSRequestorID', mode=MODE_TYPE)
    _LCSRequestorID_dataCodingScheme = OCT_STR(name='dataCodingScheme', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-DataCodingScheme')))
    _LCSRequestorID_requestorIDString = OCT_STR(name='requestorIDString', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'RequestorIDString')))
    _LCSRequestorID_lcs_FormatIndicator = ENUM(name='lcs-FormatIndicator', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-FormatIndicator')), opt=True)
    LCSRequestorID._cont = ASN1Dict([
        ('dataCodingScheme', _LCSRequestorID_dataCodingScheme),
        ('requestorIDString', _LCSRequestorID_requestorIDString),
        ('lcs-FormatIndicator', _LCSRequestorID_lcs_FormatIndicator),
        ])
    LCSRequestorID._ext = ['lcs-FormatIndicator']
    
    #-----< RequestorIDString >-----#
    RequestorIDString = OCT_STR(name='RequestorIDString', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-String')))
    RequestorIDString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=63)], ev=None, er=[])
    
    #-----< maxRequestorIDStringLength >-----#
    maxRequestorIDStringLength = INT(name='maxRequestorIDStringLength', mode=MODE_VALUE)
    maxRequestorIDStringLength._val = 63
    
    #-----< LCS-FormatIndicator >-----#
    LCS_FormatIndicator = ENUM(name='LCS-FormatIndicator', mode=MODE_TYPE)
    LCS_FormatIndicator._cont = ASN1Dict([('logicalName', 0), ('e-mailAddress', 1), ('msisdn', 2), ('url', 3), ('sipUrl', 4)])
    LCS_FormatIndicator._ext = []
    
    #-----< LCS-Priority >-----#
    LCS_Priority = OCT_STR(name='LCS-Priority', mode=MODE_TYPE)
    LCS_Priority._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< LCS-QoS >-----#
    LCS_QoS = SEQ(name='LCS-QoS', mode=MODE_TYPE)
    _LCS_QoS_horizontal_accuracy = OCT_STR(name='horizontal-accuracy', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Horizontal-Accuracy')), opt=True)
    _LCS_QoS_verticalCoordinateRequest = NULL(name='verticalCoordinateRequest', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LCS_QoS_vertical_accuracy = OCT_STR(name='vertical-accuracy', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Vertical-Accuracy')), opt=True)
    _LCS_QoS_responseTime = SEQ(name='responseTime', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ResponseTime')), opt=True)
    _LCS_QoS_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _LCS_QoS_velocityRequest = NULL(name='velocityRequest', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    LCS_QoS._cont = ASN1Dict([
        ('horizontal-accuracy', _LCS_QoS_horizontal_accuracy),
        ('verticalCoordinateRequest', _LCS_QoS_verticalCoordinateRequest),
        ('vertical-accuracy', _LCS_QoS_vertical_accuracy),
        ('responseTime', _LCS_QoS_responseTime),
        ('extensionContainer', _LCS_QoS_extensionContainer),
        ('velocityRequest', _LCS_QoS_velocityRequest),
        ])
    LCS_QoS._ext = ['velocityRequest']
    
    #-----< Horizontal-Accuracy >-----#
    Horizontal_Accuracy = OCT_STR(name='Horizontal-Accuracy', mode=MODE_TYPE)
    Horizontal_Accuracy._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< Vertical-Accuracy >-----#
    Vertical_Accuracy = OCT_STR(name='Vertical-Accuracy', mode=MODE_TYPE)
    Vertical_Accuracy._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< ResponseTime >-----#
    ResponseTime = SEQ(name='ResponseTime', mode=MODE_TYPE)
    _ResponseTime_responseTimeCategory = ENUM(name='responseTimeCategory', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ResponseTimeCategory')))
    ResponseTime._cont = ASN1Dict([
        ('responseTimeCategory', _ResponseTime_responseTimeCategory),
        ])
    ResponseTime._ext = []
    
    #-----< ResponseTimeCategory >-----#
    ResponseTimeCategory = ENUM(name='ResponseTimeCategory', mode=MODE_TYPE)
    ResponseTimeCategory._cont = ASN1Dict([('lowdelay', 0), ('delaytolerant', 1)])
    ResponseTimeCategory._ext = []
    
    #-----< SupportedGADShapes >-----#
    SupportedGADShapes = BIT_STR(name='SupportedGADShapes', mode=MODE_TYPE)
    SupportedGADShapes._cont = ASN1Dict([('ellipsoidPoint', 0), ('ellipsoidPointWithUncertaintyCircle', 1), ('ellipsoidPointWithUncertaintyEllipse', 2), ('polygon', 3), ('ellipsoidPointWithAltitude', 4), ('ellipsoidPointWithAltitudeAndUncertaintyElipsoid', 5), ('ellipsoidArc', 6)])
    SupportedGADShapes._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=7, ub=16)], ev=None, er=[])
    
    #-----< LCS-ReferenceNumber >-----#
    LCS_ReferenceNumber = OCT_STR(name='LCS-ReferenceNumber', mode=MODE_TYPE)
    LCS_ReferenceNumber._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< LCSCodeword >-----#
    LCSCodeword = SEQ(name='LCSCodeword', mode=MODE_TYPE)
    _LCSCodeword_dataCodingScheme = OCT_STR(name='dataCodingScheme', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-DataCodingScheme')))
    _LCSCodeword_lcsCodewordString = OCT_STR(name='lcsCodewordString', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCSCodewordString')))
    LCSCodeword._cont = ASN1Dict([
        ('dataCodingScheme', _LCSCodeword_dataCodingScheme),
        ('lcsCodewordString', _LCSCodeword_lcsCodewordString),
        ])
    LCSCodeword._ext = []
    
    #-----< LCSCodewordString >-----#
    LCSCodewordString = OCT_STR(name='LCSCodewordString', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-String')))
    LCSCodewordString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< maxLCSCodewordStringLength >-----#
    maxLCSCodewordStringLength = INT(name='maxLCSCodewordStringLength', mode=MODE_VALUE)
    maxLCSCodewordStringLength._val = 20
    
    #-----< LCS-PrivacyCheck >-----#
    LCS_PrivacyCheck = SEQ(name='LCS-PrivacyCheck', mode=MODE_TYPE)
    _LCS_PrivacyCheck_callSessionUnrelated = ENUM(name='callSessionUnrelated', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'PrivacyCheckRelatedAction')))
    _LCS_PrivacyCheck_callSessionRelated = ENUM(name='callSessionRelated', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'PrivacyCheckRelatedAction')), opt=True)
    LCS_PrivacyCheck._cont = ASN1Dict([
        ('callSessionUnrelated', _LCS_PrivacyCheck_callSessionUnrelated),
        ('callSessionRelated', _LCS_PrivacyCheck_callSessionRelated),
        ])
    LCS_PrivacyCheck._ext = []
    
    #-----< PrivacyCheckRelatedAction >-----#
    PrivacyCheckRelatedAction = ENUM(name='PrivacyCheckRelatedAction', mode=MODE_TYPE)
    PrivacyCheckRelatedAction._cont = ASN1Dict([('allowedWithoutNotification', 0), ('allowedWithNotification', 1), ('allowedIfNoResponse', 2), ('restrictedIfNoResponse', 3), ('notAllowed', 4)])
    PrivacyCheckRelatedAction._ext = []
    
    #-----< AreaEventInfo >-----#
    AreaEventInfo = SEQ(name='AreaEventInfo', mode=MODE_TYPE)
    _AreaEventInfo_areaDefinition = SEQ(name='areaDefinition', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'AreaDefinition')))
    _AreaEventInfo_occurrenceInfo = ENUM(name='occurrenceInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'OccurrenceInfo')), opt=True)
    _AreaEventInfo_intervalTime = INT(name='intervalTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'IntervalTime')), opt=True)
    AreaEventInfo._cont = ASN1Dict([
        ('areaDefinition', _AreaEventInfo_areaDefinition),
        ('occurrenceInfo', _AreaEventInfo_occurrenceInfo),
        ('intervalTime', _AreaEventInfo_intervalTime),
        ])
    AreaEventInfo._ext = []
    
    #-----< AreaDefinition >-----#
    AreaDefinition = SEQ(name='AreaDefinition', mode=MODE_TYPE)
    _AreaDefinition_areaList = SEQ_OF(name='areaList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'AreaList')))
    AreaDefinition._cont = ASN1Dict([
        ('areaList', _AreaDefinition_areaList),
        ])
    AreaDefinition._ext = []
    
    #-----< AreaList >-----#
    AreaList = SEQ_OF(name='AreaList', mode=MODE_TYPE)
    _AreaList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Area')))
    AreaList._cont = _AreaList__item_
    AreaList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< maxNumOfAreas >-----#
    maxNumOfAreas = INT(name='maxNumOfAreas', mode=MODE_VALUE)
    maxNumOfAreas._val = 10
    
    #-----< Area >-----#
    Area = SEQ(name='Area', mode=MODE_TYPE)
    _Area_areaType = ENUM(name='areaType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'AreaType')))
    _Area_areaIdentification = OCT_STR(name='areaIdentification', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'AreaIdentification')))
    Area._cont = ASN1Dict([
        ('areaType', _Area_areaType),
        ('areaIdentification', _Area_areaIdentification),
        ])
    Area._ext = []
    
    #-----< AreaType >-----#
    AreaType = ENUM(name='AreaType', mode=MODE_TYPE)
    AreaType._cont = ASN1Dict([('countryCode', 0), ('plmnId', 1), ('locationAreaId', 2), ('routingAreaId', 3), ('cellGlobalId', 4), ('utranCellId', 5)])
    AreaType._ext = ['utranCellId']
    
    #-----< AreaIdentification >-----#
    AreaIdentification = OCT_STR(name='AreaIdentification', mode=MODE_TYPE)
    AreaIdentification._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=7)], ev=None, er=[])
    
    #-----< OccurrenceInfo >-----#
    OccurrenceInfo = ENUM(name='OccurrenceInfo', mode=MODE_TYPE)
    OccurrenceInfo._cont = ASN1Dict([('oneTimeEvent', 0), ('multipleTimeEvent', 1)])
    OccurrenceInfo._ext = []
    
    #-----< IntervalTime >-----#
    IntervalTime = INT(name='IntervalTime', mode=MODE_TYPE)
    IntervalTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32767)], ev=None, er=[])
    
    #-----< PeriodicLDRInfo >-----#
    PeriodicLDRInfo = SEQ(name='PeriodicLDRInfo', mode=MODE_TYPE)
    _PeriodicLDRInfo_reportingAmount = INT(name='reportingAmount', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ReportingAmount')))
    _PeriodicLDRInfo_reportingInterval = INT(name='reportingInterval', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ReportingInterval')))
    PeriodicLDRInfo._cont = ASN1Dict([
        ('reportingAmount', _PeriodicLDRInfo_reportingAmount),
        ('reportingInterval', _PeriodicLDRInfo_reportingInterval),
        ])
    PeriodicLDRInfo._ext = []
    
    #-----< ReportingAmount >-----#
    ReportingAmount = INT(name='ReportingAmount', mode=MODE_TYPE)
    ReportingAmount._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8639999)], ev=None, er=[])
    
    #-----< maxReportingAmount >-----#
    maxReportingAmount = INT(name='maxReportingAmount', mode=MODE_VALUE)
    maxReportingAmount._val = 8639999
    
    #-----< ReportingInterval >-----#
    ReportingInterval = INT(name='ReportingInterval', mode=MODE_TYPE)
    ReportingInterval._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8639999)], ev=None, er=[])
    
    #-----< maxReportingInterval >-----#
    maxReportingInterval = INT(name='maxReportingInterval', mode=MODE_VALUE)
    maxReportingInterval._val = 8639999
    
    #-----< ReportingPLMNList >-----#
    ReportingPLMNList = SEQ(name='ReportingPLMNList', mode=MODE_TYPE)
    _ReportingPLMNList_plmn_ListPrioritized = NULL(name='plmn-ListPrioritized', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ReportingPLMNList_plmn_List = SEQ_OF(name='plmn-List', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'PLMNList')))
    ReportingPLMNList._cont = ASN1Dict([
        ('plmn-ListPrioritized', _ReportingPLMNList_plmn_ListPrioritized),
        ('plmn-List', _ReportingPLMNList_plmn_List),
        ])
    ReportingPLMNList._ext = []
    
    #-----< PLMNList >-----#
    PLMNList = SEQ_OF(name='PLMNList', mode=MODE_TYPE)
    _PLMNList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ReportingPLMN')))
    PLMNList._cont = _PLMNList__item_
    PLMNList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< maxNumOfReportingPLMN >-----#
    maxNumOfReportingPLMN = INT(name='maxNumOfReportingPLMN', mode=MODE_VALUE)
    maxNumOfReportingPLMN._val = 20
    
    #-----< ReportingPLMN >-----#
    ReportingPLMN = SEQ(name='ReportingPLMN', mode=MODE_TYPE)
    _ReportingPLMN_plmn_Id = OCT_STR(name='plmn-Id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')))
    _ReportingPLMN_ran_Technology = ENUM(name='ran-Technology', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'RAN-Technology')), opt=True)
    _ReportingPLMN_ran_PeriodicLocationSupport = NULL(name='ran-PeriodicLocationSupport', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ReportingPLMN._cont = ASN1Dict([
        ('plmn-Id', _ReportingPLMN_plmn_Id),
        ('ran-Technology', _ReportingPLMN_ran_Technology),
        ('ran-PeriodicLocationSupport', _ReportingPLMN_ran_PeriodicLocationSupport),
        ])
    ReportingPLMN._ext = []
    
    #-----< RAN-Technology >-----#
    RAN_Technology = ENUM(name='RAN-Technology', mode=MODE_TYPE)
    RAN_Technology._cont = ASN1Dict([('gsm', 0), ('umts', 1)])
    RAN_Technology._ext = []
    
    #-----< ProvideSubscriberLocation-Res >-----#
    ProvideSubscriberLocation_Res = SEQ(name='ProvideSubscriberLocation-Res', mode=MODE_TYPE)
    _ProvideSubscriberLocation_Res_locationEstimate = OCT_STR(name='locationEstimate', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Ext-GeographicalInformation')))
    _ProvideSubscriberLocation_Res_ageOfLocationEstimate = INT(name='ageOfLocationEstimate', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AgeOfLocationInformation')), opt=True)
    _ProvideSubscriberLocation_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ProvideSubscriberLocation_Res_add_LocationEstimate = OCT_STR(name='add-LocationEstimate', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Add-GeographicalInformation')), opt=True)
    _ProvideSubscriberLocation_Res_deferredmt_lrResponseIndicator = NULL(name='deferredmt-lrResponseIndicator', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProvideSubscriberLocation_Res_geranPositioningData = OCT_STR(name='geranPositioningData', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'PositioningDataInformation')), opt=True)
    _ProvideSubscriberLocation_Res_utranPositioningData = OCT_STR(name='utranPositioningData', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranPositioningDataInfo')), opt=True)
    _ProvideSubscriberLocation_Res_cellIdOrSai = CHOICE(name='cellIdOrSai', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'CellGlobalIdOrServiceAreaIdOrLAI')), opt=True)
    _ProvideSubscriberLocation_Res_sai_Present = NULL(name='sai-Present', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProvideSubscriberLocation_Res_accuracyFulfilmentIndicator = ENUM(name='accuracyFulfilmentIndicator', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'AccuracyFulfilmentIndicator')), opt=True)
    _ProvideSubscriberLocation_Res_velocityEstimate = OCT_STR(name='velocityEstimate', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'VelocityEstimate')), opt=True)
    _ProvideSubscriberLocation_Res_mo_lrShortCircuitIndicator = NULL(name='mo-lrShortCircuitIndicator', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProvideSubscriberLocation_Res_geranGANSSpositioningData = OCT_STR(name='geranGANSSpositioningData', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'GeranGANSSpositioningData')), opt=True)
    _ProvideSubscriberLocation_Res_utranGANSSpositioningData = OCT_STR(name='utranGANSSpositioningData', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranGANSSpositioningData')), opt=True)
    _ProvideSubscriberLocation_Res_targetServingNodeForHandover = CHOICE(name='targetServingNodeForHandover', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ServingNodeAddress')), opt=True)
    _ProvideSubscriberLocation_Res_utranAdditionalPositioningData = OCT_STR(name='utranAdditionalPositioningData', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranAdditionalPositioningData')), opt=True)
    _ProvideSubscriberLocation_Res_utranBaroPressureMeas = INT(name='utranBaroPressureMeas', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranBaroPressureMeas')), opt=True)
    _ProvideSubscriberLocation_Res_utranCivicAddress = OCT_STR(name='utranCivicAddress', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranCivicAddress')), opt=True)
    ProvideSubscriberLocation_Res._cont = ASN1Dict([
        ('locationEstimate', _ProvideSubscriberLocation_Res_locationEstimate),
        ('ageOfLocationEstimate', _ProvideSubscriberLocation_Res_ageOfLocationEstimate),
        ('extensionContainer', _ProvideSubscriberLocation_Res_extensionContainer),
        ('add-LocationEstimate', _ProvideSubscriberLocation_Res_add_LocationEstimate),
        ('deferredmt-lrResponseIndicator', _ProvideSubscriberLocation_Res_deferredmt_lrResponseIndicator),
        ('geranPositioningData', _ProvideSubscriberLocation_Res_geranPositioningData),
        ('utranPositioningData', _ProvideSubscriberLocation_Res_utranPositioningData),
        ('cellIdOrSai', _ProvideSubscriberLocation_Res_cellIdOrSai),
        ('sai-Present', _ProvideSubscriberLocation_Res_sai_Present),
        ('accuracyFulfilmentIndicator', _ProvideSubscriberLocation_Res_accuracyFulfilmentIndicator),
        ('velocityEstimate', _ProvideSubscriberLocation_Res_velocityEstimate),
        ('mo-lrShortCircuitIndicator', _ProvideSubscriberLocation_Res_mo_lrShortCircuitIndicator),
        ('geranGANSSpositioningData', _ProvideSubscriberLocation_Res_geranGANSSpositioningData),
        ('utranGANSSpositioningData', _ProvideSubscriberLocation_Res_utranGANSSpositioningData),
        ('targetServingNodeForHandover', _ProvideSubscriberLocation_Res_targetServingNodeForHandover),
        ('utranAdditionalPositioningData', _ProvideSubscriberLocation_Res_utranAdditionalPositioningData),
        ('utranBaroPressureMeas', _ProvideSubscriberLocation_Res_utranBaroPressureMeas),
        ('utranCivicAddress', _ProvideSubscriberLocation_Res_utranCivicAddress),
        ])
    ProvideSubscriberLocation_Res._ext = ['add-LocationEstimate', 'deferredmt-lrResponseIndicator', 'geranPositioningData', 'utranPositioningData', 'cellIdOrSai', 'sai-Present', 'accuracyFulfilmentIndicator', 'velocityEstimate', 'mo-lrShortCircuitIndicator', 'geranGANSSpositioningData', 'utranGANSSpositioningData', 'targetServingNodeForHandover', 'utranAdditionalPositioningData', 'utranBaroPressureMeas', 'utranCivicAddress']
    
    #-----< AccuracyFulfilmentIndicator >-----#
    AccuracyFulfilmentIndicator = ENUM(name='AccuracyFulfilmentIndicator', mode=MODE_TYPE)
    AccuracyFulfilmentIndicator._cont = ASN1Dict([('requestedAccuracyFulfilled', 0), ('requestedAccuracyNotFulfilled', 1)])
    AccuracyFulfilmentIndicator._ext = []
    
    #-----< Ext-GeographicalInformation >-----#
    Ext_GeographicalInformation = OCT_STR(name='Ext-GeographicalInformation', mode=MODE_TYPE)
    Ext_GeographicalInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< maxExt-GeographicalInformation >-----#
    maxExt_GeographicalInformation = INT(name='maxExt-GeographicalInformation', mode=MODE_VALUE)
    maxExt_GeographicalInformation._val = 20
    
    #-----< VelocityEstimate >-----#
    VelocityEstimate = OCT_STR(name='VelocityEstimate', mode=MODE_TYPE)
    VelocityEstimate._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=4, ub=7)], ev=None, er=[])
    
    #-----< PositioningDataInformation >-----#
    PositioningDataInformation = OCT_STR(name='PositioningDataInformation', mode=MODE_TYPE)
    PositioningDataInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=10)], ev=None, er=[])
    
    #-----< maxPositioningDataInformation >-----#
    maxPositioningDataInformation = INT(name='maxPositioningDataInformation', mode=MODE_VALUE)
    maxPositioningDataInformation._val = 10
    
    #-----< UtranPositioningDataInfo >-----#
    UtranPositioningDataInfo = OCT_STR(name='UtranPositioningDataInfo', mode=MODE_TYPE)
    UtranPositioningDataInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=11)], ev=None, er=[])
    
    #-----< maxUtranPositioningDataInfo >-----#
    maxUtranPositioningDataInfo = INT(name='maxUtranPositioningDataInfo', mode=MODE_VALUE)
    maxUtranPositioningDataInfo._val = 11
    
    #-----< GeranGANSSpositioningData >-----#
    GeranGANSSpositioningData = OCT_STR(name='GeranGANSSpositioningData', mode=MODE_TYPE)
    GeranGANSSpositioningData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=10)], ev=None, er=[])
    
    #-----< maxGeranGANSSpositioningData >-----#
    maxGeranGANSSpositioningData = INT(name='maxGeranGANSSpositioningData', mode=MODE_VALUE)
    maxGeranGANSSpositioningData._val = 10
    
    #-----< UtranGANSSpositioningData >-----#
    UtranGANSSpositioningData = OCT_STR(name='UtranGANSSpositioningData', mode=MODE_TYPE)
    UtranGANSSpositioningData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    
    #-----< maxUtranGANSSpositioningData >-----#
    maxUtranGANSSpositioningData = INT(name='maxUtranGANSSpositioningData', mode=MODE_VALUE)
    maxUtranGANSSpositioningData._val = 9
    
    #-----< UtranAdditionalPositioningData >-----#
    UtranAdditionalPositioningData = OCT_STR(name='UtranAdditionalPositioningData', mode=MODE_TYPE)
    UtranAdditionalPositioningData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< maxUtranAdditionalPositioningData >-----#
    maxUtranAdditionalPositioningData = INT(name='maxUtranAdditionalPositioningData', mode=MODE_VALUE)
    maxUtranAdditionalPositioningData._val = 8
    
    #-----< UtranBaroPressureMeas >-----#
    UtranBaroPressureMeas = INT(name='UtranBaroPressureMeas', mode=MODE_TYPE)
    UtranBaroPressureMeas._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=30000, ub=115000)], ev=None, er=[])
    
    #-----< UtranCivicAddress >-----#
    UtranCivicAddress = OCT_STR(name='UtranCivicAddress', mode=MODE_TYPE)
    
    #-----< Add-GeographicalInformation >-----#
    Add_GeographicalInformation = OCT_STR(name='Add-GeographicalInformation', mode=MODE_TYPE)
    Add_GeographicalInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=91)], ev=None, er=[])
    
    #-----< maxAdd-GeographicalInformation >-----#
    maxAdd_GeographicalInformation = INT(name='maxAdd-GeographicalInformation', mode=MODE_VALUE)
    maxAdd_GeographicalInformation._val = 91
    
    #-----< SubscriberLocationReport-Arg >-----#
    SubscriberLocationReport_Arg = SEQ(name='SubscriberLocationReport-Arg', mode=MODE_TYPE)
    _SubscriberLocationReport_Arg_lcs_Event = ENUM(name='lcs-Event', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-Event')))
    _SubscriberLocationReport_Arg_lcs_ClientID = SEQ(name='lcs-ClientID', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-ClientID')))
    _SubscriberLocationReport_Arg_lcsLocationInfo = SEQ(name='lcsLocationInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCSLocationInfo')))
    _SubscriberLocationReport_Arg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SubscriberLocationReport_Arg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _SubscriberLocationReport_Arg_imei = OCT_STR(name='imei', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMEI')), opt=True)
    _SubscriberLocationReport_Arg_na_ESRD = OCT_STR(name='na-ESRD', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SubscriberLocationReport_Arg_na_ESRK = OCT_STR(name='na-ESRK', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SubscriberLocationReport_Arg_locationEstimate = OCT_STR(name='locationEstimate', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Ext-GeographicalInformation')), opt=True)
    _SubscriberLocationReport_Arg_ageOfLocationEstimate = INT(name='ageOfLocationEstimate', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AgeOfLocationInformation')), opt=True)
    _SubscriberLocationReport_Arg_slr_ArgExtensionContainer = SEQ(name='slr-ArgExtensionContainer', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'SLR-ArgExtensionContainer')), opt=True)
    _SubscriberLocationReport_Arg_add_LocationEstimate = OCT_STR(name='add-LocationEstimate', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Add-GeographicalInformation')), opt=True)
    _SubscriberLocationReport_Arg_deferredmt_lrData = SEQ(name='deferredmt-lrData', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Deferredmt-lrData')), opt=True)
    _SubscriberLocationReport_Arg_lcs_ReferenceNumber = OCT_STR(name='lcs-ReferenceNumber', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-ReferenceNumber')), opt=True)
    _SubscriberLocationReport_Arg_geranPositioningData = OCT_STR(name='geranPositioningData', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'PositioningDataInformation')), opt=True)
    _SubscriberLocationReport_Arg_utranPositioningData = OCT_STR(name='utranPositioningData', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranPositioningDataInfo')), opt=True)
    _SubscriberLocationReport_Arg_cellIdOrSai = CHOICE(name='cellIdOrSai', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'CellGlobalIdOrServiceAreaIdOrLAI')), opt=True)
    _SubscriberLocationReport_Arg_h_gmlc_Address = OCT_STR(name='h-gmlc-Address', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _SubscriberLocationReport_Arg_lcsServiceTypeID = INT(name='lcsServiceTypeID', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')), opt=True)
    _SubscriberLocationReport_Arg_sai_Present = NULL(name='sai-Present', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SubscriberLocationReport_Arg_pseudonymIndicator = NULL(name='pseudonymIndicator', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SubscriberLocationReport_Arg_accuracyFulfilmentIndicator = ENUM(name='accuracyFulfilmentIndicator', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'AccuracyFulfilmentIndicator')), opt=True)
    _SubscriberLocationReport_Arg_velocityEstimate = OCT_STR(name='velocityEstimate', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'VelocityEstimate')), opt=True)
    _SubscriberLocationReport_Arg_sequenceNumber = INT(name='sequenceNumber', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'SequenceNumber')), opt=True)
    _SubscriberLocationReport_Arg_periodicLDRInfo = SEQ(name='periodicLDRInfo', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'PeriodicLDRInfo')), opt=True)
    _SubscriberLocationReport_Arg_mo_lrShortCircuitIndicator = NULL(name='mo-lrShortCircuitIndicator', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SubscriberLocationReport_Arg_geranGANSSpositioningData = OCT_STR(name='geranGANSSpositioningData', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'GeranGANSSpositioningData')), opt=True)
    _SubscriberLocationReport_Arg_utranGANSSpositioningData = OCT_STR(name='utranGANSSpositioningData', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranGANSSpositioningData')), opt=True)
    _SubscriberLocationReport_Arg_targetServingNodeForHandover = CHOICE(name='targetServingNodeForHandover', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ServingNodeAddress')), opt=True)
    _SubscriberLocationReport_Arg_utranAdditionalPositioningData = OCT_STR(name='utranAdditionalPositioningData', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranAdditionalPositioningData')), opt=True)
    _SubscriberLocationReport_Arg_utranBaroPressureMeas = INT(name='utranBaroPressureMeas', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranBaroPressureMeas')), opt=True)
    _SubscriberLocationReport_Arg_utranCivicAddress = OCT_STR(name='utranCivicAddress', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranCivicAddress')), opt=True)
    SubscriberLocationReport_Arg._cont = ASN1Dict([
        ('lcs-Event', _SubscriberLocationReport_Arg_lcs_Event),
        ('lcs-ClientID', _SubscriberLocationReport_Arg_lcs_ClientID),
        ('lcsLocationInfo', _SubscriberLocationReport_Arg_lcsLocationInfo),
        ('msisdn', _SubscriberLocationReport_Arg_msisdn),
        ('imsi', _SubscriberLocationReport_Arg_imsi),
        ('imei', _SubscriberLocationReport_Arg_imei),
        ('na-ESRD', _SubscriberLocationReport_Arg_na_ESRD),
        ('na-ESRK', _SubscriberLocationReport_Arg_na_ESRK),
        ('locationEstimate', _SubscriberLocationReport_Arg_locationEstimate),
        ('ageOfLocationEstimate', _SubscriberLocationReport_Arg_ageOfLocationEstimate),
        ('slr-ArgExtensionContainer', _SubscriberLocationReport_Arg_slr_ArgExtensionContainer),
        ('add-LocationEstimate', _SubscriberLocationReport_Arg_add_LocationEstimate),
        ('deferredmt-lrData', _SubscriberLocationReport_Arg_deferredmt_lrData),
        ('lcs-ReferenceNumber', _SubscriberLocationReport_Arg_lcs_ReferenceNumber),
        ('geranPositioningData', _SubscriberLocationReport_Arg_geranPositioningData),
        ('utranPositioningData', _SubscriberLocationReport_Arg_utranPositioningData),
        ('cellIdOrSai', _SubscriberLocationReport_Arg_cellIdOrSai),
        ('h-gmlc-Address', _SubscriberLocationReport_Arg_h_gmlc_Address),
        ('lcsServiceTypeID', _SubscriberLocationReport_Arg_lcsServiceTypeID),
        ('sai-Present', _SubscriberLocationReport_Arg_sai_Present),
        ('pseudonymIndicator', _SubscriberLocationReport_Arg_pseudonymIndicator),
        ('accuracyFulfilmentIndicator', _SubscriberLocationReport_Arg_accuracyFulfilmentIndicator),
        ('velocityEstimate', _SubscriberLocationReport_Arg_velocityEstimate),
        ('sequenceNumber', _SubscriberLocationReport_Arg_sequenceNumber),
        ('periodicLDRInfo', _SubscriberLocationReport_Arg_periodicLDRInfo),
        ('mo-lrShortCircuitIndicator', _SubscriberLocationReport_Arg_mo_lrShortCircuitIndicator),
        ('geranGANSSpositioningData', _SubscriberLocationReport_Arg_geranGANSSpositioningData),
        ('utranGANSSpositioningData', _SubscriberLocationReport_Arg_utranGANSSpositioningData),
        ('targetServingNodeForHandover', _SubscriberLocationReport_Arg_targetServingNodeForHandover),
        ('utranAdditionalPositioningData', _SubscriberLocationReport_Arg_utranAdditionalPositioningData),
        ('utranBaroPressureMeas', _SubscriberLocationReport_Arg_utranBaroPressureMeas),
        ('utranCivicAddress', _SubscriberLocationReport_Arg_utranCivicAddress),
        ])
    SubscriberLocationReport_Arg._ext = ['add-LocationEstimate', 'deferredmt-lrData', 'lcs-ReferenceNumber', 'geranPositioningData', 'utranPositioningData', 'cellIdOrSai', 'h-gmlc-Address', 'lcsServiceTypeID', 'sai-Present', 'pseudonymIndicator', 'accuracyFulfilmentIndicator', 'velocityEstimate', 'sequenceNumber', 'periodicLDRInfo', 'mo-lrShortCircuitIndicator', 'geranGANSSpositioningData', 'utranGANSSpositioningData', 'targetServingNodeForHandover', 'utranAdditionalPositioningData', 'utranBaroPressureMeas', 'utranCivicAddress']
    
    #-----< Deferredmt-lrData >-----#
    Deferredmt_lrData = SEQ(name='Deferredmt-lrData', mode=MODE_TYPE)
    _Deferredmt_lrData_deferredLocationEventType = BIT_STR(name='deferredLocationEventType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'DeferredLocationEventType')))
    _Deferredmt_lrData_terminationCause = ENUM(name='terminationCause', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'TerminationCause')), opt=True)
    _Deferredmt_lrData_lcsLocationInfo = SEQ(name='lcsLocationInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCSLocationInfo')), opt=True)
    Deferredmt_lrData._cont = ASN1Dict([
        ('deferredLocationEventType', _Deferredmt_lrData_deferredLocationEventType),
        ('terminationCause', _Deferredmt_lrData_terminationCause),
        ('lcsLocationInfo', _Deferredmt_lrData_lcsLocationInfo),
        ])
    Deferredmt_lrData._ext = []
    
    #-----< LCS-Event >-----#
    LCS_Event = ENUM(name='LCS-Event', mode=MODE_TYPE)
    LCS_Event._cont = ASN1Dict([('emergencyCallOrigination', 0), ('emergencyCallRelease', 1), ('mo-lr', 2), ('deferredmt-lrResponse', 3), ('deferredmo-lrTTTPInitiation', 4), ('emergencyCallHandover', 5)])
    LCS_Event._ext = ['deferredmt-lrResponse', 'deferredmo-lrTTTPInitiation', 'emergencyCallHandover']
    
    #-----< TerminationCause >-----#
    TerminationCause = ENUM(name='TerminationCause', mode=MODE_TYPE)
    TerminationCause._cont = ASN1Dict([('normal', 0), ('errorundefined', 1), ('internalTimeout', 2), ('congestion', 3), ('mt-lrRestart', 4), ('privacyViolation', 5), ('shapeOfLocationEstimateNotSupported', 6), ('subscriberTermination', 7), ('uETermination', 8), ('networkTermination', 9)])
    TerminationCause._ext = ['shapeOfLocationEstimateNotSupported', 'subscriberTermination', 'uETermination', 'networkTermination']
    
    #-----< SequenceNumber >-----#
    SequenceNumber = INT(name='SequenceNumber', mode=MODE_TYPE)
    SequenceNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8639999)], ev=None, er=[])
    
    #-----< ServingNodeAddress >-----#
    ServingNodeAddress = CHOICE(name='ServingNodeAddress', mode=MODE_TYPE)
    _ServingNodeAddress_msc_Number = OCT_STR(name='msc-Number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _ServingNodeAddress_sgsn_Number = OCT_STR(name='sgsn-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _ServingNodeAddress_mme_Number = OCT_STR(name='mme-Number', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')))
    ServingNodeAddress._cont = ASN1Dict([
        ('msc-Number', _ServingNodeAddress_msc_Number),
        ('sgsn-Number', _ServingNodeAddress_sgsn_Number),
        ('mme-Number', _ServingNodeAddress_mme_Number),
        ])
    ServingNodeAddress._ext = None
    
    #-----< SubscriberLocationReport-Res >-----#
    SubscriberLocationReport_Res = SEQ(name='SubscriberLocationReport-Res', mode=MODE_TYPE)
    _SubscriberLocationReport_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SubscriberLocationReport_Res_na_ESRK = OCT_STR(name='na-ESRK', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SubscriberLocationReport_Res_na_ESRD = OCT_STR(name='na-ESRD', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SubscriberLocationReport_Res_h_gmlc_Address = OCT_STR(name='h-gmlc-Address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _SubscriberLocationReport_Res_mo_lrShortCircuitIndicator = NULL(name='mo-lrShortCircuitIndicator', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SubscriberLocationReport_Res_reportingPLMNList = SEQ(name='reportingPLMNList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ReportingPLMNList')), opt=True)
    _SubscriberLocationReport_Res_lcs_ReferenceNumber = OCT_STR(name='lcs-ReferenceNumber', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-ReferenceNumber')), opt=True)
    SubscriberLocationReport_Res._cont = ASN1Dict([
        ('extensionContainer', _SubscriberLocationReport_Res_extensionContainer),
        ('na-ESRK', _SubscriberLocationReport_Res_na_ESRK),
        ('na-ESRD', _SubscriberLocationReport_Res_na_ESRD),
        ('h-gmlc-Address', _SubscriberLocationReport_Res_h_gmlc_Address),
        ('mo-lrShortCircuitIndicator', _SubscriberLocationReport_Res_mo_lrShortCircuitIndicator),
        ('reportingPLMNList', _SubscriberLocationReport_Res_reportingPLMNList),
        ('lcs-ReferenceNumber', _SubscriberLocationReport_Res_lcs_ReferenceNumber),
        ])
    SubscriberLocationReport_Res._ext = ['na-ESRK', 'na-ESRD', 'h-gmlc-Address', 'mo-lrShortCircuitIndicator', 'reportingPLMNList', 'lcs-ReferenceNumber']
    
    _all_ = [
        _RoutingInfoForLCS_Arg_mlcNumber,
        _RoutingInfoForLCS_Arg_targetMS,
        _RoutingInfoForLCS_Arg_extensionContainer,
        RoutingInfoForLCS_Arg,
        _RoutingInfoForLCS_Res_targetMS,
        _RoutingInfoForLCS_Res_lcsLocationInfo,
        _RoutingInfoForLCS_Res_extensionContainer,
        _RoutingInfoForLCS_Res_v_gmlc_Address,
        _RoutingInfoForLCS_Res_h_gmlc_Address,
        _RoutingInfoForLCS_Res_ppr_Address,
        _RoutingInfoForLCS_Res_additional_v_gmlc_Address,
        RoutingInfoForLCS_Res,
        _LCSLocationInfo_networkNode_Number,
        _LCSLocationInfo_lmsi,
        _LCSLocationInfo_extensionContainer,
        _LCSLocationInfo_gprsNodeIndicator,
        _LCSLocationInfo_additional_Number,
        _LCSLocationInfo_supportedLCS_CapabilitySets,
        _LCSLocationInfo_additional_LCS_CapabilitySets,
        _LCSLocationInfo_mme_Name,
        _LCSLocationInfo_aaa_Server_Name,
        _LCSLocationInfo_sgsn_Name,
        _LCSLocationInfo_sgsn_Realm,
        LCSLocationInfo,
        _ProvideSubscriberLocation_Arg_locationType,
        _ProvideSubscriberLocation_Arg_mlc_Number,
        _ProvideSubscriberLocation_Arg_lcs_ClientID,
        _ProvideSubscriberLocation_Arg_privacyOverride,
        _ProvideSubscriberLocation_Arg_imsi,
        _ProvideSubscriberLocation_Arg_msisdn,
        _ProvideSubscriberLocation_Arg_lmsi,
        _ProvideSubscriberLocation_Arg_imei,
        _ProvideSubscriberLocation_Arg_lcs_Priority,
        _ProvideSubscriberLocation_Arg_lcs_QoS,
        _ProvideSubscriberLocation_Arg_extensionContainer,
        _ProvideSubscriberLocation_Arg_supportedGADShapes,
        _ProvideSubscriberLocation_Arg_lcs_ReferenceNumber,
        _ProvideSubscriberLocation_Arg_lcsServiceTypeID,
        _ProvideSubscriberLocation_Arg_lcsCodeword,
        _ProvideSubscriberLocation_Arg_lcs_PrivacyCheck,
        _ProvideSubscriberLocation_Arg_areaEventInfo,
        _ProvideSubscriberLocation_Arg_h_gmlc_Address,
        _ProvideSubscriberLocation_Arg_mo_lrShortCircuitIndicator,
        _ProvideSubscriberLocation_Arg_periodicLDRInfo,
        _ProvideSubscriberLocation_Arg_reportingPLMNList,
        ProvideSubscriberLocation_Arg,
        _LocationType_locationEstimateType,
        _LocationType_deferredLocationEventType,
        LocationType,
        LocationEstimateType,
        DeferredLocationEventType,
        _LCS_ClientID_lcsClientType,
        _LCS_ClientID_lcsClientExternalID,
        _LCS_ClientID_lcsClientDialedByMS,
        _LCS_ClientID_lcsClientInternalID,
        _LCS_ClientID_lcsClientName,
        _LCS_ClientID_lcsAPN,
        _LCS_ClientID_lcsRequestorID,
        LCS_ClientID,
        LCSClientType,
        _LCSClientName_dataCodingScheme,
        _LCSClientName_nameString,
        _LCSClientName_lcs_FormatIndicator,
        LCSClientName,
        NameString,
        maxNameStringLength,
        _LCSRequestorID_dataCodingScheme,
        _LCSRequestorID_requestorIDString,
        _LCSRequestorID_lcs_FormatIndicator,
        LCSRequestorID,
        RequestorIDString,
        maxRequestorIDStringLength,
        LCS_FormatIndicator,
        LCS_Priority,
        _LCS_QoS_horizontal_accuracy,
        _LCS_QoS_verticalCoordinateRequest,
        _LCS_QoS_vertical_accuracy,
        _LCS_QoS_responseTime,
        _LCS_QoS_extensionContainer,
        _LCS_QoS_velocityRequest,
        LCS_QoS,
        Horizontal_Accuracy,
        Vertical_Accuracy,
        _ResponseTime_responseTimeCategory,
        ResponseTime,
        ResponseTimeCategory,
        SupportedGADShapes,
        LCS_ReferenceNumber,
        _LCSCodeword_dataCodingScheme,
        _LCSCodeword_lcsCodewordString,
        LCSCodeword,
        LCSCodewordString,
        maxLCSCodewordStringLength,
        _LCS_PrivacyCheck_callSessionUnrelated,
        _LCS_PrivacyCheck_callSessionRelated,
        LCS_PrivacyCheck,
        PrivacyCheckRelatedAction,
        _AreaEventInfo_areaDefinition,
        _AreaEventInfo_occurrenceInfo,
        _AreaEventInfo_intervalTime,
        AreaEventInfo,
        _AreaDefinition_areaList,
        AreaDefinition,
        _AreaList__item_,
        AreaList,
        maxNumOfAreas,
        _Area_areaType,
        _Area_areaIdentification,
        Area,
        AreaType,
        AreaIdentification,
        OccurrenceInfo,
        IntervalTime,
        _PeriodicLDRInfo_reportingAmount,
        _PeriodicLDRInfo_reportingInterval,
        PeriodicLDRInfo,
        ReportingAmount,
        maxReportingAmount,
        ReportingInterval,
        maxReportingInterval,
        _ReportingPLMNList_plmn_ListPrioritized,
        _ReportingPLMNList_plmn_List,
        ReportingPLMNList,
        _PLMNList__item_,
        PLMNList,
        maxNumOfReportingPLMN,
        _ReportingPLMN_plmn_Id,
        _ReportingPLMN_ran_Technology,
        _ReportingPLMN_ran_PeriodicLocationSupport,
        ReportingPLMN,
        RAN_Technology,
        _ProvideSubscriberLocation_Res_locationEstimate,
        _ProvideSubscriberLocation_Res_ageOfLocationEstimate,
        _ProvideSubscriberLocation_Res_extensionContainer,
        _ProvideSubscriberLocation_Res_add_LocationEstimate,
        _ProvideSubscriberLocation_Res_deferredmt_lrResponseIndicator,
        _ProvideSubscriberLocation_Res_geranPositioningData,
        _ProvideSubscriberLocation_Res_utranPositioningData,
        _ProvideSubscriberLocation_Res_cellIdOrSai,
        _ProvideSubscriberLocation_Res_sai_Present,
        _ProvideSubscriberLocation_Res_accuracyFulfilmentIndicator,
        _ProvideSubscriberLocation_Res_velocityEstimate,
        _ProvideSubscriberLocation_Res_mo_lrShortCircuitIndicator,
        _ProvideSubscriberLocation_Res_geranGANSSpositioningData,
        _ProvideSubscriberLocation_Res_utranGANSSpositioningData,
        _ProvideSubscriberLocation_Res_targetServingNodeForHandover,
        _ProvideSubscriberLocation_Res_utranAdditionalPositioningData,
        _ProvideSubscriberLocation_Res_utranBaroPressureMeas,
        _ProvideSubscriberLocation_Res_utranCivicAddress,
        ProvideSubscriberLocation_Res,
        AccuracyFulfilmentIndicator,
        Ext_GeographicalInformation,
        maxExt_GeographicalInformation,
        VelocityEstimate,
        PositioningDataInformation,
        maxPositioningDataInformation,
        UtranPositioningDataInfo,
        maxUtranPositioningDataInfo,
        GeranGANSSpositioningData,
        maxGeranGANSSpositioningData,
        UtranGANSSpositioningData,
        maxUtranGANSSpositioningData,
        UtranAdditionalPositioningData,
        maxUtranAdditionalPositioningData,
        UtranBaroPressureMeas,
        UtranCivicAddress,
        Add_GeographicalInformation,
        maxAdd_GeographicalInformation,
        _SubscriberLocationReport_Arg_lcs_Event,
        _SubscriberLocationReport_Arg_lcs_ClientID,
        _SubscriberLocationReport_Arg_lcsLocationInfo,
        _SubscriberLocationReport_Arg_msisdn,
        _SubscriberLocationReport_Arg_imsi,
        _SubscriberLocationReport_Arg_imei,
        _SubscriberLocationReport_Arg_na_ESRD,
        _SubscriberLocationReport_Arg_na_ESRK,
        _SubscriberLocationReport_Arg_locationEstimate,
        _SubscriberLocationReport_Arg_ageOfLocationEstimate,
        _SubscriberLocationReport_Arg_slr_ArgExtensionContainer,
        _SubscriberLocationReport_Arg_add_LocationEstimate,
        _SubscriberLocationReport_Arg_deferredmt_lrData,
        _SubscriberLocationReport_Arg_lcs_ReferenceNumber,
        _SubscriberLocationReport_Arg_geranPositioningData,
        _SubscriberLocationReport_Arg_utranPositioningData,
        _SubscriberLocationReport_Arg_cellIdOrSai,
        _SubscriberLocationReport_Arg_h_gmlc_Address,
        _SubscriberLocationReport_Arg_lcsServiceTypeID,
        _SubscriberLocationReport_Arg_sai_Present,
        _SubscriberLocationReport_Arg_pseudonymIndicator,
        _SubscriberLocationReport_Arg_accuracyFulfilmentIndicator,
        _SubscriberLocationReport_Arg_velocityEstimate,
        _SubscriberLocationReport_Arg_sequenceNumber,
        _SubscriberLocationReport_Arg_periodicLDRInfo,
        _SubscriberLocationReport_Arg_mo_lrShortCircuitIndicator,
        _SubscriberLocationReport_Arg_geranGANSSpositioningData,
        _SubscriberLocationReport_Arg_utranGANSSpositioningData,
        _SubscriberLocationReport_Arg_targetServingNodeForHandover,
        _SubscriberLocationReport_Arg_utranAdditionalPositioningData,
        _SubscriberLocationReport_Arg_utranBaroPressureMeas,
        _SubscriberLocationReport_Arg_utranCivicAddress,
        SubscriberLocationReport_Arg,
        _Deferredmt_lrData_deferredLocationEventType,
        _Deferredmt_lrData_terminationCause,
        _Deferredmt_lrData_lcsLocationInfo,
        Deferredmt_lrData,
        LCS_Event,
        TerminationCause,
        SequenceNumber,
        _ServingNodeAddress_msc_Number,
        _ServingNodeAddress_sgsn_Number,
        _ServingNodeAddress_mme_Number,
        ServingNodeAddress,
        _SubscriberLocationReport_Res_extensionContainer,
        _SubscriberLocationReport_Res_na_ESRK,
        _SubscriberLocationReport_Res_na_ESRD,
        _SubscriberLocationReport_Res_h_gmlc_Address,
        _SubscriberLocationReport_Res_mo_lrShortCircuitIndicator,
        _SubscriberLocationReport_Res_reportingPLMNList,
        _SubscriberLocationReport_Res_lcs_ReferenceNumber,
        SubscriberLocationReport_Res,
    ]

class MAP_LocationServiceOperations:

    _name_  = 'MAP-LocationServiceOperations'
    _oid_   = [0, 4, 0, 0, 1, 3, 24, 19]
    
    _obj_ = [
        'sendRoutingInfoForLCS',
        'provideSubscriberLocation',
        'subscriberLocationReport',
        ]
    _type_ = [
        ]
    _set_ = [
        ]
    _val_ = [
        'sendRoutingInfoForLCS',
        'provideSubscriberLocation',
        'subscriberLocationReport',
        ]
    _class_ = [
        'sendRoutingInfoForLCS',
        'provideSubscriberLocation',
        'subscriberLocationReport',
        ]
    _param_ = [
        ]
    
    #-----< sendRoutingInfoForLCS >-----#
    sendRoutingInfoForLCS = CLASS(name='sendRoutingInfoForLCS', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _sendRoutingInfoForLCS_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'RoutingInfoForLCS-Arg')))
    _sendRoutingInfoForLCS_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'RoutingInfoForLCS-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_0 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedRequestingNetwork-Param')))
    sendRoutingInfoForLCS._val = dict([('ArgumentType', _sendRoutingInfoForLCS_val_ArgumentType), ('ResultType', _sendRoutingInfoForLCS_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 52))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 85))])
    
    #-----< provideSubscriberLocation >-----#
    provideSubscriberLocation = CLASS(name='provideSubscriberLocation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _provideSubscriberLocation_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ProvideSubscriberLocation-Arg')))
    _provideSubscriberLocation_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ProvideSubscriberLocation-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalEquipmentParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedRequestingNetwork-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_9 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedLCSClient-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_10 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'PositionMethodFailure-Param')))
    provideSubscriberLocation._val = dict([('ArgumentType', _provideSubscriberLocation_val_ArgumentType), ('ResultType', _provideSubscriberLocation_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_0), ('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8), ('errorCode', ('local', 52))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9), ('errorCode', ('local', 53))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10), ('errorCode', ('local', 54))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 83))])
    
    #-----< subscriberLocationReport >-----#
    subscriberLocationReport = CLASS(name='subscriberLocationReport', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _subscriberLocationReport_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'SubscriberLocationReport-Arg')))
    _subscriberLocationReport_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'SubscriberLocationReport-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_2_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ResourceLimitationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedRequestingNetwork-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_6_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownOrUnreachableLCSClient-Param')))
    subscriberLocationReport._val = dict([('ArgumentType', _subscriberLocationReport_val_ArgumentType), ('ResultType', _subscriberLocationReport_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_1), ('errorCode', ('local', 52))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 58))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 86))])
    
    _all_ = [
        sendRoutingInfoForLCS,
        _sendRoutingInfoForLCS_val_ArgumentType,
        _sendRoutingInfoForLCS_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0,
        __sendRoutingInfo_Errors_val_ParameterType_1,
        __sendRoutingInfo_Errors_val_ParameterType_2,
        __sendRoutingInfo_Errors_val_ParameterType_3,
        __sendRoutingInfo_Errors_val_ParameterType_4,
        __sendRoutingInfo_Errors_val_ParameterType_5,
        __sendRoutingInfo_Errors_val_ParameterType_6,
        provideSubscriberLocation,
        _provideSubscriberLocation_val_ArgumentType,
        _provideSubscriberLocation_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_4_0,
        __sendRoutingInfo_Errors_val_ParameterType_5_0,
        __sendRoutingInfo_Errors_val_ParameterType_6_0,
        __sendRoutingInfo_Errors_val_ParameterType_7,
        __sendRoutingInfo_Errors_val_ParameterType_8,
        __sendRoutingInfo_Errors_val_ParameterType_9,
        __sendRoutingInfo_Errors_val_ParameterType_10,
        subscriberLocationReport,
        _subscriberLocationReport_val_ArgumentType,
        _subscriberLocationReport_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_2_0,
        __sendRoutingInfo_Errors_val_ParameterType_3_0,
        __sendRoutingInfo_Errors_val_ParameterType_5_1,
        __sendRoutingInfo_Errors_val_ParameterType_6_1,
    ]

class MAP_MS_DataTypes:

    _name_  = 'MAP-MS-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 11, 19]
    
    _obj_ = [
        'UpdateLocationArg',
        'VLR-Capability',
        'SupportedRAT-Types',
        'SuperChargerInfo',
        'AgeIndicator',
        'IST-SupportIndicator',
        'SupportedLCS-CapabilitySets',
        'UpdateLocationRes',
        'ADD-Info',
        'PagingArea',
        'LocationArea',
        'LAC',
        'CancelLocationArg',
        'TypeOfUpdate',
        'CancellationType',
        'CancelLocationRes',
        'PurgeMS-Arg',
        'PurgeMS-Res',
        'SendIdentificationArg',
        'HopCounter',
        'SendIdentificationRes',
        'AuthenticationSetList',
        'TripletList',
        'QuintupletList',
        'AuthenticationTriplet',
        'AuthenticationQuintuplet',
        'CurrentSecurityContext',
        'GSM-SecurityContextData',
        'UMTS-SecurityContextData',
        'RAND',
        'SRES',
        'Kc',
        'XRES',
        'CK',
        'IK',
        'AUTN',
        'AUTS',
        'Cksn',
        'KSI',
        'AuthenticationFailureReportArg',
        'AccessType',
        'AuthenticationFailureReportRes',
        'FailureCause',
        'UpdateGprsLocationArg',
        'SMSRegisterRequest',
        'Used-RAT-Type',
        'EPS-Info',
        'PDN-GW-Update',
        'ISR-Information',
        'SGSN-Capability',
        'SupportedFeatures',
        'Ext-SupportedFeatures',
        'UE-SRVCC-Capability',
        'UpdateGprsLocationRes',
        'EPLMN-List',
        'AdjacentPLMN-List',
        'ForwardAccessSignalling-Arg',
        'AllowedGSM-Algorithms',
        'AllowedUMTS-Algorithms',
        'PermittedIntegrityProtectionAlgorithms',
        'maxPermittedIntegrityProtectionAlgorithmsLength',
        'PermittedEncryptionAlgorithms',
        'maxPermittedEncryptionAlgorithmsLength',
        'KeyStatus',
        'PrepareHO-Arg',
        'LCLS-GlobalCallReference',
        'LCLS-Negotiation',
        'LCLS-ConfigurationPreference',
        'BSSMAP-ServiceHandoverList',
        'BSSMAP-ServiceHandoverInfo',
        'maxNumOfServiceHandovers',
        'BSSMAP-ServiceHandover',
        'RANAP-ServiceHandover',
        'RadioResourceList',
        'RadioResource',
        'maxNumOfRadioResources',
        'PrepareHO-Res',
        'SelectedUMTS-Algorithms',
        'ChosenIntegrityProtectionAlgorithm',
        'ChosenEncryptionAlgorithm',
        'ChosenRadioResourceInformation',
        'ChosenChannelInfo',
        'ChosenSpeechVersion',
        'PrepareSubsequentHO-Arg',
        'PrepareSubsequentHO-Res',
        'ProcessAccessSignalling-Arg',
        'AoIPCodecsList',
        'AoIPCodec',
        'SupportedCodecsList',
        'CodecList',
        'Codec',
        'GERAN-Classmark',
        'SelectedGSM-Algorithm',
        'SendEndSignal-Arg',
        'SendEndSignal-Res',
        'RNCId',
        'RelocationNumberList',
        'MulticallBearerInfo',
        'RelocationNumber',
        'RAB-Id',
        'maxNrOfRABs',
        'maxNumOfRelocationNumber',
        'RadioResourceInformation',
        'IntegrityProtectionInformation',
        'maxNumOfIntegrityInfo',
        'EncryptionInformation',
        'maxNumOfEncryptionInfo',
        'SendAuthenticationInfoArg',
        'NumberOfRequestedVectors',
        'Re-synchronisationInfo',
        'SendAuthenticationInfoRes',
        'EPS-AuthenticationSetList',
        'UE-UsageType',
        'EPC-AV',
        'KASME',
        'RequestingNodeType',
        'CheckIMEI-Arg',
        'CheckIMEI-Res',
        'RequestedEquipmentInfo',
        'UESBI-Iu',
        'UESBI-IuA',
        'UESBI-IuB',
        'EquipmentStatus',
        'InsertSubscriberDataArg',
        'EDRX-Cycle-Length-List',
        'EDRX-Cycle-Length',
        'EDRX-Cycle-Length-Value',
        'Reset-Id-List',
        'Reset-Id',
        'DL-Buffering-Suggested-Packet-Count',
        'Group-Service-ID',
        'Local-GroupID',
        'IMSI-GroupIdList',
        'IMSI-GroupId',
        'SubscribedPeriodicRAUTAUtimer',
        'SubscribedPeriodicLAUtimer',
        'CSG-SubscriptionDataList',
        'CSG-SubscriptionData',
        'VPLMN-CSG-SubscriptionDataList',
        'CSG-Id',
        'LIPA-AllowedAPNList',
        'maxNumOfLIPAAllowedAPN',
        'EPS-SubscriptionData',
        'APN-OI-Replacement',
        'RFSP-ID',
        'APN-ConfigurationProfile',
        'EPS-DataList',
        'maxNumOfAPN-Configurations',
        'APN-Configuration',
        'PDN-ConnectionContinuity',
        'NIDD-Mechanism',
        'PDN-Type',
        'EPS-QoS-Subscribed',
        'AMBR',
        'SpecificAPNInfoList',
        'maxNumOfSpecificAPNInfos',
        'SpecificAPNInfo',
        'Bandwidth',
        'BandwidthExt',
        'QoS-Class-Identifier',
        'Allocation-Retention-Priority',
        'PDN-GW-Identity',
        'FQDN',
        'PDN-GW-AllocationType',
        'WLAN-Offloadability',
        'WLAN-Offloadability-Indication',
        'AccessRestrictionData',
        'Ext-AccessRestrictionData',
        'AdjacentAccessRestrictionDataList',
        'AdjacentAccessRestrictionData',
        'CS-AllocationRetentionPriority',
        'IST-AlertTimerValue',
        'LCSInformation',
        'GMLC-List',
        'maxNumOfGMLC',
        'NetworkAccessMode',
        'GPRSDataList',
        'maxNumOfPDP-Contexts',
        'PDP-Context',
        'Restoration-Priority',
        'SIPTO-Permission',
        'SIPTO-Local-Network-Permission',
        'LIPA-Permission',
        'ContextId',
        'GPRSSubscriptionData',
        'SGSN-CAMEL-SubscriptionInfo',
        'GPRS-CSI',
        'GPRS-CamelTDPDataList',
        'GPRS-CamelTDPData',
        'DefaultGPRS-Handling',
        'GPRS-TriggerDetectionPoint',
        'APN',
        'PDP-Type',
        'Ext-PDP-Type',
        'PDP-Address',
        'QoS-Subscribed',
        'Ext-QoS-Subscribed',
        'Ext2-QoS-Subscribed',
        'Ext3-QoS-Subscribed',
        'Ext4-QoS-Subscribed',
        'ChargingCharacteristics',
        'LSAOnlyAccessIndicator',
        'LSADataList',
        'maxNumOfLSAs',
        'LSAData',
        'LSAInformation',
        'LSAIdentity',
        'LSAAttributes',
        'SubscriberData',
        'Category',
        'SubscriberStatus',
        'BearerServiceList',
        'maxNumOfBearerServices',
        'TeleserviceList',
        'maxNumOfTeleservices',
        'ODB-Data',
        'ODB-GeneralData',
        'ODB-HPLMN-Data',
        'Ext-SS-InfoList',
        'Ext-SS-Info',
        'Ext-ForwInfo',
        'Ext-ForwFeatureList',
        'Ext-ForwFeature',
        'Ext-ForwOptions',
        'Ext-NoRepCondTime',
        'Ext-CallBarInfo',
        'Ext-CallBarFeatureList',
        'Ext-CallBarringFeature',
        'CUG-Info',
        'CUG-SubscriptionList',
        'CUG-Subscription',
        'CUG-Index',
        'CUG-Interlock',
        'IntraCUG-Options',
        'maxNumOfCUG',
        'CUG-FeatureList',
        'Ext-BasicServiceGroupList',
        'maxNumOfExt-BasicServiceGroups',
        'CUG-Feature',
        'InterCUG-Restrictions',
        'Ext-SS-Data',
        'LCS-PrivacyExceptionList',
        'maxNumOfPrivacyClass',
        'LCS-PrivacyClass',
        'ExternalClientList',
        'maxNumOfExternalClient',
        'PLMNClientList',
        'maxNumOfPLMNClient',
        'Ext-ExternalClientList',
        'maxNumOfExt-ExternalClient',
        'ExternalClient',
        'GMLC-Restriction',
        'NotificationToMSUser',
        'ServiceTypeList',
        'maxNumOfServiceType',
        'ServiceType',
        'MOLR-List',
        'maxNumOfMOLR-Class',
        'MOLR-Class',
        'ZoneCodeList',
        'ZoneCode',
        'maxNumOfZoneCodes',
        'InsertSubscriberDataRes',
        'RegionalSubscriptionResponse',
        'DeleteSubscriberDataArg',
        'SpecificCSI-Withdraw',
        'GPRSSubscriptionDataWithdraw',
        'EPS-SubscriptionDataWithdraw',
        'ContextIdList',
        'LSAInformationWithdraw',
        'LSAIdentityList',
        'BasicServiceList',
        'maxNumOfBasicServices',
        'DeleteSubscriberDataRes',
        'VlrCamelSubscriptionInfo',
        'MT-smsCAMELTDP-CriteriaList',
        'MT-smsCAMELTDP-Criteria',
        'TPDU-TypeCriterion',
        'maxNumOfTPDUTypes',
        'MT-SMS-TPDU-Type',
        'D-CSI',
        'DP-AnalysedInfoCriteriaList',
        'maxNumOfDP-AnalysedInfoCriteria',
        'DP-AnalysedInfoCriterium',
        'SS-CSI',
        'SS-CamelData',
        'SS-EventList',
        'maxNumOfCamelSSEvents',
        'O-CSI',
        'O-BcsmCamelTDPDataList',
        'maxNumOfCamelTDPData',
        'O-BcsmCamelTDPData',
        'ServiceKey',
        'O-BcsmTriggerDetectionPoint',
        'O-BcsmCamelTDPCriteriaList',
        'T-BCSM-CAMEL-TDP-CriteriaList',
        'O-BcsmCamelTDP-Criteria',
        'T-BCSM-CAMEL-TDP-Criteria',
        'DestinationNumberCriteria',
        'DestinationNumberList',
        'DestinationNumberLengthList',
        'BasicServiceCriteria',
        'maxNumOfISDN-AddressDigits',
        'maxNumOfCamelDestinationNumbers',
        'maxNumOfCamelDestinationNumberLengths',
        'maxNumOfCamelBasicServiceCriteria',
        'CallTypeCriteria',
        'MatchType',
        'O-CauseValueCriteria',
        'T-CauseValueCriteria',
        'maxNumOfCAMEL-O-CauseValueCriteria',
        'maxNumOfCAMEL-T-CauseValueCriteria',
        'CauseValue',
        'DefaultCallHandling',
        'CamelCapabilityHandling',
        'SupportedCamelPhases',
        'OfferedCamel4CSIs',
        'OfferedCamel4Functionalities',
        'SMS-CSI',
        'SMS-CAMEL-TDP-DataList',
        'SMS-CAMEL-TDP-Data',
        'SMS-TriggerDetectionPoint',
        'DefaultSMS-Handling',
        'M-CSI',
        'MG-CSI',
        'MobilityTriggers',
        'maxNumOfMobilityTriggers',
        'MM-Code',
        'T-CSI',
        'T-BcsmCamelTDPDataList',
        'T-BcsmCamelTDPData',
        'T-BcsmTriggerDetectionPoint',
        'SendRoutingInfoForGprsArg',
        'SendRoutingInfoForGprsRes',
        'FailureReportArg',
        'FailureReportRes',
        'NoteMsPresentForGprsArg',
        'NoteMsPresentForGprsRes',
        'ResetArg',
        'SendingNode-Number',
        'RestoreDataArg',
        'RestoreDataRes',
        'VBSDataList',
        'VGCSDataList',
        'maxNumOfVBSGroupIds',
        'maxNumOfVGCSGroupIds',
        'VoiceGroupCallData',
        'AdditionalInfo',
        'AdditionalSubscriptions',
        'VoiceBroadcastData',
        'GroupId',
        'Long-GroupId',
        'ProvideSubscriberInfoArg',
        'ProvideSubscriberInfoRes',
        'SubscriberInfo',
        'IMS-VoiceOverPS-SessionsInd',
        'TimeZone',
        'DaylightSavingTime',
        'MNPInfoRes',
        'RouteingNumber',
        'NumberPortabilityStatus',
        'MS-Classmark2',
        'GPRSMSClass',
        'MSNetworkCapability',
        'MSRadioAccessCapability',
        'RequestedInfo',
        'DomainType',
        'RequestedNodes',
        'LocationInformation',
        'LocationInformationEPS',
        'LocationInformationGPRS',
        'LocationInformation5GS',
        'UserCSGInformation',
        'GeographicalInformation',
        'GeodeticInformation',
        'LocationNumber',
        'SubscriberState',
        'PS-SubscriberState',
        'PDP-ContextInfoList',
        'PDP-ContextInfo',
        'NSAPI',
        'TransactionId',
        'TEID',
        'GPRSChargingID',
        'NotReachableReason',
        'AnyTimeInterrogationArg',
        'AnyTimeInterrogationRes',
        'AnyTimeSubscriptionInterrogationArg',
        'AnyTimeSubscriptionInterrogationRes',
        'CallWaitingData',
        'Ext-CwFeatureList',
        'Ext-CwFeature',
        'ClipData',
        'ClirData',
        'CallHoldData',
        'EctData',
        'RequestedSubscriptionInfo',
        'MSISDN-BS-List',
        'maxNumOfMSISDN',
        'MSISDN-BS',
        'RequestedCAMEL-SubscriptionInfo',
        'AdditionalRequestedCAMEL-SubscriptionInfo',
        'CallForwardingData',
        'CallBarringData',
        'WrongPasswordAttemptsCounter',
        'ODB-Info',
        'CAMEL-SubscriptionInfo',
        'AnyTimeModificationArg',
        'ModificationRequestFor-CW-Info',
        'ModificationRequestFor-CH-Info',
        'ModificationRequestFor-ECT-Info',
        'ModificationRequestFor-CLIR-Info',
        'ModificationRequestFor-CLIP-Info',
        'ModificationRequestFor-CSG',
        'RequestedServingNode',
        'ServingNode',
        'AnyTimeModificationRes',
        'ModificationRequestFor-CF-Info',
        'ModificationRequestFor-CB-Info',
        'ModificationRequestFor-ODB-data',
        'ModificationRequestFor-CSI',
        'ModificationRequestFor-IP-SM-GW-Data',
        'ModificationInstruction',
        'NoteSubscriberDataModifiedArg',
        'NoteSubscriberDataModifiedRes',
        'NoteMM-EventArg',
        'NoteMM-EventRes',
        'Ext-SS-InfoFor-CSE',
        'Ext-ForwardingInfoFor-CSE',
        'Ext-CallBarringInfoFor-CSE',
        'UpdateVcsgLocationArg',
        'UpdateVcsgLocationRes',
        'CancelVcsgLocationArg',
        'CancelVcsgLocationRes',
        ]
    _type_ = [
        'UpdateLocationArg',
        'VLR-Capability',
        'SupportedRAT-Types',
        'SuperChargerInfo',
        'AgeIndicator',
        'IST-SupportIndicator',
        'SupportedLCS-CapabilitySets',
        'UpdateLocationRes',
        'ADD-Info',
        'PagingArea',
        'LocationArea',
        'LAC',
        'CancelLocationArg',
        'TypeOfUpdate',
        'CancellationType',
        'CancelLocationRes',
        'PurgeMS-Arg',
        'PurgeMS-Res',
        'SendIdentificationArg',
        'HopCounter',
        'SendIdentificationRes',
        'AuthenticationSetList',
        'TripletList',
        'QuintupletList',
        'AuthenticationTriplet',
        'AuthenticationQuintuplet',
        'CurrentSecurityContext',
        'GSM-SecurityContextData',
        'UMTS-SecurityContextData',
        'RAND',
        'SRES',
        'Kc',
        'XRES',
        'CK',
        'IK',
        'AUTN',
        'AUTS',
        'Cksn',
        'KSI',
        'AuthenticationFailureReportArg',
        'AccessType',
        'AuthenticationFailureReportRes',
        'FailureCause',
        'UpdateGprsLocationArg',
        'SMSRegisterRequest',
        'Used-RAT-Type',
        'EPS-Info',
        'PDN-GW-Update',
        'ISR-Information',
        'SGSN-Capability',
        'SupportedFeatures',
        'Ext-SupportedFeatures',
        'UE-SRVCC-Capability',
        'UpdateGprsLocationRes',
        'EPLMN-List',
        'AdjacentPLMN-List',
        'ForwardAccessSignalling-Arg',
        'AllowedGSM-Algorithms',
        'AllowedUMTS-Algorithms',
        'PermittedIntegrityProtectionAlgorithms',
        'PermittedEncryptionAlgorithms',
        'KeyStatus',
        'PrepareHO-Arg',
        'LCLS-GlobalCallReference',
        'LCLS-Negotiation',
        'LCLS-ConfigurationPreference',
        'BSSMAP-ServiceHandoverList',
        'BSSMAP-ServiceHandoverInfo',
        'BSSMAP-ServiceHandover',
        'RANAP-ServiceHandover',
        'RadioResourceList',
        'RadioResource',
        'PrepareHO-Res',
        'SelectedUMTS-Algorithms',
        'ChosenIntegrityProtectionAlgorithm',
        'ChosenEncryptionAlgorithm',
        'ChosenRadioResourceInformation',
        'ChosenChannelInfo',
        'ChosenSpeechVersion',
        'PrepareSubsequentHO-Arg',
        'PrepareSubsequentHO-Res',
        'ProcessAccessSignalling-Arg',
        'AoIPCodecsList',
        'AoIPCodec',
        'SupportedCodecsList',
        'CodecList',
        'Codec',
        'GERAN-Classmark',
        'SelectedGSM-Algorithm',
        'SendEndSignal-Arg',
        'SendEndSignal-Res',
        'RNCId',
        'RelocationNumberList',
        'MulticallBearerInfo',
        'RelocationNumber',
        'RAB-Id',
        'RadioResourceInformation',
        'IntegrityProtectionInformation',
        'EncryptionInformation',
        'SendAuthenticationInfoArg',
        'NumberOfRequestedVectors',
        'Re-synchronisationInfo',
        'SendAuthenticationInfoRes',
        'EPS-AuthenticationSetList',
        'UE-UsageType',
        'EPC-AV',
        'KASME',
        'RequestingNodeType',
        'CheckIMEI-Arg',
        'CheckIMEI-Res',
        'RequestedEquipmentInfo',
        'UESBI-Iu',
        'UESBI-IuA',
        'UESBI-IuB',
        'EquipmentStatus',
        'InsertSubscriberDataArg',
        'EDRX-Cycle-Length-List',
        'EDRX-Cycle-Length',
        'EDRX-Cycle-Length-Value',
        'Reset-Id-List',
        'Reset-Id',
        'DL-Buffering-Suggested-Packet-Count',
        'Group-Service-ID',
        'Local-GroupID',
        'IMSI-GroupIdList',
        'IMSI-GroupId',
        'SubscribedPeriodicRAUTAUtimer',
        'SubscribedPeriodicLAUtimer',
        'CSG-SubscriptionDataList',
        'CSG-SubscriptionData',
        'VPLMN-CSG-SubscriptionDataList',
        'CSG-Id',
        'LIPA-AllowedAPNList',
        'EPS-SubscriptionData',
        'APN-OI-Replacement',
        'RFSP-ID',
        'APN-ConfigurationProfile',
        'EPS-DataList',
        'APN-Configuration',
        'PDN-ConnectionContinuity',
        'NIDD-Mechanism',
        'PDN-Type',
        'EPS-QoS-Subscribed',
        'AMBR',
        'SpecificAPNInfoList',
        'SpecificAPNInfo',
        'Bandwidth',
        'BandwidthExt',
        'QoS-Class-Identifier',
        'Allocation-Retention-Priority',
        'PDN-GW-Identity',
        'FQDN',
        'PDN-GW-AllocationType',
        'WLAN-Offloadability',
        'WLAN-Offloadability-Indication',
        'AccessRestrictionData',
        'Ext-AccessRestrictionData',
        'AdjacentAccessRestrictionDataList',
        'AdjacentAccessRestrictionData',
        'CS-AllocationRetentionPriority',
        'IST-AlertTimerValue',
        'LCSInformation',
        'GMLC-List',
        'NetworkAccessMode',
        'GPRSDataList',
        'PDP-Context',
        'Restoration-Priority',
        'SIPTO-Permission',
        'SIPTO-Local-Network-Permission',
        'LIPA-Permission',
        'ContextId',
        'GPRSSubscriptionData',
        'SGSN-CAMEL-SubscriptionInfo',
        'GPRS-CSI',
        'GPRS-CamelTDPDataList',
        'GPRS-CamelTDPData',
        'DefaultGPRS-Handling',
        'GPRS-TriggerDetectionPoint',
        'APN',
        'PDP-Type',
        'Ext-PDP-Type',
        'PDP-Address',
        'QoS-Subscribed',
        'Ext-QoS-Subscribed',
        'Ext2-QoS-Subscribed',
        'Ext3-QoS-Subscribed',
        'Ext4-QoS-Subscribed',
        'ChargingCharacteristics',
        'LSAOnlyAccessIndicator',
        'LSADataList',
        'LSAData',
        'LSAInformation',
        'LSAIdentity',
        'LSAAttributes',
        'SubscriberData',
        'Category',
        'SubscriberStatus',
        'BearerServiceList',
        'TeleserviceList',
        'ODB-Data',
        'ODB-GeneralData',
        'ODB-HPLMN-Data',
        'Ext-SS-InfoList',
        'Ext-SS-Info',
        'Ext-ForwInfo',
        'Ext-ForwFeatureList',
        'Ext-ForwFeature',
        'Ext-ForwOptions',
        'Ext-NoRepCondTime',
        'Ext-CallBarInfo',
        'Ext-CallBarFeatureList',
        'Ext-CallBarringFeature',
        'CUG-Info',
        'CUG-SubscriptionList',
        'CUG-Subscription',
        'CUG-Index',
        'CUG-Interlock',
        'IntraCUG-Options',
        'CUG-FeatureList',
        'Ext-BasicServiceGroupList',
        'CUG-Feature',
        'InterCUG-Restrictions',
        'Ext-SS-Data',
        'LCS-PrivacyExceptionList',
        'LCS-PrivacyClass',
        'ExternalClientList',
        'PLMNClientList',
        'Ext-ExternalClientList',
        'ExternalClient',
        'GMLC-Restriction',
        'NotificationToMSUser',
        'ServiceTypeList',
        'ServiceType',
        'MOLR-List',
        'MOLR-Class',
        'ZoneCodeList',
        'ZoneCode',
        'InsertSubscriberDataRes',
        'RegionalSubscriptionResponse',
        'DeleteSubscriberDataArg',
        'SpecificCSI-Withdraw',
        'GPRSSubscriptionDataWithdraw',
        'EPS-SubscriptionDataWithdraw',
        'ContextIdList',
        'LSAInformationWithdraw',
        'LSAIdentityList',
        'BasicServiceList',
        'DeleteSubscriberDataRes',
        'VlrCamelSubscriptionInfo',
        'MT-smsCAMELTDP-CriteriaList',
        'MT-smsCAMELTDP-Criteria',
        'TPDU-TypeCriterion',
        'MT-SMS-TPDU-Type',
        'D-CSI',
        'DP-AnalysedInfoCriteriaList',
        'DP-AnalysedInfoCriterium',
        'SS-CSI',
        'SS-CamelData',
        'SS-EventList',
        'O-CSI',
        'O-BcsmCamelTDPDataList',
        'O-BcsmCamelTDPData',
        'ServiceKey',
        'O-BcsmTriggerDetectionPoint',
        'O-BcsmCamelTDPCriteriaList',
        'T-BCSM-CAMEL-TDP-CriteriaList',
        'O-BcsmCamelTDP-Criteria',
        'T-BCSM-CAMEL-TDP-Criteria',
        'DestinationNumberCriteria',
        'DestinationNumberList',
        'DestinationNumberLengthList',
        'BasicServiceCriteria',
        'CallTypeCriteria',
        'MatchType',
        'O-CauseValueCriteria',
        'T-CauseValueCriteria',
        'CauseValue',
        'DefaultCallHandling',
        'CamelCapabilityHandling',
        'SupportedCamelPhases',
        'OfferedCamel4CSIs',
        'OfferedCamel4Functionalities',
        'SMS-CSI',
        'SMS-CAMEL-TDP-DataList',
        'SMS-CAMEL-TDP-Data',
        'SMS-TriggerDetectionPoint',
        'DefaultSMS-Handling',
        'M-CSI',
        'MG-CSI',
        'MobilityTriggers',
        'MM-Code',
        'T-CSI',
        'T-BcsmCamelTDPDataList',
        'T-BcsmCamelTDPData',
        'T-BcsmTriggerDetectionPoint',
        'SendRoutingInfoForGprsArg',
        'SendRoutingInfoForGprsRes',
        'FailureReportArg',
        'FailureReportRes',
        'NoteMsPresentForGprsArg',
        'NoteMsPresentForGprsRes',
        'ResetArg',
        'SendingNode-Number',
        'RestoreDataArg',
        'RestoreDataRes',
        'VBSDataList',
        'VGCSDataList',
        'VoiceGroupCallData',
        'AdditionalInfo',
        'AdditionalSubscriptions',
        'VoiceBroadcastData',
        'GroupId',
        'Long-GroupId',
        'ProvideSubscriberInfoArg',
        'ProvideSubscriberInfoRes',
        'SubscriberInfo',
        'IMS-VoiceOverPS-SessionsInd',
        'TimeZone',
        'DaylightSavingTime',
        'MNPInfoRes',
        'RouteingNumber',
        'NumberPortabilityStatus',
        'MS-Classmark2',
        'GPRSMSClass',
        'MSNetworkCapability',
        'MSRadioAccessCapability',
        'RequestedInfo',
        'DomainType',
        'RequestedNodes',
        'LocationInformation',
        'LocationInformationEPS',
        'LocationInformationGPRS',
        'LocationInformation5GS',
        'UserCSGInformation',
        'GeographicalInformation',
        'GeodeticInformation',
        'LocationNumber',
        'SubscriberState',
        'PS-SubscriberState',
        'PDP-ContextInfoList',
        'PDP-ContextInfo',
        'NSAPI',
        'TransactionId',
        'TEID',
        'GPRSChargingID',
        'NotReachableReason',
        'AnyTimeInterrogationArg',
        'AnyTimeInterrogationRes',
        'AnyTimeSubscriptionInterrogationArg',
        'AnyTimeSubscriptionInterrogationRes',
        'CallWaitingData',
        'Ext-CwFeatureList',
        'Ext-CwFeature',
        'ClipData',
        'ClirData',
        'CallHoldData',
        'EctData',
        'RequestedSubscriptionInfo',
        'MSISDN-BS-List',
        'MSISDN-BS',
        'RequestedCAMEL-SubscriptionInfo',
        'AdditionalRequestedCAMEL-SubscriptionInfo',
        'CallForwardingData',
        'CallBarringData',
        'WrongPasswordAttemptsCounter',
        'ODB-Info',
        'CAMEL-SubscriptionInfo',
        'AnyTimeModificationArg',
        'ModificationRequestFor-CW-Info',
        'ModificationRequestFor-CH-Info',
        'ModificationRequestFor-ECT-Info',
        'ModificationRequestFor-CLIR-Info',
        'ModificationRequestFor-CLIP-Info',
        'ModificationRequestFor-CSG',
        'RequestedServingNode',
        'ServingNode',
        'AnyTimeModificationRes',
        'ModificationRequestFor-CF-Info',
        'ModificationRequestFor-CB-Info',
        'ModificationRequestFor-ODB-data',
        'ModificationRequestFor-CSI',
        'ModificationRequestFor-IP-SM-GW-Data',
        'ModificationInstruction',
        'NoteSubscriberDataModifiedArg',
        'NoteSubscriberDataModifiedRes',
        'NoteMM-EventArg',
        'NoteMM-EventRes',
        'Ext-SS-InfoFor-CSE',
        'Ext-ForwardingInfoFor-CSE',
        'Ext-CallBarringInfoFor-CSE',
        'UpdateVcsgLocationArg',
        'UpdateVcsgLocationRes',
        'CancelVcsgLocationArg',
        'CancelVcsgLocationRes',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxPermittedIntegrityProtectionAlgorithmsLength',
        'maxPermittedEncryptionAlgorithmsLength',
        'maxNumOfServiceHandovers',
        'maxNumOfRadioResources',
        'maxNrOfRABs',
        'maxNumOfRelocationNumber',
        'maxNumOfIntegrityInfo',
        'maxNumOfEncryptionInfo',
        'maxNumOfLIPAAllowedAPN',
        'maxNumOfAPN-Configurations',
        'maxNumOfSpecificAPNInfos',
        'maxNumOfGMLC',
        'maxNumOfPDP-Contexts',
        'maxNumOfLSAs',
        'maxNumOfBearerServices',
        'maxNumOfTeleservices',
        'maxNumOfCUG',
        'maxNumOfExt-BasicServiceGroups',
        'maxNumOfPrivacyClass',
        'maxNumOfExternalClient',
        'maxNumOfPLMNClient',
        'maxNumOfExt-ExternalClient',
        'maxNumOfServiceType',
        'maxNumOfMOLR-Class',
        'maxNumOfZoneCodes',
        'maxNumOfBasicServices',
        'maxNumOfTPDUTypes',
        'maxNumOfDP-AnalysedInfoCriteria',
        'maxNumOfCamelSSEvents',
        'maxNumOfCamelTDPData',
        'maxNumOfISDN-AddressDigits',
        'maxNumOfCamelDestinationNumbers',
        'maxNumOfCamelDestinationNumberLengths',
        'maxNumOfCamelBasicServiceCriteria',
        'maxNumOfCAMEL-O-CauseValueCriteria',
        'maxNumOfCAMEL-T-CauseValueCriteria',
        'maxNumOfMobilityTriggers',
        'maxNumOfVBSGroupIds',
        'maxNumOfVGCSGroupIds',
        'maxNumOfMSISDN',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< UpdateLocationArg >-----#
    UpdateLocationArg = SEQ(name='UpdateLocationArg', mode=MODE_TYPE)
    _UpdateLocationArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _UpdateLocationArg_msc_Number = OCT_STR(name='msc-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _UpdateLocationArg_vlr_Number = OCT_STR(name='vlr-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _UpdateLocationArg_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')), opt=True)
    _UpdateLocationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _UpdateLocationArg_vlr_Capability = SEQ(name='vlr-Capability', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'VLR-Capability')), opt=True)
    _UpdateLocationArg_informPreviousNetworkEntity = NULL(name='informPreviousNetworkEntity', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateLocationArg_cs_LCS_NotSupportedByUE = NULL(name='cs-LCS-NotSupportedByUE', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateLocationArg_v_gmlc_Address = OCT_STR(name='v-gmlc-Address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _UpdateLocationArg_add_info = SEQ(name='add-info', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ADD-Info')), opt=True)
    _UpdateLocationArg_pagingArea = SEQ_OF(name='pagingArea', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PagingArea')), opt=True)
    _UpdateLocationArg_skipSubscriberDataUpdate = NULL(name='skipSubscriberDataUpdate', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateLocationArg_restorationIndicator = NULL(name='restorationIndicator', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateLocationArg_eplmn_List = SEQ_OF(name='eplmn-List', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EPLMN-List')), opt=True)
    _UpdateLocationArg_mme_DiameterAddress = SEQ(name='mme-DiameterAddress', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    UpdateLocationArg._cont = ASN1Dict([
        ('imsi', _UpdateLocationArg_imsi),
        ('msc-Number', _UpdateLocationArg_msc_Number),
        ('vlr-Number', _UpdateLocationArg_vlr_Number),
        ('lmsi', _UpdateLocationArg_lmsi),
        ('extensionContainer', _UpdateLocationArg_extensionContainer),
        ('vlr-Capability', _UpdateLocationArg_vlr_Capability),
        ('informPreviousNetworkEntity', _UpdateLocationArg_informPreviousNetworkEntity),
        ('cs-LCS-NotSupportedByUE', _UpdateLocationArg_cs_LCS_NotSupportedByUE),
        ('v-gmlc-Address', _UpdateLocationArg_v_gmlc_Address),
        ('add-info', _UpdateLocationArg_add_info),
        ('pagingArea', _UpdateLocationArg_pagingArea),
        ('skipSubscriberDataUpdate', _UpdateLocationArg_skipSubscriberDataUpdate),
        ('restorationIndicator', _UpdateLocationArg_restorationIndicator),
        ('eplmn-List', _UpdateLocationArg_eplmn_List),
        ('mme-DiameterAddress', _UpdateLocationArg_mme_DiameterAddress),
        ])
    UpdateLocationArg._ext = ['vlr-Capability', 'informPreviousNetworkEntity', 'cs-LCS-NotSupportedByUE', 'v-gmlc-Address', 'add-info', 'pagingArea', 'skipSubscriberDataUpdate', 'restorationIndicator', 'eplmn-List', 'mme-DiameterAddress']
    
    #-----< VLR-Capability >-----#
    VLR_Capability = SEQ(name='VLR-Capability', mode=MODE_TYPE)
    _VLR_Capability_supportedCamelPhases = BIT_STR(name='supportedCamelPhases', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedCamelPhases')), opt=True)
    _VLR_Capability_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _VLR_Capability_solsaSupportIndicator = NULL(name='solsaSupportIndicator', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VLR_Capability_istSupportIndicator = ENUM(name='istSupportIndicator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'IST-SupportIndicator')), opt=True)
    _VLR_Capability_superChargerSupportedInServingNetworkEntity = CHOICE(name='superChargerSupportedInServingNetworkEntity', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SuperChargerInfo')), opt=True)
    _VLR_Capability_longFTN_Supported = NULL(name='longFTN-Supported', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VLR_Capability_supportedLCS_CapabilitySets = BIT_STR(name='supportedLCS-CapabilitySets', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedLCS-CapabilitySets')), opt=True)
    _VLR_Capability_offeredCamel4CSIs = BIT_STR(name='offeredCamel4CSIs', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'OfferedCamel4CSIs')), opt=True)
    _VLR_Capability_supportedRAT_TypesIndicator = BIT_STR(name='supportedRAT-TypesIndicator', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedRAT-Types')), opt=True)
    _VLR_Capability_longGroupID_Supported = NULL(name='longGroupID-Supported', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VLR_Capability_mtRoamingForwardingSupported = NULL(name='mtRoamingForwardingSupported', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VLR_Capability_msisdn_lessOperation_Supported = NULL(name='msisdn-lessOperation-Supported', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VLR_Capability_reset_ids_Supported = NULL(name='reset-ids-Supported', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    VLR_Capability._cont = ASN1Dict([
        ('supportedCamelPhases', _VLR_Capability_supportedCamelPhases),
        ('extensionContainer', _VLR_Capability_extensionContainer),
        ('solsaSupportIndicator', _VLR_Capability_solsaSupportIndicator),
        ('istSupportIndicator', _VLR_Capability_istSupportIndicator),
        ('superChargerSupportedInServingNetworkEntity', _VLR_Capability_superChargerSupportedInServingNetworkEntity),
        ('longFTN-Supported', _VLR_Capability_longFTN_Supported),
        ('supportedLCS-CapabilitySets', _VLR_Capability_supportedLCS_CapabilitySets),
        ('offeredCamel4CSIs', _VLR_Capability_offeredCamel4CSIs),
        ('supportedRAT-TypesIndicator', _VLR_Capability_supportedRAT_TypesIndicator),
        ('longGroupID-Supported', _VLR_Capability_longGroupID_Supported),
        ('mtRoamingForwardingSupported', _VLR_Capability_mtRoamingForwardingSupported),
        ('msisdn-lessOperation-Supported', _VLR_Capability_msisdn_lessOperation_Supported),
        ('reset-ids-Supported', _VLR_Capability_reset_ids_Supported),
        ])
    VLR_Capability._ext = ['solsaSupportIndicator', 'istSupportIndicator', 'superChargerSupportedInServingNetworkEntity', 'longFTN-Supported', 'supportedLCS-CapabilitySets', 'offeredCamel4CSIs', 'supportedRAT-TypesIndicator', 'longGroupID-Supported', 'mtRoamingForwardingSupported', 'msisdn-lessOperation-Supported', 'reset-ids-Supported']
    
    #-----< SupportedRAT-Types >-----#
    SupportedRAT_Types = BIT_STR(name='SupportedRAT-Types', mode=MODE_TYPE)
    SupportedRAT_Types._cont = ASN1Dict([('utran', 0), ('geran', 1), ('gan', 2), ('i-hspa-evolution', 3), ('e-utran', 4), ('nb-iot', 5)])
    SupportedRAT_Types._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=8)], ev=None, er=[])
    
    #-----< SuperChargerInfo >-----#
    SuperChargerInfo = CHOICE(name='SuperChargerInfo', mode=MODE_TYPE)
    _SuperChargerInfo_sendSubscriberData = NULL(name='sendSubscriberData', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SuperChargerInfo_subscriberDataStored = OCT_STR(name='subscriberDataStored', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AgeIndicator')))
    SuperChargerInfo._cont = ASN1Dict([
        ('sendSubscriberData', _SuperChargerInfo_sendSubscriberData),
        ('subscriberDataStored', _SuperChargerInfo_subscriberDataStored),
        ])
    SuperChargerInfo._ext = None
    
    #-----< AgeIndicator >-----#
    AgeIndicator = OCT_STR(name='AgeIndicator', mode=MODE_TYPE)
    AgeIndicator._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=6)], ev=None, er=[])
    
    #-----< IST-SupportIndicator >-----#
    IST_SupportIndicator = ENUM(name='IST-SupportIndicator', mode=MODE_TYPE)
    IST_SupportIndicator._cont = ASN1Dict([('basicISTSupported', 0), ('istCommandSupported', 1)])
    IST_SupportIndicator._ext = []
    
    #-----< SupportedLCS-CapabilitySets >-----#
    SupportedLCS_CapabilitySets = BIT_STR(name='SupportedLCS-CapabilitySets', mode=MODE_TYPE)
    SupportedLCS_CapabilitySets._cont = ASN1Dict([('lcsCapabilitySet1', 0), ('lcsCapabilitySet2', 1), ('lcsCapabilitySet3', 2), ('lcsCapabilitySet4', 3), ('lcsCapabilitySet5', 4)])
    SupportedLCS_CapabilitySets._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=16)], ev=None, er=[])
    
    #-----< UpdateLocationRes >-----#
    UpdateLocationRes = SEQ(name='UpdateLocationRes', mode=MODE_TYPE)
    _UpdateLocationRes_hlr_Number = OCT_STR(name='hlr-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _UpdateLocationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _UpdateLocationRes_add_Capability = NULL(name='add-Capability', mode=MODE_TYPE, opt=True)
    _UpdateLocationRes_pagingArea_Capability = NULL(name='pagingArea-Capability', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    UpdateLocationRes._cont = ASN1Dict([
        ('hlr-Number', _UpdateLocationRes_hlr_Number),
        ('extensionContainer', _UpdateLocationRes_extensionContainer),
        ('add-Capability', _UpdateLocationRes_add_Capability),
        ('pagingArea-Capability', _UpdateLocationRes_pagingArea_Capability),
        ])
    UpdateLocationRes._ext = ['add-Capability', 'pagingArea-Capability']
    
    #-----< ADD-Info >-----#
    ADD_Info = SEQ(name='ADD-Info', mode=MODE_TYPE)
    _ADD_Info_imeisv = OCT_STR(name='imeisv', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMEI')))
    _ADD_Info_skipSubscriberDataUpdate = NULL(name='skipSubscriberDataUpdate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ADD_Info._cont = ASN1Dict([
        ('imeisv', _ADD_Info_imeisv),
        ('skipSubscriberDataUpdate', _ADD_Info_skipSubscriberDataUpdate),
        ])
    ADD_Info._ext = []
    
    #-----< PagingArea >-----#
    PagingArea = SEQ_OF(name='PagingArea', mode=MODE_TYPE)
    _PagingArea__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationArea')))
    PagingArea._cont = _PagingArea__item_
    PagingArea._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< LocationArea >-----#
    LocationArea = CHOICE(name='LocationArea', mode=MODE_TYPE)
    _LocationArea_laiFixedLength = OCT_STR(name='laiFixedLength', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LAIFixedLength')))
    _LocationArea_lac = OCT_STR(name='lac', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LAC')))
    LocationArea._cont = ASN1Dict([
        ('laiFixedLength', _LocationArea_laiFixedLength),
        ('lac', _LocationArea_lac),
        ])
    LocationArea._ext = None
    
    #-----< LAC >-----#
    LAC = OCT_STR(name='LAC', mode=MODE_TYPE)
    LAC._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< CancelLocationArg >-----#
    CancelLocationArg = SEQ(name='CancelLocationArg', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CancelLocationArg_identity = CHOICE(name='identity', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Identity')))
    _CancelLocationArg_cancellationType = ENUM(name='cancellationType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancellationType')), opt=True)
    _CancelLocationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _CancelLocationArg_typeOfUpdate = ENUM(name='typeOfUpdate', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TypeOfUpdate')), opt=True)
    _CancelLocationArg_mtrf_SupportedAndAuthorized = NULL(name='mtrf-SupportedAndAuthorized', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CancelLocationArg_mtrf_SupportedAndNotAuthorized = NULL(name='mtrf-SupportedAndNotAuthorized', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CancelLocationArg_newMSC_Number = OCT_STR(name='newMSC-Number', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _CancelLocationArg_newVLR_Number = OCT_STR(name='newVLR-Number', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _CancelLocationArg_new_lmsi = OCT_STR(name='new-lmsi', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')), opt=True)
    _CancelLocationArg_reattach_Required = NULL(name='reattach-Required', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    CancelLocationArg._cont = ASN1Dict([
        ('identity', _CancelLocationArg_identity),
        ('cancellationType', _CancelLocationArg_cancellationType),
        ('extensionContainer', _CancelLocationArg_extensionContainer),
        ('typeOfUpdate', _CancelLocationArg_typeOfUpdate),
        ('mtrf-SupportedAndAuthorized', _CancelLocationArg_mtrf_SupportedAndAuthorized),
        ('mtrf-SupportedAndNotAuthorized', _CancelLocationArg_mtrf_SupportedAndNotAuthorized),
        ('newMSC-Number', _CancelLocationArg_newMSC_Number),
        ('newVLR-Number', _CancelLocationArg_newVLR_Number),
        ('new-lmsi', _CancelLocationArg_new_lmsi),
        ('reattach-Required', _CancelLocationArg_reattach_Required),
        ])
    CancelLocationArg._ext = ['typeOfUpdate', 'mtrf-SupportedAndAuthorized', 'mtrf-SupportedAndNotAuthorized', 'newMSC-Number', 'newVLR-Number', 'new-lmsi', 'reattach-Required']
    
    #-----< TypeOfUpdate >-----#
    TypeOfUpdate = ENUM(name='TypeOfUpdate', mode=MODE_TYPE)
    TypeOfUpdate._cont = ASN1Dict([('sgsn-change', 0), ('mme-change', 1)])
    TypeOfUpdate._ext = []
    
    #-----< CancellationType >-----#
    CancellationType = ENUM(name='CancellationType', mode=MODE_TYPE)
    CancellationType._cont = ASN1Dict([('updateProcedure', 0), ('subscriptionWithdraw', 1), ('initialAttachProcedure', 2)])
    CancellationType._ext = ['initialAttachProcedure']
    
    #-----< CancelLocationRes >-----#
    CancelLocationRes = SEQ(name='CancelLocationRes', mode=MODE_TYPE)
    _CancelLocationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CancelLocationRes._cont = ASN1Dict([
        ('extensionContainer', _CancelLocationRes_extensionContainer),
        ])
    CancelLocationRes._ext = []
    
    #-----< PurgeMS-Arg >-----#
    PurgeMS_Arg = SEQ(name='PurgeMS-Arg', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PurgeMS_Arg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _PurgeMS_Arg_vlr_Number = OCT_STR(name='vlr-Number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _PurgeMS_Arg_sgsn_Number = OCT_STR(name='sgsn-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _PurgeMS_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _PurgeMS_Arg_locationInformation = SEQ(name='locationInformation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationInformation')), opt=True)
    _PurgeMS_Arg_locationInformationGPRS = SEQ(name='locationInformationGPRS', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationInformationGPRS')), opt=True)
    _PurgeMS_Arg_locationInformationEPS = SEQ(name='locationInformationEPS', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationInformationEPS')), opt=True)
    PurgeMS_Arg._cont = ASN1Dict([
        ('imsi', _PurgeMS_Arg_imsi),
        ('vlr-Number', _PurgeMS_Arg_vlr_Number),
        ('sgsn-Number', _PurgeMS_Arg_sgsn_Number),
        ('extensionContainer', _PurgeMS_Arg_extensionContainer),
        ('locationInformation', _PurgeMS_Arg_locationInformation),
        ('locationInformationGPRS', _PurgeMS_Arg_locationInformationGPRS),
        ('locationInformationEPS', _PurgeMS_Arg_locationInformationEPS),
        ])
    PurgeMS_Arg._ext = ['locationInformation', 'locationInformationGPRS', 'locationInformationEPS']
    
    #-----< PurgeMS-Res >-----#
    PurgeMS_Res = SEQ(name='PurgeMS-Res', mode=MODE_TYPE)
    _PurgeMS_Res_freezeTMSI = NULL(name='freezeTMSI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PurgeMS_Res_freezeP_TMSI = NULL(name='freezeP-TMSI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PurgeMS_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _PurgeMS_Res_freezeM_TMSI = NULL(name='freezeM-TMSI', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    PurgeMS_Res._cont = ASN1Dict([
        ('freezeTMSI', _PurgeMS_Res_freezeTMSI),
        ('freezeP-TMSI', _PurgeMS_Res_freezeP_TMSI),
        ('extensionContainer', _PurgeMS_Res_extensionContainer),
        ('freezeM-TMSI', _PurgeMS_Res_freezeM_TMSI),
        ])
    PurgeMS_Res._ext = ['freezeM-TMSI']
    
    #-----< SendIdentificationArg >-----#
    SendIdentificationArg = SEQ(name='SendIdentificationArg', mode=MODE_TYPE)
    _SendIdentificationArg_tmsi = OCT_STR(name='tmsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'TMSI')))
    _SendIdentificationArg_numberOfRequestedVectors = INT(name='numberOfRequestedVectors', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NumberOfRequestedVectors')), opt=True)
    _SendIdentificationArg_segmentationProhibited = NULL(name='segmentationProhibited', mode=MODE_TYPE, opt=True)
    _SendIdentificationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SendIdentificationArg_msc_Number = OCT_STR(name='msc-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SendIdentificationArg_previous_LAI = OCT_STR(name='previous-LAI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LAIFixedLength')), opt=True)
    _SendIdentificationArg_hopCounter = INT(name='hopCounter', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'HopCounter')), opt=True)
    _SendIdentificationArg_mtRoamingForwardingSupported = NULL(name='mtRoamingForwardingSupported', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SendIdentificationArg_newVLR_Number = OCT_STR(name='newVLR-Number', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SendIdentificationArg_new_lmsi = OCT_STR(name='new-lmsi', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')), opt=True)
    SendIdentificationArg._cont = ASN1Dict([
        ('tmsi', _SendIdentificationArg_tmsi),
        ('numberOfRequestedVectors', _SendIdentificationArg_numberOfRequestedVectors),
        ('segmentationProhibited', _SendIdentificationArg_segmentationProhibited),
        ('extensionContainer', _SendIdentificationArg_extensionContainer),
        ('msc-Number', _SendIdentificationArg_msc_Number),
        ('previous-LAI', _SendIdentificationArg_previous_LAI),
        ('hopCounter', _SendIdentificationArg_hopCounter),
        ('mtRoamingForwardingSupported', _SendIdentificationArg_mtRoamingForwardingSupported),
        ('newVLR-Number', _SendIdentificationArg_newVLR_Number),
        ('new-lmsi', _SendIdentificationArg_new_lmsi),
        ])
    SendIdentificationArg._ext = ['msc-Number', 'previous-LAI', 'hopCounter', 'mtRoamingForwardingSupported', 'newVLR-Number', 'new-lmsi']
    
    #-----< HopCounter >-----#
    HopCounter = INT(name='HopCounter', mode=MODE_TYPE)
    HopCounter._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    
    #-----< SendIdentificationRes >-----#
    SendIdentificationRes = SEQ(name='SendIdentificationRes', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SendIdentificationRes_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _SendIdentificationRes_authenticationSetList = CHOICE(name='authenticationSetList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AuthenticationSetList')), opt=True)
    _SendIdentificationRes_currentSecurityContext = CHOICE(name='currentSecurityContext', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CurrentSecurityContext')), opt=True)
    _SendIdentificationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SendIdentificationRes_lastUsedLtePLMN_Id = OCT_STR(name='lastUsedLtePLMN-Id', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')), opt=True)
    _SendIdentificationRes_mtCallPendingFlag = NULL(name='mtCallPendingFlag', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SendIdentificationRes._cont = ASN1Dict([
        ('imsi', _SendIdentificationRes_imsi),
        ('authenticationSetList', _SendIdentificationRes_authenticationSetList),
        ('currentSecurityContext', _SendIdentificationRes_currentSecurityContext),
        ('extensionContainer', _SendIdentificationRes_extensionContainer),
        ('lastUsedLtePLMN-Id', _SendIdentificationRes_lastUsedLtePLMN_Id),
        ('mtCallPendingFlag', _SendIdentificationRes_mtCallPendingFlag),
        ])
    SendIdentificationRes._ext = ['lastUsedLtePLMN-Id', 'mtCallPendingFlag']
    
    #-----< AuthenticationSetList >-----#
    AuthenticationSetList = CHOICE(name='AuthenticationSetList', mode=MODE_TYPE)
    _AuthenticationSetList_tripletList = SEQ_OF(name='tripletList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TripletList')))
    _AuthenticationSetList_quintupletList = SEQ_OF(name='quintupletList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'QuintupletList')))
    AuthenticationSetList._cont = ASN1Dict([
        ('tripletList', _AuthenticationSetList_tripletList),
        ('quintupletList', _AuthenticationSetList_quintupletList),
        ])
    AuthenticationSetList._ext = None
    
    #-----< TripletList >-----#
    TripletList = SEQ_OF(name='TripletList', mode=MODE_TYPE)
    _TripletList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AuthenticationTriplet')))
    TripletList._cont = _TripletList__item_
    TripletList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< QuintupletList >-----#
    QuintupletList = SEQ_OF(name='QuintupletList', mode=MODE_TYPE)
    _QuintupletList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AuthenticationQuintuplet')))
    QuintupletList._cont = _QuintupletList__item_
    QuintupletList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< AuthenticationTriplet >-----#
    AuthenticationTriplet = SEQ(name='AuthenticationTriplet', mode=MODE_TYPE)
    _AuthenticationTriplet_rand = OCT_STR(name='rand', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAND')))
    _AuthenticationTriplet_sres = OCT_STR(name='sres', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SRES')))
    _AuthenticationTriplet_kc = OCT_STR(name='kc', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Kc')))
    AuthenticationTriplet._cont = ASN1Dict([
        ('rand', _AuthenticationTriplet_rand),
        ('sres', _AuthenticationTriplet_sres),
        ('kc', _AuthenticationTriplet_kc),
        ])
    AuthenticationTriplet._ext = []
    
    #-----< AuthenticationQuintuplet >-----#
    AuthenticationQuintuplet = SEQ(name='AuthenticationQuintuplet', mode=MODE_TYPE)
    _AuthenticationQuintuplet_rand = OCT_STR(name='rand', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAND')))
    _AuthenticationQuintuplet_xres = OCT_STR(name='xres', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'XRES')))
    _AuthenticationQuintuplet_ck = OCT_STR(name='ck', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CK')))
    _AuthenticationQuintuplet_ik = OCT_STR(name='ik', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'IK')))
    _AuthenticationQuintuplet_autn = OCT_STR(name='autn', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AUTN')))
    AuthenticationQuintuplet._cont = ASN1Dict([
        ('rand', _AuthenticationQuintuplet_rand),
        ('xres', _AuthenticationQuintuplet_xres),
        ('ck', _AuthenticationQuintuplet_ck),
        ('ik', _AuthenticationQuintuplet_ik),
        ('autn', _AuthenticationQuintuplet_autn),
        ])
    AuthenticationQuintuplet._ext = []
    
    #-----< CurrentSecurityContext >-----#
    CurrentSecurityContext = CHOICE(name='CurrentSecurityContext', mode=MODE_TYPE)
    _CurrentSecurityContext_gsm_SecurityContextData = SEQ(name='gsm-SecurityContextData', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GSM-SecurityContextData')))
    _CurrentSecurityContext_umts_SecurityContextData = SEQ(name='umts-SecurityContextData', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UMTS-SecurityContextData')))
    CurrentSecurityContext._cont = ASN1Dict([
        ('gsm-SecurityContextData', _CurrentSecurityContext_gsm_SecurityContextData),
        ('umts-SecurityContextData', _CurrentSecurityContext_umts_SecurityContextData),
        ])
    CurrentSecurityContext._ext = None
    
    #-----< GSM-SecurityContextData >-----#
    GSM_SecurityContextData = SEQ(name='GSM-SecurityContextData', mode=MODE_TYPE)
    _GSM_SecurityContextData_kc = OCT_STR(name='kc', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Kc')))
    _GSM_SecurityContextData_cksn = OCT_STR(name='cksn', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Cksn')))
    GSM_SecurityContextData._cont = ASN1Dict([
        ('kc', _GSM_SecurityContextData_kc),
        ('cksn', _GSM_SecurityContextData_cksn),
        ])
    GSM_SecurityContextData._ext = []
    
    #-----< UMTS-SecurityContextData >-----#
    UMTS_SecurityContextData = SEQ(name='UMTS-SecurityContextData', mode=MODE_TYPE)
    _UMTS_SecurityContextData_ck = OCT_STR(name='ck', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CK')))
    _UMTS_SecurityContextData_ik = OCT_STR(name='ik', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'IK')))
    _UMTS_SecurityContextData_ksi = OCT_STR(name='ksi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'KSI')))
    UMTS_SecurityContextData._cont = ASN1Dict([
        ('ck', _UMTS_SecurityContextData_ck),
        ('ik', _UMTS_SecurityContextData_ik),
        ('ksi', _UMTS_SecurityContextData_ksi),
        ])
    UMTS_SecurityContextData._ext = []
    
    #-----< RAND >-----#
    RAND = OCT_STR(name='RAND', mode=MODE_TYPE)
    RAND._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< SRES >-----#
    SRES = OCT_STR(name='SRES', mode=MODE_TYPE)
    SRES._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< Kc >-----#
    Kc = OCT_STR(name='Kc', mode=MODE_TYPE)
    Kc._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< XRES >-----#
    XRES = OCT_STR(name='XRES', mode=MODE_TYPE)
    XRES._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=4, ub=16)], ev=None, er=[])
    
    #-----< CK >-----#
    CK = OCT_STR(name='CK', mode=MODE_TYPE)
    CK._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< IK >-----#
    IK = OCT_STR(name='IK', mode=MODE_TYPE)
    IK._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< AUTN >-----#
    AUTN = OCT_STR(name='AUTN', mode=MODE_TYPE)
    AUTN._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< AUTS >-----#
    AUTS = OCT_STR(name='AUTS', mode=MODE_TYPE)
    AUTS._const_sz = ASN1Set(rv=[14], rr=[], ev=None, er=[])
    
    #-----< Cksn >-----#
    Cksn = OCT_STR(name='Cksn', mode=MODE_TYPE)
    Cksn._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< KSI >-----#
    KSI = OCT_STR(name='KSI', mode=MODE_TYPE)
    KSI._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< AuthenticationFailureReportArg >-----#
    AuthenticationFailureReportArg = SEQ(name='AuthenticationFailureReportArg', mode=MODE_TYPE)
    _AuthenticationFailureReportArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _AuthenticationFailureReportArg_failureCause = ENUM(name='failureCause', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'FailureCause')))
    _AuthenticationFailureReportArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _AuthenticationFailureReportArg_re_attempt = BOOL(name='re-attempt', mode=MODE_TYPE, opt=True)
    _AuthenticationFailureReportArg_accessType = ENUM(name='accessType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AccessType')), opt=True)
    _AuthenticationFailureReportArg_rand = OCT_STR(name='rand', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAND')), opt=True)
    _AuthenticationFailureReportArg_vlr_Number = OCT_STR(name='vlr-Number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _AuthenticationFailureReportArg_sgsn_Number = OCT_STR(name='sgsn-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    AuthenticationFailureReportArg._cont = ASN1Dict([
        ('imsi', _AuthenticationFailureReportArg_imsi),
        ('failureCause', _AuthenticationFailureReportArg_failureCause),
        ('extensionContainer', _AuthenticationFailureReportArg_extensionContainer),
        ('re-attempt', _AuthenticationFailureReportArg_re_attempt),
        ('accessType', _AuthenticationFailureReportArg_accessType),
        ('rand', _AuthenticationFailureReportArg_rand),
        ('vlr-Number', _AuthenticationFailureReportArg_vlr_Number),
        ('sgsn-Number', _AuthenticationFailureReportArg_sgsn_Number),
        ])
    AuthenticationFailureReportArg._ext = ['re-attempt', 'accessType', 'rand', 'vlr-Number', 'sgsn-Number']
    
    #-----< AccessType >-----#
    AccessType = ENUM(name='AccessType', mode=MODE_TYPE)
    AccessType._cont = ASN1Dict([('call', 0), ('emergencyCall', 1), ('locationUpdating', 2), ('supplementaryService', 3), ('shortMessage', 4), ('gprsAttach', 5), ('routingAreaUpdating', 6), ('serviceRequest', 7), ('pdpContextActivation', 8), ('pdpContextDeactivation', 9), ('gprsDetach', 10)])
    AccessType._ext = ['gprsDetach']
    
    #-----< AuthenticationFailureReportRes >-----#
    AuthenticationFailureReportRes = SEQ(name='AuthenticationFailureReportRes', mode=MODE_TYPE)
    _AuthenticationFailureReportRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    AuthenticationFailureReportRes._cont = ASN1Dict([
        ('extensionContainer', _AuthenticationFailureReportRes_extensionContainer),
        ])
    AuthenticationFailureReportRes._ext = []
    
    #-----< FailureCause >-----#
    FailureCause = ENUM(name='FailureCause', mode=MODE_TYPE)
    FailureCause._cont = ASN1Dict([('wrongUserResponse', 0), ('wrongNetworkSignature', 1)])
    FailureCause._ext = None
    
    #-----< UpdateGprsLocationArg >-----#
    UpdateGprsLocationArg = SEQ(name='UpdateGprsLocationArg', mode=MODE_TYPE)
    _UpdateGprsLocationArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _UpdateGprsLocationArg_sgsn_Number = OCT_STR(name='sgsn-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _UpdateGprsLocationArg_sgsn_Address = OCT_STR(name='sgsn-Address', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')))
    _UpdateGprsLocationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _UpdateGprsLocationArg_sgsn_Capability = SEQ(name='sgsn-Capability', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SGSN-Capability')), opt=True)
    _UpdateGprsLocationArg_informPreviousNetworkEntity = NULL(name='informPreviousNetworkEntity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_ps_LCS_NotSupportedByUE = NULL(name='ps-LCS-NotSupportedByUE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_v_gmlc_Address = OCT_STR(name='v-gmlc-Address', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _UpdateGprsLocationArg_add_info = SEQ(name='add-info', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ADD-Info')), opt=True)
    _UpdateGprsLocationArg_eps_info = CHOICE(name='eps-info', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EPS-Info')), opt=True)
    _UpdateGprsLocationArg_servingNodeTypeIndicator = NULL(name='servingNodeTypeIndicator', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_skipSubscriberDataUpdate = NULL(name='skipSubscriberDataUpdate', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_usedRAT_Type = ENUM(name='usedRAT-Type', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Used-RAT-Type')), opt=True)
    _UpdateGprsLocationArg_gprsSubscriptionDataNotNeeded = NULL(name='gprsSubscriptionDataNotNeeded', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_nodeTypeIndicator = NULL(name='nodeTypeIndicator', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_areaRestricted = NULL(name='areaRestricted', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_ue_reachableIndicator = NULL(name='ue-reachableIndicator', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_epsSubscriptionDataNotNeeded = NULL(name='epsSubscriptionDataNotNeeded', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_ue_srvcc_Capability = ENUM(name='ue-srvcc-Capability', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UE-SRVCC-Capability')), opt=True)
    _UpdateGprsLocationArg_eplmn_List = SEQ_OF(name='eplmn-List', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EPLMN-List')), opt=True)
    _UpdateGprsLocationArg_mmeNumberforMTSMS = OCT_STR(name='mmeNumberforMTSMS', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _UpdateGprsLocationArg_smsRegisterRequest = ENUM(name='smsRegisterRequest', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMSRegisterRequest')), opt=True)
    _UpdateGprsLocationArg_sms_Only = NULL(name='sms-Only', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_removalofMMERegistrationforSMS = NULL(name='removalofMMERegistrationforSMS', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_sgsn_Name = OCT_STR(name='sgsn-Name', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')), opt=True)
    _UpdateGprsLocationArg_sgsn_Realm = OCT_STR(name='sgsn-Realm', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')), opt=True)
    _UpdateGprsLocationArg_lgd_supportIndicator = NULL(name='lgd-supportIndicator', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_adjacentPLMN_List = SEQ_OF(name='adjacentPLMN-List', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdjacentPLMN-List')), opt=True)
    UpdateGprsLocationArg._cont = ASN1Dict([
        ('imsi', _UpdateGprsLocationArg_imsi),
        ('sgsn-Number', _UpdateGprsLocationArg_sgsn_Number),
        ('sgsn-Address', _UpdateGprsLocationArg_sgsn_Address),
        ('extensionContainer', _UpdateGprsLocationArg_extensionContainer),
        ('sgsn-Capability', _UpdateGprsLocationArg_sgsn_Capability),
        ('informPreviousNetworkEntity', _UpdateGprsLocationArg_informPreviousNetworkEntity),
        ('ps-LCS-NotSupportedByUE', _UpdateGprsLocationArg_ps_LCS_NotSupportedByUE),
        ('v-gmlc-Address', _UpdateGprsLocationArg_v_gmlc_Address),
        ('add-info', _UpdateGprsLocationArg_add_info),
        ('eps-info', _UpdateGprsLocationArg_eps_info),
        ('servingNodeTypeIndicator', _UpdateGprsLocationArg_servingNodeTypeIndicator),
        ('skipSubscriberDataUpdate', _UpdateGprsLocationArg_skipSubscriberDataUpdate),
        ('usedRAT-Type', _UpdateGprsLocationArg_usedRAT_Type),
        ('gprsSubscriptionDataNotNeeded', _UpdateGprsLocationArg_gprsSubscriptionDataNotNeeded),
        ('nodeTypeIndicator', _UpdateGprsLocationArg_nodeTypeIndicator),
        ('areaRestricted', _UpdateGprsLocationArg_areaRestricted),
        ('ue-reachableIndicator', _UpdateGprsLocationArg_ue_reachableIndicator),
        ('epsSubscriptionDataNotNeeded', _UpdateGprsLocationArg_epsSubscriptionDataNotNeeded),
        ('ue-srvcc-Capability', _UpdateGprsLocationArg_ue_srvcc_Capability),
        ('eplmn-List', _UpdateGprsLocationArg_eplmn_List),
        ('mmeNumberforMTSMS', _UpdateGprsLocationArg_mmeNumberforMTSMS),
        ('smsRegisterRequest', _UpdateGprsLocationArg_smsRegisterRequest),
        ('sms-Only', _UpdateGprsLocationArg_sms_Only),
        ('removalofMMERegistrationforSMS', _UpdateGprsLocationArg_removalofMMERegistrationforSMS),
        ('sgsn-Name', _UpdateGprsLocationArg_sgsn_Name),
        ('sgsn-Realm', _UpdateGprsLocationArg_sgsn_Realm),
        ('lgd-supportIndicator', _UpdateGprsLocationArg_lgd_supportIndicator),
        ('adjacentPLMN-List', _UpdateGprsLocationArg_adjacentPLMN_List),
        ])
    UpdateGprsLocationArg._ext = ['sgsn-Capability', 'informPreviousNetworkEntity', 'ps-LCS-NotSupportedByUE', 'v-gmlc-Address', 'add-info', 'eps-info', 'servingNodeTypeIndicator', 'skipSubscriberDataUpdate', 'usedRAT-Type', 'gprsSubscriptionDataNotNeeded', 'nodeTypeIndicator', 'areaRestricted', 'ue-reachableIndicator', 'epsSubscriptionDataNotNeeded', 'ue-srvcc-Capability', 'eplmn-List', 'mmeNumberforMTSMS', 'smsRegisterRequest', 'sms-Only', 'removalofMMERegistrationforSMS', 'sgsn-Name', 'sgsn-Realm', 'lgd-supportIndicator', 'adjacentPLMN-List']
    
    #-----< SMSRegisterRequest >-----#
    SMSRegisterRequest = ENUM(name='SMSRegisterRequest', mode=MODE_TYPE)
    SMSRegisterRequest._cont = ASN1Dict([('sms-registration-required', 0), ('sms-registration-not-preferred', 1), ('no-preference', 2)])
    SMSRegisterRequest._ext = []
    
    #-----< Used-RAT-Type >-----#
    Used_RAT_Type = ENUM(name='Used-RAT-Type', mode=MODE_TYPE)
    Used_RAT_Type._cont = ASN1Dict([('utran', 0), ('geran', 1), ('gan', 2), ('i-hspa-evolution', 3), ('e-utran', 4), ('nb-iot', 5)])
    Used_RAT_Type._ext = ['nb-iot']
    
    #-----< EPS-Info >-----#
    EPS_Info = CHOICE(name='EPS-Info', mode=MODE_TYPE)
    _EPS_Info_pdn_gw_update = SEQ(name='pdn-gw-update', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDN-GW-Update')))
    _EPS_Info_isr_Information = BIT_STR(name='isr-Information', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ISR-Information')))
    EPS_Info._cont = ASN1Dict([
        ('pdn-gw-update', _EPS_Info_pdn_gw_update),
        ('isr-Information', _EPS_Info_isr_Information),
        ])
    EPS_Info._ext = None
    
    #-----< PDN-GW-Update >-----#
    PDN_GW_Update = SEQ(name='PDN-GW-Update', mode=MODE_TYPE)
    _PDN_GW_Update_apn = OCT_STR(name='apn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN')), opt=True)
    _PDN_GW_Update_pdn_gw_Identity = SEQ(name='pdn-gw-Identity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDN-GW-Identity')), opt=True)
    _PDN_GW_Update_contextId = INT(name='contextId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ContextId')), opt=True)
    _PDN_GW_Update_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    PDN_GW_Update._cont = ASN1Dict([
        ('apn', _PDN_GW_Update_apn),
        ('pdn-gw-Identity', _PDN_GW_Update_pdn_gw_Identity),
        ('contextId', _PDN_GW_Update_contextId),
        ('extensionContainer', _PDN_GW_Update_extensionContainer),
        ])
    PDN_GW_Update._ext = []
    
    #-----< ISR-Information >-----#
    ISR_Information = BIT_STR(name='ISR-Information', mode=MODE_TYPE)
    ISR_Information._cont = ASN1Dict([('updateLocation', 0), ('cancelSGSN', 1), ('initialAttachIndicator', 2)])
    ISR_Information._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    
    #-----< SGSN-Capability >-----#
    SGSN_Capability = SEQ(name='SGSN-Capability', mode=MODE_TYPE)
    _SGSN_Capability_solsaSupportIndicator = NULL(name='solsaSupportIndicator', mode=MODE_TYPE, opt=True)
    _SGSN_Capability_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SGSN_Capability_superChargerSupportedInServingNetworkEntity = CHOICE(name='superChargerSupportedInServingNetworkEntity', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SuperChargerInfo')), opt=True)
    _SGSN_Capability_gprsEnhancementsSupportIndicator = NULL(name='gprsEnhancementsSupportIndicator', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SGSN_Capability_supportedCamelPhases = BIT_STR(name='supportedCamelPhases', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedCamelPhases')), opt=True)
    _SGSN_Capability_supportedLCS_CapabilitySets = BIT_STR(name='supportedLCS-CapabilitySets', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedLCS-CapabilitySets')), opt=True)
    _SGSN_Capability_offeredCamel4CSIs = BIT_STR(name='offeredCamel4CSIs', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'OfferedCamel4CSIs')), opt=True)
    _SGSN_Capability_smsCallBarringSupportIndicator = NULL(name='smsCallBarringSupportIndicator', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SGSN_Capability_supportedRAT_TypesIndicator = BIT_STR(name='supportedRAT-TypesIndicator', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedRAT-Types')), opt=True)
    _SGSN_Capability_supportedFeatures = BIT_STR(name='supportedFeatures', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedFeatures')), opt=True)
    _SGSN_Capability_t_adsDataRetrieval = NULL(name='t-adsDataRetrieval', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SGSN_Capability_homogeneousSupportOfIMSVoiceOverPSSessions = BOOL(name='homogeneousSupportOfIMSVoiceOverPSSessions', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SGSN_Capability_cancellationTypeInitialAttach = NULL(name='cancellationTypeInitialAttach', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SGSN_Capability_msisdn_lessOperation_Supported = NULL(name='msisdn-lessOperation-Supported', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SGSN_Capability_updateofHomogeneousSupportOfIMSVoiceOverPSSessions = NULL(name='updateofHomogeneousSupportOfIMSVoiceOverPSSessions', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SGSN_Capability_reset_ids_Supported = NULL(name='reset-ids-Supported', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SGSN_Capability_ext_SupportedFeatures = BIT_STR(name='ext-SupportedFeatures', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-SupportedFeatures')), opt=True)
    SGSN_Capability._cont = ASN1Dict([
        ('solsaSupportIndicator', _SGSN_Capability_solsaSupportIndicator),
        ('extensionContainer', _SGSN_Capability_extensionContainer),
        ('superChargerSupportedInServingNetworkEntity', _SGSN_Capability_superChargerSupportedInServingNetworkEntity),
        ('gprsEnhancementsSupportIndicator', _SGSN_Capability_gprsEnhancementsSupportIndicator),
        ('supportedCamelPhases', _SGSN_Capability_supportedCamelPhases),
        ('supportedLCS-CapabilitySets', _SGSN_Capability_supportedLCS_CapabilitySets),
        ('offeredCamel4CSIs', _SGSN_Capability_offeredCamel4CSIs),
        ('smsCallBarringSupportIndicator', _SGSN_Capability_smsCallBarringSupportIndicator),
        ('supportedRAT-TypesIndicator', _SGSN_Capability_supportedRAT_TypesIndicator),
        ('supportedFeatures', _SGSN_Capability_supportedFeatures),
        ('t-adsDataRetrieval', _SGSN_Capability_t_adsDataRetrieval),
        ('homogeneousSupportOfIMSVoiceOverPSSessions', _SGSN_Capability_homogeneousSupportOfIMSVoiceOverPSSessions),
        ('cancellationTypeInitialAttach', _SGSN_Capability_cancellationTypeInitialAttach),
        ('msisdn-lessOperation-Supported', _SGSN_Capability_msisdn_lessOperation_Supported),
        ('updateofHomogeneousSupportOfIMSVoiceOverPSSessions', _SGSN_Capability_updateofHomogeneousSupportOfIMSVoiceOverPSSessions),
        ('reset-ids-Supported', _SGSN_Capability_reset_ids_Supported),
        ('ext-SupportedFeatures', _SGSN_Capability_ext_SupportedFeatures),
        ])
    SGSN_Capability._ext = ['superChargerSupportedInServingNetworkEntity', 'gprsEnhancementsSupportIndicator', 'supportedCamelPhases', 'supportedLCS-CapabilitySets', 'offeredCamel4CSIs', 'smsCallBarringSupportIndicator', 'supportedRAT-TypesIndicator', 'supportedFeatures', 't-adsDataRetrieval', 'homogeneousSupportOfIMSVoiceOverPSSessions', 'cancellationTypeInitialAttach', 'msisdn-lessOperation-Supported', 'updateofHomogeneousSupportOfIMSVoiceOverPSSessions', 'reset-ids-Supported', 'ext-SupportedFeatures']
    
    #-----< SupportedFeatures >-----#
    SupportedFeatures = BIT_STR(name='SupportedFeatures', mode=MODE_TYPE)
    SupportedFeatures._cont = ASN1Dict([('odb-all-apn', 0), ('odb-HPLMN-APN', 1), ('odb-VPLMN-APN', 2), ('odb-all-og', 3), ('odb-all-international-og', 4), ('odb-all-int-og-not-to-HPLMN-country', 5), ('odb-all-interzonal-og', 6), ('odb-all-interzonal-og-not-to-HPLMN-country', 7), ('odb-all-interzonal-og-and-internat-og-not-to-HPLMN-country', 8), ('regSub', 9), ('trace', 10), ('lcs-all-PrivExcep', 11), ('lcs-universal', 12), ('lcs-CallSessionRelated', 13), ('lcs-CallSessionUnrelated', 14), ('lcs-PLMN-operator', 15), ('lcs-ServiceType', 16), ('lcs-all-MOLR-SS', 17), ('lcs-basicSelfLocation', 18), ('lcs-autonomousSelfLocation', 19), ('lcs-transferToThirdParty', 20), ('sm-mo-pp', 21), ('barring-OutgoingCalls', 22), ('baoc', 23), ('boic', 24), ('boicExHC', 25), ('localTimeZoneRetrieval', 26), ('additionalMsisdn', 27), ('smsInMME', 28), ('smsInSGSN', 29), ('ue-Reachability-Notification', 30), ('state-Location-Information-Retrieval', 31), ('partialPurge', 32), ('gddInSGSN', 33), ('sgsnCAMELCapability', 34), ('pcscf-Restoration', 35), ('dedicatedCoreNetworks', 36), ('non-IP-PDN-Type-APNs', 37), ('non-IP-PDP-Type-APNs', 38), ('nrAsSecondaryRAT', 39)])
    SupportedFeatures._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=26, ub=40)], ev=None, er=[])
    
    #-----< Ext-SupportedFeatures >-----#
    Ext_SupportedFeatures = BIT_STR(name='Ext-SupportedFeatures', mode=MODE_TYPE)
    Ext_SupportedFeatures._cont = ASN1Dict([('unlicensedSpectrumAsSecondaryRAT', 0)])
    Ext_SupportedFeatures._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=40)], ev=None, er=[])
    
    #-----< UE-SRVCC-Capability >-----#
    UE_SRVCC_Capability = ENUM(name='UE-SRVCC-Capability', mode=MODE_TYPE)
    UE_SRVCC_Capability._cont = ASN1Dict([('ue-srvcc-not-supported', 0), ('ue-srvcc-supported', 1)])
    UE_SRVCC_Capability._ext = []
    
    #-----< UpdateGprsLocationRes >-----#
    UpdateGprsLocationRes = SEQ(name='UpdateGprsLocationRes', mode=MODE_TYPE)
    _UpdateGprsLocationRes_hlr_Number = OCT_STR(name='hlr-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _UpdateGprsLocationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _UpdateGprsLocationRes_add_Capability = NULL(name='add-Capability', mode=MODE_TYPE, opt=True)
    _UpdateGprsLocationRes_sgsn_mmeSeparationSupported = NULL(name='sgsn-mmeSeparationSupported', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationRes_mmeRegisteredforSMS = NULL(name='mmeRegisteredforSMS', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    UpdateGprsLocationRes._cont = ASN1Dict([
        ('hlr-Number', _UpdateGprsLocationRes_hlr_Number),
        ('extensionContainer', _UpdateGprsLocationRes_extensionContainer),
        ('add-Capability', _UpdateGprsLocationRes_add_Capability),
        ('sgsn-mmeSeparationSupported', _UpdateGprsLocationRes_sgsn_mmeSeparationSupported),
        ('mmeRegisteredforSMS', _UpdateGprsLocationRes_mmeRegisteredforSMS),
        ])
    UpdateGprsLocationRes._ext = ['add-Capability', 'sgsn-mmeSeparationSupported', 'mmeRegisteredforSMS']
    
    #-----< EPLMN-List >-----#
    EPLMN_List = SEQ_OF(name='EPLMN-List', mode=MODE_TYPE)
    _EPLMN_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')))
    EPLMN_List._cont = _EPLMN_List__item_
    EPLMN_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< AdjacentPLMN-List >-----#
    AdjacentPLMN_List = SEQ_OF(name='AdjacentPLMN-List', mode=MODE_TYPE)
    _AdjacentPLMN_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')))
    AdjacentPLMN_List._cont = _AdjacentPLMN_List__item_
    AdjacentPLMN_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< ForwardAccessSignalling-Arg >-----#
    ForwardAccessSignalling_Arg = SEQ(name='ForwardAccessSignalling-Arg', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ForwardAccessSignalling_Arg_an_APDU = SEQ(name='an-APDU', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AccessNetworkSignalInfo')))
    _ForwardAccessSignalling_Arg_integrityProtectionInfo = OCT_STR(name='integrityProtectionInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'IntegrityProtectionInformation')), opt=True)
    _ForwardAccessSignalling_Arg_encryptionInfo = OCT_STR(name='encryptionInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EncryptionInformation')), opt=True)
    _ForwardAccessSignalling_Arg_keyStatus = ENUM(name='keyStatus', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'KeyStatus')), opt=True)
    _ForwardAccessSignalling_Arg_allowedGSM_Algorithms = OCT_STR(name='allowedGSM-Algorithms', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AllowedGSM-Algorithms')), opt=True)
    _ForwardAccessSignalling_Arg_allowedUMTS_Algorithms = SEQ(name='allowedUMTS-Algorithms', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AllowedUMTS-Algorithms')), opt=True)
    _ForwardAccessSignalling_Arg_radioResourceInformation = OCT_STR(name='radioResourceInformation', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RadioResourceInformation')), opt=True)
    _ForwardAccessSignalling_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ForwardAccessSignalling_Arg_radioResourceList = SEQ_OF(name='radioResourceList', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RadioResourceList')), opt=True)
    _ForwardAccessSignalling_Arg_bssmap_ServiceHandover = OCT_STR(name='bssmap-ServiceHandover', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BSSMAP-ServiceHandover')), opt=True)
    _ForwardAccessSignalling_Arg_ranap_ServiceHandover = OCT_STR(name='ranap-ServiceHandover', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RANAP-ServiceHandover')), opt=True)
    _ForwardAccessSignalling_Arg_bssmap_ServiceHandoverList = SEQ_OF(name='bssmap-ServiceHandoverList', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BSSMAP-ServiceHandoverList')), opt=True)
    _ForwardAccessSignalling_Arg_currentlyUsedCodec = OCT_STR(name='currentlyUsedCodec', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _ForwardAccessSignalling_Arg_iuSupportedCodecsList = SEQ(name='iuSupportedCodecsList', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedCodecsList')), opt=True)
    _ForwardAccessSignalling_Arg_rab_ConfigurationIndicator = NULL(name='rab-ConfigurationIndicator', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ForwardAccessSignalling_Arg_iuSelectedCodec = OCT_STR(name='iuSelectedCodec', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _ForwardAccessSignalling_Arg_alternativeChannelType = OCT_STR(name='alternativeChannelType', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RadioResourceInformation')), opt=True)
    _ForwardAccessSignalling_Arg_tracePropagationList = SEQ(name='tracePropagationList', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TracePropagationList')), opt=True)
    _ForwardAccessSignalling_Arg_aoipSupportedCodecsListAnchor = SEQ(name='aoipSupportedCodecsListAnchor', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodecsList')), opt=True)
    _ForwardAccessSignalling_Arg_aoipSelectedCodecTarget = OCT_STR(name='aoipSelectedCodecTarget', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _ForwardAccessSignalling_Arg_uesbi_Iu = SEQ(name='uesbi-Iu', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UESBI-Iu')), opt=True)
    _ForwardAccessSignalling_Arg_imeisv = OCT_STR(name='imeisv', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMEI')), opt=True)
    ForwardAccessSignalling_Arg._cont = ASN1Dict([
        ('an-APDU', _ForwardAccessSignalling_Arg_an_APDU),
        ('integrityProtectionInfo', _ForwardAccessSignalling_Arg_integrityProtectionInfo),
        ('encryptionInfo', _ForwardAccessSignalling_Arg_encryptionInfo),
        ('keyStatus', _ForwardAccessSignalling_Arg_keyStatus),
        ('allowedGSM-Algorithms', _ForwardAccessSignalling_Arg_allowedGSM_Algorithms),
        ('allowedUMTS-Algorithms', _ForwardAccessSignalling_Arg_allowedUMTS_Algorithms),
        ('radioResourceInformation', _ForwardAccessSignalling_Arg_radioResourceInformation),
        ('extensionContainer', _ForwardAccessSignalling_Arg_extensionContainer),
        ('radioResourceList', _ForwardAccessSignalling_Arg_radioResourceList),
        ('bssmap-ServiceHandover', _ForwardAccessSignalling_Arg_bssmap_ServiceHandover),
        ('ranap-ServiceHandover', _ForwardAccessSignalling_Arg_ranap_ServiceHandover),
        ('bssmap-ServiceHandoverList', _ForwardAccessSignalling_Arg_bssmap_ServiceHandoverList),
        ('currentlyUsedCodec', _ForwardAccessSignalling_Arg_currentlyUsedCodec),
        ('iuSupportedCodecsList', _ForwardAccessSignalling_Arg_iuSupportedCodecsList),
        ('rab-ConfigurationIndicator', _ForwardAccessSignalling_Arg_rab_ConfigurationIndicator),
        ('iuSelectedCodec', _ForwardAccessSignalling_Arg_iuSelectedCodec),
        ('alternativeChannelType', _ForwardAccessSignalling_Arg_alternativeChannelType),
        ('tracePropagationList', _ForwardAccessSignalling_Arg_tracePropagationList),
        ('aoipSupportedCodecsListAnchor', _ForwardAccessSignalling_Arg_aoipSupportedCodecsListAnchor),
        ('aoipSelectedCodecTarget', _ForwardAccessSignalling_Arg_aoipSelectedCodecTarget),
        ('uesbi-Iu', _ForwardAccessSignalling_Arg_uesbi_Iu),
        ('imeisv', _ForwardAccessSignalling_Arg_imeisv),
        ])
    ForwardAccessSignalling_Arg._ext = ['radioResourceList', 'bssmap-ServiceHandover', 'ranap-ServiceHandover', 'bssmap-ServiceHandoverList', 'currentlyUsedCodec', 'iuSupportedCodecsList', 'rab-ConfigurationIndicator', 'iuSelectedCodec', 'alternativeChannelType', 'tracePropagationList', 'aoipSupportedCodecsListAnchor', 'aoipSelectedCodecTarget', 'uesbi-Iu', 'imeisv']
    
    #-----< AllowedGSM-Algorithms >-----#
    AllowedGSM_Algorithms = OCT_STR(name='AllowedGSM-Algorithms', mode=MODE_TYPE)
    AllowedGSM_Algorithms._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< AllowedUMTS-Algorithms >-----#
    AllowedUMTS_Algorithms = SEQ(name='AllowedUMTS-Algorithms', mode=MODE_TYPE)
    _AllowedUMTS_Algorithms_integrityProtectionAlgorithms = OCT_STR(name='integrityProtectionAlgorithms', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PermittedIntegrityProtectionAlgorithms')), opt=True)
    _AllowedUMTS_Algorithms_encryptionAlgorithms = OCT_STR(name='encryptionAlgorithms', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PermittedEncryptionAlgorithms')), opt=True)
    _AllowedUMTS_Algorithms_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    AllowedUMTS_Algorithms._cont = ASN1Dict([
        ('integrityProtectionAlgorithms', _AllowedUMTS_Algorithms_integrityProtectionAlgorithms),
        ('encryptionAlgorithms', _AllowedUMTS_Algorithms_encryptionAlgorithms),
        ('extensionContainer', _AllowedUMTS_Algorithms_extensionContainer),
        ])
    AllowedUMTS_Algorithms._ext = []
    
    #-----< PermittedIntegrityProtectionAlgorithms >-----#
    PermittedIntegrityProtectionAlgorithms = OCT_STR(name='PermittedIntegrityProtectionAlgorithms', mode=MODE_TYPE)
    PermittedIntegrityProtectionAlgorithms._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    
    #-----< maxPermittedIntegrityProtectionAlgorithmsLength >-----#
    maxPermittedIntegrityProtectionAlgorithmsLength = INT(name='maxPermittedIntegrityProtectionAlgorithmsLength', mode=MODE_VALUE)
    maxPermittedIntegrityProtectionAlgorithmsLength._val = 9
    
    #-----< PermittedEncryptionAlgorithms >-----#
    PermittedEncryptionAlgorithms = OCT_STR(name='PermittedEncryptionAlgorithms', mode=MODE_TYPE)
    PermittedEncryptionAlgorithms._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    
    #-----< maxPermittedEncryptionAlgorithmsLength >-----#
    maxPermittedEncryptionAlgorithmsLength = INT(name='maxPermittedEncryptionAlgorithmsLength', mode=MODE_VALUE)
    maxPermittedEncryptionAlgorithmsLength._val = 9
    
    #-----< KeyStatus >-----#
    KeyStatus = ENUM(name='KeyStatus', mode=MODE_TYPE)
    KeyStatus._cont = ASN1Dict([('old', 0), ('new', 1)])
    KeyStatus._ext = []
    
    #-----< PrepareHO-Arg >-----#
    PrepareHO_Arg = SEQ(name='PrepareHO-Arg', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PrepareHO_Arg_targetCellId = OCT_STR(name='targetCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GlobalCellId')), opt=True)
    _PrepareHO_Arg_ho_NumberNotRequired = NULL(name='ho-NumberNotRequired', mode=MODE_TYPE, opt=True)
    _PrepareHO_Arg_targetRNCId = OCT_STR(name='targetRNCId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RNCId')), opt=True)
    _PrepareHO_Arg_an_APDU = SEQ(name='an-APDU', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AccessNetworkSignalInfo')), opt=True)
    _PrepareHO_Arg_multipleBearerRequested = NULL(name='multipleBearerRequested', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PrepareHO_Arg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _PrepareHO_Arg_integrityProtectionInfo = OCT_STR(name='integrityProtectionInfo', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'IntegrityProtectionInformation')), opt=True)
    _PrepareHO_Arg_encryptionInfo = OCT_STR(name='encryptionInfo', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EncryptionInformation')), opt=True)
    _PrepareHO_Arg_radioResourceInformation = OCT_STR(name='radioResourceInformation', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RadioResourceInformation')), opt=True)
    _PrepareHO_Arg_allowedGSM_Algorithms = OCT_STR(name='allowedGSM-Algorithms', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AllowedGSM-Algorithms')), opt=True)
    _PrepareHO_Arg_allowedUMTS_Algorithms = SEQ(name='allowedUMTS-Algorithms', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AllowedUMTS-Algorithms')), opt=True)
    _PrepareHO_Arg_radioResourceList = SEQ_OF(name='radioResourceList', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RadioResourceList')), opt=True)
    _PrepareHO_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _PrepareHO_Arg_rab_Id = INT(name='rab-Id', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAB-Id')), opt=True)
    _PrepareHO_Arg_bssmap_ServiceHandover = OCT_STR(name='bssmap-ServiceHandover', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BSSMAP-ServiceHandover')), opt=True)
    _PrepareHO_Arg_ranap_ServiceHandover = OCT_STR(name='ranap-ServiceHandover', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RANAP-ServiceHandover')), opt=True)
    _PrepareHO_Arg_bssmap_ServiceHandoverList = SEQ_OF(name='bssmap-ServiceHandoverList', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BSSMAP-ServiceHandoverList')), opt=True)
    _PrepareHO_Arg_asciCallReference = OCT_STR(name='asciCallReference', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ASCI-CallReference')), opt=True)
    _PrepareHO_Arg_geran_classmark = OCT_STR(name='geran-classmark', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GERAN-Classmark')), opt=True)
    _PrepareHO_Arg_iuCurrentlyUsedCodec = OCT_STR(name='iuCurrentlyUsedCodec', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _PrepareHO_Arg_iuSupportedCodecsList = SEQ(name='iuSupportedCodecsList', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedCodecsList')), opt=True)
    _PrepareHO_Arg_rab_ConfigurationIndicator = NULL(name='rab-ConfigurationIndicator', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PrepareHO_Arg_uesbi_Iu = SEQ(name='uesbi-Iu', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UESBI-Iu')), opt=True)
    _PrepareHO_Arg_imeisv = OCT_STR(name='imeisv', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMEI')), opt=True)
    _PrepareHO_Arg_alternativeChannelType = OCT_STR(name='alternativeChannelType', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RadioResourceInformation')), opt=True)
    _PrepareHO_Arg_tracePropagationList = SEQ(name='tracePropagationList', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TracePropagationList')), opt=True)
    _PrepareHO_Arg_aoipSupportedCodecsListAnchor = SEQ(name='aoipSupportedCodecsListAnchor', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodecsList')), opt=True)
    _PrepareHO_Arg_regionalSubscriptionData = SEQ_OF(name='regionalSubscriptionData', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ZoneCodeList')), opt=True)
    _PrepareHO_Arg_lclsGlobalCallReference = OCT_STR(name='lclsGlobalCallReference', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LCLS-GlobalCallReference')), opt=True)
    _PrepareHO_Arg_lcls_Negotiation = BIT_STR(name='lcls-Negotiation', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LCLS-Negotiation')), opt=True)
    _PrepareHO_Arg_lcls_Configuration_Preference = BIT_STR(name='lcls-Configuration-Preference', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LCLS-ConfigurationPreference')), opt=True)
    _PrepareHO_Arg_csg_SubscriptionDataList = SEQ_OF(name='csg-SubscriptionDataList', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CSG-SubscriptionDataList')), opt=True)
    PrepareHO_Arg._cont = ASN1Dict([
        ('targetCellId', _PrepareHO_Arg_targetCellId),
        ('ho-NumberNotRequired', _PrepareHO_Arg_ho_NumberNotRequired),
        ('targetRNCId', _PrepareHO_Arg_targetRNCId),
        ('an-APDU', _PrepareHO_Arg_an_APDU),
        ('multipleBearerRequested', _PrepareHO_Arg_multipleBearerRequested),
        ('imsi', _PrepareHO_Arg_imsi),
        ('integrityProtectionInfo', _PrepareHO_Arg_integrityProtectionInfo),
        ('encryptionInfo', _PrepareHO_Arg_encryptionInfo),
        ('radioResourceInformation', _PrepareHO_Arg_radioResourceInformation),
        ('allowedGSM-Algorithms', _PrepareHO_Arg_allowedGSM_Algorithms),
        ('allowedUMTS-Algorithms', _PrepareHO_Arg_allowedUMTS_Algorithms),
        ('radioResourceList', _PrepareHO_Arg_radioResourceList),
        ('extensionContainer', _PrepareHO_Arg_extensionContainer),
        ('rab-Id', _PrepareHO_Arg_rab_Id),
        ('bssmap-ServiceHandover', _PrepareHO_Arg_bssmap_ServiceHandover),
        ('ranap-ServiceHandover', _PrepareHO_Arg_ranap_ServiceHandover),
        ('bssmap-ServiceHandoverList', _PrepareHO_Arg_bssmap_ServiceHandoverList),
        ('asciCallReference', _PrepareHO_Arg_asciCallReference),
        ('geran-classmark', _PrepareHO_Arg_geran_classmark),
        ('iuCurrentlyUsedCodec', _PrepareHO_Arg_iuCurrentlyUsedCodec),
        ('iuSupportedCodecsList', _PrepareHO_Arg_iuSupportedCodecsList),
        ('rab-ConfigurationIndicator', _PrepareHO_Arg_rab_ConfigurationIndicator),
        ('uesbi-Iu', _PrepareHO_Arg_uesbi_Iu),
        ('imeisv', _PrepareHO_Arg_imeisv),
        ('alternativeChannelType', _PrepareHO_Arg_alternativeChannelType),
        ('tracePropagationList', _PrepareHO_Arg_tracePropagationList),
        ('aoipSupportedCodecsListAnchor', _PrepareHO_Arg_aoipSupportedCodecsListAnchor),
        ('regionalSubscriptionData', _PrepareHO_Arg_regionalSubscriptionData),
        ('lclsGlobalCallReference', _PrepareHO_Arg_lclsGlobalCallReference),
        ('lcls-Negotiation', _PrepareHO_Arg_lcls_Negotiation),
        ('lcls-Configuration-Preference', _PrepareHO_Arg_lcls_Configuration_Preference),
        ('csg-SubscriptionDataList', _PrepareHO_Arg_csg_SubscriptionDataList),
        ])
    PrepareHO_Arg._ext = ['rab-Id', 'bssmap-ServiceHandover', 'ranap-ServiceHandover', 'bssmap-ServiceHandoverList', 'asciCallReference', 'geran-classmark', 'iuCurrentlyUsedCodec', 'iuSupportedCodecsList', 'rab-ConfigurationIndicator', 'uesbi-Iu', 'imeisv', 'alternativeChannelType', 'tracePropagationList', 'aoipSupportedCodecsListAnchor', 'regionalSubscriptionData', 'lclsGlobalCallReference', 'lcls-Negotiation', 'lcls-Configuration-Preference', 'csg-SubscriptionDataList']
    
    #-----< LCLS-GlobalCallReference >-----#
    LCLS_GlobalCallReference = OCT_STR(name='LCLS-GlobalCallReference', mode=MODE_TYPE)
    LCLS_GlobalCallReference._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=13, ub=15)], ev=None, er=[])
    
    #-----< LCLS-Negotiation >-----#
    LCLS_Negotiation = BIT_STR(name='LCLS-Negotiation', mode=MODE_TYPE)
    LCLS_Negotiation._cont = ASN1Dict([('permission-indicator-not-allowed-bit', 0), ('permission-indicator-spare-bit', 1)])
    LCLS_Negotiation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=8)], ev=None, er=[])
    
    #-----< LCLS-ConfigurationPreference >-----#
    LCLS_ConfigurationPreference = BIT_STR(name='LCLS-ConfigurationPreference', mode=MODE_TYPE)
    LCLS_ConfigurationPreference._cont = ASN1Dict([('forward-data-sending-indicator', 0), ('backward-data-sending-indicator', 1), ('forward-data-reception-indicator', 2), ('backward-data-reception-indicator', 3)])
    LCLS_ConfigurationPreference._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=4, ub=8)], ev=None, er=[])
    
    #-----< BSSMAP-ServiceHandoverList >-----#
    BSSMAP_ServiceHandoverList = SEQ_OF(name='BSSMAP-ServiceHandoverList', mode=MODE_TYPE)
    _BSSMAP_ServiceHandoverList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'BSSMAP-ServiceHandoverInfo')))
    BSSMAP_ServiceHandoverList._cont = _BSSMAP_ServiceHandoverList__item_
    BSSMAP_ServiceHandoverList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=7)], ev=None, er=[])
    
    #-----< BSSMAP-ServiceHandoverInfo >-----#
    BSSMAP_ServiceHandoverInfo = SEQ(name='BSSMAP-ServiceHandoverInfo', mode=MODE_TYPE)
    _BSSMAP_ServiceHandoverInfo_bssmap_ServiceHandover = OCT_STR(name='bssmap-ServiceHandover', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'BSSMAP-ServiceHandover')))
    _BSSMAP_ServiceHandoverInfo_rab_Id = INT(name='rab-Id', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAB-Id')))
    BSSMAP_ServiceHandoverInfo._cont = ASN1Dict([
        ('bssmap-ServiceHandover', _BSSMAP_ServiceHandoverInfo_bssmap_ServiceHandover),
        ('rab-Id', _BSSMAP_ServiceHandoverInfo_rab_Id),
        ])
    BSSMAP_ServiceHandoverInfo._ext = []
    
    #-----< maxNumOfServiceHandovers >-----#
    maxNumOfServiceHandovers = INT(name='maxNumOfServiceHandovers', mode=MODE_VALUE)
    maxNumOfServiceHandovers._val = 7
    
    #-----< BSSMAP-ServiceHandover >-----#
    BSSMAP_ServiceHandover = OCT_STR(name='BSSMAP-ServiceHandover', mode=MODE_TYPE)
    BSSMAP_ServiceHandover._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< RANAP-ServiceHandover >-----#
    RANAP_ServiceHandover = OCT_STR(name='RANAP-ServiceHandover', mode=MODE_TYPE)
    RANAP_ServiceHandover._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< RadioResourceList >-----#
    RadioResourceList = SEQ_OF(name='RadioResourceList', mode=MODE_TYPE)
    _RadioResourceList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RadioResource')))
    RadioResourceList._cont = _RadioResourceList__item_
    RadioResourceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=7)], ev=None, er=[])
    
    #-----< RadioResource >-----#
    RadioResource = SEQ(name='RadioResource', mode=MODE_TYPE)
    _RadioResource_radioResourceInformation = OCT_STR(name='radioResourceInformation', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RadioResourceInformation')))
    _RadioResource_rab_Id = INT(name='rab-Id', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAB-Id')))
    RadioResource._cont = ASN1Dict([
        ('radioResourceInformation', _RadioResource_radioResourceInformation),
        ('rab-Id', _RadioResource_rab_Id),
        ])
    RadioResource._ext = []
    
    #-----< maxNumOfRadioResources >-----#
    maxNumOfRadioResources = INT(name='maxNumOfRadioResources', mode=MODE_VALUE)
    maxNumOfRadioResources._val = 7
    
    #-----< PrepareHO-Res >-----#
    PrepareHO_Res = SEQ(name='PrepareHO-Res', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PrepareHO_Res_handoverNumber = OCT_STR(name='handoverNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _PrepareHO_Res_relocationNumberList = SEQ_OF(name='relocationNumberList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RelocationNumberList')), opt=True)
    _PrepareHO_Res_an_APDU = SEQ(name='an-APDU', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AccessNetworkSignalInfo')), opt=True)
    _PrepareHO_Res_multicallBearerInfo = INT(name='multicallBearerInfo', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MulticallBearerInfo')), opt=True)
    _PrepareHO_Res_multipleBearerNotSupported = NULL(name='multipleBearerNotSupported', mode=MODE_TYPE, opt=True)
    _PrepareHO_Res_selectedUMTS_Algorithms = SEQ(name='selectedUMTS-Algorithms', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SelectedUMTS-Algorithms')), opt=True)
    _PrepareHO_Res_chosenRadioResourceInformation = SEQ(name='chosenRadioResourceInformation', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChosenRadioResourceInformation')), opt=True)
    _PrepareHO_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _PrepareHO_Res_iuSelectedCodec = OCT_STR(name='iuSelectedCodec', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _PrepareHO_Res_iuAvailableCodecsList = SEQ(name='iuAvailableCodecsList', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CodecList')), opt=True)
    _PrepareHO_Res_aoipSelectedCodecTarget = OCT_STR(name='aoipSelectedCodecTarget', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _PrepareHO_Res_aoipAvailableCodecsListMap = SEQ(name='aoipAvailableCodecsListMap', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodecsList')), opt=True)
    PrepareHO_Res._cont = ASN1Dict([
        ('handoverNumber', _PrepareHO_Res_handoverNumber),
        ('relocationNumberList', _PrepareHO_Res_relocationNumberList),
        ('an-APDU', _PrepareHO_Res_an_APDU),
        ('multicallBearerInfo', _PrepareHO_Res_multicallBearerInfo),
        ('multipleBearerNotSupported', _PrepareHO_Res_multipleBearerNotSupported),
        ('selectedUMTS-Algorithms', _PrepareHO_Res_selectedUMTS_Algorithms),
        ('chosenRadioResourceInformation', _PrepareHO_Res_chosenRadioResourceInformation),
        ('extensionContainer', _PrepareHO_Res_extensionContainer),
        ('iuSelectedCodec', _PrepareHO_Res_iuSelectedCodec),
        ('iuAvailableCodecsList', _PrepareHO_Res_iuAvailableCodecsList),
        ('aoipSelectedCodecTarget', _PrepareHO_Res_aoipSelectedCodecTarget),
        ('aoipAvailableCodecsListMap', _PrepareHO_Res_aoipAvailableCodecsListMap),
        ])
    PrepareHO_Res._ext = ['iuSelectedCodec', 'iuAvailableCodecsList', 'aoipSelectedCodecTarget', 'aoipAvailableCodecsListMap']
    
    #-----< SelectedUMTS-Algorithms >-----#
    SelectedUMTS_Algorithms = SEQ(name='SelectedUMTS-Algorithms', mode=MODE_TYPE)
    _SelectedUMTS_Algorithms_integrityProtectionAlgorithm = OCT_STR(name='integrityProtectionAlgorithm', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChosenIntegrityProtectionAlgorithm')), opt=True)
    _SelectedUMTS_Algorithms_encryptionAlgorithm = OCT_STR(name='encryptionAlgorithm', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChosenEncryptionAlgorithm')), opt=True)
    _SelectedUMTS_Algorithms_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SelectedUMTS_Algorithms._cont = ASN1Dict([
        ('integrityProtectionAlgorithm', _SelectedUMTS_Algorithms_integrityProtectionAlgorithm),
        ('encryptionAlgorithm', _SelectedUMTS_Algorithms_encryptionAlgorithm),
        ('extensionContainer', _SelectedUMTS_Algorithms_extensionContainer),
        ])
    SelectedUMTS_Algorithms._ext = []
    
    #-----< ChosenIntegrityProtectionAlgorithm >-----#
    ChosenIntegrityProtectionAlgorithm = OCT_STR(name='ChosenIntegrityProtectionAlgorithm', mode=MODE_TYPE)
    ChosenIntegrityProtectionAlgorithm._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< ChosenEncryptionAlgorithm >-----#
    ChosenEncryptionAlgorithm = OCT_STR(name='ChosenEncryptionAlgorithm', mode=MODE_TYPE)
    ChosenEncryptionAlgorithm._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< ChosenRadioResourceInformation >-----#
    ChosenRadioResourceInformation = SEQ(name='ChosenRadioResourceInformation', mode=MODE_TYPE)
    _ChosenRadioResourceInformation_chosenChannelInfo = OCT_STR(name='chosenChannelInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChosenChannelInfo')), opt=True)
    _ChosenRadioResourceInformation_chosenSpeechVersion = OCT_STR(name='chosenSpeechVersion', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChosenSpeechVersion')), opt=True)
    ChosenRadioResourceInformation._cont = ASN1Dict([
        ('chosenChannelInfo', _ChosenRadioResourceInformation_chosenChannelInfo),
        ('chosenSpeechVersion', _ChosenRadioResourceInformation_chosenSpeechVersion),
        ])
    ChosenRadioResourceInformation._ext = []
    
    #-----< ChosenChannelInfo >-----#
    ChosenChannelInfo = OCT_STR(name='ChosenChannelInfo', mode=MODE_TYPE)
    ChosenChannelInfo._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< ChosenSpeechVersion >-----#
    ChosenSpeechVersion = OCT_STR(name='ChosenSpeechVersion', mode=MODE_TYPE)
    ChosenSpeechVersion._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< PrepareSubsequentHO-Arg >-----#
    PrepareSubsequentHO_Arg = SEQ(name='PrepareSubsequentHO-Arg', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PrepareSubsequentHO_Arg_targetCellId = OCT_STR(name='targetCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GlobalCellId')), opt=True)
    _PrepareSubsequentHO_Arg_targetMSC_Number = OCT_STR(name='targetMSC-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _PrepareSubsequentHO_Arg_targetRNCId = OCT_STR(name='targetRNCId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RNCId')), opt=True)
    _PrepareSubsequentHO_Arg_an_APDU = SEQ(name='an-APDU', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AccessNetworkSignalInfo')), opt=True)
    _PrepareSubsequentHO_Arg_selectedRab_Id = INT(name='selectedRab-Id', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAB-Id')), opt=True)
    _PrepareSubsequentHO_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _PrepareSubsequentHO_Arg_geran_classmark = OCT_STR(name='geran-classmark', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GERAN-Classmark')), opt=True)
    _PrepareSubsequentHO_Arg_rab_ConfigurationIndicator = NULL(name='rab-ConfigurationIndicator', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    PrepareSubsequentHO_Arg._cont = ASN1Dict([
        ('targetCellId', _PrepareSubsequentHO_Arg_targetCellId),
        ('targetMSC-Number', _PrepareSubsequentHO_Arg_targetMSC_Number),
        ('targetRNCId', _PrepareSubsequentHO_Arg_targetRNCId),
        ('an-APDU', _PrepareSubsequentHO_Arg_an_APDU),
        ('selectedRab-Id', _PrepareSubsequentHO_Arg_selectedRab_Id),
        ('extensionContainer', _PrepareSubsequentHO_Arg_extensionContainer),
        ('geran-classmark', _PrepareSubsequentHO_Arg_geran_classmark),
        ('rab-ConfigurationIndicator', _PrepareSubsequentHO_Arg_rab_ConfigurationIndicator),
        ])
    PrepareSubsequentHO_Arg._ext = ['geran-classmark', 'rab-ConfigurationIndicator']
    
    #-----< PrepareSubsequentHO-Res >-----#
    PrepareSubsequentHO_Res = SEQ(name='PrepareSubsequentHO-Res', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PrepareSubsequentHO_Res_an_APDU = SEQ(name='an-APDU', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AccessNetworkSignalInfo')))
    _PrepareSubsequentHO_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    PrepareSubsequentHO_Res._cont = ASN1Dict([
        ('an-APDU', _PrepareSubsequentHO_Res_an_APDU),
        ('extensionContainer', _PrepareSubsequentHO_Res_extensionContainer),
        ])
    PrepareSubsequentHO_Res._ext = []
    
    #-----< ProcessAccessSignalling-Arg >-----#
    ProcessAccessSignalling_Arg = SEQ(name='ProcessAccessSignalling-Arg', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProcessAccessSignalling_Arg_an_APDU = SEQ(name='an-APDU', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AccessNetworkSignalInfo')))
    _ProcessAccessSignalling_Arg_selectedUMTS_Algorithms = SEQ(name='selectedUMTS-Algorithms', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SelectedUMTS-Algorithms')), opt=True)
    _ProcessAccessSignalling_Arg_selectedGSM_Algorithm = OCT_STR(name='selectedGSM-Algorithm', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SelectedGSM-Algorithm')), opt=True)
    _ProcessAccessSignalling_Arg_chosenRadioResourceInformation = SEQ(name='chosenRadioResourceInformation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChosenRadioResourceInformation')), opt=True)
    _ProcessAccessSignalling_Arg_selectedRab_Id = INT(name='selectedRab-Id', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAB-Id')), opt=True)
    _ProcessAccessSignalling_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ProcessAccessSignalling_Arg_iUSelectedCodec = OCT_STR(name='iUSelectedCodec', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _ProcessAccessSignalling_Arg_iuAvailableCodecsList = SEQ(name='iuAvailableCodecsList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CodecList')), opt=True)
    _ProcessAccessSignalling_Arg_aoipSelectedCodecTarget = OCT_STR(name='aoipSelectedCodecTarget', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _ProcessAccessSignalling_Arg_aoipAvailableCodecsListMap = SEQ(name='aoipAvailableCodecsListMap', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodecsList')), opt=True)
    ProcessAccessSignalling_Arg._cont = ASN1Dict([
        ('an-APDU', _ProcessAccessSignalling_Arg_an_APDU),
        ('selectedUMTS-Algorithms', _ProcessAccessSignalling_Arg_selectedUMTS_Algorithms),
        ('selectedGSM-Algorithm', _ProcessAccessSignalling_Arg_selectedGSM_Algorithm),
        ('chosenRadioResourceInformation', _ProcessAccessSignalling_Arg_chosenRadioResourceInformation),
        ('selectedRab-Id', _ProcessAccessSignalling_Arg_selectedRab_Id),
        ('extensionContainer', _ProcessAccessSignalling_Arg_extensionContainer),
        ('iUSelectedCodec', _ProcessAccessSignalling_Arg_iUSelectedCodec),
        ('iuAvailableCodecsList', _ProcessAccessSignalling_Arg_iuAvailableCodecsList),
        ('aoipSelectedCodecTarget', _ProcessAccessSignalling_Arg_aoipSelectedCodecTarget),
        ('aoipAvailableCodecsListMap', _ProcessAccessSignalling_Arg_aoipAvailableCodecsListMap),
        ])
    ProcessAccessSignalling_Arg._ext = ['iUSelectedCodec', 'iuAvailableCodecsList', 'aoipSelectedCodecTarget', 'aoipAvailableCodecsListMap']
    
    #-----< AoIPCodecsList >-----#
    AoIPCodecsList = SEQ(name='AoIPCodecsList', mode=MODE_TYPE)
    _AoIPCodecsList_codec1 = OCT_STR(name='codec1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')))
    _AoIPCodecsList_codec2 = OCT_STR(name='codec2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _AoIPCodecsList_codec3 = OCT_STR(name='codec3', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _AoIPCodecsList_codec4 = OCT_STR(name='codec4', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _AoIPCodecsList_codec5 = OCT_STR(name='codec5', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _AoIPCodecsList_codec6 = OCT_STR(name='codec6', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _AoIPCodecsList_codec7 = OCT_STR(name='codec7', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _AoIPCodecsList_codec8 = OCT_STR(name='codec8', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _AoIPCodecsList_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    AoIPCodecsList._cont = ASN1Dict([
        ('codec1', _AoIPCodecsList_codec1),
        ('codec2', _AoIPCodecsList_codec2),
        ('codec3', _AoIPCodecsList_codec3),
        ('codec4', _AoIPCodecsList_codec4),
        ('codec5', _AoIPCodecsList_codec5),
        ('codec6', _AoIPCodecsList_codec6),
        ('codec7', _AoIPCodecsList_codec7),
        ('codec8', _AoIPCodecsList_codec8),
        ('extensionContainer', _AoIPCodecsList_extensionContainer),
        ])
    AoIPCodecsList._ext = []
    
    #-----< AoIPCodec >-----#
    AoIPCodec = OCT_STR(name='AoIPCodec', mode=MODE_TYPE)
    AoIPCodec._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< SupportedCodecsList >-----#
    SupportedCodecsList = SEQ(name='SupportedCodecsList', mode=MODE_TYPE)
    _SupportedCodecsList_utranCodecList = SEQ(name='utranCodecList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CodecList')), opt=True)
    _SupportedCodecsList_geranCodecList = SEQ(name='geranCodecList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CodecList')), opt=True)
    _SupportedCodecsList_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SupportedCodecsList._cont = ASN1Dict([
        ('utranCodecList', _SupportedCodecsList_utranCodecList),
        ('geranCodecList', _SupportedCodecsList_geranCodecList),
        ('extensionContainer', _SupportedCodecsList_extensionContainer),
        ])
    SupportedCodecsList._ext = []
    
    #-----< CodecList >-----#
    CodecList = SEQ(name='CodecList', mode=MODE_TYPE)
    _CodecList_codec1 = OCT_STR(name='codec1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')))
    _CodecList_codec2 = OCT_STR(name='codec2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _CodecList_codec3 = OCT_STR(name='codec3', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _CodecList_codec4 = OCT_STR(name='codec4', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _CodecList_codec5 = OCT_STR(name='codec5', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _CodecList_codec6 = OCT_STR(name='codec6', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _CodecList_codec7 = OCT_STR(name='codec7', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _CodecList_codec8 = OCT_STR(name='codec8', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _CodecList_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CodecList._cont = ASN1Dict([
        ('codec1', _CodecList_codec1),
        ('codec2', _CodecList_codec2),
        ('codec3', _CodecList_codec3),
        ('codec4', _CodecList_codec4),
        ('codec5', _CodecList_codec5),
        ('codec6', _CodecList_codec6),
        ('codec7', _CodecList_codec7),
        ('codec8', _CodecList_codec8),
        ('extensionContainer', _CodecList_extensionContainer),
        ])
    CodecList._ext = []
    
    #-----< Codec >-----#
    Codec = OCT_STR(name='Codec', mode=MODE_TYPE)
    Codec._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    
    #-----< GERAN-Classmark >-----#
    GERAN_Classmark = OCT_STR(name='GERAN-Classmark', mode=MODE_TYPE)
    GERAN_Classmark._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=87)], ev=None, er=[])
    
    #-----< SelectedGSM-Algorithm >-----#
    SelectedGSM_Algorithm = OCT_STR(name='SelectedGSM-Algorithm', mode=MODE_TYPE)
    SelectedGSM_Algorithm._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< SendEndSignal-Arg >-----#
    SendEndSignal_Arg = SEQ(name='SendEndSignal-Arg', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SendEndSignal_Arg_an_APDU = SEQ(name='an-APDU', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AccessNetworkSignalInfo')))
    _SendEndSignal_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SendEndSignal_Arg._cont = ASN1Dict([
        ('an-APDU', _SendEndSignal_Arg_an_APDU),
        ('extensionContainer', _SendEndSignal_Arg_extensionContainer),
        ])
    SendEndSignal_Arg._ext = []
    
    #-----< SendEndSignal-Res >-----#
    SendEndSignal_Res = SEQ(name='SendEndSignal-Res', mode=MODE_TYPE)
    _SendEndSignal_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SendEndSignal_Res._cont = ASN1Dict([
        ('extensionContainer', _SendEndSignal_Res_extensionContainer),
        ])
    SendEndSignal_Res._ext = []
    
    #-----< RNCId >-----#
    RNCId = OCT_STR(name='RNCId', mode=MODE_TYPE)
    RNCId._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    
    #-----< RelocationNumberList >-----#
    RelocationNumberList = SEQ_OF(name='RelocationNumberList', mode=MODE_TYPE)
    _RelocationNumberList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RelocationNumber')))
    RelocationNumberList._cont = _RelocationNumberList__item_
    RelocationNumberList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=7)], ev=None, er=[])
    
    #-----< MulticallBearerInfo >-----#
    MulticallBearerInfo = INT(name='MulticallBearerInfo', mode=MODE_TYPE)
    MulticallBearerInfo._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=7)], ev=None, er=[])
    
    #-----< RelocationNumber >-----#
    RelocationNumber = SEQ(name='RelocationNumber', mode=MODE_TYPE)
    _RelocationNumber_handoverNumber = OCT_STR(name='handoverNumber', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _RelocationNumber_rab_Id = INT(name='rab-Id', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAB-Id')))
    RelocationNumber._cont = ASN1Dict([
        ('handoverNumber', _RelocationNumber_handoverNumber),
        ('rab-Id', _RelocationNumber_rab_Id),
        ])
    RelocationNumber._ext = []
    
    #-----< RAB-Id >-----#
    RAB_Id = INT(name='RAB-Id', mode=MODE_TYPE)
    RAB_Id._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    
    #-----< maxNrOfRABs >-----#
    maxNrOfRABs = INT(name='maxNrOfRABs', mode=MODE_VALUE)
    maxNrOfRABs._val = 255
    
    #-----< maxNumOfRelocationNumber >-----#
    maxNumOfRelocationNumber = INT(name='maxNumOfRelocationNumber', mode=MODE_VALUE)
    maxNumOfRelocationNumber._val = 7
    
    #-----< RadioResourceInformation >-----#
    RadioResourceInformation = OCT_STR(name='RadioResourceInformation', mode=MODE_TYPE)
    RadioResourceInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=13)], ev=None, er=[])
    
    #-----< IntegrityProtectionInformation >-----#
    IntegrityProtectionInformation = OCT_STR(name='IntegrityProtectionInformation', mode=MODE_TYPE)
    IntegrityProtectionInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=18, ub=100)], ev=None, er=[])
    
    #-----< maxNumOfIntegrityInfo >-----#
    maxNumOfIntegrityInfo = INT(name='maxNumOfIntegrityInfo', mode=MODE_VALUE)
    maxNumOfIntegrityInfo._val = 100
    
    #-----< EncryptionInformation >-----#
    EncryptionInformation = OCT_STR(name='EncryptionInformation', mode=MODE_TYPE)
    EncryptionInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=18, ub=100)], ev=None, er=[])
    
    #-----< maxNumOfEncryptionInfo >-----#
    maxNumOfEncryptionInfo = INT(name='maxNumOfEncryptionInfo', mode=MODE_VALUE)
    maxNumOfEncryptionInfo._val = 100
    
    #-----< SendAuthenticationInfoArg >-----#
    SendAuthenticationInfoArg = SEQ(name='SendAuthenticationInfoArg', mode=MODE_TYPE)
    _SendAuthenticationInfoArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _SendAuthenticationInfoArg_numberOfRequestedVectors = INT(name='numberOfRequestedVectors', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NumberOfRequestedVectors')))
    _SendAuthenticationInfoArg_segmentationProhibited = NULL(name='segmentationProhibited', mode=MODE_TYPE, opt=True)
    _SendAuthenticationInfoArg_immediateResponsePreferred = NULL(name='immediateResponsePreferred', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SendAuthenticationInfoArg_re_synchronisationInfo = SEQ(name='re-synchronisationInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Re-synchronisationInfo')), opt=True)
    _SendAuthenticationInfoArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SendAuthenticationInfoArg_requestingNodeType = ENUM(name='requestingNodeType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RequestingNodeType')), opt=True)
    _SendAuthenticationInfoArg_requestingPLMN_Id = OCT_STR(name='requestingPLMN-Id', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')), opt=True)
    _SendAuthenticationInfoArg_numberOfRequestedAdditional_Vectors = INT(name='numberOfRequestedAdditional-Vectors', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'NumberOfRequestedVectors')), opt=True)
    _SendAuthenticationInfoArg_additionalVectorsAreForEPS = NULL(name='additionalVectorsAreForEPS', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SendAuthenticationInfoArg_ueUsageTypeRequestIndication = NULL(name='ueUsageTypeRequestIndication', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SendAuthenticationInfoArg._cont = ASN1Dict([
        ('imsi', _SendAuthenticationInfoArg_imsi),
        ('numberOfRequestedVectors', _SendAuthenticationInfoArg_numberOfRequestedVectors),
        ('segmentationProhibited', _SendAuthenticationInfoArg_segmentationProhibited),
        ('immediateResponsePreferred', _SendAuthenticationInfoArg_immediateResponsePreferred),
        ('re-synchronisationInfo', _SendAuthenticationInfoArg_re_synchronisationInfo),
        ('extensionContainer', _SendAuthenticationInfoArg_extensionContainer),
        ('requestingNodeType', _SendAuthenticationInfoArg_requestingNodeType),
        ('requestingPLMN-Id', _SendAuthenticationInfoArg_requestingPLMN_Id),
        ('numberOfRequestedAdditional-Vectors', _SendAuthenticationInfoArg_numberOfRequestedAdditional_Vectors),
        ('additionalVectorsAreForEPS', _SendAuthenticationInfoArg_additionalVectorsAreForEPS),
        ('ueUsageTypeRequestIndication', _SendAuthenticationInfoArg_ueUsageTypeRequestIndication),
        ])
    SendAuthenticationInfoArg._ext = ['requestingNodeType', 'requestingPLMN-Id', 'numberOfRequestedAdditional-Vectors', 'additionalVectorsAreForEPS', 'ueUsageTypeRequestIndication']
    
    #-----< NumberOfRequestedVectors >-----#
    NumberOfRequestedVectors = INT(name='NumberOfRequestedVectors', mode=MODE_TYPE)
    NumberOfRequestedVectors._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< Re-synchronisationInfo >-----#
    Re_synchronisationInfo = SEQ(name='Re-synchronisationInfo', mode=MODE_TYPE)
    _Re_synchronisationInfo_rand = OCT_STR(name='rand', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAND')))
    _Re_synchronisationInfo_auts = OCT_STR(name='auts', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AUTS')))
    Re_synchronisationInfo._cont = ASN1Dict([
        ('rand', _Re_synchronisationInfo_rand),
        ('auts', _Re_synchronisationInfo_auts),
        ])
    Re_synchronisationInfo._ext = []
    
    #-----< SendAuthenticationInfoRes >-----#
    SendAuthenticationInfoRes = SEQ(name='SendAuthenticationInfoRes', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SendAuthenticationInfoRes_authenticationSetList = CHOICE(name='authenticationSetList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AuthenticationSetList')), opt=True)
    _SendAuthenticationInfoRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SendAuthenticationInfoRes_eps_AuthenticationSetList = SEQ_OF(name='eps-AuthenticationSetList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EPS-AuthenticationSetList')), opt=True)
    _SendAuthenticationInfoRes_ueUsageType = OCT_STR(name='ueUsageType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UE-UsageType')), opt=True)
    SendAuthenticationInfoRes._cont = ASN1Dict([
        ('authenticationSetList', _SendAuthenticationInfoRes_authenticationSetList),
        ('extensionContainer', _SendAuthenticationInfoRes_extensionContainer),
        ('eps-AuthenticationSetList', _SendAuthenticationInfoRes_eps_AuthenticationSetList),
        ('ueUsageType', _SendAuthenticationInfoRes_ueUsageType),
        ])
    SendAuthenticationInfoRes._ext = ['eps-AuthenticationSetList', 'ueUsageType']
    
    #-----< EPS-AuthenticationSetList >-----#
    EPS_AuthenticationSetList = SEQ_OF(name='EPS-AuthenticationSetList', mode=MODE_TYPE)
    _EPS_AuthenticationSetList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'EPC-AV')))
    EPS_AuthenticationSetList._cont = _EPS_AuthenticationSetList__item_
    EPS_AuthenticationSetList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< UE-UsageType >-----#
    UE_UsageType = OCT_STR(name='UE-UsageType', mode=MODE_TYPE)
    UE_UsageType._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< EPC-AV >-----#
    EPC_AV = SEQ(name='EPC-AV', mode=MODE_TYPE)
    _EPC_AV_rand = OCT_STR(name='rand', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAND')))
    _EPC_AV_xres = OCT_STR(name='xres', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'XRES')))
    _EPC_AV_autn = OCT_STR(name='autn', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AUTN')))
    _EPC_AV_kasme = OCT_STR(name='kasme', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'KASME')))
    _EPC_AV_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    EPC_AV._cont = ASN1Dict([
        ('rand', _EPC_AV_rand),
        ('xres', _EPC_AV_xres),
        ('autn', _EPC_AV_autn),
        ('kasme', _EPC_AV_kasme),
        ('extensionContainer', _EPC_AV_extensionContainer),
        ])
    EPC_AV._ext = []
    
    #-----< KASME >-----#
    KASME = OCT_STR(name='KASME', mode=MODE_TYPE)
    KASME._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    
    #-----< RequestingNodeType >-----#
    RequestingNodeType = ENUM(name='RequestingNodeType', mode=MODE_TYPE)
    RequestingNodeType._cont = ASN1Dict([('vlr', 0), ('sgsn', 1), ('s-cscf', 2), ('bsf', 3), ('gan-aaa-server', 4), ('wlan-aaa-server', 5), ('mme', 16), ('mme-sgsn', 17)])
    RequestingNodeType._ext = ['s-cscf', 'bsf', 'gan-aaa-server', 'wlan-aaa-server', 'mme', 'mme-sgsn']
    
    #-----< CheckIMEI-Arg >-----#
    CheckIMEI_Arg = SEQ(name='CheckIMEI-Arg', mode=MODE_TYPE)
    _CheckIMEI_Arg_imei = OCT_STR(name='imei', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMEI')))
    _CheckIMEI_Arg_requestedEquipmentInfo = BIT_STR(name='requestedEquipmentInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RequestedEquipmentInfo')))
    _CheckIMEI_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CheckIMEI_Arg._cont = ASN1Dict([
        ('imei', _CheckIMEI_Arg_imei),
        ('requestedEquipmentInfo', _CheckIMEI_Arg_requestedEquipmentInfo),
        ('extensionContainer', _CheckIMEI_Arg_extensionContainer),
        ])
    CheckIMEI_Arg._ext = []
    
    #-----< CheckIMEI-Res >-----#
    CheckIMEI_Res = SEQ(name='CheckIMEI-Res', mode=MODE_TYPE)
    _CheckIMEI_Res_equipmentStatus = ENUM(name='equipmentStatus', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'EquipmentStatus')), opt=True)
    _CheckIMEI_Res_bmuef = SEQ(name='bmuef', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UESBI-Iu')), opt=True)
    _CheckIMEI_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CheckIMEI_Res._cont = ASN1Dict([
        ('equipmentStatus', _CheckIMEI_Res_equipmentStatus),
        ('bmuef', _CheckIMEI_Res_bmuef),
        ('extensionContainer', _CheckIMEI_Res_extensionContainer),
        ])
    CheckIMEI_Res._ext = []
    
    #-----< RequestedEquipmentInfo >-----#
    RequestedEquipmentInfo = BIT_STR(name='RequestedEquipmentInfo', mode=MODE_TYPE)
    RequestedEquipmentInfo._cont = ASN1Dict([('equipmentStatus', 0), ('bmuef', 1)])
    RequestedEquipmentInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=8)], ev=None, er=[])
    
    #-----< UESBI-Iu >-----#
    UESBI_Iu = SEQ(name='UESBI-Iu', mode=MODE_TYPE)
    _UESBI_Iu_uesbi_IuA = BIT_STR(name='uesbi-IuA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UESBI-IuA')), opt=True)
    _UESBI_Iu_uesbi_IuB = BIT_STR(name='uesbi-IuB', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UESBI-IuB')), opt=True)
    UESBI_Iu._cont = ASN1Dict([
        ('uesbi-IuA', _UESBI_Iu_uesbi_IuA),
        ('uesbi-IuB', _UESBI_Iu_uesbi_IuB),
        ])
    UESBI_Iu._ext = []
    
    #-----< UESBI-IuA >-----#
    UESBI_IuA = BIT_STR(name='UESBI-IuA', mode=MODE_TYPE)
    UESBI_IuA._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    
    #-----< UESBI-IuB >-----#
    UESBI_IuB = BIT_STR(name='UESBI-IuB', mode=MODE_TYPE)
    UESBI_IuB._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    
    #-----< EquipmentStatus >-----#
    EquipmentStatus = ENUM(name='EquipmentStatus', mode=MODE_TYPE)
    EquipmentStatus._cont = ASN1Dict([('whiteListed', 0), ('blackListed', 1), ('greyListed', 2)])
    EquipmentStatus._ext = None
    
    #-----< InsertSubscriberDataArg >-----#
    InsertSubscriberDataArg = SEQ(name='InsertSubscriberDataArg', mode=MODE_TYPE)
    _InsertSubscriberDataArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _InsertSubscriberDataArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _InsertSubscriberDataArg_category = OCT_STR(name='category', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Category')), opt=True)
    _InsertSubscriberDataArg_subscriberStatus = ENUM(name='subscriberStatus', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SubscriberStatus')), opt=True)
    _InsertSubscriberDataArg_bearerServiceList = SEQ_OF(name='bearerServiceList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BearerServiceList')), opt=True)
    _InsertSubscriberDataArg_teleserviceList = SEQ_OF(name='teleserviceList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TeleserviceList')), opt=True)
    _InsertSubscriberDataArg_provisionedSS = SEQ_OF(name='provisionedSS', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-SS-InfoList')), opt=True)
    _InsertSubscriberDataArg_odb_Data = SEQ(name='odb-Data', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-Data')), opt=True)
    _InsertSubscriberDataArg_roamingRestrictionDueToUnsupportedFeature = NULL(name='roamingRestrictionDueToUnsupportedFeature', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_regionalSubscriptionData = SEQ_OF(name='regionalSubscriptionData', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ZoneCodeList')), opt=True)
    _InsertSubscriberDataArg_vbsSubscriptionData = SEQ_OF(name='vbsSubscriptionData', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'VBSDataList')), opt=True)
    _InsertSubscriberDataArg_vgcsSubscriptionData = SEQ_OF(name='vgcsSubscriptionData', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'VGCSDataList')), opt=True)
    _InsertSubscriberDataArg_vlrCamelSubscriptionInfo = SEQ(name='vlrCamelSubscriptionInfo', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'VlrCamelSubscriptionInfo')), opt=True)
    _InsertSubscriberDataArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _InsertSubscriberDataArg_naea_PreferredCI = SEQ(name='naea-PreferredCI', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NAEA-PreferredCI')), opt=True)
    _InsertSubscriberDataArg_gprsSubscriptionData = SEQ(name='gprsSubscriptionData', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRSSubscriptionData')), opt=True)
    _InsertSubscriberDataArg_roamingRestrictedInSgsnDueToUnsupportedFeature = NULL(name='roamingRestrictedInSgsnDueToUnsupportedFeature', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_networkAccessMode = ENUM(name='networkAccessMode', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'NetworkAccessMode')), opt=True)
    _InsertSubscriberDataArg_lsaInformation = SEQ(name='lsaInformation', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAInformation')), opt=True)
    _InsertSubscriberDataArg_lmu_Indicator = NULL(name='lmu-Indicator', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_lcsInformation = SEQ(name='lcsInformation', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LCSInformation')), opt=True)
    _InsertSubscriberDataArg_istAlertTimer = INT(name='istAlertTimer', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'IST-AlertTimerValue')), opt=True)
    _InsertSubscriberDataArg_superChargerSupportedInHLR = OCT_STR(name='superChargerSupportedInHLR', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AgeIndicator')), opt=True)
    _InsertSubscriberDataArg_mc_SS_Info = SEQ(name='mc-SS-Info', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'MC-SS-Info')), opt=True)
    _InsertSubscriberDataArg_cs_AllocationRetentionPriority = OCT_STR(name='cs-AllocationRetentionPriority', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CS-AllocationRetentionPriority')), opt=True)
    _InsertSubscriberDataArg_sgsn_CAMEL_SubscriptionInfo = SEQ(name='sgsn-CAMEL-SubscriptionInfo', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SGSN-CAMEL-SubscriptionInfo')), opt=True)
    _InsertSubscriberDataArg_chargingCharacteristics = OCT_STR(name='chargingCharacteristics', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChargingCharacteristics')), opt=True)
    _InsertSubscriberDataArg_accessRestrictionData = BIT_STR(name='accessRestrictionData', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AccessRestrictionData')), opt=True)
    _InsertSubscriberDataArg_ics_Indicator = BOOL(name='ics-Indicator', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_eps_SubscriptionData = SEQ(name='eps-SubscriptionData', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EPS-SubscriptionData')), opt=True)
    _InsertSubscriberDataArg_csg_SubscriptionDataList = SEQ_OF(name='csg-SubscriptionDataList', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CSG-SubscriptionDataList')), opt=True)
    _InsertSubscriberDataArg_ue_ReachabilityRequestIndicator = NULL(name='ue-ReachabilityRequestIndicator', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_sgsn_Number = OCT_STR(name='sgsn-Number', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _InsertSubscriberDataArg_mme_Name = OCT_STR(name='mme-Name', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')), opt=True)
    _InsertSubscriberDataArg_subscribedPeriodicRAUTAUtimer = INT(name='subscribedPeriodicRAUTAUtimer', mode=MODE_TYPE, tag=(36, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SubscribedPeriodicRAUTAUtimer')), opt=True)
    _InsertSubscriberDataArg_vplmnLIPAAllowed = NULL(name='vplmnLIPAAllowed', mode=MODE_TYPE, tag=(37, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_mdtUserConsent = BOOL(name='mdtUserConsent', mode=MODE_TYPE, tag=(38, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_subscribedPeriodicLAUtimer = INT(name='subscribedPeriodicLAUtimer', mode=MODE_TYPE, tag=(39, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SubscribedPeriodicLAUtimer')), opt=True)
    _InsertSubscriberDataArg_vplmn_Csg_SubscriptionDataList = SEQ_OF(name='vplmn-Csg-SubscriptionDataList', mode=MODE_TYPE, tag=(40, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'VPLMN-CSG-SubscriptionDataList')), opt=True)
    _InsertSubscriberDataArg_additionalMSISDN = OCT_STR(name='additionalMSISDN', mode=MODE_TYPE, tag=(41, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _InsertSubscriberDataArg_psAndSMS_OnlyServiceProvision = NULL(name='psAndSMS-OnlyServiceProvision', mode=MODE_TYPE, tag=(42, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_smsInSGSNAllowed = NULL(name='smsInSGSNAllowed', mode=MODE_TYPE, tag=(43, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_cs_to_ps_SRVCC_Allowed_Indicator = NULL(name='cs-to-ps-SRVCC-Allowed-Indicator', mode=MODE_TYPE, tag=(44, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_pcscf_Restoration_Request = NULL(name='pcscf-Restoration-Request', mode=MODE_TYPE, tag=(45, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_adjacentAccessRestrictionDataList = SEQ_OF(name='adjacentAccessRestrictionDataList', mode=MODE_TYPE, tag=(46, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdjacentAccessRestrictionDataList')), opt=True)
    _InsertSubscriberDataArg_imsi_Group_Id_List = SEQ_OF(name='imsi-Group-Id-List', mode=MODE_TYPE, tag=(47, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'IMSI-GroupIdList')), opt=True)
    _InsertSubscriberDataArg_ueUsageType = OCT_STR(name='ueUsageType', mode=MODE_TYPE, tag=(48, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UE-UsageType')), opt=True)
    _InsertSubscriberDataArg_userPlaneIntegrityProtectionIndicator = NULL(name='userPlaneIntegrityProtectionIndicator', mode=MODE_TYPE, tag=(49, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_dl_Buffering_Suggested_Packet_Count = INT(name='dl-Buffering-Suggested-Packet-Count', mode=MODE_TYPE, tag=(50, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DL-Buffering-Suggested-Packet-Count')), opt=True)
    _InsertSubscriberDataArg_reset_Id_List = SEQ_OF(name='reset-Id-List', mode=MODE_TYPE, tag=(51, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Reset-Id-List')), opt=True)
    _InsertSubscriberDataArg_eDRX_Cycle_Length_List = SEQ_OF(name='eDRX-Cycle-Length-List', mode=MODE_TYPE, tag=(52, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EDRX-Cycle-Length-List')), opt=True)
    _InsertSubscriberDataArg_ext_AccessRestrictionData = BIT_STR(name='ext-AccessRestrictionData', mode=MODE_TYPE, tag=(53, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-AccessRestrictionData')), opt=True)
    _InsertSubscriberDataArg_iab_Operation_Allowed_Indicator = NULL(name='iab-Operation-Allowed-Indicator', mode=MODE_TYPE, tag=(54, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    InsertSubscriberDataArg._cont = ASN1Dict([
        ('imsi', _InsertSubscriberDataArg_imsi),
        ('msisdn', _InsertSubscriberDataArg_msisdn),
        ('category', _InsertSubscriberDataArg_category),
        ('subscriberStatus', _InsertSubscriberDataArg_subscriberStatus),
        ('bearerServiceList', _InsertSubscriberDataArg_bearerServiceList),
        ('teleserviceList', _InsertSubscriberDataArg_teleserviceList),
        ('provisionedSS', _InsertSubscriberDataArg_provisionedSS),
        ('odb-Data', _InsertSubscriberDataArg_odb_Data),
        ('roamingRestrictionDueToUnsupportedFeature', _InsertSubscriberDataArg_roamingRestrictionDueToUnsupportedFeature),
        ('regionalSubscriptionData', _InsertSubscriberDataArg_regionalSubscriptionData),
        ('vbsSubscriptionData', _InsertSubscriberDataArg_vbsSubscriptionData),
        ('vgcsSubscriptionData', _InsertSubscriberDataArg_vgcsSubscriptionData),
        ('vlrCamelSubscriptionInfo', _InsertSubscriberDataArg_vlrCamelSubscriptionInfo),
        ('extensionContainer', _InsertSubscriberDataArg_extensionContainer),
        ('naea-PreferredCI', _InsertSubscriberDataArg_naea_PreferredCI),
        ('gprsSubscriptionData', _InsertSubscriberDataArg_gprsSubscriptionData),
        ('roamingRestrictedInSgsnDueToUnsupportedFeature', _InsertSubscriberDataArg_roamingRestrictedInSgsnDueToUnsupportedFeature),
        ('networkAccessMode', _InsertSubscriberDataArg_networkAccessMode),
        ('lsaInformation', _InsertSubscriberDataArg_lsaInformation),
        ('lmu-Indicator', _InsertSubscriberDataArg_lmu_Indicator),
        ('lcsInformation', _InsertSubscriberDataArg_lcsInformation),
        ('istAlertTimer', _InsertSubscriberDataArg_istAlertTimer),
        ('superChargerSupportedInHLR', _InsertSubscriberDataArg_superChargerSupportedInHLR),
        ('mc-SS-Info', _InsertSubscriberDataArg_mc_SS_Info),
        ('cs-AllocationRetentionPriority', _InsertSubscriberDataArg_cs_AllocationRetentionPriority),
        ('sgsn-CAMEL-SubscriptionInfo', _InsertSubscriberDataArg_sgsn_CAMEL_SubscriptionInfo),
        ('chargingCharacteristics', _InsertSubscriberDataArg_chargingCharacteristics),
        ('accessRestrictionData', _InsertSubscriberDataArg_accessRestrictionData),
        ('ics-Indicator', _InsertSubscriberDataArg_ics_Indicator),
        ('eps-SubscriptionData', _InsertSubscriberDataArg_eps_SubscriptionData),
        ('csg-SubscriptionDataList', _InsertSubscriberDataArg_csg_SubscriptionDataList),
        ('ue-ReachabilityRequestIndicator', _InsertSubscriberDataArg_ue_ReachabilityRequestIndicator),
        ('sgsn-Number', _InsertSubscriberDataArg_sgsn_Number),
        ('mme-Name', _InsertSubscriberDataArg_mme_Name),
        ('subscribedPeriodicRAUTAUtimer', _InsertSubscriberDataArg_subscribedPeriodicRAUTAUtimer),
        ('vplmnLIPAAllowed', _InsertSubscriberDataArg_vplmnLIPAAllowed),
        ('mdtUserConsent', _InsertSubscriberDataArg_mdtUserConsent),
        ('subscribedPeriodicLAUtimer', _InsertSubscriberDataArg_subscribedPeriodicLAUtimer),
        ('vplmn-Csg-SubscriptionDataList', _InsertSubscriberDataArg_vplmn_Csg_SubscriptionDataList),
        ('additionalMSISDN', _InsertSubscriberDataArg_additionalMSISDN),
        ('psAndSMS-OnlyServiceProvision', _InsertSubscriberDataArg_psAndSMS_OnlyServiceProvision),
        ('smsInSGSNAllowed', _InsertSubscriberDataArg_smsInSGSNAllowed),
        ('cs-to-ps-SRVCC-Allowed-Indicator', _InsertSubscriberDataArg_cs_to_ps_SRVCC_Allowed_Indicator),
        ('pcscf-Restoration-Request', _InsertSubscriberDataArg_pcscf_Restoration_Request),
        ('adjacentAccessRestrictionDataList', _InsertSubscriberDataArg_adjacentAccessRestrictionDataList),
        ('imsi-Group-Id-List', _InsertSubscriberDataArg_imsi_Group_Id_List),
        ('ueUsageType', _InsertSubscriberDataArg_ueUsageType),
        ('userPlaneIntegrityProtectionIndicator', _InsertSubscriberDataArg_userPlaneIntegrityProtectionIndicator),
        ('dl-Buffering-Suggested-Packet-Count', _InsertSubscriberDataArg_dl_Buffering_Suggested_Packet_Count),
        ('reset-Id-List', _InsertSubscriberDataArg_reset_Id_List),
        ('eDRX-Cycle-Length-List', _InsertSubscriberDataArg_eDRX_Cycle_Length_List),
        ('ext-AccessRestrictionData', _InsertSubscriberDataArg_ext_AccessRestrictionData),
        ('iab-Operation-Allowed-Indicator', _InsertSubscriberDataArg_iab_Operation_Allowed_Indicator),
        ])
    InsertSubscriberDataArg._ext = ['naea-PreferredCI', 'gprsSubscriptionData', 'roamingRestrictedInSgsnDueToUnsupportedFeature', 'networkAccessMode', 'lsaInformation', 'lmu-Indicator', 'lcsInformation', 'istAlertTimer', 'superChargerSupportedInHLR', 'mc-SS-Info', 'cs-AllocationRetentionPriority', 'sgsn-CAMEL-SubscriptionInfo', 'chargingCharacteristics', 'accessRestrictionData', 'ics-Indicator', 'eps-SubscriptionData', 'csg-SubscriptionDataList', 'ue-ReachabilityRequestIndicator', 'sgsn-Number', 'mme-Name', 'subscribedPeriodicRAUTAUtimer', 'vplmnLIPAAllowed', 'mdtUserConsent', 'subscribedPeriodicLAUtimer', 'vplmn-Csg-SubscriptionDataList', 'additionalMSISDN', 'psAndSMS-OnlyServiceProvision', 'smsInSGSNAllowed', 'cs-to-ps-SRVCC-Allowed-Indicator', 'pcscf-Restoration-Request', 'adjacentAccessRestrictionDataList', 'imsi-Group-Id-List', 'ueUsageType', 'userPlaneIntegrityProtectionIndicator', 'dl-Buffering-Suggested-Packet-Count', 'reset-Id-List', 'eDRX-Cycle-Length-List', 'ext-AccessRestrictionData', 'iab-Operation-Allowed-Indicator']
    
    #-----< EDRX-Cycle-Length-List >-----#
    EDRX_Cycle_Length_List = SEQ_OF(name='EDRX-Cycle-Length-List', mode=MODE_TYPE)
    _EDRX_Cycle_Length_List__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'EDRX-Cycle-Length')))
    EDRX_Cycle_Length_List._cont = _EDRX_Cycle_Length_List__item_
    EDRX_Cycle_Length_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< EDRX-Cycle-Length >-----#
    EDRX_Cycle_Length = SEQ(name='EDRX-Cycle-Length', mode=MODE_TYPE)
    _EDRX_Cycle_Length_rat_Type = ENUM(name='rat-Type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Used-RAT-Type')))
    _EDRX_Cycle_Length_eDRX_Cycle_Length_Value = OCT_STR(name='eDRX-Cycle-Length-Value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EDRX-Cycle-Length-Value')))
    EDRX_Cycle_Length._cont = ASN1Dict([
        ('rat-Type', _EDRX_Cycle_Length_rat_Type),
        ('eDRX-Cycle-Length-Value', _EDRX_Cycle_Length_eDRX_Cycle_Length_Value),
        ])
    EDRX_Cycle_Length._ext = []
    
    #-----< EDRX-Cycle-Length-Value >-----#
    EDRX_Cycle_Length_Value = OCT_STR(name='EDRX-Cycle-Length-Value', mode=MODE_TYPE)
    EDRX_Cycle_Length_Value._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< Reset-Id-List >-----#
    Reset_Id_List = SEQ_OF(name='Reset-Id-List', mode=MODE_TYPE)
    _Reset_Id_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Reset-Id')))
    Reset_Id_List._cont = _Reset_Id_List__item_
    Reset_Id_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< Reset-Id >-----#
    Reset_Id = OCT_STR(name='Reset-Id', mode=MODE_TYPE)
    Reset_Id._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    
    #-----< DL-Buffering-Suggested-Packet-Count >-----#
    DL_Buffering_Suggested_Packet_Count = INT(name='DL-Buffering-Suggested-Packet-Count', mode=MODE_TYPE)
    DL_Buffering_Suggested_Packet_Count._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1, ub=2147483647)], ev=None, er=[])
    
    #-----< Group-Service-ID >-----#
    Group_Service_ID = INT(name='Group-Service-ID', mode=MODE_TYPE)
    Group_Service_ID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    
    #-----< Local-GroupID >-----#
    Local_GroupID = OCT_STR(name='Local-GroupID', mode=MODE_TYPE)
    Local_GroupID._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< IMSI-GroupIdList >-----#
    IMSI_GroupIdList = SEQ_OF(name='IMSI-GroupIdList', mode=MODE_TYPE)
    _IMSI_GroupIdList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'IMSI-GroupId')))
    IMSI_GroupIdList._cont = _IMSI_GroupIdList__item_
    IMSI_GroupIdList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< IMSI-GroupId >-----#
    IMSI_GroupId = SEQ(name='IMSI-GroupId', mode=MODE_TYPE)
    _IMSI_GroupId_group_Service_Id = INT(name='group-Service-Id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Group-Service-ID')))
    _IMSI_GroupId_plmnId = OCT_STR(name='plmnId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')))
    _IMSI_GroupId_local_Group_ID = OCT_STR(name='local-Group-ID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Local-GroupID')))
    IMSI_GroupId._cont = ASN1Dict([
        ('group-Service-Id', _IMSI_GroupId_group_Service_Id),
        ('plmnId', _IMSI_GroupId_plmnId),
        ('local-Group-ID', _IMSI_GroupId_local_Group_ID),
        ])
    IMSI_GroupId._ext = []
    
    #-----< SubscribedPeriodicRAUTAUtimer >-----#
    SubscribedPeriodicRAUTAUtimer = INT(name='SubscribedPeriodicRAUTAUtimer', mode=MODE_TYPE)
    SubscribedPeriodicRAUTAUtimer._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    
    #-----< SubscribedPeriodicLAUtimer >-----#
    SubscribedPeriodicLAUtimer = INT(name='SubscribedPeriodicLAUtimer', mode=MODE_TYPE)
    SubscribedPeriodicLAUtimer._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    
    #-----< CSG-SubscriptionDataList >-----#
    CSG_SubscriptionDataList = SEQ_OF(name='CSG-SubscriptionDataList', mode=MODE_TYPE)
    _CSG_SubscriptionDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CSG-SubscriptionData')))
    CSG_SubscriptionDataList._cont = _CSG_SubscriptionDataList__item_
    CSG_SubscriptionDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< CSG-SubscriptionData >-----#
    CSG_SubscriptionData = SEQ(name='CSG-SubscriptionData', mode=MODE_TYPE)
    _CSG_SubscriptionData_csg_Id = BIT_STR(name='csg-Id', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CSG-Id')))
    _CSG_SubscriptionData_expirationDate = OCT_STR(name='expirationDate', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Time')), opt=True)
    _CSG_SubscriptionData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _CSG_SubscriptionData_lipa_AllowedAPNList = SEQ_OF(name='lipa-AllowedAPNList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LIPA-AllowedAPNList')), opt=True)
    _CSG_SubscriptionData_plmn_Id = OCT_STR(name='plmn-Id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')), opt=True)
    CSG_SubscriptionData._cont = ASN1Dict([
        ('csg-Id', _CSG_SubscriptionData_csg_Id),
        ('expirationDate', _CSG_SubscriptionData_expirationDate),
        ('extensionContainer', _CSG_SubscriptionData_extensionContainer),
        ('lipa-AllowedAPNList', _CSG_SubscriptionData_lipa_AllowedAPNList),
        ('plmn-Id', _CSG_SubscriptionData_plmn_Id),
        ])
    CSG_SubscriptionData._ext = ['lipa-AllowedAPNList', 'plmn-Id']
    
    #-----< VPLMN-CSG-SubscriptionDataList >-----#
    VPLMN_CSG_SubscriptionDataList = SEQ_OF(name='VPLMN-CSG-SubscriptionDataList', mode=MODE_TYPE)
    _VPLMN_CSG_SubscriptionDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CSG-SubscriptionData')))
    VPLMN_CSG_SubscriptionDataList._cont = _VPLMN_CSG_SubscriptionDataList__item_
    VPLMN_CSG_SubscriptionDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< CSG-Id >-----#
    CSG_Id = BIT_STR(name='CSG-Id', mode=MODE_TYPE)
    CSG_Id._const_sz = ASN1Set(rv=[27], rr=[], ev=None, er=[])
    
    #-----< LIPA-AllowedAPNList >-----#
    LIPA_AllowedAPNList = SEQ_OF(name='LIPA-AllowedAPNList', mode=MODE_TYPE)
    _LIPA_AllowedAPNList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN')))
    LIPA_AllowedAPNList._cont = _LIPA_AllowedAPNList__item_
    LIPA_AllowedAPNList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< maxNumOfLIPAAllowedAPN >-----#
    maxNumOfLIPAAllowedAPN = INT(name='maxNumOfLIPAAllowedAPN', mode=MODE_VALUE)
    maxNumOfLIPAAllowedAPN._val = 50
    
    #-----< EPS-SubscriptionData >-----#
    EPS_SubscriptionData = SEQ(name='EPS-SubscriptionData', mode=MODE_TYPE)
    _EPS_SubscriptionData_apn_oi_Replacement = OCT_STR(name='apn-oi-Replacement', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN-OI-Replacement')), opt=True)
    _EPS_SubscriptionData_rfsp_id = INT(name='rfsp-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RFSP-ID')), opt=True)
    _EPS_SubscriptionData_ambr = SEQ(name='ambr', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AMBR')), opt=True)
    _EPS_SubscriptionData_apn_ConfigurationProfile = SEQ(name='apn-ConfigurationProfile', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN-ConfigurationProfile')), opt=True)
    _EPS_SubscriptionData_stn_sr = OCT_STR(name='stn-sr', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _EPS_SubscriptionData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _EPS_SubscriptionData_mps_CSPriority = NULL(name='mps-CSPriority', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_SubscriptionData_mps_EPSPriority = NULL(name='mps-EPSPriority', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_SubscriptionData_subscribed_vsrvcc = NULL(name='subscribed-vsrvcc', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    EPS_SubscriptionData._cont = ASN1Dict([
        ('apn-oi-Replacement', _EPS_SubscriptionData_apn_oi_Replacement),
        ('rfsp-id', _EPS_SubscriptionData_rfsp_id),
        ('ambr', _EPS_SubscriptionData_ambr),
        ('apn-ConfigurationProfile', _EPS_SubscriptionData_apn_ConfigurationProfile),
        ('stn-sr', _EPS_SubscriptionData_stn_sr),
        ('extensionContainer', _EPS_SubscriptionData_extensionContainer),
        ('mps-CSPriority', _EPS_SubscriptionData_mps_CSPriority),
        ('mps-EPSPriority', _EPS_SubscriptionData_mps_EPSPriority),
        ('subscribed-vsrvcc', _EPS_SubscriptionData_subscribed_vsrvcc),
        ])
    EPS_SubscriptionData._ext = ['mps-CSPriority', 'mps-EPSPriority', 'subscribed-vsrvcc']
    
    #-----< APN-OI-Replacement >-----#
    APN_OI_Replacement = OCT_STR(name='APN-OI-Replacement', mode=MODE_TYPE)
    APN_OI_Replacement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=9, ub=100)], ev=None, er=[])
    
    #-----< RFSP-ID >-----#
    RFSP_ID = INT(name='RFSP-ID', mode=MODE_TYPE)
    RFSP_ID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    
    #-----< APN-ConfigurationProfile >-----#
    APN_ConfigurationProfile = SEQ(name='APN-ConfigurationProfile', mode=MODE_TYPE)
    _APN_ConfigurationProfile_defaultContext = INT(name='defaultContext', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ContextId')))
    _APN_ConfigurationProfile_completeDataListIncluded = NULL(name='completeDataListIncluded', mode=MODE_TYPE, opt=True)
    _APN_ConfigurationProfile_epsDataList = SEQ_OF(name='epsDataList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EPS-DataList')))
    _APN_ConfigurationProfile_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _APN_ConfigurationProfile_additionalDefaultContext = INT(name='additionalDefaultContext', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ContextId')), opt=True)
    APN_ConfigurationProfile._cont = ASN1Dict([
        ('defaultContext', _APN_ConfigurationProfile_defaultContext),
        ('completeDataListIncluded', _APN_ConfigurationProfile_completeDataListIncluded),
        ('epsDataList', _APN_ConfigurationProfile_epsDataList),
        ('extensionContainer', _APN_ConfigurationProfile_extensionContainer),
        ('additionalDefaultContext', _APN_ConfigurationProfile_additionalDefaultContext),
        ])
    APN_ConfigurationProfile._ext = ['additionalDefaultContext']
    
    #-----< EPS-DataList >-----#
    EPS_DataList = SEQ_OF(name='EPS-DataList', mode=MODE_TYPE)
    _EPS_DataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN-Configuration')))
    EPS_DataList._cont = _EPS_DataList__item_
    EPS_DataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< maxNumOfAPN-Configurations >-----#
    maxNumOfAPN_Configurations = INT(name='maxNumOfAPN-Configurations', mode=MODE_VALUE)
    maxNumOfAPN_Configurations._val = 50
    
    #-----< APN-Configuration >-----#
    APN_Configuration = SEQ(name='APN-Configuration', mode=MODE_TYPE)
    _APN_Configuration_contextId = INT(name='contextId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ContextId')))
    _APN_Configuration_pdn_Type = OCT_STR(name='pdn-Type', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDN-Type')))
    _APN_Configuration_servedPartyIP_IPv4_Address = OCT_STR(name='servedPartyIP-IPv4-Address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Address')), opt=True)
    _APN_Configuration_apn = OCT_STR(name='apn', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN')))
    _APN_Configuration_eps_qos_Subscribed = SEQ(name='eps-qos-Subscribed', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EPS-QoS-Subscribed')))
    _APN_Configuration_pdn_gw_Identity = SEQ(name='pdn-gw-Identity', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDN-GW-Identity')), opt=True)
    _APN_Configuration_pdn_gw_AllocationType = ENUM(name='pdn-gw-AllocationType', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDN-GW-AllocationType')), opt=True)
    _APN_Configuration_vplmnAddressAllowed = NULL(name='vplmnAddressAllowed', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _APN_Configuration_chargingCharacteristics = OCT_STR(name='chargingCharacteristics', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChargingCharacteristics')), opt=True)
    _APN_Configuration_ambr = SEQ(name='ambr', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AMBR')), opt=True)
    _APN_Configuration_specificAPNInfoList = SEQ_OF(name='specificAPNInfoList', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SpecificAPNInfoList')), opt=True)
    _APN_Configuration_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _APN_Configuration_servedPartyIP_IPv6_Address = OCT_STR(name='servedPartyIP-IPv6-Address', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Address')), opt=True)
    _APN_Configuration_apn_oi_Replacement = OCT_STR(name='apn-oi-Replacement', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN-OI-Replacement')), opt=True)
    _APN_Configuration_sipto_Permission = ENUM(name='sipto-Permission', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SIPTO-Permission')), opt=True)
    _APN_Configuration_lipa_Permission = ENUM(name='lipa-Permission', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LIPA-Permission')), opt=True)
    _APN_Configuration_restoration_Priority = OCT_STR(name='restoration-Priority', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Restoration-Priority')), opt=True)
    _APN_Configuration_sipto_local_network_Permission = ENUM(name='sipto-local-network-Permission', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SIPTO-Local-Network-Permission')), opt=True)
    _APN_Configuration_wlan_offloadability = SEQ(name='wlan-offloadability', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'WLAN-Offloadability')), opt=True)
    _APN_Configuration_non_IP_PDN_Type_Indicator = NULL(name='non-IP-PDN-Type-Indicator', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _APN_Configuration_nIDD_Mechanism = ENUM(name='nIDD-Mechanism', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'NIDD-Mechanism')), opt=True)
    _APN_Configuration_sCEF_ID = OCT_STR(name='sCEF-ID', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'FQDN')), opt=True)
    _APN_Configuration_pdn_ConnectionContinuity = ENUM(name='pdn-ConnectionContinuity', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDN-ConnectionContinuity')), opt=True)
    APN_Configuration._cont = ASN1Dict([
        ('contextId', _APN_Configuration_contextId),
        ('pdn-Type', _APN_Configuration_pdn_Type),
        ('servedPartyIP-IPv4-Address', _APN_Configuration_servedPartyIP_IPv4_Address),
        ('apn', _APN_Configuration_apn),
        ('eps-qos-Subscribed', _APN_Configuration_eps_qos_Subscribed),
        ('pdn-gw-Identity', _APN_Configuration_pdn_gw_Identity),
        ('pdn-gw-AllocationType', _APN_Configuration_pdn_gw_AllocationType),
        ('vplmnAddressAllowed', _APN_Configuration_vplmnAddressAllowed),
        ('chargingCharacteristics', _APN_Configuration_chargingCharacteristics),
        ('ambr', _APN_Configuration_ambr),
        ('specificAPNInfoList', _APN_Configuration_specificAPNInfoList),
        ('extensionContainer', _APN_Configuration_extensionContainer),
        ('servedPartyIP-IPv6-Address', _APN_Configuration_servedPartyIP_IPv6_Address),
        ('apn-oi-Replacement', _APN_Configuration_apn_oi_Replacement),
        ('sipto-Permission', _APN_Configuration_sipto_Permission),
        ('lipa-Permission', _APN_Configuration_lipa_Permission),
        ('restoration-Priority', _APN_Configuration_restoration_Priority),
        ('sipto-local-network-Permission', _APN_Configuration_sipto_local_network_Permission),
        ('wlan-offloadability', _APN_Configuration_wlan_offloadability),
        ('non-IP-PDN-Type-Indicator', _APN_Configuration_non_IP_PDN_Type_Indicator),
        ('nIDD-Mechanism', _APN_Configuration_nIDD_Mechanism),
        ('sCEF-ID', _APN_Configuration_sCEF_ID),
        ('pdn-ConnectionContinuity', _APN_Configuration_pdn_ConnectionContinuity),
        ])
    APN_Configuration._ext = ['apn-oi-Replacement', 'sipto-Permission', 'lipa-Permission', 'restoration-Priority', 'sipto-local-network-Permission', 'wlan-offloadability', 'non-IP-PDN-Type-Indicator', 'nIDD-Mechanism', 'sCEF-ID', 'pdn-ConnectionContinuity']
    
    #-----< PDN-ConnectionContinuity >-----#
    PDN_ConnectionContinuity = ENUM(name='PDN-ConnectionContinuity', mode=MODE_TYPE)
    PDN_ConnectionContinuity._cont = ASN1Dict([('maintainPDN-Connection', 0), ('disconnectPDN-ConnectionWithReactivationRequest', 1), ('disconnectPDN-ConnectionWithoutReactivationRequest', 2)])
    PDN_ConnectionContinuity._ext = None
    
    #-----< NIDD-Mechanism >-----#
    NIDD_Mechanism = ENUM(name='NIDD-Mechanism', mode=MODE_TYPE)
    NIDD_Mechanism._cont = ASN1Dict([('sGi-based-data-delivery', 0), ('sCEF-based-data-delivery', 1)])
    NIDD_Mechanism._ext = None
    
    #-----< PDN-Type >-----#
    PDN_Type = OCT_STR(name='PDN-Type', mode=MODE_TYPE)
    PDN_Type._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< EPS-QoS-Subscribed >-----#
    EPS_QoS_Subscribed = SEQ(name='EPS-QoS-Subscribed', mode=MODE_TYPE)
    _EPS_QoS_Subscribed_qos_Class_Identifier = INT(name='qos-Class-Identifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'QoS-Class-Identifier')))
    _EPS_QoS_Subscribed_allocation_Retention_Priority = SEQ(name='allocation-Retention-Priority', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Allocation-Retention-Priority')))
    _EPS_QoS_Subscribed_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    EPS_QoS_Subscribed._cont = ASN1Dict([
        ('qos-Class-Identifier', _EPS_QoS_Subscribed_qos_Class_Identifier),
        ('allocation-Retention-Priority', _EPS_QoS_Subscribed_allocation_Retention_Priority),
        ('extensionContainer', _EPS_QoS_Subscribed_extensionContainer),
        ])
    EPS_QoS_Subscribed._ext = []
    
    #-----< AMBR >-----#
    AMBR = SEQ(name='AMBR', mode=MODE_TYPE)
    _AMBR_max_RequestedBandwidth_UL = INT(name='max-RequestedBandwidth-UL', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Bandwidth')))
    _AMBR_max_RequestedBandwidth_DL = INT(name='max-RequestedBandwidth-DL', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Bandwidth')))
    _AMBR_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _AMBR_extended_Max_RequestedBandwidth_UL = INT(name='extended-Max-RequestedBandwidth-UL', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BandwidthExt')), opt=True)
    _AMBR_extended_Max_RequestedBandwidth_DL = INT(name='extended-Max-RequestedBandwidth-DL', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BandwidthExt')), opt=True)
    AMBR._cont = ASN1Dict([
        ('max-RequestedBandwidth-UL', _AMBR_max_RequestedBandwidth_UL),
        ('max-RequestedBandwidth-DL', _AMBR_max_RequestedBandwidth_DL),
        ('extensionContainer', _AMBR_extensionContainer),
        ('extended-Max-RequestedBandwidth-UL', _AMBR_extended_Max_RequestedBandwidth_UL),
        ('extended-Max-RequestedBandwidth-DL', _AMBR_extended_Max_RequestedBandwidth_DL),
        ])
    AMBR._ext = ['extended-Max-RequestedBandwidth-UL', 'extended-Max-RequestedBandwidth-DL']
    
    #-----< SpecificAPNInfoList >-----#
    SpecificAPNInfoList = SEQ_OF(name='SpecificAPNInfoList', mode=MODE_TYPE)
    _SpecificAPNInfoList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SpecificAPNInfo')))
    SpecificAPNInfoList._cont = _SpecificAPNInfoList__item_
    SpecificAPNInfoList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< maxNumOfSpecificAPNInfos >-----#
    maxNumOfSpecificAPNInfos = INT(name='maxNumOfSpecificAPNInfos', mode=MODE_VALUE)
    maxNumOfSpecificAPNInfos._val = 50
    
    #-----< SpecificAPNInfo >-----#
    SpecificAPNInfo = SEQ(name='SpecificAPNInfo', mode=MODE_TYPE)
    _SpecificAPNInfo_apn = OCT_STR(name='apn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN')))
    _SpecificAPNInfo_pdn_gw_Identity = SEQ(name='pdn-gw-Identity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDN-GW-Identity')))
    _SpecificAPNInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SpecificAPNInfo._cont = ASN1Dict([
        ('apn', _SpecificAPNInfo_apn),
        ('pdn-gw-Identity', _SpecificAPNInfo_pdn_gw_Identity),
        ('extensionContainer', _SpecificAPNInfo_extensionContainer),
        ])
    SpecificAPNInfo._ext = []
    
    #-----< Bandwidth >-----#
    Bandwidth = INT(name='Bandwidth', mode=MODE_TYPE)
    
    #-----< BandwidthExt >-----#
    BandwidthExt = INT(name='BandwidthExt', mode=MODE_TYPE)
    
    #-----< QoS-Class-Identifier >-----#
    QoS_Class_Identifier = INT(name='QoS-Class-Identifier', mode=MODE_TYPE)
    QoS_Class_Identifier._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    
    #-----< Allocation-Retention-Priority >-----#
    Allocation_Retention_Priority = SEQ(name='Allocation-Retention-Priority', mode=MODE_TYPE)
    _Allocation_Retention_Priority_priority_level = INT(name='priority-level', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Allocation_Retention_Priority_pre_emption_capability = BOOL(name='pre-emption-capability', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Allocation_Retention_Priority_pre_emption_vulnerability = BOOL(name='pre-emption-vulnerability', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Allocation_Retention_Priority_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    Allocation_Retention_Priority._cont = ASN1Dict([
        ('priority-level', _Allocation_Retention_Priority_priority_level),
        ('pre-emption-capability', _Allocation_Retention_Priority_pre_emption_capability),
        ('pre-emption-vulnerability', _Allocation_Retention_Priority_pre_emption_vulnerability),
        ('extensionContainer', _Allocation_Retention_Priority_extensionContainer),
        ])
    Allocation_Retention_Priority._ext = []
    
    #-----< PDN-GW-Identity >-----#
    PDN_GW_Identity = SEQ(name='PDN-GW-Identity', mode=MODE_TYPE)
    _PDN_GW_Identity_pdn_gw_ipv4_Address = OCT_STR(name='pdn-gw-ipv4-Address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Address')), opt=True)
    _PDN_GW_Identity_pdn_gw_ipv6_Address = OCT_STR(name='pdn-gw-ipv6-Address', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Address')), opt=True)
    _PDN_GW_Identity_pdn_gw_name = OCT_STR(name='pdn-gw-name', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'FQDN')), opt=True)
    _PDN_GW_Identity_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    PDN_GW_Identity._cont = ASN1Dict([
        ('pdn-gw-ipv4-Address', _PDN_GW_Identity_pdn_gw_ipv4_Address),
        ('pdn-gw-ipv6-Address', _PDN_GW_Identity_pdn_gw_ipv6_Address),
        ('pdn-gw-name', _PDN_GW_Identity_pdn_gw_name),
        ('extensionContainer', _PDN_GW_Identity_extensionContainer),
        ])
    PDN_GW_Identity._ext = []
    
    #-----< FQDN >-----#
    FQDN = OCT_STR(name='FQDN', mode=MODE_TYPE)
    FQDN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=9, ub=255)], ev=None, er=[])
    
    #-----< PDN-GW-AllocationType >-----#
    PDN_GW_AllocationType = ENUM(name='PDN-GW-AllocationType', mode=MODE_TYPE)
    PDN_GW_AllocationType._cont = ASN1Dict([('static', 0), ('dynamic', 1)])
    PDN_GW_AllocationType._ext = None
    
    #-----< WLAN-Offloadability >-----#
    WLAN_Offloadability = SEQ(name='WLAN-Offloadability', mode=MODE_TYPE)
    _WLAN_Offloadability_wlan_offloadability_EUTRAN = ENUM(name='wlan-offloadability-EUTRAN', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'WLAN-Offloadability-Indication')), opt=True)
    _WLAN_Offloadability_wlan_offloadability_UTRAN = ENUM(name='wlan-offloadability-UTRAN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'WLAN-Offloadability-Indication')), opt=True)
    _WLAN_Offloadability_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    WLAN_Offloadability._cont = ASN1Dict([
        ('wlan-offloadability-EUTRAN', _WLAN_Offloadability_wlan_offloadability_EUTRAN),
        ('wlan-offloadability-UTRAN', _WLAN_Offloadability_wlan_offloadability_UTRAN),
        ('extensionContainer', _WLAN_Offloadability_extensionContainer),
        ])
    WLAN_Offloadability._ext = []
    
    #-----< WLAN-Offloadability-Indication >-----#
    WLAN_Offloadability_Indication = ENUM(name='WLAN-Offloadability-Indication', mode=MODE_TYPE)
    WLAN_Offloadability_Indication._cont = ASN1Dict([('notAllowed', 0), ('allowed', 1)])
    WLAN_Offloadability_Indication._ext = None
    
    #-----< AccessRestrictionData >-----#
    AccessRestrictionData = BIT_STR(name='AccessRestrictionData', mode=MODE_TYPE)
    AccessRestrictionData._cont = ASN1Dict([('utranNotAllowed', 0), ('geranNotAllowed', 1), ('ganNotAllowed', 2), ('i-hspa-evolutionNotAllowed', 3), ('wb-e-utranNotAllowed', 4), ('ho-toNon3GPP-AccessNotAllowed', 5), ('nb-iotNotAllowed', 6), ('enhancedCoverageNotAllowed', 7)])
    AccessRestrictionData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=8)], ev=None, er=[])
    
    #-----< Ext-AccessRestrictionData >-----#
    Ext_AccessRestrictionData = BIT_STR(name='Ext-AccessRestrictionData', mode=MODE_TYPE)
    Ext_AccessRestrictionData._cont = ASN1Dict([('nrAsSecondaryRATNotAllowed', 0), ('unlicensedSpectrumAsSecondaryRATNotAllowed', 1)])
    Ext_AccessRestrictionData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< AdjacentAccessRestrictionDataList >-----#
    AdjacentAccessRestrictionDataList = SEQ_OF(name='AdjacentAccessRestrictionDataList', mode=MODE_TYPE)
    _AdjacentAccessRestrictionDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdjacentAccessRestrictionData')))
    AdjacentAccessRestrictionDataList._cont = _AdjacentAccessRestrictionDataList__item_
    AdjacentAccessRestrictionDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< AdjacentAccessRestrictionData >-----#
    AdjacentAccessRestrictionData = SEQ(name='AdjacentAccessRestrictionData', mode=MODE_TYPE)
    _AdjacentAccessRestrictionData_plmnId = OCT_STR(name='plmnId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')))
    _AdjacentAccessRestrictionData_accessRestrictionData = BIT_STR(name='accessRestrictionData', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AccessRestrictionData')))
    _AdjacentAccessRestrictionData_ext_AccessRestrictionData = BIT_STR(name='ext-AccessRestrictionData', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-AccessRestrictionData')), opt=True)
    AdjacentAccessRestrictionData._cont = ASN1Dict([
        ('plmnId', _AdjacentAccessRestrictionData_plmnId),
        ('accessRestrictionData', _AdjacentAccessRestrictionData_accessRestrictionData),
        ('ext-AccessRestrictionData', _AdjacentAccessRestrictionData_ext_AccessRestrictionData),
        ])
    AdjacentAccessRestrictionData._ext = ['ext-AccessRestrictionData']
    
    #-----< CS-AllocationRetentionPriority >-----#
    CS_AllocationRetentionPriority = OCT_STR(name='CS-AllocationRetentionPriority', mode=MODE_TYPE)
    CS_AllocationRetentionPriority._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< IST-AlertTimerValue >-----#
    IST_AlertTimerValue = INT(name='IST-AlertTimerValue', mode=MODE_TYPE)
    IST_AlertTimerValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=15, ub=255)], ev=None, er=[])
    
    #-----< LCSInformation >-----#
    LCSInformation = SEQ(name='LCSInformation', mode=MODE_TYPE)
    _LCSInformation_gmlc_List = SEQ_OF(name='gmlc-List', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GMLC-List')), opt=True)
    _LCSInformation_lcs_PrivacyExceptionList = SEQ_OF(name='lcs-PrivacyExceptionList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LCS-PrivacyExceptionList')), opt=True)
    _LCSInformation_molr_List = SEQ_OF(name='molr-List', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MOLR-List')), opt=True)
    _LCSInformation_add_lcs_PrivacyExceptionList = SEQ_OF(name='add-lcs-PrivacyExceptionList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LCS-PrivacyExceptionList')), opt=True)
    LCSInformation._cont = ASN1Dict([
        ('gmlc-List', _LCSInformation_gmlc_List),
        ('lcs-PrivacyExceptionList', _LCSInformation_lcs_PrivacyExceptionList),
        ('molr-List', _LCSInformation_molr_List),
        ('add-lcs-PrivacyExceptionList', _LCSInformation_add_lcs_PrivacyExceptionList),
        ])
    LCSInformation._ext = ['add-lcs-PrivacyExceptionList']
    
    #-----< GMLC-List >-----#
    GMLC_List = SEQ_OF(name='GMLC-List', mode=MODE_TYPE)
    _GMLC_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    GMLC_List._cont = _GMLC_List__item_
    GMLC_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< maxNumOfGMLC >-----#
    maxNumOfGMLC = INT(name='maxNumOfGMLC', mode=MODE_VALUE)
    maxNumOfGMLC._val = 5
    
    #-----< NetworkAccessMode >-----#
    NetworkAccessMode = ENUM(name='NetworkAccessMode', mode=MODE_TYPE)
    NetworkAccessMode._cont = ASN1Dict([('packetAndCircuit', 0), ('onlyCircuit', 1), ('onlyPacket', 2)])
    NetworkAccessMode._ext = []
    
    #-----< GPRSDataList >-----#
    GPRSDataList = SEQ_OF(name='GPRSDataList', mode=MODE_TYPE)
    _GPRSDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Context')))
    GPRSDataList._cont = _GPRSDataList__item_
    GPRSDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< maxNumOfPDP-Contexts >-----#
    maxNumOfPDP_Contexts = INT(name='maxNumOfPDP-Contexts', mode=MODE_VALUE)
    maxNumOfPDP_Contexts._val = 50
    
    #-----< PDP-Context >-----#
    PDP_Context = SEQ(name='PDP-Context', mode=MODE_TYPE)
    _PDP_Context_pdp_ContextId = INT(name='pdp-ContextId', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ContextId')))
    _PDP_Context_pdp_Type = OCT_STR(name='pdp-Type', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Type')))
    _PDP_Context_pdp_Address = OCT_STR(name='pdp-Address', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Address')), opt=True)
    _PDP_Context_qos_Subscribed = OCT_STR(name='qos-Subscribed', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'QoS-Subscribed')))
    _PDP_Context_vplmnAddressAllowed = NULL(name='vplmnAddressAllowed', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PDP_Context_apn = OCT_STR(name='apn', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN')))
    _PDP_Context_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _PDP_Context_ext_QoS_Subscribed = OCT_STR(name='ext-QoS-Subscribed', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-QoS-Subscribed')), opt=True)
    _PDP_Context_pdp_ChargingCharacteristics = OCT_STR(name='pdp-ChargingCharacteristics', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChargingCharacteristics')), opt=True)
    _PDP_Context_ext2_QoS_Subscribed = OCT_STR(name='ext2-QoS-Subscribed', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext2-QoS-Subscribed')), opt=True)
    _PDP_Context_ext3_QoS_Subscribed = OCT_STR(name='ext3-QoS-Subscribed', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext3-QoS-Subscribed')), opt=True)
    _PDP_Context_ext4_QoS_Subscribed = OCT_STR(name='ext4-QoS-Subscribed', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext4-QoS-Subscribed')), opt=True)
    _PDP_Context_apn_oi_Replacement = OCT_STR(name='apn-oi-Replacement', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN-OI-Replacement')), opt=True)
    _PDP_Context_ext_pdp_Type = OCT_STR(name='ext-pdp-Type', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-PDP-Type')), opt=True)
    _PDP_Context_ext_pdp_Address = OCT_STR(name='ext-pdp-Address', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Address')), opt=True)
    _PDP_Context_ambr = SEQ(name='ambr', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AMBR')), opt=True)
    _PDP_Context_sipto_Permission = ENUM(name='sipto-Permission', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SIPTO-Permission')), opt=True)
    _PDP_Context_lipa_Permission = ENUM(name='lipa-Permission', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LIPA-Permission')), opt=True)
    _PDP_Context_restoration_Priority = OCT_STR(name='restoration-Priority', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Restoration-Priority')), opt=True)
    _PDP_Context_sipto_local_network_Permission = ENUM(name='sipto-local-network-Permission', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SIPTO-Local-Network-Permission')), opt=True)
    _PDP_Context_nIDD_Mechanism = ENUM(name='nIDD-Mechanism', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'NIDD-Mechanism')), opt=True)
    _PDP_Context_sCEF_ID = OCT_STR(name='sCEF-ID', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'FQDN')), opt=True)
    PDP_Context._cont = ASN1Dict([
        ('pdp-ContextId', _PDP_Context_pdp_ContextId),
        ('pdp-Type', _PDP_Context_pdp_Type),
        ('pdp-Address', _PDP_Context_pdp_Address),
        ('qos-Subscribed', _PDP_Context_qos_Subscribed),
        ('vplmnAddressAllowed', _PDP_Context_vplmnAddressAllowed),
        ('apn', _PDP_Context_apn),
        ('extensionContainer', _PDP_Context_extensionContainer),
        ('ext-QoS-Subscribed', _PDP_Context_ext_QoS_Subscribed),
        ('pdp-ChargingCharacteristics', _PDP_Context_pdp_ChargingCharacteristics),
        ('ext2-QoS-Subscribed', _PDP_Context_ext2_QoS_Subscribed),
        ('ext3-QoS-Subscribed', _PDP_Context_ext3_QoS_Subscribed),
        ('ext4-QoS-Subscribed', _PDP_Context_ext4_QoS_Subscribed),
        ('apn-oi-Replacement', _PDP_Context_apn_oi_Replacement),
        ('ext-pdp-Type', _PDP_Context_ext_pdp_Type),
        ('ext-pdp-Address', _PDP_Context_ext_pdp_Address),
        ('ambr', _PDP_Context_ambr),
        ('sipto-Permission', _PDP_Context_sipto_Permission),
        ('lipa-Permission', _PDP_Context_lipa_Permission),
        ('restoration-Priority', _PDP_Context_restoration_Priority),
        ('sipto-local-network-Permission', _PDP_Context_sipto_local_network_Permission),
        ('nIDD-Mechanism', _PDP_Context_nIDD_Mechanism),
        ('sCEF-ID', _PDP_Context_sCEF_ID),
        ])
    PDP_Context._ext = ['ext-QoS-Subscribed', 'pdp-ChargingCharacteristics', 'ext2-QoS-Subscribed', 'ext3-QoS-Subscribed', 'ext4-QoS-Subscribed', 'apn-oi-Replacement', 'ext-pdp-Type', 'ext-pdp-Address', 'ambr', 'sipto-Permission', 'lipa-Permission', 'restoration-Priority', 'sipto-local-network-Permission', 'nIDD-Mechanism', 'sCEF-ID']
    
    #-----< Restoration-Priority >-----#
    Restoration_Priority = OCT_STR(name='Restoration-Priority', mode=MODE_TYPE)
    Restoration_Priority._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< SIPTO-Permission >-----#
    SIPTO_Permission = ENUM(name='SIPTO-Permission', mode=MODE_TYPE)
    SIPTO_Permission._cont = ASN1Dict([('siptoAboveRanAllowed', 0), ('siptoAboveRanNotAllowed', 1)])
    SIPTO_Permission._ext = None
    
    #-----< SIPTO-Local-Network-Permission >-----#
    SIPTO_Local_Network_Permission = ENUM(name='SIPTO-Local-Network-Permission', mode=MODE_TYPE)
    SIPTO_Local_Network_Permission._cont = ASN1Dict([('siptoAtLocalNetworkAllowed', 0), ('siptoAtLocalNetworkNotAllowed', 1)])
    SIPTO_Local_Network_Permission._ext = None
    
    #-----< LIPA-Permission >-----#
    LIPA_Permission = ENUM(name='LIPA-Permission', mode=MODE_TYPE)
    LIPA_Permission._cont = ASN1Dict([('lipaProhibited', 0), ('lipaOnly', 1), ('lipaConditional', 2)])
    LIPA_Permission._ext = None
    
    #-----< ContextId >-----#
    ContextId = INT(name='ContextId', mode=MODE_TYPE)
    ContextId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< GPRSSubscriptionData >-----#
    GPRSSubscriptionData = SEQ(name='GPRSSubscriptionData', mode=MODE_TYPE)
    _GPRSSubscriptionData_completeDataListIncluded = NULL(name='completeDataListIncluded', mode=MODE_TYPE, opt=True)
    _GPRSSubscriptionData_gprsDataList = SEQ_OF(name='gprsDataList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRSDataList')))
    _GPRSSubscriptionData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _GPRSSubscriptionData_apn_oi_Replacement = OCT_STR(name='apn-oi-Replacement', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN-OI-Replacement')), opt=True)
    GPRSSubscriptionData._cont = ASN1Dict([
        ('completeDataListIncluded', _GPRSSubscriptionData_completeDataListIncluded),
        ('gprsDataList', _GPRSSubscriptionData_gprsDataList),
        ('extensionContainer', _GPRSSubscriptionData_extensionContainer),
        ('apn-oi-Replacement', _GPRSSubscriptionData_apn_oi_Replacement),
        ])
    GPRSSubscriptionData._ext = ['apn-oi-Replacement']
    
    #-----< SGSN-CAMEL-SubscriptionInfo >-----#
    SGSN_CAMEL_SubscriptionInfo = SEQ(name='SGSN-CAMEL-SubscriptionInfo', mode=MODE_TYPE)
    _SGSN_CAMEL_SubscriptionInfo_gprs_CSI = SEQ(name='gprs-CSI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRS-CSI')), opt=True)
    _SGSN_CAMEL_SubscriptionInfo_mo_sms_CSI = SEQ(name='mo-sms-CSI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-CSI')), opt=True)
    _SGSN_CAMEL_SubscriptionInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SGSN_CAMEL_SubscriptionInfo_mt_sms_CSI = SEQ(name='mt-sms-CSI', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-CSI')), opt=True)
    _SGSN_CAMEL_SubscriptionInfo_mt_smsCAMELTDP_CriteriaList = SEQ_OF(name='mt-smsCAMELTDP-CriteriaList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MT-smsCAMELTDP-CriteriaList')), opt=True)
    _SGSN_CAMEL_SubscriptionInfo_mg_csi = SEQ(name='mg-csi', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MG-CSI')), opt=True)
    SGSN_CAMEL_SubscriptionInfo._cont = ASN1Dict([
        ('gprs-CSI', _SGSN_CAMEL_SubscriptionInfo_gprs_CSI),
        ('mo-sms-CSI', _SGSN_CAMEL_SubscriptionInfo_mo_sms_CSI),
        ('extensionContainer', _SGSN_CAMEL_SubscriptionInfo_extensionContainer),
        ('mt-sms-CSI', _SGSN_CAMEL_SubscriptionInfo_mt_sms_CSI),
        ('mt-smsCAMELTDP-CriteriaList', _SGSN_CAMEL_SubscriptionInfo_mt_smsCAMELTDP_CriteriaList),
        ('mg-csi', _SGSN_CAMEL_SubscriptionInfo_mg_csi),
        ])
    SGSN_CAMEL_SubscriptionInfo._ext = ['mt-sms-CSI', 'mt-smsCAMELTDP-CriteriaList', 'mg-csi']
    
    #-----< GPRS-CSI >-----#
    GPRS_CSI = SEQ(name='GPRS-CSI', mode=MODE_TYPE)
    _GPRS_CSI_gprs_CamelTDPDataList = SEQ_OF(name='gprs-CamelTDPDataList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRS-CamelTDPDataList')), opt=True)
    _GPRS_CSI_camelCapabilityHandling = INT(name='camelCapabilityHandling', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CamelCapabilityHandling')), opt=True)
    _GPRS_CSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _GPRS_CSI_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GPRS_CSI_csi_Active = NULL(name='csi-Active', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    GPRS_CSI._cont = ASN1Dict([
        ('gprs-CamelTDPDataList', _GPRS_CSI_gprs_CamelTDPDataList),
        ('camelCapabilityHandling', _GPRS_CSI_camelCapabilityHandling),
        ('extensionContainer', _GPRS_CSI_extensionContainer),
        ('notificationToCSE', _GPRS_CSI_notificationToCSE),
        ('csi-Active', _GPRS_CSI_csi_Active),
        ])
    GPRS_CSI._ext = []
    
    #-----< GPRS-CamelTDPDataList >-----#
    GPRS_CamelTDPDataList = SEQ_OF(name='GPRS-CamelTDPDataList', mode=MODE_TYPE)
    _GPRS_CamelTDPDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRS-CamelTDPData')))
    GPRS_CamelTDPDataList._cont = _GPRS_CamelTDPDataList__item_
    GPRS_CamelTDPDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< GPRS-CamelTDPData >-----#
    GPRS_CamelTDPData = SEQ(name='GPRS-CamelTDPData', mode=MODE_TYPE)
    _GPRS_CamelTDPData_gprs_TriggerDetectionPoint = ENUM(name='gprs-TriggerDetectionPoint', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRS-TriggerDetectionPoint')))
    _GPRS_CamelTDPData_serviceKey = INT(name='serviceKey', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceKey')))
    _GPRS_CamelTDPData_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _GPRS_CamelTDPData_defaultSessionHandling = ENUM(name='defaultSessionHandling', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DefaultGPRS-Handling')))
    _GPRS_CamelTDPData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    GPRS_CamelTDPData._cont = ASN1Dict([
        ('gprs-TriggerDetectionPoint', _GPRS_CamelTDPData_gprs_TriggerDetectionPoint),
        ('serviceKey', _GPRS_CamelTDPData_serviceKey),
        ('gsmSCF-Address', _GPRS_CamelTDPData_gsmSCF_Address),
        ('defaultSessionHandling', _GPRS_CamelTDPData_defaultSessionHandling),
        ('extensionContainer', _GPRS_CamelTDPData_extensionContainer),
        ])
    GPRS_CamelTDPData._ext = []
    
    #-----< DefaultGPRS-Handling >-----#
    DefaultGPRS_Handling = ENUM(name='DefaultGPRS-Handling', mode=MODE_TYPE)
    DefaultGPRS_Handling._cont = ASN1Dict([('continueTransaction', 0), ('releaseTransaction', 1)])
    DefaultGPRS_Handling._ext = []
    
    #-----< GPRS-TriggerDetectionPoint >-----#
    GPRS_TriggerDetectionPoint = ENUM(name='GPRS-TriggerDetectionPoint', mode=MODE_TYPE)
    GPRS_TriggerDetectionPoint._cont = ASN1Dict([('attach', 1), ('attachChangeOfPosition', 2), ('pdp-ContextEstablishment', 11), ('pdp-ContextEstablishmentAcknowledgement', 12), ('pdp-ContextChangeOfPosition', 14)])
    GPRS_TriggerDetectionPoint._ext = []
    
    #-----< APN >-----#
    APN = OCT_STR(name='APN', mode=MODE_TYPE)
    APN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=63)], ev=None, er=[])
    
    #-----< PDP-Type >-----#
    PDP_Type = OCT_STR(name='PDP-Type', mode=MODE_TYPE)
    PDP_Type._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< Ext-PDP-Type >-----#
    Ext_PDP_Type = OCT_STR(name='Ext-PDP-Type', mode=MODE_TYPE)
    Ext_PDP_Type._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< PDP-Address >-----#
    PDP_Address = OCT_STR(name='PDP-Address', mode=MODE_TYPE)
    PDP_Address._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< QoS-Subscribed >-----#
    QoS_Subscribed = OCT_STR(name='QoS-Subscribed', mode=MODE_TYPE)
    QoS_Subscribed._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< Ext-QoS-Subscribed >-----#
    Ext_QoS_Subscribed = OCT_STR(name='Ext-QoS-Subscribed', mode=MODE_TYPE)
    Ext_QoS_Subscribed._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    
    #-----< Ext2-QoS-Subscribed >-----#
    Ext2_QoS_Subscribed = OCT_STR(name='Ext2-QoS-Subscribed', mode=MODE_TYPE)
    Ext2_QoS_Subscribed._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< Ext3-QoS-Subscribed >-----#
    Ext3_QoS_Subscribed = OCT_STR(name='Ext3-QoS-Subscribed', mode=MODE_TYPE)
    Ext3_QoS_Subscribed._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    
    #-----< Ext4-QoS-Subscribed >-----#
    Ext4_QoS_Subscribed = OCT_STR(name='Ext4-QoS-Subscribed', mode=MODE_TYPE)
    Ext4_QoS_Subscribed._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< ChargingCharacteristics >-----#
    ChargingCharacteristics = OCT_STR(name='ChargingCharacteristics', mode=MODE_TYPE)
    ChargingCharacteristics._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< LSAOnlyAccessIndicator >-----#
    LSAOnlyAccessIndicator = ENUM(name='LSAOnlyAccessIndicator', mode=MODE_TYPE)
    LSAOnlyAccessIndicator._cont = ASN1Dict([('accessOutsideLSAsAllowed', 0), ('accessOutsideLSAsRestricted', 1)])
    LSAOnlyAccessIndicator._ext = None
    
    #-----< LSADataList >-----#
    LSADataList = SEQ_OF(name='LSADataList', mode=MODE_TYPE)
    _LSADataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAData')))
    LSADataList._cont = _LSADataList__item_
    LSADataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< maxNumOfLSAs >-----#
    maxNumOfLSAs = INT(name='maxNumOfLSAs', mode=MODE_VALUE)
    maxNumOfLSAs._val = 20
    
    #-----< LSAData >-----#
    LSAData = SEQ(name='LSAData', mode=MODE_TYPE)
    _LSAData_lsaIdentity = OCT_STR(name='lsaIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAIdentity')))
    _LSAData_lsaAttributes = OCT_STR(name='lsaAttributes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAAttributes')))
    _LSAData_lsaActiveModeIndicator = NULL(name='lsaActiveModeIndicator', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LSAData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    LSAData._cont = ASN1Dict([
        ('lsaIdentity', _LSAData_lsaIdentity),
        ('lsaAttributes', _LSAData_lsaAttributes),
        ('lsaActiveModeIndicator', _LSAData_lsaActiveModeIndicator),
        ('extensionContainer', _LSAData_extensionContainer),
        ])
    LSAData._ext = []
    
    #-----< LSAInformation >-----#
    LSAInformation = SEQ(name='LSAInformation', mode=MODE_TYPE)
    _LSAInformation_completeDataListIncluded = NULL(name='completeDataListIncluded', mode=MODE_TYPE, opt=True)
    _LSAInformation_lsaOnlyAccessIndicator = ENUM(name='lsaOnlyAccessIndicator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAOnlyAccessIndicator')), opt=True)
    _LSAInformation_lsaDataList = SEQ_OF(name='lsaDataList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSADataList')), opt=True)
    _LSAInformation_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    LSAInformation._cont = ASN1Dict([
        ('completeDataListIncluded', _LSAInformation_completeDataListIncluded),
        ('lsaOnlyAccessIndicator', _LSAInformation_lsaOnlyAccessIndicator),
        ('lsaDataList', _LSAInformation_lsaDataList),
        ('extensionContainer', _LSAInformation_extensionContainer),
        ])
    LSAInformation._ext = []
    
    #-----< LSAIdentity >-----#
    LSAIdentity = OCT_STR(name='LSAIdentity', mode=MODE_TYPE)
    LSAIdentity._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< LSAAttributes >-----#
    LSAAttributes = OCT_STR(name='LSAAttributes', mode=MODE_TYPE)
    LSAAttributes._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< SubscriberData >-----#
    SubscriberData = SEQ(name='SubscriberData', mode=MODE_TYPE)
    _SubscriberData_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SubscriberData_category = OCT_STR(name='category', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Category')), opt=True)
    _SubscriberData_subscriberStatus = ENUM(name='subscriberStatus', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SubscriberStatus')), opt=True)
    _SubscriberData_bearerServiceList = SEQ_OF(name='bearerServiceList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BearerServiceList')), opt=True)
    _SubscriberData_teleserviceList = SEQ_OF(name='teleserviceList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TeleserviceList')), opt=True)
    _SubscriberData_provisionedSS = SEQ_OF(name='provisionedSS', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-SS-InfoList')), opt=True)
    _SubscriberData_odb_Data = SEQ(name='odb-Data', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-Data')), opt=True)
    _SubscriberData_roamingRestrictionDueToUnsupportedFeature = NULL(name='roamingRestrictionDueToUnsupportedFeature', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SubscriberData_regionalSubscriptionData = SEQ_OF(name='regionalSubscriptionData', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ZoneCodeList')), opt=True)
    _SubscriberData_vbsSubscriptionData = SEQ_OF(name='vbsSubscriptionData', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'VBSDataList')), opt=True)
    _SubscriberData_vgcsSubscriptionData = SEQ_OF(name='vgcsSubscriptionData', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'VGCSDataList')), opt=True)
    _SubscriberData_vlrCamelSubscriptionInfo = SEQ(name='vlrCamelSubscriptionInfo', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'VlrCamelSubscriptionInfo')), opt=True)
    SubscriberData._cont = ASN1Dict([
        ('msisdn', _SubscriberData_msisdn),
        ('category', _SubscriberData_category),
        ('subscriberStatus', _SubscriberData_subscriberStatus),
        ('bearerServiceList', _SubscriberData_bearerServiceList),
        ('teleserviceList', _SubscriberData_teleserviceList),
        ('provisionedSS', _SubscriberData_provisionedSS),
        ('odb-Data', _SubscriberData_odb_Data),
        ('roamingRestrictionDueToUnsupportedFeature', _SubscriberData_roamingRestrictionDueToUnsupportedFeature),
        ('regionalSubscriptionData', _SubscriberData_regionalSubscriptionData),
        ('vbsSubscriptionData', _SubscriberData_vbsSubscriptionData),
        ('vgcsSubscriptionData', _SubscriberData_vgcsSubscriptionData),
        ('vlrCamelSubscriptionInfo', _SubscriberData_vlrCamelSubscriptionInfo),
        ])
    SubscriberData._ext = None
    
    #-----< Category >-----#
    Category = OCT_STR(name='Category', mode=MODE_TYPE)
    Category._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< SubscriberStatus >-----#
    SubscriberStatus = ENUM(name='SubscriberStatus', mode=MODE_TYPE)
    SubscriberStatus._cont = ASN1Dict([('serviceGranted', 0), ('operatorDeterminedBarring', 1)])
    SubscriberStatus._ext = None
    
    #-----< BearerServiceList >-----#
    BearerServiceList = SEQ_OF(name='BearerServiceList', mode=MODE_TYPE)
    _BearerServiceList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-BS-Code', 'Ext-BearerServiceCode')))
    BearerServiceList._cont = _BearerServiceList__item_
    BearerServiceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< maxNumOfBearerServices >-----#
    maxNumOfBearerServices = INT(name='maxNumOfBearerServices', mode=MODE_VALUE)
    maxNumOfBearerServices._val = 50
    
    #-----< TeleserviceList >-----#
    TeleserviceList = SEQ_OF(name='TeleserviceList', mode=MODE_TYPE)
    _TeleserviceList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-TS-Code', 'Ext-TeleserviceCode')))
    TeleserviceList._cont = _TeleserviceList__item_
    TeleserviceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< maxNumOfTeleservices >-----#
    maxNumOfTeleservices = INT(name='maxNumOfTeleservices', mode=MODE_VALUE)
    maxNumOfTeleservices._val = 20
    
    #-----< ODB-Data >-----#
    ODB_Data = SEQ(name='ODB-Data', mode=MODE_TYPE)
    _ODB_Data_odb_GeneralData = BIT_STR(name='odb-GeneralData', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-GeneralData')))
    _ODB_Data_odb_HPLMN_Data = BIT_STR(name='odb-HPLMN-Data', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-HPLMN-Data')), opt=True)
    _ODB_Data_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ODB_Data._cont = ASN1Dict([
        ('odb-GeneralData', _ODB_Data_odb_GeneralData),
        ('odb-HPLMN-Data', _ODB_Data_odb_HPLMN_Data),
        ('extensionContainer', _ODB_Data_extensionContainer),
        ])
    ODB_Data._ext = []
    
    #-----< ODB-GeneralData >-----#
    ODB_GeneralData = BIT_STR(name='ODB-GeneralData', mode=MODE_TYPE)
    ODB_GeneralData._cont = ASN1Dict([('allOG-CallsBarred', 0), ('internationalOGCallsBarred', 1), ('internationalOGCallsNotToHPLMN-CountryBarred', 2), ('interzonalOGCallsBarred', 6), ('interzonalOGCallsNotToHPLMN-CountryBarred', 7), ('interzonalOGCallsAndInternationalOGCallsNotToHPLMN-CountryBarred', 8), ('premiumRateInformationOGCallsBarred', 3), ('premiumRateEntertainementOGCallsBarred', 4), ('ss-AccessBarred', 5), ('allECT-Barred', 9), ('chargeableECT-Barred', 10), ('internationalECT-Barred', 11), ('interzonalECT-Barred', 12), ('doublyChargeableECT-Barred', 13), ('multipleECT-Barred', 14), ('allPacketOrientedServicesBarred', 15), ('roamerAccessToHPLMN-AP-Barred', 16), ('roamerAccessToVPLMN-AP-Barred', 17), ('roamingOutsidePLMNOG-CallsBarred', 18), ('allIC-CallsBarred', 19), ('roamingOutsidePLMNIC-CallsBarred', 20), ('roamingOutsidePLMNICountryIC-CallsBarred', 21), ('roamingOutsidePLMN-Barred', 22), ('roamingOutsidePLMN-CountryBarred', 23), ('registrationAllCF-Barred', 24), ('registrationCFNotToHPLMN-Barred', 25), ('registrationInterzonalCF-Barred', 26), ('registrationInterzonalCFNotToHPLMN-Barred', 27), ('registrationInternationalCF-Barred', 28)])
    ODB_GeneralData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=15, ub=32)], ev=None, er=[])
    
    #-----< ODB-HPLMN-Data >-----#
    ODB_HPLMN_Data = BIT_STR(name='ODB-HPLMN-Data', mode=MODE_TYPE)
    ODB_HPLMN_Data._cont = ASN1Dict([('plmn-SpecificBarringType1', 0), ('plmn-SpecificBarringType2', 1), ('plmn-SpecificBarringType3', 2), ('plmn-SpecificBarringType4', 3)])
    ODB_HPLMN_Data._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=4, ub=32)], ev=None, er=[])
    
    #-----< Ext-SS-InfoList >-----#
    Ext_SS_InfoList = SEQ_OF(name='Ext-SS-InfoList', mode=MODE_TYPE)
    _Ext_SS_InfoList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-SS-Info')))
    Ext_SS_InfoList._cont = _Ext_SS_InfoList__item_
    Ext_SS_InfoList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=30)], ev=None, er=[])
    
    #-----< Ext-SS-Info >-----#
    Ext_SS_Info = CHOICE(name='Ext-SS-Info', mode=MODE_TYPE)
    _Ext_SS_Info_forwardingInfo = SEQ(name='forwardingInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-ForwInfo')))
    _Ext_SS_Info_callBarringInfo = SEQ(name='callBarringInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-CallBarInfo')))
    _Ext_SS_Info_cug_Info = SEQ(name='cug-Info', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CUG-Info')))
    _Ext_SS_Info_ss_Data = SEQ(name='ss-Data', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-SS-Data')))
    _Ext_SS_Info_emlpp_Info = SEQ(name='emlpp-Info', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Info')))
    Ext_SS_Info._cont = ASN1Dict([
        ('forwardingInfo', _Ext_SS_Info_forwardingInfo),
        ('callBarringInfo', _Ext_SS_Info_callBarringInfo),
        ('cug-Info', _Ext_SS_Info_cug_Info),
        ('ss-Data', _Ext_SS_Info_ss_Data),
        ('emlpp-Info', _Ext_SS_Info_emlpp_Info),
        ])
    Ext_SS_Info._ext = None
    
    #-----< Ext-ForwInfo >-----#
    Ext_ForwInfo = SEQ(name='Ext-ForwInfo', mode=MODE_TYPE)
    _Ext_ForwInfo_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _Ext_ForwInfo_forwardingFeatureList = SEQ_OF(name='forwardingFeatureList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-ForwFeatureList')))
    _Ext_ForwInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    Ext_ForwInfo._cont = ASN1Dict([
        ('ss-Code', _Ext_ForwInfo_ss_Code),
        ('forwardingFeatureList', _Ext_ForwInfo_forwardingFeatureList),
        ('extensionContainer', _Ext_ForwInfo_extensionContainer),
        ])
    Ext_ForwInfo._ext = []
    
    #-----< Ext-ForwFeatureList >-----#
    Ext_ForwFeatureList = SEQ_OF(name='Ext-ForwFeatureList', mode=MODE_TYPE)
    _Ext_ForwFeatureList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-ForwFeature')))
    Ext_ForwFeatureList._cont = _Ext_ForwFeatureList__item_
    Ext_ForwFeatureList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< Ext-ForwFeature >-----#
    Ext_ForwFeature = SEQ(name='Ext-ForwFeature', mode=MODE_TYPE)
    _Ext_ForwFeature_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')), opt=True)
    _Ext_ForwFeature_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _Ext_ForwFeature_forwardedToNumber = OCT_STR(name='forwardedToNumber', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _Ext_ForwFeature_forwardedToSubaddress = OCT_STR(name='forwardedToSubaddress', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-SubaddressString')), opt=True)
    _Ext_ForwFeature_forwardingOptions = OCT_STR(name='forwardingOptions', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-ForwOptions')), opt=True)
    _Ext_ForwFeature_noReplyConditionTime = INT(name='noReplyConditionTime', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-NoRepCondTime')), opt=True)
    _Ext_ForwFeature_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _Ext_ForwFeature_longForwardedToNumber = OCT_STR(name='longForwardedToNumber', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'FTN-AddressString')), opt=True)
    Ext_ForwFeature._cont = ASN1Dict([
        ('basicService', _Ext_ForwFeature_basicService),
        ('ss-Status', _Ext_ForwFeature_ss_Status),
        ('forwardedToNumber', _Ext_ForwFeature_forwardedToNumber),
        ('forwardedToSubaddress', _Ext_ForwFeature_forwardedToSubaddress),
        ('forwardingOptions', _Ext_ForwFeature_forwardingOptions),
        ('noReplyConditionTime', _Ext_ForwFeature_noReplyConditionTime),
        ('extensionContainer', _Ext_ForwFeature_extensionContainer),
        ('longForwardedToNumber', _Ext_ForwFeature_longForwardedToNumber),
        ])
    Ext_ForwFeature._ext = ['longForwardedToNumber']
    
    #-----< Ext-ForwOptions >-----#
    Ext_ForwOptions = OCT_STR(name='Ext-ForwOptions', mode=MODE_TYPE)
    Ext_ForwOptions._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< Ext-NoRepCondTime >-----#
    Ext_NoRepCondTime = INT(name='Ext-NoRepCondTime', mode=MODE_TYPE)
    Ext_NoRepCondTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=100)], ev=None, er=[])
    
    #-----< Ext-CallBarInfo >-----#
    Ext_CallBarInfo = SEQ(name='Ext-CallBarInfo', mode=MODE_TYPE)
    _Ext_CallBarInfo_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _Ext_CallBarInfo_callBarringFeatureList = SEQ_OF(name='callBarringFeatureList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-CallBarFeatureList')))
    _Ext_CallBarInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    Ext_CallBarInfo._cont = ASN1Dict([
        ('ss-Code', _Ext_CallBarInfo_ss_Code),
        ('callBarringFeatureList', _Ext_CallBarInfo_callBarringFeatureList),
        ('extensionContainer', _Ext_CallBarInfo_extensionContainer),
        ])
    Ext_CallBarInfo._ext = []
    
    #-----< Ext-CallBarFeatureList >-----#
    Ext_CallBarFeatureList = SEQ_OF(name='Ext-CallBarFeatureList', mode=MODE_TYPE)
    _Ext_CallBarFeatureList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-CallBarringFeature')))
    Ext_CallBarFeatureList._cont = _Ext_CallBarFeatureList__item_
    Ext_CallBarFeatureList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< Ext-CallBarringFeature >-----#
    Ext_CallBarringFeature = SEQ(name='Ext-CallBarringFeature', mode=MODE_TYPE)
    _Ext_CallBarringFeature_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')), opt=True)
    _Ext_CallBarringFeature_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _Ext_CallBarringFeature_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    Ext_CallBarringFeature._cont = ASN1Dict([
        ('basicService', _Ext_CallBarringFeature_basicService),
        ('ss-Status', _Ext_CallBarringFeature_ss_Status),
        ('extensionContainer', _Ext_CallBarringFeature_extensionContainer),
        ])
    Ext_CallBarringFeature._ext = []
    
    #-----< CUG-Info >-----#
    CUG_Info = SEQ(name='CUG-Info', mode=MODE_TYPE)
    _CUG_Info_cug_SubscriptionList = SEQ_OF(name='cug-SubscriptionList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CUG-SubscriptionList')))
    _CUG_Info_cug_FeatureList = SEQ_OF(name='cug-FeatureList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CUG-FeatureList')), opt=True)
    _CUG_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CUG_Info._cont = ASN1Dict([
        ('cug-SubscriptionList', _CUG_Info_cug_SubscriptionList),
        ('cug-FeatureList', _CUG_Info_cug_FeatureList),
        ('extensionContainer', _CUG_Info_extensionContainer),
        ])
    CUG_Info._ext = []
    
    #-----< CUG-SubscriptionList >-----#
    CUG_SubscriptionList = SEQ_OF(name='CUG-SubscriptionList', mode=MODE_TYPE)
    _CUG_SubscriptionList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CUG-Subscription')))
    CUG_SubscriptionList._cont = _CUG_SubscriptionList__item_
    CUG_SubscriptionList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=10)], ev=None, er=[])
    
    #-----< CUG-Subscription >-----#
    CUG_Subscription = SEQ(name='CUG-Subscription', mode=MODE_TYPE)
    _CUG_Subscription_cug_Index = INT(name='cug-Index', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CUG-Index')))
    _CUG_Subscription_cug_Interlock = OCT_STR(name='cug-Interlock', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CUG-Interlock')))
    _CUG_Subscription_intraCUG_Options = ENUM(name='intraCUG-Options', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'IntraCUG-Options')))
    _CUG_Subscription_basicServiceGroupList = SEQ_OF(name='basicServiceGroupList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-BasicServiceGroupList')), opt=True)
    _CUG_Subscription_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CUG_Subscription._cont = ASN1Dict([
        ('cug-Index', _CUG_Subscription_cug_Index),
        ('cug-Interlock', _CUG_Subscription_cug_Interlock),
        ('intraCUG-Options', _CUG_Subscription_intraCUG_Options),
        ('basicServiceGroupList', _CUG_Subscription_basicServiceGroupList),
        ('extensionContainer', _CUG_Subscription_extensionContainer),
        ])
    CUG_Subscription._ext = []
    
    #-----< CUG-Index >-----#
    CUG_Index = INT(name='CUG-Index', mode=MODE_TYPE)
    CUG_Index._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    
    #-----< CUG-Interlock >-----#
    CUG_Interlock = OCT_STR(name='CUG-Interlock', mode=MODE_TYPE)
    CUG_Interlock._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< IntraCUG-Options >-----#
    IntraCUG_Options = ENUM(name='IntraCUG-Options', mode=MODE_TYPE)
    IntraCUG_Options._cont = ASN1Dict([('noCUG-Restrictions', 0), ('cugIC-CallBarred', 1), ('cugOG-CallBarred', 2)])
    IntraCUG_Options._ext = None
    
    #-----< maxNumOfCUG >-----#
    maxNumOfCUG = INT(name='maxNumOfCUG', mode=MODE_VALUE)
    maxNumOfCUG._val = 10
    
    #-----< CUG-FeatureList >-----#
    CUG_FeatureList = SEQ_OF(name='CUG-FeatureList', mode=MODE_TYPE)
    _CUG_FeatureList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CUG-Feature')))
    CUG_FeatureList._cont = _CUG_FeatureList__item_
    CUG_FeatureList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< Ext-BasicServiceGroupList >-----#
    Ext_BasicServiceGroupList = SEQ_OF(name='Ext-BasicServiceGroupList', mode=MODE_TYPE)
    _Ext_BasicServiceGroupList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')))
    Ext_BasicServiceGroupList._cont = _Ext_BasicServiceGroupList__item_
    Ext_BasicServiceGroupList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< maxNumOfExt-BasicServiceGroups >-----#
    maxNumOfExt_BasicServiceGroups = INT(name='maxNumOfExt-BasicServiceGroups', mode=MODE_VALUE)
    maxNumOfExt_BasicServiceGroups._val = 32
    
    #-----< CUG-Feature >-----#
    CUG_Feature = SEQ(name='CUG-Feature', mode=MODE_TYPE)
    _CUG_Feature_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')), opt=True)
    _CUG_Feature_preferentialCUG_Indicator = INT(name='preferentialCUG-Indicator', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CUG-Index')), opt=True)
    _CUG_Feature_interCUG_Restrictions = OCT_STR(name='interCUG-Restrictions', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'InterCUG-Restrictions')))
    _CUG_Feature_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CUG_Feature._cont = ASN1Dict([
        ('basicService', _CUG_Feature_basicService),
        ('preferentialCUG-Indicator', _CUG_Feature_preferentialCUG_Indicator),
        ('interCUG-Restrictions', _CUG_Feature_interCUG_Restrictions),
        ('extensionContainer', _CUG_Feature_extensionContainer),
        ])
    CUG_Feature._ext = []
    
    #-----< InterCUG-Restrictions >-----#
    InterCUG_Restrictions = OCT_STR(name='InterCUG-Restrictions', mode=MODE_TYPE)
    InterCUG_Restrictions._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< Ext-SS-Data >-----#
    Ext_SS_Data = SEQ(name='Ext-SS-Data', mode=MODE_TYPE)
    _Ext_SS_Data_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _Ext_SS_Data_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _Ext_SS_Data_ss_SubscriptionOption = CHOICE(name='ss-SubscriptionOption', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-SubscriptionOption')), opt=True)
    _Ext_SS_Data_basicServiceGroupList = SEQ_OF(name='basicServiceGroupList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-BasicServiceGroupList')), opt=True)
    _Ext_SS_Data_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    Ext_SS_Data._cont = ASN1Dict([
        ('ss-Code', _Ext_SS_Data_ss_Code),
        ('ss-Status', _Ext_SS_Data_ss_Status),
        ('ss-SubscriptionOption', _Ext_SS_Data_ss_SubscriptionOption),
        ('basicServiceGroupList', _Ext_SS_Data_basicServiceGroupList),
        ('extensionContainer', _Ext_SS_Data_extensionContainer),
        ])
    Ext_SS_Data._ext = []
    
    #-----< LCS-PrivacyExceptionList >-----#
    LCS_PrivacyExceptionList = SEQ_OF(name='LCS-PrivacyExceptionList', mode=MODE_TYPE)
    _LCS_PrivacyExceptionList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'LCS-PrivacyClass')))
    LCS_PrivacyExceptionList._cont = _LCS_PrivacyExceptionList__item_
    LCS_PrivacyExceptionList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    
    #-----< maxNumOfPrivacyClass >-----#
    maxNumOfPrivacyClass = INT(name='maxNumOfPrivacyClass', mode=MODE_VALUE)
    maxNumOfPrivacyClass._val = 4
    
    #-----< LCS-PrivacyClass >-----#
    LCS_PrivacyClass = SEQ(name='LCS-PrivacyClass', mode=MODE_TYPE)
    _LCS_PrivacyClass_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _LCS_PrivacyClass_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _LCS_PrivacyClass_notificationToMSUser = ENUM(name='notificationToMSUser', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'NotificationToMSUser')), opt=True)
    _LCS_PrivacyClass_externalClientList = SEQ_OF(name='externalClientList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ExternalClientList')), opt=True)
    _LCS_PrivacyClass_plmnClientList = SEQ_OF(name='plmnClientList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PLMNClientList')), opt=True)
    _LCS_PrivacyClass_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _LCS_PrivacyClass_ext_externalClientList = SEQ_OF(name='ext-externalClientList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-ExternalClientList')), opt=True)
    _LCS_PrivacyClass_serviceTypeList = SEQ_OF(name='serviceTypeList', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceTypeList')), opt=True)
    LCS_PrivacyClass._cont = ASN1Dict([
        ('ss-Code', _LCS_PrivacyClass_ss_Code),
        ('ss-Status', _LCS_PrivacyClass_ss_Status),
        ('notificationToMSUser', _LCS_PrivacyClass_notificationToMSUser),
        ('externalClientList', _LCS_PrivacyClass_externalClientList),
        ('plmnClientList', _LCS_PrivacyClass_plmnClientList),
        ('extensionContainer', _LCS_PrivacyClass_extensionContainer),
        ('ext-externalClientList', _LCS_PrivacyClass_ext_externalClientList),
        ('serviceTypeList', _LCS_PrivacyClass_serviceTypeList),
        ])
    LCS_PrivacyClass._ext = ['ext-externalClientList', 'serviceTypeList']
    
    #-----< ExternalClientList >-----#
    ExternalClientList = SEQ_OF(name='ExternalClientList', mode=MODE_TYPE)
    _ExternalClientList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ExternalClient')))
    ExternalClientList._cont = _ExternalClientList__item_
    ExternalClientList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=5)], ev=None, er=[])
    
    #-----< maxNumOfExternalClient >-----#
    maxNumOfExternalClient = INT(name='maxNumOfExternalClient', mode=MODE_VALUE)
    maxNumOfExternalClient._val = 5
    
    #-----< PLMNClientList >-----#
    PLMNClientList = SEQ_OF(name='PLMNClientList', mode=MODE_TYPE)
    _PLMNClientList__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSClientInternalID')))
    PLMNClientList._cont = _PLMNClientList__item_
    PLMNClientList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< maxNumOfPLMNClient >-----#
    maxNumOfPLMNClient = INT(name='maxNumOfPLMNClient', mode=MODE_VALUE)
    maxNumOfPLMNClient._val = 5
    
    #-----< Ext-ExternalClientList >-----#
    Ext_ExternalClientList = SEQ_OF(name='Ext-ExternalClientList', mode=MODE_TYPE)
    _Ext_ExternalClientList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ExternalClient')))
    Ext_ExternalClientList._cont = _Ext_ExternalClientList__item_
    Ext_ExternalClientList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=35)], ev=None, er=[])
    
    #-----< maxNumOfExt-ExternalClient >-----#
    maxNumOfExt_ExternalClient = INT(name='maxNumOfExt-ExternalClient', mode=MODE_VALUE)
    maxNumOfExt_ExternalClient._val = 35
    
    #-----< ExternalClient >-----#
    ExternalClient = SEQ(name='ExternalClient', mode=MODE_TYPE)
    _ExternalClient_clientIdentity = SEQ(name='clientIdentity', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSClientExternalID')))
    _ExternalClient_gmlc_Restriction = ENUM(name='gmlc-Restriction', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GMLC-Restriction')), opt=True)
    _ExternalClient_notificationToMSUser = ENUM(name='notificationToMSUser', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'NotificationToMSUser')), opt=True)
    _ExternalClient_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ExternalClient._cont = ASN1Dict([
        ('clientIdentity', _ExternalClient_clientIdentity),
        ('gmlc-Restriction', _ExternalClient_gmlc_Restriction),
        ('notificationToMSUser', _ExternalClient_notificationToMSUser),
        ('extensionContainer', _ExternalClient_extensionContainer),
        ])
    ExternalClient._ext = []
    
    #-----< GMLC-Restriction >-----#
    GMLC_Restriction = ENUM(name='GMLC-Restriction', mode=MODE_TYPE)
    GMLC_Restriction._cont = ASN1Dict([('gmlc-List', 0), ('home-Country', 1)])
    GMLC_Restriction._ext = []
    
    #-----< NotificationToMSUser >-----#
    NotificationToMSUser = ENUM(name='NotificationToMSUser', mode=MODE_TYPE)
    NotificationToMSUser._cont = ASN1Dict([('notifyLocationAllowed', 0), ('notifyAndVerify-LocationAllowedIfNoResponse', 1), ('notifyAndVerify-LocationNotAllowedIfNoResponse', 2), ('locationNotAllowed', 3)])
    NotificationToMSUser._ext = ['locationNotAllowed']
    
    #-----< ServiceTypeList >-----#
    ServiceTypeList = SEQ_OF(name='ServiceTypeList', mode=MODE_TYPE)
    _ServiceTypeList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceType')))
    ServiceTypeList._cont = _ServiceTypeList__item_
    ServiceTypeList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< maxNumOfServiceType >-----#
    maxNumOfServiceType = INT(name='maxNumOfServiceType', mode=MODE_VALUE)
    maxNumOfServiceType._val = 32
    
    #-----< ServiceType >-----#
    ServiceType = SEQ(name='ServiceType', mode=MODE_TYPE)
    _ServiceType_serviceTypeIdentity = INT(name='serviceTypeIdentity', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    _ServiceType_gmlc_Restriction = ENUM(name='gmlc-Restriction', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GMLC-Restriction')), opt=True)
    _ServiceType_notificationToMSUser = ENUM(name='notificationToMSUser', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'NotificationToMSUser')), opt=True)
    _ServiceType_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ServiceType._cont = ASN1Dict([
        ('serviceTypeIdentity', _ServiceType_serviceTypeIdentity),
        ('gmlc-Restriction', _ServiceType_gmlc_Restriction),
        ('notificationToMSUser', _ServiceType_notificationToMSUser),
        ('extensionContainer', _ServiceType_extensionContainer),
        ])
    ServiceType._ext = []
    
    #-----< MOLR-List >-----#
    MOLR_List = SEQ_OF(name='MOLR-List', mode=MODE_TYPE)
    _MOLR_List__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'MOLR-Class')))
    MOLR_List._cont = _MOLR_List__item_
    MOLR_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< maxNumOfMOLR-Class >-----#
    maxNumOfMOLR_Class = INT(name='maxNumOfMOLR-Class', mode=MODE_VALUE)
    maxNumOfMOLR_Class._val = 3
    
    #-----< MOLR-Class >-----#
    MOLR_Class = SEQ(name='MOLR-Class', mode=MODE_TYPE)
    _MOLR_Class_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _MOLR_Class_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _MOLR_Class_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MOLR_Class._cont = ASN1Dict([
        ('ss-Code', _MOLR_Class_ss_Code),
        ('ss-Status', _MOLR_Class_ss_Status),
        ('extensionContainer', _MOLR_Class_extensionContainer),
        ])
    MOLR_Class._ext = []
    
    #-----< ZoneCodeList >-----#
    ZoneCodeList = SEQ_OF(name='ZoneCodeList', mode=MODE_TYPE)
    _ZoneCodeList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ZoneCode')))
    ZoneCodeList._cont = _ZoneCodeList__item_
    ZoneCodeList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< ZoneCode >-----#
    ZoneCode = OCT_STR(name='ZoneCode', mode=MODE_TYPE)
    ZoneCode._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< maxNumOfZoneCodes >-----#
    maxNumOfZoneCodes = INT(name='maxNumOfZoneCodes', mode=MODE_VALUE)
    maxNumOfZoneCodes._val = 10
    
    #-----< InsertSubscriberDataRes >-----#
    InsertSubscriberDataRes = SEQ(name='InsertSubscriberDataRes', mode=MODE_TYPE)
    _InsertSubscriberDataRes_teleserviceList = SEQ_OF(name='teleserviceList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TeleserviceList')), opt=True)
    _InsertSubscriberDataRes_bearerServiceList = SEQ_OF(name='bearerServiceList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BearerServiceList')), opt=True)
    _InsertSubscriberDataRes_ss_List = SEQ_OF(name='ss-List', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-List')), opt=True)
    _InsertSubscriberDataRes_odb_GeneralData = BIT_STR(name='odb-GeneralData', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-GeneralData')), opt=True)
    _InsertSubscriberDataRes_regionalSubscriptionResponse = ENUM(name='regionalSubscriptionResponse', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RegionalSubscriptionResponse')), opt=True)
    _InsertSubscriberDataRes_supportedCamelPhases = BIT_STR(name='supportedCamelPhases', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedCamelPhases')), opt=True)
    _InsertSubscriberDataRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _InsertSubscriberDataRes_offeredCamel4CSIs = BIT_STR(name='offeredCamel4CSIs', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'OfferedCamel4CSIs')), opt=True)
    _InsertSubscriberDataRes_supportedFeatures = BIT_STR(name='supportedFeatures', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedFeatures')), opt=True)
    _InsertSubscriberDataRes_ext_SupportedFeatures = BIT_STR(name='ext-SupportedFeatures', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-SupportedFeatures')), opt=True)
    InsertSubscriberDataRes._cont = ASN1Dict([
        ('teleserviceList', _InsertSubscriberDataRes_teleserviceList),
        ('bearerServiceList', _InsertSubscriberDataRes_bearerServiceList),
        ('ss-List', _InsertSubscriberDataRes_ss_List),
        ('odb-GeneralData', _InsertSubscriberDataRes_odb_GeneralData),
        ('regionalSubscriptionResponse', _InsertSubscriberDataRes_regionalSubscriptionResponse),
        ('supportedCamelPhases', _InsertSubscriberDataRes_supportedCamelPhases),
        ('extensionContainer', _InsertSubscriberDataRes_extensionContainer),
        ('offeredCamel4CSIs', _InsertSubscriberDataRes_offeredCamel4CSIs),
        ('supportedFeatures', _InsertSubscriberDataRes_supportedFeatures),
        ('ext-SupportedFeatures', _InsertSubscriberDataRes_ext_SupportedFeatures),
        ])
    InsertSubscriberDataRes._ext = ['offeredCamel4CSIs', 'supportedFeatures', 'ext-SupportedFeatures']
    
    #-----< RegionalSubscriptionResponse >-----#
    RegionalSubscriptionResponse = ENUM(name='RegionalSubscriptionResponse', mode=MODE_TYPE)
    RegionalSubscriptionResponse._cont = ASN1Dict([('networkNode-AreaRestricted', 0), ('tooManyZoneCodes', 1), ('zoneCodesConflict', 2), ('regionalSubscNotSupported', 3)])
    RegionalSubscriptionResponse._ext = None
    
    #-----< DeleteSubscriberDataArg >-----#
    DeleteSubscriberDataArg = SEQ(name='DeleteSubscriberDataArg', mode=MODE_TYPE)
    _DeleteSubscriberDataArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _DeleteSubscriberDataArg_basicServiceList = SEQ_OF(name='basicServiceList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BasicServiceList')), opt=True)
    _DeleteSubscriberDataArg_ss_List = SEQ_OF(name='ss-List', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-List')), opt=True)
    _DeleteSubscriberDataArg_roamingRestrictionDueToUnsupportedFeature = NULL(name='roamingRestrictionDueToUnsupportedFeature', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_regionalSubscriptionIdentifier = OCT_STR(name='regionalSubscriptionIdentifier', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ZoneCode')), opt=True)
    _DeleteSubscriberDataArg_vbsGroupIndication = NULL(name='vbsGroupIndication', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_vgcsGroupIndication = NULL(name='vgcsGroupIndication', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_camelSubscriptionInfoWithdraw = NULL(name='camelSubscriptionInfoWithdraw', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _DeleteSubscriberDataArg_gprsSubscriptionDataWithdraw = CHOICE(name='gprsSubscriptionDataWithdraw', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRSSubscriptionDataWithdraw')), opt=True)
    _DeleteSubscriberDataArg_roamingRestrictedInSgsnDueToUnsuppportedFeature = NULL(name='roamingRestrictedInSgsnDueToUnsuppportedFeature', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_lsaInformationWithdraw = CHOICE(name='lsaInformationWithdraw', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAInformationWithdraw')), opt=True)
    _DeleteSubscriberDataArg_gmlc_ListWithdraw = NULL(name='gmlc-ListWithdraw', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_istInformationWithdraw = NULL(name='istInformationWithdraw', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_specificCSI_Withdraw = BIT_STR(name='specificCSI-Withdraw', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SpecificCSI-Withdraw')), opt=True)
    _DeleteSubscriberDataArg_chargingCharacteristicsWithdraw = NULL(name='chargingCharacteristicsWithdraw', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_stn_srWithdraw = NULL(name='stn-srWithdraw', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_epsSubscriptionDataWithdraw = CHOICE(name='epsSubscriptionDataWithdraw', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EPS-SubscriptionDataWithdraw')), opt=True)
    _DeleteSubscriberDataArg_apn_oi_replacementWithdraw = NULL(name='apn-oi-replacementWithdraw', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_csg_SubscriptionDeleted = NULL(name='csg-SubscriptionDeleted', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_subscribedPeriodicTAU_RAU_TimerWithdraw = NULL(name='subscribedPeriodicTAU-RAU-TimerWithdraw', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_subscribedPeriodicLAU_TimerWithdraw = NULL(name='subscribedPeriodicLAU-TimerWithdraw', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_subscribed_vsrvccWithdraw = NULL(name='subscribed-vsrvccWithdraw', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_vplmn_Csg_SubscriptionDeleted = NULL(name='vplmn-Csg-SubscriptionDeleted', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_additionalMSISDN_Withdraw = NULL(name='additionalMSISDN-Withdraw', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_cs_to_ps_SRVCC_Withdraw = NULL(name='cs-to-ps-SRVCC-Withdraw', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_imsiGroupIdList_Withdraw = NULL(name='imsiGroupIdList-Withdraw', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_userPlaneIntegrityProtectionWithdraw = NULL(name='userPlaneIntegrityProtectionWithdraw', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_dl_Buffering_Suggested_Packet_Count_Withdraw = NULL(name='dl-Buffering-Suggested-Packet-Count-Withdraw', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_ue_UsageTypeWithdraw = NULL(name='ue-UsageTypeWithdraw', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_reset_idsWithdraw = NULL(name='reset-idsWithdraw', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_iab_OperationWithdraw = NULL(name='iab-OperationWithdraw', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    DeleteSubscriberDataArg._cont = ASN1Dict([
        ('imsi', _DeleteSubscriberDataArg_imsi),
        ('basicServiceList', _DeleteSubscriberDataArg_basicServiceList),
        ('ss-List', _DeleteSubscriberDataArg_ss_List),
        ('roamingRestrictionDueToUnsupportedFeature', _DeleteSubscriberDataArg_roamingRestrictionDueToUnsupportedFeature),
        ('regionalSubscriptionIdentifier', _DeleteSubscriberDataArg_regionalSubscriptionIdentifier),
        ('vbsGroupIndication', _DeleteSubscriberDataArg_vbsGroupIndication),
        ('vgcsGroupIndication', _DeleteSubscriberDataArg_vgcsGroupIndication),
        ('camelSubscriptionInfoWithdraw', _DeleteSubscriberDataArg_camelSubscriptionInfoWithdraw),
        ('extensionContainer', _DeleteSubscriberDataArg_extensionContainer),
        ('gprsSubscriptionDataWithdraw', _DeleteSubscriberDataArg_gprsSubscriptionDataWithdraw),
        ('roamingRestrictedInSgsnDueToUnsuppportedFeature', _DeleteSubscriberDataArg_roamingRestrictedInSgsnDueToUnsuppportedFeature),
        ('lsaInformationWithdraw', _DeleteSubscriberDataArg_lsaInformationWithdraw),
        ('gmlc-ListWithdraw', _DeleteSubscriberDataArg_gmlc_ListWithdraw),
        ('istInformationWithdraw', _DeleteSubscriberDataArg_istInformationWithdraw),
        ('specificCSI-Withdraw', _DeleteSubscriberDataArg_specificCSI_Withdraw),
        ('chargingCharacteristicsWithdraw', _DeleteSubscriberDataArg_chargingCharacteristicsWithdraw),
        ('stn-srWithdraw', _DeleteSubscriberDataArg_stn_srWithdraw),
        ('epsSubscriptionDataWithdraw', _DeleteSubscriberDataArg_epsSubscriptionDataWithdraw),
        ('apn-oi-replacementWithdraw', _DeleteSubscriberDataArg_apn_oi_replacementWithdraw),
        ('csg-SubscriptionDeleted', _DeleteSubscriberDataArg_csg_SubscriptionDeleted),
        ('subscribedPeriodicTAU-RAU-TimerWithdraw', _DeleteSubscriberDataArg_subscribedPeriodicTAU_RAU_TimerWithdraw),
        ('subscribedPeriodicLAU-TimerWithdraw', _DeleteSubscriberDataArg_subscribedPeriodicLAU_TimerWithdraw),
        ('subscribed-vsrvccWithdraw', _DeleteSubscriberDataArg_subscribed_vsrvccWithdraw),
        ('vplmn-Csg-SubscriptionDeleted', _DeleteSubscriberDataArg_vplmn_Csg_SubscriptionDeleted),
        ('additionalMSISDN-Withdraw', _DeleteSubscriberDataArg_additionalMSISDN_Withdraw),
        ('cs-to-ps-SRVCC-Withdraw', _DeleteSubscriberDataArg_cs_to_ps_SRVCC_Withdraw),
        ('imsiGroupIdList-Withdraw', _DeleteSubscriberDataArg_imsiGroupIdList_Withdraw),
        ('userPlaneIntegrityProtectionWithdraw', _DeleteSubscriberDataArg_userPlaneIntegrityProtectionWithdraw),
        ('dl-Buffering-Suggested-Packet-Count-Withdraw', _DeleteSubscriberDataArg_dl_Buffering_Suggested_Packet_Count_Withdraw),
        ('ue-UsageTypeWithdraw', _DeleteSubscriberDataArg_ue_UsageTypeWithdraw),
        ('reset-idsWithdraw', _DeleteSubscriberDataArg_reset_idsWithdraw),
        ('iab-OperationWithdraw', _DeleteSubscriberDataArg_iab_OperationWithdraw),
        ])
    DeleteSubscriberDataArg._ext = ['gprsSubscriptionDataWithdraw', 'roamingRestrictedInSgsnDueToUnsuppportedFeature', 'lsaInformationWithdraw', 'gmlc-ListWithdraw', 'istInformationWithdraw', 'specificCSI-Withdraw', 'chargingCharacteristicsWithdraw', 'stn-srWithdraw', 'epsSubscriptionDataWithdraw', 'apn-oi-replacementWithdraw', 'csg-SubscriptionDeleted', 'subscribedPeriodicTAU-RAU-TimerWithdraw', 'subscribedPeriodicLAU-TimerWithdraw', 'subscribed-vsrvccWithdraw', 'vplmn-Csg-SubscriptionDeleted', 'additionalMSISDN-Withdraw', 'cs-to-ps-SRVCC-Withdraw', 'imsiGroupIdList-Withdraw', 'userPlaneIntegrityProtectionWithdraw', 'dl-Buffering-Suggested-Packet-Count-Withdraw', 'ue-UsageTypeWithdraw', 'reset-idsWithdraw', 'iab-OperationWithdraw']
    
    #-----< SpecificCSI-Withdraw >-----#
    SpecificCSI_Withdraw = BIT_STR(name='SpecificCSI-Withdraw', mode=MODE_TYPE)
    SpecificCSI_Withdraw._cont = ASN1Dict([('o-csi', 0), ('ss-csi', 1), ('tif-csi', 2), ('d-csi', 3), ('vt-csi', 4), ('mo-sms-csi', 5), ('m-csi', 6), ('gprs-csi', 7), ('t-csi', 8), ('mt-sms-csi', 9), ('mg-csi', 10), ('o-IM-CSI', 11), ('d-IM-CSI', 12), ('vt-IM-CSI', 13)])
    SpecificCSI_Withdraw._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=8, ub=32)], ev=None, er=[])
    
    #-----< GPRSSubscriptionDataWithdraw >-----#
    GPRSSubscriptionDataWithdraw = CHOICE(name='GPRSSubscriptionDataWithdraw', mode=MODE_TYPE)
    _GPRSSubscriptionDataWithdraw_allGPRSData = NULL(name='allGPRSData', mode=MODE_TYPE)
    _GPRSSubscriptionDataWithdraw_contextIdList = SEQ_OF(name='contextIdList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ContextIdList')))
    GPRSSubscriptionDataWithdraw._cont = ASN1Dict([
        ('allGPRSData', _GPRSSubscriptionDataWithdraw_allGPRSData),
        ('contextIdList', _GPRSSubscriptionDataWithdraw_contextIdList),
        ])
    GPRSSubscriptionDataWithdraw._ext = None
    
    #-----< EPS-SubscriptionDataWithdraw >-----#
    EPS_SubscriptionDataWithdraw = CHOICE(name='EPS-SubscriptionDataWithdraw', mode=MODE_TYPE)
    _EPS_SubscriptionDataWithdraw_allEPS_Data = NULL(name='allEPS-Data', mode=MODE_TYPE)
    _EPS_SubscriptionDataWithdraw_contextIdList = SEQ_OF(name='contextIdList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ContextIdList')))
    EPS_SubscriptionDataWithdraw._cont = ASN1Dict([
        ('allEPS-Data', _EPS_SubscriptionDataWithdraw_allEPS_Data),
        ('contextIdList', _EPS_SubscriptionDataWithdraw_contextIdList),
        ])
    EPS_SubscriptionDataWithdraw._ext = None
    
    #-----< ContextIdList >-----#
    ContextIdList = SEQ_OF(name='ContextIdList', mode=MODE_TYPE)
    _ContextIdList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ContextId')))
    ContextIdList._cont = _ContextIdList__item_
    ContextIdList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< LSAInformationWithdraw >-----#
    LSAInformationWithdraw = CHOICE(name='LSAInformationWithdraw', mode=MODE_TYPE)
    _LSAInformationWithdraw_allLSAData = NULL(name='allLSAData', mode=MODE_TYPE)
    _LSAInformationWithdraw_lsaIdentityList = SEQ_OF(name='lsaIdentityList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAIdentityList')))
    LSAInformationWithdraw._cont = ASN1Dict([
        ('allLSAData', _LSAInformationWithdraw_allLSAData),
        ('lsaIdentityList', _LSAInformationWithdraw_lsaIdentityList),
        ])
    LSAInformationWithdraw._ext = None
    
    #-----< LSAIdentityList >-----#
    LSAIdentityList = SEQ_OF(name='LSAIdentityList', mode=MODE_TYPE)
    _LSAIdentityList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAIdentity')))
    LSAIdentityList._cont = _LSAIdentityList__item_
    LSAIdentityList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< BasicServiceList >-----#
    BasicServiceList = SEQ_OF(name='BasicServiceList', mode=MODE_TYPE)
    _BasicServiceList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')))
    BasicServiceList._cont = _BasicServiceList__item_
    BasicServiceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=70)], ev=None, er=[])
    
    #-----< maxNumOfBasicServices >-----#
    maxNumOfBasicServices = INT(name='maxNumOfBasicServices', mode=MODE_VALUE)
    maxNumOfBasicServices._val = 70
    
    #-----< DeleteSubscriberDataRes >-----#
    DeleteSubscriberDataRes = SEQ(name='DeleteSubscriberDataRes', mode=MODE_TYPE)
    _DeleteSubscriberDataRes_regionalSubscriptionResponse = ENUM(name='regionalSubscriptionResponse', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RegionalSubscriptionResponse')), opt=True)
    _DeleteSubscriberDataRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    DeleteSubscriberDataRes._cont = ASN1Dict([
        ('regionalSubscriptionResponse', _DeleteSubscriberDataRes_regionalSubscriptionResponse),
        ('extensionContainer', _DeleteSubscriberDataRes_extensionContainer),
        ])
    DeleteSubscriberDataRes._ext = []
    
    #-----< VlrCamelSubscriptionInfo >-----#
    VlrCamelSubscriptionInfo = SEQ(name='VlrCamelSubscriptionInfo', mode=MODE_TYPE)
    _VlrCamelSubscriptionInfo_o_CSI = SEQ(name='o-CSI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-CSI')), opt=True)
    _VlrCamelSubscriptionInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _VlrCamelSubscriptionInfo_ss_CSI = SEQ(name='ss-CSI', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SS-CSI')), opt=True)
    _VlrCamelSubscriptionInfo_o_BcsmCamelTDP_CriteriaList = SEQ_OF(name='o-BcsmCamelTDP-CriteriaList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-BcsmCamelTDPCriteriaList')), opt=True)
    _VlrCamelSubscriptionInfo_tif_CSI = NULL(name='tif-CSI', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VlrCamelSubscriptionInfo_m_CSI = SEQ(name='m-CSI', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'M-CSI')), opt=True)
    _VlrCamelSubscriptionInfo_mo_sms_CSI = SEQ(name='mo-sms-CSI', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-CSI')), opt=True)
    _VlrCamelSubscriptionInfo_vt_CSI = SEQ(name='vt-CSI', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-CSI')), opt=True)
    _VlrCamelSubscriptionInfo_t_BCSM_CAMEL_TDP_CriteriaList = SEQ_OF(name='t-BCSM-CAMEL-TDP-CriteriaList', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-BCSM-CAMEL-TDP-CriteriaList')), opt=True)
    _VlrCamelSubscriptionInfo_d_CSI = SEQ(name='d-CSI', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'D-CSI')), opt=True)
    _VlrCamelSubscriptionInfo_mt_sms_CSI = SEQ(name='mt-sms-CSI', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-CSI')), opt=True)
    _VlrCamelSubscriptionInfo_mt_smsCAMELTDP_CriteriaList = SEQ_OF(name='mt-smsCAMELTDP-CriteriaList', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MT-smsCAMELTDP-CriteriaList')), opt=True)
    VlrCamelSubscriptionInfo._cont = ASN1Dict([
        ('o-CSI', _VlrCamelSubscriptionInfo_o_CSI),
        ('extensionContainer', _VlrCamelSubscriptionInfo_extensionContainer),
        ('ss-CSI', _VlrCamelSubscriptionInfo_ss_CSI),
        ('o-BcsmCamelTDP-CriteriaList', _VlrCamelSubscriptionInfo_o_BcsmCamelTDP_CriteriaList),
        ('tif-CSI', _VlrCamelSubscriptionInfo_tif_CSI),
        ('m-CSI', _VlrCamelSubscriptionInfo_m_CSI),
        ('mo-sms-CSI', _VlrCamelSubscriptionInfo_mo_sms_CSI),
        ('vt-CSI', _VlrCamelSubscriptionInfo_vt_CSI),
        ('t-BCSM-CAMEL-TDP-CriteriaList', _VlrCamelSubscriptionInfo_t_BCSM_CAMEL_TDP_CriteriaList),
        ('d-CSI', _VlrCamelSubscriptionInfo_d_CSI),
        ('mt-sms-CSI', _VlrCamelSubscriptionInfo_mt_sms_CSI),
        ('mt-smsCAMELTDP-CriteriaList', _VlrCamelSubscriptionInfo_mt_smsCAMELTDP_CriteriaList),
        ])
    VlrCamelSubscriptionInfo._ext = ['ss-CSI', 'o-BcsmCamelTDP-CriteriaList', 'tif-CSI', 'm-CSI', 'mo-sms-CSI', 'vt-CSI', 't-BCSM-CAMEL-TDP-CriteriaList', 'd-CSI', 'mt-sms-CSI', 'mt-smsCAMELTDP-CriteriaList']
    
    #-----< MT-smsCAMELTDP-CriteriaList >-----#
    MT_smsCAMELTDP_CriteriaList = SEQ_OF(name='MT-smsCAMELTDP-CriteriaList', mode=MODE_TYPE)
    _MT_smsCAMELTDP_CriteriaList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'MT-smsCAMELTDP-Criteria')))
    MT_smsCAMELTDP_CriteriaList._cont = _MT_smsCAMELTDP_CriteriaList__item_
    MT_smsCAMELTDP_CriteriaList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< MT-smsCAMELTDP-Criteria >-----#
    MT_smsCAMELTDP_Criteria = SEQ(name='MT-smsCAMELTDP-Criteria', mode=MODE_TYPE)
    _MT_smsCAMELTDP_Criteria_sms_TriggerDetectionPoint = ENUM(name='sms-TriggerDetectionPoint', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-TriggerDetectionPoint')))
    _MT_smsCAMELTDP_Criteria_tpdu_TypeCriterion = SEQ_OF(name='tpdu-TypeCriterion', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TPDU-TypeCriterion')), opt=True)
    MT_smsCAMELTDP_Criteria._cont = ASN1Dict([
        ('sms-TriggerDetectionPoint', _MT_smsCAMELTDP_Criteria_sms_TriggerDetectionPoint),
        ('tpdu-TypeCriterion', _MT_smsCAMELTDP_Criteria_tpdu_TypeCriterion),
        ])
    MT_smsCAMELTDP_Criteria._ext = []
    
    #-----< TPDU-TypeCriterion >-----#
    TPDU_TypeCriterion = SEQ_OF(name='TPDU-TypeCriterion', mode=MODE_TYPE)
    _TPDU_TypeCriterion__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'MT-SMS-TPDU-Type')))
    TPDU_TypeCriterion._cont = _TPDU_TypeCriterion__item_
    TPDU_TypeCriterion._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< maxNumOfTPDUTypes >-----#
    maxNumOfTPDUTypes = INT(name='maxNumOfTPDUTypes', mode=MODE_VALUE)
    maxNumOfTPDUTypes._val = 5
    
    #-----< MT-SMS-TPDU-Type >-----#
    MT_SMS_TPDU_Type = ENUM(name='MT-SMS-TPDU-Type', mode=MODE_TYPE)
    MT_SMS_TPDU_Type._cont = ASN1Dict([('sms-DELIVER', 0), ('sms-SUBMIT-REPORT', 1), ('sms-STATUS-REPORT', 2)])
    MT_SMS_TPDU_Type._ext = []
    
    #-----< D-CSI >-----#
    D_CSI = SEQ(name='D-CSI', mode=MODE_TYPE)
    _D_CSI_dp_AnalysedInfoCriteriaList = SEQ_OF(name='dp-AnalysedInfoCriteriaList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DP-AnalysedInfoCriteriaList')), opt=True)
    _D_CSI_camelCapabilityHandling = INT(name='camelCapabilityHandling', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CamelCapabilityHandling')), opt=True)
    _D_CSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _D_CSI_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _D_CSI_csi_Active = NULL(name='csi-Active', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    D_CSI._cont = ASN1Dict([
        ('dp-AnalysedInfoCriteriaList', _D_CSI_dp_AnalysedInfoCriteriaList),
        ('camelCapabilityHandling', _D_CSI_camelCapabilityHandling),
        ('extensionContainer', _D_CSI_extensionContainer),
        ('notificationToCSE', _D_CSI_notificationToCSE),
        ('csi-Active', _D_CSI_csi_Active),
        ])
    D_CSI._ext = []
    
    #-----< DP-AnalysedInfoCriteriaList >-----#
    DP_AnalysedInfoCriteriaList = SEQ_OF(name='DP-AnalysedInfoCriteriaList', mode=MODE_TYPE)
    _DP_AnalysedInfoCriteriaList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'DP-AnalysedInfoCriterium')))
    DP_AnalysedInfoCriteriaList._cont = _DP_AnalysedInfoCriteriaList__item_
    DP_AnalysedInfoCriteriaList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< maxNumOfDP-AnalysedInfoCriteria >-----#
    maxNumOfDP_AnalysedInfoCriteria = INT(name='maxNumOfDP-AnalysedInfoCriteria', mode=MODE_VALUE)
    maxNumOfDP_AnalysedInfoCriteria._val = 10
    
    #-----< DP-AnalysedInfoCriterium >-----#
    DP_AnalysedInfoCriterium = SEQ(name='DP-AnalysedInfoCriterium', mode=MODE_TYPE)
    _DP_AnalysedInfoCriterium_dialledNumber = OCT_STR(name='dialledNumber', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _DP_AnalysedInfoCriterium_serviceKey = INT(name='serviceKey', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceKey')))
    _DP_AnalysedInfoCriterium_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _DP_AnalysedInfoCriterium_defaultCallHandling = ENUM(name='defaultCallHandling', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'DefaultCallHandling')))
    _DP_AnalysedInfoCriterium_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    DP_AnalysedInfoCriterium._cont = ASN1Dict([
        ('dialledNumber', _DP_AnalysedInfoCriterium_dialledNumber),
        ('serviceKey', _DP_AnalysedInfoCriterium_serviceKey),
        ('gsmSCF-Address', _DP_AnalysedInfoCriterium_gsmSCF_Address),
        ('defaultCallHandling', _DP_AnalysedInfoCriterium_defaultCallHandling),
        ('extensionContainer', _DP_AnalysedInfoCriterium_extensionContainer),
        ])
    DP_AnalysedInfoCriterium._ext = []
    
    #-----< SS-CSI >-----#
    SS_CSI = SEQ(name='SS-CSI', mode=MODE_TYPE)
    _SS_CSI_ss_CamelData = SEQ(name='ss-CamelData', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SS-CamelData')))
    _SS_CSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SS_CSI_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SS_CSI_csi_Active = NULL(name='csi-Active', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SS_CSI._cont = ASN1Dict([
        ('ss-CamelData', _SS_CSI_ss_CamelData),
        ('extensionContainer', _SS_CSI_extensionContainer),
        ('notificationToCSE', _SS_CSI_notificationToCSE),
        ('csi-Active', _SS_CSI_csi_Active),
        ])
    SS_CSI._ext = ['notificationToCSE', 'csi-Active']
    
    #-----< SS-CamelData >-----#
    SS_CamelData = SEQ(name='SS-CamelData', mode=MODE_TYPE)
    _SS_CamelData_ss_EventList = SEQ_OF(name='ss-EventList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SS-EventList')))
    _SS_CamelData_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _SS_CamelData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SS_CamelData._cont = ASN1Dict([
        ('ss-EventList', _SS_CamelData_ss_EventList),
        ('gsmSCF-Address', _SS_CamelData_gsmSCF_Address),
        ('extensionContainer', _SS_CamelData_extensionContainer),
        ])
    SS_CamelData._ext = []
    
    #-----< SS-EventList >-----#
    SS_EventList = SEQ_OF(name='SS-EventList', mode=MODE_TYPE)
    _SS_EventList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    SS_EventList._cont = _SS_EventList__item_
    SS_EventList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< maxNumOfCamelSSEvents >-----#
    maxNumOfCamelSSEvents = INT(name='maxNumOfCamelSSEvents', mode=MODE_VALUE)
    maxNumOfCamelSSEvents._val = 10
    
    #-----< O-CSI >-----#
    O_CSI = SEQ(name='O-CSI', mode=MODE_TYPE)
    _O_CSI_o_BcsmCamelTDPDataList = SEQ_OF(name='o-BcsmCamelTDPDataList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-BcsmCamelTDPDataList')))
    _O_CSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _O_CSI_camelCapabilityHandling = INT(name='camelCapabilityHandling', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CamelCapabilityHandling')), opt=True)
    _O_CSI_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _O_CSI_csiActive = NULL(name='csiActive', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    O_CSI._cont = ASN1Dict([
        ('o-BcsmCamelTDPDataList', _O_CSI_o_BcsmCamelTDPDataList),
        ('extensionContainer', _O_CSI_extensionContainer),
        ('camelCapabilityHandling', _O_CSI_camelCapabilityHandling),
        ('notificationToCSE', _O_CSI_notificationToCSE),
        ('csiActive', _O_CSI_csiActive),
        ])
    O_CSI._ext = ['camelCapabilityHandling', 'notificationToCSE', 'csiActive']
    
    #-----< O-BcsmCamelTDPDataList >-----#
    O_BcsmCamelTDPDataList = SEQ_OF(name='O-BcsmCamelTDPDataList', mode=MODE_TYPE)
    _O_BcsmCamelTDPDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-BcsmCamelTDPData')))
    O_BcsmCamelTDPDataList._cont = _O_BcsmCamelTDPDataList__item_
    O_BcsmCamelTDPDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< maxNumOfCamelTDPData >-----#
    maxNumOfCamelTDPData = INT(name='maxNumOfCamelTDPData', mode=MODE_VALUE)
    maxNumOfCamelTDPData._val = 10
    
    #-----< O-BcsmCamelTDPData >-----#
    O_BcsmCamelTDPData = SEQ(name='O-BcsmCamelTDPData', mode=MODE_TYPE)
    _O_BcsmCamelTDPData_o_BcsmTriggerDetectionPoint = ENUM(name='o-BcsmTriggerDetectionPoint', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-BcsmTriggerDetectionPoint')))
    _O_BcsmCamelTDPData_serviceKey = INT(name='serviceKey', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceKey')))
    _O_BcsmCamelTDPData_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _O_BcsmCamelTDPData_defaultCallHandling = ENUM(name='defaultCallHandling', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DefaultCallHandling')))
    _O_BcsmCamelTDPData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    O_BcsmCamelTDPData._cont = ASN1Dict([
        ('o-BcsmTriggerDetectionPoint', _O_BcsmCamelTDPData_o_BcsmTriggerDetectionPoint),
        ('serviceKey', _O_BcsmCamelTDPData_serviceKey),
        ('gsmSCF-Address', _O_BcsmCamelTDPData_gsmSCF_Address),
        ('defaultCallHandling', _O_BcsmCamelTDPData_defaultCallHandling),
        ('extensionContainer', _O_BcsmCamelTDPData_extensionContainer),
        ])
    O_BcsmCamelTDPData._ext = []
    
    #-----< ServiceKey >-----#
    ServiceKey = INT(name='ServiceKey', mode=MODE_TYPE)
    ServiceKey._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2147483647)], ev=None, er=[])
    
    #-----< O-BcsmTriggerDetectionPoint >-----#
    O_BcsmTriggerDetectionPoint = ENUM(name='O-BcsmTriggerDetectionPoint', mode=MODE_TYPE)
    O_BcsmTriggerDetectionPoint._cont = ASN1Dict([('collectedInfo', 2), ('routeSelectFailure', 4)])
    O_BcsmTriggerDetectionPoint._ext = ['routeSelectFailure']
    
    #-----< O-BcsmCamelTDPCriteriaList >-----#
    O_BcsmCamelTDPCriteriaList = SEQ_OF(name='O-BcsmCamelTDPCriteriaList', mode=MODE_TYPE)
    _O_BcsmCamelTDPCriteriaList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-BcsmCamelTDP-Criteria')))
    O_BcsmCamelTDPCriteriaList._cont = _O_BcsmCamelTDPCriteriaList__item_
    O_BcsmCamelTDPCriteriaList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< T-BCSM-CAMEL-TDP-CriteriaList >-----#
    T_BCSM_CAMEL_TDP_CriteriaList = SEQ_OF(name='T-BCSM-CAMEL-TDP-CriteriaList', mode=MODE_TYPE)
    _T_BCSM_CAMEL_TDP_CriteriaList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-BCSM-CAMEL-TDP-Criteria')))
    T_BCSM_CAMEL_TDP_CriteriaList._cont = _T_BCSM_CAMEL_TDP_CriteriaList__item_
    T_BCSM_CAMEL_TDP_CriteriaList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< O-BcsmCamelTDP-Criteria >-----#
    O_BcsmCamelTDP_Criteria = SEQ(name='O-BcsmCamelTDP-Criteria', mode=MODE_TYPE)
    _O_BcsmCamelTDP_Criteria_o_BcsmTriggerDetectionPoint = ENUM(name='o-BcsmTriggerDetectionPoint', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-BcsmTriggerDetectionPoint')))
    _O_BcsmCamelTDP_Criteria_destinationNumberCriteria = SEQ(name='destinationNumberCriteria', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DestinationNumberCriteria')), opt=True)
    _O_BcsmCamelTDP_Criteria_basicServiceCriteria = SEQ_OF(name='basicServiceCriteria', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BasicServiceCriteria')), opt=True)
    _O_BcsmCamelTDP_Criteria_callTypeCriteria = ENUM(name='callTypeCriteria', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CallTypeCriteria')), opt=True)
    _O_BcsmCamelTDP_Criteria_o_CauseValueCriteria = SEQ_OF(name='o-CauseValueCriteria', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-CauseValueCriteria')), opt=True)
    _O_BcsmCamelTDP_Criteria_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    O_BcsmCamelTDP_Criteria._cont = ASN1Dict([
        ('o-BcsmTriggerDetectionPoint', _O_BcsmCamelTDP_Criteria_o_BcsmTriggerDetectionPoint),
        ('destinationNumberCriteria', _O_BcsmCamelTDP_Criteria_destinationNumberCriteria),
        ('basicServiceCriteria', _O_BcsmCamelTDP_Criteria_basicServiceCriteria),
        ('callTypeCriteria', _O_BcsmCamelTDP_Criteria_callTypeCriteria),
        ('o-CauseValueCriteria', _O_BcsmCamelTDP_Criteria_o_CauseValueCriteria),
        ('extensionContainer', _O_BcsmCamelTDP_Criteria_extensionContainer),
        ])
    O_BcsmCamelTDP_Criteria._ext = ['o-CauseValueCriteria', 'extensionContainer']
    
    #-----< T-BCSM-CAMEL-TDP-Criteria >-----#
    T_BCSM_CAMEL_TDP_Criteria = SEQ(name='T-BCSM-CAMEL-TDP-Criteria', mode=MODE_TYPE)
    _T_BCSM_CAMEL_TDP_Criteria_t_BCSM_TriggerDetectionPoint = ENUM(name='t-BCSM-TriggerDetectionPoint', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-BcsmTriggerDetectionPoint')))
    _T_BCSM_CAMEL_TDP_Criteria_basicServiceCriteria = SEQ_OF(name='basicServiceCriteria', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BasicServiceCriteria')), opt=True)
    _T_BCSM_CAMEL_TDP_Criteria_t_CauseValueCriteria = SEQ_OF(name='t-CauseValueCriteria', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-CauseValueCriteria')), opt=True)
    T_BCSM_CAMEL_TDP_Criteria._cont = ASN1Dict([
        ('t-BCSM-TriggerDetectionPoint', _T_BCSM_CAMEL_TDP_Criteria_t_BCSM_TriggerDetectionPoint),
        ('basicServiceCriteria', _T_BCSM_CAMEL_TDP_Criteria_basicServiceCriteria),
        ('t-CauseValueCriteria', _T_BCSM_CAMEL_TDP_Criteria_t_CauseValueCriteria),
        ])
    T_BCSM_CAMEL_TDP_Criteria._ext = []
    
    #-----< DestinationNumberCriteria >-----#
    DestinationNumberCriteria = SEQ(name='DestinationNumberCriteria', mode=MODE_TYPE)
    _DestinationNumberCriteria_matchType = ENUM(name='matchType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MatchType')))
    _DestinationNumberCriteria_destinationNumberList = SEQ_OF(name='destinationNumberList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DestinationNumberList')), opt=True)
    _DestinationNumberCriteria_destinationNumberLengthList = SEQ_OF(name='destinationNumberLengthList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DestinationNumberLengthList')), opt=True)
    DestinationNumberCriteria._cont = ASN1Dict([
        ('matchType', _DestinationNumberCriteria_matchType),
        ('destinationNumberList', _DestinationNumberCriteria_destinationNumberList),
        ('destinationNumberLengthList', _DestinationNumberCriteria_destinationNumberLengthList),
        ])
    DestinationNumberCriteria._ext = []
    
    #-----< DestinationNumberList >-----#
    DestinationNumberList = SEQ_OF(name='DestinationNumberList', mode=MODE_TYPE)
    _DestinationNumberList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    DestinationNumberList._cont = _DestinationNumberList__item_
    DestinationNumberList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< DestinationNumberLengthList >-----#
    DestinationNumberLengthList = SEQ_OF(name='DestinationNumberLengthList', mode=MODE_TYPE)
    _DestinationNumberLengthList__item_ = INT(name='_item_', mode=MODE_TYPE)
    _DestinationNumberLengthList__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    DestinationNumberLengthList._cont = _DestinationNumberLengthList__item_
    DestinationNumberLengthList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< BasicServiceCriteria >-----#
    BasicServiceCriteria = SEQ_OF(name='BasicServiceCriteria', mode=MODE_TYPE)
    _BasicServiceCriteria__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')))
    BasicServiceCriteria._cont = _BasicServiceCriteria__item_
    BasicServiceCriteria._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< maxNumOfISDN-AddressDigits >-----#
    maxNumOfISDN_AddressDigits = INT(name='maxNumOfISDN-AddressDigits', mode=MODE_VALUE)
    maxNumOfISDN_AddressDigits._val = 15
    
    #-----< maxNumOfCamelDestinationNumbers >-----#
    maxNumOfCamelDestinationNumbers = INT(name='maxNumOfCamelDestinationNumbers', mode=MODE_VALUE)
    maxNumOfCamelDestinationNumbers._val = 10
    
    #-----< maxNumOfCamelDestinationNumberLengths >-----#
    maxNumOfCamelDestinationNumberLengths = INT(name='maxNumOfCamelDestinationNumberLengths', mode=MODE_VALUE)
    maxNumOfCamelDestinationNumberLengths._val = 3
    
    #-----< maxNumOfCamelBasicServiceCriteria >-----#
    maxNumOfCamelBasicServiceCriteria = INT(name='maxNumOfCamelBasicServiceCriteria', mode=MODE_VALUE)
    maxNumOfCamelBasicServiceCriteria._val = 5
    
    #-----< CallTypeCriteria >-----#
    CallTypeCriteria = ENUM(name='CallTypeCriteria', mode=MODE_TYPE)
    CallTypeCriteria._cont = ASN1Dict([('forwarded', 0), ('notForwarded', 1)])
    CallTypeCriteria._ext = None
    
    #-----< MatchType >-----#
    MatchType = ENUM(name='MatchType', mode=MODE_TYPE)
    MatchType._cont = ASN1Dict([('inhibiting', 0), ('enabling', 1)])
    MatchType._ext = None
    
    #-----< O-CauseValueCriteria >-----#
    O_CauseValueCriteria = SEQ_OF(name='O-CauseValueCriteria', mode=MODE_TYPE)
    _O_CauseValueCriteria__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CauseValue')))
    O_CauseValueCriteria._cont = _O_CauseValueCriteria__item_
    O_CauseValueCriteria._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< T-CauseValueCriteria >-----#
    T_CauseValueCriteria = SEQ_OF(name='T-CauseValueCriteria', mode=MODE_TYPE)
    _T_CauseValueCriteria__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CauseValue')))
    T_CauseValueCriteria._cont = _T_CauseValueCriteria__item_
    T_CauseValueCriteria._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< maxNumOfCAMEL-O-CauseValueCriteria >-----#
    maxNumOfCAMEL_O_CauseValueCriteria = INT(name='maxNumOfCAMEL-O-CauseValueCriteria', mode=MODE_VALUE)
    maxNumOfCAMEL_O_CauseValueCriteria._val = 5
    
    #-----< maxNumOfCAMEL-T-CauseValueCriteria >-----#
    maxNumOfCAMEL_T_CauseValueCriteria = INT(name='maxNumOfCAMEL-T-CauseValueCriteria', mode=MODE_VALUE)
    maxNumOfCAMEL_T_CauseValueCriteria._val = 5
    
    #-----< CauseValue >-----#
    CauseValue = OCT_STR(name='CauseValue', mode=MODE_TYPE)
    CauseValue._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< DefaultCallHandling >-----#
    DefaultCallHandling = ENUM(name='DefaultCallHandling', mode=MODE_TYPE)
    DefaultCallHandling._cont = ASN1Dict([('continueCall', 0), ('releaseCall', 1)])
    DefaultCallHandling._ext = []
    
    #-----< CamelCapabilityHandling >-----#
    CamelCapabilityHandling = INT(name='CamelCapabilityHandling', mode=MODE_TYPE)
    CamelCapabilityHandling._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< SupportedCamelPhases >-----#
    SupportedCamelPhases = BIT_STR(name='SupportedCamelPhases', mode=MODE_TYPE)
    SupportedCamelPhases._cont = ASN1Dict([('phase1', 0), ('phase2', 1), ('phase3', 2), ('phase4', 3)])
    SupportedCamelPhases._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< OfferedCamel4CSIs >-----#
    OfferedCamel4CSIs = BIT_STR(name='OfferedCamel4CSIs', mode=MODE_TYPE)
    OfferedCamel4CSIs._cont = ASN1Dict([('o-csi', 0), ('d-csi', 1), ('vt-csi', 2), ('t-csi', 3), ('mt-sms-csi', 4), ('mg-csi', 5), ('psi-enhancements', 6)])
    OfferedCamel4CSIs._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=7, ub=16)], ev=None, er=[])
    
    #-----< OfferedCamel4Functionalities >-----#
    OfferedCamel4Functionalities = BIT_STR(name='OfferedCamel4Functionalities', mode=MODE_TYPE)
    OfferedCamel4Functionalities._cont = ASN1Dict([('initiateCallAttempt', 0), ('splitLeg', 1), ('moveLeg', 2), ('disconnectLeg', 3), ('entityReleased', 4), ('dfc-WithArgument', 5), ('playTone', 6), ('dtmf-MidCall', 7), ('chargingIndicator', 8), ('alertingDP', 9), ('locationAtAlerting', 10), ('changeOfPositionDP', 11), ('or-Interactions', 12), ('warningToneEnhancements', 13), ('cf-Enhancements', 14), ('subscribedEnhancedDialledServices', 15), ('servingNetworkEnhancedDialledServices', 16), ('criteriaForChangeOfPositionDP', 17), ('serviceChangeDP', 18), ('collectInformation', 19)])
    OfferedCamel4Functionalities._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=15, ub=64)], ev=None, er=[])
    
    #-----< SMS-CSI >-----#
    SMS_CSI = SEQ(name='SMS-CSI', mode=MODE_TYPE)
    _SMS_CSI_sms_CAMEL_TDP_DataList = SEQ_OF(name='sms-CAMEL-TDP-DataList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-CAMEL-TDP-DataList')), opt=True)
    _SMS_CSI_camelCapabilityHandling = INT(name='camelCapabilityHandling', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CamelCapabilityHandling')), opt=True)
    _SMS_CSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SMS_CSI_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SMS_CSI_csi_Active = NULL(name='csi-Active', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SMS_CSI._cont = ASN1Dict([
        ('sms-CAMEL-TDP-DataList', _SMS_CSI_sms_CAMEL_TDP_DataList),
        ('camelCapabilityHandling', _SMS_CSI_camelCapabilityHandling),
        ('extensionContainer', _SMS_CSI_extensionContainer),
        ('notificationToCSE', _SMS_CSI_notificationToCSE),
        ('csi-Active', _SMS_CSI_csi_Active),
        ])
    SMS_CSI._ext = []
    
    #-----< SMS-CAMEL-TDP-DataList >-----#
    SMS_CAMEL_TDP_DataList = SEQ_OF(name='SMS-CAMEL-TDP-DataList', mode=MODE_TYPE)
    _SMS_CAMEL_TDP_DataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-CAMEL-TDP-Data')))
    SMS_CAMEL_TDP_DataList._cont = _SMS_CAMEL_TDP_DataList__item_
    SMS_CAMEL_TDP_DataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< SMS-CAMEL-TDP-Data >-----#
    SMS_CAMEL_TDP_Data = SEQ(name='SMS-CAMEL-TDP-Data', mode=MODE_TYPE)
    _SMS_CAMEL_TDP_Data_sms_TriggerDetectionPoint = ENUM(name='sms-TriggerDetectionPoint', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-TriggerDetectionPoint')))
    _SMS_CAMEL_TDP_Data_serviceKey = INT(name='serviceKey', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceKey')))
    _SMS_CAMEL_TDP_Data_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _SMS_CAMEL_TDP_Data_defaultSMS_Handling = ENUM(name='defaultSMS-Handling', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DefaultSMS-Handling')))
    _SMS_CAMEL_TDP_Data_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SMS_CAMEL_TDP_Data._cont = ASN1Dict([
        ('sms-TriggerDetectionPoint', _SMS_CAMEL_TDP_Data_sms_TriggerDetectionPoint),
        ('serviceKey', _SMS_CAMEL_TDP_Data_serviceKey),
        ('gsmSCF-Address', _SMS_CAMEL_TDP_Data_gsmSCF_Address),
        ('defaultSMS-Handling', _SMS_CAMEL_TDP_Data_defaultSMS_Handling),
        ('extensionContainer', _SMS_CAMEL_TDP_Data_extensionContainer),
        ])
    SMS_CAMEL_TDP_Data._ext = []
    
    #-----< SMS-TriggerDetectionPoint >-----#
    SMS_TriggerDetectionPoint = ENUM(name='SMS-TriggerDetectionPoint', mode=MODE_TYPE)
    SMS_TriggerDetectionPoint._cont = ASN1Dict([('sms-CollectedInfo', 1), ('sms-DeliveryRequest', 2)])
    SMS_TriggerDetectionPoint._ext = ['sms-DeliveryRequest']
    
    #-----< DefaultSMS-Handling >-----#
    DefaultSMS_Handling = ENUM(name='DefaultSMS-Handling', mode=MODE_TYPE)
    DefaultSMS_Handling._cont = ASN1Dict([('continueTransaction', 0), ('releaseTransaction', 1)])
    DefaultSMS_Handling._ext = []
    
    #-----< M-CSI >-----#
    M_CSI = SEQ(name='M-CSI', mode=MODE_TYPE)
    _M_CSI_mobilityTriggers = SEQ_OF(name='mobilityTriggers', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'MobilityTriggers')))
    _M_CSI_serviceKey = INT(name='serviceKey', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceKey')))
    _M_CSI_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _M_CSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _M_CSI_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _M_CSI_csi_Active = NULL(name='csi-Active', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    M_CSI._cont = ASN1Dict([
        ('mobilityTriggers', _M_CSI_mobilityTriggers),
        ('serviceKey', _M_CSI_serviceKey),
        ('gsmSCF-Address', _M_CSI_gsmSCF_Address),
        ('extensionContainer', _M_CSI_extensionContainer),
        ('notificationToCSE', _M_CSI_notificationToCSE),
        ('csi-Active', _M_CSI_csi_Active),
        ])
    M_CSI._ext = []
    
    #-----< MG-CSI >-----#
    MG_CSI = SEQ(name='MG-CSI', mode=MODE_TYPE)
    _MG_CSI_mobilityTriggers = SEQ_OF(name='mobilityTriggers', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'MobilityTriggers')))
    _MG_CSI_serviceKey = INT(name='serviceKey', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceKey')))
    _MG_CSI_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _MG_CSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _MG_CSI_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MG_CSI_csi_Active = NULL(name='csi-Active', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    MG_CSI._cont = ASN1Dict([
        ('mobilityTriggers', _MG_CSI_mobilityTriggers),
        ('serviceKey', _MG_CSI_serviceKey),
        ('gsmSCF-Address', _MG_CSI_gsmSCF_Address),
        ('extensionContainer', _MG_CSI_extensionContainer),
        ('notificationToCSE', _MG_CSI_notificationToCSE),
        ('csi-Active', _MG_CSI_csi_Active),
        ])
    MG_CSI._ext = []
    
    #-----< MobilityTriggers >-----#
    MobilityTriggers = SEQ_OF(name='MobilityTriggers', mode=MODE_TYPE)
    _MobilityTriggers__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'MM-Code')))
    MobilityTriggers._cont = _MobilityTriggers__item_
    MobilityTriggers._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< maxNumOfMobilityTriggers >-----#
    maxNumOfMobilityTriggers = INT(name='maxNumOfMobilityTriggers', mode=MODE_VALUE)
    maxNumOfMobilityTriggers._val = 10
    
    #-----< MM-Code >-----#
    MM_Code = OCT_STR(name='MM-Code', mode=MODE_TYPE)
    MM_Code._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< T-CSI >-----#
    T_CSI = SEQ(name='T-CSI', mode=MODE_TYPE)
    _T_CSI_t_BcsmCamelTDPDataList = SEQ_OF(name='t-BcsmCamelTDPDataList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-BcsmCamelTDPDataList')))
    _T_CSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _T_CSI_camelCapabilityHandling = INT(name='camelCapabilityHandling', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CamelCapabilityHandling')), opt=True)
    _T_CSI_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _T_CSI_csi_Active = NULL(name='csi-Active', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    T_CSI._cont = ASN1Dict([
        ('t-BcsmCamelTDPDataList', _T_CSI_t_BcsmCamelTDPDataList),
        ('extensionContainer', _T_CSI_extensionContainer),
        ('camelCapabilityHandling', _T_CSI_camelCapabilityHandling),
        ('notificationToCSE', _T_CSI_notificationToCSE),
        ('csi-Active', _T_CSI_csi_Active),
        ])
    T_CSI._ext = ['camelCapabilityHandling', 'notificationToCSE', 'csi-Active']
    
    #-----< T-BcsmCamelTDPDataList >-----#
    T_BcsmCamelTDPDataList = SEQ_OF(name='T-BcsmCamelTDPDataList', mode=MODE_TYPE)
    _T_BcsmCamelTDPDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-BcsmCamelTDPData')))
    T_BcsmCamelTDPDataList._cont = _T_BcsmCamelTDPDataList__item_
    T_BcsmCamelTDPDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< T-BcsmCamelTDPData >-----#
    T_BcsmCamelTDPData = SEQ(name='T-BcsmCamelTDPData', mode=MODE_TYPE)
    _T_BcsmCamelTDPData_t_BcsmTriggerDetectionPoint = ENUM(name='t-BcsmTriggerDetectionPoint', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-BcsmTriggerDetectionPoint')))
    _T_BcsmCamelTDPData_serviceKey = INT(name='serviceKey', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceKey')))
    _T_BcsmCamelTDPData_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _T_BcsmCamelTDPData_defaultCallHandling = ENUM(name='defaultCallHandling', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DefaultCallHandling')))
    _T_BcsmCamelTDPData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    T_BcsmCamelTDPData._cont = ASN1Dict([
        ('t-BcsmTriggerDetectionPoint', _T_BcsmCamelTDPData_t_BcsmTriggerDetectionPoint),
        ('serviceKey', _T_BcsmCamelTDPData_serviceKey),
        ('gsmSCF-Address', _T_BcsmCamelTDPData_gsmSCF_Address),
        ('defaultCallHandling', _T_BcsmCamelTDPData_defaultCallHandling),
        ('extensionContainer', _T_BcsmCamelTDPData_extensionContainer),
        ])
    T_BcsmCamelTDPData._ext = []
    
    #-----< T-BcsmTriggerDetectionPoint >-----#
    T_BcsmTriggerDetectionPoint = ENUM(name='T-BcsmTriggerDetectionPoint', mode=MODE_TYPE)
    T_BcsmTriggerDetectionPoint._cont = ASN1Dict([('termAttemptAuthorized', 12), ('tBusy', 13), ('tNoAnswer', 14)])
    T_BcsmTriggerDetectionPoint._ext = ['tBusy', 'tNoAnswer']
    
    #-----< SendRoutingInfoForGprsArg >-----#
    SendRoutingInfoForGprsArg = SEQ(name='SendRoutingInfoForGprsArg', mode=MODE_TYPE)
    _SendRoutingInfoForGprsArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _SendRoutingInfoForGprsArg_ggsn_Address = OCT_STR(name='ggsn-Address', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _SendRoutingInfoForGprsArg_ggsn_Number = OCT_STR(name='ggsn-Number', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _SendRoutingInfoForGprsArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SendRoutingInfoForGprsArg._cont = ASN1Dict([
        ('imsi', _SendRoutingInfoForGprsArg_imsi),
        ('ggsn-Address', _SendRoutingInfoForGprsArg_ggsn_Address),
        ('ggsn-Number', _SendRoutingInfoForGprsArg_ggsn_Number),
        ('extensionContainer', _SendRoutingInfoForGprsArg_extensionContainer),
        ])
    SendRoutingInfoForGprsArg._ext = []
    
    #-----< SendRoutingInfoForGprsRes >-----#
    SendRoutingInfoForGprsRes = SEQ(name='SendRoutingInfoForGprsRes', mode=MODE_TYPE)
    _SendRoutingInfoForGprsRes_sgsn_Address = OCT_STR(name='sgsn-Address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')))
    _SendRoutingInfoForGprsRes_ggsn_Address = OCT_STR(name='ggsn-Address', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _SendRoutingInfoForGprsRes_mobileNotReachableReason = INT(name='mobileNotReachableReason', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    _SendRoutingInfoForGprsRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SendRoutingInfoForGprsRes._cont = ASN1Dict([
        ('sgsn-Address', _SendRoutingInfoForGprsRes_sgsn_Address),
        ('ggsn-Address', _SendRoutingInfoForGprsRes_ggsn_Address),
        ('mobileNotReachableReason', _SendRoutingInfoForGprsRes_mobileNotReachableReason),
        ('extensionContainer', _SendRoutingInfoForGprsRes_extensionContainer),
        ])
    SendRoutingInfoForGprsRes._ext = []
    
    #-----< FailureReportArg >-----#
    FailureReportArg = SEQ(name='FailureReportArg', mode=MODE_TYPE)
    _FailureReportArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _FailureReportArg_ggsn_Number = OCT_STR(name='ggsn-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _FailureReportArg_ggsn_Address = OCT_STR(name='ggsn-Address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _FailureReportArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    FailureReportArg._cont = ASN1Dict([
        ('imsi', _FailureReportArg_imsi),
        ('ggsn-Number', _FailureReportArg_ggsn_Number),
        ('ggsn-Address', _FailureReportArg_ggsn_Address),
        ('extensionContainer', _FailureReportArg_extensionContainer),
        ])
    FailureReportArg._ext = []
    
    #-----< FailureReportRes >-----#
    FailureReportRes = SEQ(name='FailureReportRes', mode=MODE_TYPE)
    _FailureReportRes_ggsn_Address = OCT_STR(name='ggsn-Address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _FailureReportRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    FailureReportRes._cont = ASN1Dict([
        ('ggsn-Address', _FailureReportRes_ggsn_Address),
        ('extensionContainer', _FailureReportRes_extensionContainer),
        ])
    FailureReportRes._ext = []
    
    #-----< NoteMsPresentForGprsArg >-----#
    NoteMsPresentForGprsArg = SEQ(name='NoteMsPresentForGprsArg', mode=MODE_TYPE)
    _NoteMsPresentForGprsArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _NoteMsPresentForGprsArg_sgsn_Address = OCT_STR(name='sgsn-Address', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')))
    _NoteMsPresentForGprsArg_ggsn_Address = OCT_STR(name='ggsn-Address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _NoteMsPresentForGprsArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    NoteMsPresentForGprsArg._cont = ASN1Dict([
        ('imsi', _NoteMsPresentForGprsArg_imsi),
        ('sgsn-Address', _NoteMsPresentForGprsArg_sgsn_Address),
        ('ggsn-Address', _NoteMsPresentForGprsArg_ggsn_Address),
        ('extensionContainer', _NoteMsPresentForGprsArg_extensionContainer),
        ])
    NoteMsPresentForGprsArg._ext = []
    
    #-----< NoteMsPresentForGprsRes >-----#
    NoteMsPresentForGprsRes = SEQ(name='NoteMsPresentForGprsRes', mode=MODE_TYPE)
    _NoteMsPresentForGprsRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    NoteMsPresentForGprsRes._cont = ASN1Dict([
        ('extensionContainer', _NoteMsPresentForGprsRes_extensionContainer),
        ])
    NoteMsPresentForGprsRes._ext = []
    
    #-----< ResetArg >-----#
    ResetArg = SEQ(name='ResetArg', mode=MODE_TYPE)
    _ResetArg_sendingNodenumber = CHOICE(name='sendingNodenumber', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendingNode-Number')))
    _ResetArg_hlr_List = SEQ_OF(name='hlr-List', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'HLR-List')), opt=True)
    _ResetArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ResetArg_reset_Id_List = SEQ_OF(name='reset-Id-List', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Reset-Id-List')), opt=True)
    _ResetArg_subscriptionData = SEQ(name='subscriptionData', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'InsertSubscriberDataArg')), opt=True)
    _ResetArg_subscriptionDataDeletion = SEQ(name='subscriptionDataDeletion', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DeleteSubscriberDataArg')), opt=True)
    ResetArg._cont = ASN1Dict([
        ('sendingNodenumber', _ResetArg_sendingNodenumber),
        ('hlr-List', _ResetArg_hlr_List),
        ('extensionContainer', _ResetArg_extensionContainer),
        ('reset-Id-List', _ResetArg_reset_Id_List),
        ('subscriptionData', _ResetArg_subscriptionData),
        ('subscriptionDataDeletion', _ResetArg_subscriptionDataDeletion),
        ])
    ResetArg._ext = ['reset-Id-List', 'subscriptionData', 'subscriptionDataDeletion']
    
    #-----< SendingNode-Number >-----#
    SendingNode_Number = CHOICE(name='SendingNode-Number', mode=MODE_TYPE)
    _SendingNode_Number_hlr_Number = OCT_STR(name='hlr-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _SendingNode_Number_css_Number = OCT_STR(name='css-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    SendingNode_Number._cont = ASN1Dict([
        ('hlr-Number', _SendingNode_Number_hlr_Number),
        ('css-Number', _SendingNode_Number_css_Number),
        ])
    SendingNode_Number._ext = None
    
    #-----< RestoreDataArg >-----#
    RestoreDataArg = SEQ(name='RestoreDataArg', mode=MODE_TYPE)
    _RestoreDataArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _RestoreDataArg_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')), opt=True)
    _RestoreDataArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _RestoreDataArg_vlr_Capability = SEQ(name='vlr-Capability', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'VLR-Capability')), opt=True)
    _RestoreDataArg_restorationIndicator = NULL(name='restorationIndicator', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    RestoreDataArg._cont = ASN1Dict([
        ('imsi', _RestoreDataArg_imsi),
        ('lmsi', _RestoreDataArg_lmsi),
        ('extensionContainer', _RestoreDataArg_extensionContainer),
        ('vlr-Capability', _RestoreDataArg_vlr_Capability),
        ('restorationIndicator', _RestoreDataArg_restorationIndicator),
        ])
    RestoreDataArg._ext = ['vlr-Capability', 'restorationIndicator']
    
    #-----< RestoreDataRes >-----#
    RestoreDataRes = SEQ(name='RestoreDataRes', mode=MODE_TYPE)
    _RestoreDataRes_hlr_Number = OCT_STR(name='hlr-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _RestoreDataRes_msNotReachable = NULL(name='msNotReachable', mode=MODE_TYPE, opt=True)
    _RestoreDataRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    RestoreDataRes._cont = ASN1Dict([
        ('hlr-Number', _RestoreDataRes_hlr_Number),
        ('msNotReachable', _RestoreDataRes_msNotReachable),
        ('extensionContainer', _RestoreDataRes_extensionContainer),
        ])
    RestoreDataRes._ext = []
    
    #-----< VBSDataList >-----#
    VBSDataList = SEQ_OF(name='VBSDataList', mode=MODE_TYPE)
    _VBSDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'VoiceBroadcastData')))
    VBSDataList._cont = _VBSDataList__item_
    VBSDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< VGCSDataList >-----#
    VGCSDataList = SEQ_OF(name='VGCSDataList', mode=MODE_TYPE)
    _VGCSDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'VoiceGroupCallData')))
    VGCSDataList._cont = _VGCSDataList__item_
    VGCSDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< maxNumOfVBSGroupIds >-----#
    maxNumOfVBSGroupIds = INT(name='maxNumOfVBSGroupIds', mode=MODE_VALUE)
    maxNumOfVBSGroupIds._val = 50
    
    #-----< maxNumOfVGCSGroupIds >-----#
    maxNumOfVGCSGroupIds = INT(name='maxNumOfVGCSGroupIds', mode=MODE_VALUE)
    maxNumOfVGCSGroupIds._val = 50
    
    #-----< VoiceGroupCallData >-----#
    VoiceGroupCallData = SEQ(name='VoiceGroupCallData', mode=MODE_TYPE)
    _VoiceGroupCallData_groupId = OCT_STR(name='groupId', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'GroupId')))
    _VoiceGroupCallData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _VoiceGroupCallData_additionalSubscriptions = BIT_STR(name='additionalSubscriptions', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdditionalSubscriptions')), opt=True)
    _VoiceGroupCallData_additionalInfo = BIT_STR(name='additionalInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdditionalInfo')), opt=True)
    _VoiceGroupCallData_longGroupId = OCT_STR(name='longGroupId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Long-GroupId')), opt=True)
    VoiceGroupCallData._cont = ASN1Dict([
        ('groupId', _VoiceGroupCallData_groupId),
        ('extensionContainer', _VoiceGroupCallData_extensionContainer),
        ('additionalSubscriptions', _VoiceGroupCallData_additionalSubscriptions),
        ('additionalInfo', _VoiceGroupCallData_additionalInfo),
        ('longGroupId', _VoiceGroupCallData_longGroupId),
        ])
    VoiceGroupCallData._ext = ['additionalSubscriptions', 'additionalInfo', 'longGroupId']
    
    #-----< AdditionalInfo >-----#
    AdditionalInfo = BIT_STR(name='AdditionalInfo', mode=MODE_TYPE)
    AdditionalInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=136)], ev=None, er=[])
    
    #-----< AdditionalSubscriptions >-----#
    AdditionalSubscriptions = BIT_STR(name='AdditionalSubscriptions', mode=MODE_TYPE)
    AdditionalSubscriptions._cont = ASN1Dict([('privilegedUplinkRequest', 0), ('emergencyUplinkRequest', 1), ('emergencyReset', 2)])
    AdditionalSubscriptions._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    
    #-----< VoiceBroadcastData >-----#
    VoiceBroadcastData = SEQ(name='VoiceBroadcastData', mode=MODE_TYPE)
    _VoiceBroadcastData_groupid = OCT_STR(name='groupid', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'GroupId')))
    _VoiceBroadcastData_broadcastInitEntitlement = NULL(name='broadcastInitEntitlement', mode=MODE_TYPE, opt=True)
    _VoiceBroadcastData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _VoiceBroadcastData_longGroupId = OCT_STR(name='longGroupId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Long-GroupId')), opt=True)
    VoiceBroadcastData._cont = ASN1Dict([
        ('groupid', _VoiceBroadcastData_groupid),
        ('broadcastInitEntitlement', _VoiceBroadcastData_broadcastInitEntitlement),
        ('extensionContainer', _VoiceBroadcastData_extensionContainer),
        ('longGroupId', _VoiceBroadcastData_longGroupId),
        ])
    VoiceBroadcastData._ext = ['longGroupId']
    
    #-----< GroupId >-----#
    GroupId = OCT_STR(name='GroupId', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'TBCD-STRING')))
    GroupId._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< Long-GroupId >-----#
    Long_GroupId = OCT_STR(name='Long-GroupId', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'TBCD-STRING')))
    Long_GroupId._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< ProvideSubscriberInfoArg >-----#
    ProvideSubscriberInfoArg = SEQ(name='ProvideSubscriberInfoArg', mode=MODE_TYPE)
    _ProvideSubscriberInfoArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _ProvideSubscriberInfoArg_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')), opt=True)
    _ProvideSubscriberInfoArg_requestedInfo = SEQ(name='requestedInfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RequestedInfo')))
    _ProvideSubscriberInfoArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ProvideSubscriberInfoArg_callPriority = INT(name='callPriority', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')), opt=True)
    ProvideSubscriberInfoArg._cont = ASN1Dict([
        ('imsi', _ProvideSubscriberInfoArg_imsi),
        ('lmsi', _ProvideSubscriberInfoArg_lmsi),
        ('requestedInfo', _ProvideSubscriberInfoArg_requestedInfo),
        ('extensionContainer', _ProvideSubscriberInfoArg_extensionContainer),
        ('callPriority', _ProvideSubscriberInfoArg_callPriority),
        ])
    ProvideSubscriberInfoArg._ext = ['callPriority']
    
    #-----< ProvideSubscriberInfoRes >-----#
    ProvideSubscriberInfoRes = SEQ(name='ProvideSubscriberInfoRes', mode=MODE_TYPE)
    _ProvideSubscriberInfoRes_subscriberInfo = SEQ(name='subscriberInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SubscriberInfo')))
    _ProvideSubscriberInfoRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ProvideSubscriberInfoRes._cont = ASN1Dict([
        ('subscriberInfo', _ProvideSubscriberInfoRes_subscriberInfo),
        ('extensionContainer', _ProvideSubscriberInfoRes_extensionContainer),
        ])
    ProvideSubscriberInfoRes._ext = []
    
    #-----< SubscriberInfo >-----#
    SubscriberInfo = SEQ(name='SubscriberInfo', mode=MODE_TYPE)
    _SubscriberInfo_locationInformation = SEQ(name='locationInformation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationInformation')), opt=True)
    _SubscriberInfo_subscriberState = CHOICE(name='subscriberState', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SubscriberState')), opt=True)
    _SubscriberInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SubscriberInfo_locationInformationGPRS = SEQ(name='locationInformationGPRS', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationInformationGPRS')), opt=True)
    _SubscriberInfo_ps_SubscriberState = CHOICE(name='ps-SubscriberState', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PS-SubscriberState')), opt=True)
    _SubscriberInfo_imei = OCT_STR(name='imei', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMEI')), opt=True)
    _SubscriberInfo_ms_Classmark2 = OCT_STR(name='ms-Classmark2', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MS-Classmark2')), opt=True)
    _SubscriberInfo_gprs_MS_Class = SEQ(name='gprs-MS-Class', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRSMSClass')), opt=True)
    _SubscriberInfo_mnpInfoRes = SEQ(name='mnpInfoRes', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MNPInfoRes')), opt=True)
    _SubscriberInfo_imsVoiceOverPS_SessionsIndication = ENUM(name='imsVoiceOverPS-SessionsIndication', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'IMS-VoiceOverPS-SessionsInd')), opt=True)
    _SubscriberInfo_lastUE_ActivityTime = OCT_STR(name='lastUE-ActivityTime', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Time')), opt=True)
    _SubscriberInfo_lastRAT_Type = ENUM(name='lastRAT-Type', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Used-RAT-Type')), opt=True)
    _SubscriberInfo_eps_SubscriberState = CHOICE(name='eps-SubscriberState', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PS-SubscriberState')), opt=True)
    _SubscriberInfo_locationInformationEPS = SEQ(name='locationInformationEPS', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationInformationEPS')), opt=True)
    _SubscriberInfo_timeZone = OCT_STR(name='timeZone', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TimeZone')), opt=True)
    _SubscriberInfo_daylightSavingTime = ENUM(name='daylightSavingTime', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DaylightSavingTime')), opt=True)
    _SubscriberInfo_locationInformation5GS = SEQ(name='locationInformation5GS', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationInformation5GS')), opt=True)
    SubscriberInfo._cont = ASN1Dict([
        ('locationInformation', _SubscriberInfo_locationInformation),
        ('subscriberState', _SubscriberInfo_subscriberState),
        ('extensionContainer', _SubscriberInfo_extensionContainer),
        ('locationInformationGPRS', _SubscriberInfo_locationInformationGPRS),
        ('ps-SubscriberState', _SubscriberInfo_ps_SubscriberState),
        ('imei', _SubscriberInfo_imei),
        ('ms-Classmark2', _SubscriberInfo_ms_Classmark2),
        ('gprs-MS-Class', _SubscriberInfo_gprs_MS_Class),
        ('mnpInfoRes', _SubscriberInfo_mnpInfoRes),
        ('imsVoiceOverPS-SessionsIndication', _SubscriberInfo_imsVoiceOverPS_SessionsIndication),
        ('lastUE-ActivityTime', _SubscriberInfo_lastUE_ActivityTime),
        ('lastRAT-Type', _SubscriberInfo_lastRAT_Type),
        ('eps-SubscriberState', _SubscriberInfo_eps_SubscriberState),
        ('locationInformationEPS', _SubscriberInfo_locationInformationEPS),
        ('timeZone', _SubscriberInfo_timeZone),
        ('daylightSavingTime', _SubscriberInfo_daylightSavingTime),
        ('locationInformation5GS', _SubscriberInfo_locationInformation5GS),
        ])
    SubscriberInfo._ext = ['locationInformationGPRS', 'ps-SubscriberState', 'imei', 'ms-Classmark2', 'gprs-MS-Class', 'mnpInfoRes', 'imsVoiceOverPS-SessionsIndication', 'lastUE-ActivityTime', 'lastRAT-Type', 'eps-SubscriberState', 'locationInformationEPS', 'timeZone', 'daylightSavingTime', 'locationInformation5GS']
    
    #-----< IMS-VoiceOverPS-SessionsInd >-----#
    IMS_VoiceOverPS_SessionsInd = ENUM(name='IMS-VoiceOverPS-SessionsInd', mode=MODE_TYPE)
    IMS_VoiceOverPS_SessionsInd._cont = ASN1Dict([('imsVoiceOverPS-SessionsNotSupported', 0), ('imsVoiceOverPS-SessionsSupported', 1), ('unknown', 2)])
    IMS_VoiceOverPS_SessionsInd._ext = None
    
    #-----< TimeZone >-----#
    TimeZone = OCT_STR(name='TimeZone', mode=MODE_TYPE)
    TimeZone._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=3)], ev=None, er=[])
    
    #-----< DaylightSavingTime >-----#
    DaylightSavingTime = ENUM(name='DaylightSavingTime', mode=MODE_TYPE)
    DaylightSavingTime._cont = ASN1Dict([('noAdjustment', 0), ('plusOneHourAdjustment', 1), ('plusTwoHoursAdjustment', 2)])
    DaylightSavingTime._ext = None
    
    #-----< MNPInfoRes >-----#
    MNPInfoRes = SEQ(name='MNPInfoRes', mode=MODE_TYPE)
    _MNPInfoRes_routeingNumber = OCT_STR(name='routeingNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RouteingNumber')), opt=True)
    _MNPInfoRes_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _MNPInfoRes_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _MNPInfoRes_numberPortabilityStatus = ENUM(name='numberPortabilityStatus', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'NumberPortabilityStatus')), opt=True)
    _MNPInfoRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MNPInfoRes._cont = ASN1Dict([
        ('routeingNumber', _MNPInfoRes_routeingNumber),
        ('imsi', _MNPInfoRes_imsi),
        ('msisdn', _MNPInfoRes_msisdn),
        ('numberPortabilityStatus', _MNPInfoRes_numberPortabilityStatus),
        ('extensionContainer', _MNPInfoRes_extensionContainer),
        ])
    MNPInfoRes._ext = []
    
    #-----< RouteingNumber >-----#
    RouteingNumber = OCT_STR(name='RouteingNumber', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'TBCD-STRING')))
    RouteingNumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< NumberPortabilityStatus >-----#
    NumberPortabilityStatus = ENUM(name='NumberPortabilityStatus', mode=MODE_TYPE)
    NumberPortabilityStatus._cont = ASN1Dict([('notKnownToBePorted', 0), ('ownNumberPortedOut', 1), ('foreignNumberPortedToForeignNetwork', 2), ('ownNumberNotPortedOut', 4), ('foreignNumberPortedIn', 5)])
    NumberPortabilityStatus._ext = ['ownNumberNotPortedOut', 'foreignNumberPortedIn']
    
    #-----< MS-Classmark2 >-----#
    MS_Classmark2 = OCT_STR(name='MS-Classmark2', mode=MODE_TYPE)
    MS_Classmark2._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< GPRSMSClass >-----#
    GPRSMSClass = SEQ(name='GPRSMSClass', mode=MODE_TYPE)
    _GPRSMSClass_mSNetworkCapability = OCT_STR(name='mSNetworkCapability', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MSNetworkCapability')))
    _GPRSMSClass_mSRadioAccessCapability = OCT_STR(name='mSRadioAccessCapability', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MSRadioAccessCapability')), opt=True)
    GPRSMSClass._cont = ASN1Dict([
        ('mSNetworkCapability', _GPRSMSClass_mSNetworkCapability),
        ('mSRadioAccessCapability', _GPRSMSClass_mSRadioAccessCapability),
        ])
    GPRSMSClass._ext = None
    
    #-----< MSNetworkCapability >-----#
    MSNetworkCapability = OCT_STR(name='MSNetworkCapability', mode=MODE_TYPE)
    MSNetworkCapability._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< MSRadioAccessCapability >-----#
    MSRadioAccessCapability = OCT_STR(name='MSRadioAccessCapability', mode=MODE_TYPE)
    MSRadioAccessCapability._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< RequestedInfo >-----#
    RequestedInfo = SEQ(name='RequestedInfo', mode=MODE_TYPE)
    _RequestedInfo_locationInformation = NULL(name='locationInformation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedInfo_subscriberState = NULL(name='subscriberState', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _RequestedInfo_currentLocation = NULL(name='currentLocation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedInfo_requestedDomain = ENUM(name='requestedDomain', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DomainType')), opt=True)
    _RequestedInfo_imei = NULL(name='imei', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedInfo_ms_classmark = NULL(name='ms-classmark', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedInfo_mnpRequestedInfo = NULL(name='mnpRequestedInfo', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedInfo_locationInformationEPS_Supported = NULL(name='locationInformationEPS-Supported', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedInfo_t_adsData = NULL(name='t-adsData', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedInfo_requestedNodes = BIT_STR(name='requestedNodes', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RequestedNodes')), opt=True)
    _RequestedInfo_servingNodeIndication = NULL(name='servingNodeIndication', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedInfo_localTimeZoneRequest = NULL(name='localTimeZoneRequest', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    RequestedInfo._cont = ASN1Dict([
        ('locationInformation', _RequestedInfo_locationInformation),
        ('subscriberState', _RequestedInfo_subscriberState),
        ('extensionContainer', _RequestedInfo_extensionContainer),
        ('currentLocation', _RequestedInfo_currentLocation),
        ('requestedDomain', _RequestedInfo_requestedDomain),
        ('imei', _RequestedInfo_imei),
        ('ms-classmark', _RequestedInfo_ms_classmark),
        ('mnpRequestedInfo', _RequestedInfo_mnpRequestedInfo),
        ('locationInformationEPS-Supported', _RequestedInfo_locationInformationEPS_Supported),
        ('t-adsData', _RequestedInfo_t_adsData),
        ('requestedNodes', _RequestedInfo_requestedNodes),
        ('servingNodeIndication', _RequestedInfo_servingNodeIndication),
        ('localTimeZoneRequest', _RequestedInfo_localTimeZoneRequest),
        ])
    RequestedInfo._ext = ['currentLocation', 'requestedDomain', 'imei', 'ms-classmark', 'mnpRequestedInfo', 'locationInformationEPS-Supported', 't-adsData', 'requestedNodes', 'servingNodeIndication', 'localTimeZoneRequest']
    
    #-----< DomainType >-----#
    DomainType = ENUM(name='DomainType', mode=MODE_TYPE)
    DomainType._cont = ASN1Dict([('cs-Domain', 0), ('ps-Domain', 1)])
    DomainType._ext = []
    
    #-----< RequestedNodes >-----#
    RequestedNodes = BIT_STR(name='RequestedNodes', mode=MODE_TYPE)
    RequestedNodes._cont = ASN1Dict([('mme', 0), ('sgsn', 1)])
    RequestedNodes._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< LocationInformation >-----#
    LocationInformation = SEQ(name='LocationInformation', mode=MODE_TYPE)
    _LocationInformation_ageOfLocationInformation = INT(name='ageOfLocationInformation', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AgeOfLocationInformation')), opt=True)
    _LocationInformation_geographicalInformation = OCT_STR(name='geographicalInformation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GeographicalInformation')), opt=True)
    _LocationInformation_vlr_number = OCT_STR(name='vlr-number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _LocationInformation_locationNumber = OCT_STR(name='locationNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationNumber')), opt=True)
    _LocationInformation_cellGlobalIdOrServiceAreaIdOrLAI = CHOICE(name='cellGlobalIdOrServiceAreaIdOrLAI', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'CellGlobalIdOrServiceAreaIdOrLAI')), opt=True)
    _LocationInformation_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _LocationInformation_selectedLSA_Id = OCT_STR(name='selectedLSA-Id', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAIdentity')), opt=True)
    _LocationInformation_msc_Number = OCT_STR(name='msc-Number', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _LocationInformation_geodeticInformation = OCT_STR(name='geodeticInformation', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GeodeticInformation')), opt=True)
    _LocationInformation_currentLocationRetrieved = NULL(name='currentLocationRetrieved', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LocationInformation_sai_Present = NULL(name='sai-Present', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LocationInformation_locationInformationEPS = SEQ(name='locationInformationEPS', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationInformationEPS')), opt=True)
    _LocationInformation_userCSGInformation = SEQ(name='userCSGInformation', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UserCSGInformation')), opt=True)
    LocationInformation._cont = ASN1Dict([
        ('ageOfLocationInformation', _LocationInformation_ageOfLocationInformation),
        ('geographicalInformation', _LocationInformation_geographicalInformation),
        ('vlr-number', _LocationInformation_vlr_number),
        ('locationNumber', _LocationInformation_locationNumber),
        ('cellGlobalIdOrServiceAreaIdOrLAI', _LocationInformation_cellGlobalIdOrServiceAreaIdOrLAI),
        ('extensionContainer', _LocationInformation_extensionContainer),
        ('selectedLSA-Id', _LocationInformation_selectedLSA_Id),
        ('msc-Number', _LocationInformation_msc_Number),
        ('geodeticInformation', _LocationInformation_geodeticInformation),
        ('currentLocationRetrieved', _LocationInformation_currentLocationRetrieved),
        ('sai-Present', _LocationInformation_sai_Present),
        ('locationInformationEPS', _LocationInformation_locationInformationEPS),
        ('userCSGInformation', _LocationInformation_userCSGInformation),
        ])
    LocationInformation._ext = ['selectedLSA-Id', 'msc-Number', 'geodeticInformation', 'currentLocationRetrieved', 'sai-Present', 'locationInformationEPS', 'userCSGInformation']
    
    #-----< LocationInformationEPS >-----#
    LocationInformationEPS = SEQ(name='LocationInformationEPS', mode=MODE_TYPE)
    _LocationInformationEPS_e_utranCellGlobalIdentity = OCT_STR(name='e-utranCellGlobalIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'E-UTRAN-CGI')), opt=True)
    _LocationInformationEPS_trackingAreaIdentity = OCT_STR(name='trackingAreaIdentity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'TA-Id')), opt=True)
    _LocationInformationEPS_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _LocationInformationEPS_geographicalInformation = OCT_STR(name='geographicalInformation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GeographicalInformation')), opt=True)
    _LocationInformationEPS_geodeticInformation = OCT_STR(name='geodeticInformation', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GeodeticInformation')), opt=True)
    _LocationInformationEPS_currentLocationRetrieved = NULL(name='currentLocationRetrieved', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LocationInformationEPS_ageOfLocationInformation = INT(name='ageOfLocationInformation', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AgeOfLocationInformation')), opt=True)
    _LocationInformationEPS_mme_Name = OCT_STR(name='mme-Name', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')), opt=True)
    LocationInformationEPS._cont = ASN1Dict([
        ('e-utranCellGlobalIdentity', _LocationInformationEPS_e_utranCellGlobalIdentity),
        ('trackingAreaIdentity', _LocationInformationEPS_trackingAreaIdentity),
        ('extensionContainer', _LocationInformationEPS_extensionContainer),
        ('geographicalInformation', _LocationInformationEPS_geographicalInformation),
        ('geodeticInformation', _LocationInformationEPS_geodeticInformation),
        ('currentLocationRetrieved', _LocationInformationEPS_currentLocationRetrieved),
        ('ageOfLocationInformation', _LocationInformationEPS_ageOfLocationInformation),
        ('mme-Name', _LocationInformationEPS_mme_Name),
        ])
    LocationInformationEPS._ext = ['mme-Name']
    
    #-----< LocationInformationGPRS >-----#
    LocationInformationGPRS = SEQ(name='LocationInformationGPRS', mode=MODE_TYPE)
    _LocationInformationGPRS_cellGlobalIdOrServiceAreaIdOrLAI = CHOICE(name='cellGlobalIdOrServiceAreaIdOrLAI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'CellGlobalIdOrServiceAreaIdOrLAI')), opt=True)
    _LocationInformationGPRS_routeingAreaIdentity = OCT_STR(name='routeingAreaIdentity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'RAIdentity')), opt=True)
    _LocationInformationGPRS_geographicalInformation = OCT_STR(name='geographicalInformation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GeographicalInformation')), opt=True)
    _LocationInformationGPRS_sgsn_Number = OCT_STR(name='sgsn-Number', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _LocationInformationGPRS_selectedLSAIdentity = OCT_STR(name='selectedLSAIdentity', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAIdentity')), opt=True)
    _LocationInformationGPRS_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _LocationInformationGPRS_sai_Present = NULL(name='sai-Present', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LocationInformationGPRS_geodeticInformation = OCT_STR(name='geodeticInformation', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GeodeticInformation')), opt=True)
    _LocationInformationGPRS_currentLocationRetrieved = NULL(name='currentLocationRetrieved', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LocationInformationGPRS_ageOfLocationInformation = INT(name='ageOfLocationInformation', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AgeOfLocationInformation')), opt=True)
    _LocationInformationGPRS_userCSGInformation = SEQ(name='userCSGInformation', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UserCSGInformation')), opt=True)
    LocationInformationGPRS._cont = ASN1Dict([
        ('cellGlobalIdOrServiceAreaIdOrLAI', _LocationInformationGPRS_cellGlobalIdOrServiceAreaIdOrLAI),
        ('routeingAreaIdentity', _LocationInformationGPRS_routeingAreaIdentity),
        ('geographicalInformation', _LocationInformationGPRS_geographicalInformation),
        ('sgsn-Number', _LocationInformationGPRS_sgsn_Number),
        ('selectedLSAIdentity', _LocationInformationGPRS_selectedLSAIdentity),
        ('extensionContainer', _LocationInformationGPRS_extensionContainer),
        ('sai-Present', _LocationInformationGPRS_sai_Present),
        ('geodeticInformation', _LocationInformationGPRS_geodeticInformation),
        ('currentLocationRetrieved', _LocationInformationGPRS_currentLocationRetrieved),
        ('ageOfLocationInformation', _LocationInformationGPRS_ageOfLocationInformation),
        ('userCSGInformation', _LocationInformationGPRS_userCSGInformation),
        ])
    LocationInformationGPRS._ext = ['sai-Present', 'geodeticInformation', 'currentLocationRetrieved', 'ageOfLocationInformation', 'userCSGInformation']
    
    #-----< LocationInformation5GS >-----#
    LocationInformation5GS = SEQ(name='LocationInformation5GS', mode=MODE_TYPE)
    _LocationInformation5GS_nrCellGlobalIdentity = OCT_STR(name='nrCellGlobalIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NR-CGI')), opt=True)
    _LocationInformation5GS_e_utranCellGlobalIdentity = OCT_STR(name='e-utranCellGlobalIdentity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'E-UTRAN-CGI')), opt=True)
    _LocationInformation5GS_geographicalInformation = OCT_STR(name='geographicalInformation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GeographicalInformation')), opt=True)
    _LocationInformation5GS_geodeticInformation = OCT_STR(name='geodeticInformation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GeodeticInformation')), opt=True)
    _LocationInformation5GS_amf_address = OCT_STR(name='amf-address', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'FQDN')), opt=True)
    _LocationInformation5GS_trackingAreaIdentity = OCT_STR(name='trackingAreaIdentity', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'TA-Id')), opt=True)
    _LocationInformation5GS_currentLocationRetrieved = NULL(name='currentLocationRetrieved', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LocationInformation5GS_ageOfLocationInformation = INT(name='ageOfLocationInformation', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AgeOfLocationInformation')), opt=True)
    _LocationInformation5GS_vplmnId = OCT_STR(name='vplmnId', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')), opt=True)
    _LocationInformation5GS_localtimeZone = OCT_STR(name='localtimeZone', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TimeZone')), opt=True)
    _LocationInformation5GS_rat_Type = ENUM(name='rat-Type', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Used-RAT-Type')), opt=True)
    _LocationInformation5GS_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _LocationInformation5GS_nrTrackingAreaIdentity = OCT_STR(name='nrTrackingAreaIdentity', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NR-TA-Id')), opt=True)
    LocationInformation5GS._cont = ASN1Dict([
        ('nrCellGlobalIdentity', _LocationInformation5GS_nrCellGlobalIdentity),
        ('e-utranCellGlobalIdentity', _LocationInformation5GS_e_utranCellGlobalIdentity),
        ('geographicalInformation', _LocationInformation5GS_geographicalInformation),
        ('geodeticInformation', _LocationInformation5GS_geodeticInformation),
        ('amf-address', _LocationInformation5GS_amf_address),
        ('trackingAreaIdentity', _LocationInformation5GS_trackingAreaIdentity),
        ('currentLocationRetrieved', _LocationInformation5GS_currentLocationRetrieved),
        ('ageOfLocationInformation', _LocationInformation5GS_ageOfLocationInformation),
        ('vplmnId', _LocationInformation5GS_vplmnId),
        ('localtimeZone', _LocationInformation5GS_localtimeZone),
        ('rat-Type', _LocationInformation5GS_rat_Type),
        ('extensionContainer', _LocationInformation5GS_extensionContainer),
        ('nrTrackingAreaIdentity', _LocationInformation5GS_nrTrackingAreaIdentity),
        ])
    LocationInformation5GS._ext = ['nrTrackingAreaIdentity']
    
    #-----< UserCSGInformation >-----#
    UserCSGInformation = SEQ(name='UserCSGInformation', mode=MODE_TYPE)
    _UserCSGInformation_csg_Id = BIT_STR(name='csg-Id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CSG-Id')))
    _UserCSGInformation_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _UserCSGInformation_accessMode = OCT_STR(name='accessMode', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UserCSGInformation_accessMode._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _UserCSGInformation_cmi = OCT_STR(name='cmi', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UserCSGInformation_cmi._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    UserCSGInformation._cont = ASN1Dict([
        ('csg-Id', _UserCSGInformation_csg_Id),
        ('extensionContainer', _UserCSGInformation_extensionContainer),
        ('accessMode', _UserCSGInformation_accessMode),
        ('cmi', _UserCSGInformation_cmi),
        ])
    UserCSGInformation._ext = ['accessMode', 'cmi']
    
    #-----< GeographicalInformation >-----#
    GeographicalInformation = OCT_STR(name='GeographicalInformation', mode=MODE_TYPE)
    GeographicalInformation._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< GeodeticInformation >-----#
    GeodeticInformation = OCT_STR(name='GeodeticInformation', mode=MODE_TYPE)
    GeodeticInformation._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    
    #-----< LocationNumber >-----#
    LocationNumber = OCT_STR(name='LocationNumber', mode=MODE_TYPE)
    LocationNumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=10)], ev=None, er=[])
    
    #-----< SubscriberState >-----#
    SubscriberState = CHOICE(name='SubscriberState', mode=MODE_TYPE)
    _SubscriberState_assumedIdle = NULL(name='assumedIdle', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SubscriberState_camelBusy = NULL(name='camelBusy', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SubscriberState_netDetNotReachable = ENUM(name='netDetNotReachable', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NotReachableReason')))
    _SubscriberState_notProvidedFromVLR = NULL(name='notProvidedFromVLR', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SubscriberState._cont = ASN1Dict([
        ('assumedIdle', _SubscriberState_assumedIdle),
        ('camelBusy', _SubscriberState_camelBusy),
        ('netDetNotReachable', _SubscriberState_netDetNotReachable),
        ('notProvidedFromVLR', _SubscriberState_notProvidedFromVLR),
        ])
    SubscriberState._ext = None
    
    #-----< PS-SubscriberState >-----#
    PS_SubscriberState = CHOICE(name='PS-SubscriberState', mode=MODE_TYPE)
    _PS_SubscriberState_notProvidedFromSGSNorMME = NULL(name='notProvidedFromSGSNorMME', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PS_SubscriberState_ps_Detached = NULL(name='ps-Detached', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PS_SubscriberState_ps_AttachedNotReachableForPaging = NULL(name='ps-AttachedNotReachableForPaging', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PS_SubscriberState_ps_AttachedReachableForPaging = NULL(name='ps-AttachedReachableForPaging', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PS_SubscriberState_ps_PDP_ActiveNotReachableForPaging = SEQ_OF(name='ps-PDP-ActiveNotReachableForPaging', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-ContextInfoList')))
    _PS_SubscriberState_ps_PDP_ActiveReachableForPaging = SEQ_OF(name='ps-PDP-ActiveReachableForPaging', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-ContextInfoList')))
    _PS_SubscriberState_netDetNotReachable = ENUM(name='netDetNotReachable', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NotReachableReason')))
    PS_SubscriberState._cont = ASN1Dict([
        ('notProvidedFromSGSNorMME', _PS_SubscriberState_notProvidedFromSGSNorMME),
        ('ps-Detached', _PS_SubscriberState_ps_Detached),
        ('ps-AttachedNotReachableForPaging', _PS_SubscriberState_ps_AttachedNotReachableForPaging),
        ('ps-AttachedReachableForPaging', _PS_SubscriberState_ps_AttachedReachableForPaging),
        ('ps-PDP-ActiveNotReachableForPaging', _PS_SubscriberState_ps_PDP_ActiveNotReachableForPaging),
        ('ps-PDP-ActiveReachableForPaging', _PS_SubscriberState_ps_PDP_ActiveReachableForPaging),
        ('netDetNotReachable', _PS_SubscriberState_netDetNotReachable),
        ])
    PS_SubscriberState._ext = None
    
    #-----< PDP-ContextInfoList >-----#
    PDP_ContextInfoList = SEQ_OF(name='PDP-ContextInfoList', mode=MODE_TYPE)
    _PDP_ContextInfoList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-ContextInfo')))
    PDP_ContextInfoList._cont = _PDP_ContextInfoList__item_
    PDP_ContextInfoList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< PDP-ContextInfo >-----#
    PDP_ContextInfo = SEQ(name='PDP-ContextInfo', mode=MODE_TYPE)
    _PDP_ContextInfo_pdp_ContextIdentifier = INT(name='pdp-ContextIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ContextId')))
    _PDP_ContextInfo_pdp_ContextActive = NULL(name='pdp-ContextActive', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PDP_ContextInfo_pdp_Type = OCT_STR(name='pdp-Type', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Type')))
    _PDP_ContextInfo_pdp_Address = OCT_STR(name='pdp-Address', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Address')), opt=True)
    _PDP_ContextInfo_apn_Subscribed = OCT_STR(name='apn-Subscribed', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN')), opt=True)
    _PDP_ContextInfo_apn_InUse = OCT_STR(name='apn-InUse', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN')), opt=True)
    _PDP_ContextInfo_nsapi = INT(name='nsapi', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'NSAPI')), opt=True)
    _PDP_ContextInfo_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TransactionId')), opt=True)
    _PDP_ContextInfo_teid_ForGnAndGp = OCT_STR(name='teid-ForGnAndGp', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TEID')), opt=True)
    _PDP_ContextInfo_teid_ForIu = OCT_STR(name='teid-ForIu', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TEID')), opt=True)
    _PDP_ContextInfo_ggsn_Address = OCT_STR(name='ggsn-Address', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _PDP_ContextInfo_qos_Subscribed = OCT_STR(name='qos-Subscribed', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos_Requested = OCT_STR(name='qos-Requested', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos_Negotiated = OCT_STR(name='qos-Negotiated', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_chargingId = OCT_STR(name='chargingId', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRSChargingID')), opt=True)
    _PDP_ContextInfo_chargingCharacteristics = OCT_STR(name='chargingCharacteristics', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChargingCharacteristics')), opt=True)
    _PDP_ContextInfo_rnc_Address = OCT_STR(name='rnc-Address', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _PDP_ContextInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _PDP_ContextInfo_qos2_Subscribed = OCT_STR(name='qos2-Subscribed', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext2-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos2_Requested = OCT_STR(name='qos2-Requested', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext2-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos2_Negotiated = OCT_STR(name='qos2-Negotiated', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext2-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos3_Subscribed = OCT_STR(name='qos3-Subscribed', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext3-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos3_Requested = OCT_STR(name='qos3-Requested', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext3-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos3_Negotiated = OCT_STR(name='qos3-Negotiated', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext3-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos4_Subscribed = OCT_STR(name='qos4-Subscribed', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext4-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos4_Requested = OCT_STR(name='qos4-Requested', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext4-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos4_Negotiated = OCT_STR(name='qos4-Negotiated', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext4-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_ext_pdp_Type = OCT_STR(name='ext-pdp-Type', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-PDP-Type')), opt=True)
    _PDP_ContextInfo_ext_pdp_Address = OCT_STR(name='ext-pdp-Address', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Address')), opt=True)
    PDP_ContextInfo._cont = ASN1Dict([
        ('pdp-ContextIdentifier', _PDP_ContextInfo_pdp_ContextIdentifier),
        ('pdp-ContextActive', _PDP_ContextInfo_pdp_ContextActive),
        ('pdp-Type', _PDP_ContextInfo_pdp_Type),
        ('pdp-Address', _PDP_ContextInfo_pdp_Address),
        ('apn-Subscribed', _PDP_ContextInfo_apn_Subscribed),
        ('apn-InUse', _PDP_ContextInfo_apn_InUse),
        ('nsapi', _PDP_ContextInfo_nsapi),
        ('transactionId', _PDP_ContextInfo_transactionId),
        ('teid-ForGnAndGp', _PDP_ContextInfo_teid_ForGnAndGp),
        ('teid-ForIu', _PDP_ContextInfo_teid_ForIu),
        ('ggsn-Address', _PDP_ContextInfo_ggsn_Address),
        ('qos-Subscribed', _PDP_ContextInfo_qos_Subscribed),
        ('qos-Requested', _PDP_ContextInfo_qos_Requested),
        ('qos-Negotiated', _PDP_ContextInfo_qos_Negotiated),
        ('chargingId', _PDP_ContextInfo_chargingId),
        ('chargingCharacteristics', _PDP_ContextInfo_chargingCharacteristics),
        ('rnc-Address', _PDP_ContextInfo_rnc_Address),
        ('extensionContainer', _PDP_ContextInfo_extensionContainer),
        ('qos2-Subscribed', _PDP_ContextInfo_qos2_Subscribed),
        ('qos2-Requested', _PDP_ContextInfo_qos2_Requested),
        ('qos2-Negotiated', _PDP_ContextInfo_qos2_Negotiated),
        ('qos3-Subscribed', _PDP_ContextInfo_qos3_Subscribed),
        ('qos3-Requested', _PDP_ContextInfo_qos3_Requested),
        ('qos3-Negotiated', _PDP_ContextInfo_qos3_Negotiated),
        ('qos4-Subscribed', _PDP_ContextInfo_qos4_Subscribed),
        ('qos4-Requested', _PDP_ContextInfo_qos4_Requested),
        ('qos4-Negotiated', _PDP_ContextInfo_qos4_Negotiated),
        ('ext-pdp-Type', _PDP_ContextInfo_ext_pdp_Type),
        ('ext-pdp-Address', _PDP_ContextInfo_ext_pdp_Address),
        ])
    PDP_ContextInfo._ext = ['qos2-Subscribed', 'qos2-Requested', 'qos2-Negotiated', 'qos3-Subscribed', 'qos3-Requested', 'qos3-Negotiated', 'qos4-Subscribed', 'qos4-Requested', 'qos4-Negotiated', 'ext-pdp-Type', 'ext-pdp-Address']
    
    #-----< NSAPI >-----#
    NSAPI = INT(name='NSAPI', mode=MODE_TYPE)
    NSAPI._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    
    #-----< TransactionId >-----#
    TransactionId = OCT_STR(name='TransactionId', mode=MODE_TYPE)
    TransactionId._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    
    #-----< TEID >-----#
    TEID = OCT_STR(name='TEID', mode=MODE_TYPE)
    TEID._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< GPRSChargingID >-----#
    GPRSChargingID = OCT_STR(name='GPRSChargingID', mode=MODE_TYPE)
    GPRSChargingID._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< NotReachableReason >-----#
    NotReachableReason = ENUM(name='NotReachableReason', mode=MODE_TYPE)
    NotReachableReason._cont = ASN1Dict([('msPurged', 0), ('imsiDetached', 1), ('restrictedArea', 2), ('notRegistered', 3)])
    NotReachableReason._ext = None
    
    #-----< AnyTimeInterrogationArg >-----#
    AnyTimeInterrogationArg = SEQ(name='AnyTimeInterrogationArg', mode=MODE_TYPE)
    _AnyTimeInterrogationArg_subscriberIdentity = CHOICE(name='subscriberIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'SubscriberIdentity')))
    _AnyTimeInterrogationArg_requestedInfo = SEQ(name='requestedInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RequestedInfo')))
    _AnyTimeInterrogationArg_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _AnyTimeInterrogationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    AnyTimeInterrogationArg._cont = ASN1Dict([
        ('subscriberIdentity', _AnyTimeInterrogationArg_subscriberIdentity),
        ('requestedInfo', _AnyTimeInterrogationArg_requestedInfo),
        ('gsmSCF-Address', _AnyTimeInterrogationArg_gsmSCF_Address),
        ('extensionContainer', _AnyTimeInterrogationArg_extensionContainer),
        ])
    AnyTimeInterrogationArg._ext = []
    
    #-----< AnyTimeInterrogationRes >-----#
    AnyTimeInterrogationRes = SEQ(name='AnyTimeInterrogationRes', mode=MODE_TYPE)
    _AnyTimeInterrogationRes_subscriberInfo = SEQ(name='subscriberInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SubscriberInfo')))
    _AnyTimeInterrogationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    AnyTimeInterrogationRes._cont = ASN1Dict([
        ('subscriberInfo', _AnyTimeInterrogationRes_subscriberInfo),
        ('extensionContainer', _AnyTimeInterrogationRes_extensionContainer),
        ])
    AnyTimeInterrogationRes._ext = []
    
    #-----< AnyTimeSubscriptionInterrogationArg >-----#
    AnyTimeSubscriptionInterrogationArg = SEQ(name='AnyTimeSubscriptionInterrogationArg', mode=MODE_TYPE)
    _AnyTimeSubscriptionInterrogationArg_subscriberIdentity = CHOICE(name='subscriberIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'SubscriberIdentity')))
    _AnyTimeSubscriptionInterrogationArg_requestedSubscriptionInfo = SEQ(name='requestedSubscriptionInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RequestedSubscriptionInfo')))
    _AnyTimeSubscriptionInterrogationArg_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _AnyTimeSubscriptionInterrogationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _AnyTimeSubscriptionInterrogationArg_longFTN_Supported = NULL(name='longFTN-Supported', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    AnyTimeSubscriptionInterrogationArg._cont = ASN1Dict([
        ('subscriberIdentity', _AnyTimeSubscriptionInterrogationArg_subscriberIdentity),
        ('requestedSubscriptionInfo', _AnyTimeSubscriptionInterrogationArg_requestedSubscriptionInfo),
        ('gsmSCF-Address', _AnyTimeSubscriptionInterrogationArg_gsmSCF_Address),
        ('extensionContainer', _AnyTimeSubscriptionInterrogationArg_extensionContainer),
        ('longFTN-Supported', _AnyTimeSubscriptionInterrogationArg_longFTN_Supported),
        ])
    AnyTimeSubscriptionInterrogationArg._ext = []
    
    #-----< AnyTimeSubscriptionInterrogationRes >-----#
    AnyTimeSubscriptionInterrogationRes = SEQ(name='AnyTimeSubscriptionInterrogationRes', mode=MODE_TYPE)
    _AnyTimeSubscriptionInterrogationRes_callForwardingData = SEQ(name='callForwardingData', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CallForwardingData')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_callBarringData = SEQ(name='callBarringData', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CallBarringData')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_odb_Info = SEQ(name='odb-Info', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-Info')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_camel_SubscriptionInfo = SEQ(name='camel-SubscriptionInfo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CAMEL-SubscriptionInfo')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_supportedVLR_CAMEL_Phases = BIT_STR(name='supportedVLR-CAMEL-Phases', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedCamelPhases')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_supportedSGSN_CAMEL_Phases = BIT_STR(name='supportedSGSN-CAMEL-Phases', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedCamelPhases')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_offeredCamel4CSIsInVLR = BIT_STR(name='offeredCamel4CSIsInVLR', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'OfferedCamel4CSIs')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_offeredCamel4CSIsInSGSN = BIT_STR(name='offeredCamel4CSIsInSGSN', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'OfferedCamel4CSIs')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_msisdn_BS_List = SEQ_OF(name='msisdn-BS-List', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MSISDN-BS-List')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_csg_SubscriptionDataList = SEQ_OF(name='csg-SubscriptionDataList', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CSG-SubscriptionDataList')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_cw_Data = SEQ(name='cw-Data', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CallWaitingData')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_ch_Data = SEQ(name='ch-Data', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CallHoldData')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_clip_Data = SEQ(name='clip-Data', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ClipData')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_clir_Data = SEQ(name='clir-Data', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ClirData')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_ect_data = SEQ(name='ect-data', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EctData')), opt=True)
    AnyTimeSubscriptionInterrogationRes._cont = ASN1Dict([
        ('callForwardingData', _AnyTimeSubscriptionInterrogationRes_callForwardingData),
        ('callBarringData', _AnyTimeSubscriptionInterrogationRes_callBarringData),
        ('odb-Info', _AnyTimeSubscriptionInterrogationRes_odb_Info),
        ('camel-SubscriptionInfo', _AnyTimeSubscriptionInterrogationRes_camel_SubscriptionInfo),
        ('supportedVLR-CAMEL-Phases', _AnyTimeSubscriptionInterrogationRes_supportedVLR_CAMEL_Phases),
        ('supportedSGSN-CAMEL-Phases', _AnyTimeSubscriptionInterrogationRes_supportedSGSN_CAMEL_Phases),
        ('extensionContainer', _AnyTimeSubscriptionInterrogationRes_extensionContainer),
        ('offeredCamel4CSIsInVLR', _AnyTimeSubscriptionInterrogationRes_offeredCamel4CSIsInVLR),
        ('offeredCamel4CSIsInSGSN', _AnyTimeSubscriptionInterrogationRes_offeredCamel4CSIsInSGSN),
        ('msisdn-BS-List', _AnyTimeSubscriptionInterrogationRes_msisdn_BS_List),
        ('csg-SubscriptionDataList', _AnyTimeSubscriptionInterrogationRes_csg_SubscriptionDataList),
        ('cw-Data', _AnyTimeSubscriptionInterrogationRes_cw_Data),
        ('ch-Data', _AnyTimeSubscriptionInterrogationRes_ch_Data),
        ('clip-Data', _AnyTimeSubscriptionInterrogationRes_clip_Data),
        ('clir-Data', _AnyTimeSubscriptionInterrogationRes_clir_Data),
        ('ect-data', _AnyTimeSubscriptionInterrogationRes_ect_data),
        ])
    AnyTimeSubscriptionInterrogationRes._ext = ['offeredCamel4CSIsInVLR', 'offeredCamel4CSIsInSGSN', 'msisdn-BS-List', 'csg-SubscriptionDataList', 'cw-Data', 'ch-Data', 'clip-Data', 'clir-Data', 'ect-data']
    
    #-----< CallWaitingData >-----#
    CallWaitingData = SEQ(name='CallWaitingData', mode=MODE_TYPE)
    _CallWaitingData_cwFeatureList = SEQ_OF(name='cwFeatureList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-CwFeatureList')))
    _CallWaitingData_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    CallWaitingData._cont = ASN1Dict([
        ('cwFeatureList', _CallWaitingData_cwFeatureList),
        ('notificationToCSE', _CallWaitingData_notificationToCSE),
        ])
    CallWaitingData._ext = []
    
    #-----< Ext-CwFeatureList >-----#
    Ext_CwFeatureList = SEQ_OF(name='Ext-CwFeatureList', mode=MODE_TYPE)
    _Ext_CwFeatureList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-CwFeature')))
    Ext_CwFeatureList._cont = _Ext_CwFeatureList__item_
    Ext_CwFeatureList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< Ext-CwFeature >-----#
    Ext_CwFeature = SEQ(name='Ext-CwFeature', mode=MODE_TYPE)
    _Ext_CwFeature_basicService = CHOICE(name='basicService', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')))
    _Ext_CwFeature_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    Ext_CwFeature._cont = ASN1Dict([
        ('basicService', _Ext_CwFeature_basicService),
        ('ss-Status', _Ext_CwFeature_ss_Status),
        ])
    Ext_CwFeature._ext = []
    
    #-----< ClipData >-----#
    ClipData = SEQ(name='ClipData', mode=MODE_TYPE)
    _ClipData_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _ClipData_overrideCategory = ENUM(name='overrideCategory', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'OverrideCategory')))
    _ClipData_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ClipData._cont = ASN1Dict([
        ('ss-Status', _ClipData_ss_Status),
        ('overrideCategory', _ClipData_overrideCategory),
        ('notificationToCSE', _ClipData_notificationToCSE),
        ])
    ClipData._ext = []
    
    #-----< ClirData >-----#
    ClirData = SEQ(name='ClirData', mode=MODE_TYPE)
    _ClirData_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _ClirData_cliRestrictionOption = ENUM(name='cliRestrictionOption', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CliRestrictionOption')), opt=True)
    _ClirData_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ClirData._cont = ASN1Dict([
        ('ss-Status', _ClirData_ss_Status),
        ('cliRestrictionOption', _ClirData_cliRestrictionOption),
        ('notificationToCSE', _ClirData_notificationToCSE),
        ])
    ClirData._ext = []
    
    #-----< CallHoldData >-----#
    CallHoldData = SEQ(name='CallHoldData', mode=MODE_TYPE)
    _CallHoldData_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _CallHoldData_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    CallHoldData._cont = ASN1Dict([
        ('ss-Status', _CallHoldData_ss_Status),
        ('notificationToCSE', _CallHoldData_notificationToCSE),
        ])
    CallHoldData._ext = []
    
    #-----< EctData >-----#
    EctData = SEQ(name='EctData', mode=MODE_TYPE)
    _EctData_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _EctData_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    EctData._cont = ASN1Dict([
        ('ss-Status', _EctData_ss_Status),
        ('notificationToCSE', _EctData_notificationToCSE),
        ])
    EctData._ext = []
    
    #-----< RequestedSubscriptionInfo >-----#
    RequestedSubscriptionInfo = SEQ(name='RequestedSubscriptionInfo', mode=MODE_TYPE)
    _RequestedSubscriptionInfo_requestedSS_Info = SEQ(name='requestedSS-Info', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-ForBS-Code')), opt=True)
    _RequestedSubscriptionInfo_odb = NULL(name='odb', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedSubscriptionInfo_requestedCAMEL_SubscriptionInfo = ENUM(name='requestedCAMEL-SubscriptionInfo', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RequestedCAMEL-SubscriptionInfo')), opt=True)
    _RequestedSubscriptionInfo_supportedVLR_CAMEL_Phases = NULL(name='supportedVLR-CAMEL-Phases', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedSubscriptionInfo_supportedSGSN_CAMEL_Phases = NULL(name='supportedSGSN-CAMEL-Phases', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedSubscriptionInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _RequestedSubscriptionInfo_additionalRequestedCAMEL_SubscriptionInfo = ENUM(name='additionalRequestedCAMEL-SubscriptionInfo', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdditionalRequestedCAMEL-SubscriptionInfo')), opt=True)
    _RequestedSubscriptionInfo_msisdn_BS_List = NULL(name='msisdn-BS-List', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedSubscriptionInfo_csg_SubscriptionDataRequested = NULL(name='csg-SubscriptionDataRequested', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedSubscriptionInfo_cw_Info = NULL(name='cw-Info', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedSubscriptionInfo_clip_Info = NULL(name='clip-Info', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedSubscriptionInfo_clir_Info = NULL(name='clir-Info', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedSubscriptionInfo_hold_Info = NULL(name='hold-Info', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedSubscriptionInfo_ect_Info = NULL(name='ect-Info', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    RequestedSubscriptionInfo._cont = ASN1Dict([
        ('requestedSS-Info', _RequestedSubscriptionInfo_requestedSS_Info),
        ('odb', _RequestedSubscriptionInfo_odb),
        ('requestedCAMEL-SubscriptionInfo', _RequestedSubscriptionInfo_requestedCAMEL_SubscriptionInfo),
        ('supportedVLR-CAMEL-Phases', _RequestedSubscriptionInfo_supportedVLR_CAMEL_Phases),
        ('supportedSGSN-CAMEL-Phases', _RequestedSubscriptionInfo_supportedSGSN_CAMEL_Phases),
        ('extensionContainer', _RequestedSubscriptionInfo_extensionContainer),
        ('additionalRequestedCAMEL-SubscriptionInfo', _RequestedSubscriptionInfo_additionalRequestedCAMEL_SubscriptionInfo),
        ('msisdn-BS-List', _RequestedSubscriptionInfo_msisdn_BS_List),
        ('csg-SubscriptionDataRequested', _RequestedSubscriptionInfo_csg_SubscriptionDataRequested),
        ('cw-Info', _RequestedSubscriptionInfo_cw_Info),
        ('clip-Info', _RequestedSubscriptionInfo_clip_Info),
        ('clir-Info', _RequestedSubscriptionInfo_clir_Info),
        ('hold-Info', _RequestedSubscriptionInfo_hold_Info),
        ('ect-Info', _RequestedSubscriptionInfo_ect_Info),
        ])
    RequestedSubscriptionInfo._ext = ['additionalRequestedCAMEL-SubscriptionInfo', 'msisdn-BS-List', 'csg-SubscriptionDataRequested', 'cw-Info', 'clip-Info', 'clir-Info', 'hold-Info', 'ect-Info']
    
    #-----< MSISDN-BS-List >-----#
    MSISDN_BS_List = SEQ_OF(name='MSISDN-BS-List', mode=MODE_TYPE)
    _MSISDN_BS_List__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'MSISDN-BS')))
    MSISDN_BS_List._cont = _MSISDN_BS_List__item_
    MSISDN_BS_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< maxNumOfMSISDN >-----#
    maxNumOfMSISDN = INT(name='maxNumOfMSISDN', mode=MODE_VALUE)
    maxNumOfMSISDN._val = 50
    
    #-----< MSISDN-BS >-----#
    MSISDN_BS = SEQ(name='MSISDN-BS', mode=MODE_TYPE)
    _MSISDN_BS_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _MSISDN_BS_basicServiceList = SEQ_OF(name='basicServiceList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BasicServiceList')), opt=True)
    _MSISDN_BS_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MSISDN_BS._cont = ASN1Dict([
        ('msisdn', _MSISDN_BS_msisdn),
        ('basicServiceList', _MSISDN_BS_basicServiceList),
        ('extensionContainer', _MSISDN_BS_extensionContainer),
        ])
    MSISDN_BS._ext = []
    
    #-----< RequestedCAMEL-SubscriptionInfo >-----#
    RequestedCAMEL_SubscriptionInfo = ENUM(name='RequestedCAMEL-SubscriptionInfo', mode=MODE_TYPE)
    RequestedCAMEL_SubscriptionInfo._cont = ASN1Dict([('o-CSI', 0), ('t-CSI', 1), ('vt-CSI', 2), ('tif-CSI', 3), ('gprs-CSI', 4), ('mo-sms-CSI', 5), ('ss-CSI', 6), ('m-CSI', 7), ('d-csi', 8)])
    RequestedCAMEL_SubscriptionInfo._ext = None
    
    #-----< AdditionalRequestedCAMEL-SubscriptionInfo >-----#
    AdditionalRequestedCAMEL_SubscriptionInfo = ENUM(name='AdditionalRequestedCAMEL-SubscriptionInfo', mode=MODE_TYPE)
    AdditionalRequestedCAMEL_SubscriptionInfo._cont = ASN1Dict([('mt-sms-CSI', 0), ('mg-csi', 1), ('o-IM-CSI', 2), ('d-IM-CSI', 3), ('vt-IM-CSI', 4)])
    AdditionalRequestedCAMEL_SubscriptionInfo._ext = []
    
    #-----< CallForwardingData >-----#
    CallForwardingData = SEQ(name='CallForwardingData', mode=MODE_TYPE)
    _CallForwardingData_forwardingFeatureList = SEQ_OF(name='forwardingFeatureList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-ForwFeatureList')))
    _CallForwardingData_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, opt=True)
    _CallForwardingData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CallForwardingData._cont = ASN1Dict([
        ('forwardingFeatureList', _CallForwardingData_forwardingFeatureList),
        ('notificationToCSE', _CallForwardingData_notificationToCSE),
        ('extensionContainer', _CallForwardingData_extensionContainer),
        ])
    CallForwardingData._ext = []
    
    #-----< CallBarringData >-----#
    CallBarringData = SEQ(name='CallBarringData', mode=MODE_TYPE)
    _CallBarringData_callBarringFeatureList = SEQ_OF(name='callBarringFeatureList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-CallBarFeatureList')))
    _CallBarringData_password = STR_NUM(name='password', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'Password')), opt=True)
    _CallBarringData_password._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    _CallBarringData_wrongPasswordAttemptsCounter = INT(name='wrongPasswordAttemptsCounter', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'WrongPasswordAttemptsCounter')), opt=True)
    _CallBarringData_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, opt=True)
    _CallBarringData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CallBarringData._cont = ASN1Dict([
        ('callBarringFeatureList', _CallBarringData_callBarringFeatureList),
        ('password', _CallBarringData_password),
        ('wrongPasswordAttemptsCounter', _CallBarringData_wrongPasswordAttemptsCounter),
        ('notificationToCSE', _CallBarringData_notificationToCSE),
        ('extensionContainer', _CallBarringData_extensionContainer),
        ])
    CallBarringData._ext = []
    
    #-----< WrongPasswordAttemptsCounter >-----#
    WrongPasswordAttemptsCounter = INT(name='WrongPasswordAttemptsCounter', mode=MODE_TYPE)
    WrongPasswordAttemptsCounter._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4)], ev=None, er=[])
    
    #-----< ODB-Info >-----#
    ODB_Info = SEQ(name='ODB-Info', mode=MODE_TYPE)
    _ODB_Info_odb_Data = SEQ(name='odb-Data', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-Data')))
    _ODB_Info_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, opt=True)
    _ODB_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ODB_Info._cont = ASN1Dict([
        ('odb-Data', _ODB_Info_odb_Data),
        ('notificationToCSE', _ODB_Info_notificationToCSE),
        ('extensionContainer', _ODB_Info_extensionContainer),
        ])
    ODB_Info._ext = []
    
    #-----< CAMEL-SubscriptionInfo >-----#
    CAMEL_SubscriptionInfo = SEQ(name='CAMEL-SubscriptionInfo', mode=MODE_TYPE)
    _CAMEL_SubscriptionInfo_o_CSI = SEQ(name='o-CSI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_o_BcsmCamelTDP_CriteriaList = SEQ_OF(name='o-BcsmCamelTDP-CriteriaList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-BcsmCamelTDPCriteriaList')), opt=True)
    _CAMEL_SubscriptionInfo_d_CSI = SEQ(name='d-CSI', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'D-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_t_CSI = SEQ(name='t-CSI', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_t_BCSM_CAMEL_TDP_CriteriaList = SEQ_OF(name='t-BCSM-CAMEL-TDP-CriteriaList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-BCSM-CAMEL-TDP-CriteriaList')), opt=True)
    _CAMEL_SubscriptionInfo_vt_CSI = SEQ(name='vt-CSI', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_vt_BCSM_CAMEL_TDP_CriteriaList = SEQ_OF(name='vt-BCSM-CAMEL-TDP-CriteriaList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-BCSM-CAMEL-TDP-CriteriaList')), opt=True)
    _CAMEL_SubscriptionInfo_tif_CSI = NULL(name='tif-CSI', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CAMEL_SubscriptionInfo_tif_CSI_NotificationToCSE = NULL(name='tif-CSI-NotificationToCSE', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CAMEL_SubscriptionInfo_gprs_CSI = SEQ(name='gprs-CSI', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRS-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_mo_sms_CSI = SEQ(name='mo-sms-CSI', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_ss_CSI = SEQ(name='ss-CSI', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SS-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_m_CSI = SEQ(name='m-CSI', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'M-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _CAMEL_SubscriptionInfo_specificCSIDeletedList = BIT_STR(name='specificCSIDeletedList', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SpecificCSI-Withdraw')), opt=True)
    _CAMEL_SubscriptionInfo_mt_sms_CSI = SEQ(name='mt-sms-CSI', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_mt_smsCAMELTDP_CriteriaList = SEQ_OF(name='mt-smsCAMELTDP-CriteriaList', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MT-smsCAMELTDP-CriteriaList')), opt=True)
    _CAMEL_SubscriptionInfo_mg_csi = SEQ(name='mg-csi', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MG-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_o_IM_CSI = SEQ(name='o-IM-CSI', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_o_IM_BcsmCamelTDP_CriteriaList = SEQ_OF(name='o-IM-BcsmCamelTDP-CriteriaList', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-BcsmCamelTDPCriteriaList')), opt=True)
    _CAMEL_SubscriptionInfo_d_IM_CSI = SEQ(name='d-IM-CSI', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'D-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_vt_IM_CSI = SEQ(name='vt-IM-CSI', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_vt_IM_BCSM_CAMEL_TDP_CriteriaList = SEQ_OF(name='vt-IM-BCSM-CAMEL-TDP-CriteriaList', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-BCSM-CAMEL-TDP-CriteriaList')), opt=True)
    CAMEL_SubscriptionInfo._cont = ASN1Dict([
        ('o-CSI', _CAMEL_SubscriptionInfo_o_CSI),
        ('o-BcsmCamelTDP-CriteriaList', _CAMEL_SubscriptionInfo_o_BcsmCamelTDP_CriteriaList),
        ('d-CSI', _CAMEL_SubscriptionInfo_d_CSI),
        ('t-CSI', _CAMEL_SubscriptionInfo_t_CSI),
        ('t-BCSM-CAMEL-TDP-CriteriaList', _CAMEL_SubscriptionInfo_t_BCSM_CAMEL_TDP_CriteriaList),
        ('vt-CSI', _CAMEL_SubscriptionInfo_vt_CSI),
        ('vt-BCSM-CAMEL-TDP-CriteriaList', _CAMEL_SubscriptionInfo_vt_BCSM_CAMEL_TDP_CriteriaList),
        ('tif-CSI', _CAMEL_SubscriptionInfo_tif_CSI),
        ('tif-CSI-NotificationToCSE', _CAMEL_SubscriptionInfo_tif_CSI_NotificationToCSE),
        ('gprs-CSI', _CAMEL_SubscriptionInfo_gprs_CSI),
        ('mo-sms-CSI', _CAMEL_SubscriptionInfo_mo_sms_CSI),
        ('ss-CSI', _CAMEL_SubscriptionInfo_ss_CSI),
        ('m-CSI', _CAMEL_SubscriptionInfo_m_CSI),
        ('extensionContainer', _CAMEL_SubscriptionInfo_extensionContainer),
        ('specificCSIDeletedList', _CAMEL_SubscriptionInfo_specificCSIDeletedList),
        ('mt-sms-CSI', _CAMEL_SubscriptionInfo_mt_sms_CSI),
        ('mt-smsCAMELTDP-CriteriaList', _CAMEL_SubscriptionInfo_mt_smsCAMELTDP_CriteriaList),
        ('mg-csi', _CAMEL_SubscriptionInfo_mg_csi),
        ('o-IM-CSI', _CAMEL_SubscriptionInfo_o_IM_CSI),
        ('o-IM-BcsmCamelTDP-CriteriaList', _CAMEL_SubscriptionInfo_o_IM_BcsmCamelTDP_CriteriaList),
        ('d-IM-CSI', _CAMEL_SubscriptionInfo_d_IM_CSI),
        ('vt-IM-CSI', _CAMEL_SubscriptionInfo_vt_IM_CSI),
        ('vt-IM-BCSM-CAMEL-TDP-CriteriaList', _CAMEL_SubscriptionInfo_vt_IM_BCSM_CAMEL_TDP_CriteriaList),
        ])
    CAMEL_SubscriptionInfo._ext = ['specificCSIDeletedList', 'mt-sms-CSI', 'mt-smsCAMELTDP-CriteriaList', 'mg-csi', 'o-IM-CSI', 'o-IM-BcsmCamelTDP-CriteriaList', 'd-IM-CSI', 'vt-IM-CSI', 'vt-IM-BCSM-CAMEL-TDP-CriteriaList']
    
    #-----< AnyTimeModificationArg >-----#
    AnyTimeModificationArg = SEQ(name='AnyTimeModificationArg', mode=MODE_TYPE)
    _AnyTimeModificationArg_subscriberIdentity = CHOICE(name='subscriberIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'SubscriberIdentity')))
    _AnyTimeModificationArg_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _AnyTimeModificationArg_modificationRequestFor_CF_Info = SEQ(name='modificationRequestFor-CF-Info', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-CF-Info')), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_CB_Info = SEQ(name='modificationRequestFor-CB-Info', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-CB-Info')), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_CSI = SEQ(name='modificationRequestFor-CSI', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-CSI')), opt=True)
    _AnyTimeModificationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _AnyTimeModificationArg_longFTN_Supported = NULL(name='longFTN-Supported', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_ODB_data = SEQ(name='modificationRequestFor-ODB-data', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-ODB-data')), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_IP_SM_GW_Data = SEQ(name='modificationRequestFor-IP-SM-GW-Data', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-IP-SM-GW-Data')), opt=True)
    _AnyTimeModificationArg_activationRequestForUE_reachability = BIT_STR(name='activationRequestForUE-reachability', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RequestedServingNode')), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_CSG = SEQ(name='modificationRequestFor-CSG', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-CSG')), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_CW_Data = SEQ(name='modificationRequestFor-CW-Data', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-CW-Info')), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_CLIP_Data = SEQ(name='modificationRequestFor-CLIP-Data', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-CLIP-Info')), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_CLIR_Data = SEQ(name='modificationRequestFor-CLIR-Data', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-CLIR-Info')), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_HOLD_Data = SEQ(name='modificationRequestFor-HOLD-Data', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-CH-Info')), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_ECT_Data = SEQ(name='modificationRequestFor-ECT-Data', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-ECT-Info')), opt=True)
    AnyTimeModificationArg._cont = ASN1Dict([
        ('subscriberIdentity', _AnyTimeModificationArg_subscriberIdentity),
        ('gsmSCF-Address', _AnyTimeModificationArg_gsmSCF_Address),
        ('modificationRequestFor-CF-Info', _AnyTimeModificationArg_modificationRequestFor_CF_Info),
        ('modificationRequestFor-CB-Info', _AnyTimeModificationArg_modificationRequestFor_CB_Info),
        ('modificationRequestFor-CSI', _AnyTimeModificationArg_modificationRequestFor_CSI),
        ('extensionContainer', _AnyTimeModificationArg_extensionContainer),
        ('longFTN-Supported', _AnyTimeModificationArg_longFTN_Supported),
        ('modificationRequestFor-ODB-data', _AnyTimeModificationArg_modificationRequestFor_ODB_data),
        ('modificationRequestFor-IP-SM-GW-Data', _AnyTimeModificationArg_modificationRequestFor_IP_SM_GW_Data),
        ('activationRequestForUE-reachability', _AnyTimeModificationArg_activationRequestForUE_reachability),
        ('modificationRequestFor-CSG', _AnyTimeModificationArg_modificationRequestFor_CSG),
        ('modificationRequestFor-CW-Data', _AnyTimeModificationArg_modificationRequestFor_CW_Data),
        ('modificationRequestFor-CLIP-Data', _AnyTimeModificationArg_modificationRequestFor_CLIP_Data),
        ('modificationRequestFor-CLIR-Data', _AnyTimeModificationArg_modificationRequestFor_CLIR_Data),
        ('modificationRequestFor-HOLD-Data', _AnyTimeModificationArg_modificationRequestFor_HOLD_Data),
        ('modificationRequestFor-ECT-Data', _AnyTimeModificationArg_modificationRequestFor_ECT_Data),
        ])
    AnyTimeModificationArg._ext = ['modificationRequestFor-ODB-data', 'modificationRequestFor-IP-SM-GW-Data', 'activationRequestForUE-reachability', 'modificationRequestFor-CSG', 'modificationRequestFor-CW-Data', 'modificationRequestFor-CLIP-Data', 'modificationRequestFor-CLIR-Data', 'modificationRequestFor-HOLD-Data', 'modificationRequestFor-ECT-Data']
    
    #-----< ModificationRequestFor-CW-Info >-----#
    ModificationRequestFor_CW_Info = SEQ(name='ModificationRequestFor-CW-Info', mode=MODE_TYPE)
    _ModificationRequestFor_CW_Info_basicService = CHOICE(name='basicService', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')), opt=True)
    _ModificationRequestFor_CW_Info_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')), opt=True)
    _ModificationRequestFor_CW_Info_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_CW_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ModificationRequestFor_CW_Info._cont = ASN1Dict([
        ('basicService', _ModificationRequestFor_CW_Info_basicService),
        ('ss-Status', _ModificationRequestFor_CW_Info_ss_Status),
        ('modifyNotificationToCSE', _ModificationRequestFor_CW_Info_modifyNotificationToCSE),
        ('extensionContainer', _ModificationRequestFor_CW_Info_extensionContainer),
        ])
    ModificationRequestFor_CW_Info._ext = []
    
    #-----< ModificationRequestFor-CH-Info >-----#
    ModificationRequestFor_CH_Info = SEQ(name='ModificationRequestFor-CH-Info', mode=MODE_TYPE)
    _ModificationRequestFor_CH_Info_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')), opt=True)
    _ModificationRequestFor_CH_Info_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_CH_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ModificationRequestFor_CH_Info._cont = ASN1Dict([
        ('ss-Status', _ModificationRequestFor_CH_Info_ss_Status),
        ('modifyNotificationToCSE', _ModificationRequestFor_CH_Info_modifyNotificationToCSE),
        ('extensionContainer', _ModificationRequestFor_CH_Info_extensionContainer),
        ])
    ModificationRequestFor_CH_Info._ext = []
    
    #-----< ModificationRequestFor-ECT-Info >-----#
    ModificationRequestFor_ECT_Info = SEQ(name='ModificationRequestFor-ECT-Info', mode=MODE_TYPE)
    _ModificationRequestFor_ECT_Info_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')), opt=True)
    _ModificationRequestFor_ECT_Info_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_ECT_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ModificationRequestFor_ECT_Info._cont = ASN1Dict([
        ('ss-Status', _ModificationRequestFor_ECT_Info_ss_Status),
        ('modifyNotificationToCSE', _ModificationRequestFor_ECT_Info_modifyNotificationToCSE),
        ('extensionContainer', _ModificationRequestFor_ECT_Info_extensionContainer),
        ])
    ModificationRequestFor_ECT_Info._ext = []
    
    #-----< ModificationRequestFor-CLIR-Info >-----#
    ModificationRequestFor_CLIR_Info = SEQ(name='ModificationRequestFor-CLIR-Info', mode=MODE_TYPE)
    _ModificationRequestFor_CLIR_Info_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')), opt=True)
    _ModificationRequestFor_CLIR_Info_cliRestrictionOption = ENUM(name='cliRestrictionOption', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CliRestrictionOption')), opt=True)
    _ModificationRequestFor_CLIR_Info_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_CLIR_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ModificationRequestFor_CLIR_Info._cont = ASN1Dict([
        ('ss-Status', _ModificationRequestFor_CLIR_Info_ss_Status),
        ('cliRestrictionOption', _ModificationRequestFor_CLIR_Info_cliRestrictionOption),
        ('modifyNotificationToCSE', _ModificationRequestFor_CLIR_Info_modifyNotificationToCSE),
        ('extensionContainer', _ModificationRequestFor_CLIR_Info_extensionContainer),
        ])
    ModificationRequestFor_CLIR_Info._ext = []
    
    #-----< ModificationRequestFor-CLIP-Info >-----#
    ModificationRequestFor_CLIP_Info = SEQ(name='ModificationRequestFor-CLIP-Info', mode=MODE_TYPE)
    _ModificationRequestFor_CLIP_Info_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')), opt=True)
    _ModificationRequestFor_CLIP_Info_overrideCategory = ENUM(name='overrideCategory', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'OverrideCategory')), opt=True)
    _ModificationRequestFor_CLIP_Info_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_CLIP_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ModificationRequestFor_CLIP_Info._cont = ASN1Dict([
        ('ss-Status', _ModificationRequestFor_CLIP_Info_ss_Status),
        ('overrideCategory', _ModificationRequestFor_CLIP_Info_overrideCategory),
        ('modifyNotificationToCSE', _ModificationRequestFor_CLIP_Info_modifyNotificationToCSE),
        ('extensionContainer', _ModificationRequestFor_CLIP_Info_extensionContainer),
        ])
    ModificationRequestFor_CLIP_Info._ext = []
    
    #-----< ModificationRequestFor-CSG >-----#
    ModificationRequestFor_CSG = SEQ(name='ModificationRequestFor-CSG', mode=MODE_TYPE)
    _ModificationRequestFor_CSG_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_CSG_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ModificationRequestFor_CSG._cont = ASN1Dict([
        ('modifyNotificationToCSE', _ModificationRequestFor_CSG_modifyNotificationToCSE),
        ('extensionContainer', _ModificationRequestFor_CSG_extensionContainer),
        ])
    ModificationRequestFor_CSG._ext = []
    
    #-----< RequestedServingNode >-----#
    RequestedServingNode = BIT_STR(name='RequestedServingNode', mode=MODE_TYPE)
    RequestedServingNode._cont = ASN1Dict([('mmeAndSgsn', 0)])
    RequestedServingNode._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< ServingNode >-----#
    ServingNode = BIT_STR(name='ServingNode', mode=MODE_TYPE)
    ServingNode._cont = ASN1Dict([('mme', 0), ('sgsn', 1)])
    ServingNode._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=8)], ev=None, er=[])
    
    #-----< AnyTimeModificationRes >-----#
    AnyTimeModificationRes = SEQ(name='AnyTimeModificationRes', mode=MODE_TYPE)
    _AnyTimeModificationRes_ss_InfoFor_CSE = CHOICE(name='ss-InfoFor-CSE', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-SS-InfoFor-CSE')), opt=True)
    _AnyTimeModificationRes_camel_SubscriptionInfo = SEQ(name='camel-SubscriptionInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CAMEL-SubscriptionInfo')), opt=True)
    _AnyTimeModificationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _AnyTimeModificationRes_odb_Info = SEQ(name='odb-Info', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-Info')), opt=True)
    _AnyTimeModificationRes_cw_Data = SEQ(name='cw-Data', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CallWaitingData')), opt=True)
    _AnyTimeModificationRes_ch_Data = SEQ(name='ch-Data', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CallHoldData')), opt=True)
    _AnyTimeModificationRes_clip_Data = SEQ(name='clip-Data', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ClipData')), opt=True)
    _AnyTimeModificationRes_clir_Data = SEQ(name='clir-Data', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ClirData')), opt=True)
    _AnyTimeModificationRes_ect_data = SEQ(name='ect-data', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EctData')), opt=True)
    _AnyTimeModificationRes_serviceCentreAddress = OCT_STR(name='serviceCentreAddress', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')), opt=True)
    AnyTimeModificationRes._cont = ASN1Dict([
        ('ss-InfoFor-CSE', _AnyTimeModificationRes_ss_InfoFor_CSE),
        ('camel-SubscriptionInfo', _AnyTimeModificationRes_camel_SubscriptionInfo),
        ('extensionContainer', _AnyTimeModificationRes_extensionContainer),
        ('odb-Info', _AnyTimeModificationRes_odb_Info),
        ('cw-Data', _AnyTimeModificationRes_cw_Data),
        ('ch-Data', _AnyTimeModificationRes_ch_Data),
        ('clip-Data', _AnyTimeModificationRes_clip_Data),
        ('clir-Data', _AnyTimeModificationRes_clir_Data),
        ('ect-data', _AnyTimeModificationRes_ect_data),
        ('serviceCentreAddress', _AnyTimeModificationRes_serviceCentreAddress),
        ])
    AnyTimeModificationRes._ext = ['odb-Info', 'cw-Data', 'ch-Data', 'clip-Data', 'clir-Data', 'ect-data', 'serviceCentreAddress']
    
    #-----< ModificationRequestFor-CF-Info >-----#
    ModificationRequestFor_CF_Info = SEQ(name='ModificationRequestFor-CF-Info', mode=MODE_TYPE)
    _ModificationRequestFor_CF_Info_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _ModificationRequestFor_CF_Info_basicService = CHOICE(name='basicService', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')), opt=True)
    _ModificationRequestFor_CF_Info_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')), opt=True)
    _ModificationRequestFor_CF_Info_forwardedToNumber = OCT_STR(name='forwardedToNumber', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')), opt=True)
    _ModificationRequestFor_CF_Info_forwardedToSubaddress = OCT_STR(name='forwardedToSubaddress', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-SubaddressString')), opt=True)
    _ModificationRequestFor_CF_Info_noReplyConditionTime = INT(name='noReplyConditionTime', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-NoRepCondTime')), opt=True)
    _ModificationRequestFor_CF_Info_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_CF_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ModificationRequestFor_CF_Info._cont = ASN1Dict([
        ('ss-Code', _ModificationRequestFor_CF_Info_ss_Code),
        ('basicService', _ModificationRequestFor_CF_Info_basicService),
        ('ss-Status', _ModificationRequestFor_CF_Info_ss_Status),
        ('forwardedToNumber', _ModificationRequestFor_CF_Info_forwardedToNumber),
        ('forwardedToSubaddress', _ModificationRequestFor_CF_Info_forwardedToSubaddress),
        ('noReplyConditionTime', _ModificationRequestFor_CF_Info_noReplyConditionTime),
        ('modifyNotificationToCSE', _ModificationRequestFor_CF_Info_modifyNotificationToCSE),
        ('extensionContainer', _ModificationRequestFor_CF_Info_extensionContainer),
        ])
    ModificationRequestFor_CF_Info._ext = []
    
    #-----< ModificationRequestFor-CB-Info >-----#
    ModificationRequestFor_CB_Info = SEQ(name='ModificationRequestFor-CB-Info', mode=MODE_TYPE)
    _ModificationRequestFor_CB_Info_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _ModificationRequestFor_CB_Info_basicService = CHOICE(name='basicService', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')), opt=True)
    _ModificationRequestFor_CB_Info_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')), opt=True)
    _ModificationRequestFor_CB_Info_password = STR_NUM(name='password', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'Password')), opt=True)
    _ModificationRequestFor_CB_Info_password._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    _ModificationRequestFor_CB_Info_wrongPasswordAttemptsCounter = INT(name='wrongPasswordAttemptsCounter', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'WrongPasswordAttemptsCounter')), opt=True)
    _ModificationRequestFor_CB_Info_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_CB_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ModificationRequestFor_CB_Info._cont = ASN1Dict([
        ('ss-Code', _ModificationRequestFor_CB_Info_ss_Code),
        ('basicService', _ModificationRequestFor_CB_Info_basicService),
        ('ss-Status', _ModificationRequestFor_CB_Info_ss_Status),
        ('password', _ModificationRequestFor_CB_Info_password),
        ('wrongPasswordAttemptsCounter', _ModificationRequestFor_CB_Info_wrongPasswordAttemptsCounter),
        ('modifyNotificationToCSE', _ModificationRequestFor_CB_Info_modifyNotificationToCSE),
        ('extensionContainer', _ModificationRequestFor_CB_Info_extensionContainer),
        ])
    ModificationRequestFor_CB_Info._ext = []
    
    #-----< ModificationRequestFor-ODB-data >-----#
    ModificationRequestFor_ODB_data = SEQ(name='ModificationRequestFor-ODB-data', mode=MODE_TYPE)
    _ModificationRequestFor_ODB_data_odb_data = SEQ(name='odb-data', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-Data')), opt=True)
    _ModificationRequestFor_ODB_data_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_ODB_data_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ModificationRequestFor_ODB_data._cont = ASN1Dict([
        ('odb-data', _ModificationRequestFor_ODB_data_odb_data),
        ('modifyNotificationToCSE', _ModificationRequestFor_ODB_data_modifyNotificationToCSE),
        ('extensionContainer', _ModificationRequestFor_ODB_data_extensionContainer),
        ])
    ModificationRequestFor_ODB_data._ext = []
    
    #-----< ModificationRequestFor-CSI >-----#
    ModificationRequestFor_CSI = SEQ(name='ModificationRequestFor-CSI', mode=MODE_TYPE)
    _ModificationRequestFor_CSI_requestedCamel_SubscriptionInfo = ENUM(name='requestedCamel-SubscriptionInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RequestedCAMEL-SubscriptionInfo')))
    _ModificationRequestFor_CSI_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_CSI_modifyCSI_State = ENUM(name='modifyCSI-State', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_CSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ModificationRequestFor_CSI_additionalRequestedCAMEL_SubscriptionInfo = ENUM(name='additionalRequestedCAMEL-SubscriptionInfo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdditionalRequestedCAMEL-SubscriptionInfo')), opt=True)
    ModificationRequestFor_CSI._cont = ASN1Dict([
        ('requestedCamel-SubscriptionInfo', _ModificationRequestFor_CSI_requestedCamel_SubscriptionInfo),
        ('modifyNotificationToCSE', _ModificationRequestFor_CSI_modifyNotificationToCSE),
        ('modifyCSI-State', _ModificationRequestFor_CSI_modifyCSI_State),
        ('extensionContainer', _ModificationRequestFor_CSI_extensionContainer),
        ('additionalRequestedCAMEL-SubscriptionInfo', _ModificationRequestFor_CSI_additionalRequestedCAMEL_SubscriptionInfo),
        ])
    ModificationRequestFor_CSI._ext = ['additionalRequestedCAMEL-SubscriptionInfo']
    
    #-----< ModificationRequestFor-IP-SM-GW-Data >-----#
    ModificationRequestFor_IP_SM_GW_Data = SEQ(name='ModificationRequestFor-IP-SM-GW-Data', mode=MODE_TYPE)
    _ModificationRequestFor_IP_SM_GW_Data_modifyRegistrationStatus = ENUM(name='modifyRegistrationStatus', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_IP_SM_GW_Data_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ModificationRequestFor_IP_SM_GW_Data_ip_sm_gw_DiameterAddress = SEQ(name='ip-sm-gw-DiameterAddress', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    ModificationRequestFor_IP_SM_GW_Data._cont = ASN1Dict([
        ('modifyRegistrationStatus', _ModificationRequestFor_IP_SM_GW_Data_modifyRegistrationStatus),
        ('extensionContainer', _ModificationRequestFor_IP_SM_GW_Data_extensionContainer),
        ('ip-sm-gw-DiameterAddress', _ModificationRequestFor_IP_SM_GW_Data_ip_sm_gw_DiameterAddress),
        ])
    ModificationRequestFor_IP_SM_GW_Data._ext = ['ip-sm-gw-DiameterAddress']
    
    #-----< ModificationInstruction >-----#
    ModificationInstruction = ENUM(name='ModificationInstruction', mode=MODE_TYPE)
    ModificationInstruction._cont = ASN1Dict([('deactivate', 0), ('activate', 1)])
    ModificationInstruction._ext = None
    
    #-----< NoteSubscriberDataModifiedArg >-----#
    NoteSubscriberDataModifiedArg = SEQ(name='NoteSubscriberDataModifiedArg', mode=MODE_TYPE)
    _NoteSubscriberDataModifiedArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _NoteSubscriberDataModifiedArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _NoteSubscriberDataModifiedArg_forwardingInfoFor_CSE = SEQ(name='forwardingInfoFor-CSE', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-ForwardingInfoFor-CSE')), opt=True)
    _NoteSubscriberDataModifiedArg_callBarringInfoFor_CSE = SEQ(name='callBarringInfoFor-CSE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-CallBarringInfoFor-CSE')), opt=True)
    _NoteSubscriberDataModifiedArg_odb_Info = SEQ(name='odb-Info', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-Info')), opt=True)
    _NoteSubscriberDataModifiedArg_camel_SubscriptionInfo = SEQ(name='camel-SubscriptionInfo', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CAMEL-SubscriptionInfo')), opt=True)
    _NoteSubscriberDataModifiedArg_allInformationSent = NULL(name='allInformationSent', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _NoteSubscriberDataModifiedArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _NoteSubscriberDataModifiedArg_ue_reachable = BIT_STR(name='ue-reachable', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServingNode')), opt=True)
    _NoteSubscriberDataModifiedArg_csg_SubscriptionDataList = SEQ_OF(name='csg-SubscriptionDataList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CSG-SubscriptionDataList')), opt=True)
    _NoteSubscriberDataModifiedArg_cw_Data = SEQ(name='cw-Data', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CallWaitingData')), opt=True)
    _NoteSubscriberDataModifiedArg_ch_Data = SEQ(name='ch-Data', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CallHoldData')), opt=True)
    _NoteSubscriberDataModifiedArg_clip_Data = SEQ(name='clip-Data', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ClipData')), opt=True)
    _NoteSubscriberDataModifiedArg_clir_Data = SEQ(name='clir-Data', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ClirData')), opt=True)
    _NoteSubscriberDataModifiedArg_ect_data = SEQ(name='ect-data', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EctData')), opt=True)
    NoteSubscriberDataModifiedArg._cont = ASN1Dict([
        ('imsi', _NoteSubscriberDataModifiedArg_imsi),
        ('msisdn', _NoteSubscriberDataModifiedArg_msisdn),
        ('forwardingInfoFor-CSE', _NoteSubscriberDataModifiedArg_forwardingInfoFor_CSE),
        ('callBarringInfoFor-CSE', _NoteSubscriberDataModifiedArg_callBarringInfoFor_CSE),
        ('odb-Info', _NoteSubscriberDataModifiedArg_odb_Info),
        ('camel-SubscriptionInfo', _NoteSubscriberDataModifiedArg_camel_SubscriptionInfo),
        ('allInformationSent', _NoteSubscriberDataModifiedArg_allInformationSent),
        ('extensionContainer', _NoteSubscriberDataModifiedArg_extensionContainer),
        ('ue-reachable', _NoteSubscriberDataModifiedArg_ue_reachable),
        ('csg-SubscriptionDataList', _NoteSubscriberDataModifiedArg_csg_SubscriptionDataList),
        ('cw-Data', _NoteSubscriberDataModifiedArg_cw_Data),
        ('ch-Data', _NoteSubscriberDataModifiedArg_ch_Data),
        ('clip-Data', _NoteSubscriberDataModifiedArg_clip_Data),
        ('clir-Data', _NoteSubscriberDataModifiedArg_clir_Data),
        ('ect-data', _NoteSubscriberDataModifiedArg_ect_data),
        ])
    NoteSubscriberDataModifiedArg._ext = ['ue-reachable', 'csg-SubscriptionDataList', 'cw-Data', 'ch-Data', 'clip-Data', 'clir-Data', 'ect-data']
    
    #-----< NoteSubscriberDataModifiedRes >-----#
    NoteSubscriberDataModifiedRes = SEQ(name='NoteSubscriberDataModifiedRes', mode=MODE_TYPE)
    _NoteSubscriberDataModifiedRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    NoteSubscriberDataModifiedRes._cont = ASN1Dict([
        ('extensionContainer', _NoteSubscriberDataModifiedRes_extensionContainer),
        ])
    NoteSubscriberDataModifiedRes._ext = []
    
    #-----< NoteMM-EventArg >-----#
    NoteMM_EventArg = SEQ(name='NoteMM-EventArg', mode=MODE_TYPE)
    _NoteMM_EventArg_serviceKey = INT(name='serviceKey', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceKey')))
    _NoteMM_EventArg_eventMet = OCT_STR(name='eventMet', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MM-Code')))
    _NoteMM_EventArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _NoteMM_EventArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _NoteMM_EventArg_locationInformation = SEQ(name='locationInformation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationInformation')), opt=True)
    _NoteMM_EventArg_supportedCAMELPhases = BIT_STR(name='supportedCAMELPhases', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedCamelPhases')), opt=True)
    _NoteMM_EventArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _NoteMM_EventArg_locationInformationGPRS = SEQ(name='locationInformationGPRS', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationInformationGPRS')), opt=True)
    _NoteMM_EventArg_offeredCamel4Functionalities = BIT_STR(name='offeredCamel4Functionalities', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'OfferedCamel4Functionalities')), opt=True)
    NoteMM_EventArg._cont = ASN1Dict([
        ('serviceKey', _NoteMM_EventArg_serviceKey),
        ('eventMet', _NoteMM_EventArg_eventMet),
        ('imsi', _NoteMM_EventArg_imsi),
        ('msisdn', _NoteMM_EventArg_msisdn),
        ('locationInformation', _NoteMM_EventArg_locationInformation),
        ('supportedCAMELPhases', _NoteMM_EventArg_supportedCAMELPhases),
        ('extensionContainer', _NoteMM_EventArg_extensionContainer),
        ('locationInformationGPRS', _NoteMM_EventArg_locationInformationGPRS),
        ('offeredCamel4Functionalities', _NoteMM_EventArg_offeredCamel4Functionalities),
        ])
    NoteMM_EventArg._ext = ['locationInformationGPRS', 'offeredCamel4Functionalities']
    
    #-----< NoteMM-EventRes >-----#
    NoteMM_EventRes = SEQ(name='NoteMM-EventRes', mode=MODE_TYPE)
    _NoteMM_EventRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    NoteMM_EventRes._cont = ASN1Dict([
        ('extensionContainer', _NoteMM_EventRes_extensionContainer),
        ])
    NoteMM_EventRes._ext = []
    
    #-----< Ext-SS-InfoFor-CSE >-----#
    Ext_SS_InfoFor_CSE = CHOICE(name='Ext-SS-InfoFor-CSE', mode=MODE_TYPE)
    _Ext_SS_InfoFor_CSE_forwardingInfoFor_CSE = SEQ(name='forwardingInfoFor-CSE', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-ForwardingInfoFor-CSE')))
    _Ext_SS_InfoFor_CSE_callBarringInfoFor_CSE = SEQ(name='callBarringInfoFor-CSE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-CallBarringInfoFor-CSE')))
    Ext_SS_InfoFor_CSE._cont = ASN1Dict([
        ('forwardingInfoFor-CSE', _Ext_SS_InfoFor_CSE_forwardingInfoFor_CSE),
        ('callBarringInfoFor-CSE', _Ext_SS_InfoFor_CSE_callBarringInfoFor_CSE),
        ])
    Ext_SS_InfoFor_CSE._ext = None
    
    #-----< Ext-ForwardingInfoFor-CSE >-----#
    Ext_ForwardingInfoFor_CSE = SEQ(name='Ext-ForwardingInfoFor-CSE', mode=MODE_TYPE)
    _Ext_ForwardingInfoFor_CSE_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _Ext_ForwardingInfoFor_CSE_forwardingFeatureList = SEQ_OF(name='forwardingFeatureList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-ForwFeatureList')))
    _Ext_ForwardingInfoFor_CSE_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Ext_ForwardingInfoFor_CSE_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    Ext_ForwardingInfoFor_CSE._cont = ASN1Dict([
        ('ss-Code', _Ext_ForwardingInfoFor_CSE_ss_Code),
        ('forwardingFeatureList', _Ext_ForwardingInfoFor_CSE_forwardingFeatureList),
        ('notificationToCSE', _Ext_ForwardingInfoFor_CSE_notificationToCSE),
        ('extensionContainer', _Ext_ForwardingInfoFor_CSE_extensionContainer),
        ])
    Ext_ForwardingInfoFor_CSE._ext = []
    
    #-----< Ext-CallBarringInfoFor-CSE >-----#
    Ext_CallBarringInfoFor_CSE = SEQ(name='Ext-CallBarringInfoFor-CSE', mode=MODE_TYPE)
    _Ext_CallBarringInfoFor_CSE_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _Ext_CallBarringInfoFor_CSE_callBarringFeatureList = SEQ_OF(name='callBarringFeatureList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-CallBarFeatureList')))
    _Ext_CallBarringInfoFor_CSE_password = STR_NUM(name='password', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'Password')), opt=True)
    _Ext_CallBarringInfoFor_CSE_password._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    _Ext_CallBarringInfoFor_CSE_wrongPasswordAttemptsCounter = INT(name='wrongPasswordAttemptsCounter', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'WrongPasswordAttemptsCounter')), opt=True)
    _Ext_CallBarringInfoFor_CSE_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Ext_CallBarringInfoFor_CSE_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    Ext_CallBarringInfoFor_CSE._cont = ASN1Dict([
        ('ss-Code', _Ext_CallBarringInfoFor_CSE_ss_Code),
        ('callBarringFeatureList', _Ext_CallBarringInfoFor_CSE_callBarringFeatureList),
        ('password', _Ext_CallBarringInfoFor_CSE_password),
        ('wrongPasswordAttemptsCounter', _Ext_CallBarringInfoFor_CSE_wrongPasswordAttemptsCounter),
        ('notificationToCSE', _Ext_CallBarringInfoFor_CSE_notificationToCSE),
        ('extensionContainer', _Ext_CallBarringInfoFor_CSE_extensionContainer),
        ])
    Ext_CallBarringInfoFor_CSE._ext = []
    
    #-----< UpdateVcsgLocationArg >-----#
    UpdateVcsgLocationArg = SEQ(name='UpdateVcsgLocationArg', mode=MODE_TYPE)
    _UpdateVcsgLocationArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _UpdateVcsgLocationArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _UpdateVcsgLocationArg_vlr_Number = OCT_STR(name='vlr-Number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _UpdateVcsgLocationArg_sgsn_Number = OCT_STR(name='sgsn-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _UpdateVcsgLocationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    UpdateVcsgLocationArg._cont = ASN1Dict([
        ('imsi', _UpdateVcsgLocationArg_imsi),
        ('msisdn', _UpdateVcsgLocationArg_msisdn),
        ('vlr-Number', _UpdateVcsgLocationArg_vlr_Number),
        ('sgsn-Number', _UpdateVcsgLocationArg_sgsn_Number),
        ('extensionContainer', _UpdateVcsgLocationArg_extensionContainer),
        ])
    UpdateVcsgLocationArg._ext = []
    
    #-----< UpdateVcsgLocationRes >-----#
    UpdateVcsgLocationRes = SEQ(name='UpdateVcsgLocationRes', mode=MODE_TYPE)
    _UpdateVcsgLocationRes_temporaryEmptySubscriptiondataIndicator = NULL(name='temporaryEmptySubscriptiondataIndicator', mode=MODE_TYPE, opt=True)
    _UpdateVcsgLocationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    UpdateVcsgLocationRes._cont = ASN1Dict([
        ('temporaryEmptySubscriptiondataIndicator', _UpdateVcsgLocationRes_temporaryEmptySubscriptiondataIndicator),
        ('extensionContainer', _UpdateVcsgLocationRes_extensionContainer),
        ])
    UpdateVcsgLocationRes._ext = []
    
    #-----< CancelVcsgLocationArg >-----#
    CancelVcsgLocationArg = SEQ(name='CancelVcsgLocationArg', mode=MODE_TYPE)
    _CancelVcsgLocationArg_identity = CHOICE(name='identity', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Identity')))
    _CancelVcsgLocationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CancelVcsgLocationArg._cont = ASN1Dict([
        ('identity', _CancelVcsgLocationArg_identity),
        ('extensionContainer', _CancelVcsgLocationArg_extensionContainer),
        ])
    CancelVcsgLocationArg._ext = []
    
    #-----< CancelVcsgLocationRes >-----#
    CancelVcsgLocationRes = SEQ(name='CancelVcsgLocationRes', mode=MODE_TYPE)
    _CancelVcsgLocationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CancelVcsgLocationRes._cont = ASN1Dict([
        ('extensionContainer', _CancelVcsgLocationRes_extensionContainer),
        ])
    CancelVcsgLocationRes._ext = []
    
    _all_ = [
        _UpdateLocationArg_imsi,
        _UpdateLocationArg_msc_Number,
        _UpdateLocationArg_vlr_Number,
        _UpdateLocationArg_lmsi,
        _UpdateLocationArg_extensionContainer,
        _UpdateLocationArg_vlr_Capability,
        _UpdateLocationArg_informPreviousNetworkEntity,
        _UpdateLocationArg_cs_LCS_NotSupportedByUE,
        _UpdateLocationArg_v_gmlc_Address,
        _UpdateLocationArg_add_info,
        _UpdateLocationArg_pagingArea,
        _UpdateLocationArg_skipSubscriberDataUpdate,
        _UpdateLocationArg_restorationIndicator,
        _UpdateLocationArg_eplmn_List,
        _UpdateLocationArg_mme_DiameterAddress,
        UpdateLocationArg,
        _VLR_Capability_supportedCamelPhases,
        _VLR_Capability_extensionContainer,
        _VLR_Capability_solsaSupportIndicator,
        _VLR_Capability_istSupportIndicator,
        _VLR_Capability_superChargerSupportedInServingNetworkEntity,
        _VLR_Capability_longFTN_Supported,
        _VLR_Capability_supportedLCS_CapabilitySets,
        _VLR_Capability_offeredCamel4CSIs,
        _VLR_Capability_supportedRAT_TypesIndicator,
        _VLR_Capability_longGroupID_Supported,
        _VLR_Capability_mtRoamingForwardingSupported,
        _VLR_Capability_msisdn_lessOperation_Supported,
        _VLR_Capability_reset_ids_Supported,
        VLR_Capability,
        SupportedRAT_Types,
        _SuperChargerInfo_sendSubscriberData,
        _SuperChargerInfo_subscriberDataStored,
        SuperChargerInfo,
        AgeIndicator,
        IST_SupportIndicator,
        SupportedLCS_CapabilitySets,
        _UpdateLocationRes_hlr_Number,
        _UpdateLocationRes_extensionContainer,
        _UpdateLocationRes_add_Capability,
        _UpdateLocationRes_pagingArea_Capability,
        UpdateLocationRes,
        _ADD_Info_imeisv,
        _ADD_Info_skipSubscriberDataUpdate,
        ADD_Info,
        _PagingArea__item_,
        PagingArea,
        _LocationArea_laiFixedLength,
        _LocationArea_lac,
        LocationArea,
        LAC,
        _CancelLocationArg_identity,
        _CancelLocationArg_cancellationType,
        _CancelLocationArg_extensionContainer,
        _CancelLocationArg_typeOfUpdate,
        _CancelLocationArg_mtrf_SupportedAndAuthorized,
        _CancelLocationArg_mtrf_SupportedAndNotAuthorized,
        _CancelLocationArg_newMSC_Number,
        _CancelLocationArg_newVLR_Number,
        _CancelLocationArg_new_lmsi,
        _CancelLocationArg_reattach_Required,
        CancelLocationArg,
        TypeOfUpdate,
        CancellationType,
        _CancelLocationRes_extensionContainer,
        CancelLocationRes,
        _PurgeMS_Arg_imsi,
        _PurgeMS_Arg_vlr_Number,
        _PurgeMS_Arg_sgsn_Number,
        _PurgeMS_Arg_extensionContainer,
        _PurgeMS_Arg_locationInformation,
        _PurgeMS_Arg_locationInformationGPRS,
        _PurgeMS_Arg_locationInformationEPS,
        PurgeMS_Arg,
        _PurgeMS_Res_freezeTMSI,
        _PurgeMS_Res_freezeP_TMSI,
        _PurgeMS_Res_extensionContainer,
        _PurgeMS_Res_freezeM_TMSI,
        PurgeMS_Res,
        _SendIdentificationArg_tmsi,
        _SendIdentificationArg_numberOfRequestedVectors,
        _SendIdentificationArg_segmentationProhibited,
        _SendIdentificationArg_extensionContainer,
        _SendIdentificationArg_msc_Number,
        _SendIdentificationArg_previous_LAI,
        _SendIdentificationArg_hopCounter,
        _SendIdentificationArg_mtRoamingForwardingSupported,
        _SendIdentificationArg_newVLR_Number,
        _SendIdentificationArg_new_lmsi,
        SendIdentificationArg,
        HopCounter,
        _SendIdentificationRes_imsi,
        _SendIdentificationRes_authenticationSetList,
        _SendIdentificationRes_currentSecurityContext,
        _SendIdentificationRes_extensionContainer,
        _SendIdentificationRes_lastUsedLtePLMN_Id,
        _SendIdentificationRes_mtCallPendingFlag,
        SendIdentificationRes,
        _AuthenticationSetList_tripletList,
        _AuthenticationSetList_quintupletList,
        AuthenticationSetList,
        _TripletList__item_,
        TripletList,
        _QuintupletList__item_,
        QuintupletList,
        _AuthenticationTriplet_rand,
        _AuthenticationTriplet_sres,
        _AuthenticationTriplet_kc,
        AuthenticationTriplet,
        _AuthenticationQuintuplet_rand,
        _AuthenticationQuintuplet_xres,
        _AuthenticationQuintuplet_ck,
        _AuthenticationQuintuplet_ik,
        _AuthenticationQuintuplet_autn,
        AuthenticationQuintuplet,
        _CurrentSecurityContext_gsm_SecurityContextData,
        _CurrentSecurityContext_umts_SecurityContextData,
        CurrentSecurityContext,
        _GSM_SecurityContextData_kc,
        _GSM_SecurityContextData_cksn,
        GSM_SecurityContextData,
        _UMTS_SecurityContextData_ck,
        _UMTS_SecurityContextData_ik,
        _UMTS_SecurityContextData_ksi,
        UMTS_SecurityContextData,
        RAND,
        SRES,
        Kc,
        XRES,
        CK,
        IK,
        AUTN,
        AUTS,
        Cksn,
        KSI,
        _AuthenticationFailureReportArg_imsi,
        _AuthenticationFailureReportArg_failureCause,
        _AuthenticationFailureReportArg_extensionContainer,
        _AuthenticationFailureReportArg_re_attempt,
        _AuthenticationFailureReportArg_accessType,
        _AuthenticationFailureReportArg_rand,
        _AuthenticationFailureReportArg_vlr_Number,
        _AuthenticationFailureReportArg_sgsn_Number,
        AuthenticationFailureReportArg,
        AccessType,
        _AuthenticationFailureReportRes_extensionContainer,
        AuthenticationFailureReportRes,
        FailureCause,
        _UpdateGprsLocationArg_imsi,
        _UpdateGprsLocationArg_sgsn_Number,
        _UpdateGprsLocationArg_sgsn_Address,
        _UpdateGprsLocationArg_extensionContainer,
        _UpdateGprsLocationArg_sgsn_Capability,
        _UpdateGprsLocationArg_informPreviousNetworkEntity,
        _UpdateGprsLocationArg_ps_LCS_NotSupportedByUE,
        _UpdateGprsLocationArg_v_gmlc_Address,
        _UpdateGprsLocationArg_add_info,
        _UpdateGprsLocationArg_eps_info,
        _UpdateGprsLocationArg_servingNodeTypeIndicator,
        _UpdateGprsLocationArg_skipSubscriberDataUpdate,
        _UpdateGprsLocationArg_usedRAT_Type,
        _UpdateGprsLocationArg_gprsSubscriptionDataNotNeeded,
        _UpdateGprsLocationArg_nodeTypeIndicator,
        _UpdateGprsLocationArg_areaRestricted,
        _UpdateGprsLocationArg_ue_reachableIndicator,
        _UpdateGprsLocationArg_epsSubscriptionDataNotNeeded,
        _UpdateGprsLocationArg_ue_srvcc_Capability,
        _UpdateGprsLocationArg_eplmn_List,
        _UpdateGprsLocationArg_mmeNumberforMTSMS,
        _UpdateGprsLocationArg_smsRegisterRequest,
        _UpdateGprsLocationArg_sms_Only,
        _UpdateGprsLocationArg_removalofMMERegistrationforSMS,
        _UpdateGprsLocationArg_sgsn_Name,
        _UpdateGprsLocationArg_sgsn_Realm,
        _UpdateGprsLocationArg_lgd_supportIndicator,
        _UpdateGprsLocationArg_adjacentPLMN_List,
        UpdateGprsLocationArg,
        SMSRegisterRequest,
        Used_RAT_Type,
        _EPS_Info_pdn_gw_update,
        _EPS_Info_isr_Information,
        EPS_Info,
        _PDN_GW_Update_apn,
        _PDN_GW_Update_pdn_gw_Identity,
        _PDN_GW_Update_contextId,
        _PDN_GW_Update_extensionContainer,
        PDN_GW_Update,
        ISR_Information,
        _SGSN_Capability_solsaSupportIndicator,
        _SGSN_Capability_extensionContainer,
        _SGSN_Capability_superChargerSupportedInServingNetworkEntity,
        _SGSN_Capability_gprsEnhancementsSupportIndicator,
        _SGSN_Capability_supportedCamelPhases,
        _SGSN_Capability_supportedLCS_CapabilitySets,
        _SGSN_Capability_offeredCamel4CSIs,
        _SGSN_Capability_smsCallBarringSupportIndicator,
        _SGSN_Capability_supportedRAT_TypesIndicator,
        _SGSN_Capability_supportedFeatures,
        _SGSN_Capability_t_adsDataRetrieval,
        _SGSN_Capability_homogeneousSupportOfIMSVoiceOverPSSessions,
        _SGSN_Capability_cancellationTypeInitialAttach,
        _SGSN_Capability_msisdn_lessOperation_Supported,
        _SGSN_Capability_updateofHomogeneousSupportOfIMSVoiceOverPSSessions,
        _SGSN_Capability_reset_ids_Supported,
        _SGSN_Capability_ext_SupportedFeatures,
        SGSN_Capability,
        SupportedFeatures,
        Ext_SupportedFeatures,
        UE_SRVCC_Capability,
        _UpdateGprsLocationRes_hlr_Number,
        _UpdateGprsLocationRes_extensionContainer,
        _UpdateGprsLocationRes_add_Capability,
        _UpdateGprsLocationRes_sgsn_mmeSeparationSupported,
        _UpdateGprsLocationRes_mmeRegisteredforSMS,
        UpdateGprsLocationRes,
        _EPLMN_List__item_,
        EPLMN_List,
        _AdjacentPLMN_List__item_,
        AdjacentPLMN_List,
        _ForwardAccessSignalling_Arg_an_APDU,
        _ForwardAccessSignalling_Arg_integrityProtectionInfo,
        _ForwardAccessSignalling_Arg_encryptionInfo,
        _ForwardAccessSignalling_Arg_keyStatus,
        _ForwardAccessSignalling_Arg_allowedGSM_Algorithms,
        _ForwardAccessSignalling_Arg_allowedUMTS_Algorithms,
        _ForwardAccessSignalling_Arg_radioResourceInformation,
        _ForwardAccessSignalling_Arg_extensionContainer,
        _ForwardAccessSignalling_Arg_radioResourceList,
        _ForwardAccessSignalling_Arg_bssmap_ServiceHandover,
        _ForwardAccessSignalling_Arg_ranap_ServiceHandover,
        _ForwardAccessSignalling_Arg_bssmap_ServiceHandoverList,
        _ForwardAccessSignalling_Arg_currentlyUsedCodec,
        _ForwardAccessSignalling_Arg_iuSupportedCodecsList,
        _ForwardAccessSignalling_Arg_rab_ConfigurationIndicator,
        _ForwardAccessSignalling_Arg_iuSelectedCodec,
        _ForwardAccessSignalling_Arg_alternativeChannelType,
        _ForwardAccessSignalling_Arg_tracePropagationList,
        _ForwardAccessSignalling_Arg_aoipSupportedCodecsListAnchor,
        _ForwardAccessSignalling_Arg_aoipSelectedCodecTarget,
        _ForwardAccessSignalling_Arg_uesbi_Iu,
        _ForwardAccessSignalling_Arg_imeisv,
        ForwardAccessSignalling_Arg,
        AllowedGSM_Algorithms,
        _AllowedUMTS_Algorithms_integrityProtectionAlgorithms,
        _AllowedUMTS_Algorithms_encryptionAlgorithms,
        _AllowedUMTS_Algorithms_extensionContainer,
        AllowedUMTS_Algorithms,
        PermittedIntegrityProtectionAlgorithms,
        maxPermittedIntegrityProtectionAlgorithmsLength,
        PermittedEncryptionAlgorithms,
        maxPermittedEncryptionAlgorithmsLength,
        KeyStatus,
        _PrepareHO_Arg_targetCellId,
        _PrepareHO_Arg_ho_NumberNotRequired,
        _PrepareHO_Arg_targetRNCId,
        _PrepareHO_Arg_an_APDU,
        _PrepareHO_Arg_multipleBearerRequested,
        _PrepareHO_Arg_imsi,
        _PrepareHO_Arg_integrityProtectionInfo,
        _PrepareHO_Arg_encryptionInfo,
        _PrepareHO_Arg_radioResourceInformation,
        _PrepareHO_Arg_allowedGSM_Algorithms,
        _PrepareHO_Arg_allowedUMTS_Algorithms,
        _PrepareHO_Arg_radioResourceList,
        _PrepareHO_Arg_extensionContainer,
        _PrepareHO_Arg_rab_Id,
        _PrepareHO_Arg_bssmap_ServiceHandover,
        _PrepareHO_Arg_ranap_ServiceHandover,
        _PrepareHO_Arg_bssmap_ServiceHandoverList,
        _PrepareHO_Arg_asciCallReference,
        _PrepareHO_Arg_geran_classmark,
        _PrepareHO_Arg_iuCurrentlyUsedCodec,
        _PrepareHO_Arg_iuSupportedCodecsList,
        _PrepareHO_Arg_rab_ConfigurationIndicator,
        _PrepareHO_Arg_uesbi_Iu,
        _PrepareHO_Arg_imeisv,
        _PrepareHO_Arg_alternativeChannelType,
        _PrepareHO_Arg_tracePropagationList,
        _PrepareHO_Arg_aoipSupportedCodecsListAnchor,
        _PrepareHO_Arg_regionalSubscriptionData,
        _PrepareHO_Arg_lclsGlobalCallReference,
        _PrepareHO_Arg_lcls_Negotiation,
        _PrepareHO_Arg_lcls_Configuration_Preference,
        _PrepareHO_Arg_csg_SubscriptionDataList,
        PrepareHO_Arg,
        LCLS_GlobalCallReference,
        LCLS_Negotiation,
        LCLS_ConfigurationPreference,
        _BSSMAP_ServiceHandoverList__item_,
        BSSMAP_ServiceHandoverList,
        _BSSMAP_ServiceHandoverInfo_bssmap_ServiceHandover,
        _BSSMAP_ServiceHandoverInfo_rab_Id,
        BSSMAP_ServiceHandoverInfo,
        maxNumOfServiceHandovers,
        BSSMAP_ServiceHandover,
        RANAP_ServiceHandover,
        _RadioResourceList__item_,
        RadioResourceList,
        _RadioResource_radioResourceInformation,
        _RadioResource_rab_Id,
        RadioResource,
        maxNumOfRadioResources,
        _PrepareHO_Res_handoverNumber,
        _PrepareHO_Res_relocationNumberList,
        _PrepareHO_Res_an_APDU,
        _PrepareHO_Res_multicallBearerInfo,
        _PrepareHO_Res_multipleBearerNotSupported,
        _PrepareHO_Res_selectedUMTS_Algorithms,
        _PrepareHO_Res_chosenRadioResourceInformation,
        _PrepareHO_Res_extensionContainer,
        _PrepareHO_Res_iuSelectedCodec,
        _PrepareHO_Res_iuAvailableCodecsList,
        _PrepareHO_Res_aoipSelectedCodecTarget,
        _PrepareHO_Res_aoipAvailableCodecsListMap,
        PrepareHO_Res,
        _SelectedUMTS_Algorithms_integrityProtectionAlgorithm,
        _SelectedUMTS_Algorithms_encryptionAlgorithm,
        _SelectedUMTS_Algorithms_extensionContainer,
        SelectedUMTS_Algorithms,
        ChosenIntegrityProtectionAlgorithm,
        ChosenEncryptionAlgorithm,
        _ChosenRadioResourceInformation_chosenChannelInfo,
        _ChosenRadioResourceInformation_chosenSpeechVersion,
        ChosenRadioResourceInformation,
        ChosenChannelInfo,
        ChosenSpeechVersion,
        _PrepareSubsequentHO_Arg_targetCellId,
        _PrepareSubsequentHO_Arg_targetMSC_Number,
        _PrepareSubsequentHO_Arg_targetRNCId,
        _PrepareSubsequentHO_Arg_an_APDU,
        _PrepareSubsequentHO_Arg_selectedRab_Id,
        _PrepareSubsequentHO_Arg_extensionContainer,
        _PrepareSubsequentHO_Arg_geran_classmark,
        _PrepareSubsequentHO_Arg_rab_ConfigurationIndicator,
        PrepareSubsequentHO_Arg,
        _PrepareSubsequentHO_Res_an_APDU,
        _PrepareSubsequentHO_Res_extensionContainer,
        PrepareSubsequentHO_Res,
        _ProcessAccessSignalling_Arg_an_APDU,
        _ProcessAccessSignalling_Arg_selectedUMTS_Algorithms,
        _ProcessAccessSignalling_Arg_selectedGSM_Algorithm,
        _ProcessAccessSignalling_Arg_chosenRadioResourceInformation,
        _ProcessAccessSignalling_Arg_selectedRab_Id,
        _ProcessAccessSignalling_Arg_extensionContainer,
        _ProcessAccessSignalling_Arg_iUSelectedCodec,
        _ProcessAccessSignalling_Arg_iuAvailableCodecsList,
        _ProcessAccessSignalling_Arg_aoipSelectedCodecTarget,
        _ProcessAccessSignalling_Arg_aoipAvailableCodecsListMap,
        ProcessAccessSignalling_Arg,
        _AoIPCodecsList_codec1,
        _AoIPCodecsList_codec2,
        _AoIPCodecsList_codec3,
        _AoIPCodecsList_codec4,
        _AoIPCodecsList_codec5,
        _AoIPCodecsList_codec6,
        _AoIPCodecsList_codec7,
        _AoIPCodecsList_codec8,
        _AoIPCodecsList_extensionContainer,
        AoIPCodecsList,
        AoIPCodec,
        _SupportedCodecsList_utranCodecList,
        _SupportedCodecsList_geranCodecList,
        _SupportedCodecsList_extensionContainer,
        SupportedCodecsList,
        _CodecList_codec1,
        _CodecList_codec2,
        _CodecList_codec3,
        _CodecList_codec4,
        _CodecList_codec5,
        _CodecList_codec6,
        _CodecList_codec7,
        _CodecList_codec8,
        _CodecList_extensionContainer,
        CodecList,
        Codec,
        GERAN_Classmark,
        SelectedGSM_Algorithm,
        _SendEndSignal_Arg_an_APDU,
        _SendEndSignal_Arg_extensionContainer,
        SendEndSignal_Arg,
        _SendEndSignal_Res_extensionContainer,
        SendEndSignal_Res,
        RNCId,
        _RelocationNumberList__item_,
        RelocationNumberList,
        MulticallBearerInfo,
        _RelocationNumber_handoverNumber,
        _RelocationNumber_rab_Id,
        RelocationNumber,
        RAB_Id,
        maxNrOfRABs,
        maxNumOfRelocationNumber,
        RadioResourceInformation,
        IntegrityProtectionInformation,
        maxNumOfIntegrityInfo,
        EncryptionInformation,
        maxNumOfEncryptionInfo,
        _SendAuthenticationInfoArg_imsi,
        _SendAuthenticationInfoArg_numberOfRequestedVectors,
        _SendAuthenticationInfoArg_segmentationProhibited,
        _SendAuthenticationInfoArg_immediateResponsePreferred,
        _SendAuthenticationInfoArg_re_synchronisationInfo,
        _SendAuthenticationInfoArg_extensionContainer,
        _SendAuthenticationInfoArg_requestingNodeType,
        _SendAuthenticationInfoArg_requestingPLMN_Id,
        _SendAuthenticationInfoArg_numberOfRequestedAdditional_Vectors,
        _SendAuthenticationInfoArg_additionalVectorsAreForEPS,
        _SendAuthenticationInfoArg_ueUsageTypeRequestIndication,
        SendAuthenticationInfoArg,
        NumberOfRequestedVectors,
        _Re_synchronisationInfo_rand,
        _Re_synchronisationInfo_auts,
        Re_synchronisationInfo,
        _SendAuthenticationInfoRes_authenticationSetList,
        _SendAuthenticationInfoRes_extensionContainer,
        _SendAuthenticationInfoRes_eps_AuthenticationSetList,
        _SendAuthenticationInfoRes_ueUsageType,
        SendAuthenticationInfoRes,
        _EPS_AuthenticationSetList__item_,
        EPS_AuthenticationSetList,
        UE_UsageType,
        _EPC_AV_rand,
        _EPC_AV_xres,
        _EPC_AV_autn,
        _EPC_AV_kasme,
        _EPC_AV_extensionContainer,
        EPC_AV,
        KASME,
        RequestingNodeType,
        _CheckIMEI_Arg_imei,
        _CheckIMEI_Arg_requestedEquipmentInfo,
        _CheckIMEI_Arg_extensionContainer,
        CheckIMEI_Arg,
        _CheckIMEI_Res_equipmentStatus,
        _CheckIMEI_Res_bmuef,
        _CheckIMEI_Res_extensionContainer,
        CheckIMEI_Res,
        RequestedEquipmentInfo,
        _UESBI_Iu_uesbi_IuA,
        _UESBI_Iu_uesbi_IuB,
        UESBI_Iu,
        UESBI_IuA,
        UESBI_IuB,
        EquipmentStatus,
        _InsertSubscriberDataArg_imsi,
        _InsertSubscriberDataArg_msisdn,
        _InsertSubscriberDataArg_category,
        _InsertSubscriberDataArg_subscriberStatus,
        _InsertSubscriberDataArg_bearerServiceList,
        _InsertSubscriberDataArg_teleserviceList,
        _InsertSubscriberDataArg_provisionedSS,
        _InsertSubscriberDataArg_odb_Data,
        _InsertSubscriberDataArg_roamingRestrictionDueToUnsupportedFeature,
        _InsertSubscriberDataArg_regionalSubscriptionData,
        _InsertSubscriberDataArg_vbsSubscriptionData,
        _InsertSubscriberDataArg_vgcsSubscriptionData,
        _InsertSubscriberDataArg_vlrCamelSubscriptionInfo,
        _InsertSubscriberDataArg_extensionContainer,
        _InsertSubscriberDataArg_naea_PreferredCI,
        _InsertSubscriberDataArg_gprsSubscriptionData,
        _InsertSubscriberDataArg_roamingRestrictedInSgsnDueToUnsupportedFeature,
        _InsertSubscriberDataArg_networkAccessMode,
        _InsertSubscriberDataArg_lsaInformation,
        _InsertSubscriberDataArg_lmu_Indicator,
        _InsertSubscriberDataArg_lcsInformation,
        _InsertSubscriberDataArg_istAlertTimer,
        _InsertSubscriberDataArg_superChargerSupportedInHLR,
        _InsertSubscriberDataArg_mc_SS_Info,
        _InsertSubscriberDataArg_cs_AllocationRetentionPriority,
        _InsertSubscriberDataArg_sgsn_CAMEL_SubscriptionInfo,
        _InsertSubscriberDataArg_chargingCharacteristics,
        _InsertSubscriberDataArg_accessRestrictionData,
        _InsertSubscriberDataArg_ics_Indicator,
        _InsertSubscriberDataArg_eps_SubscriptionData,
        _InsertSubscriberDataArg_csg_SubscriptionDataList,
        _InsertSubscriberDataArg_ue_ReachabilityRequestIndicator,
        _InsertSubscriberDataArg_sgsn_Number,
        _InsertSubscriberDataArg_mme_Name,
        _InsertSubscriberDataArg_subscribedPeriodicRAUTAUtimer,
        _InsertSubscriberDataArg_vplmnLIPAAllowed,
        _InsertSubscriberDataArg_mdtUserConsent,
        _InsertSubscriberDataArg_subscribedPeriodicLAUtimer,
        _InsertSubscriberDataArg_vplmn_Csg_SubscriptionDataList,
        _InsertSubscriberDataArg_additionalMSISDN,
        _InsertSubscriberDataArg_psAndSMS_OnlyServiceProvision,
        _InsertSubscriberDataArg_smsInSGSNAllowed,
        _InsertSubscriberDataArg_cs_to_ps_SRVCC_Allowed_Indicator,
        _InsertSubscriberDataArg_pcscf_Restoration_Request,
        _InsertSubscriberDataArg_adjacentAccessRestrictionDataList,
        _InsertSubscriberDataArg_imsi_Group_Id_List,
        _InsertSubscriberDataArg_ueUsageType,
        _InsertSubscriberDataArg_userPlaneIntegrityProtectionIndicator,
        _InsertSubscriberDataArg_dl_Buffering_Suggested_Packet_Count,
        _InsertSubscriberDataArg_reset_Id_List,
        _InsertSubscriberDataArg_eDRX_Cycle_Length_List,
        _InsertSubscriberDataArg_ext_AccessRestrictionData,
        _InsertSubscriberDataArg_iab_Operation_Allowed_Indicator,
        InsertSubscriberDataArg,
        _EDRX_Cycle_Length_List__item_,
        EDRX_Cycle_Length_List,
        _EDRX_Cycle_Length_rat_Type,
        _EDRX_Cycle_Length_eDRX_Cycle_Length_Value,
        EDRX_Cycle_Length,
        EDRX_Cycle_Length_Value,
        _Reset_Id_List__item_,
        Reset_Id_List,
        Reset_Id,
        DL_Buffering_Suggested_Packet_Count,
        Group_Service_ID,
        Local_GroupID,
        _IMSI_GroupIdList__item_,
        IMSI_GroupIdList,
        _IMSI_GroupId_group_Service_Id,
        _IMSI_GroupId_plmnId,
        _IMSI_GroupId_local_Group_ID,
        IMSI_GroupId,
        SubscribedPeriodicRAUTAUtimer,
        SubscribedPeriodicLAUtimer,
        _CSG_SubscriptionDataList__item_,
        CSG_SubscriptionDataList,
        _CSG_SubscriptionData_csg_Id,
        _CSG_SubscriptionData_expirationDate,
        _CSG_SubscriptionData_extensionContainer,
        _CSG_SubscriptionData_lipa_AllowedAPNList,
        _CSG_SubscriptionData_plmn_Id,
        CSG_SubscriptionData,
        _VPLMN_CSG_SubscriptionDataList__item_,
        VPLMN_CSG_SubscriptionDataList,
        CSG_Id,
        _LIPA_AllowedAPNList__item_,
        LIPA_AllowedAPNList,
        maxNumOfLIPAAllowedAPN,
        _EPS_SubscriptionData_apn_oi_Replacement,
        _EPS_SubscriptionData_rfsp_id,
        _EPS_SubscriptionData_ambr,
        _EPS_SubscriptionData_apn_ConfigurationProfile,
        _EPS_SubscriptionData_stn_sr,
        _EPS_SubscriptionData_extensionContainer,
        _EPS_SubscriptionData_mps_CSPriority,
        _EPS_SubscriptionData_mps_EPSPriority,
        _EPS_SubscriptionData_subscribed_vsrvcc,
        EPS_SubscriptionData,
        APN_OI_Replacement,
        RFSP_ID,
        _APN_ConfigurationProfile_defaultContext,
        _APN_ConfigurationProfile_completeDataListIncluded,
        _APN_ConfigurationProfile_epsDataList,
        _APN_ConfigurationProfile_extensionContainer,
        _APN_ConfigurationProfile_additionalDefaultContext,
        APN_ConfigurationProfile,
        _EPS_DataList__item_,
        EPS_DataList,
        maxNumOfAPN_Configurations,
        _APN_Configuration_contextId,
        _APN_Configuration_pdn_Type,
        _APN_Configuration_servedPartyIP_IPv4_Address,
        _APN_Configuration_apn,
        _APN_Configuration_eps_qos_Subscribed,
        _APN_Configuration_pdn_gw_Identity,
        _APN_Configuration_pdn_gw_AllocationType,
        _APN_Configuration_vplmnAddressAllowed,
        _APN_Configuration_chargingCharacteristics,
        _APN_Configuration_ambr,
        _APN_Configuration_specificAPNInfoList,
        _APN_Configuration_extensionContainer,
        _APN_Configuration_servedPartyIP_IPv6_Address,
        _APN_Configuration_apn_oi_Replacement,
        _APN_Configuration_sipto_Permission,
        _APN_Configuration_lipa_Permission,
        _APN_Configuration_restoration_Priority,
        _APN_Configuration_sipto_local_network_Permission,
        _APN_Configuration_wlan_offloadability,
        _APN_Configuration_non_IP_PDN_Type_Indicator,
        _APN_Configuration_nIDD_Mechanism,
        _APN_Configuration_sCEF_ID,
        _APN_Configuration_pdn_ConnectionContinuity,
        APN_Configuration,
        PDN_ConnectionContinuity,
        NIDD_Mechanism,
        PDN_Type,
        _EPS_QoS_Subscribed_qos_Class_Identifier,
        _EPS_QoS_Subscribed_allocation_Retention_Priority,
        _EPS_QoS_Subscribed_extensionContainer,
        EPS_QoS_Subscribed,
        _AMBR_max_RequestedBandwidth_UL,
        _AMBR_max_RequestedBandwidth_DL,
        _AMBR_extensionContainer,
        _AMBR_extended_Max_RequestedBandwidth_UL,
        _AMBR_extended_Max_RequestedBandwidth_DL,
        AMBR,
        _SpecificAPNInfoList__item_,
        SpecificAPNInfoList,
        maxNumOfSpecificAPNInfos,
        _SpecificAPNInfo_apn,
        _SpecificAPNInfo_pdn_gw_Identity,
        _SpecificAPNInfo_extensionContainer,
        SpecificAPNInfo,
        Bandwidth,
        BandwidthExt,
        QoS_Class_Identifier,
        _Allocation_Retention_Priority_priority_level,
        _Allocation_Retention_Priority_pre_emption_capability,
        _Allocation_Retention_Priority_pre_emption_vulnerability,
        _Allocation_Retention_Priority_extensionContainer,
        Allocation_Retention_Priority,
        _PDN_GW_Identity_pdn_gw_ipv4_Address,
        _PDN_GW_Identity_pdn_gw_ipv6_Address,
        _PDN_GW_Identity_pdn_gw_name,
        _PDN_GW_Identity_extensionContainer,
        PDN_GW_Identity,
        FQDN,
        PDN_GW_AllocationType,
        _WLAN_Offloadability_wlan_offloadability_EUTRAN,
        _WLAN_Offloadability_wlan_offloadability_UTRAN,
        _WLAN_Offloadability_extensionContainer,
        WLAN_Offloadability,
        WLAN_Offloadability_Indication,
        AccessRestrictionData,
        Ext_AccessRestrictionData,
        _AdjacentAccessRestrictionDataList__item_,
        AdjacentAccessRestrictionDataList,
        _AdjacentAccessRestrictionData_plmnId,
        _AdjacentAccessRestrictionData_accessRestrictionData,
        _AdjacentAccessRestrictionData_ext_AccessRestrictionData,
        AdjacentAccessRestrictionData,
        CS_AllocationRetentionPriority,
        IST_AlertTimerValue,
        _LCSInformation_gmlc_List,
        _LCSInformation_lcs_PrivacyExceptionList,
        _LCSInformation_molr_List,
        _LCSInformation_add_lcs_PrivacyExceptionList,
        LCSInformation,
        _GMLC_List__item_,
        GMLC_List,
        maxNumOfGMLC,
        NetworkAccessMode,
        _GPRSDataList__item_,
        GPRSDataList,
        maxNumOfPDP_Contexts,
        _PDP_Context_pdp_ContextId,
        _PDP_Context_pdp_Type,
        _PDP_Context_pdp_Address,
        _PDP_Context_qos_Subscribed,
        _PDP_Context_vplmnAddressAllowed,
        _PDP_Context_apn,
        _PDP_Context_extensionContainer,
        _PDP_Context_ext_QoS_Subscribed,
        _PDP_Context_pdp_ChargingCharacteristics,
        _PDP_Context_ext2_QoS_Subscribed,
        _PDP_Context_ext3_QoS_Subscribed,
        _PDP_Context_ext4_QoS_Subscribed,
        _PDP_Context_apn_oi_Replacement,
        _PDP_Context_ext_pdp_Type,
        _PDP_Context_ext_pdp_Address,
        _PDP_Context_ambr,
        _PDP_Context_sipto_Permission,
        _PDP_Context_lipa_Permission,
        _PDP_Context_restoration_Priority,
        _PDP_Context_sipto_local_network_Permission,
        _PDP_Context_nIDD_Mechanism,
        _PDP_Context_sCEF_ID,
        PDP_Context,
        Restoration_Priority,
        SIPTO_Permission,
        SIPTO_Local_Network_Permission,
        LIPA_Permission,
        ContextId,
        _GPRSSubscriptionData_completeDataListIncluded,
        _GPRSSubscriptionData_gprsDataList,
        _GPRSSubscriptionData_extensionContainer,
        _GPRSSubscriptionData_apn_oi_Replacement,
        GPRSSubscriptionData,
        _SGSN_CAMEL_SubscriptionInfo_gprs_CSI,
        _SGSN_CAMEL_SubscriptionInfo_mo_sms_CSI,
        _SGSN_CAMEL_SubscriptionInfo_extensionContainer,
        _SGSN_CAMEL_SubscriptionInfo_mt_sms_CSI,
        _SGSN_CAMEL_SubscriptionInfo_mt_smsCAMELTDP_CriteriaList,
        _SGSN_CAMEL_SubscriptionInfo_mg_csi,
        SGSN_CAMEL_SubscriptionInfo,
        _GPRS_CSI_gprs_CamelTDPDataList,
        _GPRS_CSI_camelCapabilityHandling,
        _GPRS_CSI_extensionContainer,
        _GPRS_CSI_notificationToCSE,
        _GPRS_CSI_csi_Active,
        GPRS_CSI,
        _GPRS_CamelTDPDataList__item_,
        GPRS_CamelTDPDataList,
        _GPRS_CamelTDPData_gprs_TriggerDetectionPoint,
        _GPRS_CamelTDPData_serviceKey,
        _GPRS_CamelTDPData_gsmSCF_Address,
        _GPRS_CamelTDPData_defaultSessionHandling,
        _GPRS_CamelTDPData_extensionContainer,
        GPRS_CamelTDPData,
        DefaultGPRS_Handling,
        GPRS_TriggerDetectionPoint,
        APN,
        PDP_Type,
        Ext_PDP_Type,
        PDP_Address,
        QoS_Subscribed,
        Ext_QoS_Subscribed,
        Ext2_QoS_Subscribed,
        Ext3_QoS_Subscribed,
        Ext4_QoS_Subscribed,
        ChargingCharacteristics,
        LSAOnlyAccessIndicator,
        _LSADataList__item_,
        LSADataList,
        maxNumOfLSAs,
        _LSAData_lsaIdentity,
        _LSAData_lsaAttributes,
        _LSAData_lsaActiveModeIndicator,
        _LSAData_extensionContainer,
        LSAData,
        _LSAInformation_completeDataListIncluded,
        _LSAInformation_lsaOnlyAccessIndicator,
        _LSAInformation_lsaDataList,
        _LSAInformation_extensionContainer,
        LSAInformation,
        LSAIdentity,
        LSAAttributes,
        _SubscriberData_msisdn,
        _SubscriberData_category,
        _SubscriberData_subscriberStatus,
        _SubscriberData_bearerServiceList,
        _SubscriberData_teleserviceList,
        _SubscriberData_provisionedSS,
        _SubscriberData_odb_Data,
        _SubscriberData_roamingRestrictionDueToUnsupportedFeature,
        _SubscriberData_regionalSubscriptionData,
        _SubscriberData_vbsSubscriptionData,
        _SubscriberData_vgcsSubscriptionData,
        _SubscriberData_vlrCamelSubscriptionInfo,
        SubscriberData,
        Category,
        SubscriberStatus,
        _BearerServiceList__item_,
        BearerServiceList,
        maxNumOfBearerServices,
        _TeleserviceList__item_,
        TeleserviceList,
        maxNumOfTeleservices,
        _ODB_Data_odb_GeneralData,
        _ODB_Data_odb_HPLMN_Data,
        _ODB_Data_extensionContainer,
        ODB_Data,
        ODB_GeneralData,
        ODB_HPLMN_Data,
        _Ext_SS_InfoList__item_,
        Ext_SS_InfoList,
        _Ext_SS_Info_forwardingInfo,
        _Ext_SS_Info_callBarringInfo,
        _Ext_SS_Info_cug_Info,
        _Ext_SS_Info_ss_Data,
        _Ext_SS_Info_emlpp_Info,
        Ext_SS_Info,
        _Ext_ForwInfo_ss_Code,
        _Ext_ForwInfo_forwardingFeatureList,
        _Ext_ForwInfo_extensionContainer,
        Ext_ForwInfo,
        _Ext_ForwFeatureList__item_,
        Ext_ForwFeatureList,
        _Ext_ForwFeature_basicService,
        _Ext_ForwFeature_ss_Status,
        _Ext_ForwFeature_forwardedToNumber,
        _Ext_ForwFeature_forwardedToSubaddress,
        _Ext_ForwFeature_forwardingOptions,
        _Ext_ForwFeature_noReplyConditionTime,
        _Ext_ForwFeature_extensionContainer,
        _Ext_ForwFeature_longForwardedToNumber,
        Ext_ForwFeature,
        Ext_ForwOptions,
        Ext_NoRepCondTime,
        _Ext_CallBarInfo_ss_Code,
        _Ext_CallBarInfo_callBarringFeatureList,
        _Ext_CallBarInfo_extensionContainer,
        Ext_CallBarInfo,
        _Ext_CallBarFeatureList__item_,
        Ext_CallBarFeatureList,
        _Ext_CallBarringFeature_basicService,
        _Ext_CallBarringFeature_ss_Status,
        _Ext_CallBarringFeature_extensionContainer,
        Ext_CallBarringFeature,
        _CUG_Info_cug_SubscriptionList,
        _CUG_Info_cug_FeatureList,
        _CUG_Info_extensionContainer,
        CUG_Info,
        _CUG_SubscriptionList__item_,
        CUG_SubscriptionList,
        _CUG_Subscription_cug_Index,
        _CUG_Subscription_cug_Interlock,
        _CUG_Subscription_intraCUG_Options,
        _CUG_Subscription_basicServiceGroupList,
        _CUG_Subscription_extensionContainer,
        CUG_Subscription,
        CUG_Index,
        CUG_Interlock,
        IntraCUG_Options,
        maxNumOfCUG,
        _CUG_FeatureList__item_,
        CUG_FeatureList,
        _Ext_BasicServiceGroupList__item_,
        Ext_BasicServiceGroupList,
        maxNumOfExt_BasicServiceGroups,
        _CUG_Feature_basicService,
        _CUG_Feature_preferentialCUG_Indicator,
        _CUG_Feature_interCUG_Restrictions,
        _CUG_Feature_extensionContainer,
        CUG_Feature,
        InterCUG_Restrictions,
        _Ext_SS_Data_ss_Code,
        _Ext_SS_Data_ss_Status,
        _Ext_SS_Data_ss_SubscriptionOption,
        _Ext_SS_Data_basicServiceGroupList,
        _Ext_SS_Data_extensionContainer,
        Ext_SS_Data,
        _LCS_PrivacyExceptionList__item_,
        LCS_PrivacyExceptionList,
        maxNumOfPrivacyClass,
        _LCS_PrivacyClass_ss_Code,
        _LCS_PrivacyClass_ss_Status,
        _LCS_PrivacyClass_notificationToMSUser,
        _LCS_PrivacyClass_externalClientList,
        _LCS_PrivacyClass_plmnClientList,
        _LCS_PrivacyClass_extensionContainer,
        _LCS_PrivacyClass_ext_externalClientList,
        _LCS_PrivacyClass_serviceTypeList,
        LCS_PrivacyClass,
        _ExternalClientList__item_,
        ExternalClientList,
        maxNumOfExternalClient,
        _PLMNClientList__item_,
        PLMNClientList,
        maxNumOfPLMNClient,
        _Ext_ExternalClientList__item_,
        Ext_ExternalClientList,
        maxNumOfExt_ExternalClient,
        _ExternalClient_clientIdentity,
        _ExternalClient_gmlc_Restriction,
        _ExternalClient_notificationToMSUser,
        _ExternalClient_extensionContainer,
        ExternalClient,
        GMLC_Restriction,
        NotificationToMSUser,
        _ServiceTypeList__item_,
        ServiceTypeList,
        maxNumOfServiceType,
        _ServiceType_serviceTypeIdentity,
        _ServiceType_gmlc_Restriction,
        _ServiceType_notificationToMSUser,
        _ServiceType_extensionContainer,
        ServiceType,
        _MOLR_List__item_,
        MOLR_List,
        maxNumOfMOLR_Class,
        _MOLR_Class_ss_Code,
        _MOLR_Class_ss_Status,
        _MOLR_Class_extensionContainer,
        MOLR_Class,
        _ZoneCodeList__item_,
        ZoneCodeList,
        ZoneCode,
        maxNumOfZoneCodes,
        _InsertSubscriberDataRes_teleserviceList,
        _InsertSubscriberDataRes_bearerServiceList,
        _InsertSubscriberDataRes_ss_List,
        _InsertSubscriberDataRes_odb_GeneralData,
        _InsertSubscriberDataRes_regionalSubscriptionResponse,
        _InsertSubscriberDataRes_supportedCamelPhases,
        _InsertSubscriberDataRes_extensionContainer,
        _InsertSubscriberDataRes_offeredCamel4CSIs,
        _InsertSubscriberDataRes_supportedFeatures,
        _InsertSubscriberDataRes_ext_SupportedFeatures,
        InsertSubscriberDataRes,
        RegionalSubscriptionResponse,
        _DeleteSubscriberDataArg_imsi,
        _DeleteSubscriberDataArg_basicServiceList,
        _DeleteSubscriberDataArg_ss_List,
        _DeleteSubscriberDataArg_roamingRestrictionDueToUnsupportedFeature,
        _DeleteSubscriberDataArg_regionalSubscriptionIdentifier,
        _DeleteSubscriberDataArg_vbsGroupIndication,
        _DeleteSubscriberDataArg_vgcsGroupIndication,
        _DeleteSubscriberDataArg_camelSubscriptionInfoWithdraw,
        _DeleteSubscriberDataArg_extensionContainer,
        _DeleteSubscriberDataArg_gprsSubscriptionDataWithdraw,
        _DeleteSubscriberDataArg_roamingRestrictedInSgsnDueToUnsuppportedFeature,
        _DeleteSubscriberDataArg_lsaInformationWithdraw,
        _DeleteSubscriberDataArg_gmlc_ListWithdraw,
        _DeleteSubscriberDataArg_istInformationWithdraw,
        _DeleteSubscriberDataArg_specificCSI_Withdraw,
        _DeleteSubscriberDataArg_chargingCharacteristicsWithdraw,
        _DeleteSubscriberDataArg_stn_srWithdraw,
        _DeleteSubscriberDataArg_epsSubscriptionDataWithdraw,
        _DeleteSubscriberDataArg_apn_oi_replacementWithdraw,
        _DeleteSubscriberDataArg_csg_SubscriptionDeleted,
        _DeleteSubscriberDataArg_subscribedPeriodicTAU_RAU_TimerWithdraw,
        _DeleteSubscriberDataArg_subscribedPeriodicLAU_TimerWithdraw,
        _DeleteSubscriberDataArg_subscribed_vsrvccWithdraw,
        _DeleteSubscriberDataArg_vplmn_Csg_SubscriptionDeleted,
        _DeleteSubscriberDataArg_additionalMSISDN_Withdraw,
        _DeleteSubscriberDataArg_cs_to_ps_SRVCC_Withdraw,
        _DeleteSubscriberDataArg_imsiGroupIdList_Withdraw,
        _DeleteSubscriberDataArg_userPlaneIntegrityProtectionWithdraw,
        _DeleteSubscriberDataArg_dl_Buffering_Suggested_Packet_Count_Withdraw,
        _DeleteSubscriberDataArg_ue_UsageTypeWithdraw,
        _DeleteSubscriberDataArg_reset_idsWithdraw,
        _DeleteSubscriberDataArg_iab_OperationWithdraw,
        DeleteSubscriberDataArg,
        SpecificCSI_Withdraw,
        _GPRSSubscriptionDataWithdraw_allGPRSData,
        _GPRSSubscriptionDataWithdraw_contextIdList,
        GPRSSubscriptionDataWithdraw,
        _EPS_SubscriptionDataWithdraw_allEPS_Data,
        _EPS_SubscriptionDataWithdraw_contextIdList,
        EPS_SubscriptionDataWithdraw,
        _ContextIdList__item_,
        ContextIdList,
        _LSAInformationWithdraw_allLSAData,
        _LSAInformationWithdraw_lsaIdentityList,
        LSAInformationWithdraw,
        _LSAIdentityList__item_,
        LSAIdentityList,
        _BasicServiceList__item_,
        BasicServiceList,
        maxNumOfBasicServices,
        _DeleteSubscriberDataRes_regionalSubscriptionResponse,
        _DeleteSubscriberDataRes_extensionContainer,
        DeleteSubscriberDataRes,
        _VlrCamelSubscriptionInfo_o_CSI,
        _VlrCamelSubscriptionInfo_extensionContainer,
        _VlrCamelSubscriptionInfo_ss_CSI,
        _VlrCamelSubscriptionInfo_o_BcsmCamelTDP_CriteriaList,
        _VlrCamelSubscriptionInfo_tif_CSI,
        _VlrCamelSubscriptionInfo_m_CSI,
        _VlrCamelSubscriptionInfo_mo_sms_CSI,
        _VlrCamelSubscriptionInfo_vt_CSI,
        _VlrCamelSubscriptionInfo_t_BCSM_CAMEL_TDP_CriteriaList,
        _VlrCamelSubscriptionInfo_d_CSI,
        _VlrCamelSubscriptionInfo_mt_sms_CSI,
        _VlrCamelSubscriptionInfo_mt_smsCAMELTDP_CriteriaList,
        VlrCamelSubscriptionInfo,
        _MT_smsCAMELTDP_CriteriaList__item_,
        MT_smsCAMELTDP_CriteriaList,
        _MT_smsCAMELTDP_Criteria_sms_TriggerDetectionPoint,
        _MT_smsCAMELTDP_Criteria_tpdu_TypeCriterion,
        MT_smsCAMELTDP_Criteria,
        _TPDU_TypeCriterion__item_,
        TPDU_TypeCriterion,
        maxNumOfTPDUTypes,
        MT_SMS_TPDU_Type,
        _D_CSI_dp_AnalysedInfoCriteriaList,
        _D_CSI_camelCapabilityHandling,
        _D_CSI_extensionContainer,
        _D_CSI_notificationToCSE,
        _D_CSI_csi_Active,
        D_CSI,
        _DP_AnalysedInfoCriteriaList__item_,
        DP_AnalysedInfoCriteriaList,
        maxNumOfDP_AnalysedInfoCriteria,
        _DP_AnalysedInfoCriterium_dialledNumber,
        _DP_AnalysedInfoCriterium_serviceKey,
        _DP_AnalysedInfoCriterium_gsmSCF_Address,
        _DP_AnalysedInfoCriterium_defaultCallHandling,
        _DP_AnalysedInfoCriterium_extensionContainer,
        DP_AnalysedInfoCriterium,
        _SS_CSI_ss_CamelData,
        _SS_CSI_extensionContainer,
        _SS_CSI_notificationToCSE,
        _SS_CSI_csi_Active,
        SS_CSI,
        _SS_CamelData_ss_EventList,
        _SS_CamelData_gsmSCF_Address,
        _SS_CamelData_extensionContainer,
        SS_CamelData,
        _SS_EventList__item_,
        SS_EventList,
        maxNumOfCamelSSEvents,
        _O_CSI_o_BcsmCamelTDPDataList,
        _O_CSI_extensionContainer,
        _O_CSI_camelCapabilityHandling,
        _O_CSI_notificationToCSE,
        _O_CSI_csiActive,
        O_CSI,
        _O_BcsmCamelTDPDataList__item_,
        O_BcsmCamelTDPDataList,
        maxNumOfCamelTDPData,
        _O_BcsmCamelTDPData_o_BcsmTriggerDetectionPoint,
        _O_BcsmCamelTDPData_serviceKey,
        _O_BcsmCamelTDPData_gsmSCF_Address,
        _O_BcsmCamelTDPData_defaultCallHandling,
        _O_BcsmCamelTDPData_extensionContainer,
        O_BcsmCamelTDPData,
        ServiceKey,
        O_BcsmTriggerDetectionPoint,
        _O_BcsmCamelTDPCriteriaList__item_,
        O_BcsmCamelTDPCriteriaList,
        _T_BCSM_CAMEL_TDP_CriteriaList__item_,
        T_BCSM_CAMEL_TDP_CriteriaList,
        _O_BcsmCamelTDP_Criteria_o_BcsmTriggerDetectionPoint,
        _O_BcsmCamelTDP_Criteria_destinationNumberCriteria,
        _O_BcsmCamelTDP_Criteria_basicServiceCriteria,
        _O_BcsmCamelTDP_Criteria_callTypeCriteria,
        _O_BcsmCamelTDP_Criteria_o_CauseValueCriteria,
        _O_BcsmCamelTDP_Criteria_extensionContainer,
        O_BcsmCamelTDP_Criteria,
        _T_BCSM_CAMEL_TDP_Criteria_t_BCSM_TriggerDetectionPoint,
        _T_BCSM_CAMEL_TDP_Criteria_basicServiceCriteria,
        _T_BCSM_CAMEL_TDP_Criteria_t_CauseValueCriteria,
        T_BCSM_CAMEL_TDP_Criteria,
        _DestinationNumberCriteria_matchType,
        _DestinationNumberCriteria_destinationNumberList,
        _DestinationNumberCriteria_destinationNumberLengthList,
        DestinationNumberCriteria,
        _DestinationNumberList__item_,
        DestinationNumberList,
        _DestinationNumberLengthList__item_,
        DestinationNumberLengthList,
        _BasicServiceCriteria__item_,
        BasicServiceCriteria,
        maxNumOfISDN_AddressDigits,
        maxNumOfCamelDestinationNumbers,
        maxNumOfCamelDestinationNumberLengths,
        maxNumOfCamelBasicServiceCriteria,
        CallTypeCriteria,
        MatchType,
        _O_CauseValueCriteria__item_,
        O_CauseValueCriteria,
        _T_CauseValueCriteria__item_,
        T_CauseValueCriteria,
        maxNumOfCAMEL_O_CauseValueCriteria,
        maxNumOfCAMEL_T_CauseValueCriteria,
        CauseValue,
        DefaultCallHandling,
        CamelCapabilityHandling,
        SupportedCamelPhases,
        OfferedCamel4CSIs,
        OfferedCamel4Functionalities,
        _SMS_CSI_sms_CAMEL_TDP_DataList,
        _SMS_CSI_camelCapabilityHandling,
        _SMS_CSI_extensionContainer,
        _SMS_CSI_notificationToCSE,
        _SMS_CSI_csi_Active,
        SMS_CSI,
        _SMS_CAMEL_TDP_DataList__item_,
        SMS_CAMEL_TDP_DataList,
        _SMS_CAMEL_TDP_Data_sms_TriggerDetectionPoint,
        _SMS_CAMEL_TDP_Data_serviceKey,
        _SMS_CAMEL_TDP_Data_gsmSCF_Address,
        _SMS_CAMEL_TDP_Data_defaultSMS_Handling,
        _SMS_CAMEL_TDP_Data_extensionContainer,
        SMS_CAMEL_TDP_Data,
        SMS_TriggerDetectionPoint,
        DefaultSMS_Handling,
        _M_CSI_mobilityTriggers,
        _M_CSI_serviceKey,
        _M_CSI_gsmSCF_Address,
        _M_CSI_extensionContainer,
        _M_CSI_notificationToCSE,
        _M_CSI_csi_Active,
        M_CSI,
        _MG_CSI_mobilityTriggers,
        _MG_CSI_serviceKey,
        _MG_CSI_gsmSCF_Address,
        _MG_CSI_extensionContainer,
        _MG_CSI_notificationToCSE,
        _MG_CSI_csi_Active,
        MG_CSI,
        _MobilityTriggers__item_,
        MobilityTriggers,
        maxNumOfMobilityTriggers,
        MM_Code,
        _T_CSI_t_BcsmCamelTDPDataList,
        _T_CSI_extensionContainer,
        _T_CSI_camelCapabilityHandling,
        _T_CSI_notificationToCSE,
        _T_CSI_csi_Active,
        T_CSI,
        _T_BcsmCamelTDPDataList__item_,
        T_BcsmCamelTDPDataList,
        _T_BcsmCamelTDPData_t_BcsmTriggerDetectionPoint,
        _T_BcsmCamelTDPData_serviceKey,
        _T_BcsmCamelTDPData_gsmSCF_Address,
        _T_BcsmCamelTDPData_defaultCallHandling,
        _T_BcsmCamelTDPData_extensionContainer,
        T_BcsmCamelTDPData,
        T_BcsmTriggerDetectionPoint,
        _SendRoutingInfoForGprsArg_imsi,
        _SendRoutingInfoForGprsArg_ggsn_Address,
        _SendRoutingInfoForGprsArg_ggsn_Number,
        _SendRoutingInfoForGprsArg_extensionContainer,
        SendRoutingInfoForGprsArg,
        _SendRoutingInfoForGprsRes_sgsn_Address,
        _SendRoutingInfoForGprsRes_ggsn_Address,
        _SendRoutingInfoForGprsRes_mobileNotReachableReason,
        _SendRoutingInfoForGprsRes_extensionContainer,
        SendRoutingInfoForGprsRes,
        _FailureReportArg_imsi,
        _FailureReportArg_ggsn_Number,
        _FailureReportArg_ggsn_Address,
        _FailureReportArg_extensionContainer,
        FailureReportArg,
        _FailureReportRes_ggsn_Address,
        _FailureReportRes_extensionContainer,
        FailureReportRes,
        _NoteMsPresentForGprsArg_imsi,
        _NoteMsPresentForGprsArg_sgsn_Address,
        _NoteMsPresentForGprsArg_ggsn_Address,
        _NoteMsPresentForGprsArg_extensionContainer,
        NoteMsPresentForGprsArg,
        _NoteMsPresentForGprsRes_extensionContainer,
        NoteMsPresentForGprsRes,
        _ResetArg_sendingNodenumber,
        _ResetArg_hlr_List,
        _ResetArg_extensionContainer,
        _ResetArg_reset_Id_List,
        _ResetArg_subscriptionData,
        _ResetArg_subscriptionDataDeletion,
        ResetArg,
        _SendingNode_Number_hlr_Number,
        _SendingNode_Number_css_Number,
        SendingNode_Number,
        _RestoreDataArg_imsi,
        _RestoreDataArg_lmsi,
        _RestoreDataArg_extensionContainer,
        _RestoreDataArg_vlr_Capability,
        _RestoreDataArg_restorationIndicator,
        RestoreDataArg,
        _RestoreDataRes_hlr_Number,
        _RestoreDataRes_msNotReachable,
        _RestoreDataRes_extensionContainer,
        RestoreDataRes,
        _VBSDataList__item_,
        VBSDataList,
        _VGCSDataList__item_,
        VGCSDataList,
        maxNumOfVBSGroupIds,
        maxNumOfVGCSGroupIds,
        _VoiceGroupCallData_groupId,
        _VoiceGroupCallData_extensionContainer,
        _VoiceGroupCallData_additionalSubscriptions,
        _VoiceGroupCallData_additionalInfo,
        _VoiceGroupCallData_longGroupId,
        VoiceGroupCallData,
        AdditionalInfo,
        AdditionalSubscriptions,
        _VoiceBroadcastData_groupid,
        _VoiceBroadcastData_broadcastInitEntitlement,
        _VoiceBroadcastData_extensionContainer,
        _VoiceBroadcastData_longGroupId,
        VoiceBroadcastData,
        GroupId,
        Long_GroupId,
        _ProvideSubscriberInfoArg_imsi,
        _ProvideSubscriberInfoArg_lmsi,
        _ProvideSubscriberInfoArg_requestedInfo,
        _ProvideSubscriberInfoArg_extensionContainer,
        _ProvideSubscriberInfoArg_callPriority,
        ProvideSubscriberInfoArg,
        _ProvideSubscriberInfoRes_subscriberInfo,
        _ProvideSubscriberInfoRes_extensionContainer,
        ProvideSubscriberInfoRes,
        _SubscriberInfo_locationInformation,
        _SubscriberInfo_subscriberState,
        _SubscriberInfo_extensionContainer,
        _SubscriberInfo_locationInformationGPRS,
        _SubscriberInfo_ps_SubscriberState,
        _SubscriberInfo_imei,
        _SubscriberInfo_ms_Classmark2,
        _SubscriberInfo_gprs_MS_Class,
        _SubscriberInfo_mnpInfoRes,
        _SubscriberInfo_imsVoiceOverPS_SessionsIndication,
        _SubscriberInfo_lastUE_ActivityTime,
        _SubscriberInfo_lastRAT_Type,
        _SubscriberInfo_eps_SubscriberState,
        _SubscriberInfo_locationInformationEPS,
        _SubscriberInfo_timeZone,
        _SubscriberInfo_daylightSavingTime,
        _SubscriberInfo_locationInformation5GS,
        SubscriberInfo,
        IMS_VoiceOverPS_SessionsInd,
        TimeZone,
        DaylightSavingTime,
        _MNPInfoRes_routeingNumber,
        _MNPInfoRes_imsi,
        _MNPInfoRes_msisdn,
        _MNPInfoRes_numberPortabilityStatus,
        _MNPInfoRes_extensionContainer,
        MNPInfoRes,
        RouteingNumber,
        NumberPortabilityStatus,
        MS_Classmark2,
        _GPRSMSClass_mSNetworkCapability,
        _GPRSMSClass_mSRadioAccessCapability,
        GPRSMSClass,
        MSNetworkCapability,
        MSRadioAccessCapability,
        _RequestedInfo_locationInformation,
        _RequestedInfo_subscriberState,
        _RequestedInfo_extensionContainer,
        _RequestedInfo_currentLocation,
        _RequestedInfo_requestedDomain,
        _RequestedInfo_imei,
        _RequestedInfo_ms_classmark,
        _RequestedInfo_mnpRequestedInfo,
        _RequestedInfo_locationInformationEPS_Supported,
        _RequestedInfo_t_adsData,
        _RequestedInfo_requestedNodes,
        _RequestedInfo_servingNodeIndication,
        _RequestedInfo_localTimeZoneRequest,
        RequestedInfo,
        DomainType,
        RequestedNodes,
        _LocationInformation_ageOfLocationInformation,
        _LocationInformation_geographicalInformation,
        _LocationInformation_vlr_number,
        _LocationInformation_locationNumber,
        _LocationInformation_cellGlobalIdOrServiceAreaIdOrLAI,
        _LocationInformation_extensionContainer,
        _LocationInformation_selectedLSA_Id,
        _LocationInformation_msc_Number,
        _LocationInformation_geodeticInformation,
        _LocationInformation_currentLocationRetrieved,
        _LocationInformation_sai_Present,
        _LocationInformation_locationInformationEPS,
        _LocationInformation_userCSGInformation,
        LocationInformation,
        _LocationInformationEPS_e_utranCellGlobalIdentity,
        _LocationInformationEPS_trackingAreaIdentity,
        _LocationInformationEPS_extensionContainer,
        _LocationInformationEPS_geographicalInformation,
        _LocationInformationEPS_geodeticInformation,
        _LocationInformationEPS_currentLocationRetrieved,
        _LocationInformationEPS_ageOfLocationInformation,
        _LocationInformationEPS_mme_Name,
        LocationInformationEPS,
        _LocationInformationGPRS_cellGlobalIdOrServiceAreaIdOrLAI,
        _LocationInformationGPRS_routeingAreaIdentity,
        _LocationInformationGPRS_geographicalInformation,
        _LocationInformationGPRS_sgsn_Number,
        _LocationInformationGPRS_selectedLSAIdentity,
        _LocationInformationGPRS_extensionContainer,
        _LocationInformationGPRS_sai_Present,
        _LocationInformationGPRS_geodeticInformation,
        _LocationInformationGPRS_currentLocationRetrieved,
        _LocationInformationGPRS_ageOfLocationInformation,
        _LocationInformationGPRS_userCSGInformation,
        LocationInformationGPRS,
        _LocationInformation5GS_nrCellGlobalIdentity,
        _LocationInformation5GS_e_utranCellGlobalIdentity,
        _LocationInformation5GS_geographicalInformation,
        _LocationInformation5GS_geodeticInformation,
        _LocationInformation5GS_amf_address,
        _LocationInformation5GS_trackingAreaIdentity,
        _LocationInformation5GS_currentLocationRetrieved,
        _LocationInformation5GS_ageOfLocationInformation,
        _LocationInformation5GS_vplmnId,
        _LocationInformation5GS_localtimeZone,
        _LocationInformation5GS_rat_Type,
        _LocationInformation5GS_extensionContainer,
        _LocationInformation5GS_nrTrackingAreaIdentity,
        LocationInformation5GS,
        _UserCSGInformation_csg_Id,
        _UserCSGInformation_extensionContainer,
        _UserCSGInformation_accessMode,
        _UserCSGInformation_cmi,
        UserCSGInformation,
        GeographicalInformation,
        GeodeticInformation,
        LocationNumber,
        _SubscriberState_assumedIdle,
        _SubscriberState_camelBusy,
        _SubscriberState_netDetNotReachable,
        _SubscriberState_notProvidedFromVLR,
        SubscriberState,
        _PS_SubscriberState_notProvidedFromSGSNorMME,
        _PS_SubscriberState_ps_Detached,
        _PS_SubscriberState_ps_AttachedNotReachableForPaging,
        _PS_SubscriberState_ps_AttachedReachableForPaging,
        _PS_SubscriberState_ps_PDP_ActiveNotReachableForPaging,
        _PS_SubscriberState_ps_PDP_ActiveReachableForPaging,
        _PS_SubscriberState_netDetNotReachable,
        PS_SubscriberState,
        _PDP_ContextInfoList__item_,
        PDP_ContextInfoList,
        _PDP_ContextInfo_pdp_ContextIdentifier,
        _PDP_ContextInfo_pdp_ContextActive,
        _PDP_ContextInfo_pdp_Type,
        _PDP_ContextInfo_pdp_Address,
        _PDP_ContextInfo_apn_Subscribed,
        _PDP_ContextInfo_apn_InUse,
        _PDP_ContextInfo_nsapi,
        _PDP_ContextInfo_transactionId,
        _PDP_ContextInfo_teid_ForGnAndGp,
        _PDP_ContextInfo_teid_ForIu,
        _PDP_ContextInfo_ggsn_Address,
        _PDP_ContextInfo_qos_Subscribed,
        _PDP_ContextInfo_qos_Requested,
        _PDP_ContextInfo_qos_Negotiated,
        _PDP_ContextInfo_chargingId,
        _PDP_ContextInfo_chargingCharacteristics,
        _PDP_ContextInfo_rnc_Address,
        _PDP_ContextInfo_extensionContainer,
        _PDP_ContextInfo_qos2_Subscribed,
        _PDP_ContextInfo_qos2_Requested,
        _PDP_ContextInfo_qos2_Negotiated,
        _PDP_ContextInfo_qos3_Subscribed,
        _PDP_ContextInfo_qos3_Requested,
        _PDP_ContextInfo_qos3_Negotiated,
        _PDP_ContextInfo_qos4_Subscribed,
        _PDP_ContextInfo_qos4_Requested,
        _PDP_ContextInfo_qos4_Negotiated,
        _PDP_ContextInfo_ext_pdp_Type,
        _PDP_ContextInfo_ext_pdp_Address,
        PDP_ContextInfo,
        NSAPI,
        TransactionId,
        TEID,
        GPRSChargingID,
        NotReachableReason,
        _AnyTimeInterrogationArg_subscriberIdentity,
        _AnyTimeInterrogationArg_requestedInfo,
        _AnyTimeInterrogationArg_gsmSCF_Address,
        _AnyTimeInterrogationArg_extensionContainer,
        AnyTimeInterrogationArg,
        _AnyTimeInterrogationRes_subscriberInfo,
        _AnyTimeInterrogationRes_extensionContainer,
        AnyTimeInterrogationRes,
        _AnyTimeSubscriptionInterrogationArg_subscriberIdentity,
        _AnyTimeSubscriptionInterrogationArg_requestedSubscriptionInfo,
        _AnyTimeSubscriptionInterrogationArg_gsmSCF_Address,
        _AnyTimeSubscriptionInterrogationArg_extensionContainer,
        _AnyTimeSubscriptionInterrogationArg_longFTN_Supported,
        AnyTimeSubscriptionInterrogationArg,
        _AnyTimeSubscriptionInterrogationRes_callForwardingData,
        _AnyTimeSubscriptionInterrogationRes_callBarringData,
        _AnyTimeSubscriptionInterrogationRes_odb_Info,
        _AnyTimeSubscriptionInterrogationRes_camel_SubscriptionInfo,
        _AnyTimeSubscriptionInterrogationRes_supportedVLR_CAMEL_Phases,
        _AnyTimeSubscriptionInterrogationRes_supportedSGSN_CAMEL_Phases,
        _AnyTimeSubscriptionInterrogationRes_extensionContainer,
        _AnyTimeSubscriptionInterrogationRes_offeredCamel4CSIsInVLR,
        _AnyTimeSubscriptionInterrogationRes_offeredCamel4CSIsInSGSN,
        _AnyTimeSubscriptionInterrogationRes_msisdn_BS_List,
        _AnyTimeSubscriptionInterrogationRes_csg_SubscriptionDataList,
        _AnyTimeSubscriptionInterrogationRes_cw_Data,
        _AnyTimeSubscriptionInterrogationRes_ch_Data,
        _AnyTimeSubscriptionInterrogationRes_clip_Data,
        _AnyTimeSubscriptionInterrogationRes_clir_Data,
        _AnyTimeSubscriptionInterrogationRes_ect_data,
        AnyTimeSubscriptionInterrogationRes,
        _CallWaitingData_cwFeatureList,
        _CallWaitingData_notificationToCSE,
        CallWaitingData,
        _Ext_CwFeatureList__item_,
        Ext_CwFeatureList,
        _Ext_CwFeature_basicService,
        _Ext_CwFeature_ss_Status,
        Ext_CwFeature,
        _ClipData_ss_Status,
        _ClipData_overrideCategory,
        _ClipData_notificationToCSE,
        ClipData,
        _ClirData_ss_Status,
        _ClirData_cliRestrictionOption,
        _ClirData_notificationToCSE,
        ClirData,
        _CallHoldData_ss_Status,
        _CallHoldData_notificationToCSE,
        CallHoldData,
        _EctData_ss_Status,
        _EctData_notificationToCSE,
        EctData,
        _RequestedSubscriptionInfo_requestedSS_Info,
        _RequestedSubscriptionInfo_odb,
        _RequestedSubscriptionInfo_requestedCAMEL_SubscriptionInfo,
        _RequestedSubscriptionInfo_supportedVLR_CAMEL_Phases,
        _RequestedSubscriptionInfo_supportedSGSN_CAMEL_Phases,
        _RequestedSubscriptionInfo_extensionContainer,
        _RequestedSubscriptionInfo_additionalRequestedCAMEL_SubscriptionInfo,
        _RequestedSubscriptionInfo_msisdn_BS_List,
        _RequestedSubscriptionInfo_csg_SubscriptionDataRequested,
        _RequestedSubscriptionInfo_cw_Info,
        _RequestedSubscriptionInfo_clip_Info,
        _RequestedSubscriptionInfo_clir_Info,
        _RequestedSubscriptionInfo_hold_Info,
        _RequestedSubscriptionInfo_ect_Info,
        RequestedSubscriptionInfo,
        _MSISDN_BS_List__item_,
        MSISDN_BS_List,
        maxNumOfMSISDN,
        _MSISDN_BS_msisdn,
        _MSISDN_BS_basicServiceList,
        _MSISDN_BS_extensionContainer,
        MSISDN_BS,
        RequestedCAMEL_SubscriptionInfo,
        AdditionalRequestedCAMEL_SubscriptionInfo,
        _CallForwardingData_forwardingFeatureList,
        _CallForwardingData_notificationToCSE,
        _CallForwardingData_extensionContainer,
        CallForwardingData,
        _CallBarringData_callBarringFeatureList,
        _CallBarringData_password,
        _CallBarringData_wrongPasswordAttemptsCounter,
        _CallBarringData_notificationToCSE,
        _CallBarringData_extensionContainer,
        CallBarringData,
        WrongPasswordAttemptsCounter,
        _ODB_Info_odb_Data,
        _ODB_Info_notificationToCSE,
        _ODB_Info_extensionContainer,
        ODB_Info,
        _CAMEL_SubscriptionInfo_o_CSI,
        _CAMEL_SubscriptionInfo_o_BcsmCamelTDP_CriteriaList,
        _CAMEL_SubscriptionInfo_d_CSI,
        _CAMEL_SubscriptionInfo_t_CSI,
        _CAMEL_SubscriptionInfo_t_BCSM_CAMEL_TDP_CriteriaList,
        _CAMEL_SubscriptionInfo_vt_CSI,
        _CAMEL_SubscriptionInfo_vt_BCSM_CAMEL_TDP_CriteriaList,
        _CAMEL_SubscriptionInfo_tif_CSI,
        _CAMEL_SubscriptionInfo_tif_CSI_NotificationToCSE,
        _CAMEL_SubscriptionInfo_gprs_CSI,
        _CAMEL_SubscriptionInfo_mo_sms_CSI,
        _CAMEL_SubscriptionInfo_ss_CSI,
        _CAMEL_SubscriptionInfo_m_CSI,
        _CAMEL_SubscriptionInfo_extensionContainer,
        _CAMEL_SubscriptionInfo_specificCSIDeletedList,
        _CAMEL_SubscriptionInfo_mt_sms_CSI,
        _CAMEL_SubscriptionInfo_mt_smsCAMELTDP_CriteriaList,
        _CAMEL_SubscriptionInfo_mg_csi,
        _CAMEL_SubscriptionInfo_o_IM_CSI,
        _CAMEL_SubscriptionInfo_o_IM_BcsmCamelTDP_CriteriaList,
        _CAMEL_SubscriptionInfo_d_IM_CSI,
        _CAMEL_SubscriptionInfo_vt_IM_CSI,
        _CAMEL_SubscriptionInfo_vt_IM_BCSM_CAMEL_TDP_CriteriaList,
        CAMEL_SubscriptionInfo,
        _AnyTimeModificationArg_subscriberIdentity,
        _AnyTimeModificationArg_gsmSCF_Address,
        _AnyTimeModificationArg_modificationRequestFor_CF_Info,
        _AnyTimeModificationArg_modificationRequestFor_CB_Info,
        _AnyTimeModificationArg_modificationRequestFor_CSI,
        _AnyTimeModificationArg_extensionContainer,
        _AnyTimeModificationArg_longFTN_Supported,
        _AnyTimeModificationArg_modificationRequestFor_ODB_data,
        _AnyTimeModificationArg_modificationRequestFor_IP_SM_GW_Data,
        _AnyTimeModificationArg_activationRequestForUE_reachability,
        _AnyTimeModificationArg_modificationRequestFor_CSG,
        _AnyTimeModificationArg_modificationRequestFor_CW_Data,
        _AnyTimeModificationArg_modificationRequestFor_CLIP_Data,
        _AnyTimeModificationArg_modificationRequestFor_CLIR_Data,
        _AnyTimeModificationArg_modificationRequestFor_HOLD_Data,
        _AnyTimeModificationArg_modificationRequestFor_ECT_Data,
        AnyTimeModificationArg,
        _ModificationRequestFor_CW_Info_basicService,
        _ModificationRequestFor_CW_Info_ss_Status,
        _ModificationRequestFor_CW_Info_modifyNotificationToCSE,
        _ModificationRequestFor_CW_Info_extensionContainer,
        ModificationRequestFor_CW_Info,
        _ModificationRequestFor_CH_Info_ss_Status,
        _ModificationRequestFor_CH_Info_modifyNotificationToCSE,
        _ModificationRequestFor_CH_Info_extensionContainer,
        ModificationRequestFor_CH_Info,
        _ModificationRequestFor_ECT_Info_ss_Status,
        _ModificationRequestFor_ECT_Info_modifyNotificationToCSE,
        _ModificationRequestFor_ECT_Info_extensionContainer,
        ModificationRequestFor_ECT_Info,
        _ModificationRequestFor_CLIR_Info_ss_Status,
        _ModificationRequestFor_CLIR_Info_cliRestrictionOption,
        _ModificationRequestFor_CLIR_Info_modifyNotificationToCSE,
        _ModificationRequestFor_CLIR_Info_extensionContainer,
        ModificationRequestFor_CLIR_Info,
        _ModificationRequestFor_CLIP_Info_ss_Status,
        _ModificationRequestFor_CLIP_Info_overrideCategory,
        _ModificationRequestFor_CLIP_Info_modifyNotificationToCSE,
        _ModificationRequestFor_CLIP_Info_extensionContainer,
        ModificationRequestFor_CLIP_Info,
        _ModificationRequestFor_CSG_modifyNotificationToCSE,
        _ModificationRequestFor_CSG_extensionContainer,
        ModificationRequestFor_CSG,
        RequestedServingNode,
        ServingNode,
        _AnyTimeModificationRes_ss_InfoFor_CSE,
        _AnyTimeModificationRes_camel_SubscriptionInfo,
        _AnyTimeModificationRes_extensionContainer,
        _AnyTimeModificationRes_odb_Info,
        _AnyTimeModificationRes_cw_Data,
        _AnyTimeModificationRes_ch_Data,
        _AnyTimeModificationRes_clip_Data,
        _AnyTimeModificationRes_clir_Data,
        _AnyTimeModificationRes_ect_data,
        _AnyTimeModificationRes_serviceCentreAddress,
        AnyTimeModificationRes,
        _ModificationRequestFor_CF_Info_ss_Code,
        _ModificationRequestFor_CF_Info_basicService,
        _ModificationRequestFor_CF_Info_ss_Status,
        _ModificationRequestFor_CF_Info_forwardedToNumber,
        _ModificationRequestFor_CF_Info_forwardedToSubaddress,
        _ModificationRequestFor_CF_Info_noReplyConditionTime,
        _ModificationRequestFor_CF_Info_modifyNotificationToCSE,
        _ModificationRequestFor_CF_Info_extensionContainer,
        ModificationRequestFor_CF_Info,
        _ModificationRequestFor_CB_Info_ss_Code,
        _ModificationRequestFor_CB_Info_basicService,
        _ModificationRequestFor_CB_Info_ss_Status,
        _ModificationRequestFor_CB_Info_password,
        _ModificationRequestFor_CB_Info_wrongPasswordAttemptsCounter,
        _ModificationRequestFor_CB_Info_modifyNotificationToCSE,
        _ModificationRequestFor_CB_Info_extensionContainer,
        ModificationRequestFor_CB_Info,
        _ModificationRequestFor_ODB_data_odb_data,
        _ModificationRequestFor_ODB_data_modifyNotificationToCSE,
        _ModificationRequestFor_ODB_data_extensionContainer,
        ModificationRequestFor_ODB_data,
        _ModificationRequestFor_CSI_requestedCamel_SubscriptionInfo,
        _ModificationRequestFor_CSI_modifyNotificationToCSE,
        _ModificationRequestFor_CSI_modifyCSI_State,
        _ModificationRequestFor_CSI_extensionContainer,
        _ModificationRequestFor_CSI_additionalRequestedCAMEL_SubscriptionInfo,
        ModificationRequestFor_CSI,
        _ModificationRequestFor_IP_SM_GW_Data_modifyRegistrationStatus,
        _ModificationRequestFor_IP_SM_GW_Data_extensionContainer,
        _ModificationRequestFor_IP_SM_GW_Data_ip_sm_gw_DiameterAddress,
        ModificationRequestFor_IP_SM_GW_Data,
        ModificationInstruction,
        _NoteSubscriberDataModifiedArg_imsi,
        _NoteSubscriberDataModifiedArg_msisdn,
        _NoteSubscriberDataModifiedArg_forwardingInfoFor_CSE,
        _NoteSubscriberDataModifiedArg_callBarringInfoFor_CSE,
        _NoteSubscriberDataModifiedArg_odb_Info,
        _NoteSubscriberDataModifiedArg_camel_SubscriptionInfo,
        _NoteSubscriberDataModifiedArg_allInformationSent,
        _NoteSubscriberDataModifiedArg_extensionContainer,
        _NoteSubscriberDataModifiedArg_ue_reachable,
        _NoteSubscriberDataModifiedArg_csg_SubscriptionDataList,
        _NoteSubscriberDataModifiedArg_cw_Data,
        _NoteSubscriberDataModifiedArg_ch_Data,
        _NoteSubscriberDataModifiedArg_clip_Data,
        _NoteSubscriberDataModifiedArg_clir_Data,
        _NoteSubscriberDataModifiedArg_ect_data,
        NoteSubscriberDataModifiedArg,
        _NoteSubscriberDataModifiedRes_extensionContainer,
        NoteSubscriberDataModifiedRes,
        _NoteMM_EventArg_serviceKey,
        _NoteMM_EventArg_eventMet,
        _NoteMM_EventArg_imsi,
        _NoteMM_EventArg_msisdn,
        _NoteMM_EventArg_locationInformation,
        _NoteMM_EventArg_supportedCAMELPhases,
        _NoteMM_EventArg_extensionContainer,
        _NoteMM_EventArg_locationInformationGPRS,
        _NoteMM_EventArg_offeredCamel4Functionalities,
        NoteMM_EventArg,
        _NoteMM_EventRes_extensionContainer,
        NoteMM_EventRes,
        _Ext_SS_InfoFor_CSE_forwardingInfoFor_CSE,
        _Ext_SS_InfoFor_CSE_callBarringInfoFor_CSE,
        Ext_SS_InfoFor_CSE,
        _Ext_ForwardingInfoFor_CSE_ss_Code,
        _Ext_ForwardingInfoFor_CSE_forwardingFeatureList,
        _Ext_ForwardingInfoFor_CSE_notificationToCSE,
        _Ext_ForwardingInfoFor_CSE_extensionContainer,
        Ext_ForwardingInfoFor_CSE,
        _Ext_CallBarringInfoFor_CSE_ss_Code,
        _Ext_CallBarringInfoFor_CSE_callBarringFeatureList,
        _Ext_CallBarringInfoFor_CSE_password,
        _Ext_CallBarringInfoFor_CSE_wrongPasswordAttemptsCounter,
        _Ext_CallBarringInfoFor_CSE_notificationToCSE,
        _Ext_CallBarringInfoFor_CSE_extensionContainer,
        Ext_CallBarringInfoFor_CSE,
        _UpdateVcsgLocationArg_imsi,
        _UpdateVcsgLocationArg_msisdn,
        _UpdateVcsgLocationArg_vlr_Number,
        _UpdateVcsgLocationArg_sgsn_Number,
        _UpdateVcsgLocationArg_extensionContainer,
        UpdateVcsgLocationArg,
        _UpdateVcsgLocationRes_temporaryEmptySubscriptiondataIndicator,
        _UpdateVcsgLocationRes_extensionContainer,
        UpdateVcsgLocationRes,
        _CancelVcsgLocationArg_identity,
        _CancelVcsgLocationArg_extensionContainer,
        CancelVcsgLocationArg,
        _CancelVcsgLocationRes_extensionContainer,
        CancelVcsgLocationRes,
    ]

class MAP_MobileServiceOperations:

    _name_  = 'MAP-MobileServiceOperations'
    _oid_   = [0, 4, 0, 0, 1, 3, 5, 19]
    
    _obj_ = [
        'updateLocation',
        'cancelLocation',
        'purgeMS',
        'sendIdentification',
        'updateGprsLocation',
        'provideSubscriberInfo',
        'anyTimeInterrogation',
        'anyTimeSubscriptionInterrogation',
        'anyTimeModification',
        'noteSubscriberDataModified',
        'prepareHandover',
        'sendEndSignal',
        'processAccessSignalling',
        'forwardAccessSignalling',
        'prepareSubsequentHandover',
        'sendAuthenticationInfo',
        'authenticationFailureReport',
        'checkIMEI',
        'insertSubscriberData',
        'deleteSubscriberData',
        'reset',
        'forwardCheckSS-Indication',
        'restoreData',
        'sendRoutingInfoForGprs',
        'failureReport',
        'noteMsPresentForGprs',
        'noteMM-Event',
        'updateVcsgLocation',
        'cancelVcsgLocation',
        ]
    _type_ = [
        ]
    _set_ = [
        ]
    _val_ = [
        'updateLocation',
        'cancelLocation',
        'purgeMS',
        'sendIdentification',
        'updateGprsLocation',
        'provideSubscriberInfo',
        'anyTimeInterrogation',
        'anyTimeSubscriptionInterrogation',
        'anyTimeModification',
        'noteSubscriberDataModified',
        'prepareHandover',
        'sendEndSignal',
        'processAccessSignalling',
        'forwardAccessSignalling',
        'prepareSubsequentHandover',
        'sendAuthenticationInfo',
        'authenticationFailureReport',
        'checkIMEI',
        'insertSubscriberData',
        'deleteSubscriberData',
        'reset',
        'forwardCheckSS-Indication',
        'restoreData',
        'sendRoutingInfoForGprs',
        'failureReport',
        'noteMsPresentForGprs',
        'noteMM-Event',
        'updateVcsgLocation',
        'cancelVcsgLocation',
        ]
    _class_ = [
        'updateLocation',
        'cancelLocation',
        'purgeMS',
        'sendIdentification',
        'updateGprsLocation',
        'provideSubscriberInfo',
        'anyTimeInterrogation',
        'anyTimeSubscriptionInterrogation',
        'anyTimeModification',
        'noteSubscriberDataModified',
        'prepareHandover',
        'sendEndSignal',
        'processAccessSignalling',
        'forwardAccessSignalling',
        'prepareSubsequentHandover',
        'sendAuthenticationInfo',
        'authenticationFailureReport',
        'checkIMEI',
        'insertSubscriberData',
        'deleteSubscriberData',
        'reset',
        'forwardCheckSS-Indication',
        'restoreData',
        'sendRoutingInfoForGprs',
        'failureReport',
        'noteMsPresentForGprs',
        'noteMM-Event',
        'updateVcsgLocation',
        'cancelVcsgLocation',
        ]
    _param_ = [
        ]
    
    #-----< updateLocation >-----#
    updateLocation = CLASS(name='updateLocation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _updateLocation_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateLocationArg')))
    _updateLocation_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'RoamingNotAllowedParam')))
    updateLocation._val = dict([('ArgumentType', _updateLocation_val_ArgumentType), ('ResultType', _updateLocation_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 2))])
    
    #-----< cancelLocation >-----#
    cancelLocation = CLASS(name='cancelLocation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _cancelLocation_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelLocationArg')))
    _cancelLocation_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    cancelLocation._val = dict([('ArgumentType', _cancelLocation_val_ArgumentType), ('ResultType', _cancelLocation_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 3))])
    
    #-----< purgeMS >-----#
    purgeMS = CLASS(name='purgeMS', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _purgeMS_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PurgeMS-Arg')))
    _purgeMS_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PurgeMS-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_2_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    purgeMS._val = dict([('ArgumentType', _purgeMS_val_ArgumentType), ('ResultType', _purgeMS_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 67))])
    
    #-----< sendIdentification >-----#
    sendIdentification = CLASS(name='sendIdentification', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _sendIdentification_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendIdentificationArg')))
    _sendIdentification_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendIdentificationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    sendIdentification._val = dict([('ArgumentType', _sendIdentification_val_ArgumentType), ('ResultType', _sendIdentification_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 55))])
    
    #-----< updateGprsLocation >-----#
    updateGprsLocation = CLASS(name='updateGprsLocation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _updateGprsLocation_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateGprsLocationArg')))
    _updateGprsLocation_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateGprsLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_3_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'RoamingNotAllowedParam')))
    updateGprsLocation._val = dict([('ArgumentType', _updateGprsLocation_val_ArgumentType), ('ResultType', _updateGprsLocation_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 23))])
    
    #-----< provideSubscriberInfo >-----#
    provideSubscriberInfo = CLASS(name='provideSubscriberInfo', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _provideSubscriberInfo_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ProvideSubscriberInfoArg')))
    _provideSubscriberInfo_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ProvideSubscriberInfoRes')))
    provideSubscriberInfo._val = dict([('ArgumentType', _provideSubscriberInfo_val_ArgumentType), ('ResultType', _provideSubscriberInfo_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 70))])
    
    #-----< anyTimeInterrogation >-----#
    anyTimeInterrogation = CLASS(name='anyTimeInterrogation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _anyTimeInterrogation_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeInterrogationArg')))
    _anyTimeInterrogation_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeInterrogationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATI-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    anyTimeInterrogation._val = dict([('ArgumentType', _anyTimeInterrogation_val_ArgumentType), ('ResultType', _anyTimeInterrogation_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_2), ('errorCode', ('local', 49))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 71))])
    
    #-----< anyTimeSubscriptionInterrogation >-----#
    anyTimeSubscriptionInterrogation = CLASS(name='anyTimeSubscriptionInterrogation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _anyTimeSubscriptionInterrogation_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeSubscriptionInterrogationArg')))
    _anyTimeSubscriptionInterrogation_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeSubscriptionInterrogationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATSI-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BearerServNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TeleservNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSS-OperationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-NotAvailableParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'InformationNotAvailableParam')))
    anyTimeSubscriptionInterrogation._val = dict([('ArgumentType', _anyTimeSubscriptionInterrogation_val_ArgumentType), ('ResultType', _anyTimeSubscriptionInterrogation_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 60))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8), ('errorCode', ('local', 18))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9), ('errorCode', ('local', 62))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 62))])
    
    #-----< anyTimeModification >-----#
    anyTimeModification = CLASS(name='anyTimeModification', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _anyTimeModification_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeModificationArg')))
    _anyTimeModification_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeModificationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATM-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-SubscriptionViolationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9_0 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    __sendRoutingInfo_Errors_val_ParameterType_10 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    __sendRoutingInfo_Errors_val_ParameterType_11 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'InformationNotAvailableParam')))
    anyTimeModification._val = dict([('ArgumentType', _anyTimeModification_val_ArgumentType), ('ResultType', _anyTimeModification_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_2), ('errorCode', ('local', 61))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_0), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_0), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10), ('errorCode', ('local', 20))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_11), ('errorCode', ('local', 62))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 65))])
    
    #-----< noteSubscriberDataModified >-----#
    noteSubscriberDataModified = CLASS(name='noteSubscriberDataModified', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _noteSubscriberDataModified_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteSubscriberDataModifiedArg')))
    _noteSubscriberDataModified_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteSubscriberDataModifiedRes')))
    noteSubscriberDataModified._val = dict([('ArgumentType', _noteSubscriberDataModified_val_ArgumentType), ('ResultType', _noteSubscriberDataModified_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 5))])
    
    #-----< prepareHandover >-----#
    prepareHandover = CLASS(name='prepareHandover', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _prepareHandover_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareHO-Arg')))
    _prepareHandover_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareHO-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TargetCellOutsideGCA-Param')))
    prepareHandover._val = dict([('ArgumentType', _prepareHandover_val_ArgumentType), ('ResultType', _prepareHandover_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('errorCode', ('local', 25))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_2), ('errorCode', ('local', 42))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 68))])
    
    #-----< sendEndSignal >-----#
    sendEndSignal = CLASS(name='sendEndSignal', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _sendEndSignal_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendEndSignal-Arg')))
    _sendEndSignal_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendEndSignal-Res')))
    sendEndSignal._val = dict([('ArgumentType', _sendEndSignal_val_ArgumentType), ('ResultType', _sendEndSignal_val_ResultType), ('operationCode', ('local', 29))])
    
    #-----< processAccessSignalling >-----#
    processAccessSignalling = CLASS(name='processAccessSignalling', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _processAccessSignalling_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ProcessAccessSignalling-Arg')))
    processAccessSignalling._val = dict([('ArgumentType', _processAccessSignalling_val_ArgumentType), ('operationCode', ('local', 33))])
    
    #-----< forwardAccessSignalling >-----#
    forwardAccessSignalling = CLASS(name='forwardAccessSignalling', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _forwardAccessSignalling_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ForwardAccessSignalling-Arg')))
    forwardAccessSignalling._val = dict([('ArgumentType', _forwardAccessSignalling_val_ArgumentType), ('operationCode', ('local', 34))])
    
    #-----< prepareSubsequentHandover >-----#
    prepareSubsequentHandover = CLASS(name='prepareSubsequentHandover', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _prepareSubsequentHandover_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareSubsequentHO-Arg')))
    _prepareSubsequentHandover_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareSubsequentHO-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_0_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    prepareSubsequentHandover._val = dict([('ArgumentType', _prepareSubsequentHandover_val_ArgumentType), ('ResultType', _prepareSubsequentHandover_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))])
    
    #-----< sendAuthenticationInfo >-----#
    sendAuthenticationInfo = CLASS(name='sendAuthenticationInfo', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _sendAuthenticationInfo_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendAuthenticationInfoArg')))
    _sendAuthenticationInfo_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendAuthenticationInfoRes')))
    sendAuthenticationInfo._val = dict([('ArgumentType', _sendAuthenticationInfo_val_ArgumentType), ('ResultType', _sendAuthenticationInfo_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 56))])
    
    #-----< authenticationFailureReport >-----#
    authenticationFailureReport = CLASS(name='authenticationFailureReport', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _authenticationFailureReport_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AuthenticationFailureReportArg')))
    _authenticationFailureReport_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AuthenticationFailureReportRes')))
    authenticationFailureReport._val = dict([('ArgumentType', _authenticationFailureReport_val_ArgumentType), ('ResultType', _authenticationFailureReport_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 15))])
    
    #-----< checkIMEI >-----#
    checkIMEI = CLASS(name='checkIMEI', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _checkIMEI_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CheckIMEI-Arg')))
    _checkIMEI_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CheckIMEI-Res')))
    checkIMEI._val = dict([('ArgumentType', _checkIMEI_val_ArgumentType), ('ResultType', _checkIMEI_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('errorCode', ('local', 7))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 43))])
    
    #-----< insertSubscriberData >-----#
    insertSubscriberData = CLASS(name='insertSubscriberData', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _insertSubscriberData_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'InsertSubscriberDataArg')))
    _insertSubscriberData_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'InsertSubscriberDataRes')))
    __sendRoutingInfo_Errors_val_ParameterType_2_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    insertSubscriberData._val = dict([('ArgumentType', _insertSubscriberData_val_ArgumentType), ('ResultType', _insertSubscriberData_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))])
    
    #-----< deleteSubscriberData >-----#
    deleteSubscriberData = CLASS(name='deleteSubscriberData', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _deleteSubscriberData_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'DeleteSubscriberDataArg')))
    _deleteSubscriberData_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'DeleteSubscriberDataRes')))
    deleteSubscriberData._val = dict([('ArgumentType', _deleteSubscriberData_val_ArgumentType), ('ResultType', _deleteSubscriberData_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 8))])
    
    #-----< reset >-----#
    reset = CLASS(name='reset', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _reset_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ResetArg')))
    reset._val = dict([('ArgumentType', _reset_val_ArgumentType), ('operationCode', ('local', 37))])
    
    #-----< forwardCheckSS-Indication >-----#
    forwardCheckSS_Indication = CLASS(name='forwardCheckSS-Indication', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    forwardCheckSS_Indication._val = dict([('operationCode', ('local', 38))])
    
    #-----< restoreData >-----#
    restoreData = CLASS(name='restoreData', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _restoreData_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RestoreDataArg')))
    _restoreData_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RestoreDataRes')))
    restoreData._val = dict([('ArgumentType', _restoreData_val_ArgumentType), ('ResultType', _restoreData_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 57))])
    
    #-----< sendRoutingInfoForGprs >-----#
    sendRoutingInfoForGprs = CLASS(name='sendRoutingInfoForGprs', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _sendRoutingInfoForGprs_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendRoutingInfoForGprsArg')))
    _sendRoutingInfoForGprs_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendRoutingInfoForGprsRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1_3 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_0 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    sendRoutingInfoForGprs._val = dict([('ArgumentType', _sendRoutingInfoForGprs_val_ArgumentType), ('ResultType', _sendRoutingInfoForGprs_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_4), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_3), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 24))])
    
    #-----< failureReport >-----#
    failureReport = CLASS(name='failureReport', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _failureReport_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'FailureReportArg')))
    _failureReport_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'FailureReportRes')))
    failureReport._val = dict([('ArgumentType', _failureReport_val_ArgumentType), ('ResultType', _failureReport_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 25))])
    
    #-----< noteMsPresentForGprs >-----#
    noteMsPresentForGprs = CLASS(name='noteMsPresentForGprs', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _noteMsPresentForGprs_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMsPresentForGprsArg')))
    _noteMsPresentForGprs_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMsPresentForGprsRes')))
    noteMsPresentForGprs._val = dict([('ArgumentType', _noteMsPresentForGprs_val_ArgumentType), ('ResultType', _noteMsPresentForGprs_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 26))])
    
    #-----< noteMM-Event >-----#
    noteMM_Event = CLASS(name='noteMM-Event', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _noteMM_Event_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMM-EventArg')))
    _noteMM_Event_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMM-EventRes')))
    __sendRoutingInfo_Errors_val_ParameterType_3_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'MM-EventNotSupported-Param')))
    noteMM_Event._val = dict([('ArgumentType', _noteMM_Event_val_ArgumentType), ('ResultType', _noteMM_Event_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 59))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 89))])
    
    #-----< updateVcsgLocation >-----#
    updateVcsgLocation = CLASS(name='updateVcsgLocation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _updateVcsgLocation_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateVcsgLocationArg')))
    _updateVcsgLocation_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateVcsgLocationRes')))
    updateVcsgLocation._val = dict([('ArgumentType', _updateVcsgLocation_val_ArgumentType), ('ResultType', _updateVcsgLocation_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 53))])
    
    #-----< cancelVcsgLocation >-----#
    cancelVcsgLocation = CLASS(name='cancelVcsgLocation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _cancelVcsgLocation_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelVcsgLocationArg')))
    _cancelVcsgLocation_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelVcsgLocationRes')))
    cancelVcsgLocation._val = dict([('ArgumentType', _cancelVcsgLocation_val_ArgumentType), ('ResultType', _cancelVcsgLocation_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 36))])
    
    _all_ = [
        updateLocation,
        _updateLocation_val_ArgumentType,
        _updateLocation_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0,
        __sendRoutingInfo_Errors_val_ParameterType_1,
        __sendRoutingInfo_Errors_val_ParameterType_2,
        __sendRoutingInfo_Errors_val_ParameterType_3,
        __sendRoutingInfo_Errors_val_ParameterType_4,
        cancelLocation,
        _cancelLocation_val_ArgumentType,
        _cancelLocation_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0_0,
        __sendRoutingInfo_Errors_val_ParameterType_1_0,
        purgeMS,
        _purgeMS_val_ArgumentType,
        _purgeMS_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_2_0,
        sendIdentification,
        _sendIdentification_val_ArgumentType,
        _sendIdentification_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_1_1,
        updateGprsLocation,
        _updateGprsLocation_val_ArgumentType,
        _updateGprsLocation_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_3_0,
        provideSubscriberInfo,
        _provideSubscriberInfo_val_ArgumentType,
        _provideSubscriberInfo_val_ResultType,
        anyTimeInterrogation,
        _anyTimeInterrogation_val_ArgumentType,
        _anyTimeInterrogation_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_1_2,
        __sendRoutingInfo_Errors_val_ParameterType_2_1,
        __sendRoutingInfo_Errors_val_ParameterType_3_1,
        __sendRoutingInfo_Errors_val_ParameterType_4_0,
        anyTimeSubscriptionInterrogation,
        _anyTimeSubscriptionInterrogation_val_ArgumentType,
        _anyTimeSubscriptionInterrogation_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0_1,
        __sendRoutingInfo_Errors_val_ParameterType_4_1,
        __sendRoutingInfo_Errors_val_ParameterType_5,
        __sendRoutingInfo_Errors_val_ParameterType_6,
        __sendRoutingInfo_Errors_val_ParameterType_7,
        __sendRoutingInfo_Errors_val_ParameterType_8,
        __sendRoutingInfo_Errors_val_ParameterType_9,
        anyTimeModification,
        _anyTimeModification_val_ArgumentType,
        _anyTimeModification_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0_2,
        __sendRoutingInfo_Errors_val_ParameterType_8_0,
        __sendRoutingInfo_Errors_val_ParameterType_9_0,
        __sendRoutingInfo_Errors_val_ParameterType_10,
        __sendRoutingInfo_Errors_val_ParameterType_11,
        noteSubscriberDataModified,
        _noteSubscriberDataModified_val_ArgumentType,
        _noteSubscriberDataModified_val_ResultType,
        prepareHandover,
        _prepareHandover_val_ArgumentType,
        _prepareHandover_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_4_2,
        sendEndSignal,
        _sendEndSignal_val_ArgumentType,
        _sendEndSignal_val_ResultType,
        processAccessSignalling,
        _processAccessSignalling_val_ArgumentType,
        forwardAccessSignalling,
        _forwardAccessSignalling_val_ArgumentType,
        prepareSubsequentHandover,
        _prepareSubsequentHandover_val_ArgumentType,
        _prepareSubsequentHandover_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0_3,
        sendAuthenticationInfo,
        _sendAuthenticationInfo_val_ArgumentType,
        _sendAuthenticationInfo_val_ResultType,
        authenticationFailureReport,
        _authenticationFailureReport_val_ArgumentType,
        _authenticationFailureReport_val_ResultType,
        checkIMEI,
        _checkIMEI_val_ArgumentType,
        _checkIMEI_val_ResultType,
        insertSubscriberData,
        _insertSubscriberData_val_ArgumentType,
        _insertSubscriberData_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_2_2,
        deleteSubscriberData,
        _deleteSubscriberData_val_ArgumentType,
        _deleteSubscriberData_val_ResultType,
        reset,
        _reset_val_ArgumentType,
        forwardCheckSS_Indication,
        restoreData,
        _restoreData_val_ArgumentType,
        _restoreData_val_ResultType,
        sendRoutingInfoForGprs,
        _sendRoutingInfoForGprs_val_ArgumentType,
        _sendRoutingInfoForGprs_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0_4,
        __sendRoutingInfo_Errors_val_ParameterType_1_3,
        __sendRoutingInfo_Errors_val_ParameterType_5_0,
        failureReport,
        _failureReport_val_ArgumentType,
        _failureReport_val_ResultType,
        noteMsPresentForGprs,
        _noteMsPresentForGprs_val_ArgumentType,
        _noteMsPresentForGprs_val_ResultType,
        noteMM_Event,
        _noteMM_Event_val_ArgumentType,
        _noteMM_Event_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_3_2,
        updateVcsgLocation,
        _updateVcsgLocation_val_ArgumentType,
        _updateVcsgLocation_val_ResultType,
        cancelVcsgLocation,
        _cancelVcsgLocation_val_ArgumentType,
        _cancelVcsgLocation_val_ResultType,
    ]

class MAP_OM_DataTypes:

    _name_  = 'MAP-OM-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 12, 19]
    
    _obj_ = [
        'ActivateTraceModeArg',
        'MDT-Configuration',
        'MDT-Allowed-PLMNId-List',
        'PeriodUMTS',
        'PeriodLTE',
        'PositioningMethod',
        'MeasurementQuantity',
        'EventThreshold1F',
        'EventThreshold1I',
        'JobType',
        'AreaScope',
        'CGI-List',
        'E-UTRAN-CGI-List',
        'RoutingAreaId-List',
        'LocationAreaId-List',
        'TrackingAreaId-List',
        'ListOfMeasurements',
        'ReportingTrigger',
        'ReportInterval',
        'ReportAmount',
        'EventThresholdRSRP',
        'EventThresholdRSRQ',
        'LoggingInterval',
        'LoggingDuration',
        'TraceReference',
        'TraceReference2',
        'TraceRecordingSessionReference',
        'TraceType',
        'TraceDepthList',
        'TraceDepth',
        'TraceDepthExtension',
        'TraceNE-TypeList',
        'TraceInterfaceList',
        'MSC-S-InterfaceList',
        'MGW-InterfaceList',
        'SGSN-InterfaceList',
        'GGSN-InterfaceList',
        'RNC-InterfaceList',
        'BMSC-InterfaceList',
        'MME-InterfaceList',
        'SGW-InterfaceList',
        'PGW-InterfaceList',
        'ENB-InterfaceList',
        'TraceEventList',
        'MSC-S-EventList',
        'MGW-EventList',
        'SGSN-EventList',
        'GGSN-EventList',
        'BMSC-EventList',
        'MME-EventList',
        'SGW-EventList',
        'PGW-EventList',
        'TracePropagationList',
        'ActivateTraceModeRes',
        'DeactivateTraceModeArg',
        'DeactivateTraceModeRes',
        ]
    _type_ = [
        'ActivateTraceModeArg',
        'MDT-Configuration',
        'MDT-Allowed-PLMNId-List',
        'PeriodUMTS',
        'PeriodLTE',
        'PositioningMethod',
        'MeasurementQuantity',
        'EventThreshold1F',
        'EventThreshold1I',
        'JobType',
        'AreaScope',
        'CGI-List',
        'E-UTRAN-CGI-List',
        'RoutingAreaId-List',
        'LocationAreaId-List',
        'TrackingAreaId-List',
        'ListOfMeasurements',
        'ReportingTrigger',
        'ReportInterval',
        'ReportAmount',
        'EventThresholdRSRP',
        'EventThresholdRSRQ',
        'LoggingInterval',
        'LoggingDuration',
        'TraceReference',
        'TraceReference2',
        'TraceRecordingSessionReference',
        'TraceType',
        'TraceDepthList',
        'TraceDepth',
        'TraceDepthExtension',
        'TraceNE-TypeList',
        'TraceInterfaceList',
        'MSC-S-InterfaceList',
        'MGW-InterfaceList',
        'SGSN-InterfaceList',
        'GGSN-InterfaceList',
        'RNC-InterfaceList',
        'BMSC-InterfaceList',
        'MME-InterfaceList',
        'SGW-InterfaceList',
        'PGW-InterfaceList',
        'ENB-InterfaceList',
        'TraceEventList',
        'MSC-S-EventList',
        'MGW-EventList',
        'SGSN-EventList',
        'GGSN-EventList',
        'BMSC-EventList',
        'MME-EventList',
        'SGW-EventList',
        'PGW-EventList',
        'TracePropagationList',
        'ActivateTraceModeRes',
        'DeactivateTraceModeArg',
        'DeactivateTraceModeRes',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< ActivateTraceModeArg >-----#
    ActivateTraceModeArg = SEQ(name='ActivateTraceModeArg', mode=MODE_TYPE)
    _ActivateTraceModeArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _ActivateTraceModeArg_traceReference = OCT_STR(name='traceReference', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceReference')))
    _ActivateTraceModeArg_traceType = INT(name='traceType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceType')))
    _ActivateTraceModeArg_omc_Id = OCT_STR(name='omc-Id', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')), opt=True)
    _ActivateTraceModeArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ActivateTraceModeArg_traceReference2 = OCT_STR(name='traceReference2', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceReference2')), opt=True)
    _ActivateTraceModeArg_traceDepthList = SEQ(name='traceDepthList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthList')), opt=True)
    _ActivateTraceModeArg_traceNE_TypeList = BIT_STR(name='traceNE-TypeList', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceNE-TypeList')), opt=True)
    _ActivateTraceModeArg_traceInterfaceList = SEQ(name='traceInterfaceList', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceInterfaceList')), opt=True)
    _ActivateTraceModeArg_traceEventList = SEQ(name='traceEventList', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceEventList')), opt=True)
    _ActivateTraceModeArg_traceCollectionEntity = OCT_STR(name='traceCollectionEntity', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _ActivateTraceModeArg_mdt_Configuration = SEQ(name='mdt-Configuration', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MDT-Configuration')), opt=True)
    ActivateTraceModeArg._cont = ASN1Dict([
        ('imsi', _ActivateTraceModeArg_imsi),
        ('traceReference', _ActivateTraceModeArg_traceReference),
        ('traceType', _ActivateTraceModeArg_traceType),
        ('omc-Id', _ActivateTraceModeArg_omc_Id),
        ('extensionContainer', _ActivateTraceModeArg_extensionContainer),
        ('traceReference2', _ActivateTraceModeArg_traceReference2),
        ('traceDepthList', _ActivateTraceModeArg_traceDepthList),
        ('traceNE-TypeList', _ActivateTraceModeArg_traceNE_TypeList),
        ('traceInterfaceList', _ActivateTraceModeArg_traceInterfaceList),
        ('traceEventList', _ActivateTraceModeArg_traceEventList),
        ('traceCollectionEntity', _ActivateTraceModeArg_traceCollectionEntity),
        ('mdt-Configuration', _ActivateTraceModeArg_mdt_Configuration),
        ])
    ActivateTraceModeArg._ext = ['traceReference2', 'traceDepthList', 'traceNE-TypeList', 'traceInterfaceList', 'traceEventList', 'traceCollectionEntity', 'mdt-Configuration']
    
    #-----< MDT-Configuration >-----#
    MDT_Configuration = SEQ(name='MDT-Configuration', mode=MODE_TYPE)
    _MDT_Configuration_jobType = ENUM(name='jobType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'JobType')))
    _MDT_Configuration_areaScope = SEQ(name='areaScope', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'AreaScope')), opt=True)
    _MDT_Configuration_listOfMeasurements = OCT_STR(name='listOfMeasurements', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'ListOfMeasurements')), opt=True)
    _MDT_Configuration_reportingTrigger = OCT_STR(name='reportingTrigger', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'ReportingTrigger')), opt=True)
    _MDT_Configuration_reportInterval = ENUM(name='reportInterval', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'ReportInterval')), opt=True)
    _MDT_Configuration_reportAmount = ENUM(name='reportAmount', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'ReportAmount')), opt=True)
    _MDT_Configuration_eventThresholdRSRP = INT(name='eventThresholdRSRP', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'EventThresholdRSRP')), opt=True)
    _MDT_Configuration_eventThresholdRSRQ = INT(name='eventThresholdRSRQ', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'EventThresholdRSRQ')), opt=True)
    _MDT_Configuration_loggingInterval = ENUM(name='loggingInterval', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'LoggingInterval')), opt=True)
    _MDT_Configuration_loggingDuration = ENUM(name='loggingDuration', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'LoggingDuration')), opt=True)
    _MDT_Configuration_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _MDT_Configuration_measurementPeriodUMTS = ENUM(name='measurementPeriodUMTS', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'PeriodUMTS')), opt=True)
    _MDT_Configuration_measurementPeriodLTE = ENUM(name='measurementPeriodLTE', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'PeriodLTE')), opt=True)
    _MDT_Configuration_collectionPeriodRRM_UMTS = ENUM(name='collectionPeriodRRM-UMTS', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'PeriodUMTS')), opt=True)
    _MDT_Configuration_collectionPeriodRRM_LTE = ENUM(name='collectionPeriodRRM-LTE', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'PeriodLTE')), opt=True)
    _MDT_Configuration_positioningMethod = OCT_STR(name='positioningMethod', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'PositioningMethod')), opt=True)
    _MDT_Configuration_measurementQuantity = OCT_STR(name='measurementQuantity', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MeasurementQuantity')), opt=True)
    _MDT_Configuration_eventThreshold1F = INT(name='eventThreshold1F', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'EventThreshold1F')), opt=True)
    _MDT_Configuration_eventThreshold1I = INT(name='eventThreshold1I', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'EventThreshold1I')), opt=True)
    _MDT_Configuration_mdt_Allowed_PLMN_List = SEQ_OF(name='mdt-Allowed-PLMN-List', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MDT-Allowed-PLMNId-List')), opt=True)
    MDT_Configuration._cont = ASN1Dict([
        ('jobType', _MDT_Configuration_jobType),
        ('areaScope', _MDT_Configuration_areaScope),
        ('listOfMeasurements', _MDT_Configuration_listOfMeasurements),
        ('reportingTrigger', _MDT_Configuration_reportingTrigger),
        ('reportInterval', _MDT_Configuration_reportInterval),
        ('reportAmount', _MDT_Configuration_reportAmount),
        ('eventThresholdRSRP', _MDT_Configuration_eventThresholdRSRP),
        ('eventThresholdRSRQ', _MDT_Configuration_eventThresholdRSRQ),
        ('loggingInterval', _MDT_Configuration_loggingInterval),
        ('loggingDuration', _MDT_Configuration_loggingDuration),
        ('extensionContainer', _MDT_Configuration_extensionContainer),
        ('measurementPeriodUMTS', _MDT_Configuration_measurementPeriodUMTS),
        ('measurementPeriodLTE', _MDT_Configuration_measurementPeriodLTE),
        ('collectionPeriodRRM-UMTS', _MDT_Configuration_collectionPeriodRRM_UMTS),
        ('collectionPeriodRRM-LTE', _MDT_Configuration_collectionPeriodRRM_LTE),
        ('positioningMethod', _MDT_Configuration_positioningMethod),
        ('measurementQuantity', _MDT_Configuration_measurementQuantity),
        ('eventThreshold1F', _MDT_Configuration_eventThreshold1F),
        ('eventThreshold1I', _MDT_Configuration_eventThreshold1I),
        ('mdt-Allowed-PLMN-List', _MDT_Configuration_mdt_Allowed_PLMN_List),
        ])
    MDT_Configuration._ext = ['measurementPeriodUMTS', 'measurementPeriodLTE', 'collectionPeriodRRM-UMTS', 'collectionPeriodRRM-LTE', 'positioningMethod', 'measurementQuantity', 'eventThreshold1F', 'eventThreshold1I', 'mdt-Allowed-PLMN-List']
    
    #-----< MDT-Allowed-PLMNId-List >-----#
    MDT_Allowed_PLMNId_List = SEQ_OF(name='MDT-Allowed-PLMNId-List', mode=MODE_TYPE)
    _MDT_Allowed_PLMNId_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')))
    MDT_Allowed_PLMNId_List._cont = _MDT_Allowed_PLMNId_List__item_
    MDT_Allowed_PLMNId_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< PeriodUMTS >-----#
    PeriodUMTS = ENUM(name='PeriodUMTS', mode=MODE_TYPE)
    PeriodUMTS._cont = ASN1Dict([('d250ms', 0), ('d500ms', 1), ('d1000ms', 2), ('d2000ms', 3), ('d3000ms', 4), ('d4000ms', 5), ('d6000ms', 6), ('d8000ms', 7), ('d12000ms', 8), ('d16000ms', 9), ('d20000ms', 10), ('d24000ms', 11), ('d28000ms', 12), ('d32000ms', 13), ('d64000ms', 14)])
    PeriodUMTS._ext = None
    
    #-----< PeriodLTE >-----#
    PeriodLTE = ENUM(name='PeriodLTE', mode=MODE_TYPE)
    PeriodLTE._cont = ASN1Dict([('d1024ms', 0), ('d1280ms', 1), ('d2048ms', 2), ('d2560ms', 3), ('d5120ms', 4), ('d10240ms', 5), ('d1min', 6)])
    PeriodLTE._ext = None
    
    #-----< PositioningMethod >-----#
    PositioningMethod = OCT_STR(name='PositioningMethod', mode=MODE_TYPE)
    PositioningMethod._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< MeasurementQuantity >-----#
    MeasurementQuantity = OCT_STR(name='MeasurementQuantity', mode=MODE_TYPE)
    MeasurementQuantity._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< EventThreshold1F >-----#
    EventThreshold1F = INT(name='EventThreshold1F', mode=MODE_TYPE)
    EventThreshold1F._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-120, ub=165)], ev=None, er=[])
    
    #-----< EventThreshold1I >-----#
    EventThreshold1I = INT(name='EventThreshold1I', mode=MODE_TYPE)
    EventThreshold1I._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-120, ub=-25)], ev=None, er=[])
    
    #-----< JobType >-----#
    JobType = ENUM(name='JobType', mode=MODE_TYPE)
    JobType._cont = ASN1Dict([('immediate-MDT-only', 0), ('logged-MDT-only', 1), ('trace-only', 2), ('immediate-MDT-and-trace', 3)])
    JobType._ext = None
    
    #-----< AreaScope >-----#
    AreaScope = SEQ(name='AreaScope', mode=MODE_TYPE)
    _AreaScope_cgi_List = SEQ_OF(name='cgi-List', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'CGI-List')), opt=True)
    _AreaScope_e_utran_cgi_List = SEQ_OF(name='e-utran-cgi-List', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'E-UTRAN-CGI-List')), opt=True)
    _AreaScope_routingAreaId_List = SEQ_OF(name='routingAreaId-List', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'RoutingAreaId-List')), opt=True)
    _AreaScope_locationAreaId_List = SEQ_OF(name='locationAreaId-List', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'LocationAreaId-List')), opt=True)
    _AreaScope_trackingAreaId_List = SEQ_OF(name='trackingAreaId-List', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TrackingAreaId-List')), opt=True)
    _AreaScope_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    AreaScope._cont = ASN1Dict([
        ('cgi-List', _AreaScope_cgi_List),
        ('e-utran-cgi-List', _AreaScope_e_utran_cgi_List),
        ('routingAreaId-List', _AreaScope_routingAreaId_List),
        ('locationAreaId-List', _AreaScope_locationAreaId_List),
        ('trackingAreaId-List', _AreaScope_trackingAreaId_List),
        ('extensionContainer', _AreaScope_extensionContainer),
        ])
    AreaScope._ext = []
    
    #-----< CGI-List >-----#
    CGI_List = SEQ_OF(name='CGI-List', mode=MODE_TYPE)
    _CGI_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'GlobalCellId')))
    CGI_List._cont = _CGI_List__item_
    CGI_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< E-UTRAN-CGI-List >-----#
    E_UTRAN_CGI_List = SEQ_OF(name='E-UTRAN-CGI-List', mode=MODE_TYPE)
    _E_UTRAN_CGI_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'E-UTRAN-CGI')))
    E_UTRAN_CGI_List._cont = _E_UTRAN_CGI_List__item_
    E_UTRAN_CGI_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< RoutingAreaId-List >-----#
    RoutingAreaId_List = SEQ_OF(name='RoutingAreaId-List', mode=MODE_TYPE)
    _RoutingAreaId_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'RAIdentity')))
    RoutingAreaId_List._cont = _RoutingAreaId_List__item_
    RoutingAreaId_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< LocationAreaId-List >-----#
    LocationAreaId_List = SEQ_OF(name='LocationAreaId-List', mode=MODE_TYPE)
    _LocationAreaId_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LAIFixedLength')))
    LocationAreaId_List._cont = _LocationAreaId_List__item_
    LocationAreaId_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< TrackingAreaId-List >-----#
    TrackingAreaId_List = SEQ_OF(name='TrackingAreaId-List', mode=MODE_TYPE)
    _TrackingAreaId_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'TA-Id')))
    TrackingAreaId_List._cont = _TrackingAreaId_List__item_
    TrackingAreaId_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< ListOfMeasurements >-----#
    ListOfMeasurements = OCT_STR(name='ListOfMeasurements', mode=MODE_TYPE)
    ListOfMeasurements._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< ReportingTrigger >-----#
    ReportingTrigger = OCT_STR(name='ReportingTrigger', mode=MODE_TYPE)
    ReportingTrigger._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< ReportInterval >-----#
    ReportInterval = ENUM(name='ReportInterval', mode=MODE_TYPE)
    ReportInterval._cont = ASN1Dict([('umts250ms', 0), ('umts500ms', 1), ('umts1000ms', 2), ('umts2000ms', 3), ('umts3000ms', 4), ('umts4000ms', 5), ('umts6000ms', 6), ('umts8000ms', 7), ('umts12000ms', 8), ('umts16000ms', 9), ('umts20000ms', 10), ('umts24000ms', 11), ('umts28000ms', 12), ('umts32000ms', 13), ('umts64000ms', 14), ('lte120ms', 15), ('lte240ms', 16), ('lte480ms', 17), ('lte640ms', 18), ('lte1024ms', 19), ('lte2048ms', 20), ('lte5120ms', 21), ('lte10240ms', 22), ('lte1min', 23), ('lte6min', 24), ('lte12min', 25), ('lte30min', 26), ('lte60min', 27)])
    ReportInterval._ext = None
    
    #-----< ReportAmount >-----#
    ReportAmount = ENUM(name='ReportAmount', mode=MODE_TYPE)
    ReportAmount._cont = ASN1Dict([('d1', 0), ('d2', 1), ('d4', 2), ('d8', 3), ('d16', 4), ('d32', 5), ('d64', 6), ('infinity', 7)])
    ReportAmount._ext = None
    
    #-----< EventThresholdRSRP >-----#
    EventThresholdRSRP = INT(name='EventThresholdRSRP', mode=MODE_TYPE)
    EventThresholdRSRP._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=97)], ev=None, er=[])
    
    #-----< EventThresholdRSRQ >-----#
    EventThresholdRSRQ = INT(name='EventThresholdRSRQ', mode=MODE_TYPE)
    EventThresholdRSRQ._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=34)], ev=None, er=[])
    
    #-----< LoggingInterval >-----#
    LoggingInterval = ENUM(name='LoggingInterval', mode=MODE_TYPE)
    LoggingInterval._cont = ASN1Dict([('d1dot28', 0), ('d2dot56', 1), ('d5dot12', 2), ('d10dot24', 3), ('d20dot48', 4), ('d30dot72', 5), ('d40dot96', 6), ('d61dot44', 7)])
    LoggingInterval._ext = None
    
    #-----< LoggingDuration >-----#
    LoggingDuration = ENUM(name='LoggingDuration', mode=MODE_TYPE)
    LoggingDuration._cont = ASN1Dict([('d600sec', 0), ('d1200sec', 1), ('d2400sec', 2), ('d3600sec', 3), ('d5400sec', 4), ('d7200sec', 5)])
    LoggingDuration._ext = None
    
    #-----< TraceReference >-----#
    TraceReference = OCT_STR(name='TraceReference', mode=MODE_TYPE)
    TraceReference._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    
    #-----< TraceReference2 >-----#
    TraceReference2 = OCT_STR(name='TraceReference2', mode=MODE_TYPE)
    TraceReference2._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< TraceRecordingSessionReference >-----#
    TraceRecordingSessionReference = OCT_STR(name='TraceRecordingSessionReference', mode=MODE_TYPE)
    TraceRecordingSessionReference._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< TraceType >-----#
    TraceType = INT(name='TraceType', mode=MODE_TYPE)
    TraceType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< TraceDepthList >-----#
    TraceDepthList = SEQ(name='TraceDepthList', mode=MODE_TYPE)
    _TraceDepthList_msc_s_TraceDepth = ENUM(name='msc-s-TraceDepth', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_mgw_TraceDepth = ENUM(name='mgw-TraceDepth', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_sgsn_TraceDepth = ENUM(name='sgsn-TraceDepth', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_ggsn_TraceDepth = ENUM(name='ggsn-TraceDepth', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_rnc_TraceDepth = ENUM(name='rnc-TraceDepth', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_bmsc_TraceDepth = ENUM(name='bmsc-TraceDepth', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_mme_TraceDepth = ENUM(name='mme-TraceDepth', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_sgw_TraceDepth = ENUM(name='sgw-TraceDepth', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_pgw_TraceDepth = ENUM(name='pgw-TraceDepth', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_eNB_TraceDepth = ENUM(name='eNB-TraceDepth', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_msc_s_TraceDepthExtension = ENUM(name='msc-s-TraceDepthExtension', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TraceDepthList_mgw_TraceDepthExtension = ENUM(name='mgw-TraceDepthExtension', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TraceDepthList_sgsn_TraceDepthExtension = ENUM(name='sgsn-TraceDepthExtension', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TraceDepthList_ggsn_TraceDepthExtension = ENUM(name='ggsn-TraceDepthExtension', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TraceDepthList_rnc_TraceDepthExtension = ENUM(name='rnc-TraceDepthExtension', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TraceDepthList_bmsc_TraceDepthExtension = ENUM(name='bmsc-TraceDepthExtension', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TraceDepthList_mme_TraceDepthExtension = ENUM(name='mme-TraceDepthExtension', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TraceDepthList_sgw_TraceDepthExtension = ENUM(name='sgw-TraceDepthExtension', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TraceDepthList_pgw_TraceDepthExtension = ENUM(name='pgw-TraceDepthExtension', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TraceDepthList_eNB_TraceDepthExtension = ENUM(name='eNB-TraceDepthExtension', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    TraceDepthList._cont = ASN1Dict([
        ('msc-s-TraceDepth', _TraceDepthList_msc_s_TraceDepth),
        ('mgw-TraceDepth', _TraceDepthList_mgw_TraceDepth),
        ('sgsn-TraceDepth', _TraceDepthList_sgsn_TraceDepth),
        ('ggsn-TraceDepth', _TraceDepthList_ggsn_TraceDepth),
        ('rnc-TraceDepth', _TraceDepthList_rnc_TraceDepth),
        ('bmsc-TraceDepth', _TraceDepthList_bmsc_TraceDepth),
        ('mme-TraceDepth', _TraceDepthList_mme_TraceDepth),
        ('sgw-TraceDepth', _TraceDepthList_sgw_TraceDepth),
        ('pgw-TraceDepth', _TraceDepthList_pgw_TraceDepth),
        ('eNB-TraceDepth', _TraceDepthList_eNB_TraceDepth),
        ('msc-s-TraceDepthExtension', _TraceDepthList_msc_s_TraceDepthExtension),
        ('mgw-TraceDepthExtension', _TraceDepthList_mgw_TraceDepthExtension),
        ('sgsn-TraceDepthExtension', _TraceDepthList_sgsn_TraceDepthExtension),
        ('ggsn-TraceDepthExtension', _TraceDepthList_ggsn_TraceDepthExtension),
        ('rnc-TraceDepthExtension', _TraceDepthList_rnc_TraceDepthExtension),
        ('bmsc-TraceDepthExtension', _TraceDepthList_bmsc_TraceDepthExtension),
        ('mme-TraceDepthExtension', _TraceDepthList_mme_TraceDepthExtension),
        ('sgw-TraceDepthExtension', _TraceDepthList_sgw_TraceDepthExtension),
        ('pgw-TraceDepthExtension', _TraceDepthList_pgw_TraceDepthExtension),
        ('eNB-TraceDepthExtension', _TraceDepthList_eNB_TraceDepthExtension),
        ])
    TraceDepthList._ext = ['mme-TraceDepth', 'sgw-TraceDepth', 'pgw-TraceDepth', 'eNB-TraceDepth', 'msc-s-TraceDepthExtension', 'mgw-TraceDepthExtension', 'sgsn-TraceDepthExtension', 'ggsn-TraceDepthExtension', 'rnc-TraceDepthExtension', 'bmsc-TraceDepthExtension', 'mme-TraceDepthExtension', 'sgw-TraceDepthExtension', 'pgw-TraceDepthExtension', 'eNB-TraceDepthExtension']
    
    #-----< TraceDepth >-----#
    TraceDepth = ENUM(name='TraceDepth', mode=MODE_TYPE)
    TraceDepth._cont = ASN1Dict([('minimum', 0), ('medium', 1), ('maximum', 2)])
    TraceDepth._ext = []
    
    #-----< TraceDepthExtension >-----#
    TraceDepthExtension = ENUM(name='TraceDepthExtension', mode=MODE_TYPE)
    TraceDepthExtension._cont = ASN1Dict([('minimumWithoutVendorSpecificExtension', 0), ('mediumWithoutVendorSpecificExtension', 1), ('maximumWithoutVendorSpecificExtension', 2)])
    TraceDepthExtension._ext = []
    
    #-----< TraceNE-TypeList >-----#
    TraceNE_TypeList = BIT_STR(name='TraceNE-TypeList', mode=MODE_TYPE)
    TraceNE_TypeList._cont = ASN1Dict([('msc-s', 0), ('mgw', 1), ('sgsn', 2), ('ggsn', 3), ('rnc', 4), ('bm-sc', 5), ('mme', 6), ('sgw', 7), ('pgw', 8), ('eNB', 9)])
    TraceNE_TypeList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=6, ub=16)], ev=None, er=[])
    
    #-----< TraceInterfaceList >-----#
    TraceInterfaceList = SEQ(name='TraceInterfaceList', mode=MODE_TYPE)
    _TraceInterfaceList_msc_s_List = BIT_STR(name='msc-s-List', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MSC-S-InterfaceList')), opt=True)
    _TraceInterfaceList_mgw_List = BIT_STR(name='mgw-List', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MGW-InterfaceList')), opt=True)
    _TraceInterfaceList_sgsn_List = BIT_STR(name='sgsn-List', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'SGSN-InterfaceList')), opt=True)
    _TraceInterfaceList_ggsn_List = BIT_STR(name='ggsn-List', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'GGSN-InterfaceList')), opt=True)
    _TraceInterfaceList_rnc_List = BIT_STR(name='rnc-List', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'RNC-InterfaceList')), opt=True)
    _TraceInterfaceList_bmsc_List = BIT_STR(name='bmsc-List', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'BMSC-InterfaceList')), opt=True)
    _TraceInterfaceList_mme_List = BIT_STR(name='mme-List', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MME-InterfaceList')), opt=True)
    _TraceInterfaceList_sgw_List = BIT_STR(name='sgw-List', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'SGW-InterfaceList')), opt=True)
    _TraceInterfaceList_pgw_List = BIT_STR(name='pgw-List', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'PGW-InterfaceList')), opt=True)
    _TraceInterfaceList_eNB_List = BIT_STR(name='eNB-List', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'ENB-InterfaceList')), opt=True)
    TraceInterfaceList._cont = ASN1Dict([
        ('msc-s-List', _TraceInterfaceList_msc_s_List),
        ('mgw-List', _TraceInterfaceList_mgw_List),
        ('sgsn-List', _TraceInterfaceList_sgsn_List),
        ('ggsn-List', _TraceInterfaceList_ggsn_List),
        ('rnc-List', _TraceInterfaceList_rnc_List),
        ('bmsc-List', _TraceInterfaceList_bmsc_List),
        ('mme-List', _TraceInterfaceList_mme_List),
        ('sgw-List', _TraceInterfaceList_sgw_List),
        ('pgw-List', _TraceInterfaceList_pgw_List),
        ('eNB-List', _TraceInterfaceList_eNB_List),
        ])
    TraceInterfaceList._ext = ['mme-List', 'sgw-List', 'pgw-List', 'eNB-List']
    
    #-----< MSC-S-InterfaceList >-----#
    MSC_S_InterfaceList = BIT_STR(name='MSC-S-InterfaceList', mode=MODE_TYPE)
    MSC_S_InterfaceList._cont = ASN1Dict([('a', 0), ('iu', 1), ('mc', 2), ('map-g', 3), ('map-b', 4), ('map-e', 5), ('map-f', 6), ('cap', 7), ('map-d', 8), ('map-c', 9)])
    MSC_S_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=10, ub=16)], ev=None, er=[])
    
    #-----< MGW-InterfaceList >-----#
    MGW_InterfaceList = BIT_STR(name='MGW-InterfaceList', mode=MODE_TYPE)
    MGW_InterfaceList._cont = ASN1Dict([('mc', 0), ('nb-up', 1), ('iu-up', 2)])
    MGW_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    
    #-----< SGSN-InterfaceList >-----#
    SGSN_InterfaceList = BIT_STR(name='SGSN-InterfaceList', mode=MODE_TYPE)
    SGSN_InterfaceList._cont = ASN1Dict([('gb', 0), ('iu', 1), ('gn', 2), ('map-gr', 3), ('map-gd', 4), ('map-gf', 5), ('gs', 6), ('ge', 7), ('s3', 8), ('s4', 9), ('s6d', 10)])
    SGSN_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=8, ub=16)], ev=None, er=[])
    
    #-----< GGSN-InterfaceList >-----#
    GGSN_InterfaceList = BIT_STR(name='GGSN-InterfaceList', mode=MODE_TYPE)
    GGSN_InterfaceList._cont = ASN1Dict([('gn', 0), ('gi', 1), ('gmb', 2)])
    GGSN_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    
    #-----< RNC-InterfaceList >-----#
    RNC_InterfaceList = BIT_STR(name='RNC-InterfaceList', mode=MODE_TYPE)
    RNC_InterfaceList._cont = ASN1Dict([('iu', 0), ('iur', 1), ('iub', 2), ('uu', 3)])
    RNC_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=4, ub=8)], ev=None, er=[])
    
    #-----< BMSC-InterfaceList >-----#
    BMSC_InterfaceList = BIT_STR(name='BMSC-InterfaceList', mode=MODE_TYPE)
    BMSC_InterfaceList._cont = ASN1Dict([('gmb', 0)])
    BMSC_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< MME-InterfaceList >-----#
    MME_InterfaceList = BIT_STR(name='MME-InterfaceList', mode=MODE_TYPE)
    MME_InterfaceList._cont = ASN1Dict([('s1-mme', 0), ('s3', 1), ('s6a', 2), ('s10', 3), ('s11', 4)])
    MME_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=8)], ev=None, er=[])
    
    #-----< SGW-InterfaceList >-----#
    SGW_InterfaceList = BIT_STR(name='SGW-InterfaceList', mode=MODE_TYPE)
    SGW_InterfaceList._cont = ASN1Dict([('s4', 0), ('s5', 1), ('s8b', 2), ('s11', 3), ('gxc', 4)])
    SGW_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=8)], ev=None, er=[])
    
    #-----< PGW-InterfaceList >-----#
    PGW_InterfaceList = BIT_STR(name='PGW-InterfaceList', mode=MODE_TYPE)
    PGW_InterfaceList._cont = ASN1Dict([('s2a', 0), ('s2b', 1), ('s2c', 2), ('s5', 3), ('s6b', 4), ('gx', 5), ('s8b', 6), ('sgi', 7)])
    PGW_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=8, ub=16)], ev=None, er=[])
    
    #-----< ENB-InterfaceList >-----#
    ENB_InterfaceList = BIT_STR(name='ENB-InterfaceList', mode=MODE_TYPE)
    ENB_InterfaceList._cont = ASN1Dict([('s1-mme', 0), ('x2', 1), ('uu', 2)])
    ENB_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    
    #-----< TraceEventList >-----#
    TraceEventList = SEQ(name='TraceEventList', mode=MODE_TYPE)
    _TraceEventList_msc_s_List = BIT_STR(name='msc-s-List', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MSC-S-EventList')), opt=True)
    _TraceEventList_mgw_List = BIT_STR(name='mgw-List', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MGW-EventList')), opt=True)
    _TraceEventList_sgsn_List = BIT_STR(name='sgsn-List', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'SGSN-EventList')), opt=True)
    _TraceEventList_ggsn_List = BIT_STR(name='ggsn-List', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'GGSN-EventList')), opt=True)
    _TraceEventList_bmsc_List = BIT_STR(name='bmsc-List', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'BMSC-EventList')), opt=True)
    _TraceEventList_mme_List = BIT_STR(name='mme-List', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MME-EventList')), opt=True)
    _TraceEventList_sgw_List = BIT_STR(name='sgw-List', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'SGW-EventList')), opt=True)
    _TraceEventList_pgw_List = BIT_STR(name='pgw-List', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'PGW-EventList')), opt=True)
    TraceEventList._cont = ASN1Dict([
        ('msc-s-List', _TraceEventList_msc_s_List),
        ('mgw-List', _TraceEventList_mgw_List),
        ('sgsn-List', _TraceEventList_sgsn_List),
        ('ggsn-List', _TraceEventList_ggsn_List),
        ('bmsc-List', _TraceEventList_bmsc_List),
        ('mme-List', _TraceEventList_mme_List),
        ('sgw-List', _TraceEventList_sgw_List),
        ('pgw-List', _TraceEventList_pgw_List),
        ])
    TraceEventList._ext = ['mme-List', 'sgw-List', 'pgw-List']
    
    #-----< MSC-S-EventList >-----#
    MSC_S_EventList = BIT_STR(name='MSC-S-EventList', mode=MODE_TYPE)
    MSC_S_EventList._cont = ASN1Dict([('mo-mtCall', 0), ('mo-mt-sms', 1), ('lu-imsiAttach-imsiDetach', 2), ('handovers', 3), ('ss', 4)])
    MSC_S_EventList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=16)], ev=None, er=[])
    
    #-----< MGW-EventList >-----#
    MGW_EventList = BIT_STR(name='MGW-EventList', mode=MODE_TYPE)
    MGW_EventList._cont = ASN1Dict([('context', 0)])
    MGW_EventList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< SGSN-EventList >-----#
    SGSN_EventList = BIT_STR(name='SGSN-EventList', mode=MODE_TYPE)
    SGSN_EventList._cont = ASN1Dict([('pdpContext', 0), ('mo-mt-sms', 1), ('rau-gprsAttach-gprsDetach', 2), ('mbmsContext', 3)])
    SGSN_EventList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=4, ub=16)], ev=None, er=[])
    
    #-----< GGSN-EventList >-----#
    GGSN_EventList = BIT_STR(name='GGSN-EventList', mode=MODE_TYPE)
    GGSN_EventList._cont = ASN1Dict([('pdpContext', 0), ('mbmsContext', 1)])
    GGSN_EventList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=8)], ev=None, er=[])
    
    #-----< BMSC-EventList >-----#
    BMSC_EventList = BIT_STR(name='BMSC-EventList', mode=MODE_TYPE)
    BMSC_EventList._cont = ASN1Dict([('mbmsMulticastServiceActivation', 0)])
    BMSC_EventList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< MME-EventList >-----#
    MME_EventList = BIT_STR(name='MME-EventList', mode=MODE_TYPE)
    MME_EventList._cont = ASN1Dict([('ue-initiatedPDNconectivityRequest', 0), ('serviceRequestts', 1), ('initialAttachTrackingAreaUpdateDetach', 2), ('ue-initiatedPDNdisconnection', 3), ('bearerActivationModificationDeletion', 4), ('handover', 5)])
    MME_EventList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=6, ub=8)], ev=None, er=[])
    
    #-----< SGW-EventList >-----#
    SGW_EventList = BIT_STR(name='SGW-EventList', mode=MODE_TYPE)
    SGW_EventList._cont = ASN1Dict([('pdn-connectionCreation', 0), ('pdn-connectionTermination', 1), ('bearerActivationModificationDeletion', 2)])
    SGW_EventList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    
    #-----< PGW-EventList >-----#
    PGW_EventList = BIT_STR(name='PGW-EventList', mode=MODE_TYPE)
    PGW_EventList._cont = ASN1Dict([('pdn-connectionCreation', 0), ('pdn-connectionTermination', 1), ('bearerActivationModificationDeletion', 2)])
    PGW_EventList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    
    #-----< TracePropagationList >-----#
    TracePropagationList = SEQ(name='TracePropagationList', mode=MODE_TYPE)
    _TracePropagationList_traceReference = OCT_STR(name='traceReference', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceReference')), opt=True)
    _TracePropagationList_traceType = INT(name='traceType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceType')), opt=True)
    _TracePropagationList_traceReference2 = OCT_STR(name='traceReference2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceReference2')), opt=True)
    _TracePropagationList_traceRecordingSessionReference = OCT_STR(name='traceRecordingSessionReference', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceRecordingSessionReference')), opt=True)
    _TracePropagationList_rnc_TraceDepth = ENUM(name='rnc-TraceDepth', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TracePropagationList_rnc_InterfaceList = BIT_STR(name='rnc-InterfaceList', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'RNC-InterfaceList')), opt=True)
    _TracePropagationList_msc_s_TraceDepth = ENUM(name='msc-s-TraceDepth', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TracePropagationList_msc_s_InterfaceList = BIT_STR(name='msc-s-InterfaceList', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MSC-S-InterfaceList')), opt=True)
    _TracePropagationList_msc_s_EventList = BIT_STR(name='msc-s-EventList', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MSC-S-EventList')), opt=True)
    _TracePropagationList_mgw_TraceDepth = ENUM(name='mgw-TraceDepth', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TracePropagationList_mgw_InterfaceList = BIT_STR(name='mgw-InterfaceList', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MGW-InterfaceList')), opt=True)
    _TracePropagationList_mgw_EventList = BIT_STR(name='mgw-EventList', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MGW-EventList')), opt=True)
    _TracePropagationList_rnc_TraceDepthExtension = ENUM(name='rnc-TraceDepthExtension', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TracePropagationList_msc_s_TraceDepthExtension = ENUM(name='msc-s-TraceDepthExtension', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TracePropagationList_mgw_TraceDepthExtension = ENUM(name='mgw-TraceDepthExtension', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    TracePropagationList._cont = ASN1Dict([
        ('traceReference', _TracePropagationList_traceReference),
        ('traceType', _TracePropagationList_traceType),
        ('traceReference2', _TracePropagationList_traceReference2),
        ('traceRecordingSessionReference', _TracePropagationList_traceRecordingSessionReference),
        ('rnc-TraceDepth', _TracePropagationList_rnc_TraceDepth),
        ('rnc-InterfaceList', _TracePropagationList_rnc_InterfaceList),
        ('msc-s-TraceDepth', _TracePropagationList_msc_s_TraceDepth),
        ('msc-s-InterfaceList', _TracePropagationList_msc_s_InterfaceList),
        ('msc-s-EventList', _TracePropagationList_msc_s_EventList),
        ('mgw-TraceDepth', _TracePropagationList_mgw_TraceDepth),
        ('mgw-InterfaceList', _TracePropagationList_mgw_InterfaceList),
        ('mgw-EventList', _TracePropagationList_mgw_EventList),
        ('rnc-TraceDepthExtension', _TracePropagationList_rnc_TraceDepthExtension),
        ('msc-s-TraceDepthExtension', _TracePropagationList_msc_s_TraceDepthExtension),
        ('mgw-TraceDepthExtension', _TracePropagationList_mgw_TraceDepthExtension),
        ])
    TracePropagationList._ext = ['rnc-TraceDepthExtension', 'msc-s-TraceDepthExtension', 'mgw-TraceDepthExtension']
    
    #-----< ActivateTraceModeRes >-----#
    ActivateTraceModeRes = SEQ(name='ActivateTraceModeRes', mode=MODE_TYPE)
    _ActivateTraceModeRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ActivateTraceModeRes_traceSupportIndicator = NULL(name='traceSupportIndicator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ActivateTraceModeRes._cont = ASN1Dict([
        ('extensionContainer', _ActivateTraceModeRes_extensionContainer),
        ('traceSupportIndicator', _ActivateTraceModeRes_traceSupportIndicator),
        ])
    ActivateTraceModeRes._ext = ['traceSupportIndicator']
    
    #-----< DeactivateTraceModeArg >-----#
    DeactivateTraceModeArg = SEQ(name='DeactivateTraceModeArg', mode=MODE_TYPE)
    _DeactivateTraceModeArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _DeactivateTraceModeArg_traceReference = OCT_STR(name='traceReference', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceReference')))
    _DeactivateTraceModeArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _DeactivateTraceModeArg_traceReference2 = OCT_STR(name='traceReference2', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceReference2')), opt=True)
    DeactivateTraceModeArg._cont = ASN1Dict([
        ('imsi', _DeactivateTraceModeArg_imsi),
        ('traceReference', _DeactivateTraceModeArg_traceReference),
        ('extensionContainer', _DeactivateTraceModeArg_extensionContainer),
        ('traceReference2', _DeactivateTraceModeArg_traceReference2),
        ])
    DeactivateTraceModeArg._ext = ['traceReference2']
    
    #-----< DeactivateTraceModeRes >-----#
    DeactivateTraceModeRes = SEQ(name='DeactivateTraceModeRes', mode=MODE_TYPE)
    _DeactivateTraceModeRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    DeactivateTraceModeRes._cont = ASN1Dict([
        ('extensionContainer', _DeactivateTraceModeRes_extensionContainer),
        ])
    DeactivateTraceModeRes._ext = []
    
    _all_ = [
        _ActivateTraceModeArg_imsi,
        _ActivateTraceModeArg_traceReference,
        _ActivateTraceModeArg_traceType,
        _ActivateTraceModeArg_omc_Id,
        _ActivateTraceModeArg_extensionContainer,
        _ActivateTraceModeArg_traceReference2,
        _ActivateTraceModeArg_traceDepthList,
        _ActivateTraceModeArg_traceNE_TypeList,
        _ActivateTraceModeArg_traceInterfaceList,
        _ActivateTraceModeArg_traceEventList,
        _ActivateTraceModeArg_traceCollectionEntity,
        _ActivateTraceModeArg_mdt_Configuration,
        ActivateTraceModeArg,
        _MDT_Configuration_jobType,
        _MDT_Configuration_areaScope,
        _MDT_Configuration_listOfMeasurements,
        _MDT_Configuration_reportingTrigger,
        _MDT_Configuration_reportInterval,
        _MDT_Configuration_reportAmount,
        _MDT_Configuration_eventThresholdRSRP,
        _MDT_Configuration_eventThresholdRSRQ,
        _MDT_Configuration_loggingInterval,
        _MDT_Configuration_loggingDuration,
        _MDT_Configuration_extensionContainer,
        _MDT_Configuration_measurementPeriodUMTS,
        _MDT_Configuration_measurementPeriodLTE,
        _MDT_Configuration_collectionPeriodRRM_UMTS,
        _MDT_Configuration_collectionPeriodRRM_LTE,
        _MDT_Configuration_positioningMethod,
        _MDT_Configuration_measurementQuantity,
        _MDT_Configuration_eventThreshold1F,
        _MDT_Configuration_eventThreshold1I,
        _MDT_Configuration_mdt_Allowed_PLMN_List,
        MDT_Configuration,
        _MDT_Allowed_PLMNId_List__item_,
        MDT_Allowed_PLMNId_List,
        PeriodUMTS,
        PeriodLTE,
        PositioningMethod,
        MeasurementQuantity,
        EventThreshold1F,
        EventThreshold1I,
        JobType,
        _AreaScope_cgi_List,
        _AreaScope_e_utran_cgi_List,
        _AreaScope_routingAreaId_List,
        _AreaScope_locationAreaId_List,
        _AreaScope_trackingAreaId_List,
        _AreaScope_extensionContainer,
        AreaScope,
        _CGI_List__item_,
        CGI_List,
        _E_UTRAN_CGI_List__item_,
        E_UTRAN_CGI_List,
        _RoutingAreaId_List__item_,
        RoutingAreaId_List,
        _LocationAreaId_List__item_,
        LocationAreaId_List,
        _TrackingAreaId_List__item_,
        TrackingAreaId_List,
        ListOfMeasurements,
        ReportingTrigger,
        ReportInterval,
        ReportAmount,
        EventThresholdRSRP,
        EventThresholdRSRQ,
        LoggingInterval,
        LoggingDuration,
        TraceReference,
        TraceReference2,
        TraceRecordingSessionReference,
        TraceType,
        _TraceDepthList_msc_s_TraceDepth,
        _TraceDepthList_mgw_TraceDepth,
        _TraceDepthList_sgsn_TraceDepth,
        _TraceDepthList_ggsn_TraceDepth,
        _TraceDepthList_rnc_TraceDepth,
        _TraceDepthList_bmsc_TraceDepth,
        _TraceDepthList_mme_TraceDepth,
        _TraceDepthList_sgw_TraceDepth,
        _TraceDepthList_pgw_TraceDepth,
        _TraceDepthList_eNB_TraceDepth,
        _TraceDepthList_msc_s_TraceDepthExtension,
        _TraceDepthList_mgw_TraceDepthExtension,
        _TraceDepthList_sgsn_TraceDepthExtension,
        _TraceDepthList_ggsn_TraceDepthExtension,
        _TraceDepthList_rnc_TraceDepthExtension,
        _TraceDepthList_bmsc_TraceDepthExtension,
        _TraceDepthList_mme_TraceDepthExtension,
        _TraceDepthList_sgw_TraceDepthExtension,
        _TraceDepthList_pgw_TraceDepthExtension,
        _TraceDepthList_eNB_TraceDepthExtension,
        TraceDepthList,
        TraceDepth,
        TraceDepthExtension,
        TraceNE_TypeList,
        _TraceInterfaceList_msc_s_List,
        _TraceInterfaceList_mgw_List,
        _TraceInterfaceList_sgsn_List,
        _TraceInterfaceList_ggsn_List,
        _TraceInterfaceList_rnc_List,
        _TraceInterfaceList_bmsc_List,
        _TraceInterfaceList_mme_List,
        _TraceInterfaceList_sgw_List,
        _TraceInterfaceList_pgw_List,
        _TraceInterfaceList_eNB_List,
        TraceInterfaceList,
        MSC_S_InterfaceList,
        MGW_InterfaceList,
        SGSN_InterfaceList,
        GGSN_InterfaceList,
        RNC_InterfaceList,
        BMSC_InterfaceList,
        MME_InterfaceList,
        SGW_InterfaceList,
        PGW_InterfaceList,
        ENB_InterfaceList,
        _TraceEventList_msc_s_List,
        _TraceEventList_mgw_List,
        _TraceEventList_sgsn_List,
        _TraceEventList_ggsn_List,
        _TraceEventList_bmsc_List,
        _TraceEventList_mme_List,
        _TraceEventList_sgw_List,
        _TraceEventList_pgw_List,
        TraceEventList,
        MSC_S_EventList,
        MGW_EventList,
        SGSN_EventList,
        GGSN_EventList,
        BMSC_EventList,
        MME_EventList,
        SGW_EventList,
        PGW_EventList,
        _TracePropagationList_traceReference,
        _TracePropagationList_traceType,
        _TracePropagationList_traceReference2,
        _TracePropagationList_traceRecordingSessionReference,
        _TracePropagationList_rnc_TraceDepth,
        _TracePropagationList_rnc_InterfaceList,
        _TracePropagationList_msc_s_TraceDepth,
        _TracePropagationList_msc_s_InterfaceList,
        _TracePropagationList_msc_s_EventList,
        _TracePropagationList_mgw_TraceDepth,
        _TracePropagationList_mgw_InterfaceList,
        _TracePropagationList_mgw_EventList,
        _TracePropagationList_rnc_TraceDepthExtension,
        _TracePropagationList_msc_s_TraceDepthExtension,
        _TracePropagationList_mgw_TraceDepthExtension,
        TracePropagationList,
        _ActivateTraceModeRes_extensionContainer,
        _ActivateTraceModeRes_traceSupportIndicator,
        ActivateTraceModeRes,
        _DeactivateTraceModeArg_imsi,
        _DeactivateTraceModeArg_traceReference,
        _DeactivateTraceModeArg_extensionContainer,
        _DeactivateTraceModeArg_traceReference2,
        DeactivateTraceModeArg,
        _DeactivateTraceModeRes_extensionContainer,
        DeactivateTraceModeRes,
    ]

class MAP_OperationAndMaintenanceOperations:

    _name_  = 'MAP-OperationAndMaintenanceOperations'
    _oid_   = [0, 4, 0, 0, 1, 3, 6, 19]
    
    _obj_ = [
        'activateTraceMode',
        'deactivateTraceMode',
        'sendIMSI',
        ]
    _type_ = [
        ]
    _set_ = [
        ]
    _val_ = [
        'activateTraceMode',
        'deactivateTraceMode',
        'sendIMSI',
        ]
    _class_ = [
        'activateTraceMode',
        'deactivateTraceMode',
        'sendIMSI',
        ]
    _param_ = [
        ]
    
    #-----< activateTraceMode >-----#
    activateTraceMode = CLASS(name='activateTraceMode', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _activateTraceMode_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'ActivateTraceModeArg')))
    _activateTraceMode_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'ActivateTraceModeRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TracingBufferFullParam')))
    activateTraceMode._val = dict([('ArgumentType', _activateTraceMode_val_ArgumentType), ('ResultType', _activateTraceMode_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))])
    
    #-----< deactivateTraceMode >-----#
    deactivateTraceMode = CLASS(name='deactivateTraceMode', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _deactivateTraceMode_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'DeactivateTraceModeArg')))
    _deactivateTraceMode_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'DeactivateTraceModeRes')))
    deactivateTraceMode._val = dict([('ArgumentType', _deactivateTraceMode_val_ArgumentType), ('ResultType', _deactivateTraceMode_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 51))])
    
    #-----< sendIMSI >-----#
    sendIMSI = CLASS(name='sendIMSI', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _sendIMSI_val_ArgumentType = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _sendIMSI_val_ResultType = OCT_STR(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    __sendRoutingInfo_Errors_val_ParameterType_0_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    sendIMSI._val = dict([('ArgumentType', _sendIMSI_val_ArgumentType), ('ResultType', _sendIMSI_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 58))])
    
    _all_ = [
        activateTraceMode,
        _activateTraceMode_val_ArgumentType,
        _activateTraceMode_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0,
        __sendRoutingInfo_Errors_val_ParameterType_1,
        __sendRoutingInfo_Errors_val_ParameterType_2,
        __sendRoutingInfo_Errors_val_ParameterType_3,
        __sendRoutingInfo_Errors_val_ParameterType_4,
        __sendRoutingInfo_Errors_val_ParameterType_5,
        deactivateTraceMode,
        _deactivateTraceMode_val_ArgumentType,
        _deactivateTraceMode_val_ResultType,
        sendIMSI,
        _sendIMSI_val_ArgumentType,
        _sendIMSI_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0_0,
        __sendRoutingInfo_Errors_val_ParameterType_1_0,
        __sendRoutingInfo_Errors_val_ParameterType_2_0,
    ]

class MAP_Protocol:

    _name_  = 'MAP-Protocol'
    _oid_   = [0, 4, 0, 0, 1, 3, 4, 19]
    
    _obj_ = [
        'Supported-MAP-Operations',
        ]
    _type_ = [
        ]
    _set_ = [
        'Supported-MAP-Operations',
        ]
    _val_ = [
        ]
    _class_ = [
        'Supported-MAP-Operations',
        ]
    _param_ = [
        ]
    
    #-----< Supported-MAP-Operations >-----#
    Supported_MAP_Operations = CLASS(name='Supported-MAP-Operations', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _Supported_MAP_Operations_val_ArgumentType_0 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateLocationArg')))
    _Supported_MAP_Operations_val_ResultType_0 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'RoamingNotAllowedParam')))
    _Supported_MAP_Operations_val_ArgumentType_1 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelLocationArg')))
    _Supported_MAP_Operations_val_ResultType_1 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    _Supported_MAP_Operations_val_ArgumentType_2 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelVcsgLocationArg')))
    _Supported_MAP_Operations_val_ResultType_2 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelVcsgLocationRes')))
    _Supported_MAP_Operations_val_ArgumentType_3 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PurgeMS-Arg')))
    _Supported_MAP_Operations_val_ResultType_3 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PurgeMS-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_2_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    _Supported_MAP_Operations_val_ArgumentType_4 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendIdentificationArg')))
    _Supported_MAP_Operations_val_ResultType_4 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendIdentificationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    _Supported_MAP_Operations_val_ArgumentType_5 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateGprsLocationArg')))
    _Supported_MAP_Operations_val_ResultType_5 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateGprsLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_3_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'RoamingNotAllowedParam')))
    _Supported_MAP_Operations_val_ArgumentType_6 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateVcsgLocationArg')))
    _Supported_MAP_Operations_val_ResultType_6 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateVcsgLocationRes')))
    _Supported_MAP_Operations_val_ArgumentType_7 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareHO-Arg')))
    _Supported_MAP_Operations_val_ResultType_7 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareHO-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TargetCellOutsideGCA-Param')))
    _Supported_MAP_Operations_val_ArgumentType_8 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendEndSignal-Arg')))
    _Supported_MAP_Operations_val_ResultType_8 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendEndSignal-Res')))
    _Supported_MAP_Operations_val_ArgumentType_9 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ProcessAccessSignalling-Arg')))
    _Supported_MAP_Operations_val_ArgumentType_10 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ForwardAccessSignalling-Arg')))
    _Supported_MAP_Operations_val_ArgumentType_11 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareSubsequentHO-Arg')))
    _Supported_MAP_Operations_val_ResultType_11 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareSubsequentHO-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_0_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    _Supported_MAP_Operations_val_ArgumentType_12 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendAuthenticationInfoArg')))
    _Supported_MAP_Operations_val_ResultType_12 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendAuthenticationInfoRes')))
    _Supported_MAP_Operations_val_ArgumentType_13 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AuthenticationFailureReportArg')))
    _Supported_MAP_Operations_val_ResultType_13 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AuthenticationFailureReportRes')))
    _Supported_MAP_Operations_val_ArgumentType_14 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CheckIMEI-Arg')))
    _Supported_MAP_Operations_val_ResultType_14 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CheckIMEI-Res')))
    _Supported_MAP_Operations_val_ArgumentType_15 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'InsertSubscriberDataArg')))
    _Supported_MAP_Operations_val_ResultType_15 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'InsertSubscriberDataRes')))
    __sendRoutingInfo_Errors_val_ParameterType_2_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    _Supported_MAP_Operations_val_ArgumentType_16 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'DeleteSubscriberDataArg')))
    _Supported_MAP_Operations_val_ResultType_16 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'DeleteSubscriberDataRes')))
    _Supported_MAP_Operations_val_ArgumentType_17 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ResetArg')))
    _Supported_MAP_Operations_val_ArgumentType_19 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RestoreDataArg')))
    _Supported_MAP_Operations_val_ResultType_19 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RestoreDataRes')))
    _Supported_MAP_Operations_val_ArgumentType_20 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ProvideSubscriberInfoArg')))
    _Supported_MAP_Operations_val_ResultType_20 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ProvideSubscriberInfoRes')))
    _Supported_MAP_Operations_val_ArgumentType_21 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeInterrogationArg')))
    _Supported_MAP_Operations_val_ResultType_21 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeInterrogationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATI-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    _Supported_MAP_Operations_val_ArgumentType_22 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeSubscriptionInterrogationArg')))
    _Supported_MAP_Operations_val_ResultType_22 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeSubscriptionInterrogationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATSI-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BearerServNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TeleservNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSS-OperationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-NotAvailableParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'InformationNotAvailableParam')))
    _Supported_MAP_Operations_val_ArgumentType_23 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeModificationArg')))
    _Supported_MAP_Operations_val_ResultType_23 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeModificationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATM-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-SubscriptionViolationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9_0 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    __sendRoutingInfo_Errors_val_ParameterType_10 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    __sendRoutingInfo_Errors_val_ParameterType_11 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'InformationNotAvailableParam')))
    _Supported_MAP_Operations_val_ArgumentType_24 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendRoutingInfoForGprsArg')))
    _Supported_MAP_Operations_val_ResultType_24 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendRoutingInfoForGprsRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1_3 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_0 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    _Supported_MAP_Operations_val_ArgumentType_25 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'FailureReportArg')))
    _Supported_MAP_Operations_val_ResultType_25 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'FailureReportRes')))
    _Supported_MAP_Operations_val_ArgumentType_26 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMsPresentForGprsArg')))
    _Supported_MAP_Operations_val_ResultType_26 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMsPresentForGprsRes')))
    _Supported_MAP_Operations_val_ArgumentType_27 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMM-EventArg')))
    _Supported_MAP_Operations_val_ResultType_27 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMM-EventRes')))
    __sendRoutingInfo_Errors_val_ParameterType_3_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'MM-EventNotSupported-Param')))
    _Supported_MAP_Operations_val_ArgumentType_28 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteSubscriberDataModifiedArg')))
    _Supported_MAP_Operations_val_ResultType_28 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteSubscriberDataModifiedRes')))
    _Supported_MAP_Operations_val_ArgumentType_29 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'ActivateTraceModeArg')))
    _Supported_MAP_Operations_val_ResultType_29 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'ActivateTraceModeRes')))
    __sendRoutingInfo_Errors_val_ParameterType_3_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TracingBufferFullParam')))
    _Supported_MAP_Operations_val_ArgumentType_30 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'DeactivateTraceModeArg')))
    _Supported_MAP_Operations_val_ResultType_30 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'DeactivateTraceModeRes')))
    _Supported_MAP_Operations_val_ArgumentType_31 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _Supported_MAP_Operations_val_ResultType_31 = OCT_STR(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _Supported_MAP_Operations_val_ArgumentType_32 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SendRoutingInfoArg')))
    _Supported_MAP_Operations_val_ResultType_32 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SendRoutingInfoRes')))
    __sendRoutingInfo_Errors_val_ParameterType_4_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'OR-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NumberChangedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BearerServNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TeleservNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_10_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BusySubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_11_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoSubscriberReplyParam')))
    __sendRoutingInfo_Errors_val_ParameterType_12 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    __sendRoutingInfo_Errors_val_ParameterType_13 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CUG-RejectParam')))
    __sendRoutingInfo_Errors_val_ParameterType_14 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ForwardingViolationParam')))
    _Supported_MAP_Operations_val_ArgumentType_33 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ProvideRoamingNumberArg')))
    _Supported_MAP_Operations_val_ResultType_33 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ProvideRoamingNumberRes')))
    __sendRoutingInfo_Errors_val_ParameterType_5_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoRoamingNbParam')))
    _Supported_MAP_Operations_val_ArgumentType_34 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ResumeCallHandlingArg')))
    _Supported_MAP_Operations_val_ResultType_34 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ResumeCallHandlingRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ForwardingFailedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'OR-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    _Supported_MAP_Operations_val_ArgumentType_35 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SetReportingStateArg')))
    _Supported_MAP_Operations_val_ResultType_35 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SetReportingStateRes')))
    __sendRoutingInfo_Errors_val_ParameterType_4_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ResourceLimitationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    _Supported_MAP_Operations_val_ArgumentType_36 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'StatusReportArg')))
    _Supported_MAP_Operations_val_ResultType_36 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'StatusReportRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    _Supported_MAP_Operations_val_ArgumentType_37 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'RemoteUserFreeArg')))
    _Supported_MAP_Operations_val_ResultType_37 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'RemoteUserFreeRes')))
    __sendRoutingInfo_Errors_val_ParameterType_2_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IncompatibleTerminalParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_6 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BusySubscriberParam')))
    _Supported_MAP_Operations_val_ArgumentType_38 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-AlertArg')))
    _Supported_MAP_Operations_val_ResultType_38 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-AlertRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ResourceLimitationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_6 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    _Supported_MAP_Operations_val_ArgumentType_39 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-CommandArg')))
    _Supported_MAP_Operations_val_ResultType_39 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-CommandRes')))
    _Supported_MAP_Operations_val_ArgumentType_40 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'RegisterSS-Arg')))
    _Supported_MAP_Operations_val_ResultType_40 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Info')))
    __sendRoutingInfo_Errors_val_ParameterType_3_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BearerServNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_8 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TeleservNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSS-OperationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7_1 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    __sendRoutingInfo_Errors_val_ParameterType_8_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    _Supported_MAP_Operations_val_ArgumentType_41 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-ForBS-Code')))
    _Supported_MAP_Operations_val_ResultType_41 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Info')))
    _Supported_MAP_Operations_val_ArgumentType_42 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-ForBS-Code')))
    _Supported_MAP_Operations_val_ResultType_42 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Info')))
    __sendRoutingInfo_Errors_val_ParameterType_9_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    _Supported_MAP_Operations_val_ArgumentType_43 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-ForBS-Code')))
    _Supported_MAP_Operations_val_ResultType_43 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Info')))
    _Supported_MAP_Operations_val_ArgumentType_44 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-ForBS-Code')))
    _Supported_MAP_Operations_val_ResultType_44 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'InterrogateSS-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_7_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-NotAvailableParam')))
    _Supported_MAP_Operations_val_ArgumentType_45 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Arg')))
    _Supported_MAP_Operations_val_ResultType_45 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4_9 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    _Supported_MAP_Operations_val_ArgumentType_46 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Arg')))
    _Supported_MAP_Operations_val_ResultType_46 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4_10 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalEquipmentParam')))
    _Supported_MAP_Operations_val_ArgumentType_47 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Arg')))
    _Supported_MAP_Operations_val_ArgumentType_48 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _Supported_MAP_Operations_val_ResultType_48 = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'Password')))
    _Supported_MAP_Operations_val_ResultType_48._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    __sendRoutingInfo_Errors_val_ParameterType_3_8 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4__11 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-SubscriptionViolationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_7 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'PW-RegistrationFailureCause')))
    _Supported_MAP_Operations_val_ArgumentType_49 = ENUM(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'GuidanceInfo')))
    _Supported_MAP_Operations_val_ResultType_49 = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'Password')))
    _Supported_MAP_Operations_val_ResultType_49._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    _Supported_MAP_Operations_val_ArgumentType_50 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-InvocationNotificationArg')))
    _Supported_MAP_Operations_val_ResultType_50 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-InvocationNotificationRes')))
    _Supported_MAP_Operations_val_ArgumentType_51 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'RegisterCC-EntryArg')))
    _Supported_MAP_Operations_val_ResultType_51 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'RegisterCC-EntryRes')))
    __sendRoutingInfo_Errors_val_ParameterType_4___12 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSS-OperationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_8 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    __sendRoutingInfo_Errors_val_ParameterType_6_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    __sendRoutingInfo_Errors_val_ParameterType_7_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ShortTermDenialParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'LongTermDenialParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    _Supported_MAP_Operations_val_ArgumentType_52 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'EraseCC-EntryArg')))
    _Supported_MAP_Operations_val_ResultType_52 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'EraseCC-EntryRes')))
    _Supported_MAP_Operations_val_ArgumentType_53 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'RoutingInfoForSM-Arg')))
    _Supported_MAP_Operations_val_ResultType_53 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'RoutingInfoForSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_7_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberSM-Param')))
    _Supported_MAP_Operations_val_ArgumentType_54 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MO-ForwardSM-Arg')))
    _Supported_MAP_Operations_val_ResultType_54 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MO-ForwardSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_2_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_9 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SM-DeliveryFailureCause')))
    _Supported_MAP_Operations_val_ArgumentType_55 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-Arg')))
    _Supported_MAP_Operations_val_ResultType_55 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_5_9 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalEquipmentParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SubBusyForMT-SMS-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_8_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SM-DeliveryFailureCause')))
    __sendRoutingInfo_Errors_val_ParameterType_9_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberSM-Param')))
    _Supported_MAP_Operations_val_ArgumentType_56 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReportSM-DeliveryStatusArg')))
    _Supported_MAP_Operations_val_ResultType_56 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReportSM-DeliveryStatusRes')))
    __sendRoutingInfo_Errors_val_ParameterType_3_10 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'MessageWaitListFullParam')))
    _Supported_MAP_Operations_val_ArgumentType_57 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'AlertServiceCentreArg')))
    _Supported_MAP_Operations_val_ArgumentType_58 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'InformServiceCentreArg')))
    _Supported_MAP_Operations_val_ArgumentType_59 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReadyForSM-Arg')))
    _Supported_MAP_Operations_val_ResultType_59 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReadyForSM-Res')))
    _Supported_MAP_Operations_val_ArgumentType_60 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'PrepareGroupCallArg')))
    _Supported_MAP_Operations_val_ResultType_60 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'PrepareGroupCallRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoGroupCallNbParam')))
    _Supported_MAP_Operations_val_ArgumentType_61 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'ProcessGroupCallSignallingArg')))
    _Supported_MAP_Operations_val_ArgumentType_62 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'ForwardGroupCallSignallingArg')))
    _Supported_MAP_Operations_val_ArgumentType_63 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallEndSignalArg')))
    _Supported_MAP_Operations_val_ResultType_63 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallEndSignalRes')))
    _Supported_MAP_Operations_val_ArgumentType_64 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ProvideSubscriberLocation-Arg')))
    _Supported_MAP_Operations_val_ResultType_64 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ProvideSubscriberLocation-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_7_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedRequestingNetwork-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_9_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedLCSClient-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_10_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'PositionMethodFailure-Param')))
    _Supported_MAP_Operations_val_ArgumentType_65 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'RoutingInfoForLCS-Arg')))
    _Supported_MAP_Operations_val_ResultType_65 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'RoutingInfoForLCS-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_6_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedRequestingNetwork-Param')))
    _Supported_MAP_Operations_val_ArgumentType_66 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'SubscriberLocationReport-Arg')))
    _Supported_MAP_Operations_val_ResultType_66 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'SubscriberLocationReport-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_2_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ResourceLimitationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_10 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedRequestingNetwork-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_6_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownOrUnreachableLCSClient-Param')))
    _Supported_MAP_Operations_val_ArgumentType_67 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ReleaseResourcesArg')))
    _Supported_MAP_Operations_val_ResultType_67 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ReleaseResourcesRes')))
    _Supported_MAP_Operations_val_ArgumentType_68 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-VGCS-Arg')))
    _Supported_MAP_Operations_val_ResultType_68 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-VGCS-Res')))
    _Supported_MAP_Operations_val_ArgumentType_69 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallInfoArg')))
    _Supported_MAP_Operations_val_ResultType_69 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallInfoRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'OngoingGroupCallParam')))
    Supported_MAP_Operations._val = ASN1Set(rv=[dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_0), ('ResultType', _Supported_MAP_Operations_val_ResultType_0), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 2))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_1), ('ResultType', _Supported_MAP_Operations_val_ResultType_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 3))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_2), ('ResultType', _Supported_MAP_Operations_val_ResultType_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 36))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_3), ('ResultType', _Supported_MAP_Operations_val_ResultType_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 67))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_4), ('ResultType', _Supported_MAP_Operations_val_ResultType_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 55))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_5), ('ResultType', _Supported_MAP_Operations_val_ResultType_5), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 23))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_6), ('ResultType', _Supported_MAP_Operations_val_ResultType_6), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 53))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_7), ('ResultType', _Supported_MAP_Operations_val_ResultType_7), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('errorCode', ('local', 25))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 42))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 68))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_8), ('ResultType', _Supported_MAP_Operations_val_ResultType_8), ('operationCode', ('local', 29))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_9), ('operationCode', ('local', 33))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_10), ('operationCode', ('local', 34))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_11), ('ResultType', _Supported_MAP_Operations_val_ResultType_11), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_12), ('ResultType', _Supported_MAP_Operations_val_ResultType_12), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 56))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_13), ('ResultType', _Supported_MAP_Operations_val_ResultType_13), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 15))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_14), ('ResultType', _Supported_MAP_Operations_val_ResultType_14), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('errorCode', ('local', 7))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 43))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_15), ('ResultType', _Supported_MAP_Operations_val_ResultType_15), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_1), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_16), ('ResultType', _Supported_MAP_Operations_val_ResultType_16), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_1), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 8))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_17), ('operationCode', ('local', 37))]), dict([('operationCode', ('local', 38))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_19), ('ResultType', _Supported_MAP_Operations_val_ResultType_19), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 57))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_20), ('ResultType', _Supported_MAP_Operations_val_ResultType_20), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 70))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_21), ('ResultType', _Supported_MAP_Operations_val_ResultType_21), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_2), ('errorCode', ('local', 49))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 71))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_22), ('ResultType', _Supported_MAP_Operations_val_ResultType_22), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_2), ('errorCode', ('local', 60))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_2), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8), ('errorCode', ('local', 18))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9), ('errorCode', ('local', 62))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 62))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_23), ('ResultType', _Supported_MAP_Operations_val_ResultType_23), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 61))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_2), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_0), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_0), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10), ('errorCode', ('local', 20))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_11), ('errorCode', ('local', 62))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 65))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_24), ('ResultType', _Supported_MAP_Operations_val_ResultType_24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_4), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_3), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 24))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_25), ('ResultType', _Supported_MAP_Operations_val_ResultType_25), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 25))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_26), ('ResultType', _Supported_MAP_Operations_val_ResultType_26), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 26))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_27), ('ResultType', _Supported_MAP_Operations_val_ResultType_27), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 59))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 89))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_28), ('ResultType', _Supported_MAP_Operations_val_ResultType_28), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 5))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_29), ('ResultType', _Supported_MAP_Operations_val_ResultType_29), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_1), ('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_30), ('ResultType', _Supported_MAP_Operations_val_ResultType_30), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 51))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_31), ('ResultType', _Supported_MAP_Operations_val_ResultType_31), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 58))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_32), ('ResultType', _Supported_MAP_Operations_val_ResultType_32), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_0), ('errorCode', ('local', 44))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_0), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_0), ('errorCode', ('local', 45))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_11_0), ('errorCode', ('local', 46))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_12), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_13), ('errorCode', ('local', 15))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_14), ('errorCode', ('local', 14))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 22))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_33), ('ResultType', _Supported_MAP_Operations_val_ResultType_33), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_3), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 39))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 4))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_34), ('ResultType', _Supported_MAP_Operations_val_ResultType_34), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 47))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_4), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 6))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_35), ('ResultType', _Supported_MAP_Operations_val_ResultType_35), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_5), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_4), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 73))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_36), ('ResultType', _Supported_MAP_Operations_val_ResultType_36), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_6), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_3), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 74))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_37), ('ResultType', _Supported_MAP_Operations_val_ResultType_37), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_3), ('errorCode', ('local', 28))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_6), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_5), ('errorCode', ('local', 45))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 75))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_38), ('ResultType', _Supported_MAP_Operations_val_ResultType_38), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_5), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_6), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 87))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_39), ('ResultType', _Supported_MAP_Operations_val_ResultType_39), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_5), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_6), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 88))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_40), ('ResultType', _Supported_MAP_Operations_val_ResultType_40), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_7), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_8), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_2), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_2), ('errorCode', ('local', 20))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 10))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_41), ('ResultType', _Supported_MAP_Operations_val_ResultType_41), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_7), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_8), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_2), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_1), ('errorCode', ('local', 17))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 11))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_42), ('ResultType', _Supported_MAP_Operations_val_ResultType_42), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_7), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_8), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_2), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_0), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_2), ('errorCode', ('local', 20))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 12))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_43), ('ResultType', _Supported_MAP_Operations_val_ResultType_43), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_7), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_8), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_2), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_0), ('errorCode', ('local', 19))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 13))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_44), ('ResultType', _Supported_MAP_Operations_val_ResultType_44), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_7), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_8), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_2), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_2), ('errorCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 14))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_45), ('ResultType', _Supported_MAP_Operations_val_ResultType_45), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('errorCode', ('local', 71))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_9), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 59))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_46), ('ResultType', _Supported_MAP_Operations_val_ResultType_46), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_10), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 60))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_47), ('returnResult', True), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_10), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 61))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_48), ('ResultType', _Supported_MAP_Operations_val_ResultType_48), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_8), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4__11), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_7), ('errorCode', ('local', 37))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 17))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_49), ('ResultType', _Supported_MAP_Operations_val_ResultType_49), ('operationCode', ('local', 18))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_50), ('ResultType', _Supported_MAP_Operations_val_ResultType_50), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 72))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_51), ('ResultType', _Supported_MAP_Operations_val_ResultType_51), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_8), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4___12), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_8), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_3), ('errorCode', ('local', 20))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_3), ('errorCode', ('local', 29))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_3), ('errorCode', ('local', 30))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_3), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 76))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_52), ('ResultType', _Supported_MAP_Operations_val_ResultType_52), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_8), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4___12), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_8), ('errorCode', ('local', 17))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 77))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_53), ('ResultType', _Supported_MAP_Operations_val_ResultType_53), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_4), ('errorCode', ('local', 6))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_54), ('ResultType', _Supported_MAP_Operations_val_ResultType_54), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_4), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_9), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_55), ('ResultType', _Supported_MAP_Operations_val_ResultType_55), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_9), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_4), ('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_5), ('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_4), ('errorCode', ('local', 32))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_4), ('errorCode', ('local', 6))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 44))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_56), ('ResultType', _Supported_MAP_Operations_val_ResultType_56), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_10), ('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_57), ('returnResult', True), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 64))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_58), ('operationCode', ('local', 63))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_59), ('ResultType', _Supported_MAP_Operations_val_ResultType_59), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_4), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 66))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_60), ('ResultType', _Supported_MAP_Operations_val_ResultType_60), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 50))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 39))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_61), ('operationCode', ('local', 41))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_62), ('operationCode', ('local', 42))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_63), ('ResultType', _Supported_MAP_Operations_val_ResultType_63), ('operationCode', ('local', 40))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_64), ('ResultType', _Supported_MAP_Operations_val_ResultType_64), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_9), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_4), ('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_6), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_5), ('errorCode', ('local', 52))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_5), ('errorCode', ('local', 53))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_1), ('errorCode', ('local', 54))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 83))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_65), ('ResultType', _Supported_MAP_Operations_val_ResultType_65), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_3), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_5), ('errorCode', ('local', 52))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 85))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_66), ('ResultType', _Supported_MAP_Operations_val_ResultType_66), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_5), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_10), ('errorCode', ('local', 52))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_6), ('errorCode', ('local', 58))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 86))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_67), ('ResultType', _Supported_MAP_Operations_val_ResultType_67), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_3), ('errorCode', ('local', 34))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 20))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_68), ('ResultType', _Supported_MAP_Operations_val_ResultType_68), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 21))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_69), ('ResultType', _Supported_MAP_Operations_val_ResultType_69), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 22))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_8), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 84))])], rr=[], ev=None, er=[])
    
    _all_ = [
        Supported_MAP_Operations,
        _Supported_MAP_Operations_val_ArgumentType_0,
        _Supported_MAP_Operations_val_ResultType_0,
        __sendRoutingInfo_Errors_val_ParameterType_0,
        __sendRoutingInfo_Errors_val_ParameterType_1,
        __sendRoutingInfo_Errors_val_ParameterType_2,
        __sendRoutingInfo_Errors_val_ParameterType_3,
        __sendRoutingInfo_Errors_val_ParameterType_4,
        _Supported_MAP_Operations_val_ArgumentType_1,
        _Supported_MAP_Operations_val_ResultType_1,
        __sendRoutingInfo_Errors_val_ParameterType_0_0,
        __sendRoutingInfo_Errors_val_ParameterType_1_0,
        _Supported_MAP_Operations_val_ArgumentType_2,
        _Supported_MAP_Operations_val_ResultType_2,
        _Supported_MAP_Operations_val_ArgumentType_3,
        _Supported_MAP_Operations_val_ResultType_3,
        __sendRoutingInfo_Errors_val_ParameterType_2_0,
        _Supported_MAP_Operations_val_ArgumentType_4,
        _Supported_MAP_Operations_val_ResultType_4,
        __sendRoutingInfo_Errors_val_ParameterType_1_1,
        _Supported_MAP_Operations_val_ArgumentType_5,
        _Supported_MAP_Operations_val_ResultType_5,
        __sendRoutingInfo_Errors_val_ParameterType_3_0,
        _Supported_MAP_Operations_val_ArgumentType_6,
        _Supported_MAP_Operations_val_ResultType_6,
        _Supported_MAP_Operations_val_ArgumentType_7,
        _Supported_MAP_Operations_val_ResultType_7,
        __sendRoutingInfo_Errors_val_ParameterType_4_0,
        _Supported_MAP_Operations_val_ArgumentType_8,
        _Supported_MAP_Operations_val_ResultType_8,
        _Supported_MAP_Operations_val_ArgumentType_9,
        _Supported_MAP_Operations_val_ArgumentType_10,
        _Supported_MAP_Operations_val_ArgumentType_11,
        _Supported_MAP_Operations_val_ResultType_11,
        __sendRoutingInfo_Errors_val_ParameterType_0_1,
        _Supported_MAP_Operations_val_ArgumentType_12,
        _Supported_MAP_Operations_val_ResultType_12,
        _Supported_MAP_Operations_val_ArgumentType_13,
        _Supported_MAP_Operations_val_ResultType_13,
        _Supported_MAP_Operations_val_ArgumentType_14,
        _Supported_MAP_Operations_val_ResultType_14,
        _Supported_MAP_Operations_val_ArgumentType_15,
        _Supported_MAP_Operations_val_ResultType_15,
        __sendRoutingInfo_Errors_val_ParameterType_2_1,
        _Supported_MAP_Operations_val_ArgumentType_16,
        _Supported_MAP_Operations_val_ResultType_16,
        _Supported_MAP_Operations_val_ArgumentType_17,
        _Supported_MAP_Operations_val_ArgumentType_19,
        _Supported_MAP_Operations_val_ResultType_19,
        _Supported_MAP_Operations_val_ArgumentType_20,
        _Supported_MAP_Operations_val_ResultType_20,
        _Supported_MAP_Operations_val_ArgumentType_21,
        _Supported_MAP_Operations_val_ResultType_21,
        __sendRoutingInfo_Errors_val_ParameterType_1_2,
        __sendRoutingInfo_Errors_val_ParameterType_2_2,
        __sendRoutingInfo_Errors_val_ParameterType_3_1,
        __sendRoutingInfo_Errors_val_ParameterType_4_1,
        _Supported_MAP_Operations_val_ArgumentType_22,
        _Supported_MAP_Operations_val_ResultType_22,
        __sendRoutingInfo_Errors_val_ParameterType_0_2,
        __sendRoutingInfo_Errors_val_ParameterType_4_2,
        __sendRoutingInfo_Errors_val_ParameterType_5,
        __sendRoutingInfo_Errors_val_ParameterType_6,
        __sendRoutingInfo_Errors_val_ParameterType_7,
        __sendRoutingInfo_Errors_val_ParameterType_8,
        __sendRoutingInfo_Errors_val_ParameterType_9,
        _Supported_MAP_Operations_val_ArgumentType_23,
        _Supported_MAP_Operations_val_ResultType_23,
        __sendRoutingInfo_Errors_val_ParameterType_0_3,
        __sendRoutingInfo_Errors_val_ParameterType_8_0,
        __sendRoutingInfo_Errors_val_ParameterType_9_0,
        __sendRoutingInfo_Errors_val_ParameterType_10,
        __sendRoutingInfo_Errors_val_ParameterType_11,
        _Supported_MAP_Operations_val_ArgumentType_24,
        _Supported_MAP_Operations_val_ResultType_24,
        __sendRoutingInfo_Errors_val_ParameterType_0_4,
        __sendRoutingInfo_Errors_val_ParameterType_1_3,
        __sendRoutingInfo_Errors_val_ParameterType_5_0,
        _Supported_MAP_Operations_val_ArgumentType_25,
        _Supported_MAP_Operations_val_ResultType_25,
        _Supported_MAP_Operations_val_ArgumentType_26,
        _Supported_MAP_Operations_val_ResultType_26,
        _Supported_MAP_Operations_val_ArgumentType_27,
        _Supported_MAP_Operations_val_ResultType_27,
        __sendRoutingInfo_Errors_val_ParameterType_3_2,
        _Supported_MAP_Operations_val_ArgumentType_28,
        _Supported_MAP_Operations_val_ResultType_28,
        _Supported_MAP_Operations_val_ArgumentType_29,
        _Supported_MAP_Operations_val_ResultType_29,
        __sendRoutingInfo_Errors_val_ParameterType_3_3,
        __sendRoutingInfo_Errors_val_ParameterType_4_3,
        __sendRoutingInfo_Errors_val_ParameterType_5_1,
        _Supported_MAP_Operations_val_ArgumentType_30,
        _Supported_MAP_Operations_val_ResultType_30,
        _Supported_MAP_Operations_val_ArgumentType_31,
        _Supported_MAP_Operations_val_ResultType_31,
        _Supported_MAP_Operations_val_ArgumentType_32,
        _Supported_MAP_Operations_val_ResultType_32,
        __sendRoutingInfo_Errors_val_ParameterType_4_4,
        __sendRoutingInfo_Errors_val_ParameterType_5_2,
        __sendRoutingInfo_Errors_val_ParameterType_6_0,
        __sendRoutingInfo_Errors_val_ParameterType_7_0,
        __sendRoutingInfo_Errors_val_ParameterType_8_1,
        __sendRoutingInfo_Errors_val_ParameterType_9_1,
        __sendRoutingInfo_Errors_val_ParameterType_10_0,
        __sendRoutingInfo_Errors_val_ParameterType_11_0,
        __sendRoutingInfo_Errors_val_ParameterType_12,
        __sendRoutingInfo_Errors_val_ParameterType_13,
        __sendRoutingInfo_Errors_val_ParameterType_14,
        _Supported_MAP_Operations_val_ArgumentType_33,
        _Supported_MAP_Operations_val_ResultType_33,
        __sendRoutingInfo_Errors_val_ParameterType_5_3,
        __sendRoutingInfo_Errors_val_ParameterType_6_1,
        _Supported_MAP_Operations_val_ArgumentType_34,
        _Supported_MAP_Operations_val_ResultType_34,
        __sendRoutingInfo_Errors_val_ParameterType_0_5,
        __sendRoutingInfo_Errors_val_ParameterType_1_4,
        __sendRoutingInfo_Errors_val_ParameterType_3_4,
        _Supported_MAP_Operations_val_ArgumentType_35,
        _Supported_MAP_Operations_val_ResultType_35,
        __sendRoutingInfo_Errors_val_ParameterType_4_5,
        __sendRoutingInfo_Errors_val_ParameterType_5_4,
        _Supported_MAP_Operations_val_ArgumentType_36,
        _Supported_MAP_Operations_val_ResultType_36,
        __sendRoutingInfo_Errors_val_ParameterType_0_6,
        _Supported_MAP_Operations_val_ArgumentType_37,
        _Supported_MAP_Operations_val_ResultType_37,
        __sendRoutingInfo_Errors_val_ParameterType_2_3,
        __sendRoutingInfo_Errors_val_ParameterType_3_5,
        __sendRoutingInfo_Errors_val_ParameterType_4_6,
        __sendRoutingInfo_Errors_val_ParameterType_5_5,
        _Supported_MAP_Operations_val_ArgumentType_38,
        _Supported_MAP_Operations_val_ResultType_38,
        __sendRoutingInfo_Errors_val_ParameterType_1_5,
        __sendRoutingInfo_Errors_val_ParameterType_3_6,
        __sendRoutingInfo_Errors_val_ParameterType_4_7,
        _Supported_MAP_Operations_val_ArgumentType_39,
        _Supported_MAP_Operations_val_ResultType_39,
        _Supported_MAP_Operations_val_ArgumentType_40,
        _Supported_MAP_Operations_val_ResultType_40,
        __sendRoutingInfo_Errors_val_ParameterType_3_7,
        __sendRoutingInfo_Errors_val_ParameterType_4_8,
        __sendRoutingInfo_Errors_val_ParameterType_6_2,
        __sendRoutingInfo_Errors_val_ParameterType_7_1,
        __sendRoutingInfo_Errors_val_ParameterType_8_2,
        _Supported_MAP_Operations_val_ArgumentType_41,
        _Supported_MAP_Operations_val_ResultType_41,
        _Supported_MAP_Operations_val_ArgumentType_42,
        _Supported_MAP_Operations_val_ResultType_42,
        __sendRoutingInfo_Errors_val_ParameterType_9_2,
        _Supported_MAP_Operations_val_ArgumentType_43,
        _Supported_MAP_Operations_val_ResultType_43,
        _Supported_MAP_Operations_val_ArgumentType_44,
        _Supported_MAP_Operations_val_ResultType_44,
        __sendRoutingInfo_Errors_val_ParameterType_7_2,
        _Supported_MAP_Operations_val_ArgumentType_45,
        _Supported_MAP_Operations_val_ResultType_45,
        __sendRoutingInfo_Errors_val_ParameterType_4_9,
        _Supported_MAP_Operations_val_ArgumentType_46,
        _Supported_MAP_Operations_val_ResultType_46,
        __sendRoutingInfo_Errors_val_ParameterType_4_10,
        __sendRoutingInfo_Errors_val_ParameterType_5_6,
        _Supported_MAP_Operations_val_ArgumentType_47,
        _Supported_MAP_Operations_val_ArgumentType_48,
        _Supported_MAP_Operations_val_ResultType_48,
        __sendRoutingInfo_Errors_val_ParameterType_3_8,
        __sendRoutingInfo_Errors_val_ParameterType_4__11,
        __sendRoutingInfo_Errors_val_ParameterType_5_7,
        _Supported_MAP_Operations_val_ArgumentType_49,
        _Supported_MAP_Operations_val_ResultType_49,
        _Supported_MAP_Operations_val_ArgumentType_50,
        _Supported_MAP_Operations_val_ResultType_50,
        _Supported_MAP_Operations_val_ArgumentType_51,
        _Supported_MAP_Operations_val_ResultType_51,
        __sendRoutingInfo_Errors_val_ParameterType_4___12,
        __sendRoutingInfo_Errors_val_ParameterType_5_8,
        __sendRoutingInfo_Errors_val_ParameterType_6_3,
        __sendRoutingInfo_Errors_val_ParameterType_7_3,
        __sendRoutingInfo_Errors_val_ParameterType_8_3,
        __sendRoutingInfo_Errors_val_ParameterType_9_3,
        _Supported_MAP_Operations_val_ArgumentType_52,
        _Supported_MAP_Operations_val_ResultType_52,
        _Supported_MAP_Operations_val_ArgumentType_53,
        _Supported_MAP_Operations_val_ResultType_53,
        __sendRoutingInfo_Errors_val_ParameterType_7_4,
        _Supported_MAP_Operations_val_ArgumentType_54,
        _Supported_MAP_Operations_val_ResultType_54,
        __sendRoutingInfo_Errors_val_ParameterType_2_4,
        __sendRoutingInfo_Errors_val_ParameterType_3_9,
        _Supported_MAP_Operations_val_ArgumentType_55,
        _Supported_MAP_Operations_val_ResultType_55,
        __sendRoutingInfo_Errors_val_ParameterType_5_9,
        __sendRoutingInfo_Errors_val_ParameterType_6_4,
        __sendRoutingInfo_Errors_val_ParameterType_7_5,
        __sendRoutingInfo_Errors_val_ParameterType_8_4,
        __sendRoutingInfo_Errors_val_ParameterType_9_4,
        _Supported_MAP_Operations_val_ArgumentType_56,
        _Supported_MAP_Operations_val_ResultType_56,
        __sendRoutingInfo_Errors_val_ParameterType_3_10,
        _Supported_MAP_Operations_val_ArgumentType_57,
        _Supported_MAP_Operations_val_ArgumentType_58,
        _Supported_MAP_Operations_val_ArgumentType_59,
        _Supported_MAP_Operations_val_ResultType_59,
        _Supported_MAP_Operations_val_ArgumentType_60,
        _Supported_MAP_Operations_val_ResultType_60,
        __sendRoutingInfo_Errors_val_ParameterType_1_6,
        _Supported_MAP_Operations_val_ArgumentType_61,
        _Supported_MAP_Operations_val_ArgumentType_62,
        _Supported_MAP_Operations_val_ArgumentType_63,
        _Supported_MAP_Operations_val_ResultType_63,
        _Supported_MAP_Operations_val_ArgumentType_64,
        _Supported_MAP_Operations_val_ResultType_64,
        __sendRoutingInfo_Errors_val_ParameterType_7_6,
        __sendRoutingInfo_Errors_val_ParameterType_8_5,
        __sendRoutingInfo_Errors_val_ParameterType_9_5,
        __sendRoutingInfo_Errors_val_ParameterType_10_1,
        _Supported_MAP_Operations_val_ArgumentType_65,
        _Supported_MAP_Operations_val_ResultType_65,
        __sendRoutingInfo_Errors_val_ParameterType_6_5,
        _Supported_MAP_Operations_val_ArgumentType_66,
        _Supported_MAP_Operations_val_ResultType_66,
        __sendRoutingInfo_Errors_val_ParameterType_2_5,
        __sendRoutingInfo_Errors_val_ParameterType_5_10,
        __sendRoutingInfo_Errors_val_ParameterType_6_6,
        _Supported_MAP_Operations_val_ArgumentType_67,
        _Supported_MAP_Operations_val_ResultType_67,
        _Supported_MAP_Operations_val_ArgumentType_68,
        _Supported_MAP_Operations_val_ResultType_68,
        _Supported_MAP_Operations_val_ArgumentType_69,
        _Supported_MAP_Operations_val_ResultType_69,
        __sendRoutingInfo_Errors_val_ParameterType_1_7,
    ]

class MAP_SM_DataTypes:

    _name_  = 'MAP-SM-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 16, 19]
    
    _obj_ = [
        'RoutingInfoForSM-Arg',
        'SM-DeliveryNotIntended',
        'SM-RP-MTI',
        'SM-RP-SMEA',
        'RoutingInfoForSM-Res',
        'IP-SM-GW-Guidance',
        'LocationInfoWithLMSI',
        'Additional-Number',
        'MO-ForwardSM-Arg',
        'MO-ForwardSM-Res',
        'MT-ForwardSM-Arg',
        'CorrelationID',
        'SIP-URI',
        'MT-ForwardSM-Res',
        'SM-RP-DA',
        'SM-RP-OA',
        'SM-DeliveryTimerValue',
        'ReportSM-DeliveryStatusArg',
        'SM-DeliveryOutcome',
        'ReportSM-DeliveryStatusRes',
        'AlertServiceCentreArg',
        'SmsGmsc-Alert-Event',
        'InformServiceCentreArg',
        'MW-Status',
        'ReadyForSM-Arg',
        'ReadyForSM-Res',
        'AlertReason',
        'MT-ForwardSM-VGCS-Arg',
        'MT-ForwardSM-VGCS-Res',
        'DispatcherList',
        'maxNumOfDispatchers',
        'AdditionalDispatcherList',
        'maxNumOfAdditionalDispatchers',
        ]
    _type_ = [
        'RoutingInfoForSM-Arg',
        'SM-DeliveryNotIntended',
        'SM-RP-MTI',
        'SM-RP-SMEA',
        'RoutingInfoForSM-Res',
        'IP-SM-GW-Guidance',
        'LocationInfoWithLMSI',
        'Additional-Number',
        'MO-ForwardSM-Arg',
        'MO-ForwardSM-Res',
        'MT-ForwardSM-Arg',
        'CorrelationID',
        'SIP-URI',
        'MT-ForwardSM-Res',
        'SM-RP-DA',
        'SM-RP-OA',
        'SM-DeliveryTimerValue',
        'ReportSM-DeliveryStatusArg',
        'SM-DeliveryOutcome',
        'ReportSM-DeliveryStatusRes',
        'AlertServiceCentreArg',
        'SmsGmsc-Alert-Event',
        'InformServiceCentreArg',
        'MW-Status',
        'ReadyForSM-Arg',
        'ReadyForSM-Res',
        'AlertReason',
        'MT-ForwardSM-VGCS-Arg',
        'MT-ForwardSM-VGCS-Res',
        'DispatcherList',
        'AdditionalDispatcherList',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxNumOfDispatchers',
        'maxNumOfAdditionalDispatchers',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< RoutingInfoForSM-Arg >-----#
    RoutingInfoForSM_Arg = SEQ(name='RoutingInfoForSM-Arg', mode=MODE_TYPE)
    _RoutingInfoForSM_Arg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _RoutingInfoForSM_Arg_sm_RP_PRI = BOOL(name='sm-RP-PRI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RoutingInfoForSM_Arg_serviceCentreAddress = OCT_STR(name='serviceCentreAddress', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')))
    _RoutingInfoForSM_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _RoutingInfoForSM_Arg_gprsSupportIndicator = NULL(name='gprsSupportIndicator', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RoutingInfoForSM_Arg_sm_RP_MTI = INT(name='sm-RP-MTI', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-RP-MTI')), opt=True)
    _RoutingInfoForSM_Arg_sm_RP_SMEA = OCT_STR(name='sm-RP-SMEA', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-RP-SMEA')), opt=True)
    _RoutingInfoForSM_Arg_sm_deliveryNotIntended = ENUM(name='sm-deliveryNotIntended', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-DeliveryNotIntended')), opt=True)
    _RoutingInfoForSM_Arg_ip_sm_gwGuidanceIndicator = NULL(name='ip-sm-gwGuidanceIndicator', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RoutingInfoForSM_Arg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _RoutingInfoForSM_Arg_t4_Trigger_Indicator = NULL(name='t4-Trigger-Indicator', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RoutingInfoForSM_Arg_singleAttemptDelivery = NULL(name='singleAttemptDelivery', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RoutingInfoForSM_Arg_correlationID = SEQ(name='correlationID', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'CorrelationID')), opt=True)
    _RoutingInfoForSM_Arg_smsf_supportIndicator = NULL(name='smsf-supportIndicator', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    RoutingInfoForSM_Arg._cont = ASN1Dict([
        ('msisdn', _RoutingInfoForSM_Arg_msisdn),
        ('sm-RP-PRI', _RoutingInfoForSM_Arg_sm_RP_PRI),
        ('serviceCentreAddress', _RoutingInfoForSM_Arg_serviceCentreAddress),
        ('extensionContainer', _RoutingInfoForSM_Arg_extensionContainer),
        ('gprsSupportIndicator', _RoutingInfoForSM_Arg_gprsSupportIndicator),
        ('sm-RP-MTI', _RoutingInfoForSM_Arg_sm_RP_MTI),
        ('sm-RP-SMEA', _RoutingInfoForSM_Arg_sm_RP_SMEA),
        ('sm-deliveryNotIntended', _RoutingInfoForSM_Arg_sm_deliveryNotIntended),
        ('ip-sm-gwGuidanceIndicator', _RoutingInfoForSM_Arg_ip_sm_gwGuidanceIndicator),
        ('imsi', _RoutingInfoForSM_Arg_imsi),
        ('t4-Trigger-Indicator', _RoutingInfoForSM_Arg_t4_Trigger_Indicator),
        ('singleAttemptDelivery', _RoutingInfoForSM_Arg_singleAttemptDelivery),
        ('correlationID', _RoutingInfoForSM_Arg_correlationID),
        ('smsf-supportIndicator', _RoutingInfoForSM_Arg_smsf_supportIndicator),
        ])
    RoutingInfoForSM_Arg._ext = ['gprsSupportIndicator', 'sm-RP-MTI', 'sm-RP-SMEA', 'sm-deliveryNotIntended', 'ip-sm-gwGuidanceIndicator', 'imsi', 't4-Trigger-Indicator', 'singleAttemptDelivery', 'correlationID', 'smsf-supportIndicator']
    
    #-----< SM-DeliveryNotIntended >-----#
    SM_DeliveryNotIntended = ENUM(name='SM-DeliveryNotIntended', mode=MODE_TYPE)
    SM_DeliveryNotIntended._cont = ASN1Dict([('onlyIMSI-requested', 0), ('onlyMCC-MNC-requested', 1)])
    SM_DeliveryNotIntended._ext = []
    
    #-----< SM-RP-MTI >-----#
    SM_RP_MTI = INT(name='SM-RP-MTI', mode=MODE_TYPE)
    SM_RP_MTI._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=10)], ev=None, er=[])
    
    #-----< SM-RP-SMEA >-----#
    SM_RP_SMEA = OCT_STR(name='SM-RP-SMEA', mode=MODE_TYPE)
    SM_RP_SMEA._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=12)], ev=None, er=[])
    
    #-----< RoutingInfoForSM-Res >-----#
    RoutingInfoForSM_Res = SEQ(name='RoutingInfoForSM-Res', mode=MODE_TYPE)
    _RoutingInfoForSM_Res_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _RoutingInfoForSM_Res_locationInfoWithLMSI = SEQ(name='locationInfoWithLMSI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'LocationInfoWithLMSI')))
    _RoutingInfoForSM_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _RoutingInfoForSM_Res_ip_sm_gwGuidance = SEQ(name='ip-sm-gwGuidance', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'IP-SM-GW-Guidance')), opt=True)
    RoutingInfoForSM_Res._cont = ASN1Dict([
        ('imsi', _RoutingInfoForSM_Res_imsi),
        ('locationInfoWithLMSI', _RoutingInfoForSM_Res_locationInfoWithLMSI),
        ('extensionContainer', _RoutingInfoForSM_Res_extensionContainer),
        ('ip-sm-gwGuidance', _RoutingInfoForSM_Res_ip_sm_gwGuidance),
        ])
    RoutingInfoForSM_Res._ext = ['ip-sm-gwGuidance']
    
    #-----< IP-SM-GW-Guidance >-----#
    IP_SM_GW_Guidance = SEQ(name='IP-SM-GW-Guidance', mode=MODE_TYPE)
    _IP_SM_GW_Guidance_minimumDeliveryTimeValue = INT(name='minimumDeliveryTimeValue', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-DeliveryTimerValue')))
    _IP_SM_GW_Guidance_recommendedDeliveryTimeValue = INT(name='recommendedDeliveryTimeValue', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-DeliveryTimerValue')))
    _IP_SM_GW_Guidance_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    IP_SM_GW_Guidance._cont = ASN1Dict([
        ('minimumDeliveryTimeValue', _IP_SM_GW_Guidance_minimumDeliveryTimeValue),
        ('recommendedDeliveryTimeValue', _IP_SM_GW_Guidance_recommendedDeliveryTimeValue),
        ('extensionContainer', _IP_SM_GW_Guidance_extensionContainer),
        ])
    IP_SM_GW_Guidance._ext = []
    
    #-----< LocationInfoWithLMSI >-----#
    LocationInfoWithLMSI = SEQ(name='LocationInfoWithLMSI', mode=MODE_TYPE)
    _LocationInfoWithLMSI_networkNode_Number = OCT_STR(name='networkNode-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _LocationInfoWithLMSI_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')), opt=True)
    _LocationInfoWithLMSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _LocationInfoWithLMSI_gprsNodeIndicator = NULL(name='gprsNodeIndicator', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LocationInfoWithLMSI_additional_Number = CHOICE(name='additional-Number', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'Additional-Number')), opt=True)
    _LocationInfoWithLMSI_networkNodeDiameterAddress = SEQ(name='networkNodeDiameterAddress', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    _LocationInfoWithLMSI_additionalNetworkNodeDiameterAddress = SEQ(name='additionalNetworkNodeDiameterAddress', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    _LocationInfoWithLMSI_thirdNumber = CHOICE(name='thirdNumber', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'Additional-Number')), opt=True)
    _LocationInfoWithLMSI_thirdNetworkNodeDiameterAddress = SEQ(name='thirdNetworkNodeDiameterAddress', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    _LocationInfoWithLMSI_imsNodeIndicator = NULL(name='imsNodeIndicator', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LocationInfoWithLMSI_smsf_3gpp_Number = OCT_STR(name='smsf-3gpp-Number', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _LocationInfoWithLMSI_smsf_3gpp_DiameterAddress = SEQ(name='smsf-3gpp-DiameterAddress', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    _LocationInfoWithLMSI_smsf_non_3gpp_Number = OCT_STR(name='smsf-non-3gpp-Number', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _LocationInfoWithLMSI_smsf_non_3gpp_DiameterAddress = SEQ(name='smsf-non-3gpp-DiameterAddress', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    _LocationInfoWithLMSI_smsf_3gpp_address_indicator = NULL(name='smsf-3gpp-address-indicator', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LocationInfoWithLMSI_smsf_non_3gpp_address_indicator = NULL(name='smsf-non-3gpp-address-indicator', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    LocationInfoWithLMSI._cont = ASN1Dict([
        ('networkNode-Number', _LocationInfoWithLMSI_networkNode_Number),
        ('lmsi', _LocationInfoWithLMSI_lmsi),
        ('extensionContainer', _LocationInfoWithLMSI_extensionContainer),
        ('gprsNodeIndicator', _LocationInfoWithLMSI_gprsNodeIndicator),
        ('additional-Number', _LocationInfoWithLMSI_additional_Number),
        ('networkNodeDiameterAddress', _LocationInfoWithLMSI_networkNodeDiameterAddress),
        ('additionalNetworkNodeDiameterAddress', _LocationInfoWithLMSI_additionalNetworkNodeDiameterAddress),
        ('thirdNumber', _LocationInfoWithLMSI_thirdNumber),
        ('thirdNetworkNodeDiameterAddress', _LocationInfoWithLMSI_thirdNetworkNodeDiameterAddress),
        ('imsNodeIndicator', _LocationInfoWithLMSI_imsNodeIndicator),
        ('smsf-3gpp-Number', _LocationInfoWithLMSI_smsf_3gpp_Number),
        ('smsf-3gpp-DiameterAddress', _LocationInfoWithLMSI_smsf_3gpp_DiameterAddress),
        ('smsf-non-3gpp-Number', _LocationInfoWithLMSI_smsf_non_3gpp_Number),
        ('smsf-non-3gpp-DiameterAddress', _LocationInfoWithLMSI_smsf_non_3gpp_DiameterAddress),
        ('smsf-3gpp-address-indicator', _LocationInfoWithLMSI_smsf_3gpp_address_indicator),
        ('smsf-non-3gpp-address-indicator', _LocationInfoWithLMSI_smsf_non_3gpp_address_indicator),
        ])
    LocationInfoWithLMSI._ext = ['gprsNodeIndicator', 'additional-Number', 'networkNodeDiameterAddress', 'additionalNetworkNodeDiameterAddress', 'thirdNumber', 'thirdNetworkNodeDiameterAddress', 'imsNodeIndicator', 'smsf-3gpp-Number', 'smsf-3gpp-DiameterAddress', 'smsf-non-3gpp-Number', 'smsf-non-3gpp-DiameterAddress', 'smsf-3gpp-address-indicator', 'smsf-non-3gpp-address-indicator']
    
    #-----< Additional-Number >-----#
    Additional_Number = CHOICE(name='Additional-Number', mode=MODE_TYPE)
    _Additional_Number_msc_Number = OCT_STR(name='msc-Number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _Additional_Number_sgsn_Number = OCT_STR(name='sgsn-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    Additional_Number._cont = ASN1Dict([
        ('msc-Number', _Additional_Number_msc_Number),
        ('sgsn-Number', _Additional_Number_sgsn_Number),
        ])
    Additional_Number._ext = None
    
    #-----< MO-ForwardSM-Arg >-----#
    MO_ForwardSM_Arg = SEQ(name='MO-ForwardSM-Arg', mode=MODE_TYPE)
    _MO_ForwardSM_Arg_sm_RP_DA = CHOICE(name='sm-RP-DA', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-RP-DA')))
    _MO_ForwardSM_Arg_sm_RP_OA = CHOICE(name='sm-RP-OA', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-RP-OA')))
    _MO_ForwardSM_Arg_sm_RP_UI = OCT_STR(name='sm-RP-UI', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')))
    _MO_ForwardSM_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _MO_ForwardSM_Arg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _MO_ForwardSM_Arg_correlationID = SEQ(name='correlationID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'CorrelationID')), opt=True)
    _MO_ForwardSM_Arg_sm_DeliveryOutcome = ENUM(name='sm-DeliveryOutcome', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-DeliveryOutcome')), opt=True)
    MO_ForwardSM_Arg._cont = ASN1Dict([
        ('sm-RP-DA', _MO_ForwardSM_Arg_sm_RP_DA),
        ('sm-RP-OA', _MO_ForwardSM_Arg_sm_RP_OA),
        ('sm-RP-UI', _MO_ForwardSM_Arg_sm_RP_UI),
        ('extensionContainer', _MO_ForwardSM_Arg_extensionContainer),
        ('imsi', _MO_ForwardSM_Arg_imsi),
        ('correlationID', _MO_ForwardSM_Arg_correlationID),
        ('sm-DeliveryOutcome', _MO_ForwardSM_Arg_sm_DeliveryOutcome),
        ])
    MO_ForwardSM_Arg._ext = ['imsi', 'correlationID', 'sm-DeliveryOutcome']
    
    #-----< MO-ForwardSM-Res >-----#
    MO_ForwardSM_Res = SEQ(name='MO-ForwardSM-Res', mode=MODE_TYPE)
    _MO_ForwardSM_Res_sm_RP_UI = OCT_STR(name='sm-RP-UI', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')), opt=True)
    _MO_ForwardSM_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MO_ForwardSM_Res._cont = ASN1Dict([
        ('sm-RP-UI', _MO_ForwardSM_Res_sm_RP_UI),
        ('extensionContainer', _MO_ForwardSM_Res_extensionContainer),
        ])
    MO_ForwardSM_Res._ext = []
    
    #-----< MT-ForwardSM-Arg >-----#
    MT_ForwardSM_Arg = SEQ(name='MT-ForwardSM-Arg', mode=MODE_TYPE)
    _MT_ForwardSM_Arg_sm_RP_DA = CHOICE(name='sm-RP-DA', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-RP-DA')))
    _MT_ForwardSM_Arg_sm_RP_OA = CHOICE(name='sm-RP-OA', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-RP-OA')))
    _MT_ForwardSM_Arg_sm_RP_UI = OCT_STR(name='sm-RP-UI', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')))
    _MT_ForwardSM_Arg_moreMessagesToSend = NULL(name='moreMessagesToSend', mode=MODE_TYPE, opt=True)
    _MT_ForwardSM_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _MT_ForwardSM_Arg_smDeliveryTimer = INT(name='smDeliveryTimer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-DeliveryTimerValue')), opt=True)
    _MT_ForwardSM_Arg_smDeliveryStartTime = OCT_STR(name='smDeliveryStartTime', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Time')), opt=True)
    _MT_ForwardSM_Arg_smsOverIP_OnlyIndicator = NULL(name='smsOverIP-OnlyIndicator', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MT_ForwardSM_Arg_correlationID = SEQ(name='correlationID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'CorrelationID')), opt=True)
    _MT_ForwardSM_Arg_maximumRetransmissionTime = OCT_STR(name='maximumRetransmissionTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Time')), opt=True)
    _MT_ForwardSM_Arg_smsGmscAddress = OCT_STR(name='smsGmscAddress', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _MT_ForwardSM_Arg_smsGmscDiameterAddress = SEQ(name='smsGmscDiameterAddress', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    MT_ForwardSM_Arg._cont = ASN1Dict([
        ('sm-RP-DA', _MT_ForwardSM_Arg_sm_RP_DA),
        ('sm-RP-OA', _MT_ForwardSM_Arg_sm_RP_OA),
        ('sm-RP-UI', _MT_ForwardSM_Arg_sm_RP_UI),
        ('moreMessagesToSend', _MT_ForwardSM_Arg_moreMessagesToSend),
        ('extensionContainer', _MT_ForwardSM_Arg_extensionContainer),
        ('smDeliveryTimer', _MT_ForwardSM_Arg_smDeliveryTimer),
        ('smDeliveryStartTime', _MT_ForwardSM_Arg_smDeliveryStartTime),
        ('smsOverIP-OnlyIndicator', _MT_ForwardSM_Arg_smsOverIP_OnlyIndicator),
        ('correlationID', _MT_ForwardSM_Arg_correlationID),
        ('maximumRetransmissionTime', _MT_ForwardSM_Arg_maximumRetransmissionTime),
        ('smsGmscAddress', _MT_ForwardSM_Arg_smsGmscAddress),
        ('smsGmscDiameterAddress', _MT_ForwardSM_Arg_smsGmscDiameterAddress),
        ])
    MT_ForwardSM_Arg._ext = ['smDeliveryTimer', 'smDeliveryStartTime', 'smsOverIP-OnlyIndicator', 'correlationID', 'maximumRetransmissionTime', 'smsGmscAddress', 'smsGmscDiameterAddress']
    
    #-----< CorrelationID >-----#
    CorrelationID = SEQ(name='CorrelationID', mode=MODE_TYPE)
    _CorrelationID_hlr_id = OCT_STR(name='hlr-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'HLR-Id')), opt=True)
    _CorrelationID_sip_uri_A = OCT_STR(name='sip-uri-A', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SIP-URI')), opt=True)
    _CorrelationID_sip_uri_B = OCT_STR(name='sip-uri-B', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SIP-URI')))
    CorrelationID._cont = ASN1Dict([
        ('hlr-id', _CorrelationID_hlr_id),
        ('sip-uri-A', _CorrelationID_sip_uri_A),
        ('sip-uri-B', _CorrelationID_sip_uri_B),
        ])
    CorrelationID._ext = None
    
    #-----< SIP-URI >-----#
    SIP_URI = OCT_STR(name='SIP-URI', mode=MODE_TYPE)
    
    #-----< MT-ForwardSM-Res >-----#
    MT_ForwardSM_Res = SEQ(name='MT-ForwardSM-Res', mode=MODE_TYPE)
    _MT_ForwardSM_Res_sm_RP_UI = OCT_STR(name='sm-RP-UI', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')), opt=True)
    _MT_ForwardSM_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MT_ForwardSM_Res._cont = ASN1Dict([
        ('sm-RP-UI', _MT_ForwardSM_Res_sm_RP_UI),
        ('extensionContainer', _MT_ForwardSM_Res_extensionContainer),
        ])
    MT_ForwardSM_Res._ext = []
    
    #-----< SM-RP-DA >-----#
    SM_RP_DA = CHOICE(name='SM-RP-DA', mode=MODE_TYPE)
    _SM_RP_DA_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _SM_RP_DA_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')))
    _SM_RP_DA_serviceCentreAddressDA = OCT_STR(name='serviceCentreAddressDA', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')))
    _SM_RP_DA_noSM_RP_DA = NULL(name='noSM-RP-DA', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SM_RP_DA._cont = ASN1Dict([
        ('imsi', _SM_RP_DA_imsi),
        ('lmsi', _SM_RP_DA_lmsi),
        ('serviceCentreAddressDA', _SM_RP_DA_serviceCentreAddressDA),
        ('noSM-RP-DA', _SM_RP_DA_noSM_RP_DA),
        ])
    SM_RP_DA._ext = None
    
    #-----< SM-RP-OA >-----#
    SM_RP_OA = CHOICE(name='SM-RP-OA', mode=MODE_TYPE)
    _SM_RP_OA_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _SM_RP_OA_serviceCentreAddressOA = OCT_STR(name='serviceCentreAddressOA', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')))
    _SM_RP_OA_noSM_RP_OA = NULL(name='noSM-RP-OA', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SM_RP_OA._cont = ASN1Dict([
        ('msisdn', _SM_RP_OA_msisdn),
        ('serviceCentreAddressOA', _SM_RP_OA_serviceCentreAddressOA),
        ('noSM-RP-OA', _SM_RP_OA_noSM_RP_OA),
        ])
    SM_RP_OA._ext = None
    
    #-----< SM-DeliveryTimerValue >-----#
    SM_DeliveryTimerValue = INT(name='SM-DeliveryTimerValue', mode=MODE_TYPE)
    SM_DeliveryTimerValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=30, ub=600)], ev=None, er=[])
    
    #-----< ReportSM-DeliveryStatusArg >-----#
    ReportSM_DeliveryStatusArg = SEQ(name='ReportSM-DeliveryStatusArg', mode=MODE_TYPE)
    _ReportSM_DeliveryStatusArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _ReportSM_DeliveryStatusArg_serviceCentreAddress = OCT_STR(name='serviceCentreAddress', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')))
    _ReportSM_DeliveryStatusArg_sm_DeliveryOutcome = ENUM(name='sm-DeliveryOutcome', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-DeliveryOutcome')))
    _ReportSM_DeliveryStatusArg_absentSubscriberDiagnosticSM = INT(name='absentSubscriberDiagnosticSM', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    _ReportSM_DeliveryStatusArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ReportSM_DeliveryStatusArg_gprsSupportIndicator = NULL(name='gprsSupportIndicator', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ReportSM_DeliveryStatusArg_deliveryOutcomeIndicator = NULL(name='deliveryOutcomeIndicator', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ReportSM_DeliveryStatusArg_additionalSM_DeliveryOutcome = ENUM(name='additionalSM-DeliveryOutcome', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-DeliveryOutcome')), opt=True)
    _ReportSM_DeliveryStatusArg_additionalAbsentSubscriberDiagnosticSM = INT(name='additionalAbsentSubscriberDiagnosticSM', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    _ReportSM_DeliveryStatusArg_ip_sm_gw_Indicator = NULL(name='ip-sm-gw-Indicator', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ReportSM_DeliveryStatusArg_ip_sm_gw_sm_deliveryOutcome = ENUM(name='ip-sm-gw-sm-deliveryOutcome', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-DeliveryOutcome')), opt=True)
    _ReportSM_DeliveryStatusArg_ip_sm_gw_absentSubscriberDiagnosticSM = INT(name='ip-sm-gw-absentSubscriberDiagnosticSM', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    _ReportSM_DeliveryStatusArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _ReportSM_DeliveryStatusArg_singleAttemptDelivery = NULL(name='singleAttemptDelivery', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ReportSM_DeliveryStatusArg_correlationID = SEQ(name='correlationID', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'CorrelationID')), opt=True)
    _ReportSM_DeliveryStatusArg_smsf_3gpp_deliveryOutcomeIndicator = NULL(name='smsf-3gpp-deliveryOutcomeIndicator', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ReportSM_DeliveryStatusArg_smsf_3gpp_deliveryOutcome = ENUM(name='smsf-3gpp-deliveryOutcome', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-DeliveryOutcome')), opt=True)
    _ReportSM_DeliveryStatusArg_smsf_3gpp_absentSubscriberDiagSM = INT(name='smsf-3gpp-absentSubscriberDiagSM', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    _ReportSM_DeliveryStatusArg_smsf_non_3gpp_deliveryOutcomeIndicator = NULL(name='smsf-non-3gpp-deliveryOutcomeIndicator', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ReportSM_DeliveryStatusArg_smsf_non_3gpp_deliveryOutcome = ENUM(name='smsf-non-3gpp-deliveryOutcome', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-DeliveryOutcome')), opt=True)
    _ReportSM_DeliveryStatusArg_smsf_non_3gpp_absentSubscriberDiagSM = INT(name='smsf-non-3gpp-absentSubscriberDiagSM', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    ReportSM_DeliveryStatusArg._cont = ASN1Dict([
        ('msisdn', _ReportSM_DeliveryStatusArg_msisdn),
        ('serviceCentreAddress', _ReportSM_DeliveryStatusArg_serviceCentreAddress),
        ('sm-DeliveryOutcome', _ReportSM_DeliveryStatusArg_sm_DeliveryOutcome),
        ('absentSubscriberDiagnosticSM', _ReportSM_DeliveryStatusArg_absentSubscriberDiagnosticSM),
        ('extensionContainer', _ReportSM_DeliveryStatusArg_extensionContainer),
        ('gprsSupportIndicator', _ReportSM_DeliveryStatusArg_gprsSupportIndicator),
        ('deliveryOutcomeIndicator', _ReportSM_DeliveryStatusArg_deliveryOutcomeIndicator),
        ('additionalSM-DeliveryOutcome', _ReportSM_DeliveryStatusArg_additionalSM_DeliveryOutcome),
        ('additionalAbsentSubscriberDiagnosticSM', _ReportSM_DeliveryStatusArg_additionalAbsentSubscriberDiagnosticSM),
        ('ip-sm-gw-Indicator', _ReportSM_DeliveryStatusArg_ip_sm_gw_Indicator),
        ('ip-sm-gw-sm-deliveryOutcome', _ReportSM_DeliveryStatusArg_ip_sm_gw_sm_deliveryOutcome),
        ('ip-sm-gw-absentSubscriberDiagnosticSM', _ReportSM_DeliveryStatusArg_ip_sm_gw_absentSubscriberDiagnosticSM),
        ('imsi', _ReportSM_DeliveryStatusArg_imsi),
        ('singleAttemptDelivery', _ReportSM_DeliveryStatusArg_singleAttemptDelivery),
        ('correlationID', _ReportSM_DeliveryStatusArg_correlationID),
        ('smsf-3gpp-deliveryOutcomeIndicator', _ReportSM_DeliveryStatusArg_smsf_3gpp_deliveryOutcomeIndicator),
        ('smsf-3gpp-deliveryOutcome', _ReportSM_DeliveryStatusArg_smsf_3gpp_deliveryOutcome),
        ('smsf-3gpp-absentSubscriberDiagSM', _ReportSM_DeliveryStatusArg_smsf_3gpp_absentSubscriberDiagSM),
        ('smsf-non-3gpp-deliveryOutcomeIndicator', _ReportSM_DeliveryStatusArg_smsf_non_3gpp_deliveryOutcomeIndicator),
        ('smsf-non-3gpp-deliveryOutcome', _ReportSM_DeliveryStatusArg_smsf_non_3gpp_deliveryOutcome),
        ('smsf-non-3gpp-absentSubscriberDiagSM', _ReportSM_DeliveryStatusArg_smsf_non_3gpp_absentSubscriberDiagSM),
        ])
    ReportSM_DeliveryStatusArg._ext = ['gprsSupportIndicator', 'deliveryOutcomeIndicator', 'additionalSM-DeliveryOutcome', 'additionalAbsentSubscriberDiagnosticSM', 'ip-sm-gw-Indicator', 'ip-sm-gw-sm-deliveryOutcome', 'ip-sm-gw-absentSubscriberDiagnosticSM', 'imsi', 'singleAttemptDelivery', 'correlationID', 'smsf-3gpp-deliveryOutcomeIndicator', 'smsf-3gpp-deliveryOutcome', 'smsf-3gpp-absentSubscriberDiagSM', 'smsf-non-3gpp-deliveryOutcomeIndicator', 'smsf-non-3gpp-deliveryOutcome', 'smsf-non-3gpp-absentSubscriberDiagSM']
    
    #-----< SM-DeliveryOutcome >-----#
    SM_DeliveryOutcome = ENUM(name='SM-DeliveryOutcome', mode=MODE_TYPE)
    SM_DeliveryOutcome._cont = ASN1Dict([('memoryCapacityExceeded', 0), ('absentSubscriber', 1), ('successfulTransfer', 2)])
    SM_DeliveryOutcome._ext = None
    
    #-----< ReportSM-DeliveryStatusRes >-----#
    ReportSM_DeliveryStatusRes = SEQ(name='ReportSM-DeliveryStatusRes', mode=MODE_TYPE)
    _ReportSM_DeliveryStatusRes_storedMSISDN = OCT_STR(name='storedMSISDN', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _ReportSM_DeliveryStatusRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ReportSM_DeliveryStatusRes._cont = ASN1Dict([
        ('storedMSISDN', _ReportSM_DeliveryStatusRes_storedMSISDN),
        ('extensionContainer', _ReportSM_DeliveryStatusRes_extensionContainer),
        ])
    ReportSM_DeliveryStatusRes._ext = []
    
    #-----< AlertServiceCentreArg >-----#
    AlertServiceCentreArg = SEQ(name='AlertServiceCentreArg', mode=MODE_TYPE)
    _AlertServiceCentreArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _AlertServiceCentreArg_serviceCentreAddress = OCT_STR(name='serviceCentreAddress', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')))
    _AlertServiceCentreArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _AlertServiceCentreArg_correlationID = SEQ(name='correlationID', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'CorrelationID')), opt=True)
    _AlertServiceCentreArg_maximumUeAvailabilityTime = OCT_STR(name='maximumUeAvailabilityTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Time')), opt=True)
    _AlertServiceCentreArg_smsGmscAlertEvent = ENUM(name='smsGmscAlertEvent', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SmsGmsc-Alert-Event')), opt=True)
    _AlertServiceCentreArg_smsGmscDiameterAddress = SEQ(name='smsGmscDiameterAddress', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    _AlertServiceCentreArg_newSGSNNumber = OCT_STR(name='newSGSNNumber', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _AlertServiceCentreArg_newSGSNDiameterAddress = SEQ(name='newSGSNDiameterAddress', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    _AlertServiceCentreArg_newMMENumber = OCT_STR(name='newMMENumber', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _AlertServiceCentreArg_newMMEDiameterAddress = SEQ(name='newMMEDiameterAddress', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    _AlertServiceCentreArg_newMSCNumber = OCT_STR(name='newMSCNumber', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    AlertServiceCentreArg._cont = ASN1Dict([
        ('msisdn', _AlertServiceCentreArg_msisdn),
        ('serviceCentreAddress', _AlertServiceCentreArg_serviceCentreAddress),
        ('imsi', _AlertServiceCentreArg_imsi),
        ('correlationID', _AlertServiceCentreArg_correlationID),
        ('maximumUeAvailabilityTime', _AlertServiceCentreArg_maximumUeAvailabilityTime),
        ('smsGmscAlertEvent', _AlertServiceCentreArg_smsGmscAlertEvent),
        ('smsGmscDiameterAddress', _AlertServiceCentreArg_smsGmscDiameterAddress),
        ('newSGSNNumber', _AlertServiceCentreArg_newSGSNNumber),
        ('newSGSNDiameterAddress', _AlertServiceCentreArg_newSGSNDiameterAddress),
        ('newMMENumber', _AlertServiceCentreArg_newMMENumber),
        ('newMMEDiameterAddress', _AlertServiceCentreArg_newMMEDiameterAddress),
        ('newMSCNumber', _AlertServiceCentreArg_newMSCNumber),
        ])
    AlertServiceCentreArg._ext = ['imsi', 'correlationID', 'maximumUeAvailabilityTime', 'smsGmscAlertEvent', 'smsGmscDiameterAddress', 'newSGSNNumber', 'newSGSNDiameterAddress', 'newMMENumber', 'newMMEDiameterAddress', 'newMSCNumber']
    
    #-----< SmsGmsc-Alert-Event >-----#
    SmsGmsc_Alert_Event = ENUM(name='SmsGmsc-Alert-Event', mode=MODE_TYPE)
    SmsGmsc_Alert_Event._cont = ASN1Dict([('msAvailableForMtSms', 0), ('msUnderNewServingNode', 1)])
    SmsGmsc_Alert_Event._ext = None
    
    #-----< InformServiceCentreArg >-----#
    InformServiceCentreArg = SEQ(name='InformServiceCentreArg', mode=MODE_TYPE)
    _InformServiceCentreArg_storedMSISDN = OCT_STR(name='storedMSISDN', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _InformServiceCentreArg_mw_Status = BIT_STR(name='mw-Status', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MW-Status')), opt=True)
    _InformServiceCentreArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _InformServiceCentreArg_absentSubscriberDiagnosticSM = INT(name='absentSubscriberDiagnosticSM', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    _InformServiceCentreArg_additionalAbsentSubscriberDiagnosticSM = INT(name='additionalAbsentSubscriberDiagnosticSM', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    _InformServiceCentreArg_smsf3gppAbsentSubscriberDiagnosticSM = INT(name='smsf3gppAbsentSubscriberDiagnosticSM', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    _InformServiceCentreArg_smsfNon3gppAbsentSubscriberDiagnosticSM = INT(name='smsfNon3gppAbsentSubscriberDiagnosticSM', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    InformServiceCentreArg._cont = ASN1Dict([
        ('storedMSISDN', _InformServiceCentreArg_storedMSISDN),
        ('mw-Status', _InformServiceCentreArg_mw_Status),
        ('extensionContainer', _InformServiceCentreArg_extensionContainer),
        ('absentSubscriberDiagnosticSM', _InformServiceCentreArg_absentSubscriberDiagnosticSM),
        ('additionalAbsentSubscriberDiagnosticSM', _InformServiceCentreArg_additionalAbsentSubscriberDiagnosticSM),
        ('smsf3gppAbsentSubscriberDiagnosticSM', _InformServiceCentreArg_smsf3gppAbsentSubscriberDiagnosticSM),
        ('smsfNon3gppAbsentSubscriberDiagnosticSM', _InformServiceCentreArg_smsfNon3gppAbsentSubscriberDiagnosticSM),
        ])
    InformServiceCentreArg._ext = ['absentSubscriberDiagnosticSM', 'additionalAbsentSubscriberDiagnosticSM', 'smsf3gppAbsentSubscriberDiagnosticSM', 'smsfNon3gppAbsentSubscriberDiagnosticSM']
    
    #-----< MW-Status >-----#
    MW_Status = BIT_STR(name='MW-Status', mode=MODE_TYPE)
    MW_Status._cont = ASN1Dict([('sc-AddressNotIncluded', 0), ('mnrf-Set', 1), ('mcef-Set', 2), ('mnrg-Set', 3), ('mnr5g-Set', 4), ('mnr5gn3g-Set', 5)])
    MW_Status._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=6, ub=16)], ev=None, er=[])
    
    #-----< ReadyForSM-Arg >-----#
    ReadyForSM_Arg = SEQ(name='ReadyForSM-Arg', mode=MODE_TYPE)
    _ReadyForSM_Arg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _ReadyForSM_Arg_alertReason = ENUM(name='alertReason', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'AlertReason')))
    _ReadyForSM_Arg_alertReasonIndicator = NULL(name='alertReasonIndicator', mode=MODE_TYPE, opt=True)
    _ReadyForSM_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ReadyForSM_Arg_additionalAlertReasonIndicator = NULL(name='additionalAlertReasonIndicator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ReadyForSM_Arg_maximumUeAvailabilityTime = OCT_STR(name='maximumUeAvailabilityTime', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Time')), opt=True)
    ReadyForSM_Arg._cont = ASN1Dict([
        ('imsi', _ReadyForSM_Arg_imsi),
        ('alertReason', _ReadyForSM_Arg_alertReason),
        ('alertReasonIndicator', _ReadyForSM_Arg_alertReasonIndicator),
        ('extensionContainer', _ReadyForSM_Arg_extensionContainer),
        ('additionalAlertReasonIndicator', _ReadyForSM_Arg_additionalAlertReasonIndicator),
        ('maximumUeAvailabilityTime', _ReadyForSM_Arg_maximumUeAvailabilityTime),
        ])
    ReadyForSM_Arg._ext = ['additionalAlertReasonIndicator', 'maximumUeAvailabilityTime']
    
    #-----< ReadyForSM-Res >-----#
    ReadyForSM_Res = SEQ(name='ReadyForSM-Res', mode=MODE_TYPE)
    _ReadyForSM_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ReadyForSM_Res._cont = ASN1Dict([
        ('extensionContainer', _ReadyForSM_Res_extensionContainer),
        ])
    ReadyForSM_Res._ext = []
    
    #-----< AlertReason >-----#
    AlertReason = ENUM(name='AlertReason', mode=MODE_TYPE)
    AlertReason._cont = ASN1Dict([('ms-Present', 0), ('memoryAvailable', 1)])
    AlertReason._ext = None
    
    #-----< MT-ForwardSM-VGCS-Arg >-----#
    MT_ForwardSM_VGCS_Arg = SEQ(name='MT-ForwardSM-VGCS-Arg', mode=MODE_TYPE)
    _MT_ForwardSM_VGCS_Arg_asciCallReference = OCT_STR(name='asciCallReference', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ASCI-CallReference')))
    _MT_ForwardSM_VGCS_Arg_sm_RP_OA = CHOICE(name='sm-RP-OA', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-RP-OA')))
    _MT_ForwardSM_VGCS_Arg_sm_RP_UI = OCT_STR(name='sm-RP-UI', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')))
    _MT_ForwardSM_VGCS_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MT_ForwardSM_VGCS_Arg._cont = ASN1Dict([
        ('asciCallReference', _MT_ForwardSM_VGCS_Arg_asciCallReference),
        ('sm-RP-OA', _MT_ForwardSM_VGCS_Arg_sm_RP_OA),
        ('sm-RP-UI', _MT_ForwardSM_VGCS_Arg_sm_RP_UI),
        ('extensionContainer', _MT_ForwardSM_VGCS_Arg_extensionContainer),
        ])
    MT_ForwardSM_VGCS_Arg._ext = []
    
    #-----< MT-ForwardSM-VGCS-Res >-----#
    MT_ForwardSM_VGCS_Res = SEQ(name='MT-ForwardSM-VGCS-Res', mode=MODE_TYPE)
    _MT_ForwardSM_VGCS_Res_sm_RP_UI = OCT_STR(name='sm-RP-UI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')), opt=True)
    _MT_ForwardSM_VGCS_Res_dispatcherList = SEQ_OF(name='dispatcherList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'DispatcherList')), opt=True)
    _MT_ForwardSM_VGCS_Res_ongoingCall = NULL(name='ongoingCall', mode=MODE_TYPE, opt=True)
    _MT_ForwardSM_VGCS_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _MT_ForwardSM_VGCS_Res_additionalDispatcherList = SEQ_OF(name='additionalDispatcherList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'AdditionalDispatcherList')), opt=True)
    MT_ForwardSM_VGCS_Res._cont = ASN1Dict([
        ('sm-RP-UI', _MT_ForwardSM_VGCS_Res_sm_RP_UI),
        ('dispatcherList', _MT_ForwardSM_VGCS_Res_dispatcherList),
        ('ongoingCall', _MT_ForwardSM_VGCS_Res_ongoingCall),
        ('extensionContainer', _MT_ForwardSM_VGCS_Res_extensionContainer),
        ('additionalDispatcherList', _MT_ForwardSM_VGCS_Res_additionalDispatcherList),
        ])
    MT_ForwardSM_VGCS_Res._ext = ['additionalDispatcherList']
    
    #-----< DispatcherList >-----#
    DispatcherList = SEQ_OF(name='DispatcherList', mode=MODE_TYPE)
    _DispatcherList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    DispatcherList._cont = _DispatcherList__item_
    DispatcherList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< maxNumOfDispatchers >-----#
    maxNumOfDispatchers = INT(name='maxNumOfDispatchers', mode=MODE_VALUE)
    maxNumOfDispatchers._val = 5
    
    #-----< AdditionalDispatcherList >-----#
    AdditionalDispatcherList = SEQ_OF(name='AdditionalDispatcherList', mode=MODE_TYPE)
    _AdditionalDispatcherList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    AdditionalDispatcherList._cont = _AdditionalDispatcherList__item_
    AdditionalDispatcherList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    
    #-----< maxNumOfAdditionalDispatchers >-----#
    maxNumOfAdditionalDispatchers = INT(name='maxNumOfAdditionalDispatchers', mode=MODE_VALUE)
    maxNumOfAdditionalDispatchers._val = 15
    
    _all_ = [
        _RoutingInfoForSM_Arg_msisdn,
        _RoutingInfoForSM_Arg_sm_RP_PRI,
        _RoutingInfoForSM_Arg_serviceCentreAddress,
        _RoutingInfoForSM_Arg_extensionContainer,
        _RoutingInfoForSM_Arg_gprsSupportIndicator,
        _RoutingInfoForSM_Arg_sm_RP_MTI,
        _RoutingInfoForSM_Arg_sm_RP_SMEA,
        _RoutingInfoForSM_Arg_sm_deliveryNotIntended,
        _RoutingInfoForSM_Arg_ip_sm_gwGuidanceIndicator,
        _RoutingInfoForSM_Arg_imsi,
        _RoutingInfoForSM_Arg_t4_Trigger_Indicator,
        _RoutingInfoForSM_Arg_singleAttemptDelivery,
        _RoutingInfoForSM_Arg_correlationID,
        _RoutingInfoForSM_Arg_smsf_supportIndicator,
        RoutingInfoForSM_Arg,
        SM_DeliveryNotIntended,
        SM_RP_MTI,
        SM_RP_SMEA,
        _RoutingInfoForSM_Res_imsi,
        _RoutingInfoForSM_Res_locationInfoWithLMSI,
        _RoutingInfoForSM_Res_extensionContainer,
        _RoutingInfoForSM_Res_ip_sm_gwGuidance,
        RoutingInfoForSM_Res,
        _IP_SM_GW_Guidance_minimumDeliveryTimeValue,
        _IP_SM_GW_Guidance_recommendedDeliveryTimeValue,
        _IP_SM_GW_Guidance_extensionContainer,
        IP_SM_GW_Guidance,
        _LocationInfoWithLMSI_networkNode_Number,
        _LocationInfoWithLMSI_lmsi,
        _LocationInfoWithLMSI_extensionContainer,
        _LocationInfoWithLMSI_gprsNodeIndicator,
        _LocationInfoWithLMSI_additional_Number,
        _LocationInfoWithLMSI_networkNodeDiameterAddress,
        _LocationInfoWithLMSI_additionalNetworkNodeDiameterAddress,
        _LocationInfoWithLMSI_thirdNumber,
        _LocationInfoWithLMSI_thirdNetworkNodeDiameterAddress,
        _LocationInfoWithLMSI_imsNodeIndicator,
        _LocationInfoWithLMSI_smsf_3gpp_Number,
        _LocationInfoWithLMSI_smsf_3gpp_DiameterAddress,
        _LocationInfoWithLMSI_smsf_non_3gpp_Number,
        _LocationInfoWithLMSI_smsf_non_3gpp_DiameterAddress,
        _LocationInfoWithLMSI_smsf_3gpp_address_indicator,
        _LocationInfoWithLMSI_smsf_non_3gpp_address_indicator,
        LocationInfoWithLMSI,
        _Additional_Number_msc_Number,
        _Additional_Number_sgsn_Number,
        Additional_Number,
        _MO_ForwardSM_Arg_sm_RP_DA,
        _MO_ForwardSM_Arg_sm_RP_OA,
        _MO_ForwardSM_Arg_sm_RP_UI,
        _MO_ForwardSM_Arg_extensionContainer,
        _MO_ForwardSM_Arg_imsi,
        _MO_ForwardSM_Arg_correlationID,
        _MO_ForwardSM_Arg_sm_DeliveryOutcome,
        MO_ForwardSM_Arg,
        _MO_ForwardSM_Res_sm_RP_UI,
        _MO_ForwardSM_Res_extensionContainer,
        MO_ForwardSM_Res,
        _MT_ForwardSM_Arg_sm_RP_DA,
        _MT_ForwardSM_Arg_sm_RP_OA,
        _MT_ForwardSM_Arg_sm_RP_UI,
        _MT_ForwardSM_Arg_moreMessagesToSend,
        _MT_ForwardSM_Arg_extensionContainer,
        _MT_ForwardSM_Arg_smDeliveryTimer,
        _MT_ForwardSM_Arg_smDeliveryStartTime,
        _MT_ForwardSM_Arg_smsOverIP_OnlyIndicator,
        _MT_ForwardSM_Arg_correlationID,
        _MT_ForwardSM_Arg_maximumRetransmissionTime,
        _MT_ForwardSM_Arg_smsGmscAddress,
        _MT_ForwardSM_Arg_smsGmscDiameterAddress,
        MT_ForwardSM_Arg,
        _CorrelationID_hlr_id,
        _CorrelationID_sip_uri_A,
        _CorrelationID_sip_uri_B,
        CorrelationID,
        SIP_URI,
        _MT_ForwardSM_Res_sm_RP_UI,
        _MT_ForwardSM_Res_extensionContainer,
        MT_ForwardSM_Res,
        _SM_RP_DA_imsi,
        _SM_RP_DA_lmsi,
        _SM_RP_DA_serviceCentreAddressDA,
        _SM_RP_DA_noSM_RP_DA,
        SM_RP_DA,
        _SM_RP_OA_msisdn,
        _SM_RP_OA_serviceCentreAddressOA,
        _SM_RP_OA_noSM_RP_OA,
        SM_RP_OA,
        SM_DeliveryTimerValue,
        _ReportSM_DeliveryStatusArg_msisdn,
        _ReportSM_DeliveryStatusArg_serviceCentreAddress,
        _ReportSM_DeliveryStatusArg_sm_DeliveryOutcome,
        _ReportSM_DeliveryStatusArg_absentSubscriberDiagnosticSM,
        _ReportSM_DeliveryStatusArg_extensionContainer,
        _ReportSM_DeliveryStatusArg_gprsSupportIndicator,
        _ReportSM_DeliveryStatusArg_deliveryOutcomeIndicator,
        _ReportSM_DeliveryStatusArg_additionalSM_DeliveryOutcome,
        _ReportSM_DeliveryStatusArg_additionalAbsentSubscriberDiagnosticSM,
        _ReportSM_DeliveryStatusArg_ip_sm_gw_Indicator,
        _ReportSM_DeliveryStatusArg_ip_sm_gw_sm_deliveryOutcome,
        _ReportSM_DeliveryStatusArg_ip_sm_gw_absentSubscriberDiagnosticSM,
        _ReportSM_DeliveryStatusArg_imsi,
        _ReportSM_DeliveryStatusArg_singleAttemptDelivery,
        _ReportSM_DeliveryStatusArg_correlationID,
        _ReportSM_DeliveryStatusArg_smsf_3gpp_deliveryOutcomeIndicator,
        _ReportSM_DeliveryStatusArg_smsf_3gpp_deliveryOutcome,
        _ReportSM_DeliveryStatusArg_smsf_3gpp_absentSubscriberDiagSM,
        _ReportSM_DeliveryStatusArg_smsf_non_3gpp_deliveryOutcomeIndicator,
        _ReportSM_DeliveryStatusArg_smsf_non_3gpp_deliveryOutcome,
        _ReportSM_DeliveryStatusArg_smsf_non_3gpp_absentSubscriberDiagSM,
        ReportSM_DeliveryStatusArg,
        SM_DeliveryOutcome,
        _ReportSM_DeliveryStatusRes_storedMSISDN,
        _ReportSM_DeliveryStatusRes_extensionContainer,
        ReportSM_DeliveryStatusRes,
        _AlertServiceCentreArg_msisdn,
        _AlertServiceCentreArg_serviceCentreAddress,
        _AlertServiceCentreArg_imsi,
        _AlertServiceCentreArg_correlationID,
        _AlertServiceCentreArg_maximumUeAvailabilityTime,
        _AlertServiceCentreArg_smsGmscAlertEvent,
        _AlertServiceCentreArg_smsGmscDiameterAddress,
        _AlertServiceCentreArg_newSGSNNumber,
        _AlertServiceCentreArg_newSGSNDiameterAddress,
        _AlertServiceCentreArg_newMMENumber,
        _AlertServiceCentreArg_newMMEDiameterAddress,
        _AlertServiceCentreArg_newMSCNumber,
        AlertServiceCentreArg,
        SmsGmsc_Alert_Event,
        _InformServiceCentreArg_storedMSISDN,
        _InformServiceCentreArg_mw_Status,
        _InformServiceCentreArg_extensionContainer,
        _InformServiceCentreArg_absentSubscriberDiagnosticSM,
        _InformServiceCentreArg_additionalAbsentSubscriberDiagnosticSM,
        _InformServiceCentreArg_smsf3gppAbsentSubscriberDiagnosticSM,
        _InformServiceCentreArg_smsfNon3gppAbsentSubscriberDiagnosticSM,
        InformServiceCentreArg,
        MW_Status,
        _ReadyForSM_Arg_imsi,
        _ReadyForSM_Arg_alertReason,
        _ReadyForSM_Arg_alertReasonIndicator,
        _ReadyForSM_Arg_extensionContainer,
        _ReadyForSM_Arg_additionalAlertReasonIndicator,
        _ReadyForSM_Arg_maximumUeAvailabilityTime,
        ReadyForSM_Arg,
        _ReadyForSM_Res_extensionContainer,
        ReadyForSM_Res,
        AlertReason,
        _MT_ForwardSM_VGCS_Arg_asciCallReference,
        _MT_ForwardSM_VGCS_Arg_sm_RP_OA,
        _MT_ForwardSM_VGCS_Arg_sm_RP_UI,
        _MT_ForwardSM_VGCS_Arg_extensionContainer,
        MT_ForwardSM_VGCS_Arg,
        _MT_ForwardSM_VGCS_Res_sm_RP_UI,
        _MT_ForwardSM_VGCS_Res_dispatcherList,
        _MT_ForwardSM_VGCS_Res_ongoingCall,
        _MT_ForwardSM_VGCS_Res_extensionContainer,
        _MT_ForwardSM_VGCS_Res_additionalDispatcherList,
        MT_ForwardSM_VGCS_Res,
        _DispatcherList__item_,
        DispatcherList,
        maxNumOfDispatchers,
        _AdditionalDispatcherList__item_,
        AdditionalDispatcherList,
        maxNumOfAdditionalDispatchers,
    ]

class MAP_SS_Code:

    _name_  = 'MAP-SS-Code'
    _oid_   = [0, 4, 0, 0, 1, 3, 15, 19]
    
    _obj_ = [
        'SS-Code',
        'allSS',
        'allLineIdentificationSS',
        'clip',
        'clir',
        'colp',
        'colr',
        'mci',
        'allNameIdentificationSS',
        'cnap',
        'allForwardingSS',
        'cfu',
        'allCondForwardingSS',
        'cfb',
        'cfnry',
        'cfnrc',
        'cd',
        'allCallOfferingSS',
        'ect',
        'mah',
        'allCallCompletionSS',
        'cw',
        'hold',
        'ccbs-A',
        'ccbs-B',
        'mc',
        'allMultiPartySS',
        'multiPTY',
        'allCommunityOfInterest-SS',
        'cug',
        'allChargingSS',
        'aoci',
        'aocc',
        'allAdditionalInfoTransferSS',
        'uus1',
        'uus2',
        'uus3',
        'allBarringSS',
        'barringOfOutgoingCalls',
        'baoc',
        'boic',
        'boicExHC',
        'barringOfIncomingCalls',
        'baic',
        'bicRoam',
        'allPLMN-specificSS',
        'plmn-specificSS-1',
        'plmn-specificSS-2',
        'plmn-specificSS-3',
        'plmn-specificSS-4',
        'plmn-specificSS-5',
        'plmn-specificSS-6',
        'plmn-specificSS-7',
        'plmn-specificSS-8',
        'plmn-specificSS-9',
        'plmn-specificSS-A',
        'plmn-specificSS-B',
        'plmn-specificSS-C',
        'plmn-specificSS-D',
        'plmn-specificSS-E',
        'plmn-specificSS-F',
        'allCallPrioritySS',
        'emlpp',
        'allLCSPrivacyException',
        'universal',
        'callSessionRelated',
        'callSessionUnrelated',
        'plmnoperator',
        'serviceType',
        'allMOLR-SS',
        'basicSelfLocation',
        'autonomousSelfLocation',
        'transferToThirdParty',
        ]
    _type_ = [
        'SS-Code',
        ]
    _set_ = [
        ]
    _val_ = [
        'allSS',
        'allLineIdentificationSS',
        'clip',
        'clir',
        'colp',
        'colr',
        'mci',
        'allNameIdentificationSS',
        'cnap',
        'allForwardingSS',
        'cfu',
        'allCondForwardingSS',
        'cfb',
        'cfnry',
        'cfnrc',
        'cd',
        'allCallOfferingSS',
        'ect',
        'mah',
        'allCallCompletionSS',
        'cw',
        'hold',
        'ccbs-A',
        'ccbs-B',
        'mc',
        'allMultiPartySS',
        'multiPTY',
        'allCommunityOfInterest-SS',
        'cug',
        'allChargingSS',
        'aoci',
        'aocc',
        'allAdditionalInfoTransferSS',
        'uus1',
        'uus2',
        'uus3',
        'allBarringSS',
        'barringOfOutgoingCalls',
        'baoc',
        'boic',
        'boicExHC',
        'barringOfIncomingCalls',
        'baic',
        'bicRoam',
        'allPLMN-specificSS',
        'plmn-specificSS-1',
        'plmn-specificSS-2',
        'plmn-specificSS-3',
        'plmn-specificSS-4',
        'plmn-specificSS-5',
        'plmn-specificSS-6',
        'plmn-specificSS-7',
        'plmn-specificSS-8',
        'plmn-specificSS-9',
        'plmn-specificSS-A',
        'plmn-specificSS-B',
        'plmn-specificSS-C',
        'plmn-specificSS-D',
        'plmn-specificSS-E',
        'plmn-specificSS-F',
        'allCallPrioritySS',
        'emlpp',
        'allLCSPrivacyException',
        'universal',
        'callSessionRelated',
        'callSessionUnrelated',
        'plmnoperator',
        'serviceType',
        'allMOLR-SS',
        'basicSelfLocation',
        'autonomousSelfLocation',
        'transferToThirdParty',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< SS-Code >-----#
    SS_Code = OCT_STR(name='SS-Code', mode=MODE_TYPE)
    SS_Code._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< allSS >-----#
    allSS = OCT_STR(name='allSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allSS._val = b'\x00'
    
    #-----< allLineIdentificationSS >-----#
    allLineIdentificationSS = OCT_STR(name='allLineIdentificationSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allLineIdentificationSS._val = b'\x10'
    
    #-----< clip >-----#
    clip = OCT_STR(name='clip', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    clip._val = b'\x11'
    
    #-----< clir >-----#
    clir = OCT_STR(name='clir', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    clir._val = b'\x12'
    
    #-----< colp >-----#
    colp = OCT_STR(name='colp', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    colp._val = b'\x13'
    
    #-----< colr >-----#
    colr = OCT_STR(name='colr', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    colr._val = b'\x14'
    
    #-----< mci >-----#
    mci = OCT_STR(name='mci', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    mci._val = b'\x15'
    
    #-----< allNameIdentificationSS >-----#
    allNameIdentificationSS = OCT_STR(name='allNameIdentificationSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allNameIdentificationSS._val = b'\x18'
    
    #-----< cnap >-----#
    cnap = OCT_STR(name='cnap', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    cnap._val = b'\x19'
    
    #-----< allForwardingSS >-----#
    allForwardingSS = OCT_STR(name='allForwardingSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allForwardingSS._val = b' '
    
    #-----< cfu >-----#
    cfu = OCT_STR(name='cfu', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    cfu._val = b'!'
    
    #-----< allCondForwardingSS >-----#
    allCondForwardingSS = OCT_STR(name='allCondForwardingSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allCondForwardingSS._val = b'('
    
    #-----< cfb >-----#
    cfb = OCT_STR(name='cfb', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    cfb._val = b')'
    
    #-----< cfnry >-----#
    cfnry = OCT_STR(name='cfnry', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    cfnry._val = b'*'
    
    #-----< cfnrc >-----#
    cfnrc = OCT_STR(name='cfnrc', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    cfnrc._val = b'+'
    
    #-----< cd >-----#
    cd = OCT_STR(name='cd', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    cd._val = b'$'
    
    #-----< allCallOfferingSS >-----#
    allCallOfferingSS = OCT_STR(name='allCallOfferingSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allCallOfferingSS._val = b'0'
    
    #-----< ect >-----#
    ect = OCT_STR(name='ect', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    ect._val = b'1'
    
    #-----< mah >-----#
    mah = OCT_STR(name='mah', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    mah._val = b'2'
    
    #-----< allCallCompletionSS >-----#
    allCallCompletionSS = OCT_STR(name='allCallCompletionSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allCallCompletionSS._val = b'@'
    
    #-----< cw >-----#
    cw = OCT_STR(name='cw', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    cw._val = b'A'
    
    #-----< hold >-----#
    hold = OCT_STR(name='hold', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    hold._val = b'B'
    
    #-----< ccbs-A >-----#
    ccbs_A = OCT_STR(name='ccbs-A', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    ccbs_A._val = b'C'
    
    #-----< ccbs-B >-----#
    ccbs_B = OCT_STR(name='ccbs-B', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    ccbs_B._val = b'D'
    
    #-----< mc >-----#
    mc = OCT_STR(name='mc', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    mc._val = b'E'
    
    #-----< allMultiPartySS >-----#
    allMultiPartySS = OCT_STR(name='allMultiPartySS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allMultiPartySS._val = b'P'
    
    #-----< multiPTY >-----#
    multiPTY = OCT_STR(name='multiPTY', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    multiPTY._val = b'Q'
    
    #-----< allCommunityOfInterest-SS >-----#
    allCommunityOfInterest_SS = OCT_STR(name='allCommunityOfInterest-SS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allCommunityOfInterest_SS._val = b'`'
    
    #-----< cug >-----#
    cug = OCT_STR(name='cug', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    cug._val = b'a'
    
    #-----< allChargingSS >-----#
    allChargingSS = OCT_STR(name='allChargingSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allChargingSS._val = b'p'
    
    #-----< aoci >-----#
    aoci = OCT_STR(name='aoci', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    aoci._val = b'q'
    
    #-----< aocc >-----#
    aocc = OCT_STR(name='aocc', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    aocc._val = b'r'
    
    #-----< allAdditionalInfoTransferSS >-----#
    allAdditionalInfoTransferSS = OCT_STR(name='allAdditionalInfoTransferSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allAdditionalInfoTransferSS._val = b'\x80'
    
    #-----< uus1 >-----#
    uus1 = OCT_STR(name='uus1', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    uus1._val = b'\x81'
    
    #-----< uus2 >-----#
    uus2 = OCT_STR(name='uus2', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    uus2._val = b'\x82'
    
    #-----< uus3 >-----#
    uus3 = OCT_STR(name='uus3', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    uus3._val = b'\x83'
    
    #-----< allBarringSS >-----#
    allBarringSS = OCT_STR(name='allBarringSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allBarringSS._val = b'\x90'
    
    #-----< barringOfOutgoingCalls >-----#
    barringOfOutgoingCalls = OCT_STR(name='barringOfOutgoingCalls', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    barringOfOutgoingCalls._val = b'\x91'
    
    #-----< baoc >-----#
    baoc = OCT_STR(name='baoc', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    baoc._val = b'\x92'
    
    #-----< boic >-----#
    boic = OCT_STR(name='boic', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    boic._val = b'\x93'
    
    #-----< boicExHC >-----#
    boicExHC = OCT_STR(name='boicExHC', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    boicExHC._val = b'\x94'
    
    #-----< barringOfIncomingCalls >-----#
    barringOfIncomingCalls = OCT_STR(name='barringOfIncomingCalls', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    barringOfIncomingCalls._val = b'\x99'
    
    #-----< baic >-----#
    baic = OCT_STR(name='baic', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    baic._val = b'\x9a'
    
    #-----< bicRoam >-----#
    bicRoam = OCT_STR(name='bicRoam', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    bicRoam._val = b'\x9b'
    
    #-----< allPLMN-specificSS >-----#
    allPLMN_specificSS = OCT_STR(name='allPLMN-specificSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allPLMN_specificSS._val = b'\xf0'
    
    #-----< plmn-specificSS-1 >-----#
    plmn_specificSS_1 = OCT_STR(name='plmn-specificSS-1', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_1._val = b'\xf1'
    
    #-----< plmn-specificSS-2 >-----#
    plmn_specificSS_2 = OCT_STR(name='plmn-specificSS-2', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_2._val = b'\xf2'
    
    #-----< plmn-specificSS-3 >-----#
    plmn_specificSS_3 = OCT_STR(name='plmn-specificSS-3', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_3._val = b'\xf3'
    
    #-----< plmn-specificSS-4 >-----#
    plmn_specificSS_4 = OCT_STR(name='plmn-specificSS-4', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_4._val = b'\xf4'
    
    #-----< plmn-specificSS-5 >-----#
    plmn_specificSS_5 = OCT_STR(name='plmn-specificSS-5', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_5._val = b'\xf5'
    
    #-----< plmn-specificSS-6 >-----#
    plmn_specificSS_6 = OCT_STR(name='plmn-specificSS-6', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_6._val = b'\xf6'
    
    #-----< plmn-specificSS-7 >-----#
    plmn_specificSS_7 = OCT_STR(name='plmn-specificSS-7', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_7._val = b'\xf7'
    
    #-----< plmn-specificSS-8 >-----#
    plmn_specificSS_8 = OCT_STR(name='plmn-specificSS-8', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_8._val = b'\xf8'
    
    #-----< plmn-specificSS-9 >-----#
    plmn_specificSS_9 = OCT_STR(name='plmn-specificSS-9', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_9._val = b'\xf9'
    
    #-----< plmn-specificSS-A >-----#
    plmn_specificSS_A = OCT_STR(name='plmn-specificSS-A', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_A._val = b'\xfa'
    
    #-----< plmn-specificSS-B >-----#
    plmn_specificSS_B = OCT_STR(name='plmn-specificSS-B', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_B._val = b'\xfb'
    
    #-----< plmn-specificSS-C >-----#
    plmn_specificSS_C = OCT_STR(name='plmn-specificSS-C', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_C._val = b'\xfc'
    
    #-----< plmn-specificSS-D >-----#
    plmn_specificSS_D = OCT_STR(name='plmn-specificSS-D', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_D._val = b'\xfd'
    
    #-----< plmn-specificSS-E >-----#
    plmn_specificSS_E = OCT_STR(name='plmn-specificSS-E', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_E._val = b'\xfe'
    
    #-----< plmn-specificSS-F >-----#
    plmn_specificSS_F = OCT_STR(name='plmn-specificSS-F', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_F._val = b'\xff'
    
    #-----< allCallPrioritySS >-----#
    allCallPrioritySS = OCT_STR(name='allCallPrioritySS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allCallPrioritySS._val = b'\xa0'
    
    #-----< emlpp >-----#
    emlpp = OCT_STR(name='emlpp', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    emlpp._val = b'\xa1'
    
    #-----< allLCSPrivacyException >-----#
    allLCSPrivacyException = OCT_STR(name='allLCSPrivacyException', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allLCSPrivacyException._val = b'\xb0'
    
    #-----< universal >-----#
    universal = OCT_STR(name='universal', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    universal._val = b'\xb1'
    
    #-----< callSessionRelated >-----#
    callSessionRelated = OCT_STR(name='callSessionRelated', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    callSessionRelated._val = b'\xb2'
    
    #-----< callSessionUnrelated >-----#
    callSessionUnrelated = OCT_STR(name='callSessionUnrelated', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    callSessionUnrelated._val = b'\xb3'
    
    #-----< plmnoperator >-----#
    plmnoperator = OCT_STR(name='plmnoperator', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmnoperator._val = b'\xb4'
    
    #-----< serviceType >-----#
    serviceType = OCT_STR(name='serviceType', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    serviceType._val = b'\xb5'
    
    #-----< allMOLR-SS >-----#
    allMOLR_SS = OCT_STR(name='allMOLR-SS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allMOLR_SS._val = b'\xc0'
    
    #-----< basicSelfLocation >-----#
    basicSelfLocation = OCT_STR(name='basicSelfLocation', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    basicSelfLocation._val = b'\xc1'
    
    #-----< autonomousSelfLocation >-----#
    autonomousSelfLocation = OCT_STR(name='autonomousSelfLocation', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    autonomousSelfLocation._val = b'\xc2'
    
    #-----< transferToThirdParty >-----#
    transferToThirdParty = OCT_STR(name='transferToThirdParty', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    transferToThirdParty._val = b'\xc3'
    
    _all_ = [
        SS_Code,
        allSS,
        allLineIdentificationSS,
        clip,
        clir,
        colp,
        colr,
        mci,
        allNameIdentificationSS,
        cnap,
        allForwardingSS,
        cfu,
        allCondForwardingSS,
        cfb,
        cfnry,
        cfnrc,
        cd,
        allCallOfferingSS,
        ect,
        mah,
        allCallCompletionSS,
        cw,
        hold,
        ccbs_A,
        ccbs_B,
        mc,
        allMultiPartySS,
        multiPTY,
        allCommunityOfInterest_SS,
        cug,
        allChargingSS,
        aoci,
        aocc,
        allAdditionalInfoTransferSS,
        uus1,
        uus2,
        uus3,
        allBarringSS,
        barringOfOutgoingCalls,
        baoc,
        boic,
        boicExHC,
        barringOfIncomingCalls,
        baic,
        bicRoam,
        allPLMN_specificSS,
        plmn_specificSS_1,
        plmn_specificSS_2,
        plmn_specificSS_3,
        plmn_specificSS_4,
        plmn_specificSS_5,
        plmn_specificSS_6,
        plmn_specificSS_7,
        plmn_specificSS_8,
        plmn_specificSS_9,
        plmn_specificSS_A,
        plmn_specificSS_B,
        plmn_specificSS_C,
        plmn_specificSS_D,
        plmn_specificSS_E,
        plmn_specificSS_F,
        allCallPrioritySS,
        emlpp,
        allLCSPrivacyException,
        universal,
        callSessionRelated,
        callSessionUnrelated,
        plmnoperator,
        serviceType,
        allMOLR_SS,
        basicSelfLocation,
        autonomousSelfLocation,
        transferToThirdParty,
    ]

class MAP_SS_DataTypes:

    _name_  = 'MAP-SS-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 14, 19]
    
    _obj_ = [
        'RegisterSS-Arg',
        'NoReplyConditionTime',
        'SS-Info',
        'ForwardingInfo',
        'ForwardingFeatureList',
        'ForwardingFeature',
        'SS-Status',
        'ForwardingOptions',
        'CallBarringInfo',
        'CallBarringFeatureList',
        'CallBarringFeature',
        'SS-Data',
        'SS-SubscriptionOption',
        'CliRestrictionOption',
        'OverrideCategory',
        'SS-ForBS-Code',
        'GenericServiceInfo',
        'CCBS-FeatureList',
        'maxNumOfCCBS-Requests',
        'CCBS-Feature',
        'CCBS-Index',
        'InterrogateSS-Res',
        'USSD-Arg',
        'USSD-Res',
        'USSD-DataCodingScheme',
        'USSD-String',
        'maxUSSD-StringLength',
        'Password',
        'GuidanceInfo',
        'SS-List',
        'maxNumOfSS',
        'SS-InfoList',
        'BasicServiceGroupList',
        'maxNumOfBasicServiceGroups',
        'SS-InvocationNotificationArg',
        'CCBS-RequestState',
        'SS-InvocationNotificationRes',
        'SS-EventSpecification',
        'maxEventSpecification',
        'RegisterCC-EntryArg',
        'CCBS-Data',
        'ServiceIndicator',
        'RegisterCC-EntryRes',
        'EraseCC-EntryArg',
        'EraseCC-EntryRes',
        ]
    _type_ = [
        'RegisterSS-Arg',
        'NoReplyConditionTime',
        'SS-Info',
        'ForwardingInfo',
        'ForwardingFeatureList',
        'ForwardingFeature',
        'SS-Status',
        'ForwardingOptions',
        'CallBarringInfo',
        'CallBarringFeatureList',
        'CallBarringFeature',
        'SS-Data',
        'SS-SubscriptionOption',
        'CliRestrictionOption',
        'OverrideCategory',
        'SS-ForBS-Code',
        'GenericServiceInfo',
        'CCBS-FeatureList',
        'CCBS-Feature',
        'CCBS-Index',
        'InterrogateSS-Res',
        'USSD-Arg',
        'USSD-Res',
        'USSD-DataCodingScheme',
        'USSD-String',
        'Password',
        'GuidanceInfo',
        'SS-List',
        'SS-InfoList',
        'BasicServiceGroupList',
        'SS-InvocationNotificationArg',
        'CCBS-RequestState',
        'SS-InvocationNotificationRes',
        'SS-EventSpecification',
        'RegisterCC-EntryArg',
        'CCBS-Data',
        'ServiceIndicator',
        'RegisterCC-EntryRes',
        'EraseCC-EntryArg',
        'EraseCC-EntryRes',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxNumOfCCBS-Requests',
        'maxUSSD-StringLength',
        'maxNumOfSS',
        'maxNumOfBasicServiceGroups',
        'maxEventSpecification',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< RegisterSS-Arg >-----#
    RegisterSS_Arg = SEQ(name='RegisterSS-Arg', mode=MODE_TYPE)
    _RegisterSS_Arg_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _RegisterSS_Arg_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'BasicServiceCode')), opt=True)
    _RegisterSS_Arg_forwardedToNumber = OCT_STR(name='forwardedToNumber', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')), opt=True)
    _RegisterSS_Arg_forwardedToSubaddress = OCT_STR(name='forwardedToSubaddress', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-SubaddressString')), opt=True)
    _RegisterSS_Arg_noReplyConditionTime = INT(name='noReplyConditionTime', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'NoReplyConditionTime')), opt=True)
    _RegisterSS_Arg_defaultPriority = INT(name='defaultPriority', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')), opt=True)
    _RegisterSS_Arg_nbrUser = INT(name='nbrUser', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'MC-Bearers')), opt=True)
    _RegisterSS_Arg_longFTN_Supported = NULL(name='longFTN-Supported', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    RegisterSS_Arg._cont = ASN1Dict([
        ('ss-Code', _RegisterSS_Arg_ss_Code),
        ('basicService', _RegisterSS_Arg_basicService),
        ('forwardedToNumber', _RegisterSS_Arg_forwardedToNumber),
        ('forwardedToSubaddress', _RegisterSS_Arg_forwardedToSubaddress),
        ('noReplyConditionTime', _RegisterSS_Arg_noReplyConditionTime),
        ('defaultPriority', _RegisterSS_Arg_defaultPriority),
        ('nbrUser', _RegisterSS_Arg_nbrUser),
        ('longFTN-Supported', _RegisterSS_Arg_longFTN_Supported),
        ])
    RegisterSS_Arg._ext = ['defaultPriority', 'nbrUser', 'longFTN-Supported']
    
    #-----< NoReplyConditionTime >-----#
    NoReplyConditionTime = INT(name='NoReplyConditionTime', mode=MODE_TYPE)
    NoReplyConditionTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=30)], ev=None, er=[])
    
    #-----< SS-Info >-----#
    SS_Info = CHOICE(name='SS-Info', mode=MODE_TYPE)
    _SS_Info_forwardingInfo = SEQ(name='forwardingInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'ForwardingInfo')))
    _SS_Info_callBarringInfo = SEQ(name='callBarringInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CallBarringInfo')))
    _SS_Info_ss_Data = SEQ(name='ss-Data', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Data')))
    SS_Info._cont = ASN1Dict([
        ('forwardingInfo', _SS_Info_forwardingInfo),
        ('callBarringInfo', _SS_Info_callBarringInfo),
        ('ss-Data', _SS_Info_ss_Data),
        ])
    SS_Info._ext = None
    
    #-----< ForwardingInfo >-----#
    ForwardingInfo = SEQ(name='ForwardingInfo', mode=MODE_TYPE)
    _ForwardingInfo_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')), opt=True)
    _ForwardingInfo_forwardingFeatureList = SEQ_OF(name='forwardingFeatureList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'ForwardingFeatureList')))
    ForwardingInfo._cont = ASN1Dict([
        ('ss-Code', _ForwardingInfo_ss_Code),
        ('forwardingFeatureList', _ForwardingInfo_forwardingFeatureList),
        ])
    ForwardingInfo._ext = []
    
    #-----< ForwardingFeatureList >-----#
    ForwardingFeatureList = SEQ_OF(name='ForwardingFeatureList', mode=MODE_TYPE)
    _ForwardingFeatureList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'ForwardingFeature')))
    ForwardingFeatureList._cont = _ForwardingFeatureList__item_
    ForwardingFeatureList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=13)], ev=None, er=[])
    
    #-----< ForwardingFeature >-----#
    ForwardingFeature = SEQ(name='ForwardingFeature', mode=MODE_TYPE)
    _ForwardingFeature_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'BasicServiceCode')), opt=True)
    _ForwardingFeature_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')), opt=True)
    _ForwardingFeature_forwardedToNumber = OCT_STR(name='forwardedToNumber', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _ForwardingFeature_forwardedToSubaddress = OCT_STR(name='forwardedToSubaddress', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-SubaddressString')), opt=True)
    _ForwardingFeature_forwardingOptions = OCT_STR(name='forwardingOptions', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'ForwardingOptions')), opt=True)
    _ForwardingFeature_noReplyConditionTime = INT(name='noReplyConditionTime', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'NoReplyConditionTime')), opt=True)
    _ForwardingFeature_longForwardedToNumber = OCT_STR(name='longForwardedToNumber', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'FTN-AddressString')), opt=True)
    ForwardingFeature._cont = ASN1Dict([
        ('basicService', _ForwardingFeature_basicService),
        ('ss-Status', _ForwardingFeature_ss_Status),
        ('forwardedToNumber', _ForwardingFeature_forwardedToNumber),
        ('forwardedToSubaddress', _ForwardingFeature_forwardedToSubaddress),
        ('forwardingOptions', _ForwardingFeature_forwardingOptions),
        ('noReplyConditionTime', _ForwardingFeature_noReplyConditionTime),
        ('longForwardedToNumber', _ForwardingFeature_longForwardedToNumber),
        ])
    ForwardingFeature._ext = ['longForwardedToNumber']
    
    #-----< SS-Status >-----#
    SS_Status = OCT_STR(name='SS-Status', mode=MODE_TYPE)
    SS_Status._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< ForwardingOptions >-----#
    ForwardingOptions = OCT_STR(name='ForwardingOptions', mode=MODE_TYPE)
    ForwardingOptions._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< CallBarringInfo >-----#
    CallBarringInfo = SEQ(name='CallBarringInfo', mode=MODE_TYPE)
    _CallBarringInfo_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')), opt=True)
    _CallBarringInfo_callBarringFeatureList = SEQ_OF(name='callBarringFeatureList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'CallBarringFeatureList')))
    CallBarringInfo._cont = ASN1Dict([
        ('ss-Code', _CallBarringInfo_ss_Code),
        ('callBarringFeatureList', _CallBarringInfo_callBarringFeatureList),
        ])
    CallBarringInfo._ext = []
    
    #-----< CallBarringFeatureList >-----#
    CallBarringFeatureList = SEQ_OF(name='CallBarringFeatureList', mode=MODE_TYPE)
    _CallBarringFeatureList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'CallBarringFeature')))
    CallBarringFeatureList._cont = _CallBarringFeatureList__item_
    CallBarringFeatureList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=13)], ev=None, er=[])
    
    #-----< CallBarringFeature >-----#
    CallBarringFeature = SEQ(name='CallBarringFeature', mode=MODE_TYPE)
    _CallBarringFeature_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'BasicServiceCode')), opt=True)
    _CallBarringFeature_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')), opt=True)
    CallBarringFeature._cont = ASN1Dict([
        ('basicService', _CallBarringFeature_basicService),
        ('ss-Status', _CallBarringFeature_ss_Status),
        ])
    CallBarringFeature._ext = []
    
    #-----< SS-Data >-----#
    SS_Data = SEQ(name='SS-Data', mode=MODE_TYPE)
    _SS_Data_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')), opt=True)
    _SS_Data_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')), opt=True)
    _SS_Data_ss_SubscriptionOption = CHOICE(name='ss-SubscriptionOption', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-SubscriptionOption')), opt=True)
    _SS_Data_basicServiceGroupList = SEQ_OF(name='basicServiceGroupList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'BasicServiceGroupList')), opt=True)
    _SS_Data_defaultPriority = INT(name='defaultPriority', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')), opt=True)
    _SS_Data_nbrUser = INT(name='nbrUser', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'MC-Bearers')), opt=True)
    SS_Data._cont = ASN1Dict([
        ('ss-Code', _SS_Data_ss_Code),
        ('ss-Status', _SS_Data_ss_Status),
        ('ss-SubscriptionOption', _SS_Data_ss_SubscriptionOption),
        ('basicServiceGroupList', _SS_Data_basicServiceGroupList),
        ('defaultPriority', _SS_Data_defaultPriority),
        ('nbrUser', _SS_Data_nbrUser),
        ])
    SS_Data._ext = ['defaultPriority', 'nbrUser']
    
    #-----< SS-SubscriptionOption >-----#
    SS_SubscriptionOption = CHOICE(name='SS-SubscriptionOption', mode=MODE_TYPE)
    _SS_SubscriptionOption_cliRestrictionOption = ENUM(name='cliRestrictionOption', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CliRestrictionOption')))
    _SS_SubscriptionOption_overrideCategory = ENUM(name='overrideCategory', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'OverrideCategory')))
    SS_SubscriptionOption._cont = ASN1Dict([
        ('cliRestrictionOption', _SS_SubscriptionOption_cliRestrictionOption),
        ('overrideCategory', _SS_SubscriptionOption_overrideCategory),
        ])
    SS_SubscriptionOption._ext = None
    
    #-----< CliRestrictionOption >-----#
    CliRestrictionOption = ENUM(name='CliRestrictionOption', mode=MODE_TYPE)
    CliRestrictionOption._cont = ASN1Dict([('permanent', 0), ('temporaryDefaultRestricted', 1), ('temporaryDefaultAllowed', 2)])
    CliRestrictionOption._ext = None
    
    #-----< OverrideCategory >-----#
    OverrideCategory = ENUM(name='OverrideCategory', mode=MODE_TYPE)
    OverrideCategory._cont = ASN1Dict([('overrideEnabled', 0), ('overrideDisabled', 1)])
    OverrideCategory._ext = None
    
    #-----< SS-ForBS-Code >-----#
    SS_ForBS_Code = SEQ(name='SS-ForBS-Code', mode=MODE_TYPE)
    _SS_ForBS_Code_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _SS_ForBS_Code_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'BasicServiceCode')), opt=True)
    _SS_ForBS_Code_longFTN_Supported = NULL(name='longFTN-Supported', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SS_ForBS_Code._cont = ASN1Dict([
        ('ss-Code', _SS_ForBS_Code_ss_Code),
        ('basicService', _SS_ForBS_Code_basicService),
        ('longFTN-Supported', _SS_ForBS_Code_longFTN_Supported),
        ])
    SS_ForBS_Code._ext = ['longFTN-Supported']
    
    #-----< GenericServiceInfo >-----#
    GenericServiceInfo = SEQ(name='GenericServiceInfo', mode=MODE_TYPE)
    _GenericServiceInfo_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    _GenericServiceInfo_cliRestrictionOption = ENUM(name='cliRestrictionOption', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'CliRestrictionOption')), opt=True)
    _GenericServiceInfo_maximumEntitledPriority = INT(name='maximumEntitledPriority', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')), opt=True)
    _GenericServiceInfo_defaultPriority = INT(name='defaultPriority', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')), opt=True)
    _GenericServiceInfo_ccbs_FeatureList = SEQ_OF(name='ccbs-FeatureList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CCBS-FeatureList')), opt=True)
    _GenericServiceInfo_nbrSB = INT(name='nbrSB', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'MaxMC-Bearers')), opt=True)
    _GenericServiceInfo_nbrUser = INT(name='nbrUser', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'MC-Bearers')), opt=True)
    _GenericServiceInfo_nbrSN = INT(name='nbrSN', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'MC-Bearers')), opt=True)
    GenericServiceInfo._cont = ASN1Dict([
        ('ss-Status', _GenericServiceInfo_ss_Status),
        ('cliRestrictionOption', _GenericServiceInfo_cliRestrictionOption),
        ('maximumEntitledPriority', _GenericServiceInfo_maximumEntitledPriority),
        ('defaultPriority', _GenericServiceInfo_defaultPriority),
        ('ccbs-FeatureList', _GenericServiceInfo_ccbs_FeatureList),
        ('nbrSB', _GenericServiceInfo_nbrSB),
        ('nbrUser', _GenericServiceInfo_nbrUser),
        ('nbrSN', _GenericServiceInfo_nbrSN),
        ])
    GenericServiceInfo._ext = ['maximumEntitledPriority', 'defaultPriority', 'ccbs-FeatureList', 'nbrSB', 'nbrUser', 'nbrSN']
    
    #-----< CCBS-FeatureList >-----#
    CCBS_FeatureList = SEQ_OF(name='CCBS-FeatureList', mode=MODE_TYPE)
    _CCBS_FeatureList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'CCBS-Feature')))
    CCBS_FeatureList._cont = _CCBS_FeatureList__item_
    CCBS_FeatureList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< maxNumOfCCBS-Requests >-----#
    maxNumOfCCBS_Requests = INT(name='maxNumOfCCBS-Requests', mode=MODE_VALUE)
    maxNumOfCCBS_Requests._val = 5
    
    #-----< CCBS-Feature >-----#
    CCBS_Feature = SEQ(name='CCBS-Feature', mode=MODE_TYPE)
    _CCBS_Feature_ccbs_Index = INT(name='ccbs-Index', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CCBS-Index')), opt=True)
    _CCBS_Feature_b_subscriberNumber = OCT_STR(name='b-subscriberNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _CCBS_Feature_b_subscriberSubaddress = OCT_STR(name='b-subscriberSubaddress', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-SubaddressString')), opt=True)
    _CCBS_Feature_basicServiceGroup = CHOICE(name='basicServiceGroup', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'BasicServiceCode')), opt=True)
    CCBS_Feature._cont = ASN1Dict([
        ('ccbs-Index', _CCBS_Feature_ccbs_Index),
        ('b-subscriberNumber', _CCBS_Feature_b_subscriberNumber),
        ('b-subscriberSubaddress', _CCBS_Feature_b_subscriberSubaddress),
        ('basicServiceGroup', _CCBS_Feature_basicServiceGroup),
        ])
    CCBS_Feature._ext = []
    
    #-----< CCBS-Index >-----#
    CCBS_Index = INT(name='CCBS-Index', mode=MODE_TYPE)
    CCBS_Index._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< InterrogateSS-Res >-----#
    InterrogateSS_Res = CHOICE(name='InterrogateSS-Res', mode=MODE_TYPE)
    _InterrogateSS_Res_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    _InterrogateSS_Res_basicServiceGroupList = SEQ_OF(name='basicServiceGroupList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'BasicServiceGroupList')))
    _InterrogateSS_Res_forwardingFeatureList = SEQ_OF(name='forwardingFeatureList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'ForwardingFeatureList')))
    _InterrogateSS_Res_genericServiceInfo = SEQ(name='genericServiceInfo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'GenericServiceInfo')))
    InterrogateSS_Res._cont = ASN1Dict([
        ('ss-Status', _InterrogateSS_Res_ss_Status),
        ('basicServiceGroupList', _InterrogateSS_Res_basicServiceGroupList),
        ('forwardingFeatureList', _InterrogateSS_Res_forwardingFeatureList),
        ('genericServiceInfo', _InterrogateSS_Res_genericServiceInfo),
        ])
    InterrogateSS_Res._ext = None
    
    #-----< USSD-Arg >-----#
    USSD_Arg = SEQ(name='USSD-Arg', mode=MODE_TYPE)
    _USSD_Arg_ussd_DataCodingScheme = OCT_STR(name='ussd-DataCodingScheme', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-DataCodingScheme')))
    _USSD_Arg_ussd_String = OCT_STR(name='ussd-String', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-String')))
    _USSD_Arg_alertingPattern = OCT_STR(name='alertingPattern', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')), opt=True)
    _USSD_Arg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    USSD_Arg._cont = ASN1Dict([
        ('ussd-DataCodingScheme', _USSD_Arg_ussd_DataCodingScheme),
        ('ussd-String', _USSD_Arg_ussd_String),
        ('alertingPattern', _USSD_Arg_alertingPattern),
        ('msisdn', _USSD_Arg_msisdn),
        ])
    USSD_Arg._ext = ['alertingPattern', 'msisdn']
    
    #-----< USSD-Res >-----#
    USSD_Res = SEQ(name='USSD-Res', mode=MODE_TYPE)
    _USSD_Res_ussd_DataCodingScheme = OCT_STR(name='ussd-DataCodingScheme', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-DataCodingScheme')))
    _USSD_Res_ussd_String = OCT_STR(name='ussd-String', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-String')))
    USSD_Res._cont = ASN1Dict([
        ('ussd-DataCodingScheme', _USSD_Res_ussd_DataCodingScheme),
        ('ussd-String', _USSD_Res_ussd_String),
        ])
    USSD_Res._ext = []
    
    #-----< USSD-DataCodingScheme >-----#
    USSD_DataCodingScheme = OCT_STR(name='USSD-DataCodingScheme', mode=MODE_TYPE)
    USSD_DataCodingScheme._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< USSD-String >-----#
    USSD_String = OCT_STR(name='USSD-String', mode=MODE_TYPE)
    USSD_String._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=160)], ev=None, er=[])
    
    #-----< maxUSSD-StringLength >-----#
    maxUSSD_StringLength = INT(name='maxUSSD-StringLength', mode=MODE_VALUE)
    maxUSSD_StringLength._val = 160
    
    #-----< Password >-----#
    Password = STR_NUM(name='Password', mode=MODE_TYPE)
    Password._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    Password._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    
    #-----< GuidanceInfo >-----#
    GuidanceInfo = ENUM(name='GuidanceInfo', mode=MODE_TYPE)
    GuidanceInfo._cont = ASN1Dict([('enterPW', 0), ('enterNewPW', 1), ('enterNewPW-Again', 2)])
    GuidanceInfo._ext = None
    
    #-----< SS-List >-----#
    SS_List = SEQ_OF(name='SS-List', mode=MODE_TYPE)
    _SS_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    SS_List._cont = _SS_List__item_
    SS_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=30)], ev=None, er=[])
    
    #-----< maxNumOfSS >-----#
    maxNumOfSS = INT(name='maxNumOfSS', mode=MODE_VALUE)
    maxNumOfSS._val = 30
    
    #-----< SS-InfoList >-----#
    SS_InfoList = SEQ_OF(name='SS-InfoList', mode=MODE_TYPE)
    _SS_InfoList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Info')))
    SS_InfoList._cont = _SS_InfoList__item_
    SS_InfoList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=30)], ev=None, er=[])
    
    #-----< BasicServiceGroupList >-----#
    BasicServiceGroupList = SEQ_OF(name='BasicServiceGroupList', mode=MODE_TYPE)
    _BasicServiceGroupList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'BasicServiceCode')))
    BasicServiceGroupList._cont = _BasicServiceGroupList__item_
    BasicServiceGroupList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=13)], ev=None, er=[])
    
    #-----< maxNumOfBasicServiceGroups >-----#
    maxNumOfBasicServiceGroups = INT(name='maxNumOfBasicServiceGroups', mode=MODE_VALUE)
    maxNumOfBasicServiceGroups._val = 13
    
    #-----< SS-InvocationNotificationArg >-----#
    SS_InvocationNotificationArg = SEQ(name='SS-InvocationNotificationArg', mode=MODE_TYPE)
    _SS_InvocationNotificationArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _SS_InvocationNotificationArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _SS_InvocationNotificationArg_ss_Event = OCT_STR(name='ss-Event', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _SS_InvocationNotificationArg_ss_EventSpecification = SEQ_OF(name='ss-EventSpecification', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-EventSpecification')), opt=True)
    _SS_InvocationNotificationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SS_InvocationNotificationArg_b_subscriberNumber = OCT_STR(name='b-subscriberNumber', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SS_InvocationNotificationArg_ccbs_RequestState = ENUM(name='ccbs-RequestState', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CCBS-RequestState')), opt=True)
    SS_InvocationNotificationArg._cont = ASN1Dict([
        ('imsi', _SS_InvocationNotificationArg_imsi),
        ('msisdn', _SS_InvocationNotificationArg_msisdn),
        ('ss-Event', _SS_InvocationNotificationArg_ss_Event),
        ('ss-EventSpecification', _SS_InvocationNotificationArg_ss_EventSpecification),
        ('extensionContainer', _SS_InvocationNotificationArg_extensionContainer),
        ('b-subscriberNumber', _SS_InvocationNotificationArg_b_subscriberNumber),
        ('ccbs-RequestState', _SS_InvocationNotificationArg_ccbs_RequestState),
        ])
    SS_InvocationNotificationArg._ext = ['b-subscriberNumber', 'ccbs-RequestState']
    
    #-----< CCBS-RequestState >-----#
    CCBS_RequestState = ENUM(name='CCBS-RequestState', mode=MODE_TYPE)
    CCBS_RequestState._cont = ASN1Dict([('request', 0), ('recall', 1), ('active', 2), ('completed', 3), ('suspended', 4), ('frozen', 5), ('deleted', 6)])
    CCBS_RequestState._ext = None
    
    #-----< SS-InvocationNotificationRes >-----#
    SS_InvocationNotificationRes = SEQ(name='SS-InvocationNotificationRes', mode=MODE_TYPE)
    _SS_InvocationNotificationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SS_InvocationNotificationRes._cont = ASN1Dict([
        ('extensionContainer', _SS_InvocationNotificationRes_extensionContainer),
        ])
    SS_InvocationNotificationRes._ext = []
    
    #-----< SS-EventSpecification >-----#
    SS_EventSpecification = SEQ_OF(name='SS-EventSpecification', mode=MODE_TYPE)
    _SS_EventSpecification__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')))
    SS_EventSpecification._cont = _SS_EventSpecification__item_
    SS_EventSpecification._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    
    #-----< maxEventSpecification >-----#
    maxEventSpecification = INT(name='maxEventSpecification', mode=MODE_VALUE)
    maxEventSpecification._val = 2
    
    #-----< RegisterCC-EntryArg >-----#
    RegisterCC_EntryArg = SEQ(name='RegisterCC-EntryArg', mode=MODE_TYPE)
    _RegisterCC_EntryArg_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _RegisterCC_EntryArg_ccbs_Data = SEQ(name='ccbs-Data', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CCBS-Data')), opt=True)
    RegisterCC_EntryArg._cont = ASN1Dict([
        ('ss-Code', _RegisterCC_EntryArg_ss_Code),
        ('ccbs-Data', _RegisterCC_EntryArg_ccbs_Data),
        ])
    RegisterCC_EntryArg._ext = []
    
    #-----< CCBS-Data >-----#
    CCBS_Data = SEQ(name='CCBS-Data', mode=MODE_TYPE)
    _CCBS_Data_ccbs_Feature = SEQ(name='ccbs-Feature', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CCBS-Feature')))
    _CCBS_Data_translatedB_Number = OCT_STR(name='translatedB-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _CCBS_Data_serviceIndicator = BIT_STR(name='serviceIndicator', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'ServiceIndicator')), opt=True)
    _CCBS_Data_callInfo = SEQ(name='callInfo', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ExternalSignalInfo')))
    _CCBS_Data_networkSignalInfo = SEQ(name='networkSignalInfo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ExternalSignalInfo')))
    CCBS_Data._cont = ASN1Dict([
        ('ccbs-Feature', _CCBS_Data_ccbs_Feature),
        ('translatedB-Number', _CCBS_Data_translatedB_Number),
        ('serviceIndicator', _CCBS_Data_serviceIndicator),
        ('callInfo', _CCBS_Data_callInfo),
        ('networkSignalInfo', _CCBS_Data_networkSignalInfo),
        ])
    CCBS_Data._ext = []
    
    #-----< ServiceIndicator >-----#
    ServiceIndicator = BIT_STR(name='ServiceIndicator', mode=MODE_TYPE)
    ServiceIndicator._cont = ASN1Dict([('clir-invoked', 0), ('camel-invoked', 1)])
    ServiceIndicator._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=32)], ev=None, er=[])
    
    #-----< RegisterCC-EntryRes >-----#
    RegisterCC_EntryRes = SEQ(name='RegisterCC-EntryRes', mode=MODE_TYPE)
    _RegisterCC_EntryRes_ccbs_Feature = SEQ(name='ccbs-Feature', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CCBS-Feature')), opt=True)
    RegisterCC_EntryRes._cont = ASN1Dict([
        ('ccbs-Feature', _RegisterCC_EntryRes_ccbs_Feature),
        ])
    RegisterCC_EntryRes._ext = []
    
    #-----< EraseCC-EntryArg >-----#
    EraseCC_EntryArg = SEQ(name='EraseCC-EntryArg', mode=MODE_TYPE)
    _EraseCC_EntryArg_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _EraseCC_EntryArg_ccbs_Index = INT(name='ccbs-Index', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CCBS-Index')), opt=True)
    EraseCC_EntryArg._cont = ASN1Dict([
        ('ss-Code', _EraseCC_EntryArg_ss_Code),
        ('ccbs-Index', _EraseCC_EntryArg_ccbs_Index),
        ])
    EraseCC_EntryArg._ext = []
    
    #-----< EraseCC-EntryRes >-----#
    EraseCC_EntryRes = SEQ(name='EraseCC-EntryRes', mode=MODE_TYPE)
    _EraseCC_EntryRes_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _EraseCC_EntryRes_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')), opt=True)
    EraseCC_EntryRes._cont = ASN1Dict([
        ('ss-Code', _EraseCC_EntryRes_ss_Code),
        ('ss-Status', _EraseCC_EntryRes_ss_Status),
        ])
    EraseCC_EntryRes._ext = []
    
    _all_ = [
        _RegisterSS_Arg_ss_Code,
        _RegisterSS_Arg_basicService,
        _RegisterSS_Arg_forwardedToNumber,
        _RegisterSS_Arg_forwardedToSubaddress,
        _RegisterSS_Arg_noReplyConditionTime,
        _RegisterSS_Arg_defaultPriority,
        _RegisterSS_Arg_nbrUser,
        _RegisterSS_Arg_longFTN_Supported,
        RegisterSS_Arg,
        NoReplyConditionTime,
        _SS_Info_forwardingInfo,
        _SS_Info_callBarringInfo,
        _SS_Info_ss_Data,
        SS_Info,
        _ForwardingInfo_ss_Code,
        _ForwardingInfo_forwardingFeatureList,
        ForwardingInfo,
        _ForwardingFeatureList__item_,
        ForwardingFeatureList,
        _ForwardingFeature_basicService,
        _ForwardingFeature_ss_Status,
        _ForwardingFeature_forwardedToNumber,
        _ForwardingFeature_forwardedToSubaddress,
        _ForwardingFeature_forwardingOptions,
        _ForwardingFeature_noReplyConditionTime,
        _ForwardingFeature_longForwardedToNumber,
        ForwardingFeature,
        SS_Status,
        ForwardingOptions,
        _CallBarringInfo_ss_Code,
        _CallBarringInfo_callBarringFeatureList,
        CallBarringInfo,
        _CallBarringFeatureList__item_,
        CallBarringFeatureList,
        _CallBarringFeature_basicService,
        _CallBarringFeature_ss_Status,
        CallBarringFeature,
        _SS_Data_ss_Code,
        _SS_Data_ss_Status,
        _SS_Data_ss_SubscriptionOption,
        _SS_Data_basicServiceGroupList,
        _SS_Data_defaultPriority,
        _SS_Data_nbrUser,
        SS_Data,
        _SS_SubscriptionOption_cliRestrictionOption,
        _SS_SubscriptionOption_overrideCategory,
        SS_SubscriptionOption,
        CliRestrictionOption,
        OverrideCategory,
        _SS_ForBS_Code_ss_Code,
        _SS_ForBS_Code_basicService,
        _SS_ForBS_Code_longFTN_Supported,
        SS_ForBS_Code,
        _GenericServiceInfo_ss_Status,
        _GenericServiceInfo_cliRestrictionOption,
        _GenericServiceInfo_maximumEntitledPriority,
        _GenericServiceInfo_defaultPriority,
        _GenericServiceInfo_ccbs_FeatureList,
        _GenericServiceInfo_nbrSB,
        _GenericServiceInfo_nbrUser,
        _GenericServiceInfo_nbrSN,
        GenericServiceInfo,
        _CCBS_FeatureList__item_,
        CCBS_FeatureList,
        maxNumOfCCBS_Requests,
        _CCBS_Feature_ccbs_Index,
        _CCBS_Feature_b_subscriberNumber,
        _CCBS_Feature_b_subscriberSubaddress,
        _CCBS_Feature_basicServiceGroup,
        CCBS_Feature,
        CCBS_Index,
        _InterrogateSS_Res_ss_Status,
        _InterrogateSS_Res_basicServiceGroupList,
        _InterrogateSS_Res_forwardingFeatureList,
        _InterrogateSS_Res_genericServiceInfo,
        InterrogateSS_Res,
        _USSD_Arg_ussd_DataCodingScheme,
        _USSD_Arg_ussd_String,
        _USSD_Arg_alertingPattern,
        _USSD_Arg_msisdn,
        USSD_Arg,
        _USSD_Res_ussd_DataCodingScheme,
        _USSD_Res_ussd_String,
        USSD_Res,
        USSD_DataCodingScheme,
        USSD_String,
        maxUSSD_StringLength,
        Password,
        GuidanceInfo,
        _SS_List__item_,
        SS_List,
        maxNumOfSS,
        _SS_InfoList__item_,
        SS_InfoList,
        _BasicServiceGroupList__item_,
        BasicServiceGroupList,
        maxNumOfBasicServiceGroups,
        _SS_InvocationNotificationArg_imsi,
        _SS_InvocationNotificationArg_msisdn,
        _SS_InvocationNotificationArg_ss_Event,
        _SS_InvocationNotificationArg_ss_EventSpecification,
        _SS_InvocationNotificationArg_extensionContainer,
        _SS_InvocationNotificationArg_b_subscriberNumber,
        _SS_InvocationNotificationArg_ccbs_RequestState,
        SS_InvocationNotificationArg,
        CCBS_RequestState,
        _SS_InvocationNotificationRes_extensionContainer,
        SS_InvocationNotificationRes,
        _SS_EventSpecification__item_,
        SS_EventSpecification,
        maxEventSpecification,
        _RegisterCC_EntryArg_ss_Code,
        _RegisterCC_EntryArg_ccbs_Data,
        RegisterCC_EntryArg,
        _CCBS_Data_ccbs_Feature,
        _CCBS_Data_translatedB_Number,
        _CCBS_Data_serviceIndicator,
        _CCBS_Data_callInfo,
        _CCBS_Data_networkSignalInfo,
        CCBS_Data,
        ServiceIndicator,
        _RegisterCC_EntryRes_ccbs_Feature,
        RegisterCC_EntryRes,
        _EraseCC_EntryArg_ss_Code,
        _EraseCC_EntryArg_ccbs_Index,
        EraseCC_EntryArg,
        _EraseCC_EntryRes_ss_Code,
        _EraseCC_EntryRes_ss_Status,
        EraseCC_EntryRes,
    ]

class MAP_ShortMessageServiceOperations:

    _name_  = 'MAP-ShortMessageServiceOperations'
    _oid_   = [0, 4, 0, 0, 1, 3, 9, 19]
    
    _obj_ = [
        'sendRoutingInfoForSM',
        'mo-ForwardSM',
        'mt-ForwardSM',
        'reportSM-DeliveryStatus',
        'alertServiceCentre',
        'informServiceCentre',
        'readyForSM',
        'mt-ForwardSM-VGCS',
        ]
    _type_ = [
        ]
    _set_ = [
        ]
    _val_ = [
        'sendRoutingInfoForSM',
        'mo-ForwardSM',
        'mt-ForwardSM',
        'reportSM-DeliveryStatus',
        'alertServiceCentre',
        'informServiceCentre',
        'readyForSM',
        'mt-ForwardSM-VGCS',
        ]
    _class_ = [
        'sendRoutingInfoForSM',
        'mo-ForwardSM',
        'mt-ForwardSM',
        'reportSM-DeliveryStatus',
        'alertServiceCentre',
        'informServiceCentre',
        'readyForSM',
        'mt-ForwardSM-VGCS',
        ]
    _param_ = [
        ]
    
    #-----< sendRoutingInfoForSM >-----#
    sendRoutingInfoForSM = CLASS(name='sendRoutingInfoForSM', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _sendRoutingInfoForSM_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'RoutingInfoForSM-Arg')))
    _sendRoutingInfoForSM_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'RoutingInfoForSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_0 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TeleservNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberSM-Param')))
    sendRoutingInfoForSM._val = dict([('ArgumentType', _sendRoutingInfoForSM_val_ArgumentType), ('ResultType', _sendRoutingInfoForSM_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7), ('errorCode', ('local', 6))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))])
    
    #-----< mo-ForwardSM >-----#
    mo_ForwardSM = CLASS(name='mo-ForwardSM', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _mo_ForwardSM_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MO-ForwardSM-Arg')))
    _mo_ForwardSM_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MO-ForwardSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_1_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SM-DeliveryFailureCause')))
    mo_ForwardSM._val = dict([('ArgumentType', _mo_ForwardSM_val_ArgumentType), ('ResultType', _mo_ForwardSM_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))])
    
    #-----< mt-ForwardSM >-----#
    mt_ForwardSM = CLASS(name='mt-ForwardSM', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _mt_ForwardSM_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-Arg')))
    _mt_ForwardSM_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalEquipmentParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SubBusyForMT-SMS-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_8 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SM-DeliveryFailureCause')))
    __sendRoutingInfo_Errors_val_ParameterType_9 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberSM-Param')))
    mt_ForwardSM._val = dict([('ArgumentType', _mt_ForwardSM_val_ArgumentType), ('ResultType', _mt_ForwardSM_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_0), ('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_0), ('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8), ('errorCode', ('local', 32))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9), ('errorCode', ('local', 6))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 44))])
    
    #-----< reportSM-DeliveryStatus >-----#
    reportSM_DeliveryStatus = CLASS(name='reportSM-DeliveryStatus', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _reportSM_DeliveryStatus_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReportSM-DeliveryStatusArg')))
    _reportSM_DeliveryStatus_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReportSM-DeliveryStatusRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'MessageWaitListFullParam')))
    reportSM_DeliveryStatus._val = dict([('ArgumentType', _reportSM_DeliveryStatus_val_ArgumentType), ('ResultType', _reportSM_DeliveryStatus_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_1), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))])
    
    #-----< alertServiceCentre >-----#
    alertServiceCentre = CLASS(name='alertServiceCentre', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _alertServiceCentre_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'AlertServiceCentreArg')))
    alertServiceCentre._val = dict([('ArgumentType', _alertServiceCentre_val_ArgumentType), ('returnResult', True), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 64))])
    
    #-----< informServiceCentre >-----#
    informServiceCentre = CLASS(name='informServiceCentre', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _informServiceCentre_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'InformServiceCentreArg')))
    informServiceCentre._val = dict([('ArgumentType', _informServiceCentre_val_ArgumentType), ('operationCode', ('local', 63))])
    
    #-----< readyForSM >-----#
    readyForSM = CLASS(name='readyForSM', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _readyForSM_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReadyForSM-Arg')))
    _readyForSM_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReadyForSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_3_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    readyForSM._val = dict([('ArgumentType', _readyForSM_val_ArgumentType), ('ResultType', _readyForSM_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 66))])
    
    #-----< mt-ForwardSM-VGCS >-----#
    mt_ForwardSM_VGCS = CLASS(name='mt-ForwardSM-VGCS', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _mt_ForwardSM_VGCS_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-VGCS-Arg')))
    _mt_ForwardSM_VGCS_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-VGCS-Res')))
    mt_ForwardSM_VGCS._val = dict([('ArgumentType', _mt_ForwardSM_VGCS_val_ArgumentType), ('ResultType', _mt_ForwardSM_VGCS_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 21))])
    
    _all_ = [
        sendRoutingInfoForSM,
        _sendRoutingInfoForSM_val_ArgumentType,
        _sendRoutingInfoForSM_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0,
        __sendRoutingInfo_Errors_val_ParameterType_1,
        __sendRoutingInfo_Errors_val_ParameterType_2,
        __sendRoutingInfo_Errors_val_ParameterType_3,
        __sendRoutingInfo_Errors_val_ParameterType_4,
        __sendRoutingInfo_Errors_val_ParameterType_5,
        __sendRoutingInfo_Errors_val_ParameterType_6,
        __sendRoutingInfo_Errors_val_ParameterType_7,
        mo_ForwardSM,
        _mo_ForwardSM_val_ArgumentType,
        _mo_ForwardSM_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_1_0,
        __sendRoutingInfo_Errors_val_ParameterType_2_0,
        __sendRoutingInfo_Errors_val_ParameterType_3_0,
        mt_ForwardSM,
        _mt_ForwardSM_val_ArgumentType,
        _mt_ForwardSM_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_4_0,
        __sendRoutingInfo_Errors_val_ParameterType_5_0,
        __sendRoutingInfo_Errors_val_ParameterType_6_0,
        __sendRoutingInfo_Errors_val_ParameterType_7_0,
        __sendRoutingInfo_Errors_val_ParameterType_8,
        __sendRoutingInfo_Errors_val_ParameterType_9,
        reportSM_DeliveryStatus,
        _reportSM_DeliveryStatus_val_ArgumentType,
        _reportSM_DeliveryStatus_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0_0,
        __sendRoutingInfo_Errors_val_ParameterType_2_1,
        __sendRoutingInfo_Errors_val_ParameterType_3_1,
        alertServiceCentre,
        _alertServiceCentre_val_ArgumentType,
        informServiceCentre,
        _informServiceCentre_val_ArgumentType,
        readyForSM,
        _readyForSM_val_ArgumentType,
        _readyForSM_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_3_2,
        mt_ForwardSM_VGCS,
        _mt_ForwardSM_VGCS_val_ArgumentType,
        _mt_ForwardSM_VGCS_val_ResultType,
    ]

class MAP_SupplementaryServiceOperations:

    _name_  = 'MAP-SupplementaryServiceOperations'
    _oid_   = [0, 4, 0, 0, 1, 3, 8, 19]
    
    _obj_ = [
        'registerSS',
        'eraseSS',
        'activateSS',
        'deactivateSS',
        'interrogateSS',
        'processUnstructuredSS-Request',
        'unstructuredSS-Request',
        'unstructuredSS-Notify',
        'registerPassword',
        'getPassword',
        'ss-InvocationNotification',
        'registerCC-Entry',
        'eraseCC-Entry',
        ]
    _type_ = [
        ]
    _set_ = [
        ]
    _val_ = [
        'registerSS',
        'eraseSS',
        'activateSS',
        'deactivateSS',
        'interrogateSS',
        'processUnstructuredSS-Request',
        'unstructuredSS-Request',
        'unstructuredSS-Notify',
        'registerPassword',
        'getPassword',
        'ss-InvocationNotification',
        'registerCC-Entry',
        'eraseCC-Entry',
        ]
    _class_ = [
        'registerSS',
        'eraseSS',
        'activateSS',
        'deactivateSS',
        'interrogateSS',
        'processUnstructuredSS-Request',
        'unstructuredSS-Request',
        'unstructuredSS-Notify',
        'registerPassword',
        'getPassword',
        'ss-InvocationNotification',
        'registerCC-Entry',
        'eraseCC-Entry',
        ]
    _param_ = [
        ]
    
    #-----< registerSS >-----#
    registerSS = CLASS(name='registerSS', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _registerSS_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'RegisterSS-Arg')))
    _registerSS_val_ResultType = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Info')))
    __sendRoutingInfo_Errors_val_ParameterType_0 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BearerServNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TeleservNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSS-OperationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    __sendRoutingInfo_Errors_val_ParameterType_8 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    registerSS._val = dict([('ArgumentType', _registerSS_val_ArgumentType), ('ResultType', _registerSS_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8), ('errorCode', ('local', 20))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 10))])
    
    #-----< eraseSS >-----#
    eraseSS = CLASS(name='eraseSS', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _eraseSS_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-ForBS-Code')))
    _eraseSS_val_ResultType = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Info')))
    eraseSS._val = dict([('ArgumentType', _eraseSS_val_ArgumentType), ('ResultType', _eraseSS_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7), ('errorCode', ('local', 17))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 11))])
    
    #-----< activateSS >-----#
    activateSS = CLASS(name='activateSS', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _activateSS_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-ForBS-Code')))
    _activateSS_val_ResultType = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Info')))
    __sendRoutingInfo_Errors_val_ParameterType_8_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-SubscriptionViolationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    activateSS._val = dict([('ArgumentType', _activateSS_val_ArgumentType), ('ResultType', _activateSS_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_0), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9), ('errorCode', ('local', 20))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 12))])
    
    #-----< deactivateSS >-----#
    deactivateSS = CLASS(name='deactivateSS', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _deactivateSS_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-ForBS-Code')))
    _deactivateSS_val_ResultType = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Info')))
    deactivateSS._val = dict([('ArgumentType', _deactivateSS_val_ArgumentType), ('ResultType', _deactivateSS_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_0), ('errorCode', ('local', 19))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 13))])
    
    #-----< interrogateSS >-----#
    interrogateSS = CLASS(name='interrogateSS', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _interrogateSS_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-ForBS-Code')))
    _interrogateSS_val_ResultType = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'InterrogateSS-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_7_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-NotAvailableParam')))
    interrogateSS._val = dict([('ArgumentType', _interrogateSS_val_ArgumentType), ('ResultType', _interrogateSS_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_0), ('errorCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 14))])
    
    #-----< processUnstructuredSS-Request >-----#
    processUnstructuredSS_Request = CLASS(name='processUnstructuredSS-Request', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _processUnstructuredSS_Request_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Arg')))
    _processUnstructuredSS_Request_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4_0 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    processUnstructuredSS_Request._val = dict([('ArgumentType', _processUnstructuredSS_Request_val_ArgumentType), ('ResultType', _processUnstructuredSS_Request_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('errorCode', ('local', 71))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 59))])
    
    #-----< unstructuredSS-Request >-----#
    unstructuredSS_Request = CLASS(name='unstructuredSS-Request', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _unstructuredSS_Request_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Arg')))
    _unstructuredSS_Request_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_3_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalEquipmentParam')))
    unstructuredSS_Request._val = dict([('ArgumentType', _unstructuredSS_Request_val_ArgumentType), ('ResultType', _unstructuredSS_Request_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 60))])
    
    #-----< unstructuredSS-Notify >-----#
    unstructuredSS_Notify = CLASS(name='unstructuredSS-Notify', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _unstructuredSS_Notify_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Arg')))
    unstructuredSS_Notify._val = dict([('ArgumentType', _unstructuredSS_Notify_val_ArgumentType), ('returnResult', True), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 61))])
    
    #-----< registerPassword >-----#
    registerPassword = CLASS(name='registerPassword', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _registerPassword_val_ArgumentType = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _registerPassword_val_ResultType = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'Password')))
    _registerPassword_val_ResultType._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    __sendRoutingInfo_Errors_val_ParameterType_3_1 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-SubscriptionViolationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_1 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'PW-RegistrationFailureCause')))
    registerPassword._val = dict([('ArgumentType', _registerPassword_val_ArgumentType), ('ResultType', _registerPassword_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_2), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_1), ('errorCode', ('local', 37))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 17))])
    
    #-----< getPassword >-----#
    getPassword = CLASS(name='getPassword', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _getPassword_val_ArgumentType = ENUM(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'GuidanceInfo')))
    _getPassword_val_ResultType = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'Password')))
    _getPassword_val_ResultType._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    getPassword._val = dict([('ArgumentType', _getPassword_val_ArgumentType), ('ResultType', _getPassword_val_ResultType), ('operationCode', ('local', 18))])
    
    #-----< ss-InvocationNotification >-----#
    ss_InvocationNotification = CLASS(name='ss-InvocationNotification', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _ss_InvocationNotification_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-InvocationNotificationArg')))
    _ss_InvocationNotification_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-InvocationNotificationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    ss_InvocationNotification._val = dict([('ArgumentType', _ss_InvocationNotification_val_ArgumentType), ('ResultType', _ss_InvocationNotification_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 72))])
    
    #-----< registerCC-Entry >-----#
    registerCC_Entry = CLASS(name='registerCC-Entry', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _registerCC_Entry_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'RegisterCC-EntryArg')))
    _registerCC_Entry_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'RegisterCC-EntryRes')))
    __sendRoutingInfo_Errors_val_ParameterType_4_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSS-OperationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_2 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    __sendRoutingInfo_Errors_val_ParameterType_6_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    __sendRoutingInfo_Errors_val_ParameterType_7_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ShortTermDenialParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'LongTermDenialParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    registerCC_Entry._val = dict([('ArgumentType', _registerCC_Entry_val_ArgumentType), ('ResultType', _registerCC_Entry_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_2), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_0), ('errorCode', ('local', 20))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_1), ('errorCode', ('local', 29))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 30))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_0), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 76))])
    
    #-----< eraseCC-Entry >-----#
    eraseCC_Entry = CLASS(name='eraseCC-Entry', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _eraseCC_Entry_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'EraseCC-EntryArg')))
    _eraseCC_Entry_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'EraseCC-EntryRes')))
    eraseCC_Entry._val = dict([('ArgumentType', _eraseCC_Entry_val_ArgumentType), ('ResultType', _eraseCC_Entry_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_2), ('errorCode', ('local', 17))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 77))])
    
    _all_ = [
        registerSS,
        _registerSS_val_ArgumentType,
        _registerSS_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0,
        __sendRoutingInfo_Errors_val_ParameterType_1,
        __sendRoutingInfo_Errors_val_ParameterType_2,
        __sendRoutingInfo_Errors_val_ParameterType_3,
        __sendRoutingInfo_Errors_val_ParameterType_4,
        __sendRoutingInfo_Errors_val_ParameterType_5,
        __sendRoutingInfo_Errors_val_ParameterType_6,
        __sendRoutingInfo_Errors_val_ParameterType_7,
        __sendRoutingInfo_Errors_val_ParameterType_8,
        eraseSS,
        _eraseSS_val_ArgumentType,
        _eraseSS_val_ResultType,
        activateSS,
        _activateSS_val_ArgumentType,
        _activateSS_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_8_0,
        __sendRoutingInfo_Errors_val_ParameterType_9,
        deactivateSS,
        _deactivateSS_val_ArgumentType,
        _deactivateSS_val_ResultType,
        interrogateSS,
        _interrogateSS_val_ArgumentType,
        _interrogateSS_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_7_0,
        processUnstructuredSS_Request,
        _processUnstructuredSS_Request_val_ArgumentType,
        _processUnstructuredSS_Request_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_4_0,
        unstructuredSS_Request,
        _unstructuredSS_Request_val_ArgumentType,
        _unstructuredSS_Request_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_3_0,
        __sendRoutingInfo_Errors_val_ParameterType_4_1,
        __sendRoutingInfo_Errors_val_ParameterType_5_0,
        unstructuredSS_Notify,
        _unstructuredSS_Notify_val_ArgumentType,
        registerPassword,
        _registerPassword_val_ArgumentType,
        _registerPassword_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_3_1,
        __sendRoutingInfo_Errors_val_ParameterType_4_2,
        __sendRoutingInfo_Errors_val_ParameterType_5_1,
        getPassword,
        _getPassword_val_ArgumentType,
        _getPassword_val_ResultType,
        ss_InvocationNotification,
        _ss_InvocationNotification_val_ArgumentType,
        _ss_InvocationNotification_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0_0,
        __sendRoutingInfo_Errors_val_ParameterType_1_0,
        __sendRoutingInfo_Errors_val_ParameterType_2_0,
        registerCC_Entry,
        _registerCC_Entry_val_ArgumentType,
        _registerCC_Entry_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_4_3,
        __sendRoutingInfo_Errors_val_ParameterType_5_2,
        __sendRoutingInfo_Errors_val_ParameterType_6_0,
        __sendRoutingInfo_Errors_val_ParameterType_7_1,
        __sendRoutingInfo_Errors_val_ParameterType_8_1,
        __sendRoutingInfo_Errors_val_ParameterType_9_0,
        eraseCC_Entry,
        _eraseCC_Entry_val_ArgumentType,
        _eraseCC_Entry_val_ResultType,
    ]

class MAP_TS_Code:

    _name_  = 'MAP-TS-Code'
    _oid_   = [0, 4, 0, 0, 1, 3, 19, 19]
    
    _obj_ = [
        'TeleserviceCode',
        'Ext-TeleserviceCode',
        'allTeleservices',
        'allSpeechTransmissionServices',
        'telephony',
        'emergencyCalls',
        'allShortMessageServices',
        'shortMessageMT-PP',
        'shortMessageMO-PP',
        'allFacsimileTransmissionServices',
        'facsimileGroup3AndAlterSpeech',
        'automaticFacsimileGroup3',
        'facsimileGroup4',
        'allDataTeleservices',
        'allTeleservices-ExeptSMS',
        'allVoiceGroupCallServices',
        'voiceGroupCall',
        'voiceBroadcastCall',
        'allPLMN-specificTS',
        'plmn-specificTS-1',
        'plmn-specificTS-2',
        'plmn-specificTS-3',
        'plmn-specificTS-4',
        'plmn-specificTS-5',
        'plmn-specificTS-6',
        'plmn-specificTS-7',
        'plmn-specificTS-8',
        'plmn-specificTS-9',
        'plmn-specificTS-A',
        'plmn-specificTS-B',
        'plmn-specificTS-C',
        'plmn-specificTS-D',
        'plmn-specificTS-E',
        'plmn-specificTS-F',
        ]
    _type_ = [
        'TeleserviceCode',
        'Ext-TeleserviceCode',
        ]
    _set_ = [
        ]
    _val_ = [
        'allTeleservices',
        'allSpeechTransmissionServices',
        'telephony',
        'emergencyCalls',
        'allShortMessageServices',
        'shortMessageMT-PP',
        'shortMessageMO-PP',
        'allFacsimileTransmissionServices',
        'facsimileGroup3AndAlterSpeech',
        'automaticFacsimileGroup3',
        'facsimileGroup4',
        'allDataTeleservices',
        'allTeleservices-ExeptSMS',
        'allVoiceGroupCallServices',
        'voiceGroupCall',
        'voiceBroadcastCall',
        'allPLMN-specificTS',
        'plmn-specificTS-1',
        'plmn-specificTS-2',
        'plmn-specificTS-3',
        'plmn-specificTS-4',
        'plmn-specificTS-5',
        'plmn-specificTS-6',
        'plmn-specificTS-7',
        'plmn-specificTS-8',
        'plmn-specificTS-9',
        'plmn-specificTS-A',
        'plmn-specificTS-B',
        'plmn-specificTS-C',
        'plmn-specificTS-D',
        'plmn-specificTS-E',
        'plmn-specificTS-F',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< TeleserviceCode >-----#
    TeleserviceCode = OCT_STR(name='TeleserviceCode', mode=MODE_TYPE)
    TeleserviceCode._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< Ext-TeleserviceCode >-----#
    Ext_TeleserviceCode = OCT_STR(name='Ext-TeleserviceCode', mode=MODE_TYPE)
    Ext_TeleserviceCode._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< allTeleservices >-----#
    allTeleservices = OCT_STR(name='allTeleservices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    allTeleservices._val = b'\x00'
    
    #-----< allSpeechTransmissionServices >-----#
    allSpeechTransmissionServices = OCT_STR(name='allSpeechTransmissionServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    allSpeechTransmissionServices._val = b'\x10'
    
    #-----< telephony >-----#
    telephony = OCT_STR(name='telephony', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    telephony._val = b'\x11'
    
    #-----< emergencyCalls >-----#
    emergencyCalls = OCT_STR(name='emergencyCalls', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    emergencyCalls._val = b'\x12'
    
    #-----< allShortMessageServices >-----#
    allShortMessageServices = OCT_STR(name='allShortMessageServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    allShortMessageServices._val = b' '
    
    #-----< shortMessageMT-PP >-----#
    shortMessageMT_PP = OCT_STR(name='shortMessageMT-PP', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    shortMessageMT_PP._val = b'!'
    
    #-----< shortMessageMO-PP >-----#
    shortMessageMO_PP = OCT_STR(name='shortMessageMO-PP', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    shortMessageMO_PP._val = b'"'
    
    #-----< allFacsimileTransmissionServices >-----#
    allFacsimileTransmissionServices = OCT_STR(name='allFacsimileTransmissionServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    allFacsimileTransmissionServices._val = b'`'
    
    #-----< facsimileGroup3AndAlterSpeech >-----#
    facsimileGroup3AndAlterSpeech = OCT_STR(name='facsimileGroup3AndAlterSpeech', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    facsimileGroup3AndAlterSpeech._val = b'a'
    
    #-----< automaticFacsimileGroup3 >-----#
    automaticFacsimileGroup3 = OCT_STR(name='automaticFacsimileGroup3', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    automaticFacsimileGroup3._val = b'b'
    
    #-----< facsimileGroup4 >-----#
    facsimileGroup4 = OCT_STR(name='facsimileGroup4', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    facsimileGroup4._val = b'c'
    
    #-----< allDataTeleservices >-----#
    allDataTeleservices = OCT_STR(name='allDataTeleservices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    allDataTeleservices._val = b'p'
    
    #-----< allTeleservices-ExeptSMS >-----#
    allTeleservices_ExeptSMS = OCT_STR(name='allTeleservices-ExeptSMS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    allTeleservices_ExeptSMS._val = b'\x80'
    
    #-----< allVoiceGroupCallServices >-----#
    allVoiceGroupCallServices = OCT_STR(name='allVoiceGroupCallServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    allVoiceGroupCallServices._val = b'\x90'
    
    #-----< voiceGroupCall >-----#
    voiceGroupCall = OCT_STR(name='voiceGroupCall', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    voiceGroupCall._val = b'\x91'
    
    #-----< voiceBroadcastCall >-----#
    voiceBroadcastCall = OCT_STR(name='voiceBroadcastCall', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    voiceBroadcastCall._val = b'\x92'
    
    #-----< allPLMN-specificTS >-----#
    allPLMN_specificTS = OCT_STR(name='allPLMN-specificTS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    allPLMN_specificTS._val = b'\xd0'
    
    #-----< plmn-specificTS-1 >-----#
    plmn_specificTS_1 = OCT_STR(name='plmn-specificTS-1', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_1._val = b'\xd1'
    
    #-----< plmn-specificTS-2 >-----#
    plmn_specificTS_2 = OCT_STR(name='plmn-specificTS-2', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_2._val = b'\xd2'
    
    #-----< plmn-specificTS-3 >-----#
    plmn_specificTS_3 = OCT_STR(name='plmn-specificTS-3', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_3._val = b'\xd3'
    
    #-----< plmn-specificTS-4 >-----#
    plmn_specificTS_4 = OCT_STR(name='plmn-specificTS-4', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_4._val = b'\xd4'
    
    #-----< plmn-specificTS-5 >-----#
    plmn_specificTS_5 = OCT_STR(name='plmn-specificTS-5', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_5._val = b'\xd5'
    
    #-----< plmn-specificTS-6 >-----#
    plmn_specificTS_6 = OCT_STR(name='plmn-specificTS-6', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_6._val = b'\xd6'
    
    #-----< plmn-specificTS-7 >-----#
    plmn_specificTS_7 = OCT_STR(name='plmn-specificTS-7', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_7._val = b'\xd7'
    
    #-----< plmn-specificTS-8 >-----#
    plmn_specificTS_8 = OCT_STR(name='plmn-specificTS-8', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_8._val = b'\xd8'
    
    #-----< plmn-specificTS-9 >-----#
    plmn_specificTS_9 = OCT_STR(name='plmn-specificTS-9', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_9._val = b'\xd9'
    
    #-----< plmn-specificTS-A >-----#
    plmn_specificTS_A = OCT_STR(name='plmn-specificTS-A', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_A._val = b'\xda'
    
    #-----< plmn-specificTS-B >-----#
    plmn_specificTS_B = OCT_STR(name='plmn-specificTS-B', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_B._val = b'\xdb'
    
    #-----< plmn-specificTS-C >-----#
    plmn_specificTS_C = OCT_STR(name='plmn-specificTS-C', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_C._val = b'\xdc'
    
    #-----< plmn-specificTS-D >-----#
    plmn_specificTS_D = OCT_STR(name='plmn-specificTS-D', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_D._val = b'\xdd'
    
    #-----< plmn-specificTS-E >-----#
    plmn_specificTS_E = OCT_STR(name='plmn-specificTS-E', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_E._val = b'\xde'
    
    #-----< plmn-specificTS-F >-----#
    plmn_specificTS_F = OCT_STR(name='plmn-specificTS-F', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_F._val = b'\xdf'
    
    _all_ = [
        TeleserviceCode,
        Ext_TeleserviceCode,
        allTeleservices,
        allSpeechTransmissionServices,
        telephony,
        emergencyCalls,
        allShortMessageServices,
        shortMessageMT_PP,
        shortMessageMO_PP,
        allFacsimileTransmissionServices,
        facsimileGroup3AndAlterSpeech,
        automaticFacsimileGroup3,
        facsimileGroup4,
        allDataTeleservices,
        allTeleservices_ExeptSMS,
        allVoiceGroupCallServices,
        voiceGroupCall,
        voiceBroadcastCall,
        allPLMN_specificTS,
        plmn_specificTS_1,
        plmn_specificTS_2,
        plmn_specificTS_3,
        plmn_specificTS_4,
        plmn_specificTS_5,
        plmn_specificTS_6,
        plmn_specificTS_7,
        plmn_specificTS_8,
        plmn_specificTS_9,
        plmn_specificTS_A,
        plmn_specificTS_B,
        plmn_specificTS_C,
        plmn_specificTS_D,
        plmn_specificTS_E,
        plmn_specificTS_F,
    ]

class MAPv2_ApplicationContexts:

    _name_  = 'MAPv2-ApplicationContexts'
    _oid_   = [0, 4, 0, 0, 1, 3, 2, 2]
    
    _obj_ = [
        'map-ac',
        'networkLocUpContext-v2',
        'networkLocUpContext-v1',
        'locationCancellation-v2',
        'locationCancellation-v1',
        'roamingNumberEnquiryContext-v2',
        'roamingNumberEnquiryContext-v1',
        'locationInfoRetrievalContext-v2',
        'locationInfoRetrievalContext-v1',
        'resetContext-v2',
        'resetContext-v1',
        'handoverControlContext-v2',
        'handoverControlContext-v1',
        'equipmentMngtContext-v2',
        'equipmentMngtContext-v1',
        'infoRetrievalContext-v2',
        'infoRetrievalContext-v1',
        'interVlrInfoRetrievalContext-v2',
        'subscriberDataMngtContext-v2',
        'subscriberDataMngtContext-v1',
        'tracingContext-v2',
        'tracingContext-v1',
        'networkFunctionalSsContext-v2',
        'networkFunctionalSsContext-v1',
        'networkUnstructuredSsContext-v2',
        'shortMsgGatewayContext-v2',
        'shortMsgGatewayContext-v1',
        'shortMsgMO-RelayContext-v2',
        'shortMsgRelayContext-v1',
        'shortMsgAlertContext-v2',
        'shortMsgAlertContext-v1',
        'mwdMngtContext-v2',
        'mwdMngtContext-v1',
        'shortMsgMT-RelayContext-v2',
        'imsiRetrievalContext-v2',
        'msPurgingContext-v2',
        ]
    _type_ = [
        ]
    _set_ = [
        ]
    _val_ = [
        'map-ac',
        'networkLocUpContext-v2',
        'networkLocUpContext-v1',
        'locationCancellation-v2',
        'locationCancellation-v1',
        'roamingNumberEnquiryContext-v2',
        'roamingNumberEnquiryContext-v1',
        'locationInfoRetrievalContext-v2',
        'locationInfoRetrievalContext-v1',
        'resetContext-v2',
        'resetContext-v1',
        'handoverControlContext-v2',
        'handoverControlContext-v1',
        'equipmentMngtContext-v2',
        'equipmentMngtContext-v1',
        'infoRetrievalContext-v2',
        'infoRetrievalContext-v1',
        'interVlrInfoRetrievalContext-v2',
        'subscriberDataMngtContext-v2',
        'subscriberDataMngtContext-v1',
        'tracingContext-v2',
        'tracingContext-v1',
        'networkFunctionalSsContext-v2',
        'networkFunctionalSsContext-v1',
        'networkUnstructuredSsContext-v2',
        'shortMsgGatewayContext-v2',
        'shortMsgGatewayContext-v1',
        'shortMsgMO-RelayContext-v2',
        'shortMsgRelayContext-v1',
        'shortMsgAlertContext-v2',
        'shortMsgAlertContext-v1',
        'mwdMngtContext-v2',
        'mwdMngtContext-v1',
        'shortMsgMT-RelayContext-v2',
        'imsiRetrievalContext-v2',
        'msPurgingContext-v2',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< map-ac >-----#
    map_ac = OID(name='map-ac', mode=MODE_VALUE)
    map_ac._val = (0, 4, 0, 0, 1, 0)
    
    #-----< networkLocUpContext-v2 >-----#
    networkLocUpContext_v2 = OID(name='networkLocUpContext-v2', mode=MODE_VALUE)
    networkLocUpContext_v2._val = (0, 4, 0, 0, 1, 0, 1, 2)
    
    #-----< networkLocUpContext-v1 >-----#
    networkLocUpContext_v1 = OID(name='networkLocUpContext-v1', mode=MODE_VALUE)
    networkLocUpContext_v1._val = (0, 4, 0, 0, 1, 0, 1, 1)
    
    #-----< locationCancellation-v2 >-----#
    locationCancellation_v2 = OID(name='locationCancellation-v2', mode=MODE_VALUE)
    locationCancellation_v2._val = (0, 4, 0, 0, 1, 0, 2, 2)
    
    #-----< locationCancellation-v1 >-----#
    locationCancellation_v1 = OID(name='locationCancellation-v1', mode=MODE_VALUE)
    locationCancellation_v1._val = (0, 4, 0, 0, 1, 0, 2, 1)
    
    #-----< roamingNumberEnquiryContext-v2 >-----#
    roamingNumberEnquiryContext_v2 = OID(name='roamingNumberEnquiryContext-v2', mode=MODE_VALUE)
    roamingNumberEnquiryContext_v2._val = (0, 4, 0, 0, 1, 0, 3, 2)
    
    #-----< roamingNumberEnquiryContext-v1 >-----#
    roamingNumberEnquiryContext_v1 = OID(name='roamingNumberEnquiryContext-v1', mode=MODE_VALUE)
    roamingNumberEnquiryContext_v1._val = (0, 4, 0, 0, 1, 0, 3, 1)
    
    #-----< locationInfoRetrievalContext-v2 >-----#
    locationInfoRetrievalContext_v2 = OID(name='locationInfoRetrievalContext-v2', mode=MODE_VALUE)
    locationInfoRetrievalContext_v2._val = (0, 4, 0, 0, 1, 0, 5, 2)
    
    #-----< locationInfoRetrievalContext-v1 >-----#
    locationInfoRetrievalContext_v1 = OID(name='locationInfoRetrievalContext-v1', mode=MODE_VALUE)
    locationInfoRetrievalContext_v1._val = (0, 4, 0, 0, 1, 0, 5, 1)
    
    #-----< resetContext-v2 >-----#
    resetContext_v2 = OID(name='resetContext-v2', mode=MODE_VALUE)
    resetContext_v2._val = (0, 4, 0, 0, 1, 0, 10, 2)
    
    #-----< resetContext-v1 >-----#
    resetContext_v1 = OID(name='resetContext-v1', mode=MODE_VALUE)
    resetContext_v1._val = (0, 4, 0, 0, 1, 0, 10, 1)
    
    #-----< handoverControlContext-v2 >-----#
    handoverControlContext_v2 = OID(name='handoverControlContext-v2', mode=MODE_VALUE)
    handoverControlContext_v2._val = (0, 4, 0, 0, 1, 0, 11, 2)
    
    #-----< handoverControlContext-v1 >-----#
    handoverControlContext_v1 = OID(name='handoverControlContext-v1', mode=MODE_VALUE)
    handoverControlContext_v1._val = (0, 4, 0, 0, 1, 0, 11, 1)
    
    #-----< equipmentMngtContext-v2 >-----#
    equipmentMngtContext_v2 = OID(name='equipmentMngtContext-v2', mode=MODE_VALUE)
    equipmentMngtContext_v2._val = (0, 4, 0, 0, 1, 0, 13, 2)
    
    #-----< equipmentMngtContext-v1 >-----#
    equipmentMngtContext_v1 = OID(name='equipmentMngtContext-v1', mode=MODE_VALUE)
    equipmentMngtContext_v1._val = (0, 4, 0, 0, 1, 0, 13, 1)
    
    #-----< infoRetrievalContext-v2 >-----#
    infoRetrievalContext_v2 = OID(name='infoRetrievalContext-v2', mode=MODE_VALUE)
    infoRetrievalContext_v2._val = (0, 4, 0, 0, 1, 0, 14, 2)
    
    #-----< infoRetrievalContext-v1 >-----#
    infoRetrievalContext_v1 = OID(name='infoRetrievalContext-v1', mode=MODE_VALUE)
    infoRetrievalContext_v1._val = (0, 4, 0, 0, 1, 0, 14, 1)
    
    #-----< interVlrInfoRetrievalContext-v2 >-----#
    interVlrInfoRetrievalContext_v2 = OID(name='interVlrInfoRetrievalContext-v2', mode=MODE_VALUE)
    interVlrInfoRetrievalContext_v2._val = (0, 4, 0, 0, 1, 0, 15, 2)
    
    #-----< subscriberDataMngtContext-v2 >-----#
    subscriberDataMngtContext_v2 = OID(name='subscriberDataMngtContext-v2', mode=MODE_VALUE)
    subscriberDataMngtContext_v2._val = (0, 4, 0, 0, 1, 0, 16, 2)
    
    #-----< subscriberDataMngtContext-v1 >-----#
    subscriberDataMngtContext_v1 = OID(name='subscriberDataMngtContext-v1', mode=MODE_VALUE)
    subscriberDataMngtContext_v1._val = (0, 4, 0, 0, 1, 0, 16, 1)
    
    #-----< tracingContext-v2 >-----#
    tracingContext_v2 = OID(name='tracingContext-v2', mode=MODE_VALUE)
    tracingContext_v2._val = (0, 4, 0, 0, 1, 0, 17, 2)
    
    #-----< tracingContext-v1 >-----#
    tracingContext_v1 = OID(name='tracingContext-v1', mode=MODE_VALUE)
    tracingContext_v1._val = (0, 4, 0, 0, 1, 0, 17, 1)
    
    #-----< networkFunctionalSsContext-v2 >-----#
    networkFunctionalSsContext_v2 = OID(name='networkFunctionalSsContext-v2', mode=MODE_VALUE)
    networkFunctionalSsContext_v2._val = (0, 4, 0, 0, 1, 0, 18, 2)
    
    #-----< networkFunctionalSsContext-v1 >-----#
    networkFunctionalSsContext_v1 = OID(name='networkFunctionalSsContext-v1', mode=MODE_VALUE)
    networkFunctionalSsContext_v1._val = (0, 4, 0, 0, 1, 0, 18, 1)
    
    #-----< networkUnstructuredSsContext-v2 >-----#
    networkUnstructuredSsContext_v2 = OID(name='networkUnstructuredSsContext-v2', mode=MODE_VALUE)
    networkUnstructuredSsContext_v2._val = (0, 4, 0, 0, 1, 0, 19, 2)
    
    #-----< shortMsgGatewayContext-v2 >-----#
    shortMsgGatewayContext_v2 = OID(name='shortMsgGatewayContext-v2', mode=MODE_VALUE)
    shortMsgGatewayContext_v2._val = (0, 4, 0, 0, 1, 0, 20, 2)
    
    #-----< shortMsgGatewayContext-v1 >-----#
    shortMsgGatewayContext_v1 = OID(name='shortMsgGatewayContext-v1', mode=MODE_VALUE)
    shortMsgGatewayContext_v1._val = (0, 4, 0, 0, 1, 0, 20, 1)
    
    #-----< shortMsgMO-RelayContext-v2 >-----#
    shortMsgMO_RelayContext_v2 = OID(name='shortMsgMO-RelayContext-v2', mode=MODE_VALUE)
    shortMsgMO_RelayContext_v2._val = (0, 4, 0, 0, 1, 0, 21, 2)
    
    #-----< shortMsgRelayContext-v1 >-----#
    shortMsgRelayContext_v1 = OID(name='shortMsgRelayContext-v1', mode=MODE_VALUE)
    shortMsgRelayContext_v1._val = (0, 4, 0, 0, 1, 0, 21, 1)
    
    #-----< shortMsgAlertContext-v2 >-----#
    shortMsgAlertContext_v2 = OID(name='shortMsgAlertContext-v2', mode=MODE_VALUE)
    shortMsgAlertContext_v2._val = (0, 4, 0, 0, 1, 0, 23, 2)
    
    #-----< shortMsgAlertContext-v1 >-----#
    shortMsgAlertContext_v1 = OID(name='shortMsgAlertContext-v1', mode=MODE_VALUE)
    shortMsgAlertContext_v1._val = (0, 4, 0, 0, 1, 0, 23, 1)
    
    #-----< mwdMngtContext-v2 >-----#
    mwdMngtContext_v2 = OID(name='mwdMngtContext-v2', mode=MODE_VALUE)
    mwdMngtContext_v2._val = (0, 4, 0, 0, 1, 0, 24, 2)
    
    #-----< mwdMngtContext-v1 >-----#
    mwdMngtContext_v1 = OID(name='mwdMngtContext-v1', mode=MODE_VALUE)
    mwdMngtContext_v1._val = (0, 4, 0, 0, 1, 0, 24, 1)
    
    #-----< shortMsgMT-RelayContext-v2 >-----#
    shortMsgMT_RelayContext_v2 = OID(name='shortMsgMT-RelayContext-v2', mode=MODE_VALUE)
    shortMsgMT_RelayContext_v2._val = (0, 4, 0, 0, 1, 0, 25, 2)
    
    #-----< imsiRetrievalContext-v2 >-----#
    imsiRetrievalContext_v2 = OID(name='imsiRetrievalContext-v2', mode=MODE_VALUE)
    imsiRetrievalContext_v2._val = (0, 4, 0, 0, 1, 0, 26, 2)
    
    #-----< msPurgingContext-v2 >-----#
    msPurgingContext_v2 = OID(name='msPurgingContext-v2', mode=MODE_VALUE)
    msPurgingContext_v2._val = (0, 4, 0, 0, 1, 0, 27, 2)
    
    _all_ = [
        map_ac,
        networkLocUpContext_v2,
        networkLocUpContext_v1,
        locationCancellation_v2,
        locationCancellation_v1,
        roamingNumberEnquiryContext_v2,
        roamingNumberEnquiryContext_v1,
        locationInfoRetrievalContext_v2,
        locationInfoRetrievalContext_v1,
        resetContext_v2,
        resetContext_v1,
        handoverControlContext_v2,
        handoverControlContext_v1,
        equipmentMngtContext_v2,
        equipmentMngtContext_v1,
        infoRetrievalContext_v2,
        infoRetrievalContext_v1,
        interVlrInfoRetrievalContext_v2,
        subscriberDataMngtContext_v2,
        subscriberDataMngtContext_v1,
        tracingContext_v2,
        tracingContext_v1,
        networkFunctionalSsContext_v2,
        networkFunctionalSsContext_v1,
        networkUnstructuredSsContext_v2,
        shortMsgGatewayContext_v2,
        shortMsgGatewayContext_v1,
        shortMsgMO_RelayContext_v2,
        shortMsgRelayContext_v1,
        shortMsgAlertContext_v2,
        shortMsgAlertContext_v1,
        mwdMngtContext_v2,
        mwdMngtContext_v1,
        shortMsgMT_RelayContext_v2,
        imsiRetrievalContext_v2,
        msPurgingContext_v2,
    ]

class MAPv2_BS_Code:

    _name_  = 'MAPv2-BS-Code'
    _oid_   = [0, 4, 0, 0, 1, 3, 20, 2]
    
    _obj_ = [
        'BearerServiceCode',
        'allBearerServices',
        'allDataCDA-Services',
        'dataCDA-300bps',
        'dataCDA-1200bps',
        'dataCDA-1200-75bps',
        'dataCDA-2400bps',
        'dataCDA-4800bps',
        'dataCDA-9600bps',
        'allDataCDS-Services',
        'dataCDS-1200bps',
        'dataCDS-2400bps',
        'dataCDS-4800bps',
        'dataCDS-9600bps',
        'allPadAccessCA-Services',
        'padAccessCA-300bps',
        'padAccessCA-1200bps',
        'padAccessCA-1200-75bps',
        'padAccessCA-2400bps',
        'padAccessCA-4800bps',
        'padAccessCA-9600bps',
        'allDataPDS-Services',
        'dataPDS-2400bps',
        'dataPDS-4800bps',
        'dataPDS-9600bps',
        'allAlternateSpeech-DataCDA',
        'allAlternateSpeech-DataCDS',
        'allSpeechFollowedByDataCDA',
        'allSpeechFollowedByDataCDS',
        'allDataCircuitAsynchronous',
        'allAsynchronousServices',
        'allDataCircuitSynchronous',
        'allSynchronousServices',
        'allPLMN-specificBS',
        'plmn-specificBS-1',
        'plmn-specificBS-2',
        'plmn-specificBS-3',
        'plmn-specificBS-4',
        'plmn-specificBS-5',
        'plmn-specificBS-6',
        'plmn-specificBS-7',
        'plmn-specificBS-8',
        'plmn-specificBS-9',
        'plmn-specificBS-A',
        'plmn-specificBS-B',
        'plmn-specificBS-C',
        'plmn-specificBS-D',
        'plmn-specificBS-E',
        'plmn-specificBS-F',
        ]
    _type_ = [
        'BearerServiceCode',
        ]
    _set_ = [
        ]
    _val_ = [
        'allBearerServices',
        'allDataCDA-Services',
        'dataCDA-300bps',
        'dataCDA-1200bps',
        'dataCDA-1200-75bps',
        'dataCDA-2400bps',
        'dataCDA-4800bps',
        'dataCDA-9600bps',
        'allDataCDS-Services',
        'dataCDS-1200bps',
        'dataCDS-2400bps',
        'dataCDS-4800bps',
        'dataCDS-9600bps',
        'allPadAccessCA-Services',
        'padAccessCA-300bps',
        'padAccessCA-1200bps',
        'padAccessCA-1200-75bps',
        'padAccessCA-2400bps',
        'padAccessCA-4800bps',
        'padAccessCA-9600bps',
        'allDataPDS-Services',
        'dataPDS-2400bps',
        'dataPDS-4800bps',
        'dataPDS-9600bps',
        'allAlternateSpeech-DataCDA',
        'allAlternateSpeech-DataCDS',
        'allSpeechFollowedByDataCDA',
        'allSpeechFollowedByDataCDS',
        'allDataCircuitAsynchronous',
        'allAsynchronousServices',
        'allDataCircuitSynchronous',
        'allSynchronousServices',
        'allPLMN-specificBS',
        'plmn-specificBS-1',
        'plmn-specificBS-2',
        'plmn-specificBS-3',
        'plmn-specificBS-4',
        'plmn-specificBS-5',
        'plmn-specificBS-6',
        'plmn-specificBS-7',
        'plmn-specificBS-8',
        'plmn-specificBS-9',
        'plmn-specificBS-A',
        'plmn-specificBS-B',
        'plmn-specificBS-C',
        'plmn-specificBS-D',
        'plmn-specificBS-E',
        'plmn-specificBS-F',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< BearerServiceCode >-----#
    BearerServiceCode = OCT_STR(name='BearerServiceCode', mode=MODE_TYPE)
    BearerServiceCode._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< allBearerServices >-----#
    allBearerServices = OCT_STR(name='allBearerServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    allBearerServices._val = b'\x00'
    
    #-----< allDataCDA-Services >-----#
    allDataCDA_Services = OCT_STR(name='allDataCDA-Services', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    allDataCDA_Services._val = b'\x10'
    
    #-----< dataCDA-300bps >-----#
    dataCDA_300bps = OCT_STR(name='dataCDA-300bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    dataCDA_300bps._val = b'\x11'
    
    #-----< dataCDA-1200bps >-----#
    dataCDA_1200bps = OCT_STR(name='dataCDA-1200bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    dataCDA_1200bps._val = b'\x12'
    
    #-----< dataCDA-1200-75bps >-----#
    dataCDA_1200_75bps = OCT_STR(name='dataCDA-1200-75bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    dataCDA_1200_75bps._val = b'\x13'
    
    #-----< dataCDA-2400bps >-----#
    dataCDA_2400bps = OCT_STR(name='dataCDA-2400bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    dataCDA_2400bps._val = b'\x14'
    
    #-----< dataCDA-4800bps >-----#
    dataCDA_4800bps = OCT_STR(name='dataCDA-4800bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    dataCDA_4800bps._val = b'\x15'
    
    #-----< dataCDA-9600bps >-----#
    dataCDA_9600bps = OCT_STR(name='dataCDA-9600bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    dataCDA_9600bps._val = b'\x16'
    
    #-----< allDataCDS-Services >-----#
    allDataCDS_Services = OCT_STR(name='allDataCDS-Services', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    allDataCDS_Services._val = b'\x18'
    
    #-----< dataCDS-1200bps >-----#
    dataCDS_1200bps = OCT_STR(name='dataCDS-1200bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    dataCDS_1200bps._val = b'\x1a'
    
    #-----< dataCDS-2400bps >-----#
    dataCDS_2400bps = OCT_STR(name='dataCDS-2400bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    dataCDS_2400bps._val = b'\x1c'
    
    #-----< dataCDS-4800bps >-----#
    dataCDS_4800bps = OCT_STR(name='dataCDS-4800bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    dataCDS_4800bps._val = b'\x1d'
    
    #-----< dataCDS-9600bps >-----#
    dataCDS_9600bps = OCT_STR(name='dataCDS-9600bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    dataCDS_9600bps._val = b'\x1e'
    
    #-----< allPadAccessCA-Services >-----#
    allPadAccessCA_Services = OCT_STR(name='allPadAccessCA-Services', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    allPadAccessCA_Services._val = b' '
    
    #-----< padAccessCA-300bps >-----#
    padAccessCA_300bps = OCT_STR(name='padAccessCA-300bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    padAccessCA_300bps._val = b'!'
    
    #-----< padAccessCA-1200bps >-----#
    padAccessCA_1200bps = OCT_STR(name='padAccessCA-1200bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    padAccessCA_1200bps._val = b'"'
    
    #-----< padAccessCA-1200-75bps >-----#
    padAccessCA_1200_75bps = OCT_STR(name='padAccessCA-1200-75bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    padAccessCA_1200_75bps._val = b'#'
    
    #-----< padAccessCA-2400bps >-----#
    padAccessCA_2400bps = OCT_STR(name='padAccessCA-2400bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    padAccessCA_2400bps._val = b'$'
    
    #-----< padAccessCA-4800bps >-----#
    padAccessCA_4800bps = OCT_STR(name='padAccessCA-4800bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    padAccessCA_4800bps._val = b'%'
    
    #-----< padAccessCA-9600bps >-----#
    padAccessCA_9600bps = OCT_STR(name='padAccessCA-9600bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    padAccessCA_9600bps._val = b'&'
    
    #-----< allDataPDS-Services >-----#
    allDataPDS_Services = OCT_STR(name='allDataPDS-Services', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    allDataPDS_Services._val = b'('
    
    #-----< dataPDS-2400bps >-----#
    dataPDS_2400bps = OCT_STR(name='dataPDS-2400bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    dataPDS_2400bps._val = b','
    
    #-----< dataPDS-4800bps >-----#
    dataPDS_4800bps = OCT_STR(name='dataPDS-4800bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    dataPDS_4800bps._val = b'-'
    
    #-----< dataPDS-9600bps >-----#
    dataPDS_9600bps = OCT_STR(name='dataPDS-9600bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    dataPDS_9600bps._val = b'.'
    
    #-----< allAlternateSpeech-DataCDA >-----#
    allAlternateSpeech_DataCDA = OCT_STR(name='allAlternateSpeech-DataCDA', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    allAlternateSpeech_DataCDA._val = b'0'
    
    #-----< allAlternateSpeech-DataCDS >-----#
    allAlternateSpeech_DataCDS = OCT_STR(name='allAlternateSpeech-DataCDS', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    allAlternateSpeech_DataCDS._val = b'8'
    
    #-----< allSpeechFollowedByDataCDA >-----#
    allSpeechFollowedByDataCDA = OCT_STR(name='allSpeechFollowedByDataCDA', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    allSpeechFollowedByDataCDA._val = b'@'
    
    #-----< allSpeechFollowedByDataCDS >-----#
    allSpeechFollowedByDataCDS = OCT_STR(name='allSpeechFollowedByDataCDS', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    allSpeechFollowedByDataCDS._val = b'H'
    
    #-----< allDataCircuitAsynchronous >-----#
    allDataCircuitAsynchronous = OCT_STR(name='allDataCircuitAsynchronous', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    allDataCircuitAsynchronous._val = b'P'
    
    #-----< allAsynchronousServices >-----#
    allAsynchronousServices = OCT_STR(name='allAsynchronousServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    allAsynchronousServices._val = b'`'
    
    #-----< allDataCircuitSynchronous >-----#
    allDataCircuitSynchronous = OCT_STR(name='allDataCircuitSynchronous', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    allDataCircuitSynchronous._val = b'X'
    
    #-----< allSynchronousServices >-----#
    allSynchronousServices = OCT_STR(name='allSynchronousServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    allSynchronousServices._val = b'h'
    
    #-----< allPLMN-specificBS >-----#
    allPLMN_specificBS = OCT_STR(name='allPLMN-specificBS', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    allPLMN_specificBS._val = b'\xd0'
    
    #-----< plmn-specificBS-1 >-----#
    plmn_specificBS_1 = OCT_STR(name='plmn-specificBS-1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_1._val = b'\xd1'
    
    #-----< plmn-specificBS-2 >-----#
    plmn_specificBS_2 = OCT_STR(name='plmn-specificBS-2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_2._val = b'\xd2'
    
    #-----< plmn-specificBS-3 >-----#
    plmn_specificBS_3 = OCT_STR(name='plmn-specificBS-3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_3._val = b'\xd3'
    
    #-----< plmn-specificBS-4 >-----#
    plmn_specificBS_4 = OCT_STR(name='plmn-specificBS-4', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_4._val = b'\xd4'
    
    #-----< plmn-specificBS-5 >-----#
    plmn_specificBS_5 = OCT_STR(name='plmn-specificBS-5', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_5._val = b'\xd5'
    
    #-----< plmn-specificBS-6 >-----#
    plmn_specificBS_6 = OCT_STR(name='plmn-specificBS-6', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_6._val = b'\xd6'
    
    #-----< plmn-specificBS-7 >-----#
    plmn_specificBS_7 = OCT_STR(name='plmn-specificBS-7', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_7._val = b'\xd7'
    
    #-----< plmn-specificBS-8 >-----#
    plmn_specificBS_8 = OCT_STR(name='plmn-specificBS-8', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_8._val = b'\xd8'
    
    #-----< plmn-specificBS-9 >-----#
    plmn_specificBS_9 = OCT_STR(name='plmn-specificBS-9', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_9._val = b'\xd9'
    
    #-----< plmn-specificBS-A >-----#
    plmn_specificBS_A = OCT_STR(name='plmn-specificBS-A', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_A._val = b'\xda'
    
    #-----< plmn-specificBS-B >-----#
    plmn_specificBS_B = OCT_STR(name='plmn-specificBS-B', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_B._val = b'\xdb'
    
    #-----< plmn-specificBS-C >-----#
    plmn_specificBS_C = OCT_STR(name='plmn-specificBS-C', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_C._val = b'\xdc'
    
    #-----< plmn-specificBS-D >-----#
    plmn_specificBS_D = OCT_STR(name='plmn-specificBS-D', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_D._val = b'\xdd'
    
    #-----< plmn-specificBS-E >-----#
    plmn_specificBS_E = OCT_STR(name='plmn-specificBS-E', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_E._val = b'\xde'
    
    #-----< plmn-specificBS-F >-----#
    plmn_specificBS_F = OCT_STR(name='plmn-specificBS-F', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_F._val = b'\xdf'
    
    _all_ = [
        BearerServiceCode,
        allBearerServices,
        allDataCDA_Services,
        dataCDA_300bps,
        dataCDA_1200bps,
        dataCDA_1200_75bps,
        dataCDA_2400bps,
        dataCDA_4800bps,
        dataCDA_9600bps,
        allDataCDS_Services,
        dataCDS_1200bps,
        dataCDS_2400bps,
        dataCDS_4800bps,
        dataCDS_9600bps,
        allPadAccessCA_Services,
        padAccessCA_300bps,
        padAccessCA_1200bps,
        padAccessCA_1200_75bps,
        padAccessCA_2400bps,
        padAccessCA_4800bps,
        padAccessCA_9600bps,
        allDataPDS_Services,
        dataPDS_2400bps,
        dataPDS_4800bps,
        dataPDS_9600bps,
        allAlternateSpeech_DataCDA,
        allAlternateSpeech_DataCDS,
        allSpeechFollowedByDataCDA,
        allSpeechFollowedByDataCDS,
        allDataCircuitAsynchronous,
        allAsynchronousServices,
        allDataCircuitSynchronous,
        allSynchronousServices,
        allPLMN_specificBS,
        plmn_specificBS_1,
        plmn_specificBS_2,
        plmn_specificBS_3,
        plmn_specificBS_4,
        plmn_specificBS_5,
        plmn_specificBS_6,
        plmn_specificBS_7,
        plmn_specificBS_8,
        plmn_specificBS_9,
        plmn_specificBS_A,
        plmn_specificBS_B,
        plmn_specificBS_C,
        plmn_specificBS_D,
        plmn_specificBS_E,
        plmn_specificBS_F,
    ]

class MAPv2_CH_DataTypes:

    _name_  = 'MAPv2-CH-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 13, 2]
    
    _obj_ = [
        'CUG-CheckInfo',
        'NumberOfForwarding',
        'SendRoutingInfoArg',
        'SendRoutingInfoRes',
        'RoutingInfo',
        'ProvideRoamingNumberArg',
        ]
    _type_ = [
        'CUG-CheckInfo',
        'NumberOfForwarding',
        'SendRoutingInfoArg',
        'SendRoutingInfoRes',
        'RoutingInfo',
        'ProvideRoamingNumberArg',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< CUG-CheckInfo >-----#
    CUG_CheckInfo = SEQ(name='CUG-CheckInfo', mode=MODE_TYPE)
    _CUG_CheckInfo_cug_Interlock = OCT_STR(name='cug-Interlock', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'CUG-Interlock')))
    _CUG_CheckInfo_cug_OutgoingAccess = NULL(name='cug-OutgoingAccess', mode=MODE_TYPE, opt=True)
    CUG_CheckInfo._cont = ASN1Dict([
        ('cug-Interlock', _CUG_CheckInfo_cug_Interlock),
        ('cug-OutgoingAccess', _CUG_CheckInfo_cug_OutgoingAccess),
        ])
    CUG_CheckInfo._ext = []
    
    #-----< NumberOfForwarding >-----#
    NumberOfForwarding = INT(name='NumberOfForwarding', mode=MODE_TYPE)
    NumberOfForwarding._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< SendRoutingInfoArg >-----#
    SendRoutingInfoArg = SEQ(name='SendRoutingInfoArg', mode=MODE_TYPE)
    _SendRoutingInfoArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _SendRoutingInfoArg_cug_CheckInfo = SEQ(name='cug-CheckInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CH-DataTypes', 'CUG-CheckInfo')), opt=True)
    _SendRoutingInfoArg_numberOfForwarding = INT(name='numberOfForwarding', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CH-DataTypes', 'NumberOfForwarding')), opt=True)
    _SendRoutingInfoArg_networkSignalInfo = SEQ(name='networkSignalInfo', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')), opt=True)
    SendRoutingInfoArg._cont = ASN1Dict([
        ('msisdn', _SendRoutingInfoArg_msisdn),
        ('cug-CheckInfo', _SendRoutingInfoArg_cug_CheckInfo),
        ('numberOfForwarding', _SendRoutingInfoArg_numberOfForwarding),
        ('networkSignalInfo', _SendRoutingInfoArg_networkSignalInfo),
        ])
    SendRoutingInfoArg._ext = []
    
    #-----< SendRoutingInfoRes >-----#
    SendRoutingInfoRes = SEQ(name='SendRoutingInfoRes', mode=MODE_TYPE)
    _SendRoutingInfoRes_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    _SendRoutingInfoRes_routingInfo = CHOICE(name='routingInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CH-DataTypes', 'RoutingInfo')))
    _SendRoutingInfoRes_cug_CheckInfo = SEQ(name='cug-CheckInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CH-DataTypes', 'CUG-CheckInfo')), opt=True)
    SendRoutingInfoRes._cont = ASN1Dict([
        ('imsi', _SendRoutingInfoRes_imsi),
        ('routingInfo', _SendRoutingInfoRes_routingInfo),
        ('cug-CheckInfo', _SendRoutingInfoRes_cug_CheckInfo),
        ])
    SendRoutingInfoRes._ext = []
    
    #-----< RoutingInfo >-----#
    RoutingInfo = CHOICE(name='RoutingInfo', mode=MODE_TYPE)
    _RoutingInfo_roamingNumber = OCT_STR(name='roamingNumber', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _RoutingInfo_forwardingData = SEQ(name='forwardingData', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'ForwardingData')))
    RoutingInfo._cont = ASN1Dict([
        ('roamingNumber', _RoutingInfo_roamingNumber),
        ('forwardingData', _RoutingInfo_forwardingData),
        ])
    RoutingInfo._ext = None
    
    #-----< ProvideRoamingNumberArg >-----#
    ProvideRoamingNumberArg = SEQ(name='ProvideRoamingNumberArg', mode=MODE_TYPE)
    _ProvideRoamingNumberArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    _ProvideRoamingNumberArg_msc_Number = OCT_STR(name='msc-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _ProvideRoamingNumberArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _ProvideRoamingNumberArg_previousRoamingNumber = OCT_STR(name='previousRoamingNumber', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _ProvideRoamingNumberArg_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'LMSI')), opt=True)
    _ProvideRoamingNumberArg_gsm_BearerCapability = SEQ(name='gsm-BearerCapability', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')), opt=True)
    _ProvideRoamingNumberArg_networkSignalInfo = SEQ(name='networkSignalInfo', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')), opt=True)
    ProvideRoamingNumberArg._cont = ASN1Dict([
        ('imsi', _ProvideRoamingNumberArg_imsi),
        ('msc-Number', _ProvideRoamingNumberArg_msc_Number),
        ('msisdn', _ProvideRoamingNumberArg_msisdn),
        ('previousRoamingNumber', _ProvideRoamingNumberArg_previousRoamingNumber),
        ('lmsi', _ProvideRoamingNumberArg_lmsi),
        ('gsm-BearerCapability', _ProvideRoamingNumberArg_gsm_BearerCapability),
        ('networkSignalInfo', _ProvideRoamingNumberArg_networkSignalInfo),
        ])
    ProvideRoamingNumberArg._ext = []
    
    _all_ = [
        _CUG_CheckInfo_cug_Interlock,
        _CUG_CheckInfo_cug_OutgoingAccess,
        CUG_CheckInfo,
        NumberOfForwarding,
        _SendRoutingInfoArg_msisdn,
        _SendRoutingInfoArg_cug_CheckInfo,
        _SendRoutingInfoArg_numberOfForwarding,
        _SendRoutingInfoArg_networkSignalInfo,
        SendRoutingInfoArg,
        _SendRoutingInfoRes_imsi,
        _SendRoutingInfoRes_routingInfo,
        _SendRoutingInfoRes_cug_CheckInfo,
        SendRoutingInfoRes,
        _RoutingInfo_roamingNumber,
        _RoutingInfo_forwardingData,
        RoutingInfo,
        _ProvideRoamingNumberArg_imsi,
        _ProvideRoamingNumberArg_msc_Number,
        _ProvideRoamingNumberArg_msisdn,
        _ProvideRoamingNumberArg_previousRoamingNumber,
        _ProvideRoamingNumberArg_lmsi,
        _ProvideRoamingNumberArg_gsm_BearerCapability,
        _ProvideRoamingNumberArg_networkSignalInfo,
        ProvideRoamingNumberArg,
    ]

class MAPv2_CallHandlingOperations:

    _name_  = 'MAPv2-CallHandlingOperations'
    _oid_   = []
    
    _obj_ = [
        'sendRoutingInfo',
        'provideRoamingNumber',
        ]
    _type_ = [
        ]
    _set_ = [
        ]
    _val_ = [
        'sendRoutingInfo',
        'provideRoamingNumber',
        ]
    _class_ = [
        'sendRoutingInfo',
        'provideRoamingNumber',
        ]
    _param_ = [
        ]
    
    #-----< sendRoutingInfo >-----#
    sendRoutingInfo = CLASS(name='sendRoutingInfo', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _sendRoutingInfo_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CH-DataTypes', 'SendRoutingInfoArg')))
    _sendRoutingInfo_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CH-DataTypes', 'SendRoutingInfoRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'NetworkResource')))
    __sendRoutingInfo_Errors_val_ParameterType_8 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    __sendRoutingInfo_Errors_val_ParameterType_9 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    __sendRoutingInfo_Errors_val_ParameterType_10 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CUG-RejectCause')))
    sendRoutingInfo._val = dict([('ArgumentType', _sendRoutingInfo_val_ArgumentType), ('ResultType', _sendRoutingInfo_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 44))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10), ('errorCode', ('local', 15))]), dict([('errorCode', ('local', 14))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 22))])
    
    #-----< provideRoamingNumber >-----#
    provideRoamingNumber = CLASS(name='provideRoamingNumber', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _provideRoamingNumber_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CH-DataTypes', 'ProvideRoamingNumberArg')))
    _provideRoamingNumber_val_ResultType = OCT_STR(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    __sendRoutingInfo_Errors_val_ParameterType_4 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    provideRoamingNumber._val = dict([('ArgumentType', _provideRoamingNumber_val_ArgumentType), ('ResultType', _provideRoamingNumber_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 39))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 4))])
    
    _all_ = [
        sendRoutingInfo,
        _sendRoutingInfo_val_ArgumentType,
        _sendRoutingInfo_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0,
        __sendRoutingInfo_Errors_val_ParameterType_8,
        __sendRoutingInfo_Errors_val_ParameterType_9,
        __sendRoutingInfo_Errors_val_ParameterType_10,
        provideRoamingNumber,
        _provideRoamingNumber_val_ArgumentType,
        _provideRoamingNumber_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_4,
    ]

class MAPv2_CommonDataTypes:

    _name_  = 'MAPv2-CommonDataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 18, 2]
    
    _obj_ = [
        'TBCD-STRING',
        'AddressString',
        'maxAddressLength',
        'ISDN-AddressString',
        'maxISDN-AddressLength',
        'ISDN-SubaddressString',
        'maxISDN-SubaddressLength',
        'ExternalSignalInfo',
        'SignalInfo',
        'maxSignalInfoLength',
        'ProtocolId',
        'IMSI',
        'TMSI',
        'SubscriberId',
        'IMEI',
        'LocationInfo',
        'HLR-Id',
        'HLR-List',
        'maxNumOfHLR-Id',
        'LMSI',
        'GlobalCellId',
        'NetworkResource',
        'Category',
        'BearerServiceList',
        'maxNumOfBearerServices',
        'TeleserviceList',
        'maxNumOfTeleservices',
        'BasicServiceCode',
        'BasicServiceList',
        'maxNumOfBasicServices',
        'BasicServiceGroupList',
        'maxNumOfBasicServiceGroups',
        ]
    _type_ = [
        'TBCD-STRING',
        'AddressString',
        'ISDN-AddressString',
        'ISDN-SubaddressString',
        'ExternalSignalInfo',
        'SignalInfo',
        'ProtocolId',
        'IMSI',
        'TMSI',
        'SubscriberId',
        'IMEI',
        'LocationInfo',
        'HLR-Id',
        'HLR-List',
        'LMSI',
        'GlobalCellId',
        'NetworkResource',
        'Category',
        'BearerServiceList',
        'TeleserviceList',
        'BasicServiceCode',
        'BasicServiceList',
        'BasicServiceGroupList',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxAddressLength',
        'maxISDN-AddressLength',
        'maxISDN-SubaddressLength',
        'maxSignalInfoLength',
        'maxNumOfHLR-Id',
        'maxNumOfBearerServices',
        'maxNumOfTeleservices',
        'maxNumOfBasicServices',
        'maxNumOfBasicServiceGroups',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< TBCD-STRING >-----#
    TBCD_STRING = OCT_STR(name='TBCD-STRING', mode=MODE_TYPE)
    
    #-----< AddressString >-----#
    AddressString = OCT_STR(name='AddressString', mode=MODE_TYPE)
    AddressString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< maxAddressLength >-----#
    maxAddressLength = INT(name='maxAddressLength', mode=MODE_VALUE)
    maxAddressLength._val = 20
    
    #-----< ISDN-AddressString >-----#
    ISDN_AddressString = OCT_STR(name='ISDN-AddressString', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'AddressString')))
    ISDN_AddressString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    
    #-----< maxISDN-AddressLength >-----#
    maxISDN_AddressLength = INT(name='maxISDN-AddressLength', mode=MODE_VALUE)
    maxISDN_AddressLength._val = 9
    
    #-----< ISDN-SubaddressString >-----#
    ISDN_SubaddressString = OCT_STR(name='ISDN-SubaddressString', mode=MODE_TYPE)
    ISDN_SubaddressString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=21)], ev=None, er=[])
    
    #-----< maxISDN-SubaddressLength >-----#
    maxISDN_SubaddressLength = INT(name='maxISDN-SubaddressLength', mode=MODE_VALUE)
    maxISDN_SubaddressLength._val = 21
    
    #-----< ExternalSignalInfo >-----#
    ExternalSignalInfo = SEQ(name='ExternalSignalInfo', mode=MODE_TYPE)
    _ExternalSignalInfo_protocolId = ENUM(name='protocolId', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ProtocolId')))
    _ExternalSignalInfo_signalInfo = OCT_STR(name='signalInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'SignalInfo')))
    ExternalSignalInfo._cont = ASN1Dict([
        ('protocolId', _ExternalSignalInfo_protocolId),
        ('signalInfo', _ExternalSignalInfo_signalInfo),
        ])
    ExternalSignalInfo._ext = []
    
    #-----< SignalInfo >-----#
    SignalInfo = OCT_STR(name='SignalInfo', mode=MODE_TYPE)
    SignalInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=200)], ev=None, er=[])
    
    #-----< maxSignalInfoLength >-----#
    maxSignalInfoLength = INT(name='maxSignalInfoLength', mode=MODE_VALUE)
    maxSignalInfoLength._val = 200
    
    #-----< ProtocolId >-----#
    ProtocolId = ENUM(name='ProtocolId', mode=MODE_TYPE)
    ProtocolId._cont = ASN1Dict([('gsm-0408', 1), ('gsm-0806', 2), ('gsm-BSSMAP', 3), ('ets-300102-1', 4)])
    ProtocolId._ext = None
    
    #-----< IMSI >-----#
    IMSI = OCT_STR(name='IMSI', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'TBCD-STRING')))
    IMSI._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    
    #-----< TMSI >-----#
    TMSI = OCT_STR(name='TMSI', mode=MODE_TYPE)
    TMSI._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    
    #-----< SubscriberId >-----#
    SubscriberId = CHOICE(name='SubscriberId', mode=MODE_TYPE)
    _SubscriberId_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    _SubscriberId_tmsi = OCT_STR(name='tmsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'TMSI')))
    SubscriberId._cont = ASN1Dict([
        ('imsi', _SubscriberId_imsi),
        ('tmsi', _SubscriberId_tmsi),
        ])
    SubscriberId._ext = None
    
    #-----< IMEI >-----#
    IMEI = OCT_STR(name='IMEI', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'TBCD-STRING')))
    IMEI._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< LocationInfo >-----#
    LocationInfo = CHOICE(name='LocationInfo', mode=MODE_TYPE)
    _LocationInfo_roamingNumber = OCT_STR(name='roamingNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _LocationInfo_msc_Number = OCT_STR(name='msc-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    LocationInfo._cont = ASN1Dict([
        ('roamingNumber', _LocationInfo_roamingNumber),
        ('msc-Number', _LocationInfo_msc_Number),
        ])
    LocationInfo._ext = None
    
    #-----< HLR-Id >-----#
    HLR_Id = OCT_STR(name='HLR-Id', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    
    #-----< HLR-List >-----#
    HLR_List = SEQ_OF(name='HLR-List', mode=MODE_TYPE)
    _HLR_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'HLR-Id')))
    HLR_List._cont = _HLR_List__item_
    HLR_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< maxNumOfHLR-Id >-----#
    maxNumOfHLR_Id = INT(name='maxNumOfHLR-Id', mode=MODE_VALUE)
    maxNumOfHLR_Id._val = 50
    
    #-----< LMSI >-----#
    LMSI = OCT_STR(name='LMSI', mode=MODE_TYPE)
    LMSI._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< GlobalCellId >-----#
    GlobalCellId = OCT_STR(name='GlobalCellId', mode=MODE_TYPE)
    GlobalCellId._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=7)], ev=None, er=[])
    
    #-----< NetworkResource >-----#
    NetworkResource = ENUM(name='NetworkResource', mode=MODE_TYPE)
    NetworkResource._cont = ASN1Dict([('plmn', 0), ('hlr', 1), ('vlr', 2), ('pvlr', 3), ('controllingMSC', 4), ('vmsc', 5), ('eir', 6), ('rss', 7)])
    NetworkResource._ext = None
    
    #-----< Category >-----#
    Category = OCT_STR(name='Category', mode=MODE_TYPE)
    Category._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< BearerServiceList >-----#
    BearerServiceList = SEQ_OF(name='BearerServiceList', mode=MODE_TYPE)
    _BearerServiceList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    BearerServiceList._cont = _BearerServiceList__item_
    BearerServiceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< maxNumOfBearerServices >-----#
    maxNumOfBearerServices = INT(name='maxNumOfBearerServices', mode=MODE_VALUE)
    maxNumOfBearerServices._val = 50
    
    #-----< TeleserviceList >-----#
    TeleserviceList = SEQ_OF(name='TeleserviceList', mode=MODE_TYPE)
    _TeleserviceList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    TeleserviceList._cont = _TeleserviceList__item_
    TeleserviceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< maxNumOfTeleservices >-----#
    maxNumOfTeleservices = INT(name='maxNumOfTeleservices', mode=MODE_VALUE)
    maxNumOfTeleservices._val = 20
    
    #-----< BasicServiceCode >-----#
    BasicServiceCode = CHOICE(name='BasicServiceCode', mode=MODE_TYPE)
    _BasicServiceCode_bearerService = OCT_STR(name='bearerService', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-BS-Code', 'BearerServiceCode')))
    _BasicServiceCode_teleservice = OCT_STR(name='teleservice', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    BasicServiceCode._cont = ASN1Dict([
        ('bearerService', _BasicServiceCode_bearerService),
        ('teleservice', _BasicServiceCode_teleservice),
        ])
    BasicServiceCode._ext = None
    
    #-----< BasicServiceList >-----#
    BasicServiceList = SEQ_OF(name='BasicServiceList', mode=MODE_TYPE)
    _BasicServiceList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'BasicServiceCode')))
    BasicServiceList._cont = _BasicServiceList__item_
    BasicServiceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=70)], ev=None, er=[])
    
    #-----< maxNumOfBasicServices >-----#
    maxNumOfBasicServices = INT(name='maxNumOfBasicServices', mode=MODE_VALUE)
    maxNumOfBasicServices._val = 70
    
    #-----< BasicServiceGroupList >-----#
    BasicServiceGroupList = SEQ_OF(name='BasicServiceGroupList', mode=MODE_TYPE)
    _BasicServiceGroupList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'BasicServiceCode')))
    BasicServiceGroupList._cont = _BasicServiceGroupList__item_
    BasicServiceGroupList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=13)], ev=None, er=[])
    
    #-----< maxNumOfBasicServiceGroups >-----#
    maxNumOfBasicServiceGroups = INT(name='maxNumOfBasicServiceGroups', mode=MODE_VALUE)
    maxNumOfBasicServiceGroups._val = 13
    
    _all_ = [
        TBCD_STRING,
        AddressString,
        maxAddressLength,
        ISDN_AddressString,
        maxISDN_AddressLength,
        ISDN_SubaddressString,
        maxISDN_SubaddressLength,
        _ExternalSignalInfo_protocolId,
        _ExternalSignalInfo_signalInfo,
        ExternalSignalInfo,
        SignalInfo,
        maxSignalInfoLength,
        ProtocolId,
        IMSI,
        TMSI,
        _SubscriberId_imsi,
        _SubscriberId_tmsi,
        SubscriberId,
        IMEI,
        _LocationInfo_roamingNumber,
        _LocationInfo_msc_Number,
        LocationInfo,
        HLR_Id,
        _HLR_List__item_,
        HLR_List,
        maxNumOfHLR_Id,
        LMSI,
        GlobalCellId,
        NetworkResource,
        Category,
        _BearerServiceList__item_,
        BearerServiceList,
        maxNumOfBearerServices,
        _TeleserviceList__item_,
        TeleserviceList,
        maxNumOfTeleservices,
        _BasicServiceCode_bearerService,
        _BasicServiceCode_teleservice,
        BasicServiceCode,
        _BasicServiceList__item_,
        BasicServiceList,
        maxNumOfBasicServices,
        _BasicServiceGroupList__item_,
        BasicServiceGroupList,
        maxNumOfBasicServiceGroups,
    ]

class MAPv2_DialogueInformation:

    _name_  = 'MAPv2-DialogueInformation'
    _oid_   = [0, 4, 0, 0, 1, 3, 3, 2]
    
    _obj_ = [
        'map-DialogueAS',
        'MAP-DialoguePDU',
        'MAP-OpenInfo',
        'MAP-AcceptInfo',
        'MAP-CloseInfo',
        'MAP-RefuseInfo',
        'Reason',
        'MAP-UserAbortInfo',
        'MAP-UserAbortChoice',
        'ResourceUnavailableReason',
        'ProcedureCancellationReason',
        'MAP-ProviderAbortInfo',
        'MAP-ProviderAbortReason',
        ]
    _type_ = [
        'MAP-DialoguePDU',
        'MAP-OpenInfo',
        'MAP-AcceptInfo',
        'MAP-CloseInfo',
        'MAP-RefuseInfo',
        'Reason',
        'MAP-UserAbortInfo',
        'MAP-UserAbortChoice',
        'ResourceUnavailableReason',
        'ProcedureCancellationReason',
        'MAP-ProviderAbortInfo',
        'MAP-ProviderAbortReason',
        ]
    _set_ = [
        ]
    _val_ = [
        'map-DialogueAS',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< map-DialogueAS >-----#
    map_DialogueAS = OID(name='map-DialogueAS', mode=MODE_VALUE)
    map_DialogueAS._val = (0, 4, 0, 0, 1, 1, 1, 1)
    
    #-----< MAP-DialoguePDU >-----#
    MAP_DialoguePDU = CHOICE(name='MAP-DialoguePDU', mode=MODE_TYPE)
    _MAP_DialoguePDU_map_open = SEQ(name='map-open', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-DialogueInformation', 'MAP-OpenInfo')))
    _MAP_DialoguePDU_map_accept = SEQ(name='map-accept', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-DialogueInformation', 'MAP-AcceptInfo')))
    _MAP_DialoguePDU_map_close = SEQ(name='map-close', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-DialogueInformation', 'MAP-CloseInfo')))
    _MAP_DialoguePDU_map_refuse = SEQ(name='map-refuse', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-DialogueInformation', 'MAP-RefuseInfo')))
    _MAP_DialoguePDU_map_userAbort = SEQ(name='map-userAbort', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-DialogueInformation', 'MAP-UserAbortInfo')))
    _MAP_DialoguePDU_map_providerAbort = SEQ(name='map-providerAbort', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-DialogueInformation', 'MAP-ProviderAbortInfo')))
    MAP_DialoguePDU._cont = ASN1Dict([
        ('map-open', _MAP_DialoguePDU_map_open),
        ('map-accept', _MAP_DialoguePDU_map_accept),
        ('map-close', _MAP_DialoguePDU_map_close),
        ('map-refuse', _MAP_DialoguePDU_map_refuse),
        ('map-userAbort', _MAP_DialoguePDU_map_userAbort),
        ('map-providerAbort', _MAP_DialoguePDU_map_providerAbort),
        ])
    MAP_DialoguePDU._ext = None
    
    #-----< MAP-OpenInfo >-----#
    MAP_OpenInfo = SEQ(name='MAP-OpenInfo', mode=MODE_TYPE)
    _MAP_OpenInfo_destinationReference = OCT_STR(name='destinationReference', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'AddressString')), opt=True)
    _MAP_OpenInfo_originationReference = OCT_STR(name='originationReference', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'AddressString')), opt=True)
    MAP_OpenInfo._cont = ASN1Dict([
        ('destinationReference', _MAP_OpenInfo_destinationReference),
        ('originationReference', _MAP_OpenInfo_originationReference),
        ])
    MAP_OpenInfo._ext = []
    
    #-----< MAP-AcceptInfo >-----#
    MAP_AcceptInfo = SEQ(name='MAP-AcceptInfo', mode=MODE_TYPE)
    MAP_AcceptInfo._cont = ASN1Dict([
        ])
    MAP_AcceptInfo._ext = []
    
    #-----< MAP-CloseInfo >-----#
    MAP_CloseInfo = SEQ(name='MAP-CloseInfo', mode=MODE_TYPE)
    MAP_CloseInfo._cont = ASN1Dict([
        ])
    MAP_CloseInfo._ext = []
    
    #-----< MAP-RefuseInfo >-----#
    MAP_RefuseInfo = SEQ(name='MAP-RefuseInfo', mode=MODE_TYPE)
    _MAP_RefuseInfo_reason = ENUM(name='reason', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-DialogueInformation', 'Reason')))
    MAP_RefuseInfo._cont = ASN1Dict([
        ('reason', _MAP_RefuseInfo_reason),
        ])
    MAP_RefuseInfo._ext = []
    
    #-----< Reason >-----#
    Reason = ENUM(name='Reason', mode=MODE_TYPE)
    Reason._cont = ASN1Dict([('noReasonGiven', 0), ('invalidDestinationReference', 1), ('invalidOriginatingReference', 2)])
    Reason._ext = None
    
    #-----< MAP-UserAbortInfo >-----#
    MAP_UserAbortInfo = SEQ(name='MAP-UserAbortInfo', mode=MODE_TYPE)
    _MAP_UserAbortInfo_map_UserAbortChoice = CHOICE(name='map-UserAbortChoice', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-DialogueInformation', 'MAP-UserAbortChoice')))
    MAP_UserAbortInfo._cont = ASN1Dict([
        ('map-UserAbortChoice', _MAP_UserAbortInfo_map_UserAbortChoice),
        ])
    MAP_UserAbortInfo._ext = []
    
    #-----< MAP-UserAbortChoice >-----#
    MAP_UserAbortChoice = CHOICE(name='MAP-UserAbortChoice', mode=MODE_TYPE)
    _MAP_UserAbortChoice_userSpecificReason = NULL(name='userSpecificReason', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MAP_UserAbortChoice_userResourceLimitation = NULL(name='userResourceLimitation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MAP_UserAbortChoice_resourceUnavailable = ENUM(name='resourceUnavailable', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-DialogueInformation', 'ResourceUnavailableReason')))
    _MAP_UserAbortChoice_applicationProcedureCancellation = ENUM(name='applicationProcedureCancellation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-DialogueInformation', 'ProcedureCancellationReason')))
    MAP_UserAbortChoice._cont = ASN1Dict([
        ('userSpecificReason', _MAP_UserAbortChoice_userSpecificReason),
        ('userResourceLimitation', _MAP_UserAbortChoice_userResourceLimitation),
        ('resourceUnavailable', _MAP_UserAbortChoice_resourceUnavailable),
        ('applicationProcedureCancellation', _MAP_UserAbortChoice_applicationProcedureCancellation),
        ])
    MAP_UserAbortChoice._ext = None
    
    #-----< ResourceUnavailableReason >-----#
    ResourceUnavailableReason = ENUM(name='ResourceUnavailableReason', mode=MODE_TYPE)
    ResourceUnavailableReason._cont = ASN1Dict([('shortTermResourceLimitation', 0), ('longTermResourceLimitation', 1)])
    ResourceUnavailableReason._ext = None
    
    #-----< ProcedureCancellationReason >-----#
    ProcedureCancellationReason = ENUM(name='ProcedureCancellationReason', mode=MODE_TYPE)
    ProcedureCancellationReason._cont = ASN1Dict([('handoverCancellation', 0), ('radioChannelRelease', 1), ('networkPathRelease', 2), ('callRelease', 3), ('associatedProcedureFailure', 4), ('tandemDialogueRelease', 5), ('remoteOperationsFailure', 6)])
    ProcedureCancellationReason._ext = None
    
    #-----< MAP-ProviderAbortInfo >-----#
    MAP_ProviderAbortInfo = SEQ(name='MAP-ProviderAbortInfo', mode=MODE_TYPE)
    _MAP_ProviderAbortInfo_map_ProviderAbortReason = ENUM(name='map-ProviderAbortReason', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-DialogueInformation', 'MAP-ProviderAbortReason')))
    MAP_ProviderAbortInfo._cont = ASN1Dict([
        ('map-ProviderAbortReason', _MAP_ProviderAbortInfo_map_ProviderAbortReason),
        ])
    MAP_ProviderAbortInfo._ext = []
    
    #-----< MAP-ProviderAbortReason >-----#
    MAP_ProviderAbortReason = ENUM(name='MAP-ProviderAbortReason', mode=MODE_TYPE)
    MAP_ProviderAbortReason._cont = ASN1Dict([('abnormalDialogue', 0), ('invalidPDU', 1)])
    MAP_ProviderAbortReason._ext = None
    
    _all_ = [
        map_DialogueAS,
        _MAP_DialoguePDU_map_open,
        _MAP_DialoguePDU_map_accept,
        _MAP_DialoguePDU_map_close,
        _MAP_DialoguePDU_map_refuse,
        _MAP_DialoguePDU_map_userAbort,
        _MAP_DialoguePDU_map_providerAbort,
        MAP_DialoguePDU,
        _MAP_OpenInfo_destinationReference,
        _MAP_OpenInfo_originationReference,
        MAP_OpenInfo,
        MAP_AcceptInfo,
        MAP_CloseInfo,
        _MAP_RefuseInfo_reason,
        MAP_RefuseInfo,
        Reason,
        _MAP_UserAbortInfo_map_UserAbortChoice,
        MAP_UserAbortInfo,
        _MAP_UserAbortChoice_userSpecificReason,
        _MAP_UserAbortChoice_userResourceLimitation,
        _MAP_UserAbortChoice_resourceUnavailable,
        _MAP_UserAbortChoice_applicationProcedureCancellation,
        MAP_UserAbortChoice,
        ResourceUnavailableReason,
        ProcedureCancellationReason,
        _MAP_ProviderAbortInfo_map_ProviderAbortReason,
        MAP_ProviderAbortInfo,
        MAP_ProviderAbortReason,
    ]

class MAPv2_ER_DataTypes:

    _name_  = 'MAPv2-ER-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 17, 2]
    
    _obj_ = [
        'RoamingNotAllowedCause',
        'CallBarringCause',
        'CUG-RejectCause',
        'SS-IncompatibilityCause',
        'PW-RegistrationFailureCause',
        'SM-DeliveryFailureCause',
        'SM-EnumeratedDeliveryFailureCause',
        'SM-DeliveryFailureCauseWithDiagnostic',
        ]
    _type_ = [
        'RoamingNotAllowedCause',
        'CallBarringCause',
        'CUG-RejectCause',
        'SS-IncompatibilityCause',
        'PW-RegistrationFailureCause',
        'SM-DeliveryFailureCause',
        'SM-EnumeratedDeliveryFailureCause',
        'SM-DeliveryFailureCauseWithDiagnostic',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< RoamingNotAllowedCause >-----#
    RoamingNotAllowedCause = ENUM(name='RoamingNotAllowedCause', mode=MODE_TYPE)
    RoamingNotAllowedCause._cont = ASN1Dict([('plmnRoamingNotAllowed', 0), ('operatorDeterminedBarring', 3)])
    RoamingNotAllowedCause._ext = None
    
    #-----< CallBarringCause >-----#
    CallBarringCause = ENUM(name='CallBarringCause', mode=MODE_TYPE)
    CallBarringCause._cont = ASN1Dict([('barringServiceActive', 0), ('operatorBarring', 1)])
    CallBarringCause._ext = None
    
    #-----< CUG-RejectCause >-----#
    CUG_RejectCause = ENUM(name='CUG-RejectCause', mode=MODE_TYPE)
    CUG_RejectCause._cont = ASN1Dict([('incomingCallsBarredWithinCUG', 0), ('subscriberNotMemberOfCUG', 1), ('requestedBasicServiceViolatesCUG-Constraints', 5), ('calledPartySS-InteractionViolation', 7)])
    CUG_RejectCause._ext = None
    
    #-----< SS-IncompatibilityCause >-----#
    SS_IncompatibilityCause = SEQ(name='SS-IncompatibilityCause', mode=MODE_TYPE)
    _SS_IncompatibilityCause_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')), opt=True)
    _SS_IncompatibilityCause_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'BasicServiceCode')), opt=True)
    _SS_IncompatibilityCause_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Status')), opt=True)
    SS_IncompatibilityCause._cont = ASN1Dict([
        ('ss-Code', _SS_IncompatibilityCause_ss_Code),
        ('basicService', _SS_IncompatibilityCause_basicService),
        ('ss-Status', _SS_IncompatibilityCause_ss_Status),
        ])
    SS_IncompatibilityCause._ext = []
    
    #-----< PW-RegistrationFailureCause >-----#
    PW_RegistrationFailureCause = ENUM(name='PW-RegistrationFailureCause', mode=MODE_TYPE)
    PW_RegistrationFailureCause._cont = ASN1Dict([('undetermined', 0), ('invalidFormat', 1), ('newPasswordsMismatch', 2)])
    PW_RegistrationFailureCause._ext = None
    
    #-----< SM-DeliveryFailureCause >-----#
    SM_DeliveryFailureCause = CHOICE(name='SM-DeliveryFailureCause', mode=MODE_TYPE)
    _SM_DeliveryFailureCause_sm_DeliveryFailureCauseWithDiagnostic = SEQ(name='sm-DeliveryFailureCauseWithDiagnostic', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'SM-DeliveryFailureCauseWithDiagnostic')))
    _SM_DeliveryFailureCause_sm_EnumeratedDeliveryFailureCause = ENUM(name='sm-EnumeratedDeliveryFailureCause', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'SM-EnumeratedDeliveryFailureCause')))
    SM_DeliveryFailureCause._cont = ASN1Dict([
        ('sm-DeliveryFailureCauseWithDiagnostic', _SM_DeliveryFailureCause_sm_DeliveryFailureCauseWithDiagnostic),
        ('sm-EnumeratedDeliveryFailureCause', _SM_DeliveryFailureCause_sm_EnumeratedDeliveryFailureCause),
        ])
    SM_DeliveryFailureCause._ext = None
    
    #-----< SM-EnumeratedDeliveryFailureCause >-----#
    SM_EnumeratedDeliveryFailureCause = ENUM(name='SM-EnumeratedDeliveryFailureCause', mode=MODE_TYPE)
    SM_EnumeratedDeliveryFailureCause._cont = ASN1Dict([('memoryCapacityExceeded', 0), ('equipmentProtocolError', 1), ('equipmentNotSM-Equipped', 2), ('unknownServiceCentre', 3), ('sc-Congestion', 4), ('invalidSME-Address', 5), ('subscriberNotSC-Subscriber', 6)])
    SM_EnumeratedDeliveryFailureCause._ext = None
    
    #-----< SM-DeliveryFailureCauseWithDiagnostic >-----#
    SM_DeliveryFailureCauseWithDiagnostic = SEQ(name='SM-DeliveryFailureCauseWithDiagnostic', mode=MODE_TYPE)
    _SM_DeliveryFailureCauseWithDiagnostic_sm_EnumeratedDeliveryFailureCause = ENUM(name='sm-EnumeratedDeliveryFailureCause', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'SM-EnumeratedDeliveryFailureCause')))
    _SM_DeliveryFailureCauseWithDiagnostic_diagnosticInfo = OCT_STR(name='diagnosticInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'SignalInfo')), opt=True)
    SM_DeliveryFailureCauseWithDiagnostic._cont = ASN1Dict([
        ('sm-EnumeratedDeliveryFailureCause', _SM_DeliveryFailureCauseWithDiagnostic_sm_EnumeratedDeliveryFailureCause),
        ('diagnosticInfo', _SM_DeliveryFailureCauseWithDiagnostic_diagnosticInfo),
        ])
    SM_DeliveryFailureCauseWithDiagnostic._ext = []
    
    _all_ = [
        RoamingNotAllowedCause,
        CallBarringCause,
        CUG_RejectCause,
        _SS_IncompatibilityCause_ss_Code,
        _SS_IncompatibilityCause_basicService,
        _SS_IncompatibilityCause_ss_Status,
        SS_IncompatibilityCause,
        PW_RegistrationFailureCause,
        _SM_DeliveryFailureCause_sm_DeliveryFailureCauseWithDiagnostic,
        _SM_DeliveryFailureCause_sm_EnumeratedDeliveryFailureCause,
        SM_DeliveryFailureCause,
        SM_EnumeratedDeliveryFailureCause,
        _SM_DeliveryFailureCauseWithDiagnostic_sm_EnumeratedDeliveryFailureCause,
        _SM_DeliveryFailureCauseWithDiagnostic_diagnosticInfo,
        SM_DeliveryFailureCauseWithDiagnostic,
    ]

class MAPv2_Errors:

    _name_  = 'MAPv2-Errors'
    _oid_   = []
    
    _obj_ = [
        'systemFailure',
        'dataMissing',
        'unexpectedDataValue',
        'facilityNotSupported',
        'unknownSubscriber',
        'numberChanged',
        'unknownBaseStation',
        'unknownMSC',
        'unidentifiedSubscriber',
        'unknownEquipment',
        'roamingNotAllowed',
        'illegalSubscriber',
        'illegalEquipment',
        'bearerServiceNotProvisioned',
        'teleserviceNotProvisioned',
        'invalidTargetBaseStation',
        'noRadioResourceAvailable',
        'noHandoverNumberAvailable',
        'subsequentHandoverFailure',
        'tracingBufferFull',
        'noRoamingNumberAvailable',
        'Mwd-Set',
        'absentSubscriber',
        'callBarred',
        'forwardingViolation',
        'cug-Reject',
        'illegalSS-Operation',
        'ss-ErrorStatus',
        'ss-NotAvailable',
        'ss-SubscriptionViolation',
        'ss-Incompatibility',
        'unknownAlphabet',
        'ussd-Busy',
        'pw-RegistrationFailure',
        'negativePW-Check',
        'numberOfPW-AttemptsViolation',
        'subscriberBusyForMT-SMS',
        'sm-DeliveryFailure',
        'messageWaitingListFull',
        ]
    _type_ = [
        'Mwd-Set',
        ]
    _set_ = [
        ]
    _val_ = [
        'systemFailure',
        'dataMissing',
        'unexpectedDataValue',
        'facilityNotSupported',
        'unknownSubscriber',
        'numberChanged',
        'unknownBaseStation',
        'unknownMSC',
        'unidentifiedSubscriber',
        'unknownEquipment',
        'roamingNotAllowed',
        'illegalSubscriber',
        'illegalEquipment',
        'bearerServiceNotProvisioned',
        'teleserviceNotProvisioned',
        'invalidTargetBaseStation',
        'noRadioResourceAvailable',
        'noHandoverNumberAvailable',
        'subsequentHandoverFailure',
        'tracingBufferFull',
        'noRoamingNumberAvailable',
        'absentSubscriber',
        'callBarred',
        'forwardingViolation',
        'cug-Reject',
        'illegalSS-Operation',
        'ss-ErrorStatus',
        'ss-NotAvailable',
        'ss-SubscriptionViolation',
        'ss-Incompatibility',
        'unknownAlphabet',
        'ussd-Busy',
        'pw-RegistrationFailure',
        'negativePW-Check',
        'numberOfPW-AttemptsViolation',
        'subscriberBusyForMT-SMS',
        'sm-DeliveryFailure',
        'messageWaitingListFull',
        ]
    _class_ = [
        'systemFailure',
        'dataMissing',
        'unexpectedDataValue',
        'facilityNotSupported',
        'unknownSubscriber',
        'numberChanged',
        'unknownBaseStation',
        'unknownMSC',
        'unidentifiedSubscriber',
        'unknownEquipment',
        'roamingNotAllowed',
        'illegalSubscriber',
        'illegalEquipment',
        'bearerServiceNotProvisioned',
        'teleserviceNotProvisioned',
        'invalidTargetBaseStation',
        'noRadioResourceAvailable',
        'noHandoverNumberAvailable',
        'subsequentHandoverFailure',
        'tracingBufferFull',
        'noRoamingNumberAvailable',
        'absentSubscriber',
        'callBarred',
        'forwardingViolation',
        'cug-Reject',
        'illegalSS-Operation',
        'ss-ErrorStatus',
        'ss-NotAvailable',
        'ss-SubscriptionViolation',
        'ss-Incompatibility',
        'unknownAlphabet',
        'ussd-Busy',
        'pw-RegistrationFailure',
        'negativePW-Check',
        'numberOfPW-AttemptsViolation',
        'subscriberBusyForMT-SMS',
        'sm-DeliveryFailure',
        'messageWaitingListFull',
        ]
    _param_ = [
        ]
    
    #-----< systemFailure >-----#
    systemFailure = CLASS(name='systemFailure', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _systemFailure_val_ParameterType = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'NetworkResource')))
    systemFailure._val = dict([('ParameterType', _systemFailure_val_ParameterType), ('errorCode', ('local', 34))])
    
    #-----< dataMissing >-----#
    dataMissing = CLASS(name='dataMissing', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    dataMissing._val = dict([('errorCode', ('local', 35))])
    
    #-----< unexpectedDataValue >-----#
    unexpectedDataValue = CLASS(name='unexpectedDataValue', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    unexpectedDataValue._val = dict([('errorCode', ('local', 36))])
    
    #-----< facilityNotSupported >-----#
    facilityNotSupported = CLASS(name='facilityNotSupported', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    facilityNotSupported._val = dict([('errorCode', ('local', 21))])
    
    #-----< unknownSubscriber >-----#
    unknownSubscriber = CLASS(name='unknownSubscriber', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    unknownSubscriber._val = dict([('errorCode', ('local', 1))])
    
    #-----< numberChanged >-----#
    numberChanged = CLASS(name='numberChanged', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    numberChanged._val = dict([('errorCode', ('local', 44))])
    
    #-----< unknownBaseStation >-----#
    unknownBaseStation = CLASS(name='unknownBaseStation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    unknownBaseStation._val = dict([('errorCode', ('local', 2))])
    
    #-----< unknownMSC >-----#
    unknownMSC = CLASS(name='unknownMSC', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    unknownMSC._val = dict([('errorCode', ('local', 3))])
    
    #-----< unidentifiedSubscriber >-----#
    unidentifiedSubscriber = CLASS(name='unidentifiedSubscriber', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    unidentifiedSubscriber._val = dict([('errorCode', ('local', 5))])
    
    #-----< unknownEquipment >-----#
    unknownEquipment = CLASS(name='unknownEquipment', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    unknownEquipment._val = dict([('errorCode', ('local', 7))])
    
    #-----< roamingNotAllowed >-----#
    roamingNotAllowed = CLASS(name='roamingNotAllowed', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _roamingNotAllowed_val_ParameterType = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'RoamingNotAllowedCause')))
    roamingNotAllowed._val = dict([('ParameterType', _roamingNotAllowed_val_ParameterType), ('errorCode', ('local', 8))])
    
    #-----< illegalSubscriber >-----#
    illegalSubscriber = CLASS(name='illegalSubscriber', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    illegalSubscriber._val = dict([('errorCode', ('local', 9))])
    
    #-----< illegalEquipment >-----#
    illegalEquipment = CLASS(name='illegalEquipment', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    illegalEquipment._val = dict([('errorCode', ('local', 12))])
    
    #-----< bearerServiceNotProvisioned >-----#
    bearerServiceNotProvisioned = CLASS(name='bearerServiceNotProvisioned', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    bearerServiceNotProvisioned._val = dict([('errorCode', ('local', 10))])
    
    #-----< teleserviceNotProvisioned >-----#
    teleserviceNotProvisioned = CLASS(name='teleserviceNotProvisioned', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    teleserviceNotProvisioned._val = dict([('errorCode', ('local', 11))])
    
    #-----< invalidTargetBaseStation >-----#
    invalidTargetBaseStation = CLASS(name='invalidTargetBaseStation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    invalidTargetBaseStation._val = dict([('errorCode', ('local', 23))])
    
    #-----< noRadioResourceAvailable >-----#
    noRadioResourceAvailable = CLASS(name='noRadioResourceAvailable', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    noRadioResourceAvailable._val = dict([('errorCode', ('local', 24))])
    
    #-----< noHandoverNumberAvailable >-----#
    noHandoverNumberAvailable = CLASS(name='noHandoverNumberAvailable', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    noHandoverNumberAvailable._val = dict([('errorCode', ('local', 25))])
    
    #-----< subsequentHandoverFailure >-----#
    subsequentHandoverFailure = CLASS(name='subsequentHandoverFailure', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    subsequentHandoverFailure._val = dict([('errorCode', ('local', 26))])
    
    #-----< tracingBufferFull >-----#
    tracingBufferFull = CLASS(name='tracingBufferFull', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    tracingBufferFull._val = dict([('errorCode', ('local', 40))])
    
    #-----< noRoamingNumberAvailable >-----#
    noRoamingNumberAvailable = CLASS(name='noRoamingNumberAvailable', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    noRoamingNumberAvailable._val = dict([('errorCode', ('local', 39))])
    
    #-----< Mwd-Set >-----#
    Mwd_Set = BOOL(name='Mwd-Set', mode=MODE_TYPE)
    
    #-----< absentSubscriber >-----#
    absentSubscriber = CLASS(name='absentSubscriber', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _absentSubscriber_val_ParameterType = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    absentSubscriber._val = dict([('ParameterType', _absentSubscriber_val_ParameterType), ('errorCode', ('local', 27))])
    
    #-----< callBarred >-----#
    callBarred = CLASS(name='callBarred', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _callBarred_val_ParameterType = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    callBarred._val = dict([('ParameterType', _callBarred_val_ParameterType), ('errorCode', ('local', 13))])
    
    #-----< forwardingViolation >-----#
    forwardingViolation = CLASS(name='forwardingViolation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    forwardingViolation._val = dict([('errorCode', ('local', 14))])
    
    #-----< cug-Reject >-----#
    cug_Reject = CLASS(name='cug-Reject', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _cug_Reject_val_ParameterType = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CUG-RejectCause')))
    cug_Reject._val = dict([('ParameterType', _cug_Reject_val_ParameterType), ('errorCode', ('local', 15))])
    
    #-----< illegalSS-Operation >-----#
    illegalSS_Operation = CLASS(name='illegalSS-Operation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    illegalSS_Operation._val = dict([('errorCode', ('local', 16))])
    
    #-----< ss-ErrorStatus >-----#
    ss_ErrorStatus = CLASS(name='ss-ErrorStatus', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _ss_ErrorStatus_val_ParameterType = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Status')))
    ss_ErrorStatus._val = dict([('ParameterType', _ss_ErrorStatus_val_ParameterType), ('errorCode', ('local', 17))])
    
    #-----< ss-NotAvailable >-----#
    ss_NotAvailable = CLASS(name='ss-NotAvailable', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    ss_NotAvailable._val = dict([('errorCode', ('local', 18))])
    
    #-----< ss-SubscriptionViolation >-----#
    ss_SubscriptionViolation = CLASS(name='ss-SubscriptionViolation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _ss_SubscriptionViolation_val_ParameterType = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-SubscriptionOption')))
    ss_SubscriptionViolation._val = dict([('ParameterType', _ss_SubscriptionViolation_val_ParameterType), ('errorCode', ('local', 19))])
    
    #-----< ss-Incompatibility >-----#
    ss_Incompatibility = CLASS(name='ss-Incompatibility', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _ss_Incompatibility_val_ParameterType = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'SS-IncompatibilityCause')))
    ss_Incompatibility._val = dict([('ParameterType', _ss_Incompatibility_val_ParameterType), ('errorCode', ('local', 20))])
    
    #-----< unknownAlphabet >-----#
    unknownAlphabet = CLASS(name='unknownAlphabet', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    unknownAlphabet._val = dict([('errorCode', ('local', 71))])
    
    #-----< ussd-Busy >-----#
    ussd_Busy = CLASS(name='ussd-Busy', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    ussd_Busy._val = dict([('errorCode', ('local', 72))])
    
    #-----< pw-RegistrationFailure >-----#
    pw_RegistrationFailure = CLASS(name='pw-RegistrationFailure', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _pw_RegistrationFailure_val_ParameterType = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'PW-RegistrationFailureCause')))
    pw_RegistrationFailure._val = dict([('ParameterType', _pw_RegistrationFailure_val_ParameterType), ('errorCode', ('local', 37))])
    
    #-----< negativePW-Check >-----#
    negativePW_Check = CLASS(name='negativePW-Check', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    negativePW_Check._val = dict([('errorCode', ('local', 38))])
    
    #-----< numberOfPW-AttemptsViolation >-----#
    numberOfPW_AttemptsViolation = CLASS(name='numberOfPW-AttemptsViolation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    numberOfPW_AttemptsViolation._val = dict([('errorCode', ('local', 43))])
    
    #-----< subscriberBusyForMT-SMS >-----#
    subscriberBusyForMT_SMS = CLASS(name='subscriberBusyForMT-SMS', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    subscriberBusyForMT_SMS._val = dict([('errorCode', ('local', 31))])
    
    #-----< sm-DeliveryFailure >-----#
    sm_DeliveryFailure = CLASS(name='sm-DeliveryFailure', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    _sm_DeliveryFailure_val_ParameterType = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'SM-DeliveryFailureCause')))
    sm_DeliveryFailure._val = dict([('ParameterType', _sm_DeliveryFailure_val_ParameterType), ('errorCode', ('local', 32))])
    
    #-----< messageWaitingListFull >-----#
    messageWaitingListFull = CLASS(name='messageWaitingListFull', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    messageWaitingListFull._val = dict([('errorCode', ('local', 33))])
    
    _all_ = [
        systemFailure,
        _systemFailure_val_ParameterType,
        dataMissing,
        unexpectedDataValue,
        facilityNotSupported,
        unknownSubscriber,
        numberChanged,
        unknownBaseStation,
        unknownMSC,
        unidentifiedSubscriber,
        unknownEquipment,
        roamingNotAllowed,
        _roamingNotAllowed_val_ParameterType,
        illegalSubscriber,
        illegalEquipment,
        bearerServiceNotProvisioned,
        teleserviceNotProvisioned,
        invalidTargetBaseStation,
        noRadioResourceAvailable,
        noHandoverNumberAvailable,
        subsequentHandoverFailure,
        tracingBufferFull,
        noRoamingNumberAvailable,
        Mwd_Set,
        absentSubscriber,
        _absentSubscriber_val_ParameterType,
        callBarred,
        _callBarred_val_ParameterType,
        forwardingViolation,
        cug_Reject,
        _cug_Reject_val_ParameterType,
        illegalSS_Operation,
        ss_ErrorStatus,
        _ss_ErrorStatus_val_ParameterType,
        ss_NotAvailable,
        ss_SubscriptionViolation,
        _ss_SubscriptionViolation_val_ParameterType,
        ss_Incompatibility,
        _ss_Incompatibility_val_ParameterType,
        unknownAlphabet,
        ussd_Busy,
        pw_RegistrationFailure,
        _pw_RegistrationFailure_val_ParameterType,
        negativePW_Check,
        numberOfPW_AttemptsViolation,
        subscriberBusyForMT_SMS,
        sm_DeliveryFailure,
        _sm_DeliveryFailure_val_ParameterType,
        messageWaitingListFull,
    ]

class MAPv2_MS_DataTypes:

    _name_  = 'MAPv2-MS-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 11, 2]
    
    _obj_ = [
        'UpdateLocationArg',
        'UpdateLocationRes',
        'ExtensibleUpdateLocationRes',
        'CancelLocationArg',
        'PurgeMS-Arg',
        'IMSI-WithLMSI',
        'SendIdentificationRes',
        'AuthenticationSetList',
        'AuthenticationSet',
        'RAND',
        'SRES',
        'Kc',
        'PrepareHO-Arg',
        'PerformHO-Arg',
        'ChannelType',
        'ClassmarkInfo',
        'HandoverPriority',
        'PrepareHO-Res',
        'PerformHO-Res',
        'PrepareSubsequentHO-Arg',
        'PerformSubsequentHO-Arg',
        'SendAuthenticationInfoArg',
        'SendAuthenticationInfoRes',
        'Ki',
        'EquipmentStatus',
        'SendParametersArg',
        'RequestParameterList',
        'RequestParameter',
        'SentParameterList',
        'SentParameter',
        'maxNumOfSentParameter',
        'InsertSubscriberDataArg',
        'SubscriberData',
        'SubscriberStatus',
        'ODB-Data',
        'ODB-GeneralData',
        'ODB-HPLMN-Data',
        'ZoneCodeList',
        'ZoneCode',
        'maxNumOfZoneCodes',
        'InsertSubscriberDataRes',
        'RegionalSubscriptionResponse',
        'DeleteSubscriberDataArg',
        'DeleteSubscriberDataRes',
        'ResetArg',
        'RestoreDataArg',
        'RestoreDataRes',
        ]
    _type_ = [
        'UpdateLocationArg',
        'UpdateLocationRes',
        'ExtensibleUpdateLocationRes',
        'CancelLocationArg',
        'PurgeMS-Arg',
        'IMSI-WithLMSI',
        'SendIdentificationRes',
        'AuthenticationSetList',
        'AuthenticationSet',
        'RAND',
        'SRES',
        'Kc',
        'PrepareHO-Arg',
        'PerformHO-Arg',
        'ChannelType',
        'ClassmarkInfo',
        'HandoverPriority',
        'PrepareHO-Res',
        'PerformHO-Res',
        'PrepareSubsequentHO-Arg',
        'PerformSubsequentHO-Arg',
        'SendAuthenticationInfoArg',
        'SendAuthenticationInfoRes',
        'Ki',
        'EquipmentStatus',
        'SendParametersArg',
        'RequestParameterList',
        'RequestParameter',
        'SentParameterList',
        'SentParameter',
        'InsertSubscriberDataArg',
        'SubscriberData',
        'SubscriberStatus',
        'ODB-Data',
        'ODB-GeneralData',
        'ODB-HPLMN-Data',
        'ZoneCodeList',
        'ZoneCode',
        'InsertSubscriberDataRes',
        'RegionalSubscriptionResponse',
        'DeleteSubscriberDataArg',
        'DeleteSubscriberDataRes',
        'ResetArg',
        'RestoreDataArg',
        'RestoreDataRes',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxNumOfSentParameter',
        'maxNumOfZoneCodes',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< UpdateLocationArg >-----#
    UpdateLocationArg = SEQ(name='UpdateLocationArg', mode=MODE_TYPE)
    _UpdateLocationArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    _UpdateLocationArg_locationInfo = CHOICE(name='locationInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'LocationInfo')))
    _UpdateLocationArg_vlr_Number = OCT_STR(name='vlr-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _UpdateLocationArg_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'LMSI')), opt=True)
    UpdateLocationArg._cont = ASN1Dict([
        ('imsi', _UpdateLocationArg_imsi),
        ('locationInfo', _UpdateLocationArg_locationInfo),
        ('vlr-Number', _UpdateLocationArg_vlr_Number),
        ('lmsi', _UpdateLocationArg_lmsi),
        ])
    UpdateLocationArg._ext = []
    
    #-----< UpdateLocationRes >-----#
    UpdateLocationRes = CHOICE(name='UpdateLocationRes', mode=MODE_TYPE)
    _UpdateLocationRes_hlr_Number = OCT_STR(name='hlr-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _UpdateLocationRes_extensibleUpdateLocationRes = SEQ(name='extensibleUpdateLocationRes', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'ExtensibleUpdateLocationRes')))
    UpdateLocationRes._cont = ASN1Dict([
        ('hlr-Number', _UpdateLocationRes_hlr_Number),
        ('extensibleUpdateLocationRes', _UpdateLocationRes_extensibleUpdateLocationRes),
        ])
    UpdateLocationRes._ext = None
    
    #-----< ExtensibleUpdateLocationRes >-----#
    ExtensibleUpdateLocationRes = SEQ(name='ExtensibleUpdateLocationRes', mode=MODE_TYPE)
    _ExtensibleUpdateLocationRes_hlr_Number = OCT_STR(name='hlr-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    ExtensibleUpdateLocationRes._cont = ASN1Dict([
        ('hlr-Number', _ExtensibleUpdateLocationRes_hlr_Number),
        ])
    ExtensibleUpdateLocationRes._ext = []
    
    #-----< CancelLocationArg >-----#
    CancelLocationArg = CHOICE(name='CancelLocationArg', mode=MODE_TYPE)
    _CancelLocationArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    _CancelLocationArg_imsi_WithLMSI = SEQ(name='imsi-WithLMSI', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'IMSI-WithLMSI')))
    CancelLocationArg._cont = ASN1Dict([
        ('imsi', _CancelLocationArg_imsi),
        ('imsi-WithLMSI', _CancelLocationArg_imsi_WithLMSI),
        ])
    CancelLocationArg._ext = None
    
    #-----< PurgeMS-Arg >-----#
    PurgeMS_Arg = SEQ(name='PurgeMS-Arg', mode=MODE_TYPE)
    _PurgeMS_Arg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    _PurgeMS_Arg_vlr_Number = OCT_STR(name='vlr-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    PurgeMS_Arg._cont = ASN1Dict([
        ('imsi', _PurgeMS_Arg_imsi),
        ('vlr-Number', _PurgeMS_Arg_vlr_Number),
        ])
    PurgeMS_Arg._ext = []
    
    #-----< IMSI-WithLMSI >-----#
    IMSI_WithLMSI = SEQ(name='IMSI-WithLMSI', mode=MODE_TYPE)
    _IMSI_WithLMSI_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    _IMSI_WithLMSI_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'LMSI')))
    IMSI_WithLMSI._cont = ASN1Dict([
        ('imsi', _IMSI_WithLMSI_imsi),
        ('lmsi', _IMSI_WithLMSI_lmsi),
        ])
    IMSI_WithLMSI._ext = []
    
    #-----< SendIdentificationRes >-----#
    SendIdentificationRes = SEQ(name='SendIdentificationRes', mode=MODE_TYPE)
    _SendIdentificationRes_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    _SendIdentificationRes_authenticationSetList = SEQ_OF(name='authenticationSetList', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'AuthenticationSetList')), opt=True)
    SendIdentificationRes._cont = ASN1Dict([
        ('imsi', _SendIdentificationRes_imsi),
        ('authenticationSetList', _SendIdentificationRes_authenticationSetList),
        ])
    SendIdentificationRes._ext = []
    
    #-----< AuthenticationSetList >-----#
    AuthenticationSetList = SEQ_OF(name='AuthenticationSetList', mode=MODE_TYPE)
    _AuthenticationSetList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'AuthenticationSet')))
    AuthenticationSetList._cont = _AuthenticationSetList__item_
    AuthenticationSetList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< AuthenticationSet >-----#
    AuthenticationSet = SEQ(name='AuthenticationSet', mode=MODE_TYPE)
    _AuthenticationSet_rand = OCT_STR(name='rand', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'RAND')))
    _AuthenticationSet_sres = OCT_STR(name='sres', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SRES')))
    _AuthenticationSet_kc = OCT_STR(name='kc', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'Kc')))
    AuthenticationSet._cont = ASN1Dict([
        ('rand', _AuthenticationSet_rand),
        ('sres', _AuthenticationSet_sres),
        ('kc', _AuthenticationSet_kc),
        ])
    AuthenticationSet._ext = []
    
    #-----< RAND >-----#
    RAND = OCT_STR(name='RAND', mode=MODE_TYPE)
    RAND._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< SRES >-----#
    SRES = OCT_STR(name='SRES', mode=MODE_TYPE)
    SRES._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< Kc >-----#
    Kc = OCT_STR(name='Kc', mode=MODE_TYPE)
    Kc._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< PrepareHO-Arg >-----#
    PrepareHO_Arg = SEQ(name='PrepareHO-Arg', mode=MODE_TYPE)
    _PrepareHO_Arg_targetCellId = OCT_STR(name='targetCellId', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'GlobalCellId')), opt=True)
    _PrepareHO_Arg_ho_NumberNotRequired = NULL(name='ho-NumberNotRequired', mode=MODE_TYPE, opt=True)
    _PrepareHO_Arg_bss_APDU = SEQ(name='bss-APDU', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')), opt=True)
    PrepareHO_Arg._cont = ASN1Dict([
        ('targetCellId', _PrepareHO_Arg_targetCellId),
        ('ho-NumberNotRequired', _PrepareHO_Arg_ho_NumberNotRequired),
        ('bss-APDU', _PrepareHO_Arg_bss_APDU),
        ])
    PrepareHO_Arg._ext = []
    
    #-----< PerformHO-Arg >-----#
    PerformHO_Arg = SEQ(name='PerformHO-Arg', mode=MODE_TYPE)
    _PerformHO_Arg_targetCellId = OCT_STR(name='targetCellId', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'GlobalCellId')))
    _PerformHO_Arg_servingCellId = OCT_STR(name='servingCellId', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'GlobalCellId')))
    _PerformHO_Arg_channelType = OCT_STR(name='channelType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'ChannelType')))
    _PerformHO_Arg_classmarkInfo = OCT_STR(name='classmarkInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'ClassmarkInfo')))
    _PerformHO_Arg_handoverPriority = OCT_STR(name='handoverPriority', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'HandoverPriority')), opt=True)
    _PerformHO_Arg_kc = OCT_STR(name='kc', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'Kc')), opt=True)
    PerformHO_Arg._cont = ASN1Dict([
        ('targetCellId', _PerformHO_Arg_targetCellId),
        ('servingCellId', _PerformHO_Arg_servingCellId),
        ('channelType', _PerformHO_Arg_channelType),
        ('classmarkInfo', _PerformHO_Arg_classmarkInfo),
        ('handoverPriority', _PerformHO_Arg_handoverPriority),
        ('kc', _PerformHO_Arg_kc),
        ])
    PerformHO_Arg._ext = None
    
    #-----< ChannelType >-----#
    ChannelType = OCT_STR(name='ChannelType', mode=MODE_TYPE)
    ChannelType._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< ClassmarkInfo >-----#
    ClassmarkInfo = OCT_STR(name='ClassmarkInfo', mode=MODE_TYPE)
    ClassmarkInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    
    #-----< HandoverPriority >-----#
    HandoverPriority = OCT_STR(name='HandoverPriority', mode=MODE_TYPE)
    HandoverPriority._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< PrepareHO-Res >-----#
    PrepareHO_Res = SEQ(name='PrepareHO-Res', mode=MODE_TYPE)
    _PrepareHO_Res_handoverNumber = OCT_STR(name='handoverNumber', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _PrepareHO_Res_bss_APDU = SEQ(name='bss-APDU', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')), opt=True)
    PrepareHO_Res._cont = ASN1Dict([
        ('handoverNumber', _PrepareHO_Res_handoverNumber),
        ('bss-APDU', _PrepareHO_Res_bss_APDU),
        ])
    PrepareHO_Res._ext = []
    
    #-----< PerformHO-Res >-----#
    PerformHO_Res = SEQ(name='PerformHO-Res', mode=MODE_TYPE)
    _PerformHO_Res_handoverNumber = OCT_STR(name='handoverNumber', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _PerformHO_Res_accessSignalInfo = SEQ(name='accessSignalInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    PerformHO_Res._cont = ASN1Dict([
        ('handoverNumber', _PerformHO_Res_handoverNumber),
        ('accessSignalInfo', _PerformHO_Res_accessSignalInfo),
        ])
    PerformHO_Res._ext = None
    
    #-----< PrepareSubsequentHO-Arg >-----#
    PrepareSubsequentHO_Arg = SEQ(name='PrepareSubsequentHO-Arg', mode=MODE_TYPE)
    _PrepareSubsequentHO_Arg_targetCellId = OCT_STR(name='targetCellId', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'GlobalCellId')))
    _PrepareSubsequentHO_Arg_targetMSC_Number = OCT_STR(name='targetMSC-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _PrepareSubsequentHO_Arg_bss_APDU = SEQ(name='bss-APDU', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    PrepareSubsequentHO_Arg._cont = ASN1Dict([
        ('targetCellId', _PrepareSubsequentHO_Arg_targetCellId),
        ('targetMSC-Number', _PrepareSubsequentHO_Arg_targetMSC_Number),
        ('bss-APDU', _PrepareSubsequentHO_Arg_bss_APDU),
        ])
    PrepareSubsequentHO_Arg._ext = []
    
    #-----< PerformSubsequentHO-Arg >-----#
    PerformSubsequentHO_Arg = SEQ(name='PerformSubsequentHO-Arg', mode=MODE_TYPE)
    _PerformSubsequentHO_Arg_targetCellId = OCT_STR(name='targetCellId', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'GlobalCellId')))
    _PerformSubsequentHO_Arg_servingCellId = OCT_STR(name='servingCellId', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'GlobalCellId')))
    _PerformSubsequentHO_Arg_targetMSC_Number = OCT_STR(name='targetMSC-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _PerformSubsequentHO_Arg_classmarkInfo = OCT_STR(name='classmarkInfo', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'ClassmarkInfo')), opt=True)
    PerformSubsequentHO_Arg._cont = ASN1Dict([
        ('targetCellId', _PerformSubsequentHO_Arg_targetCellId),
        ('servingCellId', _PerformSubsequentHO_Arg_servingCellId),
        ('targetMSC-Number', _PerformSubsequentHO_Arg_targetMSC_Number),
        ('classmarkInfo', _PerformSubsequentHO_Arg_classmarkInfo),
        ])
    PerformSubsequentHO_Arg._ext = None
    
    #-----< SendAuthenticationInfoArg >-----#
    SendAuthenticationInfoArg = OCT_STR(name='SendAuthenticationInfoArg', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    
    #-----< SendAuthenticationInfoRes >-----#
    SendAuthenticationInfoRes = SEQ_OF(name='SendAuthenticationInfoRes', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'AuthenticationSetList')))
    
    #-----< Ki >-----#
    Ki = OCT_STR(name='Ki', mode=MODE_TYPE)
    Ki._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< EquipmentStatus >-----#
    EquipmentStatus = ENUM(name='EquipmentStatus', mode=MODE_TYPE)
    EquipmentStatus._cont = ASN1Dict([('whiteListed', 0), ('blackListed', 1), ('greyListed', 2)])
    EquipmentStatus._ext = None
    
    #-----< SendParametersArg >-----#
    SendParametersArg = SEQ(name='SendParametersArg', mode=MODE_TYPE)
    _SendParametersArg_subscriberId = CHOICE(name='subscriberId', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'SubscriberId')))
    _SendParametersArg_requestParameterList = SEQ_OF(name='requestParameterList', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'RequestParameterList')))
    SendParametersArg._cont = ASN1Dict([
        ('subscriberId', _SendParametersArg_subscriberId),
        ('requestParameterList', _SendParametersArg_requestParameterList),
        ])
    SendParametersArg._ext = None
    
    #-----< RequestParameterList >-----#
    RequestParameterList = SEQ_OF(name='RequestParameterList', mode=MODE_TYPE)
    _RequestParameterList__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'RequestParameter')))
    RequestParameterList._cont = _RequestParameterList__item_
    RequestParameterList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    
    #-----< RequestParameter >-----#
    RequestParameter = ENUM(name='RequestParameter', mode=MODE_TYPE)
    RequestParameter._cont = ASN1Dict([('requestIMSI', 0), ('requestAuthenticationSet', 1), ('requestSubscriberData', 2), ('requestKi', 4)])
    RequestParameter._ext = None
    
    #-----< SentParameterList >-----#
    SentParameterList = SEQ_OF(name='SentParameterList', mode=MODE_TYPE)
    _SentParameterList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SentParameter')))
    SentParameterList._cont = _SentParameterList__item_
    SentParameterList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=6)], ev=None, er=[])
    
    #-----< SentParameter >-----#
    SentParameter = CHOICE(name='SentParameter', mode=MODE_TYPE)
    _SentParameter_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    _SentParameter_authenticationSet = SEQ(name='authenticationSet', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'AuthenticationSet')))
    _SentParameter_subscriberData = SEQ(name='subscriberData', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SubscriberData')))
    _SentParameter_ki = OCT_STR(name='ki', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'Ki')))
    SentParameter._cont = ASN1Dict([
        ('imsi', _SentParameter_imsi),
        ('authenticationSet', _SentParameter_authenticationSet),
        ('subscriberData', _SentParameter_subscriberData),
        ('ki', _SentParameter_ki),
        ])
    SentParameter._ext = None
    
    #-----< maxNumOfSentParameter >-----#
    maxNumOfSentParameter = INT(name='maxNumOfSentParameter', mode=MODE_VALUE)
    maxNumOfSentParameter._val = 6
    
    #-----< InsertSubscriberDataArg >-----#
    InsertSubscriberDataArg = SEQ(name='InsertSubscriberDataArg', mode=MODE_TYPE)
    _InsertSubscriberDataArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')), opt=True)
    _InsertSubscriberDataArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _InsertSubscriberDataArg_category = OCT_STR(name='category', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'Category')), opt=True)
    _InsertSubscriberDataArg_subscriberStatus = ENUM(name='subscriberStatus', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SubscriberStatus')), opt=True)
    _InsertSubscriberDataArg_bearerServiceList = SEQ_OF(name='bearerServiceList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'BearerServiceList')), opt=True)
    _InsertSubscriberDataArg_teleserviceList = SEQ_OF(name='teleserviceList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'TeleserviceList')), opt=True)
    _InsertSubscriberDataArg_provisionedSS = SEQ_OF(name='provisionedSS', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-InfoList')), opt=True)
    _InsertSubscriberDataArg_odb_Data = SEQ(name='odb-Data', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'ODB-Data')), opt=True)
    _InsertSubscriberDataArg_roamingRestrictionDueToUnsupportedFeature = NULL(name='roamingRestrictionDueToUnsupportedFeature', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_regionalSubscriptionData = SEQ_OF(name='regionalSubscriptionData', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'ZoneCodeList')), opt=True)
    InsertSubscriberDataArg._cont = ASN1Dict([
        ('imsi', _InsertSubscriberDataArg_imsi),
        ('msisdn', _InsertSubscriberDataArg_msisdn),
        ('category', _InsertSubscriberDataArg_category),
        ('subscriberStatus', _InsertSubscriberDataArg_subscriberStatus),
        ('bearerServiceList', _InsertSubscriberDataArg_bearerServiceList),
        ('teleserviceList', _InsertSubscriberDataArg_teleserviceList),
        ('provisionedSS', _InsertSubscriberDataArg_provisionedSS),
        ('odb-Data', _InsertSubscriberDataArg_odb_Data),
        ('roamingRestrictionDueToUnsupportedFeature', _InsertSubscriberDataArg_roamingRestrictionDueToUnsupportedFeature),
        ('regionalSubscriptionData', _InsertSubscriberDataArg_regionalSubscriptionData),
        ])
    InsertSubscriberDataArg._ext = []
    
    #-----< SubscriberData >-----#
    SubscriberData = SEQ(name='SubscriberData', mode=MODE_TYPE)
    _SubscriberData_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SubscriberData_category = OCT_STR(name='category', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'Category')), opt=True)
    _SubscriberData_subscriberStatus = ENUM(name='subscriberStatus', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SubscriberStatus')), opt=True)
    _SubscriberData_bearerServiceList = SEQ_OF(name='bearerServiceList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'BearerServiceList')), opt=True)
    _SubscriberData_teleserviceList = SEQ_OF(name='teleserviceList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'TeleserviceList')), opt=True)
    _SubscriberData_provisionedSS = SEQ_OF(name='provisionedSS', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-InfoList')), opt=True)
    _SubscriberData_odb_Data = SEQ(name='odb-Data', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'ODB-Data')), opt=True)
    _SubscriberData_roamingRestrictionDueToUnsupportedFeature = NULL(name='roamingRestrictionDueToUnsupportedFeature', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SubscriberData_regionalSubscriptionData = SEQ_OF(name='regionalSubscriptionData', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'ZoneCodeList')), opt=True)
    SubscriberData._cont = ASN1Dict([
        ('msisdn', _SubscriberData_msisdn),
        ('category', _SubscriberData_category),
        ('subscriberStatus', _SubscriberData_subscriberStatus),
        ('bearerServiceList', _SubscriberData_bearerServiceList),
        ('teleserviceList', _SubscriberData_teleserviceList),
        ('provisionedSS', _SubscriberData_provisionedSS),
        ('odb-Data', _SubscriberData_odb_Data),
        ('roamingRestrictionDueToUnsupportedFeature', _SubscriberData_roamingRestrictionDueToUnsupportedFeature),
        ('regionalSubscriptionData', _SubscriberData_regionalSubscriptionData),
        ])
    SubscriberData._ext = None
    
    #-----< SubscriberStatus >-----#
    SubscriberStatus = ENUM(name='SubscriberStatus', mode=MODE_TYPE)
    SubscriberStatus._cont = ASN1Dict([('serviceGranted', 0), ('operatorDeterminedBarring', 1)])
    SubscriberStatus._ext = None
    
    #-----< ODB-Data >-----#
    ODB_Data = SEQ(name='ODB-Data', mode=MODE_TYPE)
    _ODB_Data_odb_GeneralData = BIT_STR(name='odb-GeneralData', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'ODB-GeneralData')))
    _ODB_Data_odb_HPLMN_Data = BIT_STR(name='odb-HPLMN-Data', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'ODB-HPLMN-Data')), opt=True)
    ODB_Data._cont = ASN1Dict([
        ('odb-GeneralData', _ODB_Data_odb_GeneralData),
        ('odb-HPLMN-Data', _ODB_Data_odb_HPLMN_Data),
        ])
    ODB_Data._ext = []
    
    #-----< ODB-GeneralData >-----#
    ODB_GeneralData = BIT_STR(name='ODB-GeneralData', mode=MODE_TYPE)
    ODB_GeneralData._cont = ASN1Dict([('allOG-CallsBarred', 0), ('internationalOGCallsBarred', 1), ('internationalOGCallsNotToHPLMN-CountryBarred', 2), ('premiumRateInformationOGCallsBarred', 3), ('premiumRateEntertainementOGCallsBarred', 4), ('ss-AccessBarred', 5)])
    ODB_GeneralData._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    
    #-----< ODB-HPLMN-Data >-----#
    ODB_HPLMN_Data = BIT_STR(name='ODB-HPLMN-Data', mode=MODE_TYPE)
    ODB_HPLMN_Data._cont = ASN1Dict([('plmn-SpecificBarringType1', 0), ('plmn-SpecificBarringType2', 1), ('plmn-SpecificBarringType3', 2), ('plmn-SpecificBarringType4', 3)])
    ODB_HPLMN_Data._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< ZoneCodeList >-----#
    ZoneCodeList = SEQ_OF(name='ZoneCodeList', mode=MODE_TYPE)
    _ZoneCodeList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'ZoneCode')))
    ZoneCodeList._cont = _ZoneCodeList__item_
    ZoneCodeList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< ZoneCode >-----#
    ZoneCode = OCT_STR(name='ZoneCode', mode=MODE_TYPE)
    ZoneCode._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< maxNumOfZoneCodes >-----#
    maxNumOfZoneCodes = INT(name='maxNumOfZoneCodes', mode=MODE_VALUE)
    maxNumOfZoneCodes._val = 10
    
    #-----< InsertSubscriberDataRes >-----#
    InsertSubscriberDataRes = SEQ(name='InsertSubscriberDataRes', mode=MODE_TYPE)
    _InsertSubscriberDataRes_teleserviceList = SEQ_OF(name='teleserviceList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'TeleserviceList')), opt=True)
    _InsertSubscriberDataRes_bearerServiceList = SEQ_OF(name='bearerServiceList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'BearerServiceList')), opt=True)
    _InsertSubscriberDataRes_ss_List = SEQ_OF(name='ss-List', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-List')), opt=True)
    _InsertSubscriberDataRes_odb_GeneralData = BIT_STR(name='odb-GeneralData', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'ODB-GeneralData')), opt=True)
    _InsertSubscriberDataRes_regionalSubscriptionResponse = ENUM(name='regionalSubscriptionResponse', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'RegionalSubscriptionResponse')), opt=True)
    InsertSubscriberDataRes._cont = ASN1Dict([
        ('teleserviceList', _InsertSubscriberDataRes_teleserviceList),
        ('bearerServiceList', _InsertSubscriberDataRes_bearerServiceList),
        ('ss-List', _InsertSubscriberDataRes_ss_List),
        ('odb-GeneralData', _InsertSubscriberDataRes_odb_GeneralData),
        ('regionalSubscriptionResponse', _InsertSubscriberDataRes_regionalSubscriptionResponse),
        ])
    InsertSubscriberDataRes._ext = []
    
    #-----< RegionalSubscriptionResponse >-----#
    RegionalSubscriptionResponse = ENUM(name='RegionalSubscriptionResponse', mode=MODE_TYPE)
    RegionalSubscriptionResponse._cont = ASN1Dict([('msc-AreaRestricted', 0), ('tooManyZoneCodes', 1), ('zoneCodesConflict', 2), ('regionalSubscNotSupported', 3)])
    RegionalSubscriptionResponse._ext = None
    
    #-----< DeleteSubscriberDataArg >-----#
    DeleteSubscriberDataArg = SEQ(name='DeleteSubscriberDataArg', mode=MODE_TYPE)
    _DeleteSubscriberDataArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    _DeleteSubscriberDataArg_basicServiceList = SEQ_OF(name='basicServiceList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'BasicServiceList')), opt=True)
    _DeleteSubscriberDataArg_ss_List = SEQ_OF(name='ss-List', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-List')), opt=True)
    _DeleteSubscriberDataArg_roamingRestrictionDueToUnsupportedFeature = NULL(name='roamingRestrictionDueToUnsupportedFeature', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_regionalSubscriptionIdentifier = OCT_STR(name='regionalSubscriptionIdentifier', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'ZoneCode')), opt=True)
    DeleteSubscriberDataArg._cont = ASN1Dict([
        ('imsi', _DeleteSubscriberDataArg_imsi),
        ('basicServiceList', _DeleteSubscriberDataArg_basicServiceList),
        ('ss-List', _DeleteSubscriberDataArg_ss_List),
        ('roamingRestrictionDueToUnsupportedFeature', _DeleteSubscriberDataArg_roamingRestrictionDueToUnsupportedFeature),
        ('regionalSubscriptionIdentifier', _DeleteSubscriberDataArg_regionalSubscriptionIdentifier),
        ])
    DeleteSubscriberDataArg._ext = []
    
    #-----< DeleteSubscriberDataRes >-----#
    DeleteSubscriberDataRes = SEQ(name='DeleteSubscriberDataRes', mode=MODE_TYPE)
    _DeleteSubscriberDataRes_regionalSubscriptionResponse = ENUM(name='regionalSubscriptionResponse', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'RegionalSubscriptionResponse')), opt=True)
    DeleteSubscriberDataRes._cont = ASN1Dict([
        ('regionalSubscriptionResponse', _DeleteSubscriberDataRes_regionalSubscriptionResponse),
        ])
    DeleteSubscriberDataRes._ext = []
    
    #-----< ResetArg >-----#
    ResetArg = SEQ(name='ResetArg', mode=MODE_TYPE)
    _ResetArg_networkResource = ENUM(name='networkResource', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'NetworkResource')), opt=True)
    _ResetArg_hlr_Number = OCT_STR(name='hlr-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _ResetArg_hlr_List = SEQ_OF(name='hlr-List', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'HLR-List')), opt=True)
    ResetArg._cont = ASN1Dict([
        ('networkResource', _ResetArg_networkResource),
        ('hlr-Number', _ResetArg_hlr_Number),
        ('hlr-List', _ResetArg_hlr_List),
        ])
    ResetArg._ext = []
    
    #-----< RestoreDataArg >-----#
    RestoreDataArg = SEQ(name='RestoreDataArg', mode=MODE_TYPE)
    _RestoreDataArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    _RestoreDataArg_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'LMSI')), opt=True)
    RestoreDataArg._cont = ASN1Dict([
        ('imsi', _RestoreDataArg_imsi),
        ('lmsi', _RestoreDataArg_lmsi),
        ])
    RestoreDataArg._ext = []
    
    #-----< RestoreDataRes >-----#
    RestoreDataRes = SEQ(name='RestoreDataRes', mode=MODE_TYPE)
    _RestoreDataRes_hlr_Number = OCT_STR(name='hlr-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _RestoreDataRes_msNotReachable = NULL(name='msNotReachable', mode=MODE_TYPE, opt=True)
    RestoreDataRes._cont = ASN1Dict([
        ('hlr-Number', _RestoreDataRes_hlr_Number),
        ('msNotReachable', _RestoreDataRes_msNotReachable),
        ])
    RestoreDataRes._ext = []
    
    _all_ = [
        _UpdateLocationArg_imsi,
        _UpdateLocationArg_locationInfo,
        _UpdateLocationArg_vlr_Number,
        _UpdateLocationArg_lmsi,
        UpdateLocationArg,
        _UpdateLocationRes_hlr_Number,
        _UpdateLocationRes_extensibleUpdateLocationRes,
        UpdateLocationRes,
        _ExtensibleUpdateLocationRes_hlr_Number,
        ExtensibleUpdateLocationRes,
        _CancelLocationArg_imsi,
        _CancelLocationArg_imsi_WithLMSI,
        CancelLocationArg,
        _PurgeMS_Arg_imsi,
        _PurgeMS_Arg_vlr_Number,
        PurgeMS_Arg,
        _IMSI_WithLMSI_imsi,
        _IMSI_WithLMSI_lmsi,
        IMSI_WithLMSI,
        _SendIdentificationRes_imsi,
        _SendIdentificationRes_authenticationSetList,
        SendIdentificationRes,
        _AuthenticationSetList__item_,
        AuthenticationSetList,
        _AuthenticationSet_rand,
        _AuthenticationSet_sres,
        _AuthenticationSet_kc,
        AuthenticationSet,
        RAND,
        SRES,
        Kc,
        _PrepareHO_Arg_targetCellId,
        _PrepareHO_Arg_ho_NumberNotRequired,
        _PrepareHO_Arg_bss_APDU,
        PrepareHO_Arg,
        _PerformHO_Arg_targetCellId,
        _PerformHO_Arg_servingCellId,
        _PerformHO_Arg_channelType,
        _PerformHO_Arg_classmarkInfo,
        _PerformHO_Arg_handoverPriority,
        _PerformHO_Arg_kc,
        PerformHO_Arg,
        ChannelType,
        ClassmarkInfo,
        HandoverPriority,
        _PrepareHO_Res_handoverNumber,
        _PrepareHO_Res_bss_APDU,
        PrepareHO_Res,
        _PerformHO_Res_handoverNumber,
        _PerformHO_Res_accessSignalInfo,
        PerformHO_Res,
        _PrepareSubsequentHO_Arg_targetCellId,
        _PrepareSubsequentHO_Arg_targetMSC_Number,
        _PrepareSubsequentHO_Arg_bss_APDU,
        PrepareSubsequentHO_Arg,
        _PerformSubsequentHO_Arg_targetCellId,
        _PerformSubsequentHO_Arg_servingCellId,
        _PerformSubsequentHO_Arg_targetMSC_Number,
        _PerformSubsequentHO_Arg_classmarkInfo,
        PerformSubsequentHO_Arg,
        SendAuthenticationInfoArg,
        SendAuthenticationInfoRes,
        Ki,
        EquipmentStatus,
        _SendParametersArg_subscriberId,
        _SendParametersArg_requestParameterList,
        SendParametersArg,
        _RequestParameterList__item_,
        RequestParameterList,
        RequestParameter,
        _SentParameterList__item_,
        SentParameterList,
        _SentParameter_imsi,
        _SentParameter_authenticationSet,
        _SentParameter_subscriberData,
        _SentParameter_ki,
        SentParameter,
        maxNumOfSentParameter,
        _InsertSubscriberDataArg_imsi,
        _InsertSubscriberDataArg_msisdn,
        _InsertSubscriberDataArg_category,
        _InsertSubscriberDataArg_subscriberStatus,
        _InsertSubscriberDataArg_bearerServiceList,
        _InsertSubscriberDataArg_teleserviceList,
        _InsertSubscriberDataArg_provisionedSS,
        _InsertSubscriberDataArg_odb_Data,
        _InsertSubscriberDataArg_roamingRestrictionDueToUnsupportedFeature,
        _InsertSubscriberDataArg_regionalSubscriptionData,
        InsertSubscriberDataArg,
        _SubscriberData_msisdn,
        _SubscriberData_category,
        _SubscriberData_subscriberStatus,
        _SubscriberData_bearerServiceList,
        _SubscriberData_teleserviceList,
        _SubscriberData_provisionedSS,
        _SubscriberData_odb_Data,
        _SubscriberData_roamingRestrictionDueToUnsupportedFeature,
        _SubscriberData_regionalSubscriptionData,
        SubscriberData,
        SubscriberStatus,
        _ODB_Data_odb_GeneralData,
        _ODB_Data_odb_HPLMN_Data,
        ODB_Data,
        ODB_GeneralData,
        ODB_HPLMN_Data,
        _ZoneCodeList__item_,
        ZoneCodeList,
        ZoneCode,
        maxNumOfZoneCodes,
        _InsertSubscriberDataRes_teleserviceList,
        _InsertSubscriberDataRes_bearerServiceList,
        _InsertSubscriberDataRes_ss_List,
        _InsertSubscriberDataRes_odb_GeneralData,
        _InsertSubscriberDataRes_regionalSubscriptionResponse,
        InsertSubscriberDataRes,
        RegionalSubscriptionResponse,
        _DeleteSubscriberDataArg_imsi,
        _DeleteSubscriberDataArg_basicServiceList,
        _DeleteSubscriberDataArg_ss_List,
        _DeleteSubscriberDataArg_roamingRestrictionDueToUnsupportedFeature,
        _DeleteSubscriberDataArg_regionalSubscriptionIdentifier,
        DeleteSubscriberDataArg,
        _DeleteSubscriberDataRes_regionalSubscriptionResponse,
        DeleteSubscriberDataRes,
        _ResetArg_networkResource,
        _ResetArg_hlr_Number,
        _ResetArg_hlr_List,
        ResetArg,
        _RestoreDataArg_imsi,
        _RestoreDataArg_lmsi,
        RestoreDataArg,
        _RestoreDataRes_hlr_Number,
        _RestoreDataRes_msNotReachable,
        RestoreDataRes,
    ]

class MAPv2_MobileServiceOperations:

    _name_  = 'MAPv2-MobileServiceOperations'
    _oid_   = []
    
    _obj_ = [
        'updateLocation',
        'cancelLocation',
        'purgeMS',
        'sendIdentification',
        'prepareHandover',
        'performHandover',
        'sendEndSignal',
        'processAccessSignalling',
        'forwardAccessSignalling',
        'prepareSubsequentHandover',
        'performSubsequentHandover',
        'sendAuthenticationInfo',
        'checkIMEI',
        'sendParameters',
        'insertSubscriberData',
        'deleteSubscriberData',
        'reset',
        'forwardCheckSS-Indication',
        'restoreData',
        ]
    _type_ = [
        ]
    _set_ = [
        ]
    _val_ = [
        'updateLocation',
        'cancelLocation',
        'purgeMS',
        'sendIdentification',
        'prepareHandover',
        'performHandover',
        'sendEndSignal',
        'processAccessSignalling',
        'forwardAccessSignalling',
        'prepareSubsequentHandover',
        'performSubsequentHandover',
        'sendAuthenticationInfo',
        'checkIMEI',
        'sendParameters',
        'insertSubscriberData',
        'deleteSubscriberData',
        'reset',
        'forwardCheckSS-Indication',
        'restoreData',
        ]
    _class_ = [
        'updateLocation',
        'cancelLocation',
        'purgeMS',
        'sendIdentification',
        'prepareHandover',
        'performHandover',
        'sendEndSignal',
        'processAccessSignalling',
        'forwardAccessSignalling',
        'prepareSubsequentHandover',
        'performSubsequentHandover',
        'sendAuthenticationInfo',
        'checkIMEI',
        'sendParameters',
        'insertSubscriberData',
        'deleteSubscriberData',
        'reset',
        'forwardCheckSS-Indication',
        'restoreData',
        ]
    _param_ = [
        ]
    
    #-----< updateLocation >-----#
    updateLocation = CLASS(name='updateLocation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _updateLocation_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'UpdateLocationArg')))
    _updateLocation_val_ResultType = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'UpdateLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'NetworkResource')))
    __sendRoutingInfo_Errors_val_ParameterType_4 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'RoamingNotAllowedCause')))
    updateLocation._val = dict([('ArgumentType', _updateLocation_val_ArgumentType), ('ResultType', _updateLocation_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 2))])
    
    #-----< cancelLocation >-----#
    cancelLocation = CLASS(name='cancelLocation', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _cancelLocation_val_ArgumentType = CHOICE(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'CancelLocationArg')))
    cancelLocation._val = dict([('ArgumentType', _cancelLocation_val_ArgumentType), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 3))])
    
    #-----< purgeMS >-----#
    purgeMS = CLASS(name='purgeMS', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _purgeMS_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PurgeMS-Arg')))
    purgeMS._val = dict([('ArgumentType', _purgeMS_val_ArgumentType), ('operationCode', ('local', 67))])
    
    #-----< sendIdentification >-----#
    sendIdentification = CLASS(name='sendIdentification', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _sendIdentification_val_ArgumentType = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'TMSI')))
    _sendIdentification_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendIdentificationRes')))
    sendIdentification._val = dict([('ArgumentType', _sendIdentification_val_ArgumentType), ('ResultType', _sendIdentification_val_ResultType), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 55))])
    
    #-----< prepareHandover >-----#
    prepareHandover = CLASS(name='prepareHandover', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _prepareHandover_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PrepareHO-Arg')))
    _prepareHandover_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PrepareHO-Res')))
    prepareHandover._val = dict([('ArgumentType', _prepareHandover_val_ArgumentType), ('ResultType', _prepareHandover_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 25))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 68))])
    
    #-----< performHandover >-----#
    performHandover = CLASS(name='performHandover', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _performHandover_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PerformHO-Arg')))
    _performHandover_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PerformHO-Res')))
    performHandover._val = dict([('ArgumentType', _performHandover_val_ArgumentType), ('ResultType', _performHandover_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 2))]), dict([('errorCode', ('local', 23))]), dict([('errorCode', ('local', 24))]), dict([('errorCode', ('local', 25))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 28))])
    
    #-----< sendEndSignal >-----#
    sendEndSignal = CLASS(name='sendEndSignal', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _sendEndSignal_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    sendEndSignal._val = dict([('ArgumentType', _sendEndSignal_val_ArgumentType), ('operationCode', ('local', 29))])
    
    #-----< processAccessSignalling >-----#
    processAccessSignalling = CLASS(name='processAccessSignalling', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _processAccessSignalling_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    processAccessSignalling._val = dict([('ArgumentType', _processAccessSignalling_val_ArgumentType), ('operationCode', ('local', 33))])
    
    #-----< forwardAccessSignalling >-----#
    forwardAccessSignalling = CLASS(name='forwardAccessSignalling', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _forwardAccessSignalling_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    forwardAccessSignalling._val = dict([('ArgumentType', _forwardAccessSignalling_val_ArgumentType), ('operationCode', ('local', 34))])
    
    #-----< prepareSubsequentHandover >-----#
    prepareSubsequentHandover = CLASS(name='prepareSubsequentHandover', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _prepareSubsequentHandover_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PrepareSubsequentHO-Arg')))
    _prepareSubsequentHandover_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    prepareSubsequentHandover._val = dict([('ArgumentType', _prepareSubsequentHandover_val_ArgumentType), ('ResultType', _prepareSubsequentHandover_val_ResultType), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))])
    
    #-----< performSubsequentHandover >-----#
    performSubsequentHandover = CLASS(name='performSubsequentHandover', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _performSubsequentHandover_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PerformSubsequentHO-Arg')))
    _performSubsequentHandover_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    performSubsequentHandover._val = dict([('ArgumentType', _performSubsequentHandover_val_ArgumentType), ('ResultType', _performSubsequentHandover_val_ResultType), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 2))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 23))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 30))])
    
    #-----< sendAuthenticationInfo >-----#
    sendAuthenticationInfo = CLASS(name='sendAuthenticationInfo', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _sendAuthenticationInfo_val_ArgumentType = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendAuthenticationInfoArg')))
    _sendAuthenticationInfo_val_ResultType = SEQ_OF(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendAuthenticationInfoRes')))
    sendAuthenticationInfo._val = dict([('ArgumentType', _sendAuthenticationInfo_val_ArgumentType), ('ResultType', _sendAuthenticationInfo_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 56))])
    
    #-----< checkIMEI >-----#
    checkIMEI = CLASS(name='checkIMEI', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _checkIMEI_val_ArgumentType = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMEI')))
    _checkIMEI_val_ResultType = ENUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'EquipmentStatus')))
    checkIMEI._val = dict([('ArgumentType', _checkIMEI_val_ArgumentType), ('ResultType', _checkIMEI_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 7))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 43))])
    
    #-----< sendParameters >-----#
    sendParameters = CLASS(name='sendParameters', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _sendParameters_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendParametersArg')))
    _sendParameters_val_ResultType = SEQ_OF(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SentParameterList')))
    sendParameters._val = dict([('ArgumentType', _sendParameters_val_ArgumentType), ('ResultType', _sendParameters_val_ResultType), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 9))])
    
    #-----< insertSubscriberData >-----#
    insertSubscriberData = CLASS(name='insertSubscriberData', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _insertSubscriberData_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'InsertSubscriberDataArg')))
    _insertSubscriberData_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'InsertSubscriberDataRes')))
    insertSubscriberData._val = dict([('ArgumentType', _insertSubscriberData_val_ArgumentType), ('ResultType', _insertSubscriberData_val_ResultType), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))])
    
    #-----< deleteSubscriberData >-----#
    deleteSubscriberData = CLASS(name='deleteSubscriberData', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _deleteSubscriberData_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'DeleteSubscriberDataArg')))
    _deleteSubscriberData_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'DeleteSubscriberDataRes')))
    deleteSubscriberData._val = dict([('ArgumentType', _deleteSubscriberData_val_ArgumentType), ('ResultType', _deleteSubscriberData_val_ResultType), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 8))])
    
    #-----< reset >-----#
    reset = CLASS(name='reset', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _reset_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'ResetArg')))
    reset._val = dict([('ArgumentType', _reset_val_ArgumentType), ('operationCode', ('local', 37))])
    
    #-----< forwardCheckSS-Indication >-----#
    forwardCheckSS_Indication = CLASS(name='forwardCheckSS-Indication', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    forwardCheckSS_Indication._val = dict([('operationCode', ('local', 38))])
    
    #-----< restoreData >-----#
    restoreData = CLASS(name='restoreData', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _restoreData_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'RestoreDataArg')))
    _restoreData_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'RestoreDataRes')))
    restoreData._val = dict([('ArgumentType', _restoreData_val_ArgumentType), ('ResultType', _restoreData_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 57))])
    
    _all_ = [
        updateLocation,
        _updateLocation_val_ArgumentType,
        _updateLocation_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0,
        __sendRoutingInfo_Errors_val_ParameterType_4,
        cancelLocation,
        _cancelLocation_val_ArgumentType,
        purgeMS,
        _purgeMS_val_ArgumentType,
        sendIdentification,
        _sendIdentification_val_ArgumentType,
        _sendIdentification_val_ResultType,
        prepareHandover,
        _prepareHandover_val_ArgumentType,
        _prepareHandover_val_ResultType,
        performHandover,
        _performHandover_val_ArgumentType,
        _performHandover_val_ResultType,
        sendEndSignal,
        _sendEndSignal_val_ArgumentType,
        processAccessSignalling,
        _processAccessSignalling_val_ArgumentType,
        forwardAccessSignalling,
        _forwardAccessSignalling_val_ArgumentType,
        prepareSubsequentHandover,
        _prepareSubsequentHandover_val_ArgumentType,
        _prepareSubsequentHandover_val_ResultType,
        performSubsequentHandover,
        _performSubsequentHandover_val_ArgumentType,
        _performSubsequentHandover_val_ResultType,
        sendAuthenticationInfo,
        _sendAuthenticationInfo_val_ArgumentType,
        _sendAuthenticationInfo_val_ResultType,
        checkIMEI,
        _checkIMEI_val_ArgumentType,
        _checkIMEI_val_ResultType,
        sendParameters,
        _sendParameters_val_ArgumentType,
        _sendParameters_val_ResultType,
        insertSubscriberData,
        _insertSubscriberData_val_ArgumentType,
        _insertSubscriberData_val_ResultType,
        deleteSubscriberData,
        _deleteSubscriberData_val_ArgumentType,
        _deleteSubscriberData_val_ResultType,
        reset,
        _reset_val_ArgumentType,
        forwardCheckSS_Indication,
        restoreData,
        _restoreData_val_ArgumentType,
        _restoreData_val_ResultType,
    ]

class MAPv2_OM_DataTypes:

    _name_  = 'MAPv2-OM-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 12, 2]
    
    _obj_ = [
        'ActivateTraceModeArg',
        'TraceReference',
        'TraceType',
        'DeactivateTraceModeArg',
        'TraceSubscriberActivityArg',
        'CallReference',
        'NoteInternalHO-Arg',
        'HandoverType',
        ]
    _type_ = [
        'ActivateTraceModeArg',
        'TraceReference',
        'TraceType',
        'DeactivateTraceModeArg',
        'TraceSubscriberActivityArg',
        'CallReference',
        'NoteInternalHO-Arg',
        'HandoverType',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< ActivateTraceModeArg >-----#
    ActivateTraceModeArg = SEQ(name='ActivateTraceModeArg', mode=MODE_TYPE)
    _ActivateTraceModeArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')), opt=True)
    _ActivateTraceModeArg_traceReference = OCT_STR(name='traceReference', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'TraceReference')))
    _ActivateTraceModeArg_traceType = INT(name='traceType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'TraceType')))
    _ActivateTraceModeArg_omc_Id = OCT_STR(name='omc-Id', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'AddressString')), opt=True)
    ActivateTraceModeArg._cont = ASN1Dict([
        ('imsi', _ActivateTraceModeArg_imsi),
        ('traceReference', _ActivateTraceModeArg_traceReference),
        ('traceType', _ActivateTraceModeArg_traceType),
        ('omc-Id', _ActivateTraceModeArg_omc_Id),
        ])
    ActivateTraceModeArg._ext = []
    
    #-----< TraceReference >-----#
    TraceReference = OCT_STR(name='TraceReference', mode=MODE_TYPE)
    TraceReference._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    
    #-----< TraceType >-----#
    TraceType = INT(name='TraceType', mode=MODE_TYPE)
    TraceType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< DeactivateTraceModeArg >-----#
    DeactivateTraceModeArg = SEQ(name='DeactivateTraceModeArg', mode=MODE_TYPE)
    _DeactivateTraceModeArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')), opt=True)
    _DeactivateTraceModeArg_traceReference = OCT_STR(name='traceReference', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'TraceReference')))
    DeactivateTraceModeArg._cont = ASN1Dict([
        ('imsi', _DeactivateTraceModeArg_imsi),
        ('traceReference', _DeactivateTraceModeArg_traceReference),
        ])
    DeactivateTraceModeArg._ext = []
    
    #-----< TraceSubscriberActivityArg >-----#
    TraceSubscriberActivityArg = SEQ(name='TraceSubscriberActivityArg', mode=MODE_TYPE)
    _TraceSubscriberActivityArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')), opt=True)
    _TraceSubscriberActivityArg_traceReference = OCT_STR(name='traceReference', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'TraceReference')))
    _TraceSubscriberActivityArg_traceType = INT(name='traceType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'TraceType')))
    _TraceSubscriberActivityArg_omc_Id = OCT_STR(name='omc-Id', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'AddressString')), opt=True)
    _TraceSubscriberActivityArg_callReference = OCT_STR(name='callReference', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'CallReference')), opt=True)
    TraceSubscriberActivityArg._cont = ASN1Dict([
        ('imsi', _TraceSubscriberActivityArg_imsi),
        ('traceReference', _TraceSubscriberActivityArg_traceReference),
        ('traceType', _TraceSubscriberActivityArg_traceType),
        ('omc-Id', _TraceSubscriberActivityArg_omc_Id),
        ('callReference', _TraceSubscriberActivityArg_callReference),
        ])
    TraceSubscriberActivityArg._ext = None
    
    #-----< CallReference >-----#
    CallReference = OCT_STR(name='CallReference', mode=MODE_TYPE)
    CallReference._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< NoteInternalHO-Arg >-----#
    NoteInternalHO_Arg = SEQ(name='NoteInternalHO-Arg', mode=MODE_TYPE)
    _NoteInternalHO_Arg_handoverType = ENUM(name='handoverType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'HandoverType')))
    _NoteInternalHO_Arg_targetCellId = OCT_STR(name='targetCellId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'GlobalCellId')), opt=True)
    _NoteInternalHO_Arg_channelId = SEQ(name='channelId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')), opt=True)
    NoteInternalHO_Arg._cont = ASN1Dict([
        ('handoverType', _NoteInternalHO_Arg_handoverType),
        ('targetCellId', _NoteInternalHO_Arg_targetCellId),
        ('channelId', _NoteInternalHO_Arg_channelId),
        ])
    NoteInternalHO_Arg._ext = None
    
    #-----< HandoverType >-----#
    HandoverType = ENUM(name='HandoverType', mode=MODE_TYPE)
    HandoverType._cont = ASN1Dict([('interBSS', 0), ('intraBSS', 1)])
    HandoverType._ext = None
    
    _all_ = [
        _ActivateTraceModeArg_imsi,
        _ActivateTraceModeArg_traceReference,
        _ActivateTraceModeArg_traceType,
        _ActivateTraceModeArg_omc_Id,
        ActivateTraceModeArg,
        TraceReference,
        TraceType,
        _DeactivateTraceModeArg_imsi,
        _DeactivateTraceModeArg_traceReference,
        DeactivateTraceModeArg,
        _TraceSubscriberActivityArg_imsi,
        _TraceSubscriberActivityArg_traceReference,
        _TraceSubscriberActivityArg_traceType,
        _TraceSubscriberActivityArg_omc_Id,
        _TraceSubscriberActivityArg_callReference,
        TraceSubscriberActivityArg,
        CallReference,
        _NoteInternalHO_Arg_handoverType,
        _NoteInternalHO_Arg_targetCellId,
        _NoteInternalHO_Arg_channelId,
        NoteInternalHO_Arg,
        HandoverType,
    ]

class MAPv2_OperationAndMaintenanceOperations:

    _name_  = 'MAPv2-OperationAndMaintenanceOperations'
    _oid_   = []
    
    _obj_ = [
        'activateTraceMode',
        'deactivateTraceMode',
        'traceSubscriberActivity',
        'noteInternalHandover',
        'sendIMSI',
        ]
    _type_ = [
        ]
    _set_ = [
        ]
    _val_ = [
        'activateTraceMode',
        'deactivateTraceMode',
        'traceSubscriberActivity',
        'noteInternalHandover',
        'sendIMSI',
        ]
    _class_ = [
        'activateTraceMode',
        'deactivateTraceMode',
        'traceSubscriberActivity',
        'noteInternalHandover',
        'sendIMSI',
        ]
    _param_ = [
        ]
    
    #-----< activateTraceMode >-----#
    activateTraceMode = CLASS(name='activateTraceMode', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _activateTraceMode_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'ActivateTraceModeArg')))
    __sendRoutingInfo_Errors_val_ParameterType_0 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'NetworkResource')))
    activateTraceMode._val = dict([('ArgumentType', _activateTraceMode_val_ArgumentType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))])
    
    #-----< deactivateTraceMode >-----#
    deactivateTraceMode = CLASS(name='deactivateTraceMode', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _deactivateTraceMode_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'DeactivateTraceModeArg')))
    deactivateTraceMode._val = dict([('ArgumentType', _deactivateTraceMode_val_ArgumentType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 51))])
    
    #-----< traceSubscriberActivity >-----#
    traceSubscriberActivity = CLASS(name='traceSubscriberActivity', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _traceSubscriberActivity_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'TraceSubscriberActivityArg')))
    traceSubscriberActivity._val = dict([('ArgumentType', _traceSubscriberActivity_val_ArgumentType), ('operationCode', ('local', 52))])
    
    #-----< noteInternalHandover >-----#
    noteInternalHandover = CLASS(name='noteInternalHandover', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _noteInternalHandover_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'NoteInternalHO-Arg')))
    noteInternalHandover._val = dict([('ArgumentType', _noteInternalHandover_val_ArgumentType), ('operationCode', ('local', 35))])
    
    #-----< sendIMSI >-----#
    sendIMSI = CLASS(name='sendIMSI', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _sendIMSI_val_ArgumentType = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _sendIMSI_val_ResultType = OCT_STR(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    sendIMSI._val = dict([('ArgumentType', _sendIMSI_val_ArgumentType), ('ResultType', _sendIMSI_val_ResultType), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 58))])
    
    _all_ = [
        activateTraceMode,
        _activateTraceMode_val_ArgumentType,
        __sendRoutingInfo_Errors_val_ParameterType_0,
        deactivateTraceMode,
        _deactivateTraceMode_val_ArgumentType,
        traceSubscriberActivity,
        _traceSubscriberActivity_val_ArgumentType,
        noteInternalHandover,
        _noteInternalHandover_val_ArgumentType,
        sendIMSI,
        _sendIMSI_val_ArgumentType,
        _sendIMSI_val_ResultType,
    ]

class MAPv2_Protocol:

    _name_  = 'MAPv2-Protocol'
    _oid_   = []
    
    _obj_ = [
        'Supported-MAPv2-Operations',
        ]
    _type_ = [
        ]
    _set_ = [
        'Supported-MAPv2-Operations',
        ]
    _val_ = [
        ]
    _class_ = [
        'Supported-MAPv2-Operations',
        ]
    _param_ = [
        ]
    
    #-----< Supported-MAPv2-Operations >-----#
    Supported_MAPv2_Operations = CLASS(name='Supported-MAPv2-Operations', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _Supported_MAPv2_Operations_val_ArgumentType_0 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CH-DataTypes', 'SendRoutingInfoArg')))
    _Supported_MAPv2_Operations_val_ResultType_0 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CH-DataTypes', 'SendRoutingInfoRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'NetworkResource')))
    __sendRoutingInfo_Errors_val_ParameterType_8 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    __sendRoutingInfo_Errors_val_ParameterType_9 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    __sendRoutingInfo_Errors_val_ParameterType_10 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CUG-RejectCause')))
    _Supported_MAPv2_Operations_val_ArgumentType_1 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CH-DataTypes', 'ProvideRoamingNumberArg')))
    _Supported_MAPv2_Operations_val_ResultType_1 = OCT_STR(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    __sendRoutingInfo_Errors_val_ParameterType_4 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    _Supported_MAPv2_Operations_val_ArgumentType_2 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'UpdateLocationArg')))
    _Supported_MAPv2_Operations_val_ResultType_2 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'UpdateLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_4_0 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'RoamingNotAllowedCause')))
    _Supported_MAPv2_Operations_val_ArgumentType_3 = CHOICE(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'CancelLocationArg')))
    _Supported_MAPv2_Operations_val_ArgumentType_4 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PurgeMS-Arg')))
    _Supported_MAPv2_Operations_val_ArgumentType_5 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'TMSI')))
    _Supported_MAPv2_Operations_val_ResultType_5 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendIdentificationRes')))
    _Supported_MAPv2_Operations_val_ArgumentType_6 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PrepareHO-Arg')))
    _Supported_MAPv2_Operations_val_ResultType_6 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PrepareHO-Res')))
    _Supported_MAPv2_Operations_val_ArgumentType_7 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PerformHO-Arg')))
    _Supported_MAPv2_Operations_val_ResultType_7 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PerformHO-Res')))
    _Supported_MAPv2_Operations_val_ArgumentType_8 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    _Supported_MAPv2_Operations_val_ArgumentType_9 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    _Supported_MAPv2_Operations_val_ArgumentType_10 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    _Supported_MAPv2_Operations_val_ArgumentType_11 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PrepareSubsequentHO-Arg')))
    _Supported_MAPv2_Operations_val_ResultType_11 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    _Supported_MAPv2_Operations_val_ArgumentType_12 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PerformSubsequentHO-Arg')))
    _Supported_MAPv2_Operations_val_ResultType_12 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    _Supported_MAPv2_Operations_val_ArgumentType_13 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendAuthenticationInfoArg')))
    _Supported_MAPv2_Operations_val_ResultType_13 = SEQ_OF(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendAuthenticationInfoRes')))
    _Supported_MAPv2_Operations_val_ArgumentType_14 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMEI')))
    _Supported_MAPv2_Operations_val_ResultType_14 = ENUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'EquipmentStatus')))
    _Supported_MAPv2_Operations_val_ArgumentType_15 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendParametersArg')))
    _Supported_MAPv2_Operations_val_ResultType_15 = SEQ_OF(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SentParameterList')))
    _Supported_MAPv2_Operations_val_ArgumentType_16 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'InsertSubscriberDataArg')))
    _Supported_MAPv2_Operations_val_ResultType_16 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'InsertSubscriberDataRes')))
    _Supported_MAPv2_Operations_val_ArgumentType_17 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'DeleteSubscriberDataArg')))
    _Supported_MAPv2_Operations_val_ResultType_17 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'DeleteSubscriberDataRes')))
    _Supported_MAPv2_Operations_val_ArgumentType_18 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'ResetArg')))
    _Supported_MAPv2_Operations_val_ArgumentType_20 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'RestoreDataArg')))
    _Supported_MAPv2_Operations_val_ResultType_20 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'RestoreDataRes')))
    _Supported_MAPv2_Operations_val_ArgumentType_21 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'ActivateTraceModeArg')))
    _Supported_MAPv2_Operations_val_ArgumentType_22 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'DeactivateTraceModeArg')))
    _Supported_MAPv2_Operations_val_ArgumentType_23 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'TraceSubscriberActivityArg')))
    _Supported_MAPv2_Operations_val_ArgumentType_24 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'NoteInternalHO-Arg')))
    _Supported_MAPv2_Operations_val_ArgumentType_25 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _Supported_MAPv2_Operations_val_ResultType_25 = OCT_STR(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    _Supported_MAPv2_Operations_val_ArgumentType_26 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'RoutingInfoForSM-Arg')))
    _Supported_MAPv2_Operations_val_ResultType_26 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'RoutingInfoForSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_6 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    __sendRoutingInfo_Errors_val_ParameterType_7 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    _Supported_MAPv2_Operations_val_ArgumentType_27 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'ForwardSM-Arg')))
    __sendRoutingInfo_Errors_val_ParameterType_7_0 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    __sendRoutingInfo_Errors_val_ParameterType_9_0 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'SM-DeliveryFailureCause')))
    _Supported_MAPv2_Operations_val_ArgumentType_28 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'ReportSM-DeliveryStatusArg')))
    _Supported_MAPv2_Operations_val_ResultType_28 = OCT_STR(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _Supported_MAPv2_Operations_val_ArgumentType_29 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    _Supported_MAPv2_Operations_val_ArgumentType_30 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'AlertServiceCentreArg')))
    _Supported_MAPv2_Operations_val_ArgumentType_31 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'AlertServiceCentreArg')))
    _Supported_MAPv2_Operations_val_ArgumentType_32 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'InformServiceCentreArg')))
    _Supported_MAPv2_Operations_val_ArgumentType_33 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'ReadyForSM-Arg')))
    _Supported_MAPv2_Operations_val_ArgumentType_34 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'RegisterSS-Arg')))
    _Supported_MAPv2_Operations_val_ResultType_34 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    __sendRoutingInfo_Errors_val_ParameterType_6_0 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    __sendRoutingInfo_Errors_val_ParameterType_8_0 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Status')))
    __sendRoutingInfo_Errors_val_ParameterType_9_1 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-SubscriptionOption')))
    __sendRoutingInfo_Errors_val_ParameterType_10_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'SS-IncompatibilityCause')))
    _Supported_MAPv2_Operations_val_ArgumentType_35 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    _Supported_MAPv2_Operations_val_ResultType_35 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    _Supported_MAPv2_Operations_val_ArgumentType_36 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    _Supported_MAPv2_Operations_val_ResultType_36 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    _Supported_MAPv2_Operations_val_ArgumentType_37 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    _Supported_MAPv2_Operations_val_ResultType_37 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    _Supported_MAPv2_Operations_val_ArgumentType_38 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    _Supported_MAPv2_Operations_val_ResultType_38 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'InterrogateSS-Res')))
    _Supported_MAPv2_Operations_val_ArgumentType_39 = STR_IA5(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-UserData')))
    _Supported_MAPv2_Operations_val_ResultType_39 = STR_IA5(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-UserData')))
    _Supported_MAPv2_Operations_val_ArgumentType_40 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Arg')))
    _Supported_MAPv2_Operations_val_ResultType_40 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4_1 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    _Supported_MAPv2_Operations_val_ArgumentType_41 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Arg')))
    _Supported_MAPv2_Operations_val_ResultType_41 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_3 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    _Supported_MAPv2_Operations_val_ArgumentType_42 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Arg')))
    _Supported_MAPv2_Operations_val_ArgumentType_43 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    _Supported_MAPv2_Operations_val_ResultType_43 = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'Password')))
    _Supported_MAPv2_Operations_val_ResultType_43._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    __sendRoutingInfo_Errors_val_ParameterType_3_0 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    __sendRoutingInfo_Errors_val_ParameterType_4_2 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-SubscriptionOption')))
    __sendRoutingInfo_Errors_val_ParameterType_5 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'PW-RegistrationFailureCause')))
    __Supported_MAPv2_Operations_Linked_val_ArgumentType_0 = ENUM(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'GuidanceInfo')))
    __Supported_MAPv2_Operations_Linked_val_ResultType_0 = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'Password')))
    __Supported_MAPv2_Operations_Linked_val_ResultType_0._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    _Supported_MAPv2_Operations_val_ArgumentType_44 = ENUM(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'GuidanceInfo')))
    _Supported_MAPv2_Operations_val_ResultType_44 = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'Password')))
    _Supported_MAPv2_Operations_val_ResultType_44._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    _Supported_MAPv2_Operations_val_ArgumentType_45 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'BeginSubscriberActivityArg')))
    Supported_MAPv2_Operations._val = ASN1Set(rv=[dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_0), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_0), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 44))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10), ('errorCode', ('local', 15))]), dict([('errorCode', ('local', 14))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 22))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_1), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 39))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 4))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_2), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 2))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_3), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 3))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_4), ('operationCode', ('local', 67))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_5), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_5), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 55))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_6), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_6), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 25))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 68))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_7), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_7), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 2))]), dict([('errorCode', ('local', 23))]), dict([('errorCode', ('local', 24))]), dict([('errorCode', ('local', 25))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 28))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_8), ('operationCode', ('local', 29))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_9), ('operationCode', ('local', 33))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_10), ('operationCode', ('local', 34))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_11), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_11), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_12), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_12), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 2))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 23))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 30))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_13), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_13), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 56))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_14), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_14), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 7))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 43))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_15), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_15), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 9))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_16), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_16), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_17), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_17), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 8))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_18), ('operationCode', ('local', 37))]), dict([('operationCode', ('local', 38))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_20), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_20), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 57))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_21), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_22), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 51))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_23), ('operationCode', ('local', 52))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_24), ('operationCode', ('local', 35))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_25), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_25), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 58))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_26), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_26), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_27), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_0), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_0), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_28), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_28), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_29), ('operationCode', ('local', 48))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_30), ('operationCode', ('local', 49))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_31), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 64))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_32), ('operationCode', ('local', 63))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_33), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 66))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_34), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_34), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_0), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_0), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_0), ('errorCode', ('local', 20))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 10))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_35), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_35), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_0), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_0), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 11))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_36), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_36), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_0), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_0), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_0), ('errorCode', ('local', 20))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 12))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_37), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_37), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_0), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_0), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 13))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_38), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_38), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_0), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('errorCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 14))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_39), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_39), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 19))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_40), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_40), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 71))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 59))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_41), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_41), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 60))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_42), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 61))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_43), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_43), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_2), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 37))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('Linked', ASN1Set(rv=[dict([('ArgumentType', __Supported_MAPv2_Operations_Linked_val_ArgumentType_0), ('ResultType', __Supported_MAPv2_Operations_Linked_val_ResultType_0), ('operationCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 17))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_44), ('ResultType', _Supported_MAPv2_Operations_val_ResultType_44), ('operationCode', ('local', 18))]), dict([('ArgumentType', _Supported_MAPv2_Operations_val_ArgumentType_45), ('operationCode', ('local', 54))])], rr=[], ev=None, er=[])
    
    _all_ = [
        Supported_MAPv2_Operations,
        _Supported_MAPv2_Operations_val_ArgumentType_0,
        _Supported_MAPv2_Operations_val_ResultType_0,
        __sendRoutingInfo_Errors_val_ParameterType_0,
        __sendRoutingInfo_Errors_val_ParameterType_8,
        __sendRoutingInfo_Errors_val_ParameterType_9,
        __sendRoutingInfo_Errors_val_ParameterType_10,
        _Supported_MAPv2_Operations_val_ArgumentType_1,
        _Supported_MAPv2_Operations_val_ResultType_1,
        __sendRoutingInfo_Errors_val_ParameterType_4,
        _Supported_MAPv2_Operations_val_ArgumentType_2,
        _Supported_MAPv2_Operations_val_ResultType_2,
        __sendRoutingInfo_Errors_val_ParameterType_4_0,
        _Supported_MAPv2_Operations_val_ArgumentType_3,
        _Supported_MAPv2_Operations_val_ArgumentType_4,
        _Supported_MAPv2_Operations_val_ArgumentType_5,
        _Supported_MAPv2_Operations_val_ResultType_5,
        _Supported_MAPv2_Operations_val_ArgumentType_6,
        _Supported_MAPv2_Operations_val_ResultType_6,
        _Supported_MAPv2_Operations_val_ArgumentType_7,
        _Supported_MAPv2_Operations_val_ResultType_7,
        _Supported_MAPv2_Operations_val_ArgumentType_8,
        _Supported_MAPv2_Operations_val_ArgumentType_9,
        _Supported_MAPv2_Operations_val_ArgumentType_10,
        _Supported_MAPv2_Operations_val_ArgumentType_11,
        _Supported_MAPv2_Operations_val_ResultType_11,
        _Supported_MAPv2_Operations_val_ArgumentType_12,
        _Supported_MAPv2_Operations_val_ResultType_12,
        _Supported_MAPv2_Operations_val_ArgumentType_13,
        _Supported_MAPv2_Operations_val_ResultType_13,
        _Supported_MAPv2_Operations_val_ArgumentType_14,
        _Supported_MAPv2_Operations_val_ResultType_14,
        _Supported_MAPv2_Operations_val_ArgumentType_15,
        _Supported_MAPv2_Operations_val_ResultType_15,
        _Supported_MAPv2_Operations_val_ArgumentType_16,
        _Supported_MAPv2_Operations_val_ResultType_16,
        _Supported_MAPv2_Operations_val_ArgumentType_17,
        _Supported_MAPv2_Operations_val_ResultType_17,
        _Supported_MAPv2_Operations_val_ArgumentType_18,
        _Supported_MAPv2_Operations_val_ArgumentType_20,
        _Supported_MAPv2_Operations_val_ResultType_20,
        _Supported_MAPv2_Operations_val_ArgumentType_21,
        _Supported_MAPv2_Operations_val_ArgumentType_22,
        _Supported_MAPv2_Operations_val_ArgumentType_23,
        _Supported_MAPv2_Operations_val_ArgumentType_24,
        _Supported_MAPv2_Operations_val_ArgumentType_25,
        _Supported_MAPv2_Operations_val_ResultType_25,
        _Supported_MAPv2_Operations_val_ArgumentType_26,
        _Supported_MAPv2_Operations_val_ResultType_26,
        __sendRoutingInfo_Errors_val_ParameterType_6,
        __sendRoutingInfo_Errors_val_ParameterType_7,
        _Supported_MAPv2_Operations_val_ArgumentType_27,
        __sendRoutingInfo_Errors_val_ParameterType_7_0,
        __sendRoutingInfo_Errors_val_ParameterType_9_0,
        _Supported_MAPv2_Operations_val_ArgumentType_28,
        _Supported_MAPv2_Operations_val_ResultType_28,
        _Supported_MAPv2_Operations_val_ArgumentType_29,
        _Supported_MAPv2_Operations_val_ArgumentType_30,
        _Supported_MAPv2_Operations_val_ArgumentType_31,
        _Supported_MAPv2_Operations_val_ArgumentType_32,
        _Supported_MAPv2_Operations_val_ArgumentType_33,
        _Supported_MAPv2_Operations_val_ArgumentType_34,
        _Supported_MAPv2_Operations_val_ResultType_34,
        __sendRoutingInfo_Errors_val_ParameterType_6_0,
        __sendRoutingInfo_Errors_val_ParameterType_8_0,
        __sendRoutingInfo_Errors_val_ParameterType_9_1,
        __sendRoutingInfo_Errors_val_ParameterType_10_0,
        _Supported_MAPv2_Operations_val_ArgumentType_35,
        _Supported_MAPv2_Operations_val_ResultType_35,
        _Supported_MAPv2_Operations_val_ArgumentType_36,
        _Supported_MAPv2_Operations_val_ResultType_36,
        _Supported_MAPv2_Operations_val_ArgumentType_37,
        _Supported_MAPv2_Operations_val_ResultType_37,
        _Supported_MAPv2_Operations_val_ArgumentType_38,
        _Supported_MAPv2_Operations_val_ResultType_38,
        _Supported_MAPv2_Operations_val_ArgumentType_39,
        _Supported_MAPv2_Operations_val_ResultType_39,
        _Supported_MAPv2_Operations_val_ArgumentType_40,
        _Supported_MAPv2_Operations_val_ResultType_40,
        __sendRoutingInfo_Errors_val_ParameterType_4_1,
        _Supported_MAPv2_Operations_val_ArgumentType_41,
        _Supported_MAPv2_Operations_val_ResultType_41,
        __sendRoutingInfo_Errors_val_ParameterType_3,
        _Supported_MAPv2_Operations_val_ArgumentType_42,
        _Supported_MAPv2_Operations_val_ArgumentType_43,
        _Supported_MAPv2_Operations_val_ResultType_43,
        __sendRoutingInfo_Errors_val_ParameterType_3_0,
        __sendRoutingInfo_Errors_val_ParameterType_4_2,
        __sendRoutingInfo_Errors_val_ParameterType_5,
        __Supported_MAPv2_Operations_Linked_val_ArgumentType_0,
        __Supported_MAPv2_Operations_Linked_val_ResultType_0,
        _Supported_MAPv2_Operations_val_ArgumentType_44,
        _Supported_MAPv2_Operations_val_ResultType_44,
        _Supported_MAPv2_Operations_val_ArgumentType_45,
    ]

class MAPv2_SM_DataTypes:

    _name_  = 'MAPv2-SM-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 16, 2]
    
    _obj_ = [
        'RoutingInfoForSM-Arg',
        'RoutingInfoForSM-Res',
        'LocationInfoWithLMSI',
        'ForwardSM-Arg',
        'SM-RP-DA',
        'SM-RP-OA',
        'ReportSM-DeliveryStatusArg',
        'SM-DeliveryOutcome',
        'AlertServiceCentreArg',
        'InformServiceCentreArg',
        'MW-Status',
        'ReadyForSM-Arg',
        'AlertReason',
        ]
    _type_ = [
        'RoutingInfoForSM-Arg',
        'RoutingInfoForSM-Res',
        'LocationInfoWithLMSI',
        'ForwardSM-Arg',
        'SM-RP-DA',
        'SM-RP-OA',
        'ReportSM-DeliveryStatusArg',
        'SM-DeliveryOutcome',
        'AlertServiceCentreArg',
        'InformServiceCentreArg',
        'MW-Status',
        'ReadyForSM-Arg',
        'AlertReason',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< RoutingInfoForSM-Arg >-----#
    RoutingInfoForSM_Arg = SEQ(name='RoutingInfoForSM-Arg', mode=MODE_TYPE)
    _RoutingInfoForSM_Arg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _RoutingInfoForSM_Arg_sm_RP_PRI = BOOL(name='sm-RP-PRI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RoutingInfoForSM_Arg_serviceCentreAddress = OCT_STR(name='serviceCentreAddress', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'AddressString')))
    _RoutingInfoForSM_Arg_teleservice = OCT_STR(name='teleservice', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')), opt=True)
    RoutingInfoForSM_Arg._cont = ASN1Dict([
        ('msisdn', _RoutingInfoForSM_Arg_msisdn),
        ('sm-RP-PRI', _RoutingInfoForSM_Arg_sm_RP_PRI),
        ('serviceCentreAddress', _RoutingInfoForSM_Arg_serviceCentreAddress),
        ('teleservice', _RoutingInfoForSM_Arg_teleservice),
        ])
    RoutingInfoForSM_Arg._ext = []
    
    #-----< RoutingInfoForSM-Res >-----#
    RoutingInfoForSM_Res = SEQ(name='RoutingInfoForSM-Res', mode=MODE_TYPE)
    _RoutingInfoForSM_Res_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    _RoutingInfoForSM_Res_locationInfoWithLMSI = SEQ(name='locationInfoWithLMSI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'LocationInfoWithLMSI')))
    _RoutingInfoForSM_Res_mwd_Set = BOOL(name='mwd-Set', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    RoutingInfoForSM_Res._cont = ASN1Dict([
        ('imsi', _RoutingInfoForSM_Res_imsi),
        ('locationInfoWithLMSI', _RoutingInfoForSM_Res_locationInfoWithLMSI),
        ('mwd-Set', _RoutingInfoForSM_Res_mwd_Set),
        ])
    RoutingInfoForSM_Res._ext = []
    
    #-----< LocationInfoWithLMSI >-----#
    LocationInfoWithLMSI = SEQ(name='LocationInfoWithLMSI', mode=MODE_TYPE)
    _LocationInfoWithLMSI_locationInfo = CHOICE(name='locationInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'LocationInfo')))
    _LocationInfoWithLMSI_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'LMSI')), opt=True)
    LocationInfoWithLMSI._cont = ASN1Dict([
        ('locationInfo', _LocationInfoWithLMSI_locationInfo),
        ('lmsi', _LocationInfoWithLMSI_lmsi),
        ])
    LocationInfoWithLMSI._ext = []
    
    #-----< ForwardSM-Arg >-----#
    ForwardSM_Arg = SEQ(name='ForwardSM-Arg', mode=MODE_TYPE)
    _ForwardSM_Arg_sm_RP_DA = CHOICE(name='sm-RP-DA', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'SM-RP-DA')))
    _ForwardSM_Arg_sm_RP_OA = CHOICE(name='sm-RP-OA', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'SM-RP-OA')))
    _ForwardSM_Arg_sm_RP_UI = OCT_STR(name='sm-RP-UI', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'SignalInfo')))
    _ForwardSM_Arg_moreMessagesToSend = NULL(name='moreMessagesToSend', mode=MODE_TYPE, opt=True)
    ForwardSM_Arg._cont = ASN1Dict([
        ('sm-RP-DA', _ForwardSM_Arg_sm_RP_DA),
        ('sm-RP-OA', _ForwardSM_Arg_sm_RP_OA),
        ('sm-RP-UI', _ForwardSM_Arg_sm_RP_UI),
        ('moreMessagesToSend', _ForwardSM_Arg_moreMessagesToSend),
        ])
    ForwardSM_Arg._ext = []
    
    #-----< SM-RP-DA >-----#
    SM_RP_DA = CHOICE(name='SM-RP-DA', mode=MODE_TYPE)
    _SM_RP_DA_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    _SM_RP_DA_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'LMSI')))
    _SM_RP_DA_roamingNumber = OCT_STR(name='roamingNumber', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _SM_RP_DA_serviceCentreAddressDA = OCT_STR(name='serviceCentreAddressDA', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'AddressString')))
    _SM_RP_DA_noSM_RP_DA = NULL(name='noSM-RP-DA', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SM_RP_DA._cont = ASN1Dict([
        ('imsi', _SM_RP_DA_imsi),
        ('lmsi', _SM_RP_DA_lmsi),
        ('roamingNumber', _SM_RP_DA_roamingNumber),
        ('serviceCentreAddressDA', _SM_RP_DA_serviceCentreAddressDA),
        ('noSM-RP-DA', _SM_RP_DA_noSM_RP_DA),
        ])
    SM_RP_DA._ext = None
    
    #-----< SM-RP-OA >-----#
    SM_RP_OA = CHOICE(name='SM-RP-OA', mode=MODE_TYPE)
    _SM_RP_OA_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _SM_RP_OA_serviceCentreAddressOA = OCT_STR(name='serviceCentreAddressOA', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'AddressString')))
    _SM_RP_OA_noSM_RP_OA = NULL(name='noSM-RP-OA', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SM_RP_OA._cont = ASN1Dict([
        ('msisdn', _SM_RP_OA_msisdn),
        ('serviceCentreAddressOA', _SM_RP_OA_serviceCentreAddressOA),
        ('noSM-RP-OA', _SM_RP_OA_noSM_RP_OA),
        ])
    SM_RP_OA._ext = None
    
    #-----< ReportSM-DeliveryStatusArg >-----#
    ReportSM_DeliveryStatusArg = SEQ(name='ReportSM-DeliveryStatusArg', mode=MODE_TYPE)
    _ReportSM_DeliveryStatusArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _ReportSM_DeliveryStatusArg_serviceCentreAddress = OCT_STR(name='serviceCentreAddress', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'AddressString')))
    _ReportSM_DeliveryStatusArg_sm_DeliveryOutcome = ENUM(name='sm-DeliveryOutcome', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'SM-DeliveryOutcome')), opt=True)
    ReportSM_DeliveryStatusArg._cont = ASN1Dict([
        ('msisdn', _ReportSM_DeliveryStatusArg_msisdn),
        ('serviceCentreAddress', _ReportSM_DeliveryStatusArg_serviceCentreAddress),
        ('sm-DeliveryOutcome', _ReportSM_DeliveryStatusArg_sm_DeliveryOutcome),
        ])
    ReportSM_DeliveryStatusArg._ext = []
    
    #-----< SM-DeliveryOutcome >-----#
    SM_DeliveryOutcome = ENUM(name='SM-DeliveryOutcome', mode=MODE_TYPE)
    SM_DeliveryOutcome._cont = ASN1Dict([('memoryCapacityExceeded', 0), ('absentSubscriber', 1), ('successfulTransfer', 2)])
    SM_DeliveryOutcome._ext = None
    
    #-----< AlertServiceCentreArg >-----#
    AlertServiceCentreArg = SEQ(name='AlertServiceCentreArg', mode=MODE_TYPE)
    _AlertServiceCentreArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _AlertServiceCentreArg_serviceCentreAddress = OCT_STR(name='serviceCentreAddress', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'AddressString')))
    AlertServiceCentreArg._cont = ASN1Dict([
        ('msisdn', _AlertServiceCentreArg_msisdn),
        ('serviceCentreAddress', _AlertServiceCentreArg_serviceCentreAddress),
        ])
    AlertServiceCentreArg._ext = []
    
    #-----< InformServiceCentreArg >-----#
    InformServiceCentreArg = SEQ(name='InformServiceCentreArg', mode=MODE_TYPE)
    _InformServiceCentreArg_storedMSISDN = OCT_STR(name='storedMSISDN', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _InformServiceCentreArg_mw_Status = BIT_STR(name='mw-Status', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'MW-Status')), opt=True)
    InformServiceCentreArg._cont = ASN1Dict([
        ('storedMSISDN', _InformServiceCentreArg_storedMSISDN),
        ('mw-Status', _InformServiceCentreArg_mw_Status),
        ])
    InformServiceCentreArg._ext = []
    
    #-----< MW-Status >-----#
    MW_Status = BIT_STR(name='MW-Status', mode=MODE_TYPE)
    MW_Status._cont = ASN1Dict([('sc-AddressNotIncluded', 0), ('mnrf-Set', 1), ('mcef-Set', 2)])
    MW_Status._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    
    #-----< ReadyForSM-Arg >-----#
    ReadyForSM_Arg = SEQ(name='ReadyForSM-Arg', mode=MODE_TYPE)
    _ReadyForSM_Arg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    _ReadyForSM_Arg_alertReason = ENUM(name='alertReason', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'AlertReason')))
    ReadyForSM_Arg._cont = ASN1Dict([
        ('imsi', _ReadyForSM_Arg_imsi),
        ('alertReason', _ReadyForSM_Arg_alertReason),
        ])
    ReadyForSM_Arg._ext = []
    
    #-----< AlertReason >-----#
    AlertReason = ENUM(name='AlertReason', mode=MODE_TYPE)
    AlertReason._cont = ASN1Dict([('ms-Present', 0), ('memoryAvailable', 1)])
    AlertReason._ext = None
    
    _all_ = [
        _RoutingInfoForSM_Arg_msisdn,
        _RoutingInfoForSM_Arg_sm_RP_PRI,
        _RoutingInfoForSM_Arg_serviceCentreAddress,
        _RoutingInfoForSM_Arg_teleservice,
        RoutingInfoForSM_Arg,
        _RoutingInfoForSM_Res_imsi,
        _RoutingInfoForSM_Res_locationInfoWithLMSI,
        _RoutingInfoForSM_Res_mwd_Set,
        RoutingInfoForSM_Res,
        _LocationInfoWithLMSI_locationInfo,
        _LocationInfoWithLMSI_lmsi,
        LocationInfoWithLMSI,
        _ForwardSM_Arg_sm_RP_DA,
        _ForwardSM_Arg_sm_RP_OA,
        _ForwardSM_Arg_sm_RP_UI,
        _ForwardSM_Arg_moreMessagesToSend,
        ForwardSM_Arg,
        _SM_RP_DA_imsi,
        _SM_RP_DA_lmsi,
        _SM_RP_DA_roamingNumber,
        _SM_RP_DA_serviceCentreAddressDA,
        _SM_RP_DA_noSM_RP_DA,
        SM_RP_DA,
        _SM_RP_OA_msisdn,
        _SM_RP_OA_serviceCentreAddressOA,
        _SM_RP_OA_noSM_RP_OA,
        SM_RP_OA,
        _ReportSM_DeliveryStatusArg_msisdn,
        _ReportSM_DeliveryStatusArg_serviceCentreAddress,
        _ReportSM_DeliveryStatusArg_sm_DeliveryOutcome,
        ReportSM_DeliveryStatusArg,
        SM_DeliveryOutcome,
        _AlertServiceCentreArg_msisdn,
        _AlertServiceCentreArg_serviceCentreAddress,
        AlertServiceCentreArg,
        _InformServiceCentreArg_storedMSISDN,
        _InformServiceCentreArg_mw_Status,
        InformServiceCentreArg,
        MW_Status,
        _ReadyForSM_Arg_imsi,
        _ReadyForSM_Arg_alertReason,
        ReadyForSM_Arg,
        AlertReason,
    ]

class MAPv2_SS_Code:

    _name_  = 'MAPv2-SS-Code'
    _oid_   = [0, 4, 0, 0, 1, 3, 15, 2]
    
    _obj_ = [
        'SS-Code',
        'allSS',
        'allLineIdentificationSS',
        'clip',
        'clir',
        'colp',
        'colr',
        'mci',
        'allForwardingSS',
        'cfu',
        'allCondForwardingSS',
        'cfb',
        'cfnry',
        'cfnrc',
        'allCallOfferingSS',
        'ct',
        'mah',
        'allCallCompletionSS',
        'cw',
        'hold',
        'ccbs',
        'allMultiPartySS',
        'multiPTY',
        'allCommunityOfInterest-SS',
        'cug',
        'allChargingSS',
        'aoci',
        'aocc',
        'allAdditionalInfoTransferSS',
        'uus',
        'allBarringSS',
        'barringOfOutgoingCalls',
        'baoc',
        'boic',
        'boicExHC',
        'barringOfIncomingCalls',
        'baic',
        'bicRoam',
        'allPLMN-specificSS',
        'plmn-specificSS-1',
        'plmn-specificSS-2',
        'plmn-specificSS-3',
        'plmn-specificSS-4',
        'plmn-specificSS-5',
        'plmn-specificSS-6',
        'plmn-specificSS-7',
        'plmn-specificSS-8',
        'plmn-specificSS-9',
        'plmn-specificSS-A',
        'plmn-specificSS-B',
        'plmn-specificSS-C',
        'plmn-specificSS-D',
        'plmn-specificSS-E',
        'plmn-specificSS-F',
        ]
    _type_ = [
        'SS-Code',
        ]
    _set_ = [
        ]
    _val_ = [
        'allSS',
        'allLineIdentificationSS',
        'clip',
        'clir',
        'colp',
        'colr',
        'mci',
        'allForwardingSS',
        'cfu',
        'allCondForwardingSS',
        'cfb',
        'cfnry',
        'cfnrc',
        'allCallOfferingSS',
        'ct',
        'mah',
        'allCallCompletionSS',
        'cw',
        'hold',
        'ccbs',
        'allMultiPartySS',
        'multiPTY',
        'allCommunityOfInterest-SS',
        'cug',
        'allChargingSS',
        'aoci',
        'aocc',
        'allAdditionalInfoTransferSS',
        'uus',
        'allBarringSS',
        'barringOfOutgoingCalls',
        'baoc',
        'boic',
        'boicExHC',
        'barringOfIncomingCalls',
        'baic',
        'bicRoam',
        'allPLMN-specificSS',
        'plmn-specificSS-1',
        'plmn-specificSS-2',
        'plmn-specificSS-3',
        'plmn-specificSS-4',
        'plmn-specificSS-5',
        'plmn-specificSS-6',
        'plmn-specificSS-7',
        'plmn-specificSS-8',
        'plmn-specificSS-9',
        'plmn-specificSS-A',
        'plmn-specificSS-B',
        'plmn-specificSS-C',
        'plmn-specificSS-D',
        'plmn-specificSS-E',
        'plmn-specificSS-F',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< SS-Code >-----#
    SS_Code = OCT_STR(name='SS-Code', mode=MODE_TYPE)
    SS_Code._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< allSS >-----#
    allSS = OCT_STR(name='allSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    allSS._val = b'\x00'
    
    #-----< allLineIdentificationSS >-----#
    allLineIdentificationSS = OCT_STR(name='allLineIdentificationSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    allLineIdentificationSS._val = b'\x10'
    
    #-----< clip >-----#
    clip = OCT_STR(name='clip', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    clip._val = b'\x11'
    
    #-----< clir >-----#
    clir = OCT_STR(name='clir', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    clir._val = b'\x12'
    
    #-----< colp >-----#
    colp = OCT_STR(name='colp', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    colp._val = b'\x13'
    
    #-----< colr >-----#
    colr = OCT_STR(name='colr', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    colr._val = b'\x14'
    
    #-----< mci >-----#
    mci = OCT_STR(name='mci', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    mci._val = b'\x15'
    
    #-----< allForwardingSS >-----#
    allForwardingSS = OCT_STR(name='allForwardingSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    allForwardingSS._val = b' '
    
    #-----< cfu >-----#
    cfu = OCT_STR(name='cfu', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    cfu._val = b'!'
    
    #-----< allCondForwardingSS >-----#
    allCondForwardingSS = OCT_STR(name='allCondForwardingSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    allCondForwardingSS._val = b'('
    
    #-----< cfb >-----#
    cfb = OCT_STR(name='cfb', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    cfb._val = b')'
    
    #-----< cfnry >-----#
    cfnry = OCT_STR(name='cfnry', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    cfnry._val = b'*'
    
    #-----< cfnrc >-----#
    cfnrc = OCT_STR(name='cfnrc', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    cfnrc._val = b'+'
    
    #-----< allCallOfferingSS >-----#
    allCallOfferingSS = OCT_STR(name='allCallOfferingSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    allCallOfferingSS._val = b'0'
    
    #-----< ct >-----#
    ct = OCT_STR(name='ct', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    ct._val = b'1'
    
    #-----< mah >-----#
    mah = OCT_STR(name='mah', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    mah._val = b'2'
    
    #-----< allCallCompletionSS >-----#
    allCallCompletionSS = OCT_STR(name='allCallCompletionSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    allCallCompletionSS._val = b'@'
    
    #-----< cw >-----#
    cw = OCT_STR(name='cw', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    cw._val = b'A'
    
    #-----< hold >-----#
    hold = OCT_STR(name='hold', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    hold._val = b'B'
    
    #-----< ccbs >-----#
    ccbs = OCT_STR(name='ccbs', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    ccbs._val = b'C'
    
    #-----< allMultiPartySS >-----#
    allMultiPartySS = OCT_STR(name='allMultiPartySS', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    allMultiPartySS._val = b'P'
    
    #-----< multiPTY >-----#
    multiPTY = OCT_STR(name='multiPTY', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    multiPTY._val = b'Q'
    
    #-----< allCommunityOfInterest-SS >-----#
    allCommunityOfInterest_SS = OCT_STR(name='allCommunityOfInterest-SS', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    allCommunityOfInterest_SS._val = b'`'
    
    #-----< cug >-----#
    cug = OCT_STR(name='cug', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    cug._val = b'a'
    
    #-----< allChargingSS >-----#
    allChargingSS = OCT_STR(name='allChargingSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    allChargingSS._val = b'p'
    
    #-----< aoci >-----#
    aoci = OCT_STR(name='aoci', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    aoci._val = b'q'
    
    #-----< aocc >-----#
    aocc = OCT_STR(name='aocc', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    aocc._val = b'r'
    
    #-----< allAdditionalInfoTransferSS >-----#
    allAdditionalInfoTransferSS = OCT_STR(name='allAdditionalInfoTransferSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    allAdditionalInfoTransferSS._val = b'\x80'
    
    #-----< uus >-----#
    uus = OCT_STR(name='uus', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    uus._val = b'\x81'
    
    #-----< allBarringSS >-----#
    allBarringSS = OCT_STR(name='allBarringSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    allBarringSS._val = b'\x90'
    
    #-----< barringOfOutgoingCalls >-----#
    barringOfOutgoingCalls = OCT_STR(name='barringOfOutgoingCalls', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    barringOfOutgoingCalls._val = b'\x91'
    
    #-----< baoc >-----#
    baoc = OCT_STR(name='baoc', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    baoc._val = b'\x92'
    
    #-----< boic >-----#
    boic = OCT_STR(name='boic', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    boic._val = b'\x93'
    
    #-----< boicExHC >-----#
    boicExHC = OCT_STR(name='boicExHC', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    boicExHC._val = b'\x94'
    
    #-----< barringOfIncomingCalls >-----#
    barringOfIncomingCalls = OCT_STR(name='barringOfIncomingCalls', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    barringOfIncomingCalls._val = b'\x99'
    
    #-----< baic >-----#
    baic = OCT_STR(name='baic', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    baic._val = b'\x9a'
    
    #-----< bicRoam >-----#
    bicRoam = OCT_STR(name='bicRoam', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    bicRoam._val = b'\x9b'
    
    #-----< allPLMN-specificSS >-----#
    allPLMN_specificSS = OCT_STR(name='allPLMN-specificSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    allPLMN_specificSS._val = b'\xf0'
    
    #-----< plmn-specificSS-1 >-----#
    plmn_specificSS_1 = OCT_STR(name='plmn-specificSS-1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    plmn_specificSS_1._val = b'\xf1'
    
    #-----< plmn-specificSS-2 >-----#
    plmn_specificSS_2 = OCT_STR(name='plmn-specificSS-2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    plmn_specificSS_2._val = b'\xf2'
    
    #-----< plmn-specificSS-3 >-----#
    plmn_specificSS_3 = OCT_STR(name='plmn-specificSS-3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    plmn_specificSS_3._val = b'\xf3'
    
    #-----< plmn-specificSS-4 >-----#
    plmn_specificSS_4 = OCT_STR(name='plmn-specificSS-4', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    plmn_specificSS_4._val = b'\xf4'
    
    #-----< plmn-specificSS-5 >-----#
    plmn_specificSS_5 = OCT_STR(name='plmn-specificSS-5', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    plmn_specificSS_5._val = b'\xf5'
    
    #-----< plmn-specificSS-6 >-----#
    plmn_specificSS_6 = OCT_STR(name='plmn-specificSS-6', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    plmn_specificSS_6._val = b'\xf6'
    
    #-----< plmn-specificSS-7 >-----#
    plmn_specificSS_7 = OCT_STR(name='plmn-specificSS-7', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    plmn_specificSS_7._val = b'\xf7'
    
    #-----< plmn-specificSS-8 >-----#
    plmn_specificSS_8 = OCT_STR(name='plmn-specificSS-8', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    plmn_specificSS_8._val = b'\xf8'
    
    #-----< plmn-specificSS-9 >-----#
    plmn_specificSS_9 = OCT_STR(name='plmn-specificSS-9', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    plmn_specificSS_9._val = b'\xf9'
    
    #-----< plmn-specificSS-A >-----#
    plmn_specificSS_A = OCT_STR(name='plmn-specificSS-A', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    plmn_specificSS_A._val = b'\xfa'
    
    #-----< plmn-specificSS-B >-----#
    plmn_specificSS_B = OCT_STR(name='plmn-specificSS-B', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    plmn_specificSS_B._val = b'\xfb'
    
    #-----< plmn-specificSS-C >-----#
    plmn_specificSS_C = OCT_STR(name='plmn-specificSS-C', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    plmn_specificSS_C._val = b'\xfc'
    
    #-----< plmn-specificSS-D >-----#
    plmn_specificSS_D = OCT_STR(name='plmn-specificSS-D', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    plmn_specificSS_D._val = b'\xfd'
    
    #-----< plmn-specificSS-E >-----#
    plmn_specificSS_E = OCT_STR(name='plmn-specificSS-E', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    plmn_specificSS_E._val = b'\xfe'
    
    #-----< plmn-specificSS-F >-----#
    plmn_specificSS_F = OCT_STR(name='plmn-specificSS-F', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    plmn_specificSS_F._val = b'\xff'
    
    _all_ = [
        SS_Code,
        allSS,
        allLineIdentificationSS,
        clip,
        clir,
        colp,
        colr,
        mci,
        allForwardingSS,
        cfu,
        allCondForwardingSS,
        cfb,
        cfnry,
        cfnrc,
        allCallOfferingSS,
        ct,
        mah,
        allCallCompletionSS,
        cw,
        hold,
        ccbs,
        allMultiPartySS,
        multiPTY,
        allCommunityOfInterest_SS,
        cug,
        allChargingSS,
        aoci,
        aocc,
        allAdditionalInfoTransferSS,
        uus,
        allBarringSS,
        barringOfOutgoingCalls,
        baoc,
        boic,
        boicExHC,
        barringOfIncomingCalls,
        baic,
        bicRoam,
        allPLMN_specificSS,
        plmn_specificSS_1,
        plmn_specificSS_2,
        plmn_specificSS_3,
        plmn_specificSS_4,
        plmn_specificSS_5,
        plmn_specificSS_6,
        plmn_specificSS_7,
        plmn_specificSS_8,
        plmn_specificSS_9,
        plmn_specificSS_A,
        plmn_specificSS_B,
        plmn_specificSS_C,
        plmn_specificSS_D,
        plmn_specificSS_E,
        plmn_specificSS_F,
    ]

class MAPv2_SS_DataTypes:

    _name_  = 'MAPv2-SS-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 14, 2]
    
    _obj_ = [
        'RegisterSS-Arg',
        'NoReplyConditionTime',
        'SS-Info',
        'ForwardingInfo',
        'ForwardingFeatureList',
        'ForwardingFeature',
        'SS-Status',
        'ForwardingOptions',
        'CallBarringInfo',
        'CallBarringFeatureList',
        'CallBarringFeature',
        'CUG-Info',
        'CUG-SubscriptionList',
        'CUG-Subscription',
        'CUG-Index',
        'CUG-Interlock',
        'IntraCUG-Options',
        'maxNumOfCUG',
        'CUG-FeatureList',
        'CUG-Feature',
        'InterCUG-Restrictions',
        'SS-Data',
        'SS-SubscriptionOption',
        'CliRestrictionOption',
        'OverrideCategory',
        'SS-ForBS-Code',
        'Cli-RestrictionInfo',
        'InterrogateSS-Res',
        'SS-UserData',
        'USSD-Arg',
        'USSD-Res',
        'USSD-DataCodingScheme',
        'USSD-String',
        'maxUSSD-StringLength',
        'Password',
        'GuidanceInfo',
        'BeginSubscriberActivityArg',
        'SS-List',
        'maxNumOfSS',
        'SS-InfoList',
        'ForwardingData',
        ]
    _type_ = [
        'RegisterSS-Arg',
        'NoReplyConditionTime',
        'SS-Info',
        'ForwardingInfo',
        'ForwardingFeatureList',
        'ForwardingFeature',
        'SS-Status',
        'ForwardingOptions',
        'CallBarringInfo',
        'CallBarringFeatureList',
        'CallBarringFeature',
        'CUG-Info',
        'CUG-SubscriptionList',
        'CUG-Subscription',
        'CUG-Index',
        'CUG-Interlock',
        'IntraCUG-Options',
        'CUG-FeatureList',
        'CUG-Feature',
        'InterCUG-Restrictions',
        'SS-Data',
        'SS-SubscriptionOption',
        'CliRestrictionOption',
        'OverrideCategory',
        'SS-ForBS-Code',
        'Cli-RestrictionInfo',
        'InterrogateSS-Res',
        'SS-UserData',
        'USSD-Arg',
        'USSD-Res',
        'USSD-DataCodingScheme',
        'USSD-String',
        'Password',
        'GuidanceInfo',
        'BeginSubscriberActivityArg',
        'SS-List',
        'SS-InfoList',
        'ForwardingData',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxNumOfCUG',
        'maxUSSD-StringLength',
        'maxNumOfSS',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< RegisterSS-Arg >-----#
    RegisterSS_Arg = SEQ(name='RegisterSS-Arg', mode=MODE_TYPE)
    _RegisterSS_Arg_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    _RegisterSS_Arg_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'BasicServiceCode')), opt=True)
    _RegisterSS_Arg_forwardedToNumber = OCT_STR(name='forwardedToNumber', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'AddressString')), opt=True)
    _RegisterSS_Arg_forwardedToSubaddress = OCT_STR(name='forwardedToSubaddress', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-SubaddressString')), opt=True)
    _RegisterSS_Arg_noReplyConditionTime = INT(name='noReplyConditionTime', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'NoReplyConditionTime')), opt=True)
    RegisterSS_Arg._cont = ASN1Dict([
        ('ss-Code', _RegisterSS_Arg_ss_Code),
        ('basicService', _RegisterSS_Arg_basicService),
        ('forwardedToNumber', _RegisterSS_Arg_forwardedToNumber),
        ('forwardedToSubaddress', _RegisterSS_Arg_forwardedToSubaddress),
        ('noReplyConditionTime', _RegisterSS_Arg_noReplyConditionTime),
        ])
    RegisterSS_Arg._ext = []
    
    #-----< NoReplyConditionTime >-----#
    NoReplyConditionTime = INT(name='NoReplyConditionTime', mode=MODE_TYPE)
    NoReplyConditionTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=30)], ev=None, er=[])
    
    #-----< SS-Info >-----#
    SS_Info = CHOICE(name='SS-Info', mode=MODE_TYPE)
    _SS_Info_forwardingInfo = SEQ(name='forwardingInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'ForwardingInfo')))
    _SS_Info_callBarringInfo = SEQ(name='callBarringInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'CallBarringInfo')))
    _SS_Info_cug_Info = SEQ(name='cug-Info', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'CUG-Info')))
    _SS_Info_ss_Data = SEQ(name='ss-Data', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Data')))
    SS_Info._cont = ASN1Dict([
        ('forwardingInfo', _SS_Info_forwardingInfo),
        ('callBarringInfo', _SS_Info_callBarringInfo),
        ('cug-Info', _SS_Info_cug_Info),
        ('ss-Data', _SS_Info_ss_Data),
        ])
    SS_Info._ext = None
    
    #-----< ForwardingInfo >-----#
    ForwardingInfo = SEQ(name='ForwardingInfo', mode=MODE_TYPE)
    _ForwardingInfo_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')), opt=True)
    _ForwardingInfo_forwardingFeatureList = SEQ_OF(name='forwardingFeatureList', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'ForwardingFeatureList')))
    ForwardingInfo._cont = ASN1Dict([
        ('ss-Code', _ForwardingInfo_ss_Code),
        ('forwardingFeatureList', _ForwardingInfo_forwardingFeatureList),
        ])
    ForwardingInfo._ext = []
    
    #-----< ForwardingFeatureList >-----#
    ForwardingFeatureList = SEQ_OF(name='ForwardingFeatureList', mode=MODE_TYPE)
    _ForwardingFeatureList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'ForwardingFeature')))
    ForwardingFeatureList._cont = _ForwardingFeatureList__item_
    ForwardingFeatureList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=13)], ev=None, er=[])
    
    #-----< ForwardingFeature >-----#
    ForwardingFeature = SEQ(name='ForwardingFeature', mode=MODE_TYPE)
    _ForwardingFeature_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'BasicServiceCode')), opt=True)
    _ForwardingFeature_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Status')), opt=True)
    _ForwardingFeature_forwardedToNumber = OCT_STR(name='forwardedToNumber', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _ForwardingFeature_forwardedToSubaddress = OCT_STR(name='forwardedToSubaddress', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-SubaddressString')), opt=True)
    _ForwardingFeature_forwardingOptions = OCT_STR(name='forwardingOptions', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'ForwardingOptions')), opt=True)
    _ForwardingFeature_noReplyConditionTime = INT(name='noReplyConditionTime', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'NoReplyConditionTime')), opt=True)
    ForwardingFeature._cont = ASN1Dict([
        ('basicService', _ForwardingFeature_basicService),
        ('ss-Status', _ForwardingFeature_ss_Status),
        ('forwardedToNumber', _ForwardingFeature_forwardedToNumber),
        ('forwardedToSubaddress', _ForwardingFeature_forwardedToSubaddress),
        ('forwardingOptions', _ForwardingFeature_forwardingOptions),
        ('noReplyConditionTime', _ForwardingFeature_noReplyConditionTime),
        ])
    ForwardingFeature._ext = []
    
    #-----< SS-Status >-----#
    SS_Status = OCT_STR(name='SS-Status', mode=MODE_TYPE)
    SS_Status._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< ForwardingOptions >-----#
    ForwardingOptions = OCT_STR(name='ForwardingOptions', mode=MODE_TYPE)
    ForwardingOptions._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< CallBarringInfo >-----#
    CallBarringInfo = SEQ(name='CallBarringInfo', mode=MODE_TYPE)
    _CallBarringInfo_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')), opt=True)
    _CallBarringInfo_callBarringFeatureList = SEQ_OF(name='callBarringFeatureList', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'CallBarringFeatureList')))
    CallBarringInfo._cont = ASN1Dict([
        ('ss-Code', _CallBarringInfo_ss_Code),
        ('callBarringFeatureList', _CallBarringInfo_callBarringFeatureList),
        ])
    CallBarringInfo._ext = []
    
    #-----< CallBarringFeatureList >-----#
    CallBarringFeatureList = SEQ_OF(name='CallBarringFeatureList', mode=MODE_TYPE)
    _CallBarringFeatureList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'CallBarringFeature')))
    CallBarringFeatureList._cont = _CallBarringFeatureList__item_
    CallBarringFeatureList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=13)], ev=None, er=[])
    
    #-----< CallBarringFeature >-----#
    CallBarringFeature = SEQ(name='CallBarringFeature', mode=MODE_TYPE)
    _CallBarringFeature_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'BasicServiceCode')), opt=True)
    _CallBarringFeature_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Status')), opt=True)
    CallBarringFeature._cont = ASN1Dict([
        ('basicService', _CallBarringFeature_basicService),
        ('ss-Status', _CallBarringFeature_ss_Status),
        ])
    CallBarringFeature._ext = []
    
    #-----< CUG-Info >-----#
    CUG_Info = SEQ(name='CUG-Info', mode=MODE_TYPE)
    _CUG_Info_cug_SubscriptionList = SEQ_OF(name='cug-SubscriptionList', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'CUG-SubscriptionList')))
    _CUG_Info_cug_FeatureList = SEQ_OF(name='cug-FeatureList', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'CUG-FeatureList')), opt=True)
    CUG_Info._cont = ASN1Dict([
        ('cug-SubscriptionList', _CUG_Info_cug_SubscriptionList),
        ('cug-FeatureList', _CUG_Info_cug_FeatureList),
        ])
    CUG_Info._ext = []
    
    #-----< CUG-SubscriptionList >-----#
    CUG_SubscriptionList = SEQ_OF(name='CUG-SubscriptionList', mode=MODE_TYPE)
    _CUG_SubscriptionList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'CUG-Subscription')))
    CUG_SubscriptionList._cont = _CUG_SubscriptionList__item_
    CUG_SubscriptionList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< CUG-Subscription >-----#
    CUG_Subscription = SEQ(name='CUG-Subscription', mode=MODE_TYPE)
    _CUG_Subscription_cug_Index = INT(name='cug-Index', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'CUG-Index')))
    _CUG_Subscription_cug_Interlock = OCT_STR(name='cug-Interlock', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'CUG-Interlock')))
    _CUG_Subscription_intraCUG_Options = ENUM(name='intraCUG-Options', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'IntraCUG-Options')))
    _CUG_Subscription_basicServiceGroupList = SEQ_OF(name='basicServiceGroupList', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'BasicServiceGroupList')), opt=True)
    CUG_Subscription._cont = ASN1Dict([
        ('cug-Index', _CUG_Subscription_cug_Index),
        ('cug-Interlock', _CUG_Subscription_cug_Interlock),
        ('intraCUG-Options', _CUG_Subscription_intraCUG_Options),
        ('basicServiceGroupList', _CUG_Subscription_basicServiceGroupList),
        ])
    CUG_Subscription._ext = []
    
    #-----< CUG-Index >-----#
    CUG_Index = INT(name='CUG-Index', mode=MODE_TYPE)
    CUG_Index._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    
    #-----< CUG-Interlock >-----#
    CUG_Interlock = OCT_STR(name='CUG-Interlock', mode=MODE_TYPE)
    CUG_Interlock._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< IntraCUG-Options >-----#
    IntraCUG_Options = ENUM(name='IntraCUG-Options', mode=MODE_TYPE)
    IntraCUG_Options._cont = ASN1Dict([('noCUG-Restrictions', 0), ('cugIC-CallBarred', 1), ('cugOG-CallBarred', 2)])
    IntraCUG_Options._ext = None
    
    #-----< maxNumOfCUG >-----#
    maxNumOfCUG = INT(name='maxNumOfCUG', mode=MODE_VALUE)
    maxNumOfCUG._val = 10
    
    #-----< CUG-FeatureList >-----#
    CUG_FeatureList = SEQ_OF(name='CUG-FeatureList', mode=MODE_TYPE)
    _CUG_FeatureList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'CUG-Feature')))
    CUG_FeatureList._cont = _CUG_FeatureList__item_
    CUG_FeatureList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=13)], ev=None, er=[])
    
    #-----< CUG-Feature >-----#
    CUG_Feature = SEQ(name='CUG-Feature', mode=MODE_TYPE)
    _CUG_Feature_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'BasicServiceCode')), opt=True)
    _CUG_Feature_preferentialCUG_Indicator = INT(name='preferentialCUG-Indicator', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'CUG-Index')), opt=True)
    _CUG_Feature_interCUG_Restrictions = OCT_STR(name='interCUG-Restrictions', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'InterCUG-Restrictions')))
    CUG_Feature._cont = ASN1Dict([
        ('basicService', _CUG_Feature_basicService),
        ('preferentialCUG-Indicator', _CUG_Feature_preferentialCUG_Indicator),
        ('interCUG-Restrictions', _CUG_Feature_interCUG_Restrictions),
        ])
    CUG_Feature._ext = []
    
    #-----< InterCUG-Restrictions >-----#
    InterCUG_Restrictions = OCT_STR(name='InterCUG-Restrictions', mode=MODE_TYPE)
    InterCUG_Restrictions._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< SS-Data >-----#
    SS_Data = SEQ(name='SS-Data', mode=MODE_TYPE)
    _SS_Data_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')), opt=True)
    _SS_Data_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Status')), opt=True)
    _SS_Data_ss_SubscriptionOption = CHOICE(name='ss-SubscriptionOption', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-SubscriptionOption')), opt=True)
    _SS_Data_basicServiceGroupList = SEQ_OF(name='basicServiceGroupList', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'BasicServiceGroupList')), opt=True)
    SS_Data._cont = ASN1Dict([
        ('ss-Code', _SS_Data_ss_Code),
        ('ss-Status', _SS_Data_ss_Status),
        ('ss-SubscriptionOption', _SS_Data_ss_SubscriptionOption),
        ('basicServiceGroupList', _SS_Data_basicServiceGroupList),
        ])
    SS_Data._ext = []
    
    #-----< SS-SubscriptionOption >-----#
    SS_SubscriptionOption = CHOICE(name='SS-SubscriptionOption', mode=MODE_TYPE)
    _SS_SubscriptionOption_cliRestrictionOption = ENUM(name='cliRestrictionOption', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'CliRestrictionOption')))
    _SS_SubscriptionOption_overrideCategory = ENUM(name='overrideCategory', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'OverrideCategory')))
    SS_SubscriptionOption._cont = ASN1Dict([
        ('cliRestrictionOption', _SS_SubscriptionOption_cliRestrictionOption),
        ('overrideCategory', _SS_SubscriptionOption_overrideCategory),
        ])
    SS_SubscriptionOption._ext = None
    
    #-----< CliRestrictionOption >-----#
    CliRestrictionOption = ENUM(name='CliRestrictionOption', mode=MODE_TYPE)
    CliRestrictionOption._cont = ASN1Dict([('permanent', 0), ('temporaryDefaultRestricted', 1), ('temporaryDefaultAllowed', 2)])
    CliRestrictionOption._ext = None
    
    #-----< OverrideCategory >-----#
    OverrideCategory = ENUM(name='OverrideCategory', mode=MODE_TYPE)
    OverrideCategory._cont = ASN1Dict([('overrideEnabled', 0), ('overrideDisabled', 1)])
    OverrideCategory._ext = None
    
    #-----< SS-ForBS-Code >-----#
    SS_ForBS_Code = SEQ(name='SS-ForBS-Code', mode=MODE_TYPE)
    _SS_ForBS_Code_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    _SS_ForBS_Code_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'BasicServiceCode')), opt=True)
    SS_ForBS_Code._cont = ASN1Dict([
        ('ss-Code', _SS_ForBS_Code_ss_Code),
        ('basicService', _SS_ForBS_Code_basicService),
        ])
    SS_ForBS_Code._ext = []
    
    #-----< Cli-RestrictionInfo >-----#
    Cli_RestrictionInfo = SEQ(name='Cli-RestrictionInfo', mode=MODE_TYPE)
    _Cli_RestrictionInfo_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Status')))
    _Cli_RestrictionInfo_cliRestrictionOption = ENUM(name='cliRestrictionOption', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'CliRestrictionOption')), opt=True)
    Cli_RestrictionInfo._cont = ASN1Dict([
        ('ss-Status', _Cli_RestrictionInfo_ss_Status),
        ('cliRestrictionOption', _Cli_RestrictionInfo_cliRestrictionOption),
        ])
    Cli_RestrictionInfo._ext = []
    
    #-----< InterrogateSS-Res >-----#
    InterrogateSS_Res = CHOICE(name='InterrogateSS-Res', mode=MODE_TYPE)
    _InterrogateSS_Res_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Status')))
    _InterrogateSS_Res_forwardedToNumber = OCT_STR(name='forwardedToNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _InterrogateSS_Res_basicServiceGroupList = SEQ_OF(name='basicServiceGroupList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'BasicServiceGroupList')))
    _InterrogateSS_Res_forwardingFeatureList = SEQ_OF(name='forwardingFeatureList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'ForwardingFeatureList')))
    _InterrogateSS_Res_cli_RestrictionInfo = SEQ(name='cli-RestrictionInfo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'Cli-RestrictionInfo')))
    InterrogateSS_Res._cont = ASN1Dict([
        ('ss-Status', _InterrogateSS_Res_ss_Status),
        ('forwardedToNumber', _InterrogateSS_Res_forwardedToNumber),
        ('basicServiceGroupList', _InterrogateSS_Res_basicServiceGroupList),
        ('forwardingFeatureList', _InterrogateSS_Res_forwardingFeatureList),
        ('cli-RestrictionInfo', _InterrogateSS_Res_cli_RestrictionInfo),
        ])
    InterrogateSS_Res._ext = None
    
    #-----< SS-UserData >-----#
    SS_UserData = STR_IA5(name='SS-UserData', mode=MODE_TYPE)
    SS_UserData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=200)], ev=None, er=[])
    
    #-----< USSD-Arg >-----#
    USSD_Arg = SEQ(name='USSD-Arg', mode=MODE_TYPE)
    _USSD_Arg_ussd_DataCodingScheme = OCT_STR(name='ussd-DataCodingScheme', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-DataCodingScheme')))
    _USSD_Arg_ussd_String = OCT_STR(name='ussd-String', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-String')))
    USSD_Arg._cont = ASN1Dict([
        ('ussd-DataCodingScheme', _USSD_Arg_ussd_DataCodingScheme),
        ('ussd-String', _USSD_Arg_ussd_String),
        ])
    USSD_Arg._ext = []
    
    #-----< USSD-Res >-----#
    USSD_Res = SEQ(name='USSD-Res', mode=MODE_TYPE)
    _USSD_Res_ussd_DataCodingScheme = OCT_STR(name='ussd-DataCodingScheme', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-DataCodingScheme')))
    _USSD_Res_ussd_String = OCT_STR(name='ussd-String', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-String')))
    USSD_Res._cont = ASN1Dict([
        ('ussd-DataCodingScheme', _USSD_Res_ussd_DataCodingScheme),
        ('ussd-String', _USSD_Res_ussd_String),
        ])
    USSD_Res._ext = []
    
    #-----< USSD-DataCodingScheme >-----#
    USSD_DataCodingScheme = OCT_STR(name='USSD-DataCodingScheme', mode=MODE_TYPE)
    USSD_DataCodingScheme._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< USSD-String >-----#
    USSD_String = OCT_STR(name='USSD-String', mode=MODE_TYPE)
    USSD_String._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=160)], ev=None, er=[])
    
    #-----< maxUSSD-StringLength >-----#
    maxUSSD_StringLength = INT(name='maxUSSD-StringLength', mode=MODE_VALUE)
    maxUSSD_StringLength._val = 160
    
    #-----< Password >-----#
    Password = STR_NUM(name='Password', mode=MODE_TYPE)
    Password._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    Password._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    
    #-----< GuidanceInfo >-----#
    GuidanceInfo = ENUM(name='GuidanceInfo', mode=MODE_TYPE)
    GuidanceInfo._cont = ASN1Dict([('enterPW', 0), ('enterNewPW', 1), ('enterNewPW-Again', 2), ('badPW-TryAgain', 3), ('badPW-FormatTryAgain', 4)])
    GuidanceInfo._ext = None
    
    #-----< BeginSubscriberActivityArg >-----#
    BeginSubscriberActivityArg = SEQ(name='BeginSubscriberActivityArg', mode=MODE_TYPE)
    _BeginSubscriberActivityArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    _BeginSubscriberActivityArg_originatingEntityNumber = OCT_STR(name='originatingEntityNumber', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    BeginSubscriberActivityArg._cont = ASN1Dict([
        ('imsi', _BeginSubscriberActivityArg_imsi),
        ('originatingEntityNumber', _BeginSubscriberActivityArg_originatingEntityNumber),
        ])
    BeginSubscriberActivityArg._ext = None
    
    #-----< SS-List >-----#
    SS_List = SEQ_OF(name='SS-List', mode=MODE_TYPE)
    _SS_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    SS_List._cont = _SS_List__item_
    SS_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=30)], ev=None, er=[])
    
    #-----< maxNumOfSS >-----#
    maxNumOfSS = INT(name='maxNumOfSS', mode=MODE_VALUE)
    maxNumOfSS._val = 30
    
    #-----< SS-InfoList >-----#
    SS_InfoList = SEQ_OF(name='SS-InfoList', mode=MODE_TYPE)
    _SS_InfoList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    SS_InfoList._cont = _SS_InfoList__item_
    SS_InfoList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=30)], ev=None, er=[])
    
    #-----< ForwardingData >-----#
    ForwardingData = SEQ(name='ForwardingData', mode=MODE_TYPE)
    _ForwardingData_forwardedToNumber = OCT_STR(name='forwardedToNumber', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _ForwardingData_forwardedToSubaddress = OCT_STR(name='forwardedToSubaddress', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-SubaddressString')), opt=True)
    _ForwardingData_forwardingOptions = OCT_STR(name='forwardingOptions', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'ForwardingOptions')), opt=True)
    ForwardingData._cont = ASN1Dict([
        ('forwardedToNumber', _ForwardingData_forwardedToNumber),
        ('forwardedToSubaddress', _ForwardingData_forwardedToSubaddress),
        ('forwardingOptions', _ForwardingData_forwardingOptions),
        ])
    ForwardingData._ext = []
    
    _all_ = [
        _RegisterSS_Arg_ss_Code,
        _RegisterSS_Arg_basicService,
        _RegisterSS_Arg_forwardedToNumber,
        _RegisterSS_Arg_forwardedToSubaddress,
        _RegisterSS_Arg_noReplyConditionTime,
        RegisterSS_Arg,
        NoReplyConditionTime,
        _SS_Info_forwardingInfo,
        _SS_Info_callBarringInfo,
        _SS_Info_cug_Info,
        _SS_Info_ss_Data,
        SS_Info,
        _ForwardingInfo_ss_Code,
        _ForwardingInfo_forwardingFeatureList,
        ForwardingInfo,
        _ForwardingFeatureList__item_,
        ForwardingFeatureList,
        _ForwardingFeature_basicService,
        _ForwardingFeature_ss_Status,
        _ForwardingFeature_forwardedToNumber,
        _ForwardingFeature_forwardedToSubaddress,
        _ForwardingFeature_forwardingOptions,
        _ForwardingFeature_noReplyConditionTime,
        ForwardingFeature,
        SS_Status,
        ForwardingOptions,
        _CallBarringInfo_ss_Code,
        _CallBarringInfo_callBarringFeatureList,
        CallBarringInfo,
        _CallBarringFeatureList__item_,
        CallBarringFeatureList,
        _CallBarringFeature_basicService,
        _CallBarringFeature_ss_Status,
        CallBarringFeature,
        _CUG_Info_cug_SubscriptionList,
        _CUG_Info_cug_FeatureList,
        CUG_Info,
        _CUG_SubscriptionList__item_,
        CUG_SubscriptionList,
        _CUG_Subscription_cug_Index,
        _CUG_Subscription_cug_Interlock,
        _CUG_Subscription_intraCUG_Options,
        _CUG_Subscription_basicServiceGroupList,
        CUG_Subscription,
        CUG_Index,
        CUG_Interlock,
        IntraCUG_Options,
        maxNumOfCUG,
        _CUG_FeatureList__item_,
        CUG_FeatureList,
        _CUG_Feature_basicService,
        _CUG_Feature_preferentialCUG_Indicator,
        _CUG_Feature_interCUG_Restrictions,
        CUG_Feature,
        InterCUG_Restrictions,
        _SS_Data_ss_Code,
        _SS_Data_ss_Status,
        _SS_Data_ss_SubscriptionOption,
        _SS_Data_basicServiceGroupList,
        SS_Data,
        _SS_SubscriptionOption_cliRestrictionOption,
        _SS_SubscriptionOption_overrideCategory,
        SS_SubscriptionOption,
        CliRestrictionOption,
        OverrideCategory,
        _SS_ForBS_Code_ss_Code,
        _SS_ForBS_Code_basicService,
        SS_ForBS_Code,
        _Cli_RestrictionInfo_ss_Status,
        _Cli_RestrictionInfo_cliRestrictionOption,
        Cli_RestrictionInfo,
        _InterrogateSS_Res_ss_Status,
        _InterrogateSS_Res_forwardedToNumber,
        _InterrogateSS_Res_basicServiceGroupList,
        _InterrogateSS_Res_forwardingFeatureList,
        _InterrogateSS_Res_cli_RestrictionInfo,
        InterrogateSS_Res,
        SS_UserData,
        _USSD_Arg_ussd_DataCodingScheme,
        _USSD_Arg_ussd_String,
        USSD_Arg,
        _USSD_Res_ussd_DataCodingScheme,
        _USSD_Res_ussd_String,
        USSD_Res,
        USSD_DataCodingScheme,
        USSD_String,
        maxUSSD_StringLength,
        Password,
        GuidanceInfo,
        _BeginSubscriberActivityArg_imsi,
        _BeginSubscriberActivityArg_originatingEntityNumber,
        BeginSubscriberActivityArg,
        _SS_List__item_,
        SS_List,
        maxNumOfSS,
        _SS_InfoList__item_,
        SS_InfoList,
        _ForwardingData_forwardedToNumber,
        _ForwardingData_forwardedToSubaddress,
        _ForwardingData_forwardingOptions,
        ForwardingData,
    ]

class MAPv2_ShortMessageServiceOperations:

    _name_  = 'MAPv2-ShortMessageServiceOperations'
    _oid_   = []
    
    _obj_ = [
        'sendRoutingInfoForSM',
        'forwardSM',
        'reportSM-DeliveryStatus',
        'noteSubscriberPresent',
        'alertServiceCentreWithoutResult',
        'alertServiceCentre',
        'informServiceCentre',
        'readyForSM',
        ]
    _type_ = [
        ]
    _set_ = [
        ]
    _val_ = [
        'sendRoutingInfoForSM',
        'forwardSM',
        'reportSM-DeliveryStatus',
        'noteSubscriberPresent',
        'alertServiceCentreWithoutResult',
        'alertServiceCentre',
        'informServiceCentre',
        'readyForSM',
        ]
    _class_ = [
        'sendRoutingInfoForSM',
        'forwardSM',
        'reportSM-DeliveryStatus',
        'noteSubscriberPresent',
        'alertServiceCentreWithoutResult',
        'alertServiceCentre',
        'informServiceCentre',
        'readyForSM',
        ]
    _param_ = [
        ]
    
    #-----< sendRoutingInfoForSM >-----#
    sendRoutingInfoForSM = CLASS(name='sendRoutingInfoForSM', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _sendRoutingInfoForSM_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'RoutingInfoForSM-Arg')))
    _sendRoutingInfoForSM_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'RoutingInfoForSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_0 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'NetworkResource')))
    __sendRoutingInfo_Errors_val_ParameterType_6 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    __sendRoutingInfo_Errors_val_ParameterType_7 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    sendRoutingInfoForSM._val = dict([('ArgumentType', _sendRoutingInfoForSM_val_ArgumentType), ('ResultType', _sendRoutingInfoForSM_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))])
    
    #-----< forwardSM >-----#
    forwardSM = CLASS(name='forwardSM', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _forwardSM_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'ForwardSM-Arg')))
    __sendRoutingInfo_Errors_val_ParameterType_7_0 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    __sendRoutingInfo_Errors_val_ParameterType_9 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'SM-DeliveryFailureCause')))
    forwardSM._val = dict([('ArgumentType', _forwardSM_val_ArgumentType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_0), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))])
    
    #-----< reportSM-DeliveryStatus >-----#
    reportSM_DeliveryStatus = CLASS(name='reportSM-DeliveryStatus', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _reportSM_DeliveryStatus_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'ReportSM-DeliveryStatusArg')))
    _reportSM_DeliveryStatus_val_ResultType = OCT_STR(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    reportSM_DeliveryStatus._val = dict([('ArgumentType', _reportSM_DeliveryStatus_val_ArgumentType), ('ResultType', _reportSM_DeliveryStatus_val_ResultType), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))])
    
    #-----< noteSubscriberPresent >-----#
    noteSubscriberPresent = CLASS(name='noteSubscriberPresent', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _noteSubscriberPresent_val_ArgumentType = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    noteSubscriberPresent._val = dict([('ArgumentType', _noteSubscriberPresent_val_ArgumentType), ('operationCode', ('local', 48))])
    
    #-----< alertServiceCentreWithoutResult >-----#
    alertServiceCentreWithoutResult = CLASS(name='alertServiceCentreWithoutResult', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _alertServiceCentreWithoutResult_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'AlertServiceCentreArg')))
    alertServiceCentreWithoutResult._val = dict([('ArgumentType', _alertServiceCentreWithoutResult_val_ArgumentType), ('operationCode', ('local', 49))])
    
    #-----< alertServiceCentre >-----#
    alertServiceCentre = CLASS(name='alertServiceCentre', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _alertServiceCentre_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'AlertServiceCentreArg')))
    alertServiceCentre._val = dict([('ArgumentType', _alertServiceCentre_val_ArgumentType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 64))])
    
    #-----< informServiceCentre >-----#
    informServiceCentre = CLASS(name='informServiceCentre', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _informServiceCentre_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'InformServiceCentreArg')))
    informServiceCentre._val = dict([('ArgumentType', _informServiceCentre_val_ArgumentType), ('operationCode', ('local', 63))])
    
    #-----< readyForSM >-----#
    readyForSM = CLASS(name='readyForSM', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _readyForSM_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'ReadyForSM-Arg')))
    readyForSM._val = dict([('ArgumentType', _readyForSM_val_ArgumentType), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 66))])
    
    _all_ = [
        sendRoutingInfoForSM,
        _sendRoutingInfoForSM_val_ArgumentType,
        _sendRoutingInfoForSM_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0,
        __sendRoutingInfo_Errors_val_ParameterType_6,
        __sendRoutingInfo_Errors_val_ParameterType_7,
        forwardSM,
        _forwardSM_val_ArgumentType,
        __sendRoutingInfo_Errors_val_ParameterType_7_0,
        __sendRoutingInfo_Errors_val_ParameterType_9,
        reportSM_DeliveryStatus,
        _reportSM_DeliveryStatus_val_ArgumentType,
        _reportSM_DeliveryStatus_val_ResultType,
        noteSubscriberPresent,
        _noteSubscriberPresent_val_ArgumentType,
        alertServiceCentreWithoutResult,
        _alertServiceCentreWithoutResult_val_ArgumentType,
        alertServiceCentre,
        _alertServiceCentre_val_ArgumentType,
        informServiceCentre,
        _informServiceCentre_val_ArgumentType,
        readyForSM,
        _readyForSM_val_ArgumentType,
    ]

class MAPv2_SupplementaryServiceOperations:

    _name_  = 'MAPv2-SupplementaryServiceOperations'
    _oid_   = []
    
    _obj_ = [
        'registerSS',
        'eraseSS',
        'activateSS',
        'deactivateSS',
        'interrogateSS',
        'processUnstructuredSS-Data',
        'processUnstructuredSS-Request',
        'unstructuredSS-Request',
        'unstructuredSS-Notify',
        'registerPassword',
        'getPassword',
        'beginSubscriberActivity',
        ]
    _type_ = [
        ]
    _set_ = [
        ]
    _val_ = [
        'registerSS',
        'eraseSS',
        'activateSS',
        'deactivateSS',
        'interrogateSS',
        'processUnstructuredSS-Data',
        'processUnstructuredSS-Request',
        'unstructuredSS-Request',
        'unstructuredSS-Notify',
        'registerPassword',
        'getPassword',
        'beginSubscriberActivity',
        ]
    _class_ = [
        'registerSS',
        'eraseSS',
        'activateSS',
        'deactivateSS',
        'interrogateSS',
        'processUnstructuredSS-Data',
        'processUnstructuredSS-Request',
        'unstructuredSS-Request',
        'unstructuredSS-Notify',
        'registerPassword',
        'getPassword',
        'beginSubscriberActivity',
        ]
    _param_ = [
        ]
    
    #-----< registerSS >-----#
    registerSS = CLASS(name='registerSS', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _registerSS_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'RegisterSS-Arg')))
    _registerSS_val_ResultType = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    __sendRoutingInfo_Errors_val_ParameterType_0 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'NetworkResource')))
    __sendRoutingInfo_Errors_val_ParameterType_6 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    __sendRoutingInfo_Errors_val_ParameterType_8 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Status')))
    __sendRoutingInfo_Errors_val_ParameterType_9 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-SubscriptionOption')))
    __sendRoutingInfo_Errors_val_ParameterType_10 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'SS-IncompatibilityCause')))
    registerSS._val = dict([('ArgumentType', _registerSS_val_ArgumentType), ('ResultType', _registerSS_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10), ('errorCode', ('local', 20))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 10))])
    
    #-----< eraseSS >-----#
    eraseSS = CLASS(name='eraseSS', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _eraseSS_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    _eraseSS_val_ResultType = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    eraseSS._val = dict([('ArgumentType', _eraseSS_val_ArgumentType), ('ResultType', _eraseSS_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9), ('errorCode', ('local', 19))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 11))])
    
    #-----< activateSS >-----#
    activateSS = CLASS(name='activateSS', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _activateSS_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    _activateSS_val_ResultType = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    activateSS._val = dict([('ArgumentType', _activateSS_val_ArgumentType), ('ResultType', _activateSS_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10), ('errorCode', ('local', 20))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 12))])
    
    #-----< deactivateSS >-----#
    deactivateSS = CLASS(name='deactivateSS', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _deactivateSS_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    _deactivateSS_val_ResultType = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    deactivateSS._val = dict([('ArgumentType', _deactivateSS_val_ArgumentType), ('ResultType', _deactivateSS_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9), ('errorCode', ('local', 19))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 13))])
    
    #-----< interrogateSS >-----#
    interrogateSS = CLASS(name='interrogateSS', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _interrogateSS_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    _interrogateSS_val_ResultType = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'InterrogateSS-Res')))
    interrogateSS._val = dict([('ArgumentType', _interrogateSS_val_ArgumentType), ('ResultType', _interrogateSS_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('errorCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 14))])
    
    #-----< processUnstructuredSS-Data >-----#
    processUnstructuredSS_Data = CLASS(name='processUnstructuredSS-Data', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _processUnstructuredSS_Data_val_ArgumentType = STR_IA5(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-UserData')))
    _processUnstructuredSS_Data_val_ResultType = STR_IA5(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-UserData')))
    processUnstructuredSS_Data._val = dict([('ArgumentType', _processUnstructuredSS_Data_val_ArgumentType), ('ResultType', _processUnstructuredSS_Data_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 19))])
    
    #-----< processUnstructuredSS-Request >-----#
    processUnstructuredSS_Request = CLASS(name='processUnstructuredSS-Request', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _processUnstructuredSS_Request_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Arg')))
    _processUnstructuredSS_Request_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    processUnstructuredSS_Request._val = dict([('ArgumentType', _processUnstructuredSS_Request_val_ArgumentType), ('ResultType', _processUnstructuredSS_Request_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 71))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 59))])
    
    #-----< unstructuredSS-Request >-----#
    unstructuredSS_Request = CLASS(name='unstructuredSS-Request', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _unstructuredSS_Request_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Arg')))
    _unstructuredSS_Request_val_ResultType = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_3 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    unstructuredSS_Request._val = dict([('ArgumentType', _unstructuredSS_Request_val_ArgumentType), ('ResultType', _unstructuredSS_Request_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 60))])
    
    #-----< unstructuredSS-Notify >-----#
    unstructuredSS_Notify = CLASS(name='unstructuredSS-Notify', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _unstructuredSS_Notify_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Arg')))
    unstructuredSS_Notify._val = dict([('ArgumentType', _unstructuredSS_Notify_val_ArgumentType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 61))])
    
    #-----< registerPassword >-----#
    registerPassword = CLASS(name='registerPassword', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _registerPassword_val_ArgumentType = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    _registerPassword_val_ResultType = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'Password')))
    _registerPassword_val_ResultType._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    __sendRoutingInfo_Errors_val_ParameterType_3_0 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    __sendRoutingInfo_Errors_val_ParameterType_4_0 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-SubscriptionOption')))
    __sendRoutingInfo_Errors_val_ParameterType_5 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'PW-RegistrationFailureCause')))
    __Supported_MAPv2_Operations_Linked_val_ArgumentType_0 = ENUM(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'GuidanceInfo')))
    __Supported_MAPv2_Operations_Linked_val_ResultType_0 = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'Password')))
    __Supported_MAPv2_Operations_Linked_val_ResultType_0._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    registerPassword._val = dict([('ArgumentType', _registerPassword_val_ArgumentType), ('ResultType', _registerPassword_val_ResultType), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 37))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('Linked', ASN1Set(rv=[dict([('ArgumentType', __Supported_MAPv2_Operations_Linked_val_ArgumentType_0), ('ResultType', __Supported_MAPv2_Operations_Linked_val_ResultType_0), ('operationCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 17))])
    
    #-----< getPassword >-----#
    getPassword = CLASS(name='getPassword', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _getPassword_val_ArgumentType = ENUM(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'GuidanceInfo')))
    _getPassword_val_ResultType = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'Password')))
    _getPassword_val_ResultType._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    getPassword._val = dict([('ArgumentType', _getPassword_val_ArgumentType), ('ResultType', _getPassword_val_ResultType), ('operationCode', ('local', 18))])
    
    #-----< beginSubscriberActivity >-----#
    beginSubscriberActivity = CLASS(name='beginSubscriberActivity', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _beginSubscriberActivity_val_ArgumentType = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'BeginSubscriberActivityArg')))
    beginSubscriberActivity._val = dict([('ArgumentType', _beginSubscriberActivity_val_ArgumentType), ('operationCode', ('local', 54))])
    
    _all_ = [
        registerSS,
        _registerSS_val_ArgumentType,
        _registerSS_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_0,
        __sendRoutingInfo_Errors_val_ParameterType_6,
        __sendRoutingInfo_Errors_val_ParameterType_8,
        __sendRoutingInfo_Errors_val_ParameterType_9,
        __sendRoutingInfo_Errors_val_ParameterType_10,
        eraseSS,
        _eraseSS_val_ArgumentType,
        _eraseSS_val_ResultType,
        activateSS,
        _activateSS_val_ArgumentType,
        _activateSS_val_ResultType,
        deactivateSS,
        _deactivateSS_val_ArgumentType,
        _deactivateSS_val_ResultType,
        interrogateSS,
        _interrogateSS_val_ArgumentType,
        _interrogateSS_val_ResultType,
        processUnstructuredSS_Data,
        _processUnstructuredSS_Data_val_ArgumentType,
        _processUnstructuredSS_Data_val_ResultType,
        processUnstructuredSS_Request,
        _processUnstructuredSS_Request_val_ArgumentType,
        _processUnstructuredSS_Request_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_4,
        unstructuredSS_Request,
        _unstructuredSS_Request_val_ArgumentType,
        _unstructuredSS_Request_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_3,
        unstructuredSS_Notify,
        _unstructuredSS_Notify_val_ArgumentType,
        registerPassword,
        _registerPassword_val_ArgumentType,
        _registerPassword_val_ResultType,
        __sendRoutingInfo_Errors_val_ParameterType_3_0,
        __sendRoutingInfo_Errors_val_ParameterType_4_0,
        __sendRoutingInfo_Errors_val_ParameterType_5,
        __Supported_MAPv2_Operations_Linked_val_ArgumentType_0,
        __Supported_MAPv2_Operations_Linked_val_ResultType_0,
        getPassword,
        _getPassword_val_ArgumentType,
        _getPassword_val_ResultType,
        beginSubscriberActivity,
        _beginSubscriberActivity_val_ArgumentType,
    ]

class MAPv2_TS_Code:

    _name_  = 'MAPv2-TS-Code'
    _oid_   = [0, 4, 0, 0, 1, 3, 19, 2]
    
    _obj_ = [
        'TeleserviceCode',
        'allTeleservices',
        'allSpeechTransmissionServices',
        'telephony',
        'emergencyCalls',
        'allShortMessageServices',
        'shortMessageMT-PP',
        'shortMessageMO-PP',
        'allFacsimileTransmissionServices',
        'facsimileGroup3AndAlterSpeech',
        'automaticFacsimileGroup3',
        'facsimileGroup4',
        'allDataTeleservices',
        'allTeleservices-ExeptSMS',
        'allPLMN-specificTS',
        'plmn-specificTS-1',
        'plmn-specificTS-2',
        'plmn-specificTS-3',
        'plmn-specificTS-4',
        'plmn-specificTS-5',
        'plmn-specificTS-6',
        'plmn-specificTS-7',
        'plmn-specificTS-8',
        'plmn-specificTS-9',
        'plmn-specificTS-A',
        'plmn-specificTS-B',
        'plmn-specificTS-C',
        'plmn-specificTS-D',
        'plmn-specificTS-E',
        'plmn-specificTS-F',
        ]
    _type_ = [
        'TeleserviceCode',
        ]
    _set_ = [
        ]
    _val_ = [
        'allTeleservices',
        'allSpeechTransmissionServices',
        'telephony',
        'emergencyCalls',
        'allShortMessageServices',
        'shortMessageMT-PP',
        'shortMessageMO-PP',
        'allFacsimileTransmissionServices',
        'facsimileGroup3AndAlterSpeech',
        'automaticFacsimileGroup3',
        'facsimileGroup4',
        'allDataTeleservices',
        'allTeleservices-ExeptSMS',
        'allPLMN-specificTS',
        'plmn-specificTS-1',
        'plmn-specificTS-2',
        'plmn-specificTS-3',
        'plmn-specificTS-4',
        'plmn-specificTS-5',
        'plmn-specificTS-6',
        'plmn-specificTS-7',
        'plmn-specificTS-8',
        'plmn-specificTS-9',
        'plmn-specificTS-A',
        'plmn-specificTS-B',
        'plmn-specificTS-C',
        'plmn-specificTS-D',
        'plmn-specificTS-E',
        'plmn-specificTS-F',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< TeleserviceCode >-----#
    TeleserviceCode = OCT_STR(name='TeleserviceCode', mode=MODE_TYPE)
    TeleserviceCode._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< allTeleservices >-----#
    allTeleservices = OCT_STR(name='allTeleservices', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    allTeleservices._val = b'\x00'
    
    #-----< allSpeechTransmissionServices >-----#
    allSpeechTransmissionServices = OCT_STR(name='allSpeechTransmissionServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    allSpeechTransmissionServices._val = b'\x10'
    
    #-----< telephony >-----#
    telephony = OCT_STR(name='telephony', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    telephony._val = b'\x11'
    
    #-----< emergencyCalls >-----#
    emergencyCalls = OCT_STR(name='emergencyCalls', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    emergencyCalls._val = b'\x12'
    
    #-----< allShortMessageServices >-----#
    allShortMessageServices = OCT_STR(name='allShortMessageServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    allShortMessageServices._val = b' '
    
    #-----< shortMessageMT-PP >-----#
    shortMessageMT_PP = OCT_STR(name='shortMessageMT-PP', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    shortMessageMT_PP._val = b'!'
    
    #-----< shortMessageMO-PP >-----#
    shortMessageMO_PP = OCT_STR(name='shortMessageMO-PP', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    shortMessageMO_PP._val = b'"'
    
    #-----< allFacsimileTransmissionServices >-----#
    allFacsimileTransmissionServices = OCT_STR(name='allFacsimileTransmissionServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    allFacsimileTransmissionServices._val = b'`'
    
    #-----< facsimileGroup3AndAlterSpeech >-----#
    facsimileGroup3AndAlterSpeech = OCT_STR(name='facsimileGroup3AndAlterSpeech', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    facsimileGroup3AndAlterSpeech._val = b'a'
    
    #-----< automaticFacsimileGroup3 >-----#
    automaticFacsimileGroup3 = OCT_STR(name='automaticFacsimileGroup3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    automaticFacsimileGroup3._val = b'b'
    
    #-----< facsimileGroup4 >-----#
    facsimileGroup4 = OCT_STR(name='facsimileGroup4', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    facsimileGroup4._val = b'c'
    
    #-----< allDataTeleservices >-----#
    allDataTeleservices = OCT_STR(name='allDataTeleservices', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    allDataTeleservices._val = b'p'
    
    #-----< allTeleservices-ExeptSMS >-----#
    allTeleservices_ExeptSMS = OCT_STR(name='allTeleservices-ExeptSMS', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    allTeleservices_ExeptSMS._val = b'\x80'
    
    #-----< allPLMN-specificTS >-----#
    allPLMN_specificTS = OCT_STR(name='allPLMN-specificTS', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    allPLMN_specificTS._val = b'\xd0'
    
    #-----< plmn-specificTS-1 >-----#
    plmn_specificTS_1 = OCT_STR(name='plmn-specificTS-1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_1._val = b'\xd1'
    
    #-----< plmn-specificTS-2 >-----#
    plmn_specificTS_2 = OCT_STR(name='plmn-specificTS-2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_2._val = b'\xd2'
    
    #-----< plmn-specificTS-3 >-----#
    plmn_specificTS_3 = OCT_STR(name='plmn-specificTS-3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_3._val = b'\xd3'
    
    #-----< plmn-specificTS-4 >-----#
    plmn_specificTS_4 = OCT_STR(name='plmn-specificTS-4', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_4._val = b'\xd4'
    
    #-----< plmn-specificTS-5 >-----#
    plmn_specificTS_5 = OCT_STR(name='plmn-specificTS-5', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_5._val = b'\xd5'
    
    #-----< plmn-specificTS-6 >-----#
    plmn_specificTS_6 = OCT_STR(name='plmn-specificTS-6', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_6._val = b'\xd6'
    
    #-----< plmn-specificTS-7 >-----#
    plmn_specificTS_7 = OCT_STR(name='plmn-specificTS-7', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_7._val = b'\xd7'
    
    #-----< plmn-specificTS-8 >-----#
    plmn_specificTS_8 = OCT_STR(name='plmn-specificTS-8', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_8._val = b'\xd8'
    
    #-----< plmn-specificTS-9 >-----#
    plmn_specificTS_9 = OCT_STR(name='plmn-specificTS-9', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_9._val = b'\xd9'
    
    #-----< plmn-specificTS-A >-----#
    plmn_specificTS_A = OCT_STR(name='plmn-specificTS-A', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_A._val = b'\xda'
    
    #-----< plmn-specificTS-B >-----#
    plmn_specificTS_B = OCT_STR(name='plmn-specificTS-B', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_B._val = b'\xdb'
    
    #-----< plmn-specificTS-C >-----#
    plmn_specificTS_C = OCT_STR(name='plmn-specificTS-C', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_C._val = b'\xdc'
    
    #-----< plmn-specificTS-D >-----#
    plmn_specificTS_D = OCT_STR(name='plmn-specificTS-D', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_D._val = b'\xdd'
    
    #-----< plmn-specificTS-E >-----#
    plmn_specificTS_E = OCT_STR(name='plmn-specificTS-E', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_E._val = b'\xde'
    
    #-----< plmn-specificTS-F >-----#
    plmn_specificTS_F = OCT_STR(name='plmn-specificTS-F', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_F._val = b'\xdf'
    
    _all_ = [
        TeleserviceCode,
        allTeleservices,
        allSpeechTransmissionServices,
        telephony,
        emergencyCalls,
        allShortMessageServices,
        shortMessageMT_PP,
        shortMessageMO_PP,
        allFacsimileTransmissionServices,
        facsimileGroup3AndAlterSpeech,
        automaticFacsimileGroup3,
        facsimileGroup4,
        allDataTeleservices,
        allTeleservices_ExeptSMS,
        allPLMN_specificTS,
        plmn_specificTS_1,
        plmn_specificTS_2,
        plmn_specificTS_3,
        plmn_specificTS_4,
        plmn_specificTS_5,
        plmn_specificTS_6,
        plmn_specificTS_7,
        plmn_specificTS_8,
        plmn_specificTS_9,
        plmn_specificTS_A,
        plmn_specificTS_B,
        plmn_specificTS_C,
        plmn_specificTS_D,
        plmn_specificTS_E,
        plmn_specificTS_F,
    ]

class MAPv2v3_Application:

    _name_  = 'MAPv2v3-Application'
    _oid_   = []
    
    _obj_ = [
        'MapAppCtxtEquipment',
        'OPERATION-PACKAGE',
        'APPLICATION-CONTEXT',
        'locationUpdatingPackage-v3',
        'locationUpdatingPackage-v2',
        'locationUpdatingPackage-v1',
        'locationCancellationPackage-v3',
        'locationCancellationPackage-v2',
        'locationCancellationPackage-v1',
        'roamingNumberEnquiryPackage-v3',
        'roamingNumberEnquiryPackage-v2',
        'roamingNumberEnquiryPackage-v1',
        'infoRetrievalPackage-v3',
        'infoRetrievalPackage-v2',
        'infoRetrievalPackage-v1',
        'interVlrInfoRetrievalPackage-v3',
        'interVlrInfoRetrievalPackage-v2',
        'imsiRetrievalPackage-v2',
        'callControlTransferPackage-v4',
        'callControlTransferPackage-v3',
        'interrogationPackage-v3',
        'interrogationPackage-v2',
        'interrogationPackage-v1',
        'handoverControlPackage-v3',
        'handoverControlPackage-v2',
        'handoverControlPackage-v1',
        'subscriberDataMngtStandAlonePackage-v3',
        'subscriberDataMngtStandAlonePackage-v2',
        'subscriberDataMngtStandAlonePackage-v1',
        'equipmentMngtPackage-v3',
        'equipmentMngtPackage-v2',
        'equipmentMngtPackage-v1',
        'subscriberDataMngtPackage-v3',
        'subscriberDataMngtPackage-v2',
        'subscriberDataMngtPackage-v1',
        'resetPackage-v3',
        'resetPackage-v2',
        'resetPackage-v1',
        'tracingStandAlonePackage-v3',
        'tracingStandAlonePackage-v2',
        'tracingStandAlonePackage-v1',
        'functionalSsPackage-v2',
        'functionalSsPackage-v1',
        'tracingPackage-v3',
        'tracingPackage-v2',
        'tracingPackage-v1',
        'bindingPackage-v1',
        'unstructuredSsPackage-v2',
        'unstructuredSsPackage-v1',
        'mo-ShortMsgRelayPackage-v3',
        'shortMsgRelayPackage-v2',
        'shortMsgRelayPackage-v1',
        'shortMsgGatewayPackage-v3',
        'shortMsgGatewayPackage-v2',
        'shortMsgGatewayPackage-v1',
        'mt-ShortMsgRelayPackage-v3',
        'mwdMngtPackage-v3',
        'mwdMngtPackage-v2',
        'mwdMngtPackage-v1',
        'alertingPackage-v2',
        'alertingPackage-v1',
        'dataRestorationPackage-v3',
        'dataRestorationPackage-v2',
        'dataRestorationPackage-v1',
        'purgingPackage-v3',
        'purgingPackage-v2',
        'subscriberInformationEnquiryPackage-v3',
        'anyTimeInformationEnquiryPackage-v3',
        'groupCallControlPackage-v3',
        'groupCallInfoRetrievalPackage-v3',
        'gprsLocationUpdatingPackage-v3',
        'gprsInterrogationPackage-v4',
        'gprsInterrogationPackage-v3',
        'failureReportingPackage-v3',
        'gprsNotifyingPackage-v3',
        'ss-InvocationNotificationPackage-v3',
        'setReportingStatePackage-v3',
        'statusReportPackage-v3',
        'remoteUserFreePackage-v3',
        'callCompletionPackage-v3',
        'locationSvcGatewayPackage-v3',
        'locationSvcEnquiryPackage-v3',
        'locationSvcReportingPackage-v3',
        'ist-AlertingPackage-v3',
        'serviceTerminationPackage-v3',
        'mm-EventReportingPackage-v3',
        'anyTimeInformationHandlingPackage-v3',
        'subscriberDataModificationNotificationPackage-v3',
        'authenticationFailureReportPackage-v3',
        'resourceManagementPackage-v3',
        'mt-ShortMsgRelay-VGCS-Package-v3',
        'vcsgLocationUpdatingPackage-v3',
        'vcsgLocationCancellationPackage-v3',
        'Supported-MAP-OperationPackages',
        'networkLocUpContext-v3',
        'networkLocUpContext-v2',
        'networkLocUpContext-v1',
        'locationCancellationContext-v3',
        'locationCancellationContext-v2',
        'locationCancellationContext-v1',
        'roamingNumberEnquiryContext-v3',
        'roamingNumberEnquiryContext-v2',
        'roamingNumberEnquiryContext-v1',
        'locationInfoRetrievalContext-v3',
        'locationInfoRetrievalContext-v2',
        'locationInfoRetrievalContext-v1',
        'callControlTransferContext-v4',
        'callControlTransferContext-v3',
        'resetContext-v3',
        'resetContext-v2',
        'resetContext-v1',
        'handoverControlContext-v3',
        'handoverControlContext-2',
        'handoverControlContext-v1',
        'imsiRetrievalContext-v2',
        'equipmentMngtContext-v3',
        'equipmentMngtContext-v2',
        'equipmentMngtContext-v1',
        'infoRetrievalContext-v3',
        'infoRetrievalContext-v2',
        'infoRetrievalContext-v1',
        'interVlrInfoRetrievalContext-v3',
        'interVlrInfoRetrievalContext-v2',
        'subscriberDataMngtContext-v3',
        'subscriberDataMngtContext-v2',
        'subscriberDataMngtContext-v1',
        'tracingContext-v3',
        'tracingContext-v2',
        'tracingContext-v1',
        'networkFunctionalSsContext-v2',
        'networkFunctionalSsContext-v1',
        'networkUnstructuredSsContext-v2',
        'shortMsgGatewayContext-v3',
        'shortMsgGatewayContext-v2',
        'shortMsgGatewayContext-v1',
        'shortMsgMO-RelayContext-v3',
        'shortMsg-RelayContext-v2',
        'shortMsg-RelayContext-v1',
        'shortMsgAlertContext-v2',
        'shortMsgAlertContext-v1',
        'mwdMngtContext-v3',
        'mwdMngtContext-v2',
        'mwdMngtContext-v1',
        'shortMsgMT-RelayContext-v3',
        'shortMsgMT-RelayContext-v2',
        'shortMsgMT-RelayContext-v1',
        'msPurgingContext-v3',
        'msPurgingContext-v2',
        'subscriberInfoEnquiryContext-v3',
        'anyTimeInfoEnquiryContext-v3',
        'groupCallControlContext-v3',
        'groupCallInfoRetControlContext-v3',
        'gprsLocationUpdateContext-v3',
        'gprsLocationInfoRetrievalContext-v4',
        'gprsLocationInfoRetrievalContext-v3',
        'failureReportContext-v3',
        'gprsNotifyContext-v3',
        'ss-InvocationNotificationContext-v3',
        'reportingContext-v3',
        'callCompletionContext-v3',
        'locationSvcGatewayContext-v3',
        'locationSvcEnquiryContext-v3',
        'istAlertingContext-v3',
        'serviceTerminationContext-v3',
        'mm-EventReportingContext-v3',
        'anyTimeInfohandlingContext-v3',
        'subscriberDataModificationNotificationContext-v3',
        'authenticationFailureReportContext-v3',
        'resourceManagementContext-v3',
        'shortMsgMT-Relay-VGCS-Context-v3',
        'vcsgLocationUpdateContext-v3',
        'vcsgLocationCancellationContext-v3',
        'Supported-MAP-ApplicationContexts',
        'MAP-Timer',
        'map-timer-s',
        'map-timer-m',
        'map-timer-ml',
        'map-timer-l',
        ]
    _type_ = [
        'MapAppCtxtEquipment',
        'OPERATION-PACKAGE',
        'APPLICATION-CONTEXT',
        'MAP-Timer',
        ]
    _set_ = [
        'Supported-MAP-OperationPackages',
        'Supported-MAP-ApplicationContexts',
        ]
    _val_ = [
        'locationUpdatingPackage-v3',
        'locationUpdatingPackage-v2',
        'locationUpdatingPackage-v1',
        'locationCancellationPackage-v3',
        'locationCancellationPackage-v2',
        'locationCancellationPackage-v1',
        'roamingNumberEnquiryPackage-v3',
        'roamingNumberEnquiryPackage-v2',
        'roamingNumberEnquiryPackage-v1',
        'infoRetrievalPackage-v3',
        'infoRetrievalPackage-v2',
        'infoRetrievalPackage-v1',
        'interVlrInfoRetrievalPackage-v3',
        'interVlrInfoRetrievalPackage-v2',
        'imsiRetrievalPackage-v2',
        'callControlTransferPackage-v4',
        'callControlTransferPackage-v3',
        'interrogationPackage-v3',
        'interrogationPackage-v2',
        'interrogationPackage-v1',
        'handoverControlPackage-v3',
        'handoverControlPackage-v2',
        'handoverControlPackage-v1',
        'subscriberDataMngtStandAlonePackage-v3',
        'subscriberDataMngtStandAlonePackage-v2',
        'subscriberDataMngtStandAlonePackage-v1',
        'equipmentMngtPackage-v3',
        'equipmentMngtPackage-v2',
        'equipmentMngtPackage-v1',
        'subscriberDataMngtPackage-v3',
        'subscriberDataMngtPackage-v2',
        'subscriberDataMngtPackage-v1',
        'resetPackage-v3',
        'resetPackage-v2',
        'resetPackage-v1',
        'tracingStandAlonePackage-v3',
        'tracingStandAlonePackage-v2',
        'tracingStandAlonePackage-v1',
        'functionalSsPackage-v2',
        'functionalSsPackage-v1',
        'tracingPackage-v3',
        'tracingPackage-v2',
        'tracingPackage-v1',
        'bindingPackage-v1',
        'unstructuredSsPackage-v2',
        'unstructuredSsPackage-v1',
        'mo-ShortMsgRelayPackage-v3',
        'shortMsgRelayPackage-v2',
        'shortMsgRelayPackage-v1',
        'shortMsgGatewayPackage-v3',
        'shortMsgGatewayPackage-v2',
        'shortMsgGatewayPackage-v1',
        'mt-ShortMsgRelayPackage-v3',
        'mwdMngtPackage-v3',
        'mwdMngtPackage-v2',
        'mwdMngtPackage-v1',
        'alertingPackage-v2',
        'alertingPackage-v1',
        'dataRestorationPackage-v3',
        'dataRestorationPackage-v2',
        'dataRestorationPackage-v1',
        'purgingPackage-v3',
        'purgingPackage-v2',
        'subscriberInformationEnquiryPackage-v3',
        'anyTimeInformationEnquiryPackage-v3',
        'groupCallControlPackage-v3',
        'groupCallInfoRetrievalPackage-v3',
        'gprsLocationUpdatingPackage-v3',
        'gprsInterrogationPackage-v4',
        'gprsInterrogationPackage-v3',
        'failureReportingPackage-v3',
        'gprsNotifyingPackage-v3',
        'ss-InvocationNotificationPackage-v3',
        'setReportingStatePackage-v3',
        'statusReportPackage-v3',
        'remoteUserFreePackage-v3',
        'callCompletionPackage-v3',
        'locationSvcGatewayPackage-v3',
        'locationSvcEnquiryPackage-v3',
        'locationSvcReportingPackage-v3',
        'ist-AlertingPackage-v3',
        'serviceTerminationPackage-v3',
        'mm-EventReportingPackage-v3',
        'anyTimeInformationHandlingPackage-v3',
        'subscriberDataModificationNotificationPackage-v3',
        'authenticationFailureReportPackage-v3',
        'resourceManagementPackage-v3',
        'mt-ShortMsgRelay-VGCS-Package-v3',
        'vcsgLocationUpdatingPackage-v3',
        'vcsgLocationCancellationPackage-v3',
        'networkLocUpContext-v3',
        'networkLocUpContext-v2',
        'networkLocUpContext-v1',
        'locationCancellationContext-v3',
        'locationCancellationContext-v2',
        'locationCancellationContext-v1',
        'roamingNumberEnquiryContext-v3',
        'roamingNumberEnquiryContext-v2',
        'roamingNumberEnquiryContext-v1',
        'locationInfoRetrievalContext-v3',
        'locationInfoRetrievalContext-v2',
        'locationInfoRetrievalContext-v1',
        'callControlTransferContext-v4',
        'callControlTransferContext-v3',
        'resetContext-v3',
        'resetContext-v2',
        'resetContext-v1',
        'handoverControlContext-v3',
        'handoverControlContext-2',
        'handoverControlContext-v1',
        'imsiRetrievalContext-v2',
        'equipmentMngtContext-v3',
        'equipmentMngtContext-v2',
        'equipmentMngtContext-v1',
        'infoRetrievalContext-v3',
        'infoRetrievalContext-v2',
        'infoRetrievalContext-v1',
        'interVlrInfoRetrievalContext-v3',
        'interVlrInfoRetrievalContext-v2',
        'subscriberDataMngtContext-v3',
        'subscriberDataMngtContext-v2',
        'subscriberDataMngtContext-v1',
        'tracingContext-v3',
        'tracingContext-v2',
        'tracingContext-v1',
        'networkFunctionalSsContext-v2',
        'networkFunctionalSsContext-v1',
        'networkUnstructuredSsContext-v2',
        'shortMsgGatewayContext-v3',
        'shortMsgGatewayContext-v2',
        'shortMsgGatewayContext-v1',
        'shortMsgMO-RelayContext-v3',
        'shortMsg-RelayContext-v2',
        'shortMsg-RelayContext-v1',
        'shortMsgAlertContext-v2',
        'shortMsgAlertContext-v1',
        'mwdMngtContext-v3',
        'mwdMngtContext-v2',
        'mwdMngtContext-v1',
        'shortMsgMT-RelayContext-v3',
        'shortMsgMT-RelayContext-v2',
        'shortMsgMT-RelayContext-v1',
        'msPurgingContext-v3',
        'msPurgingContext-v2',
        'subscriberInfoEnquiryContext-v3',
        'anyTimeInfoEnquiryContext-v3',
        'groupCallControlContext-v3',
        'groupCallInfoRetControlContext-v3',
        'gprsLocationUpdateContext-v3',
        'gprsLocationInfoRetrievalContext-v4',
        'gprsLocationInfoRetrievalContext-v3',
        'failureReportContext-v3',
        'gprsNotifyContext-v3',
        'ss-InvocationNotificationContext-v3',
        'reportingContext-v3',
        'callCompletionContext-v3',
        'locationSvcGatewayContext-v3',
        'locationSvcEnquiryContext-v3',
        'istAlertingContext-v3',
        'serviceTerminationContext-v3',
        'mm-EventReportingContext-v3',
        'anyTimeInfohandlingContext-v3',
        'subscriberDataModificationNotificationContext-v3',
        'authenticationFailureReportContext-v3',
        'resourceManagementContext-v3',
        'shortMsgMT-Relay-VGCS-Context-v3',
        'vcsgLocationUpdateContext-v3',
        'vcsgLocationCancellationContext-v3',
        'map-timer-s',
        'map-timer-m',
        'map-timer-ml',
        'map-timer-l',
        ]
    _class_ = [
        'OPERATION-PACKAGE',
        'APPLICATION-CONTEXT',
        'locationUpdatingPackage-v3',
        'locationUpdatingPackage-v2',
        'locationUpdatingPackage-v1',
        'locationCancellationPackage-v3',
        'locationCancellationPackage-v2',
        'locationCancellationPackage-v1',
        'roamingNumberEnquiryPackage-v3',
        'roamingNumberEnquiryPackage-v2',
        'roamingNumberEnquiryPackage-v1',
        'infoRetrievalPackage-v3',
        'infoRetrievalPackage-v2',
        'infoRetrievalPackage-v1',
        'interVlrInfoRetrievalPackage-v3',
        'interVlrInfoRetrievalPackage-v2',
        'imsiRetrievalPackage-v2',
        'callControlTransferPackage-v4',
        'callControlTransferPackage-v3',
        'interrogationPackage-v3',
        'interrogationPackage-v2',
        'interrogationPackage-v1',
        'handoverControlPackage-v3',
        'handoverControlPackage-v2',
        'handoverControlPackage-v1',
        'subscriberDataMngtStandAlonePackage-v3',
        'subscriberDataMngtStandAlonePackage-v2',
        'subscriberDataMngtStandAlonePackage-v1',
        'equipmentMngtPackage-v3',
        'equipmentMngtPackage-v2',
        'equipmentMngtPackage-v1',
        'subscriberDataMngtPackage-v3',
        'subscriberDataMngtPackage-v2',
        'subscriberDataMngtPackage-v1',
        'resetPackage-v3',
        'resetPackage-v2',
        'resetPackage-v1',
        'tracingStandAlonePackage-v3',
        'tracingStandAlonePackage-v2',
        'tracingStandAlonePackage-v1',
        'functionalSsPackage-v2',
        'functionalSsPackage-v1',
        'tracingPackage-v3',
        'tracingPackage-v2',
        'tracingPackage-v1',
        'bindingPackage-v1',
        'unstructuredSsPackage-v2',
        'unstructuredSsPackage-v1',
        'mo-ShortMsgRelayPackage-v3',
        'shortMsgRelayPackage-v2',
        'shortMsgRelayPackage-v1',
        'shortMsgGatewayPackage-v3',
        'shortMsgGatewayPackage-v2',
        'shortMsgGatewayPackage-v1',
        'mt-ShortMsgRelayPackage-v3',
        'mwdMngtPackage-v3',
        'mwdMngtPackage-v2',
        'mwdMngtPackage-v1',
        'alertingPackage-v2',
        'alertingPackage-v1',
        'dataRestorationPackage-v3',
        'dataRestorationPackage-v2',
        'dataRestorationPackage-v1',
        'purgingPackage-v3',
        'purgingPackage-v2',
        'subscriberInformationEnquiryPackage-v3',
        'anyTimeInformationEnquiryPackage-v3',
        'groupCallControlPackage-v3',
        'groupCallInfoRetrievalPackage-v3',
        'gprsLocationUpdatingPackage-v3',
        'gprsInterrogationPackage-v4',
        'gprsInterrogationPackage-v3',
        'failureReportingPackage-v3',
        'gprsNotifyingPackage-v3',
        'ss-InvocationNotificationPackage-v3',
        'setReportingStatePackage-v3',
        'statusReportPackage-v3',
        'remoteUserFreePackage-v3',
        'callCompletionPackage-v3',
        'locationSvcGatewayPackage-v3',
        'locationSvcEnquiryPackage-v3',
        'locationSvcReportingPackage-v3',
        'ist-AlertingPackage-v3',
        'serviceTerminationPackage-v3',
        'mm-EventReportingPackage-v3',
        'anyTimeInformationHandlingPackage-v3',
        'subscriberDataModificationNotificationPackage-v3',
        'authenticationFailureReportPackage-v3',
        'resourceManagementPackage-v3',
        'mt-ShortMsgRelay-VGCS-Package-v3',
        'vcsgLocationUpdatingPackage-v3',
        'vcsgLocationCancellationPackage-v3',
        'Supported-MAP-OperationPackages',
        'networkLocUpContext-v3',
        'networkLocUpContext-v2',
        'networkLocUpContext-v1',
        'locationCancellationContext-v3',
        'locationCancellationContext-v2',
        'locationCancellationContext-v1',
        'roamingNumberEnquiryContext-v3',
        'roamingNumberEnquiryContext-v2',
        'roamingNumberEnquiryContext-v1',
        'locationInfoRetrievalContext-v3',
        'locationInfoRetrievalContext-v2',
        'locationInfoRetrievalContext-v1',
        'callControlTransferContext-v4',
        'callControlTransferContext-v3',
        'resetContext-v3',
        'resetContext-v2',
        'resetContext-v1',
        'handoverControlContext-v3',
        'handoverControlContext-2',
        'handoverControlContext-v1',
        'imsiRetrievalContext-v2',
        'equipmentMngtContext-v3',
        'equipmentMngtContext-v2',
        'equipmentMngtContext-v1',
        'infoRetrievalContext-v3',
        'infoRetrievalContext-v2',
        'infoRetrievalContext-v1',
        'interVlrInfoRetrievalContext-v3',
        'interVlrInfoRetrievalContext-v2',
        'subscriberDataMngtContext-v3',
        'subscriberDataMngtContext-v2',
        'subscriberDataMngtContext-v1',
        'tracingContext-v3',
        'tracingContext-v2',
        'tracingContext-v1',
        'networkFunctionalSsContext-v2',
        'networkFunctionalSsContext-v1',
        'networkUnstructuredSsContext-v2',
        'shortMsgGatewayContext-v3',
        'shortMsgGatewayContext-v2',
        'shortMsgGatewayContext-v1',
        'shortMsgMO-RelayContext-v3',
        'shortMsg-RelayContext-v2',
        'shortMsg-RelayContext-v1',
        'shortMsgAlertContext-v2',
        'shortMsgAlertContext-v1',
        'mwdMngtContext-v3',
        'mwdMngtContext-v2',
        'mwdMngtContext-v1',
        'shortMsgMT-RelayContext-v3',
        'shortMsgMT-RelayContext-v2',
        'shortMsgMT-RelayContext-v1',
        'msPurgingContext-v3',
        'msPurgingContext-v2',
        'subscriberInfoEnquiryContext-v3',
        'anyTimeInfoEnquiryContext-v3',
        'groupCallControlContext-v3',
        'groupCallInfoRetControlContext-v3',
        'gprsLocationUpdateContext-v3',
        'gprsLocationInfoRetrievalContext-v4',
        'gprsLocationInfoRetrievalContext-v3',
        'failureReportContext-v3',
        'gprsNotifyContext-v3',
        'ss-InvocationNotificationContext-v3',
        'reportingContext-v3',
        'callCompletionContext-v3',
        'locationSvcGatewayContext-v3',
        'locationSvcEnquiryContext-v3',
        'istAlertingContext-v3',
        'serviceTerminationContext-v3',
        'mm-EventReportingContext-v3',
        'anyTimeInfohandlingContext-v3',
        'subscriberDataModificationNotificationContext-v3',
        'authenticationFailureReportContext-v3',
        'resourceManagementContext-v3',
        'shortMsgMT-Relay-VGCS-Context-v3',
        'vcsgLocationUpdateContext-v3',
        'vcsgLocationCancellationContext-v3',
        'Supported-MAP-ApplicationContexts',
        ]
    _param_ = [
        ]
    
    #-----< MapAppCtxtEquipment >-----#
    MapAppCtxtEquipment = ENUM(name='MapAppCtxtEquipment', mode=MODE_TYPE)
    MapAppCtxtEquipment._cont = ASN1Dict([('smsc', 0), ('nplr', 1), ('css', 2), ('hlr', 6), ('vlr', 7), ('msc', 8), ('eir', 9), ('auc', 10), ('gmlc', 145), ('gsmscf', 147), ('sgsn', 149), ('ggsn', 150)])
    MapAppCtxtEquipment._ext = ['smsc', 'nplr', 'css']
    
    #-----< OPERATION-PACKAGE >-----#
    OPERATION_PACKAGE = CLASS(name='OPERATION-PACKAGE', mode=MODE_TYPE)
    _OPERATION_PACKAGE_Both = CLASS(name='Both', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')), opt=True)
    _OPERATION_PACKAGE_Consumer = CLASS(name='Consumer', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')), opt=True)
    _OPERATION_PACKAGE_ConsumerIn = ENUM(name='ConsumerIn', mode=MODE_SET, typeref=ASN1RefType(('MAPv2v3-Application', 'MapAppCtxtEquipment')), opt=True)
    _OPERATION_PACKAGE_Supplier = CLASS(name='Supplier', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')), opt=True)
    _OPERATION_PACKAGE_SupplierIn = ENUM(name='SupplierIn', mode=MODE_SET, typeref=ASN1RefType(('MAPv2v3-Application', 'MapAppCtxtEquipment')), opt=True)
    _OPERATION_PACKAGE_id = OID(name='id', mode=MODE_VALUE, opt=True, uniq=True)
    OPERATION_PACKAGE._cont = ASN1Dict([
        ('Both', _OPERATION_PACKAGE_Both),
        ('Consumer', _OPERATION_PACKAGE_Consumer),
        ('ConsumerIn', _OPERATION_PACKAGE_ConsumerIn),
        ('Supplier', _OPERATION_PACKAGE_Supplier),
        ('SupplierIn', _OPERATION_PACKAGE_SupplierIn),
        ('id', _OPERATION_PACKAGE_id),
        ])
    
    #-----< APPLICATION-CONTEXT >-----#
    APPLICATION_CONTEXT = CLASS(name='APPLICATION-CONTEXT', mode=MODE_TYPE)
    _APPLICATION_CONTEXT_Symmetric = CLASS(name='Symmetric', mode=MODE_SET, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')), opt=True)
    _APPLICATION_CONTEXT_InitiatorConsumerOf = CLASS(name='InitiatorConsumerOf', mode=MODE_SET, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')), opt=True)
    _APPLICATION_CONTEXT_InitiatorIn = ENUM(name='InitiatorIn', mode=MODE_SET, typeref=ASN1RefType(('MAPv2v3-Application', 'MapAppCtxtEquipment')), opt=True)
    _APPLICATION_CONTEXT_ResponderConsumerOf = CLASS(name='ResponderConsumerOf', mode=MODE_SET, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')), opt=True)
    _APPLICATION_CONTEXT_ResponderIn = ENUM(name='ResponderIn', mode=MODE_SET, typeref=ASN1RefType(('MAPv2v3-Application', 'MapAppCtxtEquipment')), opt=True)
    _APPLICATION_CONTEXT_code = OID(name='code', mode=MODE_VALUE, uniq=True)
    APPLICATION_CONTEXT._cont = ASN1Dict([
        ('Symmetric', _APPLICATION_CONTEXT_Symmetric),
        ('InitiatorConsumerOf', _APPLICATION_CONTEXT_InitiatorConsumerOf),
        ('InitiatorIn', _APPLICATION_CONTEXT_InitiatorIn),
        ('ResponderConsumerOf', _APPLICATION_CONTEXT_ResponderConsumerOf),
        ('ResponderIn', _APPLICATION_CONTEXT_ResponderIn),
        ('code', _APPLICATION_CONTEXT_code),
        ])
    
    #-----< locationUpdatingPackage-v3 >-----#
    locationUpdatingPackage_v3 = CLASS(name='locationUpdatingPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateLocationArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'RoamingNotAllowedParam')))
    locationUpdatingPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 2))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('operationCode', ('local', 38))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< locationUpdatingPackage-v2 >-----#
    locationUpdatingPackage_v2 = CLASS(name='locationUpdatingPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_0 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'UpdateLocationArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_0 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'UpdateLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_0 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'NetworkResource')))
    __sendRoutingInfo_Errors_val_ParameterType_4_0 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'RoamingNotAllowedCause')))
    locationUpdatingPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_0), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_0), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 2))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('operationCode', ('local', 38))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< locationUpdatingPackage-v1 >-----#
    locationUpdatingPackage_v1 = CLASS(name='locationUpdatingPackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    locationUpdatingPackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_0), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_0), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 2))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('operationCode', ('local', 38))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< locationCancellationPackage-v3 >-----#
    locationCancellationPackage_v3 = CLASS(name='locationCancellationPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_1 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelLocationArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_1 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    locationCancellationPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_1), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 3))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< locationCancellationPackage-v2 >-----#
    locationCancellationPackage_v2 = CLASS(name='locationCancellationPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_2 = CHOICE(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'CancelLocationArg')))
    locationCancellationPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_2), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 3))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< locationCancellationPackage-v1 >-----#
    locationCancellationPackage_v1 = CLASS(name='locationCancellationPackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    locationCancellationPackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_2), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 3))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< roamingNumberEnquiryPackage-v3 >-----#
    roamingNumberEnquiryPackage_v3 = CLASS(name='roamingNumberEnquiryPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_3 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ProvideRoamingNumberArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_2 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ProvideRoamingNumberRes')))
    __sendRoutingInfo_Errors_val_ParameterType_3_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'OR-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoRoamingNbParam')))
    roamingNumberEnquiryPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_3), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 39))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 4))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))])
    
    #-----< roamingNumberEnquiryPackage-v2 >-----#
    roamingNumberEnquiryPackage_v2 = CLASS(name='roamingNumberEnquiryPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_4 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CH-DataTypes', 'ProvideRoamingNumberArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_3 = OCT_STR(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    __sendRoutingInfo_Errors_val_ParameterType_4_2 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    roamingNumberEnquiryPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_4), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_2), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 39))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 4))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))])
    
    #-----< roamingNumberEnquiryPackage-v1 >-----#
    roamingNumberEnquiryPackage_v1 = CLASS(name='roamingNumberEnquiryPackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    roamingNumberEnquiryPackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_4), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_2), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 39))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 4))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))])
    
    #-----< infoRetrievalPackage-v3 >-----#
    infoRetrievalPackage_v3 = CLASS(name='infoRetrievalPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_5 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendAuthenticationInfoArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_4 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendAuthenticationInfoRes')))
    infoRetrievalPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_5), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 56))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< infoRetrievalPackage-v2 >-----#
    infoRetrievalPackage_v2 = CLASS(name='infoRetrievalPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_6 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendAuthenticationInfoArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_5 = SEQ_OF(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendAuthenticationInfoRes')))
    infoRetrievalPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_6), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_5), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 56))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< infoRetrievalPackage-v1 >-----#
    infoRetrievalPackage_v1 = CLASS(name='infoRetrievalPackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_7 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendParametersArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_6 = SEQ_OF(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SentParameterList')))
    infoRetrievalPackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_7), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_6), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 9))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[]))])
    
    #-----< interVlrInfoRetrievalPackage-v3 >-----#
    interVlrInfoRetrievalPackage_v3 = CLASS(name='interVlrInfoRetrievalPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_8 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendIdentificationArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_7 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendIdentificationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    interVlrInfoRetrievalPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_8), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_7), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 55))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))])
    
    #-----< interVlrInfoRetrievalPackage-v2 >-----#
    interVlrInfoRetrievalPackage_v2 = CLASS(name='interVlrInfoRetrievalPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_9 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'TMSI')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_8 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendIdentificationRes')))
    interVlrInfoRetrievalPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_9), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_8), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 55))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))])
    
    #-----< imsiRetrievalPackage-v2 >-----#
    imsiRetrievalPackage_v2 = CLASS(name='imsiRetrievalPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_10 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_9 = OCT_STR(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    imsiRetrievalPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_10), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_9), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 58))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< callControlTransferPackage-v4 >-----#
    callControlTransferPackage_v4 = CLASS(name='callControlTransferPackage-v4', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__11 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ResumeCallHandlingArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_10 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ResumeCallHandlingRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ForwardingFailedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'OR-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    callControlTransferPackage_v4._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__11), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_10), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_2), ('errorCode', ('local', 47))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_2), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 6))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])
    
    #-----< callControlTransferPackage-v3 >-----#
    callControlTransferPackage_v3 = CLASS(name='callControlTransferPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    callControlTransferPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__11), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_10), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_2), ('errorCode', ('local', 47))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_2), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 6))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])
    
    #-----< interrogationPackage-v3 >-----#
    interrogationPackage_v3 = CLASS(name='interrogationPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___12 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SendRoutingInfoArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0__11 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SendRoutingInfoRes')))
    __sendRoutingInfo_Errors_val_ParameterType_5_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NumberChangedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BearerServNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TeleservNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_10 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BusySubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_11 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoSubscriberReplyParam')))
    __sendRoutingInfo_Errors_val_ParameterType_12 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    __sendRoutingInfo_Errors_val_ParameterType_13 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CUG-RejectParam')))
    __sendRoutingInfo_Errors_val_ParameterType_14 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ForwardingViolationParam')))
    interrogationPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___12), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__11), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_0), ('errorCode', ('local', 44))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10), ('errorCode', ('local', 45))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_11), ('errorCode', ('local', 46))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_12), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_13), ('errorCode', ('local', 15))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_14), ('errorCode', ('local', 14))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 22))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'gsmscf'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'nplr'], rr=[], ev=None, er=[]))])
    
    #-----< interrogationPackage-v2 >-----#
    interrogationPackage_v2 = CLASS(name='interrogationPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____13 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CH-DataTypes', 'SendRoutingInfoArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0___12 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CH-DataTypes', 'SendRoutingInfoRes')))
    __sendRoutingInfo_Errors_val_ParameterType_8_0 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    __sendRoutingInfo_Errors_val_ParameterType_9_0 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    __sendRoutingInfo_Errors_val_ParameterType_10_0 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CUG-RejectCause')))
    interrogationPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____13), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___12), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 44))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_0), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_0), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_0), ('errorCode', ('local', 15))]), dict([('errorCode', ('local', 14))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 22))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'gsmscf'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'nplr'], rr=[], ev=None, er=[]))])
    
    #-----< interrogationPackage-v1 >-----#
    interrogationPackage_v1 = CLASS(name='interrogationPackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    interrogationPackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____13), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___12), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 44))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_0), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_0), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_0), ('errorCode', ('local', 15))]), dict([('errorCode', ('local', 14))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 22))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'gsmscf'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'nplr'], rr=[], ev=None, er=[]))])
    
    #-----< handoverControlPackage-v3 >-----#
    handoverControlPackage_v3 = CLASS(name='handoverControlPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____14 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareHO-Arg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0____13 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareHO-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TargetCellOutsideGCA-Param')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_1 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ForwardAccessSignalling-Arg')))
    __OPERATION_PACKAGE_Consumer_val_ArgumentType_0 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendEndSignal-Arg')))
    __OPERATION_PACKAGE_Consumer_val_ResultType_0 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendEndSignal-Res')))
    __OPERATION_PACKAGE_Consumer_val_ArgumentType_1 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ProcessAccessSignalling-Arg')))
    __OPERATION_PACKAGE_Consumer_val_ArgumentType_2 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareSubsequentHO-Arg')))
    __OPERATION_PACKAGE_Consumer_val_ResultType_2 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareSubsequentHO-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_0_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    handoverControlPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____14), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____13), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('errorCode', ('local', 25))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 42))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 68))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1), ('operationCode', ('local', 34))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_0), ('operationCode', ('local', 29))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1), ('operationCode', ('local', 33))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_2), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])
    
    #-----< handoverControlPackage-v2 >-----#
    handoverControlPackage_v2 = CLASS(name='handoverControlPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______15 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PrepareHO-Arg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_____14 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PrepareHO-Res')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_0 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_0 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_0 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    __OPERATION_PACKAGE_Consumer_val_ArgumentType_2_0 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PrepareSubsequentHO-Arg')))
    __OPERATION_PACKAGE_Consumer_val_ResultType_2_0 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    handoverControlPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______15), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____14), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 25))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 68))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_0), ('operationCode', ('local', 34))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_0), ('operationCode', ('local', 29))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_0), ('operationCode', ('local', 33))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_2_0), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_2_0), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])
    
    #-----< handoverControlPackage-v1 >-----#
    handoverControlPackage_v1 = CLASS(name='handoverControlPackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______16 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PerformHO-Arg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0______15 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PerformHO-Res')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_2 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'TraceSubscriberActivityArg')))
    __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_1 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'NoteInternalHO-Arg')))
    __OPERATION_PACKAGE_Consumer_val_ArgumentType_2_1 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    __OPERATION_PACKAGE_Consumer_val_ArgumentType_3 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PrepareSubsequentHO-Arg')))
    __OPERATION_PACKAGE_Consumer_val_ResultType_3 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    handoverControlPackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______16), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______15), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 2))]), dict([('errorCode', ('local', 23))]), dict([('errorCode', ('local', 24))]), dict([('errorCode', ('local', 25))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 28))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_0), ('operationCode', ('local', 34))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_2), ('operationCode', ('local', 52))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_0), ('operationCode', ('local', 29))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_1), ('operationCode', ('local', 35))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_2_1), ('operationCode', ('local', 33))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_3), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_3), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])
    
    #-----< subscriberDataMngtStandAlonePackage-v3 >-----#
    subscriberDataMngtStandAlonePackage_v3 = CLASS(name='subscriberDataMngtStandAlonePackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________17 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'InsertSubscriberDataArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_______16 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'InsertSubscriberDataRes')))
    __sendRoutingInfo_Errors_val_ParameterType_2_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_1 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'DeleteSubscriberDataArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_1 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'DeleteSubscriberDataRes')))
    subscriberDataMngtStandAlonePackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________17), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______16), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_1), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 8))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< subscriberDataMngtStandAlonePackage-v2 >-----#
    subscriberDataMngtStandAlonePackage_v2 = CLASS(name='subscriberDataMngtStandAlonePackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________18 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'InsertSubscriberDataArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0________17 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'InsertSubscriberDataRes')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_2 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'DeleteSubscriberDataArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_1_0 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'DeleteSubscriberDataRes')))
    subscriberDataMngtStandAlonePackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________18), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________17), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_2), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_0), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 8))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< subscriberDataMngtStandAlonePackage-v1 >-----#
    subscriberDataMngtStandAlonePackage_v1 = CLASS(name='subscriberDataMngtStandAlonePackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    subscriberDataMngtStandAlonePackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________18), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________17), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_2), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_0), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 8))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< equipmentMngtPackage-v3 >-----#
    equipmentMngtPackage_v3 = CLASS(name='equipmentMngtPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________19 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CheckIMEI-Arg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_________18 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CheckIMEI-Res')))
    equipmentMngtPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________19), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________18), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('errorCode', ('local', 7))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 43))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['eir'], rr=[], ev=None, er=[]))])
    
    #-----< equipmentMngtPackage-v2 >-----#
    equipmentMngtPackage_v2 = CLASS(name='equipmentMngtPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________20 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMEI')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0__________19 = ENUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'EquipmentStatus')))
    equipmentMngtPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________20), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________19), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 7))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 43))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['eir'], rr=[], ev=None, er=[]))])
    
    #-----< equipmentMngtPackage-v1 >-----#
    equipmentMngtPackage_v1 = CLASS(name='equipmentMngtPackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    equipmentMngtPackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________20), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________19), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 7))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 43))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['eir'], rr=[], ev=None, er=[]))])
    
    #-----< subscriberDataMngtPackage-v3 >-----#
    subscriberDataMngtPackage_v3 = CLASS(name='subscriberDataMngtPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    subscriberDataMngtPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________17), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______16), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< subscriberDataMngtPackage-v2 >-----#
    subscriberDataMngtPackage_v2 = CLASS(name='subscriberDataMngtPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    subscriberDataMngtPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________18), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________17), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< subscriberDataMngtPackage-v1 >-----#
    subscriberDataMngtPackage_v1 = CLASS(name='subscriberDataMngtPackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    subscriberDataMngtPackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________18), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________17), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< resetPackage-v3 >-----#
    resetPackage_v3 = CLASS(name='resetPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________21 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ResetArg')))
    resetPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________21), ('operationCode', ('local', 37))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< resetPackage-v2 >-----#
    resetPackage_v2 = CLASS(name='resetPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________22 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'ResetArg')))
    resetPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________22), ('operationCode', ('local', 37))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< resetPackage-v1 >-----#
    resetPackage_v1 = CLASS(name='resetPackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    resetPackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________22), ('operationCode', ('local', 37))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< tracingStandAlonePackage-v3 >-----#
    tracingStandAlonePackage_v3 = CLASS(name='tracingStandAlonePackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________23 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'ActivateTraceModeArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0___________20 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'ActivateTraceModeRes')))
    __sendRoutingInfo_Errors_val_ParameterType_4_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TracingBufferFullParam')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_3 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'DeactivateTraceModeArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_1_1 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'DeactivateTraceModeRes')))
    tracingStandAlonePackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________23), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________20), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_1), ('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_3), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 51))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< tracingStandAlonePackage-v2 >-----#
    tracingStandAlonePackage_v2 = CLASS(name='tracingStandAlonePackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________24 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'ActivateTraceModeArg')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_4 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'DeactivateTraceModeArg')))
    tracingStandAlonePackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 51))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< tracingStandAlonePackage-v1 >-----#
    tracingStandAlonePackage_v1 = CLASS(name='tracingStandAlonePackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    tracingStandAlonePackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 51))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< functionalSsPackage-v2 >-----#
    functionalSsPackage_v2 = CLASS(name='functionalSsPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________25 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'RegisterSS-Arg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0____________21 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    __sendRoutingInfo_Errors_val_ParameterType_6_1 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    __sendRoutingInfo_Errors_val_ParameterType_8_1 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Status')))
    __sendRoutingInfo_Errors_val_ParameterType_9_1 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-SubscriptionOption')))
    __sendRoutingInfo_Errors_val_ParameterType_10_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'SS-IncompatibilityCause')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_5 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_1_2 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_2_0 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_2 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_3 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_3 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_4 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_4 = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'Password')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_4._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    __sendRoutingInfo_Errors_val_ParameterType_3_2 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    __sendRoutingInfo_Errors_val_ParameterType_4_5 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-SubscriptionOption')))
    __sendRoutingInfo_Errors_val_ParameterType_5_2 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'PW-RegistrationFailureCause')))
    __Supported_MAPv2_Operations_Linked_val_ArgumentType_0 = ENUM(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'GuidanceInfo')))
    __Supported_MAPv2_Operations_Linked_val_ResultType_0 = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'Password')))
    __Supported_MAPv2_Operations_Linked_val_ResultType_0._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_5 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_5 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'InterrogateSS-Res')))
    __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_1 = ENUM(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'GuidanceInfo')))
    __OPERATION_PACKAGE_Consumer_val_ResultType_0_0 = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'Password')))
    __OPERATION_PACKAGE_Consumer_val_ResultType_0_0._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    functionalSsPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________25), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________21), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_1), ('errorCode', ('local', 20))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 10))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_5), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 11))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_2_0), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_1), ('errorCode', ('local', 20))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 12))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_3), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 13))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_4), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_5), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_2), ('errorCode', ('local', 37))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('Linked', ASN1Set(rv=[dict([('ArgumentType', __Supported_MAPv2_Operations_Linked_val_ArgumentType_0), ('ResultType', __Supported_MAPv2_Operations_Linked_val_ResultType_0), ('operationCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 17))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_5), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_5), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('errorCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 14))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_1), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_0_0), ('operationCode', ('local', 18))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< functionalSsPackage-v1 >-----#
    functionalSsPackage_v1 = CLASS(name='functionalSsPackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    functionalSsPackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________25), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________21), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_1), ('errorCode', ('local', 20))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 10))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_5), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 11))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_2_0), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_1), ('errorCode', ('local', 20))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 12))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_3), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 13))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_4), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_5), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_2), ('errorCode', ('local', 37))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('Linked', ASN1Set(rv=[dict([('ArgumentType', __Supported_MAPv2_Operations_Linked_val_ArgumentType_0), ('ResultType', __Supported_MAPv2_Operations_Linked_val_ResultType_0), ('operationCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 17))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_5), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_5), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('errorCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 14))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_1), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_0_0), ('operationCode', ('local', 18))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< tracingPackage-v3 >-----#
    tracingPackage_v3 = CLASS(name='tracingPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    tracingPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________23), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________20), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_1), ('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< tracingPackage-v2 >-----#
    tracingPackage_v2 = CLASS(name='tracingPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    tracingPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< tracingPackage-v1 >-----#
    tracingPackage_v1 = CLASS(name='tracingPackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    tracingPackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< bindingPackage-v1 >-----#
    bindingPackage_v1 = CLASS(name='bindingPackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________26 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'BeginSubscriberActivityArg')))
    bindingPackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________26), ('operationCode', ('local', 54))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'gsmscf'], rr=[], ev=None, er=[]))])
    
    #-----< unstructuredSsPackage-v2 >-----#
    unstructuredSsPackage_v2 = CLASS(name='unstructuredSsPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________27 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Arg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________22 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4_6 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_2 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Arg')))
    __OPERATION_PACKAGE_Consumer_val_ResultType_0_1 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_3_3 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_2 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Arg')))
    unstructuredSsPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________27), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________22), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 71))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_6), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 59))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_2), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_0_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 60))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 61))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'gsmscf'], rr=[], ev=None, er=[]))])
    
    #-----< unstructuredSsPackage-v1 >-----#
    unstructuredSsPackage_v1 = CLASS(name='unstructuredSsPackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________28 = STR_IA5(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-UserData')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0______________23 = STR_IA5(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-UserData')))
    unstructuredSsPackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________28), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________23), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 19))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'gsmscf'], rr=[], ev=None, er=[]))])
    
    #-----< mo-ShortMsgRelayPackage-v3 >-----#
    mo_ShortMsgRelayPackage_v3 = CLASS(name='mo-ShortMsgRelayPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________29 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MO-ForwardSM-Arg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________24 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MO-ForwardSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_2_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SM-DeliveryFailureCause')))
    mo_ShortMsgRelayPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________29), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_1), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])
    
    #-----< shortMsgRelayPackage-v2 >-----#
    shortMsgRelayPackage_v2 = CLASS(name='shortMsgRelayPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________30 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'ForwardSM-Arg')))
    __sendRoutingInfo_Errors_val_ParameterType_7_0 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    __sendRoutingInfo_Errors_val_ParameterType_9_2 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'SM-DeliveryFailureCause')))
    shortMsgRelayPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________30), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_0), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_2), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])
    
    #-----< shortMsgRelayPackage-v1 >-----#
    shortMsgRelayPackage_v1 = CLASS(name='shortMsgRelayPackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    shortMsgRelayPackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________30), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_0), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_2), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])
    
    #-----< shortMsgGatewayPackage-v3 >-----#
    shortMsgGatewayPackage_v3 = CLASS(name='shortMsgGatewayPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________31 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'RoutingInfoForSM-Arg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0________________25 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'RoutingInfoForSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TeleservNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_2 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberSM-Param')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_6 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReportSM-DeliveryStatusArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_1_3 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReportSM-DeliveryStatusRes')))
    __sendRoutingInfo_Errors_val_ParameterType_2_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'MessageWaitListFullParam')))
    __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_3 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'InformServiceCentreArg')))
    shortMsgGatewayPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________31), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________25), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_2), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_1), ('errorCode', ('local', 6))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_6), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_5), ('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_3), ('operationCode', ('local', 63))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< shortMsgGatewayPackage-v2 >-----#
    shortMsgGatewayPackage_v2 = CLASS(name='shortMsgGatewayPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________32 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'RoutingInfoForSM-Arg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________26 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'RoutingInfoForSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_6_3 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    __sendRoutingInfo_Errors_val_ParameterType_7_2 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_7 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'ReportSM-DeliveryStatusArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_1_4 = OCT_STR(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_4 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'InformServiceCentreArg')))
    shortMsgGatewayPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________32), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________26), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_3), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_2), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_7), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_4), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_4), ('operationCode', ('local', 63))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< shortMsgGatewayPackage-v1 >-----#
    shortMsgGatewayPackage_v1 = CLASS(name='shortMsgGatewayPackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    shortMsgGatewayPackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________32), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________26), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_3), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_2), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_7), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_4), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< mt-ShortMsgRelayPackage-v3 >-----#
    mt_ShortMsgRelayPackage_v3 = CLASS(name='mt-ShortMsgRelayPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________33 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-Arg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________27 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_5_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalEquipmentParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SubBusyForMT-SMS-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_8_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SM-DeliveryFailureCause')))
    __sendRoutingInfo_Errors_val_ParameterType_9_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberSM-Param')))
    mt_ShortMsgRelayPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________33), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________27), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_4), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_4), ('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_3), ('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_2), ('errorCode', ('local', 32))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_3), ('errorCode', ('local', 6))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 44))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc', 'sgsn', 'smsc'], rr=[], ev=None, er=[]))])
    
    #-----< mwdMngtPackage-v3 >-----#
    mwdMngtPackage_v3 = CLASS(name='mwdMngtPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________34 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReadyForSM-Arg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________28 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReadyForSM-Res')))
    mwdMngtPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________34), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________28), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_1), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 66))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< mwdMngtPackage-v2 >-----#
    mwdMngtPackage_v2 = CLASS(name='mwdMngtPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________35 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'ReadyForSM-Arg')))
    mwdMngtPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________35), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 66))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< mwdMngtPackage-v1 >-----#
    mwdMngtPackage_v1 = CLASS(name='mwdMngtPackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________36 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    mwdMngtPackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________36), ('operationCode', ('local', 48))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< alertingPackage-v2 >-----#
    alertingPackage_v2 = CLASS(name='alertingPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________37 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'AlertServiceCentreArg')))
    alertingPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________37), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 64))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])
    
    #-----< alertingPackage-v1 >-----#
    alertingPackage_v1 = CLASS(name='alertingPackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    alertingPackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________37), ('operationCode', ('local', 49))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])
    
    #-----< dataRestorationPackage-v3 >-----#
    dataRestorationPackage_v3 = CLASS(name='dataRestorationPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________38 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RestoreDataArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________29 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RestoreDataRes')))
    dataRestorationPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________38), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________29), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 57))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< dataRestorationPackage-v2 >-----#
    dataRestorationPackage_v2 = CLASS(name='dataRestorationPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________39 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'RestoreDataArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________30 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'RestoreDataRes')))
    dataRestorationPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________39), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________30), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 57))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< dataRestorationPackage-v1 >-----#
    dataRestorationPackage_v1 = CLASS(name='dataRestorationPackage-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    dataRestorationPackage_v1._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_7), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_6), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 9))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[]))])
    
    #-----< purgingPackage-v3 >-----#
    purgingPackage_v3 = CLASS(name='purgingPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________40 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PurgeMS-Arg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________31 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PurgeMS-Res')))
    purgingPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________40), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________31), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 67))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< purgingPackage-v2 >-----#
    purgingPackage_v2 = CLASS(name='purgingPackage-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________41 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PurgeMS-Arg')))
    purgingPackage_v2._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________41), ('operationCode', ('local', 67))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< subscriberInformationEnquiryPackage-v3 >-----#
    subscriberInformationEnquiryPackage_v3 = CLASS(name='subscriberInformationEnquiryPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________42 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ProvideSubscriberInfoArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________32 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ProvideSubscriberInfoRes')))
    subscriberInformationEnquiryPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________42), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________32), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 70))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< anyTimeInformationEnquiryPackage-v3 >-----#
    anyTimeInformationEnquiryPackage_v3 = CLASS(name='anyTimeInformationEnquiryPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________43 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeInterrogationArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________33 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeInterrogationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATI-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    anyTimeInformationEnquiryPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________43), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________33), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_3), ('errorCode', ('local', 49))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_3), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_6), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 71))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'gmlc', 'nplr'], rr=[], ev=None, er=[]))])
    
    #-----< groupCallControlPackage-v3 >-----#
    groupCallControlPackage_v3 = CLASS(name='groupCallControlPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________44 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'PrepareGroupCallArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________34 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'PrepareGroupCallRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoGroupCallNbParam')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_8 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'ForwardGroupCallSignallingArg')))
    __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_5 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallEndSignalArg')))
    __OPERATION_PACKAGE_Consumer_val_ResultType_0_2 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallEndSignalRes')))
    __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_3 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'ProcessGroupCallSignallingArg')))
    groupCallControlPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________44), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________34), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_4), ('errorCode', ('local', 50))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 39))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_8), ('operationCode', ('local', 42))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_5), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_0_2), ('operationCode', ('local', 40))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_3), ('operationCode', ('local', 41))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])
    
    #-----< groupCallInfoRetrievalPackage-v3 >-----#
    groupCallInfoRetrievalPackage_v3 = CLASS(name='groupCallInfoRetrievalPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________________45 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallInfoArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________________35 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallInfoRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'OngoingGroupCallParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_8 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TeleservNotProvParam')))
    groupCallInfoRetrievalPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________________45), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________________35), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_5), ('errorCode', ('local', 22))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_8), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 84))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])
    
    #-----< gprsLocationUpdatingPackage-v3 >-----#
    gprsLocationUpdatingPackage_v3 = CLASS(name='gprsLocationUpdatingPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________________46 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateGprsLocationArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________________36 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateGprsLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_3_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'RoamingNotAllowedParam')))
    gprsLocationUpdatingPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________________46), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________________36), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_7), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 23))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< gprsInterrogationPackage-v4 >-----#
    gprsInterrogationPackage_v4 = CLASS(name='gprsInterrogationPackage-v4', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________47 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendRoutingInfoForGprsArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________37 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendRoutingInfoForGprsRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1_6 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_5 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    gprsInterrogationPackage_v4._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________47), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________37), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_4), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_3), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_6), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_5), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 24))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< gprsInterrogationPackage-v3 >-----#
    gprsInterrogationPackage_v3 = CLASS(name='gprsInterrogationPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    gprsInterrogationPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________47), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________37), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_4), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_3), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_6), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_5), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 24))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< failureReportingPackage-v3 >-----#
    failureReportingPackage_v3 = CLASS(name='failureReportingPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________________48 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'FailureReportArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________________38 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'FailureReportRes')))
    failureReportingPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________________48), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________________38), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 25))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< gprsNotifyingPackage-v3 >-----#
    gprsNotifyingPackage_v3 = CLASS(name='gprsNotifyingPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________________49 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMsPresentForGprsArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________________39 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMsPresentForGprsRes')))
    gprsNotifyingPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________________49), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________________39), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 26))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[]))])
    
    #-----< ss-InvocationNotificationPackage-v3 >-----#
    ss_InvocationNotificationPackage_v3 = CLASS(name='ss-InvocationNotificationPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________________50 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-InvocationNotificationArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________________40 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-InvocationNotificationRes')))
    ss_InvocationNotificationPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________________50), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________________40), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 72))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[]))])
    
    #-----< setReportingStatePackage-v3 >-----#
    setReportingStatePackage_v3 = CLASS(name='setReportingStatePackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________51 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SetReportingStateArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________41 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SetReportingStateRes')))
    __sendRoutingInfo_Errors_val_ParameterType_4_9 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ResourceLimitationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    setReportingStatePackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________51), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________41), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_9), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 73))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))])
    
    #-----< statusReportPackage-v3 >-----#
    statusReportPackage_v3 = CLASS(name='statusReportPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________________52 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'StatusReportArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________________42 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'StatusReportRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    statusReportPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________________52), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________________42), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 74))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< remoteUserFreePackage-v3 >-----#
    remoteUserFreePackage_v3 = CLASS(name='remoteUserFreePackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________________________53 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'RemoteUserFreeArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________________________43 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'RemoteUserFreeRes')))
    __sendRoutingInfo_Errors_val_ParameterType_2_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IncompatibleTerminalParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_8 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_10 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BusySubscriberParam')))
    remoteUserFreePackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________________________53), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________________________43), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_4), ('errorCode', ('local', 28))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_8), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_10), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_7), ('errorCode', ('local', 45))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 75))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))])
    
    #-----< callCompletionPackage-v3 >-----#
    callCompletionPackage_v3 = CLASS(name='callCompletionPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________________________54 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'RegisterCC-EntryArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________________________44 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'RegisterCC-EntryRes')))
    __sendRoutingInfo_Errors_val_ParameterType_3_9 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4__11 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSS-OperationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_8 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    __sendRoutingInfo_Errors_val_ParameterType_6_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    __sendRoutingInfo_Errors_val_ParameterType_7_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ShortTermDenialParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'LongTermDenialParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_9 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'EraseCC-EntryArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_1_5 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'EraseCC-EntryRes')))
    callCompletionPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________________________54), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________________________44), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_9), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4__11), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_8), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_5), ('errorCode', ('local', 20))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_4), ('errorCode', ('local', 29))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_3), ('errorCode', ('local', 30))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_4), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 76))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_9), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_5), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_9), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4__11), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_8), ('errorCode', ('local', 17))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 77))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< locationSvcGatewayPackage-v3 >-----#
    locationSvcGatewayPackage_v3 = CLASS(name='locationSvcGatewayPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________________55 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'RoutingInfoForLCS-Arg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________________45 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'RoutingInfoForLCS-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_6_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedRequestingNetwork-Param')))
    locationSvcGatewayPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________________55), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________________45), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_6), ('errorCode', ('local', 52))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 85))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['gmlc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< locationSvcEnquiryPackage-v3 >-----#
    locationSvcEnquiryPackage_v3 = CLASS(name='locationSvcEnquiryPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________________________56 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ProvideSubscriberLocation-Arg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________________________46 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ProvideSubscriberLocation-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_7_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedRequestingNetwork-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_9_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedLCSClient-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_10_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'PositionMethodFailure-Param')))
    locationSvcEnquiryPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________________________56), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________________________46), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_4), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_4), ('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_4), ('errorCode', ('local', 52))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_5), ('errorCode', ('local', 53))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_2), ('errorCode', ('local', 54))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 83))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['gmlc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< locationSvcReportingPackage-v3 >-----#
    locationSvcReportingPackage_v3 = CLASS(name='locationSvcReportingPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________________________57 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'SubscriberLocationReport-Arg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________________________47 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'SubscriberLocationReport-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_2_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ResourceLimitationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_9 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedRequestingNetwork-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_6_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownOrUnreachableLCSClient-Param')))
    locationSvcReportingPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________________________57), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________________________47), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_5), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_6), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_9), ('errorCode', ('local', 52))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_7), ('errorCode', ('local', 58))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 86))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['gmlc'], rr=[], ev=None, er=[]))])
    
    #-----< ist-AlertingPackage-v3 >-----#
    ist_AlertingPackage_v3 = CLASS(name='ist-AlertingPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________________________58 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-AlertArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________________________48 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-AlertRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ResourceLimitationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_10 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4___12 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    ist_AlertingPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________________________58), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________________________48), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_10), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4___12), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 87))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< serviceTerminationPackage-v3 >-----#
    serviceTerminationPackage_v3 = CLASS(name='serviceTerminationPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________________59 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-CommandArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________________49 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-CommandRes')))
    serviceTerminationPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________________59), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________________49), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_10), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4___12), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 88))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])
    
    #-----< mm-EventReportingPackage-v3 >-----#
    mm_EventReportingPackage_v3 = CLASS(name='mm-EventReportingPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________________________60 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMM-EventArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________________________50 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMM-EventRes')))
    __sendRoutingInfo_Errors_val_ParameterType_3__11 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'MM-EventNotSupported-Param')))
    mm_EventReportingPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________________________60), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________________________50), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3__11), ('errorCode', ('local', 59))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 89))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[]))])
    
    #-----< anyTimeInformationHandlingPackage-v3 >-----#
    anyTimeInformationHandlingPackage_v3 = CLASS(name='anyTimeInformationHandlingPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________________________________61 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeSubscriptionInterrogationArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________________________________51 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeSubscriptionInterrogationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATSI-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4____13 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BearerServNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSS-OperationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-NotAvailableParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'InformationNotAvailableParam')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_10 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeModificationArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_1_6 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeModificationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATM-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-SubscriptionViolationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9_7 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    __sendRoutingInfo_Errors_val_ParameterType_10_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    __sendRoutingInfo_Errors_val_ParameterType_11_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'InformationNotAvailableParam')))
    anyTimeInformationHandlingPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________________________________61), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________________________________51), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_6), ('errorCode', ('local', 60))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4____13), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_2), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_6), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_5), ('errorCode', ('local', 18))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_6), ('errorCode', ('local', 62))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 62))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_10), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_6), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 61))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4____13), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_2), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_6), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_6), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_7), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_3), ('errorCode', ('local', 20))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_11_0), ('errorCode', ('local', 62))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 65))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< subscriberDataModificationNotificationPackage-v3 >-----#
    subscriberDataModificationNotificationPackage_v3 = CLASS(name='subscriberDataModificationNotificationPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________________________________62 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteSubscriberDataModifiedArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________________________________52 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteSubscriberDataModifiedRes')))
    subscriberDataModificationNotificationPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________________________________62), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________________________________52), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 5))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[]))])
    
    #-----< authenticationFailureReportPackage-v3 >-----#
    authenticationFailureReportPackage_v3 = CLASS(name='authenticationFailureReportPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________________________63 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AuthenticationFailureReportArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________________________53 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AuthenticationFailureReportRes')))
    authenticationFailureReportPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________________________63), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________________________53), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 15))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])
    
    #-----< resourceManagementPackage-v3 >-----#
    resourceManagementPackage_v3 = CLASS(name='resourceManagementPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________________________________64 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ReleaseResourcesArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________________________________54 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ReleaseResourcesRes')))
    resourceManagementPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________________________________64), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________________________________54), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 34))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 20))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])
    
    #-----< mt-ShortMsgRelay-VGCS-Package-v3 >-----#
    mt_ShortMsgRelay_VGCS_Package_v3 = CLASS(name='mt-ShortMsgRelay-VGCS-Package-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________________________________65 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-VGCS-Arg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________________________________55 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-VGCS-Res')))
    mt_ShortMsgRelay_VGCS_Package_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________________________________65), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________________________________55), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 21))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])
    
    #-----< vcsgLocationUpdatingPackage-v3 >-----#
    vcsgLocationUpdatingPackage_v3 = CLASS(name='vcsgLocationUpdatingPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________________________________66 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateVcsgLocationArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________________________________56 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateVcsgLocationRes')))
    vcsgLocationUpdatingPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________________________________66), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________________________________56), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 53))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['css'], rr=[], ev=None, er=[]))])
    
    #-----< vcsgLocationCancellationPackage-v3 >-----#
    vcsgLocationCancellationPackage_v3 = CLASS(name='vcsgLocationCancellationPackage-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________________________67 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelVcsgLocationArg')))
    __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________________________57 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelVcsgLocationRes')))
    vcsgLocationCancellationPackage_v3._val = dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________________________67), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________________________57), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 36))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])
    
    #-----< Supported-MAP-OperationPackages >-----#
    Supported_MAP_OperationPackages = CLASS(name='Supported-MAP-OperationPackages', mode=MODE_SET, typeref=ASN1RefType(('MAPv2v3-Application', 'OPERATION-PACKAGE')))
    Supported_MAP_OperationPackages._val = ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 2))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('operationCode', ('local', 38))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_0), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_0), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 2))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('operationCode', ('local', 38))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_1), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 3))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_2), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 3))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_3), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 39))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 4))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_4), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_2), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 39))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 4))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_5), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 56))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_6), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_5), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 56))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_7), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_6), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 9))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_8), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_7), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 55))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_9), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_8), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 55))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_10), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_9), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 58))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__11), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_10), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_2), ('errorCode', ('local', 47))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_2), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 6))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___12), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__11), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_0), ('errorCode', ('local', 44))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10), ('errorCode', ('local', 45))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_11), ('errorCode', ('local', 46))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_12), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_13), ('errorCode', ('local', 15))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_14), ('errorCode', ('local', 14))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 22))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'gsmscf'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'nplr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____13), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___12), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 44))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_0), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_0), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_0), ('errorCode', ('local', 15))]), dict([('errorCode', ('local', 14))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 22))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'gsmscf'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'nplr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____14), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____13), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('errorCode', ('local', 25))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 42))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 68))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1), ('operationCode', ('local', 34))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_0), ('operationCode', ('local', 29))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1), ('operationCode', ('local', 33))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_2), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______15), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____14), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 25))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 68))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_0), ('operationCode', ('local', 34))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_0), ('operationCode', ('local', 29))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_0), ('operationCode', ('local', 33))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_2_0), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_2_0), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______16), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______15), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 2))]), dict([('errorCode', ('local', 23))]), dict([('errorCode', ('local', 24))]), dict([('errorCode', ('local', 25))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 28))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_0), ('operationCode', ('local', 34))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_2), ('operationCode', ('local', 52))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_0), ('operationCode', ('local', 29))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_1), ('operationCode', ('local', 35))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_2_1), ('operationCode', ('local', 33))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_3), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_3), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________17), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______16), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_1), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 8))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________18), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________17), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_2), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_0), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 8))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________19), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________18), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('errorCode', ('local', 7))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 43))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['eir'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________20), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________19), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 7))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 43))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['eir'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________17), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______16), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________18), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________17), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________21), ('operationCode', ('local', 37))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________22), ('operationCode', ('local', 37))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________23), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________20), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_1), ('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_3), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 51))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 51))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________25), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________21), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_1), ('errorCode', ('local', 20))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 10))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_5), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 11))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_2_0), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_1), ('errorCode', ('local', 20))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 12))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_3), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 13))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_4), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_5), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_2), ('errorCode', ('local', 37))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('Linked', ASN1Set(rv=[dict([('ArgumentType', __Supported_MAPv2_Operations_Linked_val_ArgumentType_0), ('ResultType', __Supported_MAPv2_Operations_Linked_val_ResultType_0), ('operationCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 17))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_5), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_5), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('errorCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 14))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_1), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_0_0), ('operationCode', ('local', 18))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________23), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________20), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_1), ('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________26), ('operationCode', ('local', 54))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'gsmscf'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________27), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________22), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 71))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_6), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 59))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_2), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_0_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 60))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 61))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'gsmscf'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________28), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________23), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 19))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'gsmscf'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________29), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_1), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________30), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_0), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_2), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________31), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________25), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_2), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_1), ('errorCode', ('local', 6))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_6), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_5), ('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_3), ('operationCode', ('local', 63))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________32), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________26), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_3), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_2), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_7), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_4), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_4), ('operationCode', ('local', 63))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________32), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________26), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_3), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_2), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_7), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_4), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________33), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________27), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_4), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_4), ('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_3), ('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_2), ('errorCode', ('local', 32))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_3), ('errorCode', ('local', 6))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 44))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc', 'sgsn', 'smsc'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________34), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________28), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_1), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 66))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________35), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 66))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________36), ('operationCode', ('local', 48))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________37), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 64))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________37), ('operationCode', ('local', 49))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________38), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________29), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 57))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________39), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________30), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 57))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________40), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________31), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 67))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________41), ('operationCode', ('local', 67))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________42), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________32), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 70))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________43), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________33), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_3), ('errorCode', ('local', 49))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_3), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_6), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 71))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'gmlc', 'nplr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________44), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________34), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_4), ('errorCode', ('local', 50))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 39))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_8), ('operationCode', ('local', 42))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_5), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_0_2), ('operationCode', ('local', 40))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_3), ('operationCode', ('local', 41))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________________45), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________________35), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_5), ('errorCode', ('local', 22))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_8), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 84))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________________46), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________________36), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_7), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 23))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________47), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________37), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_4), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_3), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_6), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_5), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 24))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________________48), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________________38), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 25))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________________49), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________________39), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 26))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________________50), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________________40), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 72))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________51), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________41), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_9), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 73))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________________52), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________________42), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 74))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________________________53), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________________________43), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_4), ('errorCode', ('local', 28))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_8), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_10), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_7), ('errorCode', ('local', 45))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 75))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________________________54), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________________________44), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_9), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4__11), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_8), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_5), ('errorCode', ('local', 20))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_4), ('errorCode', ('local', 29))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_3), ('errorCode', ('local', 30))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_4), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 76))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_9), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_5), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_9), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4__11), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_8), ('errorCode', ('local', 17))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 77))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________________55), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________________45), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_6), ('errorCode', ('local', 52))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 85))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['gmlc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________________________56), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________________________46), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_4), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_4), ('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_4), ('errorCode', ('local', 52))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_5), ('errorCode', ('local', 53))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_2), ('errorCode', ('local', 54))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 83))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['gmlc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________________________57), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________________________47), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_5), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_6), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_9), ('errorCode', ('local', 52))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_7), ('errorCode', ('local', 58))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 86))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['gmlc'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________________________58), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________________________48), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_10), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4___12), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 87))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________________59), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________________49), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_10), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4___12), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 88))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________________________60), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________________________50), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3__11), ('errorCode', ('local', 59))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 89))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________________________________61), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________________________________51), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_6), ('errorCode', ('local', 60))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4____13), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_2), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_6), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_5), ('errorCode', ('local', 18))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_6), ('errorCode', ('local', 62))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 62))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_10), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_6), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 61))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4____13), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_2), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_6), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_6), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_7), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_3), ('errorCode', ('local', 20))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_11_0), ('errorCode', ('local', 62))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 65))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________________________________62), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________________________________52), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 5))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________________________63), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________________________53), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 15))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________________________________64), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________________________________54), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 34))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 20))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________________________________65), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________________________________55), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 21))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________________________________66), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________________________________56), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 53))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['css'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________________________67), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________________________57), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 36))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])
    
    #-----< networkLocUpContext-v3 >-----#
    networkLocUpContext_v3 = CLASS(name='networkLocUpContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    networkLocUpContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 2))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('operationCode', ('local', 38))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________38), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________29), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 57))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________17), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______16), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________23), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________20), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_1), ('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 1, 3))])
    
    #-----< networkLocUpContext-v2 >-----#
    networkLocUpContext_v2 = CLASS(name='networkLocUpContext-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    networkLocUpContext_v2._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_0), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_0), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 2))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('operationCode', ('local', 38))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________39), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________30), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 57))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________18), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________17), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 1, 2))])
    
    #-----< networkLocUpContext-v1 >-----#
    networkLocUpContext_v1 = CLASS(name='networkLocUpContext-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    networkLocUpContext_v1._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_0), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_0), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 2))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('operationCode', ('local', 38))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_7), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_6), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 9))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________18), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________17), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 1, 1))])
    
    #-----< locationCancellationContext-v3 >-----#
    locationCancellationContext_v3 = CLASS(name='locationCancellationContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    locationCancellationContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_1), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 3))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 2, 3))])
    
    #-----< locationCancellationContext-v2 >-----#
    locationCancellationContext_v2 = CLASS(name='locationCancellationContext-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    locationCancellationContext_v2._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_2), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 3))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 2, 2))])
    
    #-----< locationCancellationContext-v1 >-----#
    locationCancellationContext_v1 = CLASS(name='locationCancellationContext-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    locationCancellationContext_v1._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_2), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 3))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 2, 1))])
    
    #-----< roamingNumberEnquiryContext-v3 >-----#
    roamingNumberEnquiryContext_v3 = CLASS(name='roamingNumberEnquiryContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    roamingNumberEnquiryContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_3), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 39))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 4))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 3, 3))])
    
    #-----< roamingNumberEnquiryContext-v2 >-----#
    roamingNumberEnquiryContext_v2 = CLASS(name='roamingNumberEnquiryContext-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    roamingNumberEnquiryContext_v2._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_4), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_2), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 39))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 4))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 3, 2))])
    
    #-----< roamingNumberEnquiryContext-v1 >-----#
    roamingNumberEnquiryContext_v1 = CLASS(name='roamingNumberEnquiryContext-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    roamingNumberEnquiryContext_v1._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_4), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_2), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 39))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 4))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 3, 1))])
    
    #-----< locationInfoRetrievalContext-v3 >-----#
    locationInfoRetrievalContext_v3 = CLASS(name='locationInfoRetrievalContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    locationInfoRetrievalContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___12), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__11), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_0), ('errorCode', ('local', 44))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10), ('errorCode', ('local', 45))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_11), ('errorCode', ('local', 46))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_12), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_13), ('errorCode', ('local', 15))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_14), ('errorCode', ('local', 14))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 22))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'gsmscf'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'nplr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'gsmscf'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr', 'nplr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 5, 3))])
    
    #-----< locationInfoRetrievalContext-v2 >-----#
    locationInfoRetrievalContext_v2 = CLASS(name='locationInfoRetrievalContext-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    locationInfoRetrievalContext_v2._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____13), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___12), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 44))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_0), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_0), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_0), ('errorCode', ('local', 15))]), dict([('errorCode', ('local', 14))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 22))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'gsmscf'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'nplr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'gsmscf'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr', 'nplr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 5, 2))])
    
    #-----< locationInfoRetrievalContext-v1 >-----#
    locationInfoRetrievalContext_v1 = CLASS(name='locationInfoRetrievalContext-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    locationInfoRetrievalContext_v1._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____13), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___12), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 44))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_0), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_0), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_0), ('errorCode', ('local', 15))]), dict([('errorCode', ('local', 14))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 22))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'gsmscf'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'nplr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'gsmscf'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr', 'nplr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 5, 1))])
    
    #-----< callControlTransferContext-v4 >-----#
    callControlTransferContext_v4 = CLASS(name='callControlTransferContext-v4', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    callControlTransferContext_v4._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__11), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_10), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_2), ('errorCode', ('local', 47))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_2), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 6))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 6, 4))])
    
    #-----< callControlTransferContext-v3 >-----#
    callControlTransferContext_v3 = CLASS(name='callControlTransferContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    callControlTransferContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__11), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_10), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_2), ('errorCode', ('local', 47))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_2), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 6))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 6, 3))])
    
    #-----< resetContext-v3 >-----#
    resetContext_v3 = CLASS(name='resetContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    resetContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________21), ('operationCode', ('local', 37))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 10, 3))])
    
    #-----< resetContext-v2 >-----#
    resetContext_v2 = CLASS(name='resetContext-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    resetContext_v2._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________22), ('operationCode', ('local', 37))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 10, 2))])
    
    #-----< resetContext-v1 >-----#
    resetContext_v1 = CLASS(name='resetContext-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    resetContext_v1._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________22), ('operationCode', ('local', 37))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 10, 1))])
    
    #-----< handoverControlContext-v3 >-----#
    handoverControlContext_v3 = CLASS(name='handoverControlContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    handoverControlContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____14), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____13), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('errorCode', ('local', 25))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 42))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 68))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1), ('operationCode', ('local', 34))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_0), ('operationCode', ('local', 29))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1), ('operationCode', ('local', 33))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_2), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 11, 3))])
    
    #-----< handoverControlContext-2 >-----#
    handoverControlContext_2 = CLASS(name='handoverControlContext-2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    handoverControlContext_2._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______15), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____14), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 25))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 68))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_0), ('operationCode', ('local', 34))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_0), ('operationCode', ('local', 29))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_0), ('operationCode', ('local', 33))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_2_0), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_2_0), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 11, 2))])
    
    #-----< handoverControlContext-v1 >-----#
    handoverControlContext_v1 = CLASS(name='handoverControlContext-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    handoverControlContext_v1._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______16), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______15), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 2))]), dict([('errorCode', ('local', 23))]), dict([('errorCode', ('local', 24))]), dict([('errorCode', ('local', 25))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 28))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_0), ('operationCode', ('local', 34))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_2), ('operationCode', ('local', 52))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_0), ('operationCode', ('local', 29))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_1), ('operationCode', ('local', 35))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_2_1), ('operationCode', ('local', 33))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_3), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_3), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 11, 1))])
    
    #-----< imsiRetrievalContext-v2 >-----#
    imsiRetrievalContext_v2 = CLASS(name='imsiRetrievalContext-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    imsiRetrievalContext_v2._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_10), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_9), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 58))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 26, 2))])
    
    #-----< equipmentMngtContext-v3 >-----#
    equipmentMngtContext_v3 = CLASS(name='equipmentMngtContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    equipmentMngtContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________19), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________18), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('errorCode', ('local', 7))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 43))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['eir'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['eir'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 13, 3))])
    
    #-----< equipmentMngtContext-v2 >-----#
    equipmentMngtContext_v2 = CLASS(name='equipmentMngtContext-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    equipmentMngtContext_v2._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________20), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________19), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 7))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 43))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['eir'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['eir'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 13, 2))])
    
    #-----< equipmentMngtContext-v1 >-----#
    equipmentMngtContext_v1 = CLASS(name='equipmentMngtContext-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    equipmentMngtContext_v1._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________20), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________19), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 7))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 43))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['eir'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['eir'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 13, 1))])
    
    #-----< infoRetrievalContext-v3 >-----#
    infoRetrievalContext_v3 = CLASS(name='infoRetrievalContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    infoRetrievalContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_5), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 56))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 14, 3))])
    
    #-----< infoRetrievalContext-v2 >-----#
    infoRetrievalContext_v2 = CLASS(name='infoRetrievalContext-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    infoRetrievalContext_v2._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_6), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_5), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 56))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 14, 2))])
    
    #-----< infoRetrievalContext-v1 >-----#
    infoRetrievalContext_v1 = CLASS(name='infoRetrievalContext-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    infoRetrievalContext_v1._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_7), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_6), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 9))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 14, 1))])
    
    #-----< interVlrInfoRetrievalContext-v3 >-----#
    interVlrInfoRetrievalContext_v3 = CLASS(name='interVlrInfoRetrievalContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    interVlrInfoRetrievalContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_8), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_7), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 55))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 15, 3))])
    
    #-----< interVlrInfoRetrievalContext-v2 >-----#
    interVlrInfoRetrievalContext_v2 = CLASS(name='interVlrInfoRetrievalContext-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    interVlrInfoRetrievalContext_v2._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_9), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_8), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 55))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 15, 2))])
    
    #-----< subscriberDataMngtContext-v3 >-----#
    subscriberDataMngtContext_v3 = CLASS(name='subscriberDataMngtContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    subscriberDataMngtContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________17), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______16), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_1), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 8))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 16, 3))])
    
    #-----< subscriberDataMngtContext-v2 >-----#
    subscriberDataMngtContext_v2 = CLASS(name='subscriberDataMngtContext-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    subscriberDataMngtContext_v2._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________18), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________17), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_2), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_0), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 8))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 16, 2))])
    
    #-----< subscriberDataMngtContext-v1 >-----#
    subscriberDataMngtContext_v1 = CLASS(name='subscriberDataMngtContext-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    subscriberDataMngtContext_v1._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________18), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________17), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_2), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_0), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 8))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 16, 1))])
    
    #-----< tracingContext-v3 >-----#
    tracingContext_v3 = CLASS(name='tracingContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    tracingContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________23), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________20), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_1), ('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_3), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 51))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 17, 3))])
    
    #-----< tracingContext-v2 >-----#
    tracingContext_v2 = CLASS(name='tracingContext-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    tracingContext_v2._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 51))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 17, 2))])
    
    #-----< tracingContext-v1 >-----#
    tracingContext_v1 = CLASS(name='tracingContext-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    tracingContext_v1._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 51))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 17, 1))])
    
    #-----< networkFunctionalSsContext-v2 >-----#
    networkFunctionalSsContext_v2 = CLASS(name='networkFunctionalSsContext-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    networkFunctionalSsContext_v2._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________25), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________21), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_1), ('errorCode', ('local', 20))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 10))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_5), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 11))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_2_0), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_1), ('errorCode', ('local', 20))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 12))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_3), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 13))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_4), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_5), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_2), ('errorCode', ('local', 37))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('Linked', ASN1Set(rv=[dict([('ArgumentType', __Supported_MAPv2_Operations_Linked_val_ArgumentType_0), ('ResultType', __Supported_MAPv2_Operations_Linked_val_ResultType_0), ('operationCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 17))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_5), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_5), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('errorCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 14))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_1), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_0_0), ('operationCode', ('local', 18))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 18, 2))])
    
    #-----< networkFunctionalSsContext-v1 >-----#
    networkFunctionalSsContext_v1 = CLASS(name='networkFunctionalSsContext-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    networkFunctionalSsContext_v1._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________25), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________21), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_1), ('errorCode', ('local', 20))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 10))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_5), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 11))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_2_0), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_1), ('errorCode', ('local', 20))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 12))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_3), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 13))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_4), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_5), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_2), ('errorCode', ('local', 37))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('Linked', ASN1Set(rv=[dict([('ArgumentType', __Supported_MAPv2_Operations_Linked_val_ArgumentType_0), ('ResultType', __Supported_MAPv2_Operations_Linked_val_ResultType_0), ('operationCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 17))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_5), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_5), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('errorCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 14))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_1), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_0_0), ('operationCode', ('local', 18))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________28), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________23), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 19))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'gsmscf'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________26), ('operationCode', ('local', 54))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'gsmscf'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'hlr', 'gsmscf'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'hlr', 'gsmscf'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 18, 1))])
    
    #-----< networkUnstructuredSsContext-v2 >-----#
    networkUnstructuredSsContext_v2 = CLASS(name='networkUnstructuredSsContext-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    networkUnstructuredSsContext_v2._val = dict([('Symmetric', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________27), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________22), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 71))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_6), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 59))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_2), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_0_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 60))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 61))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'gsmscf'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'hlr', 'gsmscf'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'hlr', 'gsmscf'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 19, 2))])
    
    #-----< shortMsgGatewayContext-v3 >-----#
    shortMsgGatewayContext_v3 = CLASS(name='shortMsgGatewayContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    shortMsgGatewayContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________31), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________25), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_2), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_1), ('errorCode', ('local', 6))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_6), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_5), ('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_3), ('operationCode', ('local', 63))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 20, 3))])
    
    #-----< shortMsgGatewayContext-v2 >-----#
    shortMsgGatewayContext_v2 = CLASS(name='shortMsgGatewayContext-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    shortMsgGatewayContext_v2._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________32), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________26), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_3), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_2), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_7), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_4), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_4), ('operationCode', ('local', 63))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 20, 2))])
    
    #-----< shortMsgGatewayContext-v1 >-----#
    shortMsgGatewayContext_v1 = CLASS(name='shortMsgGatewayContext-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    shortMsgGatewayContext_v1._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________32), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________26), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_3), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_2), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_7), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_4), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 20, 1))])
    
    #-----< shortMsgMO-RelayContext-v3 >-----#
    shortMsgMO_RelayContext_v3 = CLASS(name='shortMsgMO-RelayContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    shortMsgMO_RelayContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________29), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_1), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 21, 3))])
    
    #-----< shortMsg-RelayContext-v2 >-----#
    shortMsg_RelayContext_v2 = CLASS(name='shortMsg-RelayContext-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    shortMsg_RelayContext_v2._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________30), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_0), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_2), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 21, 2))])
    
    #-----< shortMsg-RelayContext-v1 >-----#
    shortMsg_RelayContext_v1 = CLASS(name='shortMsg-RelayContext-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    shortMsg_RelayContext_v1._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________30), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_0), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_2), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 21, 1))])
    
    #-----< shortMsgAlertContext-v2 >-----#
    shortMsgAlertContext_v2 = CLASS(name='shortMsgAlertContext-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    shortMsgAlertContext_v2._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________37), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 64))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 23, 2))])
    
    #-----< shortMsgAlertContext-v1 >-----#
    shortMsgAlertContext_v1 = CLASS(name='shortMsgAlertContext-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    shortMsgAlertContext_v1._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________37), ('operationCode', ('local', 49))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 23, 1))])
    
    #-----< mwdMngtContext-v3 >-----#
    mwdMngtContext_v3 = CLASS(name='mwdMngtContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    mwdMngtContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________34), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________28), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_1), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 66))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 24, 3))])
    
    #-----< mwdMngtContext-v2 >-----#
    mwdMngtContext_v2 = CLASS(name='mwdMngtContext-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    mwdMngtContext_v2._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________35), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 66))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 24, 2))])
    
    #-----< mwdMngtContext-v1 >-----#
    mwdMngtContext_v1 = CLASS(name='mwdMngtContext-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    mwdMngtContext_v1._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________36), ('operationCode', ('local', 48))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 24, 1))])
    
    #-----< shortMsgMT-RelayContext-v3 >-----#
    shortMsgMT_RelayContext_v3 = CLASS(name='shortMsgMT-RelayContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    shortMsgMT_RelayContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________33), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________27), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_4), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_4), ('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_3), ('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_2), ('errorCode', ('local', 32))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_3), ('errorCode', ('local', 6))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 44))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc', 'sgsn', 'smsc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 25, 3))])
    
    #-----< shortMsgMT-RelayContext-v2 >-----#
    shortMsgMT_RelayContext_v2 = CLASS(name='shortMsgMT-RelayContext-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    shortMsgMT_RelayContext_v2._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________30), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_0), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_2), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 25, 2))])
    
    #-----< shortMsgMT-RelayContext-v1 >-----#
    shortMsgMT_RelayContext_v1 = CLASS(name='shortMsgMT-RelayContext-v1', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    shortMsgMT_RelayContext_v1._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________30), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_0), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_2), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 25, 1))])
    
    #-----< msPurgingContext-v3 >-----#
    msPurgingContext_v3 = CLASS(name='msPurgingContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    msPurgingContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________40), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________31), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 67))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 27, 3))])
    
    #-----< msPurgingContext-v2 >-----#
    msPurgingContext_v2 = CLASS(name='msPurgingContext-v2', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    msPurgingContext_v2._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________41), ('operationCode', ('local', 67))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 27, 2))])
    
    #-----< subscriberInfoEnquiryContext-v3 >-----#
    subscriberInfoEnquiryContext_v3 = CLASS(name='subscriberInfoEnquiryContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    subscriberInfoEnquiryContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________42), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________32), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 70))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 28, 3))])
    
    #-----< anyTimeInfoEnquiryContext-v3 >-----#
    anyTimeInfoEnquiryContext_v3 = CLASS(name='anyTimeInfoEnquiryContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    anyTimeInfoEnquiryContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________43), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________33), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_3), ('errorCode', ('local', 49))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_3), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_6), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 71))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'gmlc', 'nplr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr', 'gmlc', 'nplr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 29, 3))])
    
    #-----< groupCallControlContext-v3 >-----#
    groupCallControlContext_v3 = CLASS(name='groupCallControlContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    groupCallControlContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________44), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________34), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_4), ('errorCode', ('local', 50))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 39))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_8), ('operationCode', ('local', 42))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_5), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_0_2), ('operationCode', ('local', 40))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_3), ('operationCode', ('local', 41))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 31, 3))])
    
    #-----< groupCallInfoRetControlContext-v3 >-----#
    groupCallInfoRetControlContext_v3 = CLASS(name='groupCallInfoRetControlContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    groupCallInfoRetControlContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________________45), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________________35), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_5), ('errorCode', ('local', 22))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_8), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 84))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 45, 3))])
    
    #-----< gprsLocationUpdateContext-v3 >-----#
    gprsLocationUpdateContext_v3 = CLASS(name='gprsLocationUpdateContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    gprsLocationUpdateContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________________46), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________________36), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_7), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 23))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['sgsn'], rr=[], ev=None, er=[])), ('ResponderConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________17), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______16), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________23), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________20), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_1), ('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 32, 3))])
    
    #-----< gprsLocationInfoRetrievalContext-v4 >-----#
    gprsLocationInfoRetrievalContext_v4 = CLASS(name='gprsLocationInfoRetrievalContext-v4', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    gprsLocationInfoRetrievalContext_v4._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________47), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________37), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_4), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_3), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_6), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_5), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 24))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 33, 4))])
    
    #-----< gprsLocationInfoRetrievalContext-v3 >-----#
    gprsLocationInfoRetrievalContext_v3 = CLASS(name='gprsLocationInfoRetrievalContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    gprsLocationInfoRetrievalContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________47), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________37), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_4), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_3), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_6), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_5), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 24))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 33, 3))])
    
    #-----< failureReportContext-v3 >-----#
    failureReportContext_v3 = CLASS(name='failureReportContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    failureReportContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________________48), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________________38), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 25))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 34, 3))])
    
    #-----< gprsNotifyContext-v3 >-----#
    gprsNotifyContext_v3 = CLASS(name='gprsNotifyContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    gprsNotifyContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________________49), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________________39), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 26))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 35, 3))])
    
    #-----< ss-InvocationNotificationContext-v3 >-----#
    ss_InvocationNotificationContext_v3 = CLASS(name='ss-InvocationNotificationContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    ss_InvocationNotificationContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________________50), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________________40), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 72))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 36, 3))])
    
    #-----< reportingContext-v3 >-----#
    reportingContext_v3 = CLASS(name='reportingContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    reportingContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________51), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________41), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_9), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 73))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________________52), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________________42), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 74))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________________________53), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________________________43), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_4), ('errorCode', ('local', 28))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_8), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_10), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_7), ('errorCode', ('local', 45))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 75))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[])), ('ResponderConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________51), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________41), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_9), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 73))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________________52), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________________42), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 74))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 7, 3))])
    
    #-----< callCompletionContext-v3 >-----#
    callCompletionContext_v3 = CLASS(name='callCompletionContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    callCompletionContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________________________54), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________________________44), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_9), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4__11), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_8), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_5), ('errorCode', ('local', 20))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_4), ('errorCode', ('local', 29))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_3), ('errorCode', ('local', 30))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_4), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 76))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_9), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_5), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_9), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4__11), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_8), ('errorCode', ('local', 17))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 77))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 8, 3))])
    
    #-----< locationSvcGatewayContext-v3 >-----#
    locationSvcGatewayContext_v3 = CLASS(name='locationSvcGatewayContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    locationSvcGatewayContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________________55), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________________45), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_6), ('errorCode', ('local', 52))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 85))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['gmlc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['gmlc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 37, 3))])
    
    #-----< locationSvcEnquiryContext-v3 >-----#
    locationSvcEnquiryContext_v3 = CLASS(name='locationSvcEnquiryContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    locationSvcEnquiryContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________________________56), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________________________46), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_4), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_4), ('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_4), ('errorCode', ('local', 52))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_5), ('errorCode', ('local', 53))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_2), ('errorCode', ('local', 54))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 83))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['gmlc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________________________57), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________________________47), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_5), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_6), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_9), ('errorCode', ('local', 52))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_7), ('errorCode', ('local', 58))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 86))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['gmlc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['gmlc', 'msc', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['gmlc', 'msc', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 38, 3))])
    
    #-----< istAlertingContext-v3 >-----#
    istAlertingContext_v3 = CLASS(name='istAlertingContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    istAlertingContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________________________58), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________________________48), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_10), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4___12), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 87))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 4, 3))])
    
    #-----< serviceTerminationContext-v3 >-----#
    serviceTerminationContext_v3 = CLASS(name='serviceTerminationContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    serviceTerminationContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________________59), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________________49), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_10), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4___12), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 88))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 9, 3))])
    
    #-----< mm-EventReportingContext-v3 >-----#
    mm_EventReportingContext_v3 = CLASS(name='mm-EventReportingContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    mm_EventReportingContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________________________60), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________________________50), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3__11), ('errorCode', ('local', 59))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 89))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 42, 3))])
    
    #-----< anyTimeInfohandlingContext-v3 >-----#
    anyTimeInfohandlingContext_v3 = CLASS(name='anyTimeInfohandlingContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    anyTimeInfohandlingContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________________________________61), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________________________________51), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_6), ('errorCode', ('local', 60))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4____13), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_2), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_6), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_5), ('errorCode', ('local', 18))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_6), ('errorCode', ('local', 62))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 62))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_10), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_6), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 61))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4____13), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_2), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_6), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_6), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_7), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_3), ('errorCode', ('local', 20))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_11_0), ('errorCode', ('local', 62))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 65))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 43, 3))])
    
    #-----< subscriberDataModificationNotificationContext-v3 >-----#
    subscriberDataModificationNotificationContext_v3 = CLASS(name='subscriberDataModificationNotificationContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    subscriberDataModificationNotificationContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________________________________62), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________________________________52), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 5))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 22, 3))])
    
    #-----< authenticationFailureReportContext-v3 >-----#
    authenticationFailureReportContext_v3 = CLASS(name='authenticationFailureReportContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    authenticationFailureReportContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________________________63), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________________________53), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 15))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 39, 3))])
    
    #-----< resourceManagementContext-v3 >-----#
    resourceManagementContext_v3 = CLASS(name='resourceManagementContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    resourceManagementContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________________________________64), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________________________________54), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 34))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 20))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 44, 3))])
    
    #-----< shortMsgMT-Relay-VGCS-Context-v3 >-----#
    shortMsgMT_Relay_VGCS_Context_v3 = CLASS(name='shortMsgMT-Relay-VGCS-Context-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    shortMsgMT_Relay_VGCS_Context_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________________________________65), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________________________________55), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 21))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 41, 3))])
    
    #-----< vcsgLocationUpdateContext-v3 >-----#
    vcsgLocationUpdateContext_v3 = CLASS(name='vcsgLocationUpdateContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    vcsgLocationUpdateContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________________________________66), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________________________________56), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 53))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['css'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________17), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______16), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['css'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 46, 3))])
    
    #-----< vcsgLocationCancellationContext-v3 >-----#
    vcsgLocationCancellationContext_v3 = CLASS(name='vcsgLocationCancellationContext-v3', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    vcsgLocationCancellationContext_v3._val = dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________________________67), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________________________57), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 36))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['css'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 47, 3))])
    
    #-----< Supported-MAP-ApplicationContexts >-----#
    Supported_MAP_ApplicationContexts = CLASS(name='Supported-MAP-ApplicationContexts', mode=MODE_SET, typeref=ASN1RefType(('MAPv2v3-Application', 'APPLICATION-CONTEXT')))
    Supported_MAP_ApplicationContexts._val = ASN1Set(rv=[dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 2))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('operationCode', ('local', 38))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________38), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________29), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 57))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________17), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______16), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________23), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________20), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_1), ('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 1, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_0), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_0), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 2))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('operationCode', ('local', 38))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________39), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________30), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 57))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________18), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________17), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 1, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_0), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_0), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 2))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('operationCode', ('local', 38))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_7), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_6), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 9))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________18), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________17), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 1, 1))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_1), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 3))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 2, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_2), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 3))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 2, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_2), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 3))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 2, 1))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_3), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 39))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 4))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 3, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_4), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_2), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 39))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 4))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 3, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_4), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_2), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 39))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 4))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 3, 1))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___12), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__11), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_0), ('errorCode', ('local', 44))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10), ('errorCode', ('local', 45))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_11), ('errorCode', ('local', 46))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_12), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_13), ('errorCode', ('local', 15))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_14), ('errorCode', ('local', 14))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 22))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'gsmscf'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'nplr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'gsmscf'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr', 'nplr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 5, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____13), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___12), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 44))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_0), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_0), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_0), ('errorCode', ('local', 15))]), dict([('errorCode', ('local', 14))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 22))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'gsmscf'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'nplr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'gsmscf'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr', 'nplr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 5, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____13), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___12), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 44))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_0), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_0), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_0), ('errorCode', ('local', 15))]), dict([('errorCode', ('local', 14))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 22))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'gsmscf'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'nplr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'gsmscf'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr', 'nplr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 5, 1))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__11), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_10), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_2), ('errorCode', ('local', 47))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_2), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 6))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 6, 4))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__11), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_10), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_2), ('errorCode', ('local', 47))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_2), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 6))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 6, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________21), ('operationCode', ('local', 37))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 10, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________22), ('operationCode', ('local', 37))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 10, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________22), ('operationCode', ('local', 37))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 10, 1))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____14), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____13), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('errorCode', ('local', 25))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 42))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 68))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1), ('operationCode', ('local', 34))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_0), ('operationCode', ('local', 29))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1), ('operationCode', ('local', 33))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_2), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 11, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______15), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____14), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 25))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 68))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_0), ('operationCode', ('local', 34))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_0), ('operationCode', ('local', 29))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_0), ('operationCode', ('local', 33))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_2_0), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_2_0), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 11, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______16), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______15), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 2))]), dict([('errorCode', ('local', 23))]), dict([('errorCode', ('local', 24))]), dict([('errorCode', ('local', 25))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 28))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_0), ('operationCode', ('local', 34))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_2), ('operationCode', ('local', 52))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_0), ('operationCode', ('local', 29))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_1), ('operationCode', ('local', 35))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_2_1), ('operationCode', ('local', 33))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_3), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_3), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 11, 1))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_10), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_9), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 58))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 26, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________19), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________18), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('errorCode', ('local', 7))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 43))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['eir'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['eir'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 13, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________20), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________19), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 7))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 43))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['eir'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['eir'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 13, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________20), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________19), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 7))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 43))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['eir'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['eir'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 13, 1))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_5), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 56))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 14, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_6), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_5), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 56))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 14, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_7), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_6), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 9))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 14, 1))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_8), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_7), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 55))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 15, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_9), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_8), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 55))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 15, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________17), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______16), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_1), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 8))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 16, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________18), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________17), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_2), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_0), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 8))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 16, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________18), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________17), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_2), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_0), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 8))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 16, 1))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________23), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________20), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_1), ('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_3), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 51))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 17, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 51))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 17, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 51))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 17, 1))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________25), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________21), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_1), ('errorCode', ('local', 20))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 10))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_5), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 11))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_2_0), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_1), ('errorCode', ('local', 20))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 12))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_3), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 13))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_4), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_5), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_2), ('errorCode', ('local', 37))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('Linked', ASN1Set(rv=[dict([('ArgumentType', __Supported_MAPv2_Operations_Linked_val_ArgumentType_0), ('ResultType', __Supported_MAPv2_Operations_Linked_val_ResultType_0), ('operationCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 17))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_5), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_5), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('errorCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 14))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_1), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_0_0), ('operationCode', ('local', 18))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 18, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________25), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________21), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_1), ('errorCode', ('local', 20))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 10))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_5), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 11))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_2_0), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_1), ('errorCode', ('local', 20))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 12))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_3), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 19))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 13))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_4), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_5), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_2), ('errorCode', ('local', 37))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('Linked', ASN1Set(rv=[dict([('ArgumentType', __Supported_MAPv2_Operations_Linked_val_ArgumentType_0), ('ResultType', __Supported_MAPv2_Operations_Linked_val_ResultType_0), ('operationCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 17))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_5), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_5), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('errorCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 14))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_1), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_0_0), ('operationCode', ('local', 18))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________28), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________23), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 19))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'gsmscf'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________26), ('operationCode', ('local', 54))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'gsmscf'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'hlr', 'gsmscf'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'hlr', 'gsmscf'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 18, 1))]), dict([('Symmetric', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________27), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________22), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 71))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_6), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 59))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_2), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_0_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 60))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 61))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'gsmscf'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'hlr', 'gsmscf'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'hlr', 'gsmscf'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 19, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________31), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________25), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_2), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_1), ('errorCode', ('local', 6))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_6), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_5), ('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_3), ('operationCode', ('local', 63))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 20, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________32), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________26), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_3), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_2), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_7), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_4), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_4), ('operationCode', ('local', 63))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 20, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________32), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________26), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_3), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_2), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_7), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_4), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 20, 1))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________29), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_1), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 21, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________30), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_0), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_2), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 21, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________30), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_0), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_2), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 21, 1))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________37), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 64))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 23, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________37), ('operationCode', ('local', 49))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 23, 1))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________34), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________28), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_1), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 66))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 24, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________35), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 66))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 24, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________36), ('operationCode', ('local', 48))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 24, 1))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________33), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________27), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_4), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_4), ('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_3), ('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_2), ('errorCode', ('local', 32))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_3), ('errorCode', ('local', 6))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 44))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc', 'sgsn', 'smsc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 25, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________30), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_0), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_2), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 25, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________30), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_0), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_2), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 25, 1))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________40), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________31), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 67))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 27, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________41), ('operationCode', ('local', 67))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 27, 2))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________42), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________32), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 70))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 28, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________43), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________33), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_3), ('errorCode', ('local', 49))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_3), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_6), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 71))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr', 'gmlc', 'nplr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr', 'gmlc', 'nplr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 29, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________44), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________34), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_4), ('errorCode', ('local', 50))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 39))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_8), ('operationCode', ('local', 42))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('Consumer', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_5), ('ResultType', __OPERATION_PACKAGE_Consumer_val_ResultType_0_2), ('operationCode', ('local', 40))]), dict([('ArgumentType', __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_3), ('operationCode', ('local', 41))])], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 31, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________________45), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________________35), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_5), ('errorCode', ('local', 22))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_8), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 84))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 45, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________________46), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________________36), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_7), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 23))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['sgsn'], rr=[], ev=None, er=[])), ('ResponderConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________17), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______16), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________23), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________20), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_1), ('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 32, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________47), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________37), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_4), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_3), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_6), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_5), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 24))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 33, 4))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________47), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________37), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_4), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_3), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_6), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_5), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 24))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 33, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________________48), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________________38), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 25))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 34, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________________49), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________________39), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 26))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['ggsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 35, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________________50), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________________40), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 72))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc', 'hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 36, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________51), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________41), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_9), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 73))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________________52), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________________42), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 74))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________________________53), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________________________43), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_4), ('errorCode', ('local', 28))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_8), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_10), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_7), ('errorCode', ('local', 45))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 75))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[])), ('ResponderConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________51), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________41), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_9), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 73))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________________52), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________________42), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 74))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 7, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________________________54), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________________________44), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_9), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4__11), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_8), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_5), ('errorCode', ('local', 20))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_4), ('errorCode', ('local', 29))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_3), ('errorCode', ('local', 30))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_4), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 76))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_9), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_5), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_9), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4__11), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_8), ('errorCode', ('local', 17))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 77))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 8, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________________55), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________________45), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_6), ('errorCode', ('local', 52))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 85))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['gmlc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['gmlc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 37, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________________________56), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________________________46), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_4), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_4), ('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_4), ('errorCode', ('local', 52))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_5), ('errorCode', ('local', 53))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_2), ('errorCode', ('local', 54))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 83))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['gmlc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[]))]), dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________________________57), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________________________47), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_5), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_6), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_9), ('errorCode', ('local', 52))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_7), ('errorCode', ('local', 58))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 86))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['gmlc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['gmlc', 'msc', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['gmlc', 'msc', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 38, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________________________58), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________________________48), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_10), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4___12), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 87))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 4, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________________59), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________________49), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_10), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4___12), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 88))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 9, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________________________60), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________________________50), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3__11), ('errorCode', ('local', 59))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 89))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 42, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________________________________61), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________________________________51), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_6), ('errorCode', ('local', 60))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4____13), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_2), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_6), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_5), ('errorCode', ('local', 18))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_6), ('errorCode', ('local', 62))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 62))]), dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_10), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_1_6), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 61))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4____13), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_2), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_6), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_6), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_7), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_3), ('errorCode', ('local', 20))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_11_0), ('errorCode', ('local', 62))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 65))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 43, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________________________________62), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________________________________52), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 5))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['gsmscf'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 22, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________________________63), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________________________53), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 15))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['hlr'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 39, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________________________________64), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________________________________54), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 34))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 20))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 44, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________________________________65), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________________________________55), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 21))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['msc'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 41, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________________________________66), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________________________________56), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 53))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['css'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('ResponderConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________17), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0_______16), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['hlr', 'css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['css'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 46, 3))]), dict([('InitiatorConsumerOf', ASN1Set(rv=[dict([('Supplier', ASN1Set(rv=[dict([('ArgumentType', __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________________________67), ('ResultType', __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________________________57), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 36))])], rr=[], ev=None, er=[])), ('ConsumerIn', ASN1Set(rv=['css'], rr=[], ev=None, er=[])), ('SupplierIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[]))])], rr=[], ev=None, er=[])), ('InitiatorIn', ASN1Set(rv=['css'], rr=[], ev=None, er=[])), ('ResponderIn', ASN1Set(rv=['vlr', 'sgsn'], rr=[], ev=None, er=[])), ('code', (0, 4, 0, 0, 1, 0, 47, 3))])], rr=[], ev=None, er=[])
    
    #-----< MAP-Timer >-----#
    MAP_Timer = SEQ(name='MAP-Timer', mode=MODE_TYPE)
    _MAP_Timer_from_ = INT(name='from', mode=MODE_TYPE)
    _MAP_Timer_from_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=262143)], ev=None, er=[])
    _MAP_Timer_to = INT(name='to', mode=MODE_TYPE)
    _MAP_Timer_to._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=262143)], ev=None, er=[])
    MAP_Timer._cont = ASN1Dict([
        ('from', _MAP_Timer_from_),
        ('to', _MAP_Timer_to),
        ])
    MAP_Timer._ext = None
    
    #-----< map-timer-s >-----#
    map_timer_s = SEQ(name='map-timer-s', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'MAP-Timer')))
    map_timer_s._val = dict([('from', 3), ('to', 10)])
    
    #-----< map-timer-m >-----#
    map_timer_m = SEQ(name='map-timer-m', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'MAP-Timer')))
    map_timer_m._val = dict([('from', 15), ('to', 30)])
    
    #-----< map-timer-ml >-----#
    map_timer_ml = SEQ(name='map-timer-ml', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'MAP-Timer')))
    map_timer_ml._val = dict([('from', 60), ('to', 600)])
    
    #-----< map-timer-l >-----#
    map_timer_l = SEQ(name='map-timer-l', mode=MODE_VALUE, typeref=ASN1RefType(('MAPv2v3-Application', 'MAP-Timer')))
    map_timer_l._val = dict([('from', 100800), ('to', 136800)])
    
    _all_ = [
        MapAppCtxtEquipment,
        _OPERATION_PACKAGE_Both,
        _OPERATION_PACKAGE_Consumer,
        _OPERATION_PACKAGE_ConsumerIn,
        _OPERATION_PACKAGE_Supplier,
        _OPERATION_PACKAGE_SupplierIn,
        _OPERATION_PACKAGE_id,
        OPERATION_PACKAGE,
        _APPLICATION_CONTEXT_Symmetric,
        _APPLICATION_CONTEXT_InitiatorConsumerOf,
        _APPLICATION_CONTEXT_InitiatorIn,
        _APPLICATION_CONTEXT_ResponderConsumerOf,
        _APPLICATION_CONTEXT_ResponderIn,
        _APPLICATION_CONTEXT_code,
        APPLICATION_CONTEXT,
        locationUpdatingPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0,
        __sendRoutingInfo_Errors_val_ParameterType_0,
        __sendRoutingInfo_Errors_val_ParameterType_1,
        __sendRoutingInfo_Errors_val_ParameterType_2,
        __sendRoutingInfo_Errors_val_ParameterType_3,
        __sendRoutingInfo_Errors_val_ParameterType_4,
        locationUpdatingPackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_0,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_0,
        __sendRoutingInfo_Errors_val_ParameterType_0_0,
        __sendRoutingInfo_Errors_val_ParameterType_4_0,
        locationUpdatingPackage_v1,
        locationCancellationPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_1,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_1,
        __sendRoutingInfo_Errors_val_ParameterType_0_1,
        __sendRoutingInfo_Errors_val_ParameterType_1_0,
        locationCancellationPackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_2,
        locationCancellationPackage_v1,
        roamingNumberEnquiryPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_3,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_2,
        __sendRoutingInfo_Errors_val_ParameterType_3_0,
        __sendRoutingInfo_Errors_val_ParameterType_4_1,
        __sendRoutingInfo_Errors_val_ParameterType_5,
        __sendRoutingInfo_Errors_val_ParameterType_6,
        roamingNumberEnquiryPackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_4,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_3,
        __sendRoutingInfo_Errors_val_ParameterType_4_2,
        roamingNumberEnquiryPackage_v1,
        infoRetrievalPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_5,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_4,
        infoRetrievalPackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_6,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_5,
        infoRetrievalPackage_v1,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_7,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_6,
        interVlrInfoRetrievalPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_8,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_7,
        __sendRoutingInfo_Errors_val_ParameterType_1_1,
        interVlrInfoRetrievalPackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_9,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_8,
        imsiRetrievalPackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_10,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_9,
        callControlTransferPackage_v4,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__11,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_10,
        __sendRoutingInfo_Errors_val_ParameterType_0_2,
        __sendRoutingInfo_Errors_val_ParameterType_1_2,
        __sendRoutingInfo_Errors_val_ParameterType_3_1,
        callControlTransferPackage_v3,
        interrogationPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___12,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0__11,
        __sendRoutingInfo_Errors_val_ParameterType_5_0,
        __sendRoutingInfo_Errors_val_ParameterType_6_0,
        __sendRoutingInfo_Errors_val_ParameterType_7,
        __sendRoutingInfo_Errors_val_ParameterType_8,
        __sendRoutingInfo_Errors_val_ParameterType_9,
        __sendRoutingInfo_Errors_val_ParameterType_10,
        __sendRoutingInfo_Errors_val_ParameterType_11,
        __sendRoutingInfo_Errors_val_ParameterType_12,
        __sendRoutingInfo_Errors_val_ParameterType_13,
        __sendRoutingInfo_Errors_val_ParameterType_14,
        interrogationPackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____13,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0___12,
        __sendRoutingInfo_Errors_val_ParameterType_8_0,
        __sendRoutingInfo_Errors_val_ParameterType_9_0,
        __sendRoutingInfo_Errors_val_ParameterType_10_0,
        interrogationPackage_v1,
        handoverControlPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____14,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0____13,
        __sendRoutingInfo_Errors_val_ParameterType_4_3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_1,
        __OPERATION_PACKAGE_Consumer_val_ArgumentType_0,
        __OPERATION_PACKAGE_Consumer_val_ResultType_0,
        __OPERATION_PACKAGE_Consumer_val_ArgumentType_1,
        __OPERATION_PACKAGE_Consumer_val_ArgumentType_2,
        __OPERATION_PACKAGE_Consumer_val_ResultType_2,
        __sendRoutingInfo_Errors_val_ParameterType_0_3,
        handoverControlPackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______15,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_____14,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_0,
        __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_0,
        __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_0,
        __OPERATION_PACKAGE_Consumer_val_ArgumentType_2_0,
        __OPERATION_PACKAGE_Consumer_val_ResultType_2_0,
        handoverControlPackage_v1,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______16,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0______15,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_2,
        __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_1,
        __OPERATION_PACKAGE_Consumer_val_ArgumentType_2_1,
        __OPERATION_PACKAGE_Consumer_val_ArgumentType_3,
        __OPERATION_PACKAGE_Consumer_val_ResultType_3,
        subscriberDataMngtStandAlonePackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________17,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_______16,
        __sendRoutingInfo_Errors_val_ParameterType_2_0,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_1,
        __OPERATION_PACKAGE_Supplier_val_ResultType_1,
        subscriberDataMngtStandAlonePackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________18,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0________17,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_2,
        __OPERATION_PACKAGE_Supplier_val_ResultType_1_0,
        subscriberDataMngtStandAlonePackage_v1,
        equipmentMngtPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________19,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_________18,
        equipmentMngtPackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________20,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0__________19,
        equipmentMngtPackage_v1,
        subscriberDataMngtPackage_v3,
        subscriberDataMngtPackage_v2,
        subscriberDataMngtPackage_v1,
        resetPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________21,
        resetPackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________22,
        resetPackage_v1,
        tracingStandAlonePackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________23,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0___________20,
        __sendRoutingInfo_Errors_val_ParameterType_4_4,
        __sendRoutingInfo_Errors_val_ParameterType_5_1,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_3,
        __OPERATION_PACKAGE_Supplier_val_ResultType_1_1,
        tracingStandAlonePackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________24,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_4,
        tracingStandAlonePackage_v1,
        functionalSsPackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________25,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0____________21,
        __sendRoutingInfo_Errors_val_ParameterType_6_1,
        __sendRoutingInfo_Errors_val_ParameterType_8_1,
        __sendRoutingInfo_Errors_val_ParameterType_9_1,
        __sendRoutingInfo_Errors_val_ParameterType_10_1,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_5,
        __OPERATION_PACKAGE_Supplier_val_ResultType_1_2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_2_0,
        __OPERATION_PACKAGE_Supplier_val_ResultType_2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_3,
        __OPERATION_PACKAGE_Supplier_val_ResultType_3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_4,
        __OPERATION_PACKAGE_Supplier_val_ResultType_4,
        __sendRoutingInfo_Errors_val_ParameterType_3_2,
        __sendRoutingInfo_Errors_val_ParameterType_4_5,
        __sendRoutingInfo_Errors_val_ParameterType_5_2,
        __Supported_MAPv2_Operations_Linked_val_ArgumentType_0,
        __Supported_MAPv2_Operations_Linked_val_ResultType_0,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_5,
        __OPERATION_PACKAGE_Supplier_val_ResultType_5,
        __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_1,
        __OPERATION_PACKAGE_Consumer_val_ResultType_0_0,
        functionalSsPackage_v1,
        tracingPackage_v3,
        tracingPackage_v2,
        tracingPackage_v1,
        bindingPackage_v1,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________26,
        unstructuredSsPackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________27,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________22,
        __sendRoutingInfo_Errors_val_ParameterType_4_6,
        __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_2,
        __OPERATION_PACKAGE_Consumer_val_ResultType_0_1,
        __sendRoutingInfo_Errors_val_ParameterType_3_3,
        __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_2,
        unstructuredSsPackage_v1,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________28,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0______________23,
        mo_ShortMsgRelayPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________29,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________24,
        __sendRoutingInfo_Errors_val_ParameterType_2_1,
        __sendRoutingInfo_Errors_val_ParameterType_3_4,
        shortMsgRelayPackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________30,
        __sendRoutingInfo_Errors_val_ParameterType_7_0,
        __sendRoutingInfo_Errors_val_ParameterType_9_2,
        shortMsgRelayPackage_v1,
        shortMsgGatewayPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________31,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0________________25,
        __sendRoutingInfo_Errors_val_ParameterType_4_7,
        __sendRoutingInfo_Errors_val_ParameterType_5_3,
        __sendRoutingInfo_Errors_val_ParameterType_6_2,
        __sendRoutingInfo_Errors_val_ParameterType_7_1,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_6,
        __OPERATION_PACKAGE_Supplier_val_ResultType_1_3,
        __sendRoutingInfo_Errors_val_ParameterType_2_2,
        __sendRoutingInfo_Errors_val_ParameterType_3_5,
        __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_3,
        shortMsgGatewayPackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________32,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________26,
        __sendRoutingInfo_Errors_val_ParameterType_6_3,
        __sendRoutingInfo_Errors_val_ParameterType_7_2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_7,
        __OPERATION_PACKAGE_Supplier_val_ResultType_1_4,
        __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_4,
        shortMsgGatewayPackage_v1,
        mt_ShortMsgRelayPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________33,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________27,
        __sendRoutingInfo_Errors_val_ParameterType_5_4,
        __sendRoutingInfo_Errors_val_ParameterType_6_4,
        __sendRoutingInfo_Errors_val_ParameterType_7_3,
        __sendRoutingInfo_Errors_val_ParameterType_8_2,
        __sendRoutingInfo_Errors_val_ParameterType_9_3,
        mwdMngtPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________34,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________28,
        mwdMngtPackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________35,
        mwdMngtPackage_v1,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________36,
        alertingPackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________37,
        alertingPackage_v1,
        dataRestorationPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________38,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________29,
        dataRestorationPackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________39,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________30,
        dataRestorationPackage_v1,
        purgingPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________40,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________31,
        purgingPackage_v2,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________41,
        subscriberInformationEnquiryPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________42,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________32,
        anyTimeInformationEnquiryPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________43,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________33,
        __sendRoutingInfo_Errors_val_ParameterType_1_3,
        __sendRoutingInfo_Errors_val_ParameterType_2_3,
        __sendRoutingInfo_Errors_val_ParameterType_3_6,
        groupCallControlPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________44,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________34,
        __sendRoutingInfo_Errors_val_ParameterType_1_4,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_8,
        __OPERATION_PACKAGE_Consumer_val_ArgumentType_0_5,
        __OPERATION_PACKAGE_Consumer_val_ResultType_0_2,
        __OPERATION_PACKAGE_Consumer_val_ArgumentType_1_3,
        groupCallInfoRetrievalPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________________45,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________________35,
        __sendRoutingInfo_Errors_val_ParameterType_1_5,
        __sendRoutingInfo_Errors_val_ParameterType_4_8,
        gprsLocationUpdatingPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________________46,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________________36,
        __sendRoutingInfo_Errors_val_ParameterType_3_7,
        gprsInterrogationPackage_v4,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________47,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________37,
        __sendRoutingInfo_Errors_val_ParameterType_0_4,
        __sendRoutingInfo_Errors_val_ParameterType_1_6,
        __sendRoutingInfo_Errors_val_ParameterType_5_5,
        gprsInterrogationPackage_v3,
        failureReportingPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________________48,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________________38,
        gprsNotifyingPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________________49,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________________39,
        ss_InvocationNotificationPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________________50,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________________40,
        setReportingStatePackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________51,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________41,
        __sendRoutingInfo_Errors_val_ParameterType_4_9,
        __sendRoutingInfo_Errors_val_ParameterType_5_6,
        statusReportPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________________52,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________________42,
        __sendRoutingInfo_Errors_val_ParameterType_0_5,
        remoteUserFreePackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________________________53,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________________________43,
        __sendRoutingInfo_Errors_val_ParameterType_2_4,
        __sendRoutingInfo_Errors_val_ParameterType_3_8,
        __sendRoutingInfo_Errors_val_ParameterType_4_10,
        __sendRoutingInfo_Errors_val_ParameterType_5_7,
        callCompletionPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________________________54,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________________________44,
        __sendRoutingInfo_Errors_val_ParameterType_3_9,
        __sendRoutingInfo_Errors_val_ParameterType_4__11,
        __sendRoutingInfo_Errors_val_ParameterType_5_8,
        __sendRoutingInfo_Errors_val_ParameterType_6_5,
        __sendRoutingInfo_Errors_val_ParameterType_7_4,
        __sendRoutingInfo_Errors_val_ParameterType_8_3,
        __sendRoutingInfo_Errors_val_ParameterType_9_4,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_9,
        __OPERATION_PACKAGE_Supplier_val_ResultType_1_5,
        locationSvcGatewayPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________________55,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________________45,
        __sendRoutingInfo_Errors_val_ParameterType_6_6,
        locationSvcEnquiryPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________________________56,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________________________46,
        __sendRoutingInfo_Errors_val_ParameterType_7_5,
        __sendRoutingInfo_Errors_val_ParameterType_8_4,
        __sendRoutingInfo_Errors_val_ParameterType_9_5,
        __sendRoutingInfo_Errors_val_ParameterType_10_2,
        locationSvcReportingPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________________________57,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________________________47,
        __sendRoutingInfo_Errors_val_ParameterType_2_5,
        __sendRoutingInfo_Errors_val_ParameterType_5_9,
        __sendRoutingInfo_Errors_val_ParameterType_6_7,
        ist_AlertingPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________________________58,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________________________48,
        __sendRoutingInfo_Errors_val_ParameterType_1_7,
        __sendRoutingInfo_Errors_val_ParameterType_3_10,
        __sendRoutingInfo_Errors_val_ParameterType_4___12,
        serviceTerminationPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________________59,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________________49,
        mm_EventReportingPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0___________________________________________________60,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_________________________________________50,
        __sendRoutingInfo_Errors_val_ParameterType_3__11,
        anyTimeInformationHandlingPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0____________________________________________________61,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0__________________________________________51,
        __sendRoutingInfo_Errors_val_ParameterType_0_6,
        __sendRoutingInfo_Errors_val_ParameterType_4____13,
        __sendRoutingInfo_Errors_val_ParameterType_7_6,
        __sendRoutingInfo_Errors_val_ParameterType_8_5,
        __sendRoutingInfo_Errors_val_ParameterType_9_6,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_1_10,
        __OPERATION_PACKAGE_Supplier_val_ResultType_1_6,
        __sendRoutingInfo_Errors_val_ParameterType_0_7,
        __sendRoutingInfo_Errors_val_ParameterType_8_6,
        __sendRoutingInfo_Errors_val_ParameterType_9_7,
        __sendRoutingInfo_Errors_val_ParameterType_10_3,
        __sendRoutingInfo_Errors_val_ParameterType_11_0,
        subscriberDataModificationNotificationPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_____________________________________________________62,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0___________________________________________52,
        authenticationFailureReportPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0______________________________________________________63,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0____________________________________________53,
        resourceManagementPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_______________________________________________________64,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_____________________________________________54,
        mt_ShortMsgRelay_VGCS_Package_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0________________________________________________________65,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0______________________________________________55,
        vcsgLocationUpdatingPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0_________________________________________________________66,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0_______________________________________________56,
        vcsgLocationCancellationPackage_v3,
        __OPERATION_PACKAGE_Supplier_val_ArgumentType_0__________________________________________________________67,
        __OPERATION_PACKAGE_Supplier_val_ResultType_0________________________________________________57,
        Supported_MAP_OperationPackages,
        networkLocUpContext_v3,
        networkLocUpContext_v2,
        networkLocUpContext_v1,
        locationCancellationContext_v3,
        locationCancellationContext_v2,
        locationCancellationContext_v1,
        roamingNumberEnquiryContext_v3,
        roamingNumberEnquiryContext_v2,
        roamingNumberEnquiryContext_v1,
        locationInfoRetrievalContext_v3,
        locationInfoRetrievalContext_v2,
        locationInfoRetrievalContext_v1,
        callControlTransferContext_v4,
        callControlTransferContext_v3,
        resetContext_v3,
        resetContext_v2,
        resetContext_v1,
        handoverControlContext_v3,
        handoverControlContext_2,
        handoverControlContext_v1,
        imsiRetrievalContext_v2,
        equipmentMngtContext_v3,
        equipmentMngtContext_v2,
        equipmentMngtContext_v1,
        infoRetrievalContext_v3,
        infoRetrievalContext_v2,
        infoRetrievalContext_v1,
        interVlrInfoRetrievalContext_v3,
        interVlrInfoRetrievalContext_v2,
        subscriberDataMngtContext_v3,
        subscriberDataMngtContext_v2,
        subscriberDataMngtContext_v1,
        tracingContext_v3,
        tracingContext_v2,
        tracingContext_v1,
        networkFunctionalSsContext_v2,
        networkFunctionalSsContext_v1,
        networkUnstructuredSsContext_v2,
        shortMsgGatewayContext_v3,
        shortMsgGatewayContext_v2,
        shortMsgGatewayContext_v1,
        shortMsgMO_RelayContext_v3,
        shortMsg_RelayContext_v2,
        shortMsg_RelayContext_v1,
        shortMsgAlertContext_v2,
        shortMsgAlertContext_v1,
        mwdMngtContext_v3,
        mwdMngtContext_v2,
        mwdMngtContext_v1,
        shortMsgMT_RelayContext_v3,
        shortMsgMT_RelayContext_v2,
        shortMsgMT_RelayContext_v1,
        msPurgingContext_v3,
        msPurgingContext_v2,
        subscriberInfoEnquiryContext_v3,
        anyTimeInfoEnquiryContext_v3,
        groupCallControlContext_v3,
        groupCallInfoRetControlContext_v3,
        gprsLocationUpdateContext_v3,
        gprsLocationInfoRetrievalContext_v4,
        gprsLocationInfoRetrievalContext_v3,
        failureReportContext_v3,
        gprsNotifyContext_v3,
        ss_InvocationNotificationContext_v3,
        reportingContext_v3,
        callCompletionContext_v3,
        locationSvcGatewayContext_v3,
        locationSvcEnquiryContext_v3,
        istAlertingContext_v3,
        serviceTerminationContext_v3,
        mm_EventReportingContext_v3,
        anyTimeInfohandlingContext_v3,
        subscriberDataModificationNotificationContext_v3,
        authenticationFailureReportContext_v3,
        resourceManagementContext_v3,
        shortMsgMT_Relay_VGCS_Context_v3,
        vcsgLocationUpdateContext_v3,
        vcsgLocationCancellationContext_v3,
        Supported_MAP_ApplicationContexts,
        _MAP_Timer_from_,
        _MAP_Timer_to,
        MAP_Timer,
        map_timer_s,
        map_timer_m,
        map_timer_ml,
        map_timer_l,
    ]

class MAPv2v3_Protocol:

    _name_  = 'MAPv2v3-Protocol'
    _oid_   = []
    
    _obj_ = [
        'Supported-MAP-Operations',
        ]
    _type_ = [
        ]
    _set_ = [
        'Supported-MAP-Operations',
        ]
    _val_ = [
        ]
    _class_ = [
        'Supported-MAP-Operations',
        ]
    _param_ = [
        ]
    
    #-----< Supported-MAP-Operations >-----#
    Supported_MAP_Operations = CLASS(name='Supported-MAP-Operations', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    _Supported_MAP_Operations_val_ArgumentType_0 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-AlertArg')))
    _Supported_MAP_Operations_val_ResultType_0 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-AlertRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ResourceLimitationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    _Supported_MAP_Operations_val_ArgumentType_1 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-CommandArg')))
    _Supported_MAP_Operations_val_ResultType_1 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-CommandRes')))
    _Supported_MAP_Operations_val_ArgumentType_2 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ProvideRoamingNumberArg')))
    _Supported_MAP_Operations_val_ResultType_2 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ProvideRoamingNumberRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_0 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'OR-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoRoamingNbParam')))
    _Supported_MAP_Operations_val_ArgumentType_3 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ReleaseResourcesArg')))
    _Supported_MAP_Operations_val_ResultType_3 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ReleaseResourcesRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_1 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    _Supported_MAP_Operations_val_ArgumentType_4 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'RemoteUserFreeArg')))
    _Supported_MAP_Operations_val_ResultType_4 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'RemoteUserFreeRes')))
    __sendRoutingInfo_Errors_val_ParameterType_2_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IncompatibleTerminalParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_1 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BusySubscriberParam')))
    _Supported_MAP_Operations_val_ArgumentType_5 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ResumeCallHandlingArg')))
    _Supported_MAP_Operations_val_ResultType_5 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ResumeCallHandlingRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ForwardingFailedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'OR-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    _Supported_MAP_Operations_val_ArgumentType_6 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SendRoutingInfoArg')))
    _Supported_MAP_Operations_val_ResultType_6 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SendRoutingInfoRes')))
    __sendRoutingInfo_Errors_val_ParameterType_5_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NumberChangedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BearerServNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TeleservNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_10 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BusySubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_11 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoSubscriberReplyParam')))
    __sendRoutingInfo_Errors_val_ParameterType_12 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    __sendRoutingInfo_Errors_val_ParameterType_13 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CUG-RejectParam')))
    __sendRoutingInfo_Errors_val_ParameterType_14 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ForwardingViolationParam')))
    _Supported_MAP_Operations_val_ArgumentType_7 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SetReportingStateArg')))
    _Supported_MAP_Operations_val_ResultType_7 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SetReportingStateRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ResourceLimitationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    _Supported_MAP_Operations_val_ArgumentType_8 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'StatusReportArg')))
    _Supported_MAP_Operations_val_ResultType_8 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'StatusReportRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    _Supported_MAP_Operations_val_ArgumentType_9 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'ForwardGroupCallSignallingArg')))
    _Supported_MAP_Operations_val_ArgumentType_10 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'PrepareGroupCallArg')))
    _Supported_MAP_Operations_val_ResultType_10 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'PrepareGroupCallRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoGroupCallNbParam')))
    _Supported_MAP_Operations_val_ArgumentType_11 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'ProcessGroupCallSignallingArg')))
    _Supported_MAP_Operations_val_ArgumentType_12 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallEndSignalArg')))
    _Supported_MAP_Operations_val_ResultType_12 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallEndSignalRes')))
    _Supported_MAP_Operations_val_ArgumentType_13 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallInfoArg')))
    _Supported_MAP_Operations_val_ResultType_13 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallInfoRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'OngoingGroupCallParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TeleservNotProvParam')))
    _Supported_MAP_Operations_val_ArgumentType_14 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ProvideSubscriberLocation-Arg')))
    _Supported_MAP_Operations_val_ResultType_14 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ProvideSubscriberLocation-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalEquipmentParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedRequestingNetwork-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_9_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedLCSClient-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_10_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'PositionMethodFailure-Param')))
    _Supported_MAP_Operations_val_ArgumentType_15 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'RoutingInfoForLCS-Arg')))
    _Supported_MAP_Operations_val_ResultType_15 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'RoutingInfoForLCS-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedRequestingNetwork-Param')))
    _Supported_MAP_Operations_val_ArgumentType_16 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'SubscriberLocationReport-Arg')))
    _Supported_MAP_Operations_val_ResultType_16 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'SubscriberLocationReport-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_2_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ResourceLimitationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedRequestingNetwork-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_6_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownOrUnreachableLCSClient-Param')))
    _Supported_MAP_Operations_val_ArgumentType_17 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeInterrogationArg')))
    _Supported_MAP_Operations_val_ResultType_17 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeInterrogationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATI-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    _Supported_MAP_Operations_val_ArgumentType_18 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeModificationArg')))
    _Supported_MAP_Operations_val_ResultType_18 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeModificationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATM-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BearerServNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TeleservNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_4 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSS-OperationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-SubscriptionViolationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9_1 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    __sendRoutingInfo_Errors_val_ParameterType_10_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    __sendRoutingInfo_Errors_val_ParameterType_11_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'InformationNotAvailableParam')))
    _Supported_MAP_Operations_val_ArgumentType_19 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeSubscriptionInterrogationArg')))
    _Supported_MAP_Operations_val_ResultType_19 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeSubscriptionInterrogationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATSI-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-NotAvailableParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'InformationNotAvailableParam')))
    _Supported_MAP_Operations_val_ArgumentType_20 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AuthenticationFailureReportArg')))
    _Supported_MAP_Operations_val_ResultType_20 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AuthenticationFailureReportRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    _Supported_MAP_Operations_val_ArgumentType_21 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelLocationArg')))
    _Supported_MAP_Operations_val_ResultType_21 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    _Supported_MAP_Operations_val_ArgumentType_22 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelVcsgLocationArg')))
    _Supported_MAP_Operations_val_ResultType_22 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelVcsgLocationRes')))
    _Supported_MAP_Operations_val_ArgumentType_23 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CheckIMEI-Arg')))
    _Supported_MAP_Operations_val_ResultType_23 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CheckIMEI-Res')))
    _Supported_MAP_Operations_val_ArgumentType_24 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'DeleteSubscriberDataArg')))
    _Supported_MAP_Operations_val_ResultType_24 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'DeleteSubscriberDataRes')))
    __sendRoutingInfo_Errors_val_ParameterType_2_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    _Supported_MAP_Operations_val_ArgumentType_25 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'FailureReportArg')))
    _Supported_MAP_Operations_val_ResultType_25 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'FailureReportRes')))
    _Supported_MAP_Operations_val_ArgumentType_26 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ForwardAccessSignalling-Arg')))
    _Supported_MAP_Operations_val_ArgumentType_28 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'InsertSubscriberDataArg')))
    _Supported_MAP_Operations_val_ResultType_28 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'InsertSubscriberDataRes')))
    _Supported_MAP_Operations_val_ArgumentType_29 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMM-EventArg')))
    _Supported_MAP_Operations_val_ResultType_29 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMM-EventRes')))
    __sendRoutingInfo_Errors_val_ParameterType_3_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'MM-EventNotSupported-Param')))
    _Supported_MAP_Operations_val_ArgumentType_30 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMsPresentForGprsArg')))
    _Supported_MAP_Operations_val_ResultType_30 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMsPresentForGprsRes')))
    _Supported_MAP_Operations_val_ArgumentType_31 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteSubscriberDataModifiedArg')))
    _Supported_MAP_Operations_val_ResultType_31 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteSubscriberDataModifiedRes')))
    _Supported_MAP_Operations_val_ArgumentType_32 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareHO-Arg')))
    _Supported_MAP_Operations_val_ResultType_32 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareHO-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TargetCellOutsideGCA-Param')))
    _Supported_MAP_Operations_val_ArgumentType_33 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareSubsequentHO-Arg')))
    _Supported_MAP_Operations_val_ResultType_33 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareSubsequentHO-Res')))
    _Supported_MAP_Operations_val_ArgumentType_34 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ProcessAccessSignalling-Arg')))
    _Supported_MAP_Operations_val_ArgumentType_35 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ProvideSubscriberInfoArg')))
    _Supported_MAP_Operations_val_ResultType_35 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ProvideSubscriberInfoRes')))
    _Supported_MAP_Operations_val_ArgumentType_36 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PurgeMS-Arg')))
    _Supported_MAP_Operations_val_ResultType_36 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PurgeMS-Res')))
    _Supported_MAP_Operations_val_ArgumentType_37 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ResetArg')))
    _Supported_MAP_Operations_val_ArgumentType_38 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RestoreDataArg')))
    _Supported_MAP_Operations_val_ResultType_38 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RestoreDataRes')))
    _Supported_MAP_Operations_val_ArgumentType_39 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendAuthenticationInfoArg')))
    _Supported_MAP_Operations_val_ResultType_39 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendAuthenticationInfoRes')))
    _Supported_MAP_Operations_val_ArgumentType_40 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendEndSignal-Arg')))
    _Supported_MAP_Operations_val_ResultType_40 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendEndSignal-Res')))
    _Supported_MAP_Operations_val_ArgumentType_41 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendIdentificationArg')))
    _Supported_MAP_Operations_val_ResultType_41 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendIdentificationRes')))
    _Supported_MAP_Operations_val_ArgumentType_42 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendRoutingInfoForGprsArg')))
    _Supported_MAP_Operations_val_ResultType_42 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendRoutingInfoForGprsRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_6 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    _Supported_MAP_Operations_val_ArgumentType_43 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateGprsLocationArg')))
    _Supported_MAP_Operations_val_ResultType_43 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateGprsLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_3_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'RoamingNotAllowedParam')))
    _Supported_MAP_Operations_val_ArgumentType_44 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateLocationArg')))
    _Supported_MAP_Operations_val_ResultType_44 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_4_8 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'RoamingNotAllowedParam')))
    _Supported_MAP_Operations_val_ArgumentType_45 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateVcsgLocationArg')))
    _Supported_MAP_Operations_val_ResultType_45 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateVcsgLocationRes')))
    _Supported_MAP_Operations_val_ArgumentType_46 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'ActivateTraceModeArg')))
    _Supported_MAP_Operations_val_ResultType_46 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'ActivateTraceModeRes')))
    __sendRoutingInfo_Errors_val_ParameterType_5_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TracingBufferFullParam')))
    _Supported_MAP_Operations_val_ArgumentType_47 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'DeactivateTraceModeArg')))
    _Supported_MAP_Operations_val_ResultType_47 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'DeactivateTraceModeRes')))
    _Supported_MAP_Operations_val_ArgumentType_48 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _Supported_MAP_Operations_val_ResultType_48 = OCT_STR(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _Supported_MAP_Operations_val_ArgumentType_49 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'AlertServiceCentreArg')))
    _Supported_MAP_Operations_val_ArgumentType_50 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'InformServiceCentreArg')))
    _Supported_MAP_Operations_val_ArgumentType_51 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MO-ForwardSM-Arg')))
    _Supported_MAP_Operations_val_ResultType_51 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MO-ForwardSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_2_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SM-DeliveryFailureCause')))
    _Supported_MAP_Operations_val_ArgumentType_52 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-Arg')))
    _Supported_MAP_Operations_val_ResultType_52 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_7_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SubBusyForMT-SMS-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_8_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SM-DeliveryFailureCause')))
    __sendRoutingInfo_Errors_val_ParameterType_9_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberSM-Param')))
    _Supported_MAP_Operations_val_ArgumentType_53 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-VGCS-Arg')))
    _Supported_MAP_Operations_val_ResultType_53 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-VGCS-Res')))
    _Supported_MAP_Operations_val_ArgumentType_54 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReadyForSM-Arg')))
    _Supported_MAP_Operations_val_ResultType_54 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReadyForSM-Res')))
    _Supported_MAP_Operations_val_ArgumentType_55 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReportSM-DeliveryStatusArg')))
    _Supported_MAP_Operations_val_ResultType_55 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReportSM-DeliveryStatusRes')))
    __sendRoutingInfo_Errors_val_ParameterType_3_8 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'MessageWaitListFullParam')))
    _Supported_MAP_Operations_val_ArgumentType_56 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'RoutingInfoForSM-Arg')))
    _Supported_MAP_Operations_val_ResultType_56 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'RoutingInfoForSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_7_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberSM-Param')))
    _Supported_MAP_Operations_val_ArgumentType_57 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-ForBS-Code')))
    _Supported_MAP_Operations_val_ResultType_57 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Info')))
    __sendRoutingInfo_Errors_val_ParameterType_3_9 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BearerServNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSS-OperationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7_4 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    __sendRoutingInfo_Errors_val_ParameterType_9_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    _Supported_MAP_Operations_val_ArgumentType_58 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-ForBS-Code')))
    _Supported_MAP_Operations_val_ResultType_58 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Info')))
    _Supported_MAP_Operations_val_ArgumentType_59 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'EraseCC-EntryArg')))
    _Supported_MAP_Operations_val_ResultType_59 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'EraseCC-EntryRes')))
    __sendRoutingInfo_Errors_val_ParameterType_3_10 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_9 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSS-OperationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_8 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    _Supported_MAP_Operations_val_ArgumentType_60 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-ForBS-Code')))
    _Supported_MAP_Operations_val_ResultType_60 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Info')))
    _Supported_MAP_Operations_val_ArgumentType_61 = ENUM(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'GuidanceInfo')))
    _Supported_MAP_Operations_val_ResultType_61 = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'Password')))
    _Supported_MAP_Operations_val_ResultType_61._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    _Supported_MAP_Operations_val_ArgumentType_62 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-ForBS-Code')))
    _Supported_MAP_Operations_val_ResultType_62 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'InterrogateSS-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_7_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-NotAvailableParam')))
    _Supported_MAP_Operations_val_ArgumentType_63 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Arg')))
    _Supported_MAP_Operations_val_ResultType_63 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4_10 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    _Supported_MAP_Operations_val_ArgumentType_64 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'RegisterCC-EntryArg')))
    _Supported_MAP_Operations_val_ResultType_64 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'RegisterCC-EntryRes')))
    __sendRoutingInfo_Errors_val_ParameterType_6_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    __sendRoutingInfo_Errors_val_ParameterType_7_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ShortTermDenialParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'LongTermDenialParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    _Supported_MAP_Operations_val_ArgumentType_65 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _Supported_MAP_Operations_val_ResultType_65 = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'Password')))
    _Supported_MAP_Operations_val_ResultType_65._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    __sendRoutingInfo_Errors_val_ParameterType_4__11 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-SubscriptionViolationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_9 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'PW-RegistrationFailureCause')))
    _Supported_MAP_Operations_val_ArgumentType_66 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'RegisterSS-Arg')))
    _Supported_MAP_Operations_val_ResultType_66 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Info')))
    __sendRoutingInfo_Errors_val_ParameterType_8_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    _Supported_MAP_Operations_val_ArgumentType_67 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-InvocationNotificationArg')))
    _Supported_MAP_Operations_val_ResultType_67 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-InvocationNotificationRes')))
    _Supported_MAP_Operations_val_ArgumentType_68 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Arg')))
    __sendRoutingInfo_Errors_val_ParameterType_4___12 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_10 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalEquipmentParam')))
    _Supported_MAP_Operations_val_ArgumentType_69 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Arg')))
    _Supported_MAP_Operations_val_ResultType_69 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Res')))
    _Supported_MAP_Operations_val_ArgumentType_70 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CH-DataTypes', 'ProvideRoamingNumberArg')))
    _Supported_MAP_Operations_val_ResultType_70 = OCT_STR(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    __sendRoutingInfo_Errors_val_ParameterType_0_7 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'NetworkResource')))
    __sendRoutingInfo_Errors_val_ParameterType_4____13 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    _Supported_MAP_Operations_val_ArgumentType_71 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CH-DataTypes', 'SendRoutingInfoArg')))
    _Supported_MAP_Operations_val_ResultType_71 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CH-DataTypes', 'SendRoutingInfoRes')))
    __sendRoutingInfo_Errors_val_ParameterType_8_6 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    __sendRoutingInfo_Errors_val_ParameterType_9_6 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    __sendRoutingInfo_Errors_val_ParameterType_10_2 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CUG-RejectCause')))
    _Supported_MAP_Operations_val_ArgumentType_72 = CHOICE(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'CancelLocationArg')))
    _Supported_MAP_Operations_val_ArgumentType_73 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMEI')))
    _Supported_MAP_Operations_val_ResultType_73 = ENUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'EquipmentStatus')))
    _Supported_MAP_Operations_val_ArgumentType_74 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'DeleteSubscriberDataArg')))
    _Supported_MAP_Operations_val_ResultType_74 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'DeleteSubscriberDataRes')))
    _Supported_MAP_Operations_val_ArgumentType_75 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    _Supported_MAP_Operations_val_ArgumentType_76 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'InsertSubscriberDataArg')))
    _Supported_MAP_Operations_val_ResultType_76 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'InsertSubscriberDataRes')))
    _Supported_MAP_Operations_val_ArgumentType_77 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PerformHO-Arg')))
    _Supported_MAP_Operations_val_ResultType_77 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PerformHO-Res')))
    _Supported_MAP_Operations_val_ArgumentType_78 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PerformSubsequentHO-Arg')))
    _Supported_MAP_Operations_val_ResultType_78 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    _Supported_MAP_Operations_val_ArgumentType_79 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PrepareHO-Arg')))
    _Supported_MAP_Operations_val_ResultType_79 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PrepareHO-Res')))
    _Supported_MAP_Operations_val_ArgumentType_80 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PrepareSubsequentHO-Arg')))
    _Supported_MAP_Operations_val_ResultType_80 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    _Supported_MAP_Operations_val_ArgumentType_81 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    _Supported_MAP_Operations_val_ArgumentType_82 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PurgeMS-Arg')))
    _Supported_MAP_Operations_val_ArgumentType_83 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'ResetArg')))
    _Supported_MAP_Operations_val_ArgumentType_84 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'RestoreDataArg')))
    _Supported_MAP_Operations_val_ResultType_84 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'RestoreDataRes')))
    _Supported_MAP_Operations_val_ArgumentType_85 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendAuthenticationInfoArg')))
    _Supported_MAP_Operations_val_ResultType_85 = SEQ_OF(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendAuthenticationInfoRes')))
    _Supported_MAP_Operations_val_ArgumentType_86 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    _Supported_MAP_Operations_val_ArgumentType_87 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'TMSI')))
    _Supported_MAP_Operations_val_ResultType_87 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendIdentificationRes')))
    _Supported_MAP_Operations_val_ArgumentType_88 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendParametersArg')))
    _Supported_MAP_Operations_val_ResultType_88 = SEQ_OF(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SentParameterList')))
    _Supported_MAP_Operations_val_ArgumentType_89 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'UpdateLocationArg')))
    _Supported_MAP_Operations_val_ResultType_89 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'UpdateLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_4_____14 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'RoamingNotAllowedCause')))
    _Supported_MAP_Operations_val_ArgumentType_90 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'ActivateTraceModeArg')))
    _Supported_MAP_Operations_val_ArgumentType_91 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'DeactivateTraceModeArg')))
    _Supported_MAP_Operations_val_ArgumentType_92 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'NoteInternalHO-Arg')))
    _Supported_MAP_Operations_val_ArgumentType_93 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _Supported_MAP_Operations_val_ResultType_93 = OCT_STR(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    _Supported_MAP_Operations_val_ArgumentType_94 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'TraceSubscriberActivityArg')))
    _Supported_MAP_Operations_val_ArgumentType_95 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'AlertServiceCentreArg')))
    _Supported_MAP_Operations_val_ArgumentType_96 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'AlertServiceCentreArg')))
    _Supported_MAP_Operations_val_ArgumentType_97 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'ForwardSM-Arg')))
    __sendRoutingInfo_Errors_val_ParameterType_7_7 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    __sendRoutingInfo_Errors_val_ParameterType_9_7 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'SM-DeliveryFailureCause')))
    _Supported_MAP_Operations_val_ArgumentType_98 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'InformServiceCentreArg')))
    _Supported_MAP_Operations_val_ArgumentType_99 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    _Supported_MAP_Operations_val_ArgumentType_100 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'ReadyForSM-Arg')))
    _Supported_MAP_Operations_val_ArgumentType_101 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'ReportSM-DeliveryStatusArg')))
    _Supported_MAP_Operations_val_ResultType_101 = OCT_STR(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    _Supported_MAP_Operations_val_ArgumentType_102 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'RoutingInfoForSM-Arg')))
    _Supported_MAP_Operations_val_ResultType_102 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'RoutingInfoForSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_6_7 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    __sendRoutingInfo_Errors_val_ParameterType_7_8 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    _Supported_MAP_Operations_val_ArgumentType_103 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    _Supported_MAP_Operations_val_ResultType_103 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    __sendRoutingInfo_Errors_val_ParameterType_6_8 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    __sendRoutingInfo_Errors_val_ParameterType_8_7 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Status')))
    __sendRoutingInfo_Errors_val_ParameterType_9_8 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-SubscriptionOption')))
    __sendRoutingInfo_Errors_val_ParameterType_10_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'SS-IncompatibilityCause')))
    _Supported_MAP_Operations_val_ArgumentType_104 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'BeginSubscriberActivityArg')))
    _Supported_MAP_Operations_val_ArgumentType_105 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    _Supported_MAP_Operations_val_ResultType_105 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    _Supported_MAP_Operations_val_ArgumentType_106 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    _Supported_MAP_Operations_val_ResultType_106 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    _Supported_MAP_Operations_val_ArgumentType_107 = ENUM(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'GuidanceInfo')))
    _Supported_MAP_Operations_val_ResultType_107 = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'Password')))
    _Supported_MAP_Operations_val_ResultType_107._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    _Supported_MAP_Operations_val_ArgumentType_108 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    _Supported_MAP_Operations_val_ResultType_108 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'InterrogateSS-Res')))
    _Supported_MAP_Operations_val_ArgumentType_109 = STR_IA5(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-UserData')))
    _Supported_MAP_Operations_val_ResultType_109 = STR_IA5(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-UserData')))
    _Supported_MAP_Operations_val_ArgumentType_110 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Arg')))
    _Supported_MAP_Operations_val_ResultType_110 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4______15 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    _Supported_MAP_Operations_val_ArgumentType_111 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    _Supported_MAP_Operations_val_ResultType_111 = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'Password')))
    _Supported_MAP_Operations_val_ResultType_111._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    __sendRoutingInfo_Errors_val_ParameterType_3__11 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    __sendRoutingInfo_Errors_val_ParameterType_4_______16 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-SubscriptionOption')))
    __sendRoutingInfo_Errors_val_ParameterType_5__11 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'PW-RegistrationFailureCause')))
    __Supported_MAPv2_Operations_Linked_val_ArgumentType_0 = ENUM(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'GuidanceInfo')))
    __Supported_MAPv2_Operations_Linked_val_ResultType_0 = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'Password')))
    __Supported_MAPv2_Operations_Linked_val_ResultType_0._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    _Supported_MAP_Operations_val_ArgumentType_112 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'RegisterSS-Arg')))
    _Supported_MAP_Operations_val_ResultType_112 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    _Supported_MAP_Operations_val_ArgumentType_113 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Arg')))
    __sendRoutingInfo_Errors_val_ParameterType_3___12 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    _Supported_MAP_Operations_val_ArgumentType_114 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Arg')))
    _Supported_MAP_Operations_val_ResultType_114 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Res')))
    Supported_MAP_Operations._val = ASN1Set(rv=[dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_0), ('ResultType', _Supported_MAP_Operations_val_ResultType_0), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 87))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_1), ('ResultType', _Supported_MAP_Operations_val_ResultType_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 88))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_2), ('ResultType', _Supported_MAP_Operations_val_ResultType_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 39))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 4))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_3), ('ResultType', _Supported_MAP_Operations_val_ResultType_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 34))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 20))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_4), ('ResultType', _Supported_MAP_Operations_val_ResultType_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_1), ('errorCode', ('local', 28))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 45))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 75))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_5), ('ResultType', _Supported_MAP_Operations_val_ResultType_5), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 47))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_2), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 6))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_6), ('ResultType', _Supported_MAP_Operations_val_ResultType_6), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_1), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_0), ('errorCode', ('local', 44))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10), ('errorCode', ('local', 45))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_11), ('errorCode', ('local', 46))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_12), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_13), ('errorCode', ('local', 15))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_14), ('errorCode', ('local', 14))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 22))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_7), ('ResultType', _Supported_MAP_Operations_val_ResultType_7), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_3), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_2), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_2), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 73))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_8), ('ResultType', _Supported_MAP_Operations_val_ResultType_8), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 74))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_9), ('operationCode', ('local', 42))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_10), ('ResultType', _Supported_MAP_Operations_val_ResultType_10), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_4), ('errorCode', ('local', 50))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 39))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_11), ('operationCode', ('local', 41))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_12), ('ResultType', _Supported_MAP_Operations_val_ResultType_12), ('operationCode', ('local', 40))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_13), ('ResultType', _Supported_MAP_Operations_val_ResultType_13), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_5), ('errorCode', ('local', 22))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_1), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 84))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_14), ('ResultType', _Supported_MAP_Operations_val_ResultType_14), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_3), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_0), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_0), ('errorCode', ('local', 52))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_0), ('errorCode', ('local', 53))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_0), ('errorCode', ('local', 54))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 83))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_15), ('ResultType', _Supported_MAP_Operations_val_ResultType_15), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_5), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_2), ('errorCode', ('local', 52))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 85))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_16), ('ResultType', _Supported_MAP_Operations_val_ResultType_16), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_5), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_4), ('errorCode', ('local', 52))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_3), ('errorCode', ('local', 58))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 86))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_17), ('ResultType', _Supported_MAP_Operations_val_ResultType_17), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 49))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_3), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_5), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 71))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_18), ('ResultType', _Supported_MAP_Operations_val_ResultType_18), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 61))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_6), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_5), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_4), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_1), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_1), ('errorCode', ('local', 20))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_11_0), ('errorCode', ('local', 62))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 65))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_19), ('ResultType', _Supported_MAP_Operations_val_ResultType_19), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_4), ('errorCode', ('local', 60))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_6), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_5), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_4), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_1), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_2), ('errorCode', ('local', 18))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_2), ('errorCode', ('local', 62))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 62))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_20), ('ResultType', _Supported_MAP_Operations_val_ResultType_20), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 15))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_21), ('ResultType', _Supported_MAP_Operations_val_ResultType_21), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 3))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_22), ('ResultType', _Supported_MAP_Operations_val_ResultType_22), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 36))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_23), ('ResultType', _Supported_MAP_Operations_val_ResultType_23), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('errorCode', ('local', 7))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 43))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_24), ('ResultType', _Supported_MAP_Operations_val_ResultType_24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_4), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 8))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_25), ('ResultType', _Supported_MAP_Operations_val_ResultType_25), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 25))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_26), ('operationCode', ('local', 34))]), dict([('operationCode', ('local', 38))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_28), ('ResultType', _Supported_MAP_Operations_val_ResultType_28), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_4), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_29), ('ResultType', _Supported_MAP_Operations_val_ResultType_29), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_5), ('errorCode', ('local', 59))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 89))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_30), ('ResultType', _Supported_MAP_Operations_val_ResultType_30), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 26))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_31), ('ResultType', _Supported_MAP_Operations_val_ResultType_31), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 5))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_32), ('ResultType', _Supported_MAP_Operations_val_ResultType_32), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('errorCode', ('local', 25))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 42))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 68))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_33), ('ResultType', _Supported_MAP_Operations_val_ResultType_33), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_34), ('operationCode', ('local', 33))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_35), ('ResultType', _Supported_MAP_Operations_val_ResultType_35), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 70))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_36), ('ResultType', _Supported_MAP_Operations_val_ResultType_36), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 67))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_37), ('operationCode', ('local', 37))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_38), ('ResultType', _Supported_MAP_Operations_val_ResultType_38), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 57))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_39), ('ResultType', _Supported_MAP_Operations_val_ResultType_39), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 56))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_40), ('ResultType', _Supported_MAP_Operations_val_ResultType_40), ('operationCode', ('local', 29))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_41), ('ResultType', _Supported_MAP_Operations_val_ResultType_41), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_3), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 55))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_42), ('ResultType', _Supported_MAP_Operations_val_ResultType_42), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_6), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_3), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_5), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 24))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_43), ('ResultType', _Supported_MAP_Operations_val_ResultType_43), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_6), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 23))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_44), ('ResultType', _Supported_MAP_Operations_val_ResultType_44), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_8), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 2))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_45), ('ResultType', _Supported_MAP_Operations_val_ResultType_45), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 53))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_46), ('ResultType', _Supported_MAP_Operations_val_ResultType_46), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_7), ('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_47), ('ResultType', _Supported_MAP_Operations_val_ResultType_47), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 51))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_48), ('ResultType', _Supported_MAP_Operations_val_ResultType_48), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 58))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_49), ('returnResult', True), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 64))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_50), ('operationCode', ('local', 63))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_51), ('ResultType', _Supported_MAP_Operations_val_ResultType_51), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_5), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_7), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_52), ('ResultType', _Supported_MAP_Operations_val_ResultType_52), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_3), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_2), ('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_3), ('errorCode', ('local', 32))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_3), ('errorCode', ('local', 6))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 44))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_53), ('ResultType', _Supported_MAP_Operations_val_ResultType_53), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 21))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_54), ('ResultType', _Supported_MAP_Operations_val_ResultType_54), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_5), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 66))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_55), ('ResultType', _Supported_MAP_Operations_val_ResultType_55), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_8), ('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_56), ('ResultType', _Supported_MAP_Operations_val_ResultType_56), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_5), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_5), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_4), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_3), ('errorCode', ('local', 6))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_57), ('ResultType', _Supported_MAP_Operations_val_ResultType_57), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_9), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_5), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_4), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_4), ('errorCode', ('local', 20))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 12))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_58), ('ResultType', _Supported_MAP_Operations_val_ResultType_58), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_9), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_5), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_4), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 19))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 13))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_59), ('ResultType', _Supported_MAP_Operations_val_ResultType_59), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_10), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_9), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_8), ('errorCode', ('local', 17))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 77))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_60), ('ResultType', _Supported_MAP_Operations_val_ResultType_60), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_9), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_5), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_4), ('errorCode', ('local', 17))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 11))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_61), ('ResultType', _Supported_MAP_Operations_val_ResultType_61), ('operationCode', ('local', 18))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_62), ('ResultType', _Supported_MAP_Operations_val_ResultType_62), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_9), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_5), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_5), ('errorCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 14))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_63), ('ResultType', _Supported_MAP_Operations_val_ResultType_63), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('errorCode', ('local', 71))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_10), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 59))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_64), ('ResultType', _Supported_MAP_Operations_val_ResultType_64), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_10), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_9), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_8), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_6), ('errorCode', ('local', 20))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_6), ('errorCode', ('local', 29))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_4), ('errorCode', ('local', 30))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_5), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 76))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_65), ('ResultType', _Supported_MAP_Operations_val_ResultType_65), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_10), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4__11), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_9), ('errorCode', ('local', 37))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 17))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_66), ('ResultType', _Supported_MAP_Operations_val_ResultType_66), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_9), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_5), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_4), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_5), ('errorCode', ('local', 20))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 10))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_67), ('ResultType', _Supported_MAP_Operations_val_ResultType_67), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 72))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_68), ('returnResult', True), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4___12), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_10), ('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 61))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_69), ('ResultType', _Supported_MAP_Operations_val_ResultType_69), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4___12), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_10), ('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 60))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_70), ('ResultType', _Supported_MAP_Operations_val_ResultType_70), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4____13), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 39))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 4))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_71), ('ResultType', _Supported_MAP_Operations_val_ResultType_71), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 44))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_6), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_6), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_2), ('errorCode', ('local', 15))]), dict([('errorCode', ('local', 14))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 22))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_72), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 3))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_73), ('ResultType', _Supported_MAP_Operations_val_ResultType_73), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 7))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 43))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_74), ('ResultType', _Supported_MAP_Operations_val_ResultType_74), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 8))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_75), ('operationCode', ('local', 34))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_76), ('ResultType', _Supported_MAP_Operations_val_ResultType_76), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_77), ('ResultType', _Supported_MAP_Operations_val_ResultType_77), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 2))]), dict([('errorCode', ('local', 23))]), dict([('errorCode', ('local', 24))]), dict([('errorCode', ('local', 25))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 28))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_78), ('ResultType', _Supported_MAP_Operations_val_ResultType_78), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 2))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 23))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 30))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_79), ('ResultType', _Supported_MAP_Operations_val_ResultType_79), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 25))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 68))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_80), ('ResultType', _Supported_MAP_Operations_val_ResultType_80), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_81), ('operationCode', ('local', 33))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_82), ('operationCode', ('local', 67))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_83), ('operationCode', ('local', 37))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_84), ('ResultType', _Supported_MAP_Operations_val_ResultType_84), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 57))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_85), ('ResultType', _Supported_MAP_Operations_val_ResultType_85), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 56))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_86), ('operationCode', ('local', 29))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_87), ('ResultType', _Supported_MAP_Operations_val_ResultType_87), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 55))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_88), ('ResultType', _Supported_MAP_Operations_val_ResultType_88), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 9))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_89), ('ResultType', _Supported_MAP_Operations_val_ResultType_89), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_____14), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 2))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_90), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_91), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 51))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_92), ('operationCode', ('local', 35))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_93), ('ResultType', _Supported_MAP_Operations_val_ResultType_93), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 58))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_94), ('operationCode', ('local', 52))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_95), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 64))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_96), ('operationCode', ('local', 49))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_97), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_7), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_7), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_98), ('operationCode', ('local', 63))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_99), ('operationCode', ('local', 48))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_100), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 66))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_101), ('ResultType', _Supported_MAP_Operations_val_ResultType_101), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_102), ('ResultType', _Supported_MAP_Operations_val_ResultType_102), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_7), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_8), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_103), ('ResultType', _Supported_MAP_Operations_val_ResultType_103), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_8), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_7), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_8), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_3), ('errorCode', ('local', 20))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 12))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_104), ('operationCode', ('local', 54))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_105), ('ResultType', _Supported_MAP_Operations_val_ResultType_105), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_8), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_7), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_8), ('errorCode', ('local', 19))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 13))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_106), ('ResultType', _Supported_MAP_Operations_val_ResultType_106), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_8), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_7), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_8), ('errorCode', ('local', 19))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 11))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_107), ('ResultType', _Supported_MAP_Operations_val_ResultType_107), ('operationCode', ('local', 18))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_108), ('ResultType', _Supported_MAP_Operations_val_ResultType_108), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_8), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('errorCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 14))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_109), ('ResultType', _Supported_MAP_Operations_val_ResultType_109), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 19))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_110), ('ResultType', _Supported_MAP_Operations_val_ResultType_110), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 71))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4______15), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 59))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_111), ('ResultType', _Supported_MAP_Operations_val_ResultType_111), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3__11), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_______16), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5__11), ('errorCode', ('local', 37))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('Linked', ASN1Set(rv=[dict([('ArgumentType', __Supported_MAPv2_Operations_Linked_val_ArgumentType_0), ('ResultType', __Supported_MAPv2_Operations_Linked_val_ResultType_0), ('operationCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 17))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_112), ('ResultType', _Supported_MAP_Operations_val_ResultType_112), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_8), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_7), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_8), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_3), ('errorCode', ('local', 20))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 10))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_113), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3___12), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 61))]), dict([('ArgumentType', _Supported_MAP_Operations_val_ArgumentType_114), ('ResultType', _Supported_MAP_Operations_val_ResultType_114), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3___12), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 60))])], rr=[], ev=None, er=[])
    
    _all_ = [
        Supported_MAP_Operations,
        _Supported_MAP_Operations_val_ArgumentType_0,
        _Supported_MAP_Operations_val_ResultType_0,
        __sendRoutingInfo_Errors_val_ParameterType_0,
        __sendRoutingInfo_Errors_val_ParameterType_1,
        __sendRoutingInfo_Errors_val_ParameterType_2,
        __sendRoutingInfo_Errors_val_ParameterType_3,
        __sendRoutingInfo_Errors_val_ParameterType_4,
        _Supported_MAP_Operations_val_ArgumentType_1,
        _Supported_MAP_Operations_val_ResultType_1,
        _Supported_MAP_Operations_val_ArgumentType_2,
        _Supported_MAP_Operations_val_ResultType_2,
        __sendRoutingInfo_Errors_val_ParameterType_0_0,
        __sendRoutingInfo_Errors_val_ParameterType_1_0,
        __sendRoutingInfo_Errors_val_ParameterType_2_0,
        __sendRoutingInfo_Errors_val_ParameterType_3_0,
        __sendRoutingInfo_Errors_val_ParameterType_4_0,
        __sendRoutingInfo_Errors_val_ParameterType_5,
        __sendRoutingInfo_Errors_val_ParameterType_6,
        _Supported_MAP_Operations_val_ArgumentType_3,
        _Supported_MAP_Operations_val_ResultType_3,
        __sendRoutingInfo_Errors_val_ParameterType_1_1,
        _Supported_MAP_Operations_val_ArgumentType_4,
        _Supported_MAP_Operations_val_ResultType_4,
        __sendRoutingInfo_Errors_val_ParameterType_2_1,
        __sendRoutingInfo_Errors_val_ParameterType_3_1,
        __sendRoutingInfo_Errors_val_ParameterType_4_1,
        __sendRoutingInfo_Errors_val_ParameterType_5_0,
        _Supported_MAP_Operations_val_ArgumentType_5,
        _Supported_MAP_Operations_val_ResultType_5,
        __sendRoutingInfo_Errors_val_ParameterType_0_1,
        __sendRoutingInfo_Errors_val_ParameterType_1_2,
        __sendRoutingInfo_Errors_val_ParameterType_3_2,
        _Supported_MAP_Operations_val_ArgumentType_6,
        _Supported_MAP_Operations_val_ResultType_6,
        __sendRoutingInfo_Errors_val_ParameterType_5_1,
        __sendRoutingInfo_Errors_val_ParameterType_6_0,
        __sendRoutingInfo_Errors_val_ParameterType_7,
        __sendRoutingInfo_Errors_val_ParameterType_8,
        __sendRoutingInfo_Errors_val_ParameterType_9,
        __sendRoutingInfo_Errors_val_ParameterType_10,
        __sendRoutingInfo_Errors_val_ParameterType_11,
        __sendRoutingInfo_Errors_val_ParameterType_12,
        __sendRoutingInfo_Errors_val_ParameterType_13,
        __sendRoutingInfo_Errors_val_ParameterType_14,
        _Supported_MAP_Operations_val_ArgumentType_7,
        _Supported_MAP_Operations_val_ResultType_7,
        __sendRoutingInfo_Errors_val_ParameterType_1_3,
        __sendRoutingInfo_Errors_val_ParameterType_4_2,
        __sendRoutingInfo_Errors_val_ParameterType_5_2,
        _Supported_MAP_Operations_val_ArgumentType_8,
        _Supported_MAP_Operations_val_ResultType_8,
        __sendRoutingInfo_Errors_val_ParameterType_0_2,
        _Supported_MAP_Operations_val_ArgumentType_9,
        _Supported_MAP_Operations_val_ArgumentType_10,
        _Supported_MAP_Operations_val_ResultType_10,
        __sendRoutingInfo_Errors_val_ParameterType_1_4,
        _Supported_MAP_Operations_val_ArgumentType_11,
        _Supported_MAP_Operations_val_ArgumentType_12,
        _Supported_MAP_Operations_val_ResultType_12,
        _Supported_MAP_Operations_val_ArgumentType_13,
        _Supported_MAP_Operations_val_ResultType_13,
        __sendRoutingInfo_Errors_val_ParameterType_1_5,
        __sendRoutingInfo_Errors_val_ParameterType_4_3,
        _Supported_MAP_Operations_val_ArgumentType_14,
        _Supported_MAP_Operations_val_ResultType_14,
        __sendRoutingInfo_Errors_val_ParameterType_4_4,
        __sendRoutingInfo_Errors_val_ParameterType_5_3,
        __sendRoutingInfo_Errors_val_ParameterType_6_1,
        __sendRoutingInfo_Errors_val_ParameterType_7_0,
        __sendRoutingInfo_Errors_val_ParameterType_8_0,
        __sendRoutingInfo_Errors_val_ParameterType_9_0,
        __sendRoutingInfo_Errors_val_ParameterType_10_0,
        _Supported_MAP_Operations_val_ArgumentType_15,
        _Supported_MAP_Operations_val_ResultType_15,
        __sendRoutingInfo_Errors_val_ParameterType_4_5,
        __sendRoutingInfo_Errors_val_ParameterType_6_2,
        _Supported_MAP_Operations_val_ArgumentType_16,
        _Supported_MAP_Operations_val_ResultType_16,
        __sendRoutingInfo_Errors_val_ParameterType_2_2,
        __sendRoutingInfo_Errors_val_ParameterType_3_3,
        __sendRoutingInfo_Errors_val_ParameterType_5_4,
        __sendRoutingInfo_Errors_val_ParameterType_6_3,
        _Supported_MAP_Operations_val_ArgumentType_17,
        _Supported_MAP_Operations_val_ResultType_17,
        __sendRoutingInfo_Errors_val_ParameterType_1_6,
        __sendRoutingInfo_Errors_val_ParameterType_2_3,
        _Supported_MAP_Operations_val_ArgumentType_18,
        _Supported_MAP_Operations_val_ResultType_18,
        __sendRoutingInfo_Errors_val_ParameterType_0_3,
        __sendRoutingInfo_Errors_val_ParameterType_3_4,
        __sendRoutingInfo_Errors_val_ParameterType_4_6,
        __sendRoutingInfo_Errors_val_ParameterType_5_5,
        __sendRoutingInfo_Errors_val_ParameterType_6_4,
        __sendRoutingInfo_Errors_val_ParameterType_7_1,
        __sendRoutingInfo_Errors_val_ParameterType_8_1,
        __sendRoutingInfo_Errors_val_ParameterType_9_1,
        __sendRoutingInfo_Errors_val_ParameterType_10_1,
        __sendRoutingInfo_Errors_val_ParameterType_11_0,
        _Supported_MAP_Operations_val_ArgumentType_19,
        _Supported_MAP_Operations_val_ResultType_19,
        __sendRoutingInfo_Errors_val_ParameterType_0_4,
        __sendRoutingInfo_Errors_val_ParameterType_8_2,
        __sendRoutingInfo_Errors_val_ParameterType_9_2,
        _Supported_MAP_Operations_val_ArgumentType_20,
        _Supported_MAP_Operations_val_ResultType_20,
        __sendRoutingInfo_Errors_val_ParameterType_1_7,
        _Supported_MAP_Operations_val_ArgumentType_21,
        _Supported_MAP_Operations_val_ResultType_21,
        __sendRoutingInfo_Errors_val_ParameterType_0_5,
        _Supported_MAP_Operations_val_ArgumentType_22,
        _Supported_MAP_Operations_val_ResultType_22,
        _Supported_MAP_Operations_val_ArgumentType_23,
        _Supported_MAP_Operations_val_ResultType_23,
        _Supported_MAP_Operations_val_ArgumentType_24,
        _Supported_MAP_Operations_val_ResultType_24,
        __sendRoutingInfo_Errors_val_ParameterType_2_4,
        _Supported_MAP_Operations_val_ArgumentType_25,
        _Supported_MAP_Operations_val_ResultType_25,
        _Supported_MAP_Operations_val_ArgumentType_26,
        _Supported_MAP_Operations_val_ArgumentType_28,
        _Supported_MAP_Operations_val_ResultType_28,
        _Supported_MAP_Operations_val_ArgumentType_29,
        _Supported_MAP_Operations_val_ResultType_29,
        __sendRoutingInfo_Errors_val_ParameterType_3_5,
        _Supported_MAP_Operations_val_ArgumentType_30,
        _Supported_MAP_Operations_val_ResultType_30,
        _Supported_MAP_Operations_val_ArgumentType_31,
        _Supported_MAP_Operations_val_ResultType_31,
        _Supported_MAP_Operations_val_ArgumentType_32,
        _Supported_MAP_Operations_val_ResultType_32,
        __sendRoutingInfo_Errors_val_ParameterType_4_7,
        _Supported_MAP_Operations_val_ArgumentType_33,
        _Supported_MAP_Operations_val_ResultType_33,
        _Supported_MAP_Operations_val_ArgumentType_34,
        _Supported_MAP_Operations_val_ArgumentType_35,
        _Supported_MAP_Operations_val_ResultType_35,
        _Supported_MAP_Operations_val_ArgumentType_36,
        _Supported_MAP_Operations_val_ResultType_36,
        _Supported_MAP_Operations_val_ArgumentType_37,
        _Supported_MAP_Operations_val_ArgumentType_38,
        _Supported_MAP_Operations_val_ResultType_38,
        _Supported_MAP_Operations_val_ArgumentType_39,
        _Supported_MAP_Operations_val_ResultType_39,
        _Supported_MAP_Operations_val_ArgumentType_40,
        _Supported_MAP_Operations_val_ResultType_40,
        _Supported_MAP_Operations_val_ArgumentType_41,
        _Supported_MAP_Operations_val_ResultType_41,
        _Supported_MAP_Operations_val_ArgumentType_42,
        _Supported_MAP_Operations_val_ResultType_42,
        __sendRoutingInfo_Errors_val_ParameterType_0_6,
        __sendRoutingInfo_Errors_val_ParameterType_5_6,
        _Supported_MAP_Operations_val_ArgumentType_43,
        _Supported_MAP_Operations_val_ResultType_43,
        __sendRoutingInfo_Errors_val_ParameterType_3_6,
        _Supported_MAP_Operations_val_ArgumentType_44,
        _Supported_MAP_Operations_val_ResultType_44,
        __sendRoutingInfo_Errors_val_ParameterType_4_8,
        _Supported_MAP_Operations_val_ArgumentType_45,
        _Supported_MAP_Operations_val_ResultType_45,
        _Supported_MAP_Operations_val_ArgumentType_46,
        _Supported_MAP_Operations_val_ResultType_46,
        __sendRoutingInfo_Errors_val_ParameterType_5_7,
        _Supported_MAP_Operations_val_ArgumentType_47,
        _Supported_MAP_Operations_val_ResultType_47,
        _Supported_MAP_Operations_val_ArgumentType_48,
        _Supported_MAP_Operations_val_ResultType_48,
        _Supported_MAP_Operations_val_ArgumentType_49,
        _Supported_MAP_Operations_val_ArgumentType_50,
        _Supported_MAP_Operations_val_ArgumentType_51,
        _Supported_MAP_Operations_val_ResultType_51,
        __sendRoutingInfo_Errors_val_ParameterType_2_5,
        __sendRoutingInfo_Errors_val_ParameterType_3_7,
        _Supported_MAP_Operations_val_ArgumentType_52,
        _Supported_MAP_Operations_val_ResultType_52,
        __sendRoutingInfo_Errors_val_ParameterType_7_2,
        __sendRoutingInfo_Errors_val_ParameterType_8_3,
        __sendRoutingInfo_Errors_val_ParameterType_9_3,
        _Supported_MAP_Operations_val_ArgumentType_53,
        _Supported_MAP_Operations_val_ResultType_53,
        _Supported_MAP_Operations_val_ArgumentType_54,
        _Supported_MAP_Operations_val_ResultType_54,
        _Supported_MAP_Operations_val_ArgumentType_55,
        _Supported_MAP_Operations_val_ResultType_55,
        __sendRoutingInfo_Errors_val_ParameterType_3_8,
        _Supported_MAP_Operations_val_ArgumentType_56,
        _Supported_MAP_Operations_val_ResultType_56,
        __sendRoutingInfo_Errors_val_ParameterType_7_3,
        _Supported_MAP_Operations_val_ArgumentType_57,
        _Supported_MAP_Operations_val_ResultType_57,
        __sendRoutingInfo_Errors_val_ParameterType_3_9,
        __sendRoutingInfo_Errors_val_ParameterType_6_5,
        __sendRoutingInfo_Errors_val_ParameterType_7_4,
        __sendRoutingInfo_Errors_val_ParameterType_9_4,
        _Supported_MAP_Operations_val_ArgumentType_58,
        _Supported_MAP_Operations_val_ResultType_58,
        _Supported_MAP_Operations_val_ArgumentType_59,
        _Supported_MAP_Operations_val_ResultType_59,
        __sendRoutingInfo_Errors_val_ParameterType_3_10,
        __sendRoutingInfo_Errors_val_ParameterType_4_9,
        __sendRoutingInfo_Errors_val_ParameterType_5_8,
        _Supported_MAP_Operations_val_ArgumentType_60,
        _Supported_MAP_Operations_val_ResultType_60,
        _Supported_MAP_Operations_val_ArgumentType_61,
        _Supported_MAP_Operations_val_ResultType_61,
        _Supported_MAP_Operations_val_ArgumentType_62,
        _Supported_MAP_Operations_val_ResultType_62,
        __sendRoutingInfo_Errors_val_ParameterType_7_5,
        _Supported_MAP_Operations_val_ArgumentType_63,
        _Supported_MAP_Operations_val_ResultType_63,
        __sendRoutingInfo_Errors_val_ParameterType_4_10,
        _Supported_MAP_Operations_val_ArgumentType_64,
        _Supported_MAP_Operations_val_ResultType_64,
        __sendRoutingInfo_Errors_val_ParameterType_6_6,
        __sendRoutingInfo_Errors_val_ParameterType_7_6,
        __sendRoutingInfo_Errors_val_ParameterType_8_4,
        __sendRoutingInfo_Errors_val_ParameterType_9_5,
        _Supported_MAP_Operations_val_ArgumentType_65,
        _Supported_MAP_Operations_val_ResultType_65,
        __sendRoutingInfo_Errors_val_ParameterType_4__11,
        __sendRoutingInfo_Errors_val_ParameterType_5_9,
        _Supported_MAP_Operations_val_ArgumentType_66,
        _Supported_MAP_Operations_val_ResultType_66,
        __sendRoutingInfo_Errors_val_ParameterType_8_5,
        _Supported_MAP_Operations_val_ArgumentType_67,
        _Supported_MAP_Operations_val_ResultType_67,
        _Supported_MAP_Operations_val_ArgumentType_68,
        __sendRoutingInfo_Errors_val_ParameterType_4___12,
        __sendRoutingInfo_Errors_val_ParameterType_5_10,
        _Supported_MAP_Operations_val_ArgumentType_69,
        _Supported_MAP_Operations_val_ResultType_69,
        _Supported_MAP_Operations_val_ArgumentType_70,
        _Supported_MAP_Operations_val_ResultType_70,
        __sendRoutingInfo_Errors_val_ParameterType_0_7,
        __sendRoutingInfo_Errors_val_ParameterType_4____13,
        _Supported_MAP_Operations_val_ArgumentType_71,
        _Supported_MAP_Operations_val_ResultType_71,
        __sendRoutingInfo_Errors_val_ParameterType_8_6,
        __sendRoutingInfo_Errors_val_ParameterType_9_6,
        __sendRoutingInfo_Errors_val_ParameterType_10_2,
        _Supported_MAP_Operations_val_ArgumentType_72,
        _Supported_MAP_Operations_val_ArgumentType_73,
        _Supported_MAP_Operations_val_ResultType_73,
        _Supported_MAP_Operations_val_ArgumentType_74,
        _Supported_MAP_Operations_val_ResultType_74,
        _Supported_MAP_Operations_val_ArgumentType_75,
        _Supported_MAP_Operations_val_ArgumentType_76,
        _Supported_MAP_Operations_val_ResultType_76,
        _Supported_MAP_Operations_val_ArgumentType_77,
        _Supported_MAP_Operations_val_ResultType_77,
        _Supported_MAP_Operations_val_ArgumentType_78,
        _Supported_MAP_Operations_val_ResultType_78,
        _Supported_MAP_Operations_val_ArgumentType_79,
        _Supported_MAP_Operations_val_ResultType_79,
        _Supported_MAP_Operations_val_ArgumentType_80,
        _Supported_MAP_Operations_val_ResultType_80,
        _Supported_MAP_Operations_val_ArgumentType_81,
        _Supported_MAP_Operations_val_ArgumentType_82,
        _Supported_MAP_Operations_val_ArgumentType_83,
        _Supported_MAP_Operations_val_ArgumentType_84,
        _Supported_MAP_Operations_val_ResultType_84,
        _Supported_MAP_Operations_val_ArgumentType_85,
        _Supported_MAP_Operations_val_ResultType_85,
        _Supported_MAP_Operations_val_ArgumentType_86,
        _Supported_MAP_Operations_val_ArgumentType_87,
        _Supported_MAP_Operations_val_ResultType_87,
        _Supported_MAP_Operations_val_ArgumentType_88,
        _Supported_MAP_Operations_val_ResultType_88,
        _Supported_MAP_Operations_val_ArgumentType_89,
        _Supported_MAP_Operations_val_ResultType_89,
        __sendRoutingInfo_Errors_val_ParameterType_4_____14,
        _Supported_MAP_Operations_val_ArgumentType_90,
        _Supported_MAP_Operations_val_ArgumentType_91,
        _Supported_MAP_Operations_val_ArgumentType_92,
        _Supported_MAP_Operations_val_ArgumentType_93,
        _Supported_MAP_Operations_val_ResultType_93,
        _Supported_MAP_Operations_val_ArgumentType_94,
        _Supported_MAP_Operations_val_ArgumentType_95,
        _Supported_MAP_Operations_val_ArgumentType_96,
        _Supported_MAP_Operations_val_ArgumentType_97,
        __sendRoutingInfo_Errors_val_ParameterType_7_7,
        __sendRoutingInfo_Errors_val_ParameterType_9_7,
        _Supported_MAP_Operations_val_ArgumentType_98,
        _Supported_MAP_Operations_val_ArgumentType_99,
        _Supported_MAP_Operations_val_ArgumentType_100,
        _Supported_MAP_Operations_val_ArgumentType_101,
        _Supported_MAP_Operations_val_ResultType_101,
        _Supported_MAP_Operations_val_ArgumentType_102,
        _Supported_MAP_Operations_val_ResultType_102,
        __sendRoutingInfo_Errors_val_ParameterType_6_7,
        __sendRoutingInfo_Errors_val_ParameterType_7_8,
        _Supported_MAP_Operations_val_ArgumentType_103,
        _Supported_MAP_Operations_val_ResultType_103,
        __sendRoutingInfo_Errors_val_ParameterType_6_8,
        __sendRoutingInfo_Errors_val_ParameterType_8_7,
        __sendRoutingInfo_Errors_val_ParameterType_9_8,
        __sendRoutingInfo_Errors_val_ParameterType_10_3,
        _Supported_MAP_Operations_val_ArgumentType_104,
        _Supported_MAP_Operations_val_ArgumentType_105,
        _Supported_MAP_Operations_val_ResultType_105,
        _Supported_MAP_Operations_val_ArgumentType_106,
        _Supported_MAP_Operations_val_ResultType_106,
        _Supported_MAP_Operations_val_ArgumentType_107,
        _Supported_MAP_Operations_val_ResultType_107,
        _Supported_MAP_Operations_val_ArgumentType_108,
        _Supported_MAP_Operations_val_ResultType_108,
        _Supported_MAP_Operations_val_ArgumentType_109,
        _Supported_MAP_Operations_val_ResultType_109,
        _Supported_MAP_Operations_val_ArgumentType_110,
        _Supported_MAP_Operations_val_ResultType_110,
        __sendRoutingInfo_Errors_val_ParameterType_4______15,
        _Supported_MAP_Operations_val_ArgumentType_111,
        _Supported_MAP_Operations_val_ResultType_111,
        __sendRoutingInfo_Errors_val_ParameterType_3__11,
        __sendRoutingInfo_Errors_val_ParameterType_4_______16,
        __sendRoutingInfo_Errors_val_ParameterType_5__11,
        __Supported_MAPv2_Operations_Linked_val_ArgumentType_0,
        __Supported_MAPv2_Operations_Linked_val_ResultType_0,
        _Supported_MAP_Operations_val_ArgumentType_112,
        _Supported_MAP_Operations_val_ResultType_112,
        _Supported_MAP_Operations_val_ArgumentType_113,
        __sendRoutingInfo_Errors_val_ParameterType_3___12,
        _Supported_MAP_Operations_val_ArgumentType_114,
        _Supported_MAP_Operations_val_ResultType_114,
    ]

class MobileDomainDefinitions:

    _name_  = 'MobileDomainDefinitions'
    _oid_   = [0, 4, 0, 0, 0, 1]
    
    _obj_ = [
        'mobileDomainId',
        'gsm-NetworkId',
        'gsm-AccessId',
        'gsm-OperationAndMaintenanceId',
        'gsm-MessagingId',
        'CommonComponentId',
        'ac-Id',
        'as-Id',
        'ase-Id',
        'moduleId',
        'er-Id',
        ]
    _type_ = [
        'CommonComponentId',
        ]
    _set_ = [
        ]
    _val_ = [
        'mobileDomainId',
        'gsm-NetworkId',
        'gsm-AccessId',
        'gsm-OperationAndMaintenanceId',
        'gsm-MessagingId',
        'ac-Id',
        'as-Id',
        'ase-Id',
        'moduleId',
        'er-Id',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< mobileDomainId >-----#
    mobileDomainId = OID(name='mobileDomainId', mode=MODE_VALUE)
    mobileDomainId._val = (0, 4, 0, 0)
    
    #-----< gsm-NetworkId >-----#
    gsm_NetworkId = OID(name='gsm-NetworkId', mode=MODE_VALUE)
    gsm_NetworkId._val = (0, 4, 0, 0, 1)
    
    #-----< gsm-AccessId >-----#
    gsm_AccessId = OID(name='gsm-AccessId', mode=MODE_VALUE)
    gsm_AccessId._val = (0, 4, 0, 0, 2)
    
    #-----< gsm-OperationAndMaintenanceId >-----#
    gsm_OperationAndMaintenanceId = OID(name='gsm-OperationAndMaintenanceId', mode=MODE_VALUE)
    gsm_OperationAndMaintenanceId._val = (0, 4, 0, 0, 3)
    
    #-----< gsm-MessagingId >-----#
    gsm_MessagingId = OID(name='gsm-MessagingId', mode=MODE_VALUE)
    gsm_MessagingId._val = (0, 4, 0, 0, 4)
    
    #-----< CommonComponentId >-----#
    CommonComponentId = INT(name='CommonComponentId', mode=MODE_TYPE)
    CommonComponentId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9)], ev=None, er=[])
    
    #-----< ac-Id >-----#
    ac_Id = INT(name='ac-Id', mode=MODE_VALUE, typeref=ASN1RefType(('MobileDomainDefinitions', 'CommonComponentId')))
    ac_Id._val = 0
    
    #-----< as-Id >-----#
    as_Id = INT(name='as-Id', mode=MODE_VALUE, typeref=ASN1RefType(('MobileDomainDefinitions', 'CommonComponentId')))
    as_Id._val = 1
    
    #-----< ase-Id >-----#
    ase_Id = INT(name='ase-Id', mode=MODE_VALUE, typeref=ASN1RefType(('MobileDomainDefinitions', 'CommonComponentId')))
    ase_Id._val = 2
    
    #-----< moduleId >-----#
    moduleId = INT(name='moduleId', mode=MODE_VALUE, typeref=ASN1RefType(('MobileDomainDefinitions', 'CommonComponentId')))
    moduleId._val = 3
    
    #-----< er-Id >-----#
    er_Id = INT(name='er-Id', mode=MODE_VALUE, typeref=ASN1RefType(('MobileDomainDefinitions', 'CommonComponentId')))
    er_Id._val = 4
    
    _all_ = [
        mobileDomainId,
        gsm_NetworkId,
        gsm_AccessId,
        gsm_OperationAndMaintenanceId,
        gsm_MessagingId,
        CommonComponentId,
        ac_Id,
        as_Id,
        ase_Id,
        moduleId,
        er_Id,
    ]

class NokiaMAP_Extensions:

    _name_  = 'NokiaMAP-Extensions'
    _oid_   = []
    
    _obj_ = [
        'RoutingCategory',
        'maxNumOfActiveSS',
        'ActiveSS-List',
        'ExtRoutingCategory',
        'IsdArgExt',
        'DsdArgExt',
        'UlResExt',
        'EmoInCategoryKey',
        'SS-DataEmoInExt',
        'InTriggerKey',
        'PnpIndex',
        'CallRedirectionIndex',
        'ChargingArea',
        'maxNumOfCA',
        'ChargingAreaList',
        'RegionalChargingData',
        'SS-DataExtension',
        'SriExtension',
        'CallingCategory',
        'InternalServiceIndicator',
        'ExtraProtocolId',
        'ExtraSignalInfo',
        'CUG-CallInfo',
        'Nokia-CUG-Data',
        'SriResExtension',
        'RgData',
        'NoAnswerTimer',
        'MemberList',
        'AlertingMethod',
        'UserType',
        'MAPserviceCode',
        'picLock',
        'prefCarrierId',
        'mKey',
        'smsKey',
        'fraud-Data',
        'cell-update',
        'maxnumOfMAPservices',
        'MAPserviceList',
        'CarrierIdCode',
        'PrefCarrierIdList',
        'ANSIIsdArgExt',
        'ANSISriResExt',
        'CanLocArgExt',
        'ATMargExt',
        'LeaId',
        'OlcmInfoTable',
        'maxNumOfLEAs',
        'OlcmInfo',
        'OlcmTraceReference',
        'ATMresExt',
        'DTMargExt',
        'VersionInfo',
        'maxNumOfServicesWithInfo',
        'FraudInfo',
        'FraudData',
        'TimeLimit',
        'ActionType',
        'FraudMaxCount',
        'ServiceWithInfo',
        'ServiceListWithInfo',
        'INKey',
        'MmTdpName',
        'ServiceKey',
        'MKeyVer',
        'LocupType',
        'MKey',
        'SmsTdpName',
        'SMSKey',
        'NumberPorted',
        'USSD-Extension',
        'HO-Ext',
        'MapOptFields',
        'CodecListExt',
        'maxNumOfCodec',
        'CodecExt',
        'SelectedCodec',
        'Modes',
        'IPPortNb',
        'AbsentSubscriberExt',
        'ErrOlcmInfoTableExt',
        'RoutingCategoryExt',
        'SriForSMArgExt',
        'ReportSMDelStatArgExt',
        'CfuSMSCounter',
        'MO-ForwardSM-ArgExt',
        'LocationAreaCode',
        'UdlArgExt',
        'RoamNotAllowedExt',
        'AnyTimeModArgExt',
        'CosInfo',
        'COS-FeatureList',
        'maxNumberOfCOSFeatures',
        'COS-Feature',
        'CustomerGroupID',
        'SubGroupID',
        'ClassOfServiceID',
        'AccessTypeExt',
        'Access',
        'Version',
        'AccessSubscriptionListExt',
        'AllowedServiceData',
        'AnyTimePO-BarringArg',
        'AnyTimePO-BarringRes',
        'GprsBarring',
        ]
    _type_ = [
        'RoutingCategory',
        'ActiveSS-List',
        'ExtRoutingCategory',
        'IsdArgExt',
        'DsdArgExt',
        'UlResExt',
        'EmoInCategoryKey',
        'SS-DataEmoInExt',
        'InTriggerKey',
        'PnpIndex',
        'CallRedirectionIndex',
        'ChargingArea',
        'ChargingAreaList',
        'RegionalChargingData',
        'SS-DataExtension',
        'SriExtension',
        'CallingCategory',
        'InternalServiceIndicator',
        'ExtraProtocolId',
        'ExtraSignalInfo',
        'CUG-CallInfo',
        'Nokia-CUG-Data',
        'SriResExtension',
        'RgData',
        'NoAnswerTimer',
        'MemberList',
        'AlertingMethod',
        'UserType',
        'MAPserviceCode',
        'MAPserviceList',
        'CarrierIdCode',
        'PrefCarrierIdList',
        'ANSIIsdArgExt',
        'ANSISriResExt',
        'CanLocArgExt',
        'ATMargExt',
        'LeaId',
        'OlcmInfoTable',
        'OlcmInfo',
        'OlcmTraceReference',
        'ATMresExt',
        'DTMargExt',
        'VersionInfo',
        'FraudInfo',
        'FraudData',
        'TimeLimit',
        'ActionType',
        'FraudMaxCount',
        'ServiceWithInfo',
        'ServiceListWithInfo',
        'INKey',
        'MmTdpName',
        'ServiceKey',
        'MKeyVer',
        'LocupType',
        'MKey',
        'SmsTdpName',
        'SMSKey',
        'NumberPorted',
        'USSD-Extension',
        'HO-Ext',
        'MapOptFields',
        'CodecListExt',
        'CodecExt',
        'SelectedCodec',
        'Modes',
        'IPPortNb',
        'AbsentSubscriberExt',
        'ErrOlcmInfoTableExt',
        'RoutingCategoryExt',
        'SriForSMArgExt',
        'ReportSMDelStatArgExt',
        'CfuSMSCounter',
        'MO-ForwardSM-ArgExt',
        'LocationAreaCode',
        'UdlArgExt',
        'RoamNotAllowedExt',
        'AnyTimeModArgExt',
        'CosInfo',
        'COS-FeatureList',
        'COS-Feature',
        'CustomerGroupID',
        'SubGroupID',
        'ClassOfServiceID',
        'AccessTypeExt',
        'Access',
        'Version',
        'AccessSubscriptionListExt',
        'AllowedServiceData',
        'AnyTimePO-BarringArg',
        'AnyTimePO-BarringRes',
        'GprsBarring',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxNumOfActiveSS',
        'maxNumOfCA',
        'picLock',
        'prefCarrierId',
        'mKey',
        'smsKey',
        'fraud-Data',
        'cell-update',
        'maxnumOfMAPservices',
        'maxNumOfLEAs',
        'maxNumOfServicesWithInfo',
        'maxNumOfCodec',
        'maxNumberOfCOSFeatures',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< RoutingCategory >-----#
    RoutingCategory = OCT_STR(name='RoutingCategory', mode=MODE_TYPE)
    RoutingCategory._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< maxNumOfActiveSS >-----#
    maxNumOfActiveSS = INT(name='maxNumOfActiveSS', mode=MODE_VALUE)
    maxNumOfActiveSS._val = 30
    
    #-----< ActiveSS-List >-----#
    ActiveSS_List = OCT_STR(name='ActiveSS-List', mode=MODE_TYPE)
    ActiveSS_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=30)], ev=None, er=[])
    
    #-----< ExtRoutingCategory >-----#
    ExtRoutingCategory = INT(name='ExtRoutingCategory', mode=MODE_TYPE)
    ExtRoutingCategory._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2147483647)], ev=None, er=[])
    
    #-----< IsdArgExt >-----#
    IsdArgExt = SEQ(name='IsdArgExt', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _IsdArgExt_alsLineIndicator = NULL(name='alsLineIndicator', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IsdArgExt_routingCategory = OCT_STR(name='routingCategory', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'RoutingCategory')), opt=True)
    _IsdArgExt_serviceList = OCT_STR(name='serviceList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'MAPserviceList')), opt=True)
    _IsdArgExt_serv_info_list = SEQ_OF(name='serv-info-list', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'ServiceListWithInfo')), opt=True)
    _IsdArgExt_extRoutingCategory = INT(name='extRoutingCategory', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'ExtRoutingCategory')), opt=True)
    _IsdArgExt_ownMSISDN = OCT_STR(name='ownMSISDN', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    IsdArgExt._cont = ASN1Dict([
        ('alsLineIndicator', _IsdArgExt_alsLineIndicator),
        ('routingCategory', _IsdArgExt_routingCategory),
        ('serviceList', _IsdArgExt_serviceList),
        ('serv-info-list', _IsdArgExt_serv_info_list),
        ('extRoutingCategory', _IsdArgExt_extRoutingCategory),
        ('ownMSISDN', _IsdArgExt_ownMSISDN),
        ])
    IsdArgExt._ext = []
    
    #-----< DsdArgExt >-----#
    DsdArgExt = SEQ(name='DsdArgExt', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _DsdArgExt_alsLineIndicator = NULL(name='alsLineIndicator', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DsdArgExt_serviceList = OCT_STR(name='serviceList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'MAPserviceList')), opt=True)
    DsdArgExt._cont = ASN1Dict([
        ('alsLineIndicator', _DsdArgExt_alsLineIndicator),
        ('serviceList', _DsdArgExt_serviceList),
        ])
    DsdArgExt._ext = []
    
    #-----< UlResExt >-----#
    UlResExt = SEQ(name='UlResExt', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _UlResExt_mwd_Set = NULL(name='mwd-Set', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    UlResExt._cont = ASN1Dict([
        ('mwd-Set', _UlResExt_mwd_Set),
        ])
    UlResExt._ext = []
    
    #-----< EmoInCategoryKey >-----#
    EmoInCategoryKey = OCT_STR(name='EmoInCategoryKey', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'TBCD-STRING')))
    EmoInCategoryKey._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< SS-DataEmoInExt >-----#
    SS_DataEmoInExt = SEQ(name='SS-DataEmoInExt', mode=MODE_TYPE, tag=(1, TAG_PRIVATE, TAG_IMPLICIT))
    _SS_DataEmoInExt_emoInCategoryKey = OCT_STR(name='emoInCategoryKey', mode=MODE_TYPE, tag=(2, TAG_PRIVATE, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'EmoInCategoryKey')), opt=True)
    SS_DataEmoInExt._cont = ASN1Dict([
        ('emoInCategoryKey', _SS_DataEmoInExt_emoInCategoryKey),
        ])
    SS_DataEmoInExt._ext = []
    
    #-----< InTriggerKey >-----#
    InTriggerKey = INT(name='InTriggerKey', mode=MODE_TYPE)
    InTriggerKey._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65535)], ev=None, er=[])
    
    #-----< PnpIndex >-----#
    PnpIndex = OCT_STR(name='PnpIndex', mode=MODE_TYPE)
    PnpIndex._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< CallRedirectionIndex >-----#
    CallRedirectionIndex = INT(name='CallRedirectionIndex', mode=MODE_TYPE)
    CallRedirectionIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< ChargingArea >-----#
    ChargingArea = INT(name='ChargingArea', mode=MODE_TYPE)
    ChargingArea._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9999)], ev=None, er=[])
    
    #-----< maxNumOfCA >-----#
    maxNumOfCA = INT(name='maxNumOfCA', mode=MODE_VALUE)
    maxNumOfCA._val = 3
    
    #-----< ChargingAreaList >-----#
    ChargingAreaList = SEQ_OF(name='ChargingAreaList', mode=MODE_TYPE)
    _ChargingAreaList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NokiaMAP-Extensions', 'ChargingArea')))
    ChargingAreaList._cont = _ChargingAreaList__item_
    ChargingAreaList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< RegionalChargingData >-----#
    RegionalChargingData = SEQ(name='RegionalChargingData', mode=MODE_TYPE)
    _RegionalChargingData_chargingAreaList = SEQ_OF(name='chargingAreaList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'ChargingAreaList')), opt=True)
    RegionalChargingData._cont = ASN1Dict([
        ('chargingAreaList', _RegionalChargingData_chargingAreaList),
        ])
    RegionalChargingData._ext = []
    
    #-----< SS-DataExtension >-----#
    SS_DataExtension = SEQ(name='SS-DataExtension', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _SS_DataExtension_inTriggerKey = INT(name='inTriggerKey', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'InTriggerKey')), opt=True)
    _SS_DataExtension_pnpIndex = OCT_STR(name='pnpIndex', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'PnpIndex')), opt=True)
    _SS_DataExtension_callRedirectionIndex = INT(name='callRedirectionIndex', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'CallRedirectionIndex')), opt=True)
    _SS_DataExtension_regionalChargingData = SEQ(name='regionalChargingData', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'RegionalChargingData')), opt=True)
    SS_DataExtension._cont = ASN1Dict([
        ('inTriggerKey', _SS_DataExtension_inTriggerKey),
        ('pnpIndex', _SS_DataExtension_pnpIndex),
        ('callRedirectionIndex', _SS_DataExtension_callRedirectionIndex),
        ('regionalChargingData', _SS_DataExtension_regionalChargingData),
        ])
    SS_DataExtension._ext = []
    
    #-----< SriExtension >-----#
    SriExtension = SEQ(name='SriExtension', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _SriExtension_callForwardingOverride = NULL(name='callForwardingOverride', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SriExtension_in_Capability = NULL(name='in-Capability', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SriExtension_callingCategory = OCT_STR(name='callingCategory', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'CallingCategory')), opt=True)
    _SriExtension_internalServiceIndicator = OCT_STR(name='internalServiceIndicator', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'InternalServiceIndicator')), opt=True)
    _SriExtension_srbtSupportIndicator = NULL(name='srbtSupportIndicator', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SriExtension_gmscSupportIndicator = NULL(name='gmscSupportIndicator', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SriExtension._cont = ASN1Dict([
        ('callForwardingOverride', _SriExtension_callForwardingOverride),
        ('in-Capability', _SriExtension_in_Capability),
        ('callingCategory', _SriExtension_callingCategory),
        ('internalServiceIndicator', _SriExtension_internalServiceIndicator),
        ('srbtSupportIndicator', _SriExtension_srbtSupportIndicator),
        ('gmscSupportIndicator', _SriExtension_gmscSupportIndicator),
        ])
    SriExtension._ext = []
    
    #-----< CallingCategory >-----#
    CallingCategory = OCT_STR(name='CallingCategory', mode=MODE_TYPE)
    CallingCategory._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< InternalServiceIndicator >-----#
    InternalServiceIndicator = OCT_STR(name='InternalServiceIndicator', mode=MODE_TYPE)
    InternalServiceIndicator._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< ExtraProtocolId >-----#
    ExtraProtocolId = INT(name='ExtraProtocolId', mode=MODE_TYPE)
    ExtraProtocolId._cont = ASN1Dict([('q763', 1)])
    ExtraProtocolId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< ExtraSignalInfo >-----#
    ExtraSignalInfo = SEQ(name='ExtraSignalInfo', mode=MODE_TYPE, tag=(1, TAG_PRIVATE, TAG_IMPLICIT))
    _ExtraSignalInfo_protocolId = INT(name='protocolId', mode=MODE_TYPE, typeref=ASN1RefType(('NokiaMAP-Extensions', 'ExtraProtocolId')))
    _ExtraSignalInfo_signalInfo = OCT_STR(name='signalInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')))
    ExtraSignalInfo._cont = ASN1Dict([
        ('protocolId', _ExtraSignalInfo_protocolId),
        ('signalInfo', _ExtraSignalInfo_signalInfo),
        ])
    ExtraSignalInfo._ext = None
    
    #-----< CUG-CallInfo >-----#
    CUG_CallInfo = OCT_STR(name='CUG-CallInfo', mode=MODE_TYPE)
    CUG_CallInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    
    #-----< Nokia-CUG-Data >-----#
    Nokia_CUG_Data = SEQ(name='Nokia-CUG-Data', mode=MODE_TYPE)
    _Nokia_CUG_Data_cug_Interlock = OCT_STR(name='cug-Interlock', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CUG-Interlock')), opt=True)
    _Nokia_CUG_Data_cug_OutgoingAccess = BOOL(name='cug-OutgoingAccess', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Nokia_CUG_Data_cug_CallInfo = OCT_STR(name='cug-CallInfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'CUG-CallInfo')), opt=True)
    Nokia_CUG_Data._cont = ASN1Dict([
        ('cug-Interlock', _Nokia_CUG_Data_cug_Interlock),
        ('cug-OutgoingAccess', _Nokia_CUG_Data_cug_OutgoingAccess),
        ('cug-CallInfo', _Nokia_CUG_Data_cug_CallInfo),
        ])
    Nokia_CUG_Data._ext = []
    
    #-----< SriResExtension >-----#
    SriResExtension = SEQ(name='SriResExtension', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _SriResExtension_inTriggerKey = INT(name='inTriggerKey', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'InTriggerKey')), opt=True)
    _SriResExtension_vlrNumber = OCT_STR(name='vlrNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SriResExtension_activeSs = OCT_STR(name='activeSs', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'ActiveSS-List')), opt=True)
    _SriResExtension_traceReference = OCT_STR(name='traceReference', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceReference')), opt=True)
    _SriResExtension_traceType = INT(name='traceType', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceType')), opt=True)
    _SriResExtension_omc_Id = OCT_STR(name='omc-Id', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')), opt=True)
    _SriResExtension_hotBilling = BOOL(name='hotBilling', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SriResExtension_cfoIsDone = BOOL(name='cfoIsDone', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SriResExtension_cfInCug = BOOL(name='cfInCug', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SriResExtension_basicService = CHOICE(name='basicService', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'BasicServiceCode')), opt=True)
    _SriResExtension_category = OCT_STR(name='category', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Category')), opt=True)
    _SriResExtension_routingCategory = OCT_STR(name='routingCategory', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'RoutingCategory')), opt=True)
    _SriResExtension_pnpIndex = OCT_STR(name='pnpIndex', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'PnpIndex')), opt=True)
    _SriResExtension_nokia_CUG = SEQ(name='nokia-CUG', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'Nokia-CUG-Data')), opt=True)
    _SriResExtension_noBarrings = NULL(name='noBarrings', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SriResExtension_odb_Data = SEQ(name='odb-Data', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-Data')), opt=True)
    _SriResExtension_fraudData = SEQ(name='fraudData', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'FraudData')), opt=True)
    _SriResExtension_extRoutingCategory = INT(name='extRoutingCategory', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'ExtRoutingCategory')), opt=True)
    _SriResExtension_leaId = INT(name='leaId', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'LeaId')), opt=True)
    _SriResExtension_olcmInfoTable = SEQ_OF(name='olcmInfoTable', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'OlcmInfoTable')), opt=True)
    _SriResExtension_callingCategory = OCT_STR(name='callingCategory', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'CallingCategory')), opt=True)
    _SriResExtension_commonMSISDN = OCT_STR(name='commonMSISDN', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SriResExtension_rgData = SEQ(name='rgData', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'RgData')), opt=True)
    _SriResExtension_olcmTraceReference = OCT_STR(name='olcmTraceReference', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'OlcmTraceReference')), opt=True)
    SriResExtension._cont = ASN1Dict([
        ('inTriggerKey', _SriResExtension_inTriggerKey),
        ('vlrNumber', _SriResExtension_vlrNumber),
        ('activeSs', _SriResExtension_activeSs),
        ('traceReference', _SriResExtension_traceReference),
        ('traceType', _SriResExtension_traceType),
        ('omc-Id', _SriResExtension_omc_Id),
        ('hotBilling', _SriResExtension_hotBilling),
        ('cfoIsDone', _SriResExtension_cfoIsDone),
        ('cfInCug', _SriResExtension_cfInCug),
        ('basicService', _SriResExtension_basicService),
        ('category', _SriResExtension_category),
        ('routingCategory', _SriResExtension_routingCategory),
        ('pnpIndex', _SriResExtension_pnpIndex),
        ('nokia-CUG', _SriResExtension_nokia_CUG),
        ('noBarrings', _SriResExtension_noBarrings),
        ('odb-Data', _SriResExtension_odb_Data),
        ('fraudData', _SriResExtension_fraudData),
        ('extRoutingCategory', _SriResExtension_extRoutingCategory),
        ('leaId', _SriResExtension_leaId),
        ('olcmInfoTable', _SriResExtension_olcmInfoTable),
        ('callingCategory', _SriResExtension_callingCategory),
        ('commonMSISDN', _SriResExtension_commonMSISDN),
        ('rgData', _SriResExtension_rgData),
        ('olcmTraceReference', _SriResExtension_olcmTraceReference),
        ])
    SriResExtension._ext = []
    
    #-----< RgData >-----#
    RgData = SEQ(name='RgData', mode=MODE_TYPE)
    _RgData_noAnswerTimer = OCT_STR(name='noAnswerTimer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'NoAnswerTimer')), opt=True)
    _RgData_memberList = SEQ_OF(name='memberList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'MemberList')), opt=True)
    _RgData_alertingMethod = OCT_STR(name='alertingMethod', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'AlertingMethod')), opt=True)
    _RgData_userType = OCT_STR(name='userType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'UserType')), opt=True)
    _RgData_divertedToNbr = OCT_STR(name='divertedToNbr', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _RgData_memberOfSuppression = NULL(name='memberOfSuppression', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RgData_ringbacktone = NULL(name='ringbacktone', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    RgData._cont = ASN1Dict([
        ('noAnswerTimer', _RgData_noAnswerTimer),
        ('memberList', _RgData_memberList),
        ('alertingMethod', _RgData_alertingMethod),
        ('userType', _RgData_userType),
        ('divertedToNbr', _RgData_divertedToNbr),
        ('memberOfSuppression', _RgData_memberOfSuppression),
        ('ringbacktone', _RgData_ringbacktone),
        ])
    RgData._ext = []
    
    #-----< NoAnswerTimer >-----#
    NoAnswerTimer = OCT_STR(name='NoAnswerTimer', mode=MODE_TYPE)
    NoAnswerTimer._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< MemberList >-----#
    MemberList = SEQ_OF(name='MemberList', mode=MODE_TYPE)
    _MemberList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    MemberList._cont = _MemberList__item_
    MemberList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< AlertingMethod >-----#
    AlertingMethod = OCT_STR(name='AlertingMethod', mode=MODE_TYPE)
    AlertingMethod._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< UserType >-----#
    UserType = OCT_STR(name='UserType', mode=MODE_TYPE)
    UserType._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< MAPserviceCode >-----#
    MAPserviceCode = OCT_STR(name='MAPserviceCode', mode=MODE_TYPE)
    MAPserviceCode._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< picLock >-----#
    picLock = OCT_STR(name='picLock', mode=MODE_VALUE, typeref=ASN1RefType(('NokiaMAP-Extensions', 'MAPserviceCode')))
    picLock._val = b'\x01'
    
    #-----< prefCarrierId >-----#
    prefCarrierId = OCT_STR(name='prefCarrierId', mode=MODE_VALUE, typeref=ASN1RefType(('NokiaMAP-Extensions', 'MAPserviceCode')))
    prefCarrierId._val = b'\x02'
    
    #-----< mKey >-----#
    mKey = OCT_STR(name='mKey', mode=MODE_VALUE, typeref=ASN1RefType(('NokiaMAP-Extensions', 'MAPserviceCode')))
    mKey._val = b'\x03'
    
    #-----< smsKey >-----#
    smsKey = OCT_STR(name='smsKey', mode=MODE_VALUE, typeref=ASN1RefType(('NokiaMAP-Extensions', 'MAPserviceCode')))
    smsKey._val = b'\x04'
    
    #-----< fraud-Data >-----#
    fraud_Data = OCT_STR(name='fraud-Data', mode=MODE_VALUE, typeref=ASN1RefType(('NokiaMAP-Extensions', 'MAPserviceCode')))
    fraud_Data._val = b'\x05'
    
    #-----< cell-update >-----#
    cell_update = OCT_STR(name='cell-update', mode=MODE_VALUE, typeref=ASN1RefType(('NokiaMAP-Extensions', 'MAPserviceCode')))
    cell_update._val = b'\x06'
    
    #-----< maxnumOfMAPservices >-----#
    maxnumOfMAPservices = INT(name='maxnumOfMAPservices', mode=MODE_VALUE)
    maxnumOfMAPservices._val = 256
    
    #-----< MAPserviceList >-----#
    MAPserviceList = OCT_STR(name='MAPserviceList', mode=MODE_TYPE)
    MAPserviceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=256)], ev=None, er=[])
    
    #-----< CarrierIdCode >-----#
    CarrierIdCode = OCT_STR(name='CarrierIdCode', mode=MODE_TYPE)
    CarrierIdCode._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< PrefCarrierIdList >-----#
    PrefCarrierIdList = SEQ(name='PrefCarrierIdList', mode=MODE_TYPE)
    _PrefCarrierIdList_prefCarrierIdCode1 = OCT_STR(name='prefCarrierIdCode1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'CarrierIdCode')))
    PrefCarrierIdList._cont = ASN1Dict([
        ('prefCarrierIdCode1', _PrefCarrierIdList_prefCarrierIdCode1),
        ])
    PrefCarrierIdList._ext = []
    
    #-----< ANSIIsdArgExt >-----#
    ANSIIsdArgExt = SEQ(name='ANSIIsdArgExt', mode=MODE_TYPE, tag=(30, TAG_PRIVATE, TAG_IMPLICIT))
    _ANSIIsdArgExt_prefCarrierIdList = SEQ(name='prefCarrierIdList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'PrefCarrierIdList')), opt=True)
    ANSIIsdArgExt._cont = ASN1Dict([
        ('prefCarrierIdList', _ANSIIsdArgExt_prefCarrierIdList),
        ])
    ANSIIsdArgExt._ext = []
    
    #-----< ANSISriResExt >-----#
    ANSISriResExt = SEQ(name='ANSISriResExt', mode=MODE_TYPE, tag=(30, TAG_PRIVATE, TAG_IMPLICIT))
    _ANSISriResExt_prefCarrierIdList = SEQ(name='prefCarrierIdList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'PrefCarrierIdList')), opt=True)
    ANSISriResExt._cont = ASN1Dict([
        ('prefCarrierIdList', _ANSISriResExt_prefCarrierIdList),
        ])
    ANSISriResExt._ext = []
    
    #-----< CanLocArgExt >-----#
    CanLocArgExt = SEQ(name='CanLocArgExt', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _CanLocArgExt_termination = OCT_STR(name='termination', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CanLocArgExt_termination._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    CanLocArgExt._cont = ASN1Dict([
        ('termination', _CanLocArgExt_termination),
        ])
    CanLocArgExt._ext = []
    
    #-----< ATMargExt >-----#
    ATMargExt = SEQ(name='ATMargExt', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _ATMargExt_traceReference = OCT_STR(name='traceReference', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceReference')), opt=True)
    _ATMargExt_traceType = INT(name='traceType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceType')), opt=True)
    _ATMargExt_leaId = INT(name='leaId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'LeaId')), opt=True)
    _ATMargExt_olcmInfoTable = SEQ_OF(name='olcmInfoTable', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'OlcmInfoTable')), opt=True)
    _ATMargExt_olcmTraceReference = OCT_STR(name='olcmTraceReference', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'OlcmTraceReference')), opt=True)
    ATMargExt._cont = ASN1Dict([
        ('traceReference', _ATMargExt_traceReference),
        ('traceType', _ATMargExt_traceType),
        ('leaId', _ATMargExt_leaId),
        ('olcmInfoTable', _ATMargExt_olcmInfoTable),
        ('olcmTraceReference', _ATMargExt_olcmTraceReference),
        ])
    ATMargExt._ext = []
    
    #-----< LeaId >-----#
    LeaId = INT(name='LeaId', mode=MODE_TYPE)
    LeaId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< OlcmInfoTable >-----#
    OlcmInfoTable = SEQ_OF(name='OlcmInfoTable', mode=MODE_TYPE)
    _OlcmInfoTable__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NokiaMAP-Extensions', 'OlcmInfo')))
    OlcmInfoTable._cont = _OlcmInfoTable__item_
    OlcmInfoTable._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=7)], ev=None, er=[])
    
    #-----< maxNumOfLEAs >-----#
    maxNumOfLEAs = INT(name='maxNumOfLEAs', mode=MODE_VALUE)
    maxNumOfLEAs._val = 7
    
    #-----< OlcmInfo >-----#
    OlcmInfo = SEQ(name='OlcmInfo', mode=MODE_TYPE)
    _OlcmInfo_traceReference = OCT_STR(name='traceReference', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceReference')))
    _OlcmInfo_traceType = INT(name='traceType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceType')))
    _OlcmInfo_leaId = INT(name='leaId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'LeaId')), opt=True)
    _OlcmInfo_olcmTraceReference = OCT_STR(name='olcmTraceReference', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'OlcmTraceReference')), opt=True)
    OlcmInfo._cont = ASN1Dict([
        ('traceReference', _OlcmInfo_traceReference),
        ('traceType', _OlcmInfo_traceType),
        ('leaId', _OlcmInfo_leaId),
        ('olcmTraceReference', _OlcmInfo_olcmTraceReference),
        ])
    OlcmInfo._ext = []
    
    #-----< OlcmTraceReference >-----#
    OlcmTraceReference = OCT_STR(name='OlcmTraceReference', mode=MODE_TYPE)
    OlcmTraceReference._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    
    #-----< ATMresExt >-----#
    ATMresExt = SEQ(name='ATMresExt', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _ATMresExt_olcmActive = NULL(name='olcmActive', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ATMresExt._cont = ASN1Dict([
        ('olcmActive', _ATMresExt_olcmActive),
        ])
    ATMresExt._ext = []
    
    #-----< DTMargExt >-----#
    DTMargExt = SEQ(name='DTMargExt', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _DTMargExt_traceType = INT(name='traceType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceType')), opt=True)
    _DTMargExt_leaId = INT(name='leaId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'LeaId')), opt=True)
    _DTMargExt_olcmTraceReference = OCT_STR(name='olcmTraceReference', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'OlcmTraceReference')), opt=True)
    DTMargExt._cont = ASN1Dict([
        ('traceType', _DTMargExt_traceType),
        ('leaId', _DTMargExt_leaId),
        ('olcmTraceReference', _DTMargExt_olcmTraceReference),
        ])
    DTMargExt._ext = []
    
    #-----< VersionInfo >-----#
    VersionInfo = OCT_STR(name='VersionInfo', mode=MODE_TYPE)
    VersionInfo._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< maxNumOfServicesWithInfo >-----#
    maxNumOfServicesWithInfo = INT(name='maxNumOfServicesWithInfo', mode=MODE_VALUE)
    maxNumOfServicesWithInfo._val = 20
    
    #-----< FraudInfo >-----#
    FraudInfo = SEQ(name='FraudInfo', mode=MODE_TYPE)
    _FraudInfo_moc = SEQ(name='moc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'FraudData')), opt=True)
    _FraudInfo_cf = SEQ(name='cf', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'FraudData')), opt=True)
    _FraudInfo_ct = SEQ(name='ct', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'FraudData')), opt=True)
    FraudInfo._cont = ASN1Dict([
        ('moc', _FraudInfo_moc),
        ('cf', _FraudInfo_cf),
        ('ct', _FraudInfo_ct),
        ])
    FraudInfo._ext = []
    
    #-----< FraudData >-----#
    FraudData = SEQ(name='FraudData', mode=MODE_TYPE)
    _FraudData_time = INT(name='time', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'TimeLimit')), opt=True)
    _FraudData_timeAction = OCT_STR(name='timeAction', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'ActionType')), opt=True)
    _FraudData_maxCount = INT(name='maxCount', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'FraudMaxCount')), opt=True)
    _FraudData_maxCountAction = OCT_STR(name='maxCountAction', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'ActionType')), opt=True)
    FraudData._cont = ASN1Dict([
        ('time', _FraudData_time),
        ('timeAction', _FraudData_timeAction),
        ('maxCount', _FraudData_maxCount),
        ('maxCountAction', _FraudData_maxCountAction),
        ])
    FraudData._ext = []
    
    #-----< TimeLimit >-----#
    TimeLimit = INT(name='TimeLimit', mode=MODE_TYPE)
    TimeLimit._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=64800)], ev=None, er=[])
    
    #-----< ActionType >-----#
    ActionType = OCT_STR(name='ActionType', mode=MODE_TYPE)
    ActionType._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< FraudMaxCount >-----#
    FraudMaxCount = INT(name='FraudMaxCount', mode=MODE_TYPE)
    FraudMaxCount._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< ServiceWithInfo >-----#
    ServiceWithInfo = SEQ(name='ServiceWithInfo', mode=MODE_TYPE)
    _ServiceWithInfo_serviceCode = OCT_STR(name='serviceCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'MAPserviceCode')), opt=True)
    _ServiceWithInfo_versionInfo = OCT_STR(name='versionInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'VersionInfo')), default=b'\x80')
    _ServiceWithInfo_in_key = CHOICE(name='in-key', mode=MODE_TYPE, typeref=ASN1RefType(('NokiaMAP-Extensions', 'INKey')), opt=True)
    _ServiceWithInfo_fraudInfo = SEQ(name='fraudInfo', mode=MODE_TYPE, typeref=ASN1RefType(('NokiaMAP-Extensions', 'FraudInfo')), opt=True)
    ServiceWithInfo._cont = ASN1Dict([
        ('serviceCode', _ServiceWithInfo_serviceCode),
        ('versionInfo', _ServiceWithInfo_versionInfo),
        ('in-key', _ServiceWithInfo_in_key),
        ('fraudInfo', _ServiceWithInfo_fraudInfo),
        ])
    ServiceWithInfo._ext = []
    
    #-----< ServiceListWithInfo >-----#
    ServiceListWithInfo = SEQ_OF(name='ServiceListWithInfo', mode=MODE_TYPE)
    _ServiceListWithInfo__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NokiaMAP-Extensions', 'ServiceWithInfo')))
    ServiceListWithInfo._cont = _ServiceListWithInfo__item_
    ServiceListWithInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< INKey >-----#
    INKey = CHOICE(name='INKey', mode=MODE_TYPE)
    _INKey_mobile_IN_key = SEQ(name='mobile-IN-key', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'MKey')))
    _INKey_sms_IN_key = SEQ(name='sms-IN-key', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'SMSKey')))
    INKey._cont = ASN1Dict([
        ('mobile-IN-key', _INKey_mobile_IN_key),
        ('sms-IN-key', _INKey_sms_IN_key),
        ])
    INKey._ext = None
    
    #-----< MmTdpName >-----#
    MmTdpName = OCT_STR(name='MmTdpName', mode=MODE_TYPE)
    MmTdpName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< ServiceKey >-----#
    ServiceKey = INT(name='ServiceKey', mode=MODE_TYPE)
    ServiceKey._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2147483647)], ev=None, er=[])
    
    #-----< MKeyVer >-----#
    MKeyVer = OCT_STR(name='MKeyVer', mode=MODE_TYPE)
    MKeyVer._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< LocupType >-----#
    LocupType = OCT_STR(name='LocupType', mode=MODE_TYPE)
    LocupType._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< MKey >-----#
    MKey = SEQ(name='MKey', mode=MODE_TYPE)
    _MKey_mKeyVer = OCT_STR(name='mKeyVer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'MKeyVer')), default=b'\x80')
    _MKey_mmScfAddress = OCT_STR(name='mmScfAddress', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _MKey_mmTdpName = OCT_STR(name='mmTdpName', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'MmTdpName')), opt=True)
    _MKey_serviceKey = INT(name='serviceKey', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'ServiceKey')), opt=True)
    _MKey_locupType = OCT_STR(name='locupType', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'LocupType')), opt=True)
    MKey._cont = ASN1Dict([
        ('mKeyVer', _MKey_mKeyVer),
        ('mmScfAddress', _MKey_mmScfAddress),
        ('mmTdpName', _MKey_mmTdpName),
        ('serviceKey', _MKey_serviceKey),
        ('locupType', _MKey_locupType),
        ])
    MKey._ext = []
    
    #-----< SmsTdpName >-----#
    SmsTdpName = OCT_STR(name='SmsTdpName', mode=MODE_TYPE)
    SmsTdpName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< SMSKey >-----#
    SMSKey = SEQ(name='SMSKey', mode=MODE_TYPE)
    _SMSKey_mmSCPAddress = OCT_STR(name='mmSCPAddress', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SMSKey_smsTdpName = OCT_STR(name='smsTdpName', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'SmsTdpName')), opt=True)
    _SMSKey_serviceKey = INT(name='serviceKey', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'ServiceKey')), opt=True)
    _SMSKey_mmsFlag = NULL(name='mmsFlag', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SMSKey._cont = ASN1Dict([
        ('mmSCPAddress', _SMSKey_mmSCPAddress),
        ('smsTdpName', _SMSKey_smsTdpName),
        ('serviceKey', _SMSKey_serviceKey),
        ('mmsFlag', _SMSKey_mmsFlag),
        ])
    SMSKey._ext = []
    
    #-----< NumberPorted >-----#
    NumberPorted = ENUM(name='NumberPorted', mode=MODE_TYPE, tag=(20, TAG_PRIVATE, TAG_IMPLICIT))
    NumberPorted._cont = ASN1Dict([('notPorted', 0), ('ported', 1)])
    NumberPorted._ext = []
    
    #-----< USSD-Extension >-----#
    USSD_Extension = SEQ(name='USSD-Extension', mode=MODE_TYPE, tag=(10, TAG_PRIVATE, TAG_IMPLICIT))
    _USSD_Extension_routingCategory = OCT_STR(name='routingCategory', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'RoutingCategory')), opt=True)
    _USSD_Extension_cellId = OCT_STR(name='cellId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'CellGlobalIdOrServiceAreaIdFixedLength')), opt=True)
    _USSD_Extension_sai_Present = NULL(name='sai-Present', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    USSD_Extension._cont = ASN1Dict([
        ('routingCategory', _USSD_Extension_routingCategory),
        ('cellId', _USSD_Extension_cellId),
        ('sai-Present', _USSD_Extension_sai_Present),
        ])
    USSD_Extension._ext = []
    
    #-----< HO-Ext >-----#
    HO_Ext = SEQ(name='HO-Ext', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _HO_Ext_map_Opt = OCT_STR(name='map-Opt', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'MapOptFields')), opt=True)
    _HO_Ext_codec_List = SEQ_OF(name='codec-List', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'CodecListExt')), opt=True)
    _HO_Ext_selected_Codec = SEQ(name='selected-Codec', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'SelectedCodec')), opt=True)
    _HO_Ext_uma_access = NULL(name='uma-access', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HO_Ext_uma_ip_address = OCT_STR(name='uma-ip-address', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HO_Ext_uma_ip_address._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=17)], ev=None, er=[])
    _HO_Ext_uma_ip_port_nb = INT(name='uma-ip-port-nb', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'IPPortNb')), opt=True)
    HO_Ext._cont = ASN1Dict([
        ('map-Opt', _HO_Ext_map_Opt),
        ('codec-List', _HO_Ext_codec_List),
        ('selected-Codec', _HO_Ext_selected_Codec),
        ('uma-access', _HO_Ext_uma_access),
        ('uma-ip-address', _HO_Ext_uma_ip_address),
        ('uma-ip-port-nb', _HO_Ext_uma_ip_port_nb),
        ])
    HO_Ext._ext = []
    
    #-----< MapOptFields >-----#
    MapOptFields = OCT_STR(name='MapOptFields', mode=MODE_TYPE)
    MapOptFields._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< CodecListExt >-----#
    CodecListExt = SEQ_OF(name='CodecListExt', mode=MODE_TYPE)
    _CodecListExt__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NokiaMAP-Extensions', 'CodecExt')))
    CodecListExt._cont = _CodecListExt__item_
    CodecListExt._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8)], ev=None, er=[])
    
    #-----< maxNumOfCodec >-----#
    maxNumOfCodec = INT(name='maxNumOfCodec', mode=MODE_VALUE)
    maxNumOfCodec._val = 8
    
    #-----< CodecExt >-----#
    CodecExt = OCT_STR(name='CodecExt', mode=MODE_TYPE)
    CodecExt._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< SelectedCodec >-----#
    SelectedCodec = SEQ(name='SelectedCodec', mode=MODE_TYPE)
    _SelectedCodec_codec = OCT_STR(name='codec', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'CodecExt')))
    _SelectedCodec_modes = OCT_STR(name='modes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'Modes')))
    SelectedCodec._cont = ASN1Dict([
        ('codec', _SelectedCodec_codec),
        ('modes', _SelectedCodec_modes),
        ])
    SelectedCodec._ext = []
    
    #-----< Modes >-----#
    Modes = OCT_STR(name='Modes', mode=MODE_TYPE)
    Modes._const_sz = ASN1Set(rv=[9], rr=[], ev=None, er=[])
    
    #-----< IPPortNb >-----#
    IPPortNb = INT(name='IPPortNb', mode=MODE_TYPE)
    IPPortNb._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< AbsentSubscriberExt >-----#
    AbsentSubscriberExt = SEQ(name='AbsentSubscriberExt', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _AbsentSubscriberExt_olcmInfoTable = SEQ_OF(name='olcmInfoTable', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'OlcmInfoTable')), opt=True)
    _AbsentSubscriberExt_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    AbsentSubscriberExt._cont = ASN1Dict([
        ('olcmInfoTable', _AbsentSubscriberExt_olcmInfoTable),
        ('imsi', _AbsentSubscriberExt_imsi),
        ])
    AbsentSubscriberExt._ext = []
    
    #-----< ErrOlcmInfoTableExt >-----#
    ErrOlcmInfoTableExt = SEQ(name='ErrOlcmInfoTableExt', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _ErrOlcmInfoTableExt_olcmInfoTable = SEQ_OF(name='olcmInfoTable', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'OlcmInfoTable')), opt=True)
    _ErrOlcmInfoTableExt_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    ErrOlcmInfoTableExt._cont = ASN1Dict([
        ('olcmInfoTable', _ErrOlcmInfoTableExt_olcmInfoTable),
        ('imsi', _ErrOlcmInfoTableExt_imsi),
        ])
    ErrOlcmInfoTableExt._ext = []
    
    #-----< RoutingCategoryExt >-----#
    RoutingCategoryExt = SEQ(name='RoutingCategoryExt', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _RoutingCategoryExt_routingCategory = OCT_STR(name='routingCategory', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'RoutingCategory')), opt=True)
    _RoutingCategoryExt_extRoutingCategory = INT(name='extRoutingCategory', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'ExtRoutingCategory')), opt=True)
    RoutingCategoryExt._cont = ASN1Dict([
        ('routingCategory', _RoutingCategoryExt_routingCategory),
        ('extRoutingCategory', _RoutingCategoryExt_extRoutingCategory),
        ])
    RoutingCategoryExt._ext = []
    
    #-----< SriForSMArgExt >-----#
    SriForSMArgExt = SEQ(name='SriForSMArgExt', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _SriForSMArgExt_cfuSMSCounter = OCT_STR(name='cfuSMSCounter', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'CfuSMSCounter')), opt=True)
    _SriForSMArgExt_cfusmcfo = NULL(name='cfusmcfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SriForSMArgExt_memberInterrogate = NULL(name='memberInterrogate', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SriForSMArgExt._cont = ASN1Dict([
        ('cfuSMSCounter', _SriForSMArgExt_cfuSMSCounter),
        ('cfusmcfo', _SriForSMArgExt_cfusmcfo),
        ('memberInterrogate', _SriForSMArgExt_memberInterrogate),
        ])
    SriForSMArgExt._ext = []
    
    #-----< ReportSMDelStatArgExt >-----#
    ReportSMDelStatArgExt = SEQ(name='ReportSMDelStatArgExt', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _ReportSMDelStatArgExt_cfuSMSCounter = OCT_STR(name='cfuSMSCounter', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'CfuSMSCounter')), opt=True)
    _ReportSMDelStatArgExt_cfusmcfo = NULL(name='cfusmcfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ReportSMDelStatArgExt._cont = ASN1Dict([
        ('cfuSMSCounter', _ReportSMDelStatArgExt_cfuSMSCounter),
        ('cfusmcfo', _ReportSMDelStatArgExt_cfusmcfo),
        ])
    ReportSMDelStatArgExt._ext = []
    
    #-----< CfuSMSCounter >-----#
    CfuSMSCounter = OCT_STR(name='CfuSMSCounter', mode=MODE_TYPE)
    CfuSMSCounter._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< MO-ForwardSM-ArgExt >-----#
    MO_ForwardSM_ArgExt = SEQ(name='MO-ForwardSM-ArgExt', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _MO_ForwardSM_ArgExt_locationAreaCode = OCT_STR(name='locationAreaCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'LocationAreaCode')), opt=True)
    _MO_ForwardSM_ArgExt_cellId = OCT_STR(name='cellId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'CellGlobalIdOrServiceAreaIdFixedLength')), opt=True)
    MO_ForwardSM_ArgExt._cont = ASN1Dict([
        ('locationAreaCode', _MO_ForwardSM_ArgExt_locationAreaCode),
        ('cellId', _MO_ForwardSM_ArgExt_cellId),
        ])
    MO_ForwardSM_ArgExt._ext = []
    
    #-----< LocationAreaCode >-----#
    LocationAreaCode = OCT_STR(name='LocationAreaCode', mode=MODE_TYPE)
    LocationAreaCode._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< UdlArgExt >-----#
    UdlArgExt = SEQ(name='UdlArgExt', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _UdlArgExt_lai = OCT_STR(name='lai', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LAIFixedLength')), opt=True)
    _UdlArgExt_sendImmResp = NULL(name='sendImmResp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    UdlArgExt._cont = ASN1Dict([
        ('lai', _UdlArgExt_lai),
        ('sendImmResp', _UdlArgExt_sendImmResp),
        ])
    UdlArgExt._ext = []
    
    #-----< RoamNotAllowedExt >-----#
    RoamNotAllowedExt = SEQ(name='RoamNotAllowedExt', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _RoamNotAllowedExt_rejectCause = OCT_STR(name='rejectCause', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RoamNotAllowedExt_rejectCause._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    RoamNotAllowedExt._cont = ASN1Dict([
        ('rejectCause', _RoamNotAllowedExt_rejectCause),
        ])
    RoamNotAllowedExt._ext = []
    
    #-----< AnyTimeModArgExt >-----#
    AnyTimeModArgExt = SEQ(name='AnyTimeModArgExt', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _AnyTimeModArgExt_senderMSISDN = OCT_STR(name='senderMSISDN', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    AnyTimeModArgExt._cont = ASN1Dict([
        ('senderMSISDN', _AnyTimeModArgExt_senderMSISDN),
        ])
    AnyTimeModArgExt._ext = []
    
    #-----< CosInfo >-----#
    CosInfo = SEQ(name='CosInfo', mode=MODE_TYPE)
    _CosInfo_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')), opt=True)
    _CosInfo_cos_FeatureList = SEQ_OF(name='cos-FeatureList', mode=MODE_TYPE, typeref=ASN1RefType(('NokiaMAP-Extensions', 'COS-FeatureList')))
    CosInfo._cont = ASN1Dict([
        ('ss-Code', _CosInfo_ss_Code),
        ('cos-FeatureList', _CosInfo_cos_FeatureList),
        ])
    CosInfo._ext = None
    
    #-----< COS-FeatureList >-----#
    COS_FeatureList = SEQ_OF(name='COS-FeatureList', mode=MODE_TYPE)
    _COS_FeatureList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NokiaMAP-Extensions', 'COS-Feature')))
    COS_FeatureList._cont = _COS_FeatureList__item_
    COS_FeatureList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=13)], ev=None, er=[])
    
    #-----< maxNumberOfCOSFeatures >-----#
    maxNumberOfCOSFeatures = INT(name='maxNumberOfCOSFeatures', mode=MODE_VALUE)
    maxNumberOfCOSFeatures._val = 13
    
    #-----< COS-Feature >-----#
    COS_Feature = SEQ(name='COS-Feature', mode=MODE_TYPE)
    _COS_Feature_basicServiceCode = CHOICE(name='basicServiceCode', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'BasicServiceCode')), opt=True)
    _COS_Feature_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    _COS_Feature_customerGroupID = BIT_STR(name='customerGroupID', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'CustomerGroupID')), opt=True)
    _COS_Feature_subGroupID = BIT_STR(name='subGroupID', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'SubGroupID')), opt=True)
    _COS_Feature_classOfServiceID = BIT_STR(name='classOfServiceID', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NokiaMAP-Extensions', 'ClassOfServiceID')), opt=True)
    COS_Feature._cont = ASN1Dict([
        ('basicServiceCode', _COS_Feature_basicServiceCode),
        ('ss-Status', _COS_Feature_ss_Status),
        ('customerGroupID', _COS_Feature_customerGroupID),
        ('subGroupID', _COS_Feature_subGroupID),
        ('classOfServiceID', _COS_Feature_classOfServiceID),
        ])
    COS_Feature._ext = None
    
    #-----< CustomerGroupID >-----#
    CustomerGroupID = BIT_STR(name='CustomerGroupID', mode=MODE_TYPE)
    CustomerGroupID._cont = ASN1Dict([('formatIndicator', 0), ('idHighBit', 8), ('netidHighBit', 16), ('idLowBit', 31)])
    CustomerGroupID._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    
    #-----< SubGroupID >-----#
    SubGroupID = BIT_STR(name='SubGroupID', mode=MODE_TYPE)
    SubGroupID._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< ClassOfServiceID >-----#
    ClassOfServiceID = BIT_STR(name='ClassOfServiceID', mode=MODE_TYPE)
    ClassOfServiceID._cont = ASN1Dict([('formatIndicator', 0), ('idHighBit', 8), ('idLowBit', 15)])
    ClassOfServiceID._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< AccessTypeExt >-----#
    AccessTypeExt = SEQ(name='AccessTypeExt', mode=MODE_TYPE)
    _AccessTypeExt_access = ENUM(name='access', mode=MODE_TYPE, typeref=ASN1RefType(('NokiaMAP-Extensions', 'Access')))
    _AccessTypeExt_version = INT(name='version', mode=MODE_TYPE, typeref=ASN1RefType(('NokiaMAP-Extensions', 'Version')))
    AccessTypeExt._cont = ASN1Dict([
        ('access', _AccessTypeExt_access),
        ('version', _AccessTypeExt_version),
        ])
    AccessTypeExt._ext = []
    
    #-----< Access >-----#
    Access = ENUM(name='Access', mode=MODE_TYPE)
    Access._cont = ASN1Dict([('gsm', 1), ('geran', 2), ('utran', 3)])
    Access._ext = []
    
    #-----< Version >-----#
    Version = INT(name='Version', mode=MODE_TYPE)
    Version._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< AccessSubscriptionListExt >-----#
    AccessSubscriptionListExt = SEQ_OF(name='AccessSubscriptionListExt', mode=MODE_TYPE)
    _AccessSubscriptionListExt__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NokiaMAP-Extensions', 'Access')))
    AccessSubscriptionListExt._cont = _AccessSubscriptionListExt__item_
    AccessSubscriptionListExt._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< AllowedServiceData >-----#
    AllowedServiceData = BIT_STR(name='AllowedServiceData', mode=MODE_TYPE)
    AllowedServiceData._cont = ASN1Dict([('amr-wb-allowed', 0)])
    AllowedServiceData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< AnyTimePO-BarringArg >-----#
    AnyTimePO_BarringArg = SEQ(name='AnyTimePO-BarringArg', mode=MODE_TYPE)
    _AnyTimePO_BarringArg_subscriberIdentity = CHOICE(name='subscriberIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'SubscriberIdentity')))
    _AnyTimePO_BarringArg_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _AnyTimePO_BarringArg_gprs_Barring = ENUM(name='gprs-Barring', mode=MODE_TYPE, typeref=ASN1RefType(('NokiaMAP-Extensions', 'GprsBarring')))
    AnyTimePO_BarringArg._cont = ASN1Dict([
        ('subscriberIdentity', _AnyTimePO_BarringArg_subscriberIdentity),
        ('gsmSCF-Address', _AnyTimePO_BarringArg_gsmSCF_Address),
        ('gprs-Barring', _AnyTimePO_BarringArg_gprs_Barring),
        ])
    AnyTimePO_BarringArg._ext = []
    
    #-----< AnyTimePO-BarringRes >-----#
    AnyTimePO_BarringRes = SEQ(name='AnyTimePO-BarringRes', mode=MODE_TYPE)
    AnyTimePO_BarringRes._cont = ASN1Dict([
        ])
    AnyTimePO_BarringRes._ext = []
    
    #-----< GprsBarring >-----#
    GprsBarring = ENUM(name='GprsBarring', mode=MODE_TYPE)
    GprsBarring._cont = ASN1Dict([('gprsServiceBarring', 0), ('grantGPRS-Service', 1)])
    GprsBarring._ext = []
    
    _all_ = [
        RoutingCategory,
        maxNumOfActiveSS,
        ActiveSS_List,
        ExtRoutingCategory,
        _IsdArgExt_alsLineIndicator,
        _IsdArgExt_routingCategory,
        _IsdArgExt_serviceList,
        _IsdArgExt_serv_info_list,
        _IsdArgExt_extRoutingCategory,
        _IsdArgExt_ownMSISDN,
        IsdArgExt,
        _DsdArgExt_alsLineIndicator,
        _DsdArgExt_serviceList,
        DsdArgExt,
        _UlResExt_mwd_Set,
        UlResExt,
        EmoInCategoryKey,
        _SS_DataEmoInExt_emoInCategoryKey,
        SS_DataEmoInExt,
        InTriggerKey,
        PnpIndex,
        CallRedirectionIndex,
        ChargingArea,
        maxNumOfCA,
        _ChargingAreaList__item_,
        ChargingAreaList,
        _RegionalChargingData_chargingAreaList,
        RegionalChargingData,
        _SS_DataExtension_inTriggerKey,
        _SS_DataExtension_pnpIndex,
        _SS_DataExtension_callRedirectionIndex,
        _SS_DataExtension_regionalChargingData,
        SS_DataExtension,
        _SriExtension_callForwardingOverride,
        _SriExtension_in_Capability,
        _SriExtension_callingCategory,
        _SriExtension_internalServiceIndicator,
        _SriExtension_srbtSupportIndicator,
        _SriExtension_gmscSupportIndicator,
        SriExtension,
        CallingCategory,
        InternalServiceIndicator,
        ExtraProtocolId,
        _ExtraSignalInfo_protocolId,
        _ExtraSignalInfo_signalInfo,
        ExtraSignalInfo,
        CUG_CallInfo,
        _Nokia_CUG_Data_cug_Interlock,
        _Nokia_CUG_Data_cug_OutgoingAccess,
        _Nokia_CUG_Data_cug_CallInfo,
        Nokia_CUG_Data,
        _SriResExtension_inTriggerKey,
        _SriResExtension_vlrNumber,
        _SriResExtension_activeSs,
        _SriResExtension_traceReference,
        _SriResExtension_traceType,
        _SriResExtension_omc_Id,
        _SriResExtension_hotBilling,
        _SriResExtension_cfoIsDone,
        _SriResExtension_cfInCug,
        _SriResExtension_basicService,
        _SriResExtension_category,
        _SriResExtension_routingCategory,
        _SriResExtension_pnpIndex,
        _SriResExtension_nokia_CUG,
        _SriResExtension_noBarrings,
        _SriResExtension_odb_Data,
        _SriResExtension_fraudData,
        _SriResExtension_extRoutingCategory,
        _SriResExtension_leaId,
        _SriResExtension_olcmInfoTable,
        _SriResExtension_callingCategory,
        _SriResExtension_commonMSISDN,
        _SriResExtension_rgData,
        _SriResExtension_olcmTraceReference,
        SriResExtension,
        _RgData_noAnswerTimer,
        _RgData_memberList,
        _RgData_alertingMethod,
        _RgData_userType,
        _RgData_divertedToNbr,
        _RgData_memberOfSuppression,
        _RgData_ringbacktone,
        RgData,
        NoAnswerTimer,
        _MemberList__item_,
        MemberList,
        AlertingMethod,
        UserType,
        MAPserviceCode,
        picLock,
        prefCarrierId,
        mKey,
        smsKey,
        fraud_Data,
        cell_update,
        maxnumOfMAPservices,
        MAPserviceList,
        CarrierIdCode,
        _PrefCarrierIdList_prefCarrierIdCode1,
        PrefCarrierIdList,
        _ANSIIsdArgExt_prefCarrierIdList,
        ANSIIsdArgExt,
        _ANSISriResExt_prefCarrierIdList,
        ANSISriResExt,
        _CanLocArgExt_termination,
        CanLocArgExt,
        _ATMargExt_traceReference,
        _ATMargExt_traceType,
        _ATMargExt_leaId,
        _ATMargExt_olcmInfoTable,
        _ATMargExt_olcmTraceReference,
        ATMargExt,
        LeaId,
        _OlcmInfoTable__item_,
        OlcmInfoTable,
        maxNumOfLEAs,
        _OlcmInfo_traceReference,
        _OlcmInfo_traceType,
        _OlcmInfo_leaId,
        _OlcmInfo_olcmTraceReference,
        OlcmInfo,
        OlcmTraceReference,
        _ATMresExt_olcmActive,
        ATMresExt,
        _DTMargExt_traceType,
        _DTMargExt_leaId,
        _DTMargExt_olcmTraceReference,
        DTMargExt,
        VersionInfo,
        maxNumOfServicesWithInfo,
        _FraudInfo_moc,
        _FraudInfo_cf,
        _FraudInfo_ct,
        FraudInfo,
        _FraudData_time,
        _FraudData_timeAction,
        _FraudData_maxCount,
        _FraudData_maxCountAction,
        FraudData,
        TimeLimit,
        ActionType,
        FraudMaxCount,
        _ServiceWithInfo_serviceCode,
        _ServiceWithInfo_versionInfo,
        _ServiceWithInfo_in_key,
        _ServiceWithInfo_fraudInfo,
        ServiceWithInfo,
        _ServiceListWithInfo__item_,
        ServiceListWithInfo,
        _INKey_mobile_IN_key,
        _INKey_sms_IN_key,
        INKey,
        MmTdpName,
        ServiceKey,
        MKeyVer,
        LocupType,
        _MKey_mKeyVer,
        _MKey_mmScfAddress,
        _MKey_mmTdpName,
        _MKey_serviceKey,
        _MKey_locupType,
        MKey,
        SmsTdpName,
        _SMSKey_mmSCPAddress,
        _SMSKey_smsTdpName,
        _SMSKey_serviceKey,
        _SMSKey_mmsFlag,
        SMSKey,
        NumberPorted,
        _USSD_Extension_routingCategory,
        _USSD_Extension_cellId,
        _USSD_Extension_sai_Present,
        USSD_Extension,
        _HO_Ext_map_Opt,
        _HO_Ext_codec_List,
        _HO_Ext_selected_Codec,
        _HO_Ext_uma_access,
        _HO_Ext_uma_ip_address,
        _HO_Ext_uma_ip_port_nb,
        HO_Ext,
        MapOptFields,
        _CodecListExt__item_,
        CodecListExt,
        maxNumOfCodec,
        CodecExt,
        _SelectedCodec_codec,
        _SelectedCodec_modes,
        SelectedCodec,
        Modes,
        IPPortNb,
        _AbsentSubscriberExt_olcmInfoTable,
        _AbsentSubscriberExt_imsi,
        AbsentSubscriberExt,
        _ErrOlcmInfoTableExt_olcmInfoTable,
        _ErrOlcmInfoTableExt_imsi,
        ErrOlcmInfoTableExt,
        _RoutingCategoryExt_routingCategory,
        _RoutingCategoryExt_extRoutingCategory,
        RoutingCategoryExt,
        _SriForSMArgExt_cfuSMSCounter,
        _SriForSMArgExt_cfusmcfo,
        _SriForSMArgExt_memberInterrogate,
        SriForSMArgExt,
        _ReportSMDelStatArgExt_cfuSMSCounter,
        _ReportSMDelStatArgExt_cfusmcfo,
        ReportSMDelStatArgExt,
        CfuSMSCounter,
        _MO_ForwardSM_ArgExt_locationAreaCode,
        _MO_ForwardSM_ArgExt_cellId,
        MO_ForwardSM_ArgExt,
        LocationAreaCode,
        _UdlArgExt_lai,
        _UdlArgExt_sendImmResp,
        UdlArgExt,
        _RoamNotAllowedExt_rejectCause,
        RoamNotAllowedExt,
        _AnyTimeModArgExt_senderMSISDN,
        AnyTimeModArgExt,
        _CosInfo_ss_Code,
        _CosInfo_cos_FeatureList,
        CosInfo,
        _COS_FeatureList__item_,
        COS_FeatureList,
        maxNumberOfCOSFeatures,
        _COS_Feature_basicServiceCode,
        _COS_Feature_ss_Status,
        _COS_Feature_customerGroupID,
        _COS_Feature_subGroupID,
        _COS_Feature_classOfServiceID,
        COS_Feature,
        CustomerGroupID,
        SubGroupID,
        ClassOfServiceID,
        _AccessTypeExt_access,
        _AccessTypeExt_version,
        AccessTypeExt,
        Access,
        Version,
        _AccessSubscriptionListExt__item_,
        AccessSubscriptionListExt,
        AllowedServiceData,
        _AnyTimePO_BarringArg_subscriberIdentity,
        _AnyTimePO_BarringArg_gsmSCF_Address,
        _AnyTimePO_BarringArg_gprs_Barring,
        AnyTimePO_BarringArg,
        AnyTimePO_BarringRes,
        GprsBarring,
    ]

class Pycrate_TCAP_MAP_Dialogue:

    _name_  = 'Pycrate-TCAP-MAP-Dialogue'
    _oid_   = []
    
    _obj_ = [
        'TCAP-DIALOGUE-ENCODING',
        'Tcap-dialogue-encoding',
        'TcapDialogueExternal',
        ]
    _type_ = [
        'TCAP-DIALOGUE-ENCODING',
        'TcapDialogueExternal',
        ]
    _set_ = [
        'Tcap-dialogue-encoding',
        ]
    _val_ = [
        ]
    _class_ = [
        'TCAP-DIALOGUE-ENCODING',
        'Tcap-dialogue-encoding',
        ]
    _param_ = [
        ]
    
    #-----< TCAP-DIALOGUE-ENCODING >-----#
    TCAP_DIALOGUE_ENCODING = CLASS(name='TCAP-DIALOGUE-ENCODING', mode=MODE_TYPE)
    _TCAP_DIALOGUE_ENCODING_ref = OID(name='ref', mode=MODE_VALUE, uniq=True)
    _TCAP_DIALOGUE_ENCODING_Type = OPEN(name='Type', mode=MODE_TYPE)
    TCAP_DIALOGUE_ENCODING._cont = ASN1Dict([
        ('ref', _TCAP_DIALOGUE_ENCODING_ref),
        ('Type', _TCAP_DIALOGUE_ENCODING_Type),
        ])
    
    #-----< Tcap-dialogue-encoding >-----#
    Tcap_dialogue_encoding = CLASS(name='Tcap-dialogue-encoding', mode=MODE_SET, typeref=ASN1RefType(('Pycrate-TCAP-MAP-Dialogue', 'TCAP-DIALOGUE-ENCODING')))
    _Tcap_dialogue_encoding_val_Type_0 = CHOICE(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DialoguePDUs', 'DialoguePDU')))
    _Tcap_dialogue_encoding_val_Type_1 = CHOICE(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('UnidialoguePDUs', 'UniDialoguePDU')))
    _Tcap_dialogue_encoding_val_Type_2 = CHOICE(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-DialogueInformation', 'MAP-DialoguePDU')))
    Tcap_dialogue_encoding._val = ASN1Set(rv=[dict([('ref', (0, 0, 17, 773, 1, 1, 1)), ('Type', _Tcap_dialogue_encoding_val_Type_0)]), dict([('ref', (0, 0, 17, 773, 1, 2, 1)), ('Type', _Tcap_dialogue_encoding_val_Type_1)]), dict([('ref', (0, 4, 0, 0, 1, 1, 1, 1)), ('Type', _Tcap_dialogue_encoding_val_Type_2)])], rr=[], ev=[], er=[])
    
    #-----< TcapDialogueExternal >-----#
    TcapDialogueExternal = SEQ(name='TcapDialogueExternal', mode=MODE_TYPE, tag=(8, TAG_UNIVERSAL, TAG_IMPLICIT))
    _TcapDialogueExternal_direct_reference = OID(name='direct-reference', mode=MODE_TYPE, typeref=ASN1RefClassField(('Pycrate-TCAP-MAP-Dialogue', 'TCAP-DIALOGUE-ENCODING'), ['ref']), opt=True)
    __TcapDialogueExternal_direct_reference_tab = CLASS(name='_tab_TCAP-DIALOGUE-ENCODING', mode=MODE_SET, typeref=ASN1RefType(('Pycrate-TCAP-MAP-Dialogue', 'TCAP-DIALOGUE-ENCODING')))
    ___TcapDialogueExternal_direct_reference_tab_val_Type_0 = CHOICE(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DialoguePDUs', 'DialoguePDU')))
    ___TcapDialogueExternal_direct_reference_tab_val_Type_1 = CHOICE(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('UnidialoguePDUs', 'UniDialoguePDU')))
    ___TcapDialogueExternal_direct_reference_tab_val_Type_2 = CHOICE(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-DialogueInformation', 'MAP-DialoguePDU')))
    __TcapDialogueExternal_direct_reference_tab._val = ASN1Set(rv=[dict([('ref', (0, 0, 17, 773, 1, 1, 1)), ('Type', ___TcapDialogueExternal_direct_reference_tab_val_Type_0)]), dict([('ref', (0, 0, 17, 773, 1, 2, 1)), ('Type', ___TcapDialogueExternal_direct_reference_tab_val_Type_1)]), dict([('ref', (0, 4, 0, 0, 1, 1, 1, 1)), ('Type', ___TcapDialogueExternal_direct_reference_tab_val_Type_2)])], rr=[], ev=None, er=[])
    _TcapDialogueExternal_direct_reference._const_tab = __TcapDialogueExternal_direct_reference_tab
    _TcapDialogueExternal_direct_reference._const_tab_at = None
    _TcapDialogueExternal_direct_reference._const_tab_id = 'ref'
    _TcapDialogueExternal_indirect_reference = INT(name='indirect-reference', mode=MODE_TYPE, opt=True)
    _TcapDialogueExternal_data_value_descriptor = OBJ_DESC(name='data-value-descriptor', mode=MODE_TYPE, opt=True)
    _TcapDialogueExternal_encoding = CHOICE(name='encoding', mode=MODE_TYPE)
    __TcapDialogueExternal_encoding_single_ASN1_type = OPEN(name='single-ASN1-type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('Pycrate-TCAP-MAP-Dialogue', 'TCAP-DIALOGUE-ENCODING'), ['Type']))
    __TcapDialogueExternal_encoding_single_ASN1_type._const_tab = __TcapDialogueExternal_direct_reference_tab
    __TcapDialogueExternal_encoding_single_ASN1_type._const_tab_at = ('..', '..', 'direct-reference')
    __TcapDialogueExternal_encoding_single_ASN1_type._const_tab_id = 'Type'
    __TcapDialogueExternal_encoding_octet_aligned = OCT_STR(name='octet-aligned', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __TcapDialogueExternal_encoding_arbitrary = BIT_STR(name='arbitrary', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TcapDialogueExternal_encoding._cont = ASN1Dict([
        ('single-ASN1-type', __TcapDialogueExternal_encoding_single_ASN1_type),
        ('octet-aligned', __TcapDialogueExternal_encoding_octet_aligned),
        ('arbitrary', __TcapDialogueExternal_encoding_arbitrary),
        ])
    _TcapDialogueExternal_encoding._ext = None
    TcapDialogueExternal._cont = ASN1Dict([
        ('direct-reference', _TcapDialogueExternal_direct_reference),
        ('indirect-reference', _TcapDialogueExternal_indirect_reference),
        ('data-value-descriptor', _TcapDialogueExternal_data_value_descriptor),
        ('encoding', _TcapDialogueExternal_encoding),
        ])
    TcapDialogueExternal._ext = None
    
    _all_ = [
        _TCAP_DIALOGUE_ENCODING_ref,
        _TCAP_DIALOGUE_ENCODING_Type,
        TCAP_DIALOGUE_ENCODING,
        Tcap_dialogue_encoding,
        _Tcap_dialogue_encoding_val_Type_0,
        _Tcap_dialogue_encoding_val_Type_1,
        _Tcap_dialogue_encoding_val_Type_2,
        __TcapDialogueExternal_direct_reference_tab,
        ___TcapDialogueExternal_direct_reference_tab_val_Type_0,
        ___TcapDialogueExternal_direct_reference_tab_val_Type_1,
        ___TcapDialogueExternal_direct_reference_tab_val_Type_2,
        _TcapDialogueExternal_direct_reference,
        _TcapDialogueExternal_indirect_reference,
        _TcapDialogueExternal_data_value_descriptor,
        __TcapDialogueExternal_encoding_single_ASN1_type,
        __TcapDialogueExternal_encoding_octet_aligned,
        __TcapDialogueExternal_encoding_arbitrary,
        _TcapDialogueExternal_encoding,
        TcapDialogueExternal,
    ]

class TCAP_MAP_Messages:

    _name_  = 'TCAP-MAP-Messages'
    _oid_   = []
    
    _obj_ = [
        'TCAP-MAP-Message',
        ]
    _type_ = [
        'TCAP-MAP-Message',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< TCAP-MAP-Message >-----#
    TCAP_MAP_Message = CHOICE(name='TCAP-MAP-Message', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPMessages', 'TCMessage')))
    _TCAP_MAP_Message_unidirectional = SEQ(name='unidirectional', mode=MODE_TYPE, tag=(1, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPMessages', 'Unidirectional')))
    __TCAP_MAP_Message_unidirectional_dialoguePortion = SEQ(name='dialoguePortion', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPMessages', 'DialoguePortion')), opt=True)
    __TCAP_MAP_Message_unidirectional_components = SEQ_OF(name='components', mode=MODE_TYPE, tag=(12, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPMessages', 'ComponentPortion')))
    ___TCAP_MAP_Message_unidirectional_components__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPMessages', 'Component')))
    ____TCAP_MAP_Message_unidirectional_components__item__basicROS = CHOICE(name='basicROS', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'ROS')))
    _____TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke = SEQ(name='invoke', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'Invoke')))
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_invokeId = CHOICE(name='invokeId', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_invokeId._const_val = ASN1Set(rv=[('present', -128), ('present', -127), ('present', -126), ('present', -125), ('present', -124), ('present', -123), ('present', -122), ('present', -121), ('present', -120), ('present', -119), ('present', -118), ('present', -117), ('present', -116), ('present', -115), ('present', -114), ('present', -113), ('present', -112), ('present', -111), ('present', -110), ('present', -109), ('present', -108), ('present', -107), ('present', -106), ('present', -105), ('present', -104), ('present', -103), ('present', -102), ('present', -101), ('present', -100), ('present', -99), ('present', -98), ('present', -97), ('present', -96), ('present', -95), ('present', -94), ('present', -93), ('present', -92), ('present', -91), ('present', -90), ('present', -89), ('present', -88), ('present', -87), ('present', -86), ('present', -85), ('present', -84), ('present', -83), ('present', -82), ('present', -81), ('present', -80), ('present', -79), ('present', -78), ('present', -77), ('present', -76), ('present', -75), ('present', -74), ('present', -73), ('present', -72), ('present', -71), ('present', -70), ('present', -69), ('present', -68), ('present', -67), ('present', -66), ('present', -65), ('present', -64), ('present', -63), ('present', -62), ('present', -61), ('present', -60), ('present', -59), ('present', -58), ('present', -57), ('present', -56), ('present', -55), ('present', -54), ('present', -53), ('present', -52), ('present', -51), ('present', -50), ('present', -49), ('present', -48), ('present', -47), ('present', -46), ('present', -45), ('present', -44), ('present', -43), ('present', -42), ('present', -41), ('present', -40), ('present', -39), ('present', -38), ('present', -37), ('present', -36), ('present', -35), ('present', -34), ('present', -33), ('present', -32), ('present', -31), ('present', -30), ('present', -29), ('present', -28), ('present', -27), ('present', -26), ('present', -25), ('present', -24), ('present', -23), ('present', -22), ('present', -21), ('present', -20), ('present', -19), ('present', -18), ('present', -17), ('present', -16), ('present', -15), ('present', -14), ('present', -13), ('present', -12), ('present', -11), ('present', -10), ('present', -9), ('present', -8), ('present', -7), ('present', -6), ('present', -5), ('present', -4), ('present', -3), ('present', -2), ('present', -1), ('present', 0), ('present', 1), ('present', 2), ('present', 3), ('present', 4), ('present', 5), ('present', 6), ('present', 7), ('present', 8), ('present', 9), ('present', 10), ('present', 11), ('present', 12), ('present', 13), ('present', 14), ('present', 15), ('present', 16), ('present', 17), ('present', 18), ('present', 19), ('present', 20), ('present', 21), ('present', 22), ('present', 23), ('present', 24), ('present', 25), ('present', 26), ('present', 27), ('present', 28), ('present', 29), ('present', 30), ('present', 31), ('present', 32), ('present', 33), ('present', 34), ('present', 35), ('present', 36), ('present', 37), ('present', 38), ('present', 39), ('present', 40), ('present', 41), ('present', 42), ('present', 43), ('present', 44), ('present', 45), ('present', 46), ('present', 47), ('present', 48), ('present', 49), ('present', 50), ('present', 51), ('present', 52), ('present', 53), ('present', 54), ('present', 55), ('present', 56), ('present', 57), ('present', 58), ('present', 59), ('present', 60), ('present', 61), ('present', 62), ('present', 63), ('present', 64), ('present', 65), ('present', 66), ('present', 67), ('present', 68), ('present', 69), ('present', 70), ('present', 71), ('present', 72), ('present', 73), ('present', 74), ('present', 75), ('present', 76), ('present', 77), ('present', 78), ('present', 79), ('present', 80), ('present', 81), ('present', 82), ('present', 83), ('present', 84), ('present', 85), ('present', 86), ('present', 87), ('present', 88), ('present', 89), ('present', 90), ('present', 91), ('present', 92), ('present', 93), ('present', 94), ('present', 95), ('present', 96), ('present', 97), ('present', 98), ('present', 99), ('present', 100), ('present', 101), ('present', 102), ('present', 103), ('present', 104), ('present', 105), ('present', 106), ('present', 107), ('present', 108), ('present', 109), ('present', 110), ('present', 111), ('present', 112), ('present', 113), ('present', 114), ('present', 115), ('present', 116), ('present', 117), ('present', 118), ('present', 119), ('present', 120), ('present', 121), ('present', 122), ('present', 123), ('present', 124), ('present', 125), ('present', 126), ('present', 127)], rr=[], ev=None, er=[])
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_linkedId = CHOICE(name='linkedId', mode=MODE_TYPE, opt=True)
    _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_linkedId_present = INT(name='present', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefChoiceComp(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId'), ['present']))
    _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_linkedId_absent = NULL(name='absent', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_linkedId._cont = ASN1Dict([
        ('present', _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_linkedId_present),
        ('absent', _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_linkedId_absent),
        ])
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_linkedId._ext = None
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode = CHOICE(name='opcode', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['operationCode']))
    _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab = CLASS(name='_tab_OPERATION', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_0 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-AlertArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_0 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-AlertRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ResourceLimitationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_1 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-CommandArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_1 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'IST-CommandRes')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_2 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ProvideRoamingNumberArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_2 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ProvideRoamingNumberRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_0 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'OR-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoRoamingNbParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_3 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ReleaseResourcesArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_3 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ReleaseResourcesRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_1 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_4 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'RemoteUserFreeArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_4 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'RemoteUserFreeRes')))
    __sendRoutingInfo_Errors_val_ParameterType_2_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IncompatibleTerminalParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_1 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BusySubscriberParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_5 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ResumeCallHandlingArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_5 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'ResumeCallHandlingRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ForwardingFailedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_1_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'OR-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_6 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SendRoutingInfoArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_6 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SendRoutingInfoRes')))
    __sendRoutingInfo_Errors_val_ParameterType_5_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NumberChangedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BearerServNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TeleservNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_10 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BusySubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_11 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoSubscriberReplyParam')))
    __sendRoutingInfo_Errors_val_ParameterType_12 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    __sendRoutingInfo_Errors_val_ParameterType_13 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CUG-RejectParam')))
    __sendRoutingInfo_Errors_val_ParameterType_14 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ForwardingViolationParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_7 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SetReportingStateArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_7 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'SetReportingStateRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ResourceLimitationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_8 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'StatusReportArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_8 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CH-DataTypes', 'StatusReportRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_9 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'ForwardGroupCallSignallingArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_10 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'PrepareGroupCallArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_10 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'PrepareGroupCallRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoGroupCallNbParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_11 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'ProcessGroupCallSignallingArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_12 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallEndSignalArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_12 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallEndSignalRes')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_13 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallInfoArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_13 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-GR-DataTypes', 'SendGroupCallInfoRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'OngoingGroupCallParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TeleservNotProvParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_14 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ProvideSubscriberLocation-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_14 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ProvideSubscriberLocation-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalEquipmentParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedRequestingNetwork-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_9_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedLCSClient-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_10_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'PositionMethodFailure-Param')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_15 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'RoutingInfoForLCS-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_15 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'RoutingInfoForLCS-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedRequestingNetwork-Param')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_16 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'SubscriberLocationReport-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_16 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'SubscriberLocationReport-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_2_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ResourceLimitationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedRequestingNetwork-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_6_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownOrUnreachableLCSClient-Param')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_17 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeInterrogationArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_17 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeInterrogationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATI-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_2_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_18 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeModificationArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_18 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeModificationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATM-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BearerServNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TeleservNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_4 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSS-OperationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-SubscriptionViolationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9_1 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    __sendRoutingInfo_Errors_val_ParameterType_10_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    __sendRoutingInfo_Errors_val_ParameterType_11_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'InformationNotAvailableParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_19 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeSubscriptionInterrogationArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_19 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AnyTimeSubscriptionInterrogationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATSI-NotAllowedParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-NotAvailableParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'InformationNotAvailableParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_20 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AuthenticationFailureReportArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_20 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AuthenticationFailureReportRes')))
    __sendRoutingInfo_Errors_val_ParameterType_1_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_21 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelLocationArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_21 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_22 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelVcsgLocationArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_22 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancelVcsgLocationRes')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_23 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CheckIMEI-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_23 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CheckIMEI-Res')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_24 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'DeleteSubscriberDataArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_24 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'DeleteSubscriberDataRes')))
    __sendRoutingInfo_Errors_val_ParameterType_2_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_25 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'FailureReportArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_25 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'FailureReportRes')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_26 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ForwardAccessSignalling-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_28 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'InsertSubscriberDataArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_28 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'InsertSubscriberDataRes')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_29 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMM-EventArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_29 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMM-EventRes')))
    __sendRoutingInfo_Errors_val_ParameterType_3_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'MM-EventNotSupported-Param')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_30 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMsPresentForGprsArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_30 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteMsPresentForGprsRes')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_31 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteSubscriberDataModifiedArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_31 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NoteSubscriberDataModifiedRes')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_32 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareHO-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_32 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareHO-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TargetCellOutsideGCA-Param')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_33 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareSubsequentHO-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_33 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PrepareSubsequentHO-Res')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_34 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ProcessAccessSignalling-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_35 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ProvideSubscriberInfoArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_35 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ProvideSubscriberInfoRes')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_36 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PurgeMS-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_36 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PurgeMS-Res')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_37 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ResetArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_38 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RestoreDataArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_38 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RestoreDataRes')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_39 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendAuthenticationInfoArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_39 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendAuthenticationInfoRes')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_40 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendEndSignal-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_40 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendEndSignal-Res')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_41 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendIdentificationArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_41 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendIdentificationRes')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_42 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendRoutingInfoForGprsArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_42 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendRoutingInfoForGprsRes')))
    __sendRoutingInfo_Errors_val_ParameterType_0_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_6 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_43 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateGprsLocationArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_43 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateGprsLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_3_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'RoamingNotAllowedParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_44 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateLocationArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_44 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_4_8 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'RoamingNotAllowedParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_45 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateVcsgLocationArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_45 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UpdateVcsgLocationRes')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_46 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'ActivateTraceModeArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_46 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'ActivateTraceModeRes')))
    __sendRoutingInfo_Errors_val_ParameterType_5_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TracingBufferFullParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_47 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'DeactivateTraceModeArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_47 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'DeactivateTraceModeRes')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_48 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_48 = OCT_STR(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_49 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'AlertServiceCentreArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_50 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'InformServiceCentreArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_51 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MO-ForwardSM-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_51 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MO-ForwardSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_2_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    __sendRoutingInfo_Errors_val_ParameterType_3_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SM-DeliveryFailureCause')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_52 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_52 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_7_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SubBusyForMT-SMS-Param')))
    __sendRoutingInfo_Errors_val_ParameterType_8_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SM-DeliveryFailureCause')))
    __sendRoutingInfo_Errors_val_ParameterType_9_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberSM-Param')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_53 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-VGCS-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_53 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MT-ForwardSM-VGCS-Res')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_54 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReadyForSM-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_54 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReadyForSM-Res')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_55 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReportSM-DeliveryStatusArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_55 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'ReportSM-DeliveryStatusRes')))
    __sendRoutingInfo_Errors_val_ParameterType_3_8 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'MessageWaitListFullParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_56 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'RoutingInfoForSM-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_56 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'RoutingInfoForSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_7_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberSM-Param')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_57 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-ForBS-Code')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_57 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Info')))
    __sendRoutingInfo_Errors_val_ParameterType_3_9 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BearerServNotProvParam')))
    __sendRoutingInfo_Errors_val_ParameterType_6_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSS-OperationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_7_4 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    __sendRoutingInfo_Errors_val_ParameterType_9_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_58 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-ForBS-Code')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_58 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Info')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_59 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'EraseCC-EntryArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_59 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'EraseCC-EntryRes')))
    __sendRoutingInfo_Errors_val_ParameterType_3_10 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    __sendRoutingInfo_Errors_val_ParameterType_4_9 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSS-OperationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_8 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_60 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-ForBS-Code')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_60 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Info')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_61 = ENUM(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'GuidanceInfo')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_61 = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'Password')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_61._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_62 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-ForBS-Code')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_62 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'InterrogateSS-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_7_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-NotAvailableParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_63 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_63 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4_10 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_64 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'RegisterCC-EntryArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_64 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'RegisterCC-EntryRes')))
    __sendRoutingInfo_Errors_val_ParameterType_6_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    __sendRoutingInfo_Errors_val_ParameterType_7_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ShortTermDenialParam')))
    __sendRoutingInfo_Errors_val_ParameterType_8_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'LongTermDenialParam')))
    __sendRoutingInfo_Errors_val_ParameterType_9_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_65 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_65 = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'Password')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_65._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    __sendRoutingInfo_Errors_val_ParameterType_4__11 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-SubscriptionViolationParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_9 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'PW-RegistrationFailureCause')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_66 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'RegisterSS-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_66 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Info')))
    __sendRoutingInfo_Errors_val_ParameterType_8_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_67 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-InvocationNotificationArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_67 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-InvocationNotificationRes')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_68 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Arg')))
    __sendRoutingInfo_Errors_val_ParameterType_4___12 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSubscriberParam')))
    __sendRoutingInfo_Errors_val_ParameterType_5_10 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalEquipmentParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_69 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_69 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-Res')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_70 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CH-DataTypes', 'ProvideRoamingNumberArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_70 = OCT_STR(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    __sendRoutingInfo_Errors_val_ParameterType_0_7 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'NetworkResource')))
    __sendRoutingInfo_Errors_val_ParameterType_4____13 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_71 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CH-DataTypes', 'SendRoutingInfoArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_71 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CH-DataTypes', 'SendRoutingInfoRes')))
    __sendRoutingInfo_Errors_val_ParameterType_8_6 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    __sendRoutingInfo_Errors_val_ParameterType_9_6 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    __sendRoutingInfo_Errors_val_ParameterType_10_2 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CUG-RejectCause')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_72 = CHOICE(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'CancelLocationArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_73 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMEI')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_73 = ENUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'EquipmentStatus')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_74 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'DeleteSubscriberDataArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_74 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'DeleteSubscriberDataRes')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_75 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_76 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'InsertSubscriberDataArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_76 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'InsertSubscriberDataRes')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_77 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PerformHO-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_77 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PerformHO-Res')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_78 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PerformSubsequentHO-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_78 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_79 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PrepareHO-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_79 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PrepareHO-Res')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_80 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PrepareSubsequentHO-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_80 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_81 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_82 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'PurgeMS-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_83 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'ResetArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_84 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'RestoreDataArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_84 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'RestoreDataRes')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_85 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendAuthenticationInfoArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_85 = SEQ_OF(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendAuthenticationInfoRes')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_86 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ExternalSignalInfo')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_87 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'TMSI')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_87 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendIdentificationRes')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_88 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SendParametersArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_88 = SEQ_OF(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'SentParameterList')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_89 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'UpdateLocationArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_89 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-MS-DataTypes', 'UpdateLocationRes')))
    __sendRoutingInfo_Errors_val_ParameterType_4_____14 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'RoamingNotAllowedCause')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_90 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'ActivateTraceModeArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_91 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'DeactivateTraceModeArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_92 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'NoteInternalHO-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_93 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_93 = OCT_STR(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_94 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-OM-DataTypes', 'TraceSubscriberActivityArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_95 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'AlertServiceCentreArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_96 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'AlertServiceCentreArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_97 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'ForwardSM-Arg')))
    __sendRoutingInfo_Errors_val_ParameterType_7_7 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    __sendRoutingInfo_Errors_val_ParameterType_9_7 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'SM-DeliveryFailureCause')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_98 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'InformServiceCentreArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_99 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'IMSI')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_100 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'ReadyForSM-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_101 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'ReportSM-DeliveryStatusArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_101 = OCT_STR(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'ISDN-AddressString')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_102 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'RoutingInfoForSM-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_102 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SM-DataTypes', 'RoutingInfoForSM-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_6_7 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    __sendRoutingInfo_Errors_val_ParameterType_7_8 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_103 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_103 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    __sendRoutingInfo_Errors_val_ParameterType_6_8 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    __sendRoutingInfo_Errors_val_ParameterType_8_7 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Status')))
    __sendRoutingInfo_Errors_val_ParameterType_9_8 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-SubscriptionOption')))
    __sendRoutingInfo_Errors_val_ParameterType_10_3 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'SS-IncompatibilityCause')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_104 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'BeginSubscriberActivityArg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_105 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_105 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_106 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_106 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_107 = ENUM(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'GuidanceInfo')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_107 = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'Password')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_107._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_108 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-ForBS-Code')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_108 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'InterrogateSS-Res')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_109 = STR_IA5(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-UserData')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_109 = STR_IA5(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-UserData')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_110 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_110 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Res')))
    __sendRoutingInfo_Errors_val_ParameterType_4______15 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_111 = OCT_STR(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-Code', 'SS-Code')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_111 = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'Password')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_111._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    __sendRoutingInfo_Errors_val_ParameterType_3__11 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    __sendRoutingInfo_Errors_val_ParameterType_4_______16 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-SubscriptionOption')))
    __sendRoutingInfo_Errors_val_ParameterType_5__11 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'PW-RegistrationFailureCause')))
    __Supported_MAPv2_Operations_Linked_val_ArgumentType_0 = ENUM(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'GuidanceInfo')))
    __Supported_MAPv2_Operations_Linked_val_ResultType_0 = STR_NUM(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'Password')))
    __Supported_MAPv2_Operations_Linked_val_ResultType_0._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_112 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'RegisterSS-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_112 = CHOICE(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Info')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_113 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Arg')))
    __sendRoutingInfo_Errors_val_ParameterType_3___12 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_114 = SEQ(name='ArgumentType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Arg')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_114 = SEQ(name='ResultType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'USSD-Res')))
    _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab._val = ASN1Set(rv=[dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_0), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_0), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 87))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_1), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_1), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 88))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_2), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_2), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6), ('errorCode', ('local', 39))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 4))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_3), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_3), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 34))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 20))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_4), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_4), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_1), ('errorCode', ('local', 28))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_1), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_0), ('errorCode', ('local', 45))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 75))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_5), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_5), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_1), ('errorCode', ('local', 47))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_2), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 6))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_6), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_6), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_0), ('errorCode', ('local', 48))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_1), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_0), ('errorCode', ('local', 44))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10), ('errorCode', ('local', 45))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_11), ('errorCode', ('local', 46))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_12), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_13), ('errorCode', ('local', 15))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_14), ('errorCode', ('local', 14))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 22))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_7), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_7), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_3), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_2), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_2), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 73))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_8), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_8), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 35))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 74))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_9), ('operationCode', ('local', 42))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_10), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_10), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_4), ('errorCode', ('local', 50))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 39))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_11), ('operationCode', ('local', 41))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_12), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_12), ('operationCode', ('local', 40))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_13), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_13), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_5), ('errorCode', ('local', 22))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_2), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_1), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 84))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_14), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_14), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_3), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_0), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_0), ('errorCode', ('local', 52))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_0), ('errorCode', ('local', 53))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_0), ('errorCode', ('local', 54))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 83))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_15), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_15), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_5), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_2), ('errorCode', ('local', 52))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 85))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_16), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_16), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_2), ('errorCode', ('local', 51))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_5), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_4), ('errorCode', ('local', 52))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_3), ('errorCode', ('local', 58))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 86))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_17), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_17), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_6), ('errorCode', ('local', 49))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_3), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_5), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 71))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_18), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_18), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_3), ('errorCode', ('local', 61))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_6), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_5), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_4), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_1), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_1), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_1), ('errorCode', ('local', 20))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_11_0), ('errorCode', ('local', 62))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 65))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_19), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_19), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_4), ('errorCode', ('local', 60))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_6), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_5), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_4), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_1), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_2), ('errorCode', ('local', 18))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_2), ('errorCode', ('local', 62))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 62))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_20), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_20), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 15))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_21), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_21), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 3))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_22), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_22), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 36))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_23), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_23), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('errorCode', ('local', 7))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 43))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_24), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_24), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_4), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 8))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_25), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_25), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 25))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_26), ('operationCode', ('local', 34))]), dict([('operationCode', ('local', 38))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_28), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_28), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_4), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_29), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_29), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_5), ('errorCode', ('local', 59))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 89))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_30), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_30), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 26))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_31), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_31), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 5))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_32), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_32), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('errorCode', ('local', 25))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_7), ('errorCode', ('local', 42))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 68))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_33), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_33), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_34), ('operationCode', ('local', 33))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_35), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_35), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 70))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_36), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_36), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 67))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_37), ('operationCode', ('local', 37))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_38), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_38), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 57))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_39), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_39), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 56))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_40), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_40), ('operationCode', ('local', 29))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_41), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_41), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_3), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 55))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_42), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_42), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_6), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_1), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_3), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_3), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_5), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 24))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_43), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_43), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_6), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 23))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_44), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_44), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_8), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 2))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_45), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_45), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 53))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_46), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_46), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_7), ('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_47), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_47), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 51))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_48), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_48), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 58))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_49), ('returnResult', True), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 64))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_50), ('operationCode', ('local', 63))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_51), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_51), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_5), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_7), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_52), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_52), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_4), ('errorCode', ('local', 5))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_3), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_1), ('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_2), ('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_3), ('errorCode', ('local', 32))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_3), ('errorCode', ('local', 6))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 44))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_53), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_53), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 21))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_54), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_54), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_5), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_4), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 66))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_55), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_55), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_8), ('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_56), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_56), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_0), ('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_5), ('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_5), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_4), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_3), ('errorCode', ('local', 6))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_57), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_57), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_9), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_5), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_4), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_4), ('errorCode', ('local', 20))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 12))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_58), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_58), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_9), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_5), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_4), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_1), ('errorCode', ('local', 19))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 13))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_59), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_59), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_10), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_9), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_8), ('errorCode', ('local', 17))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 77))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_60), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_60), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_9), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_5), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_4), ('errorCode', ('local', 17))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 11))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_61), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_61), ('operationCode', ('local', 18))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_62), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_62), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_9), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_5), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_5), ('errorCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 14))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_63), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_63), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('errorCode', ('local', 71))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_10), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 59))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_64), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_64), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_10), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_9), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_8), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_6), ('errorCode', ('local', 20))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_6), ('errorCode', ('local', 29))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_4), ('errorCode', ('local', 30))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_5), ('errorCode', ('local', 21))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 76))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_65), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_65), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_10), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4__11), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_9), ('errorCode', ('local', 37))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 17))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_66), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_66), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_9), ('errorCode', ('local', 10))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_3), ('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_6), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_5), ('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_4), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_5), ('errorCode', ('local', 20))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 10))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_67), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_67), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_5), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_7), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2), ('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 72))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_68), ('returnResult', True), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4___12), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_10), ('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 61))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_69), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_69), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_0), ('errorCode', ('local', 34))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_1_0), ('errorCode', ('local', 35))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_2_0), ('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3_1), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4___12), ('errorCode', ('local', 9))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5_10), ('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 60))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_70), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_70), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4____13), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 39))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 4))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_71), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_71), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 44))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_6), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_6), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_2), ('errorCode', ('local', 15))]), dict([('errorCode', ('local', 14))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 22))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_72), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 3))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_73), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_73), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 7))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 43))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_74), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_74), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 8))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_75), ('operationCode', ('local', 34))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_76), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_76), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 7))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_77), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_77), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 2))]), dict([('errorCode', ('local', 23))]), dict([('errorCode', ('local', 24))]), dict([('errorCode', ('local', 25))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 28))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_78), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_78), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 2))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 23))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 30))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_79), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_79), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 25))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 68))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_80), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_80), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 69))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_81), ('operationCode', ('local', 33))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_82), ('operationCode', ('local', 67))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_83), ('operationCode', ('local', 37))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_84), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_84), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 57))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_85), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_85), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 56))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_86), ('operationCode', ('local', 29))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_87), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_87), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 55))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_88), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_88), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 9))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_89), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_89), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_____14), ('errorCode', ('local', 8))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 2))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_90), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 40))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 50))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_91), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 51))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_92), ('operationCode', ('local', 35))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_93), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_93), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 58))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_94), ('operationCode', ('local', 52))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_95), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 64))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_96), ('operationCode', ('local', 49))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_97), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_7), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 31))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_7), ('errorCode', ('local', 32))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 46))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_98), ('operationCode', ('local', 63))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_99), ('operationCode', ('local', 48))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_100), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 66))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_101), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_101), ('Errors', ASN1Set(rv=[dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 33))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 47))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_102), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_102), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_7), ('errorCode', ('local', 27))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_7_8), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 45))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_103), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_103), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_8), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_7), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_8), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_3), ('errorCode', ('local', 20))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 12))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_104), ('operationCode', ('local', 54))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_105), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_105), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_8), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_7), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_8), ('errorCode', ('local', 19))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 13))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_106), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_106), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_8), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_7), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_8), ('errorCode', ('local', 19))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 11))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_107), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_107), ('operationCode', ('local', 18))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_108), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_108), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_8), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('errorCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 14))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_109), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_109), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 36))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 19))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_110), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_110), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 71))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4______15), ('errorCode', ('local', 13))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 59))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_111), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_111), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3__11), ('errorCode', ('local', 13))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_4_______16), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_5__11), ('errorCode', ('local', 37))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))])], rr=[], ev=None, er=[])), ('Linked', ASN1Set(rv=[dict([('ArgumentType', __Supported_MAPv2_Operations_Linked_val_ArgumentType_0), ('ResultType', __Supported_MAPv2_Operations_Linked_val_ResultType_0), ('operationCode', ('local', 18))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 17))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_112), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_112), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_6_8), ('errorCode', ('local', 13))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_8_7), ('errorCode', ('local', 17))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_9_8), ('errorCode', ('local', 19))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_10_3), ('errorCode', ('local', 20))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 10))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_113), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3___12), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 61))]), dict([('ArgumentType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_114), ('ResultType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_114), ('Errors', ASN1Set(rv=[dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_0_7), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('ParameterType', __sendRoutingInfo_Errors_val_ParameterType_3___12), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('errorCode', ('local', 71))]), dict([('errorCode', ('local', 72))])], rr=[], ev=None, er=[])), ('operationCode', ('local', 60))])], rr=[], ev=None, er=[])
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode._const_tab_at = None
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode._const_tab_id = 'operationCode'
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_argument = OPEN(name='argument', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['ArgumentType']), opt=True)
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_argument._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_argument._const_tab_at = ('..', 'opcode')
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_argument._const_tab_id = 'ArgumentType'
    _____TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke._cont = ASN1Dict([
        ('invokeId', ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_invokeId),
        ('linkedId', ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_linkedId),
        ('opcode', ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode),
        ('argument', ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_argument),
        ])
    _____TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke._ext = None
    _____TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult = SEQ(name='returnResult', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'ReturnResult')))
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_invokeId = CHOICE(name='invokeId', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_result = SEQ(name='result', mode=MODE_TYPE, opt=True)
    _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_result_opcode = CHOICE(name='opcode', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['operationCode']))
    _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_result_opcode._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_result_opcode._const_tab_at = None
    _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_result_opcode._const_tab_id = 'operationCode'
    _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_result_result = OPEN(name='result', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['ResultType']))
    _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_result_result._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_result_result._const_tab_at = ('..', 'opcode')
    _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_result_result._const_tab_id = 'ResultType'
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_result._cont = ASN1Dict([
        ('opcode', _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_result_opcode),
        ('result', _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_result_result),
        ])
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_result._ext = None
    _____TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult._cont = ASN1Dict([
        ('invokeId', ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_invokeId),
        ('result', ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_result),
        ])
    _____TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult._ext = None
    _____TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError = SEQ(name='returnError', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'ReturnError')))
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_invokeId = CHOICE(name='invokeId', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode = CHOICE(name='errcode', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'ERROR'), ['errorCode']))
    _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab = CLASS(name='_tab_ERROR', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_0 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnexpectedDataParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_1 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ResourceLimitationParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_2 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_3 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SystemFailureParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_4 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'FacilityNotSupParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_5 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'DataMissingParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_6 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'OR-NotAllowedParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_7 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_8 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoRoamingNbParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_9 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IncompatibleTerminalParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_10 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BusySubscriberParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_11 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ForwardingFailedParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_12 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NumberChangedParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_13 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'BearerServNotProvParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_14 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TeleservNotProvParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_15 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoSubscriberReplyParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_16 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarredParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_17 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CUG-RejectParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_18 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ForwardingViolationParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_19 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnidentifiedSubParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_20 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'NoGroupCallNbParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_21 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'OngoingGroupCallParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_22 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSubscriberParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_23 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalEquipmentParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_24 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedRequestingNetwork-Param')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_25 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedLCSClient-Param')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_26 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'PositionMethodFailure-Param')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_27 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownOrUnreachableLCSClient-Param')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_28 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATI-NotAllowedParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_29 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATM-NotAllowedParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_30 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'IllegalSS-OperationParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_31 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-SubscriptionViolationParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_32 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_33 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-IncompatibilityCause')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_34 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'InformationNotAvailableParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_35 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ATSI-NotAllowedParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_36 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SS-NotAvailableParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_38 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'MM-EventNotSupported-Param')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_40 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TargetCellOutsideGCA-Param')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_43 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'RoamingNotAllowedParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_44 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'TracingBufferFullParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_45 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SM-DeliveryFailureCause')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_46 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SubBusyForMT-SMS-Param')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_47 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberSM-Param')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_48 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'MessageWaitListFullParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_52 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ShortTermDenialParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_53 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'LongTermDenialParam')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_54 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'PW-RegistrationFailureCause')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_56 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-CommonDataTypes', 'NetworkResource')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_60 = BOOL(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-Errors', 'Mwd-Set')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_66 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CallBarringCause')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_67 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'CUG-RejectCause')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_73 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'RoamingNotAllowedCause')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_78 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'SM-DeliveryFailureCause')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_81 = OCT_STR(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-Status')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_82 = CHOICE(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-SS-DataTypes', 'SS-SubscriptionOption')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_83 = SEQ(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'SS-IncompatibilityCause')))
    ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_85 = ENUM(name='ParameterType', mode=MODE_TYPE, typeref=ASN1RefType(('MAPv2-ER-DataTypes', 'PW-RegistrationFailureCause')))
    _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab._val = ASN1Set(rv=[dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_0), ('errorCode', ('local', 36))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_1), ('errorCode', ('local', 51))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_2), ('errorCode', ('local', 1))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_3), ('errorCode', ('local', 34))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_4), ('errorCode', ('local', 21))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_5), ('errorCode', ('local', 35))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_6), ('errorCode', ('local', 48))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_7), ('errorCode', ('local', 27))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_8), ('errorCode', ('local', 39))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_9), ('errorCode', ('local', 28))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_10), ('errorCode', ('local', 45))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_11), ('errorCode', ('local', 47))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_12), ('errorCode', ('local', 44))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_13), ('errorCode', ('local', 10))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_14), ('errorCode', ('local', 11))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_15), ('errorCode', ('local', 46))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_16), ('errorCode', ('local', 13))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_17), ('errorCode', ('local', 15))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_18), ('errorCode', ('local', 14))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_19), ('errorCode', ('local', 5))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_20), ('errorCode', ('local', 50))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_21), ('errorCode', ('local', 22))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_22), ('errorCode', ('local', 9))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_23), ('errorCode', ('local', 12))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_24), ('errorCode', ('local', 52))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_25), ('errorCode', ('local', 53))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_26), ('errorCode', ('local', 54))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_27), ('errorCode', ('local', 58))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_28), ('errorCode', ('local', 49))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_29), ('errorCode', ('local', 61))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_30), ('errorCode', ('local', 16))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_31), ('errorCode', ('local', 19))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_32), ('errorCode', ('local', 17))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_33), ('errorCode', ('local', 20))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_34), ('errorCode', ('local', 62))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_35), ('errorCode', ('local', 60))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_36), ('errorCode', ('local', 18))]), dict([('errorCode', ('local', 7))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_38), ('errorCode', ('local', 59))]), dict([('errorCode', ('local', 25))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_40), ('errorCode', ('local', 42))]), dict([('errorCode', ('local', 3))]), dict([('errorCode', ('local', 26))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_43), ('errorCode', ('local', 8))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_44), ('errorCode', ('local', 40))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_45), ('errorCode', ('local', 32))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_46), ('errorCode', ('local', 31))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_47), ('errorCode', ('local', 6))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_48), ('errorCode', ('local', 33))]), dict([('errorCode', ('local', 38))]), dict([('errorCode', ('local', 43))]), dict([('errorCode', ('local', 71))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_52), ('errorCode', ('local', 29))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_53), ('errorCode', ('local', 30))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_54), ('errorCode', ('local', 37))]), dict([('errorCode', ('local', 72))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_56), ('errorCode', ('local', 34))]), dict([('errorCode', ('local', 35))]), dict([('errorCode', ('local', 36))]), dict([('errorCode', ('local', 21))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_60), ('errorCode', ('local', 27))]), dict([('errorCode', ('local', 39))]), dict([('errorCode', ('local', 1))]), dict([('errorCode', ('local', 44))]), dict([('errorCode', ('local', 10))]), dict([('errorCode', ('local', 11))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_66), ('errorCode', ('local', 13))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_67), ('errorCode', ('local', 15))]), dict([('errorCode', ('local', 14))]), dict([('errorCode', ('local', 5))]), dict([('errorCode', ('local', 2))]), dict([('errorCode', ('local', 23))]), dict([('errorCode', ('local', 24))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_73), ('errorCode', ('local', 8))]), dict([('errorCode', ('local', 40))]), dict([('errorCode', ('local', 9))]), dict([('errorCode', ('local', 12))]), dict([('errorCode', ('local', 31))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_78), ('errorCode', ('local', 32))]), dict([('errorCode', ('local', 33))]), dict([('errorCode', ('local', 16))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_81), ('errorCode', ('local', 17))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_82), ('errorCode', ('local', 19))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_83), ('errorCode', ('local', 20))]), dict([('errorCode', ('local', 18))]), dict([('ParameterType', ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_85), ('errorCode', ('local', 37))])], rr=[], ev=None, er=[])
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode._const_tab_at = None
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode._const_tab_id = 'errorCode'
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_parameter = OPEN(name='parameter', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'ERROR'), ['ParameterType']), opt=True)
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_parameter._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_parameter._const_tab_at = ('..', 'errcode')
    ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_parameter._const_tab_id = 'ParameterType'
    _____TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError._cont = ASN1Dict([
        ('invokeId', ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_invokeId),
        ('errcode', ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode),
        ('parameter', ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_parameter),
        ])
    _____TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError._ext = None
    _____TCAP_MAP_Message_unidirectional_components__item__basicROS_reject = SEQ(name='reject', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'Reject')))
    ____TCAP_MAP_Message_unidirectional_components__item__basicROS._cont = ASN1Dict([
        ('invoke', _____TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke),
        ('returnResult', _____TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult),
        ('returnError', _____TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError),
        ('reject', _____TCAP_MAP_Message_unidirectional_components__item__basicROS_reject),
        ])
    ____TCAP_MAP_Message_unidirectional_components__item__basicROS._ext = None
    ____TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast = SEQ(name='returnResultNotLast', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefChoiceComp(('Remote-Operations-Generic-ROS-PDUs', 'ROS'), ['returnResult']))
    _____TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_invokeId = CHOICE(name='invokeId', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    _____TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_result = SEQ(name='result', mode=MODE_TYPE, opt=True)
    ______TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_result_opcode = CHOICE(name='opcode', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['operationCode']))
    ______TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_result_opcode._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    ______TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_result_opcode._const_tab_at = None
    ______TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_result_opcode._const_tab_id = 'operationCode'
    ______TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_result_result = OPEN(name='result', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['ResultType']))
    ______TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_result_result._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    ______TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_result_result._const_tab_at = ('..', 'opcode')
    ______TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_result_result._const_tab_id = 'ResultType'
    _____TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_result._cont = ASN1Dict([
        ('opcode', ______TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_result_opcode),
        ('result', ______TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_result_result),
        ])
    _____TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_result._ext = None
    ____TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast._cont = ASN1Dict([
        ('invokeId', _____TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_invokeId),
        ('result', _____TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_result),
        ])
    ____TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast._ext = None
    ___TCAP_MAP_Message_unidirectional_components__item_._cont = ASN1Dict([
        ('basicROS', ____TCAP_MAP_Message_unidirectional_components__item__basicROS),
        ('returnResultNotLast', ____TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast),
        ])
    ___TCAP_MAP_Message_unidirectional_components__item_._ext = None
    __TCAP_MAP_Message_unidirectional_components._cont = ___TCAP_MAP_Message_unidirectional_components__item_
    __TCAP_MAP_Message_unidirectional_components._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    _TCAP_MAP_Message_unidirectional._cont = ASN1Dict([
        ('dialoguePortion', __TCAP_MAP_Message_unidirectional_dialoguePortion),
        ('components', __TCAP_MAP_Message_unidirectional_components),
        ])
    _TCAP_MAP_Message_unidirectional._ext = None
    _TCAP_MAP_Message_begin = SEQ(name='begin', mode=MODE_TYPE, tag=(2, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPMessages', 'Begin')))
    __TCAP_MAP_Message_begin_otid = OCT_STR(name='otid', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPMessages', 'OrigTransactionID')))
    __TCAP_MAP_Message_begin_dialoguePortion = SEQ(name='dialoguePortion', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPMessages', 'DialoguePortion')), opt=True)
    __TCAP_MAP_Message_begin_components = SEQ_OF(name='components', mode=MODE_TYPE, tag=(12, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPMessages', 'ComponentPortion')), opt=True)
    ___TCAP_MAP_Message_begin_components__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPMessages', 'Component')))
    ____TCAP_MAP_Message_begin_components__item__basicROS = CHOICE(name='basicROS', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'ROS')))
    _____TCAP_MAP_Message_begin_components__item__basicROS_invoke = SEQ(name='invoke', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'Invoke')))
    ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_invokeId = CHOICE(name='invokeId', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_invokeId._const_val = ASN1Set(rv=[('present', -128), ('present', -127), ('present', -126), ('present', -125), ('present', -124), ('present', -123), ('present', -122), ('present', -121), ('present', -120), ('present', -119), ('present', -118), ('present', -117), ('present', -116), ('present', -115), ('present', -114), ('present', -113), ('present', -112), ('present', -111), ('present', -110), ('present', -109), ('present', -108), ('present', -107), ('present', -106), ('present', -105), ('present', -104), ('present', -103), ('present', -102), ('present', -101), ('present', -100), ('present', -99), ('present', -98), ('present', -97), ('present', -96), ('present', -95), ('present', -94), ('present', -93), ('present', -92), ('present', -91), ('present', -90), ('present', -89), ('present', -88), ('present', -87), ('present', -86), ('present', -85), ('present', -84), ('present', -83), ('present', -82), ('present', -81), ('present', -80), ('present', -79), ('present', -78), ('present', -77), ('present', -76), ('present', -75), ('present', -74), ('present', -73), ('present', -72), ('present', -71), ('present', -70), ('present', -69), ('present', -68), ('present', -67), ('present', -66), ('present', -65), ('present', -64), ('present', -63), ('present', -62), ('present', -61), ('present', -60), ('present', -59), ('present', -58), ('present', -57), ('present', -56), ('present', -55), ('present', -54), ('present', -53), ('present', -52), ('present', -51), ('present', -50), ('present', -49), ('present', -48), ('present', -47), ('present', -46), ('present', -45), ('present', -44), ('present', -43), ('present', -42), ('present', -41), ('present', -40), ('present', -39), ('present', -38), ('present', -37), ('present', -36), ('present', -35), ('present', -34), ('present', -33), ('present', -32), ('present', -31), ('present', -30), ('present', -29), ('present', -28), ('present', -27), ('present', -26), ('present', -25), ('present', -24), ('present', -23), ('present', -22), ('present', -21), ('present', -20), ('present', -19), ('present', -18), ('present', -17), ('present', -16), ('present', -15), ('present', -14), ('present', -13), ('present', -12), ('present', -11), ('present', -10), ('present', -9), ('present', -8), ('present', -7), ('present', -6), ('present', -5), ('present', -4), ('present', -3), ('present', -2), ('present', -1), ('present', 0), ('present', 1), ('present', 2), ('present', 3), ('present', 4), ('present', 5), ('present', 6), ('present', 7), ('present', 8), ('present', 9), ('present', 10), ('present', 11), ('present', 12), ('present', 13), ('present', 14), ('present', 15), ('present', 16), ('present', 17), ('present', 18), ('present', 19), ('present', 20), ('present', 21), ('present', 22), ('present', 23), ('present', 24), ('present', 25), ('present', 26), ('present', 27), ('present', 28), ('present', 29), ('present', 30), ('present', 31), ('present', 32), ('present', 33), ('present', 34), ('present', 35), ('present', 36), ('present', 37), ('present', 38), ('present', 39), ('present', 40), ('present', 41), ('present', 42), ('present', 43), ('present', 44), ('present', 45), ('present', 46), ('present', 47), ('present', 48), ('present', 49), ('present', 50), ('present', 51), ('present', 52), ('present', 53), ('present', 54), ('present', 55), ('present', 56), ('present', 57), ('present', 58), ('present', 59), ('present', 60), ('present', 61), ('present', 62), ('present', 63), ('present', 64), ('present', 65), ('present', 66), ('present', 67), ('present', 68), ('present', 69), ('present', 70), ('present', 71), ('present', 72), ('present', 73), ('present', 74), ('present', 75), ('present', 76), ('present', 77), ('present', 78), ('present', 79), ('present', 80), ('present', 81), ('present', 82), ('present', 83), ('present', 84), ('present', 85), ('present', 86), ('present', 87), ('present', 88), ('present', 89), ('present', 90), ('present', 91), ('present', 92), ('present', 93), ('present', 94), ('present', 95), ('present', 96), ('present', 97), ('present', 98), ('present', 99), ('present', 100), ('present', 101), ('present', 102), ('present', 103), ('present', 104), ('present', 105), ('present', 106), ('present', 107), ('present', 108), ('present', 109), ('present', 110), ('present', 111), ('present', 112), ('present', 113), ('present', 114), ('present', 115), ('present', 116), ('present', 117), ('present', 118), ('present', 119), ('present', 120), ('present', 121), ('present', 122), ('present', 123), ('present', 124), ('present', 125), ('present', 126), ('present', 127)], rr=[], ev=None, er=[])
    ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_linkedId = CHOICE(name='linkedId', mode=MODE_TYPE, opt=True)
    _______TCAP_MAP_Message_begin_components__item__basicROS_invoke_linkedId_present = INT(name='present', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefChoiceComp(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId'), ['present']))
    _______TCAP_MAP_Message_begin_components__item__basicROS_invoke_linkedId_absent = NULL(name='absent', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_linkedId._cont = ASN1Dict([
        ('present', _______TCAP_MAP_Message_begin_components__item__basicROS_invoke_linkedId_present),
        ('absent', _______TCAP_MAP_Message_begin_components__item__basicROS_invoke_linkedId_absent),
        ])
    ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_linkedId._ext = None
    ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_opcode = CHOICE(name='opcode', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['operationCode']))
    ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_opcode._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_opcode._const_tab_at = None
    ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_opcode._const_tab_id = 'operationCode'
    ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_argument = OPEN(name='argument', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['ArgumentType']), opt=True)
    ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_argument._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_argument._const_tab_at = ('..', 'opcode')
    ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_argument._const_tab_id = 'ArgumentType'
    _____TCAP_MAP_Message_begin_components__item__basicROS_invoke._cont = ASN1Dict([
        ('invokeId', ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_invokeId),
        ('linkedId', ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_linkedId),
        ('opcode', ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_opcode),
        ('argument', ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_argument),
        ])
    _____TCAP_MAP_Message_begin_components__item__basicROS_invoke._ext = None
    _____TCAP_MAP_Message_begin_components__item__basicROS_returnResult = SEQ(name='returnResult', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'ReturnResult')))
    ______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_invokeId = CHOICE(name='invokeId', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    ______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_result = SEQ(name='result', mode=MODE_TYPE, opt=True)
    _______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_result_opcode = CHOICE(name='opcode', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['operationCode']))
    _______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_result_opcode._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    _______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_result_opcode._const_tab_at = None
    _______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_result_opcode._const_tab_id = 'operationCode'
    _______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_result_result = OPEN(name='result', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['ResultType']))
    _______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_result_result._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    _______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_result_result._const_tab_at = ('..', 'opcode')
    _______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_result_result._const_tab_id = 'ResultType'
    ______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_result._cont = ASN1Dict([
        ('opcode', _______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_result_opcode),
        ('result', _______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_result_result),
        ])
    ______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_result._ext = None
    _____TCAP_MAP_Message_begin_components__item__basicROS_returnResult._cont = ASN1Dict([
        ('invokeId', ______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_invokeId),
        ('result', ______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_result),
        ])
    _____TCAP_MAP_Message_begin_components__item__basicROS_returnResult._ext = None
    _____TCAP_MAP_Message_begin_components__item__basicROS_returnError = SEQ(name='returnError', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'ReturnError')))
    ______TCAP_MAP_Message_begin_components__item__basicROS_returnError_invokeId = CHOICE(name='invokeId', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    ______TCAP_MAP_Message_begin_components__item__basicROS_returnError_errcode = CHOICE(name='errcode', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'ERROR'), ['errorCode']))
    ______TCAP_MAP_Message_begin_components__item__basicROS_returnError_errcode._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab
    ______TCAP_MAP_Message_begin_components__item__basicROS_returnError_errcode._const_tab_at = None
    ______TCAP_MAP_Message_begin_components__item__basicROS_returnError_errcode._const_tab_id = 'errorCode'
    ______TCAP_MAP_Message_begin_components__item__basicROS_returnError_parameter = OPEN(name='parameter', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'ERROR'), ['ParameterType']), opt=True)
    ______TCAP_MAP_Message_begin_components__item__basicROS_returnError_parameter._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab
    ______TCAP_MAP_Message_begin_components__item__basicROS_returnError_parameter._const_tab_at = ('..', 'errcode')
    ______TCAP_MAP_Message_begin_components__item__basicROS_returnError_parameter._const_tab_id = 'ParameterType'
    _____TCAP_MAP_Message_begin_components__item__basicROS_returnError._cont = ASN1Dict([
        ('invokeId', ______TCAP_MAP_Message_begin_components__item__basicROS_returnError_invokeId),
        ('errcode', ______TCAP_MAP_Message_begin_components__item__basicROS_returnError_errcode),
        ('parameter', ______TCAP_MAP_Message_begin_components__item__basicROS_returnError_parameter),
        ])
    _____TCAP_MAP_Message_begin_components__item__basicROS_returnError._ext = None
    _____TCAP_MAP_Message_begin_components__item__basicROS_reject = SEQ(name='reject', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'Reject')))
    ____TCAP_MAP_Message_begin_components__item__basicROS._cont = ASN1Dict([
        ('invoke', _____TCAP_MAP_Message_begin_components__item__basicROS_invoke),
        ('returnResult', _____TCAP_MAP_Message_begin_components__item__basicROS_returnResult),
        ('returnError', _____TCAP_MAP_Message_begin_components__item__basicROS_returnError),
        ('reject', _____TCAP_MAP_Message_begin_components__item__basicROS_reject),
        ])
    ____TCAP_MAP_Message_begin_components__item__basicROS._ext = None
    ____TCAP_MAP_Message_begin_components__item__returnResultNotLast = SEQ(name='returnResultNotLast', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefChoiceComp(('Remote-Operations-Generic-ROS-PDUs', 'ROS'), ['returnResult']))
    _____TCAP_MAP_Message_begin_components__item__returnResultNotLast_invokeId = CHOICE(name='invokeId', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    _____TCAP_MAP_Message_begin_components__item__returnResultNotLast_result = SEQ(name='result', mode=MODE_TYPE, opt=True)
    ______TCAP_MAP_Message_begin_components__item__returnResultNotLast_result_opcode = CHOICE(name='opcode', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['operationCode']))
    ______TCAP_MAP_Message_begin_components__item__returnResultNotLast_result_opcode._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    ______TCAP_MAP_Message_begin_components__item__returnResultNotLast_result_opcode._const_tab_at = None
    ______TCAP_MAP_Message_begin_components__item__returnResultNotLast_result_opcode._const_tab_id = 'operationCode'
    ______TCAP_MAP_Message_begin_components__item__returnResultNotLast_result_result = OPEN(name='result', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['ResultType']))
    ______TCAP_MAP_Message_begin_components__item__returnResultNotLast_result_result._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    ______TCAP_MAP_Message_begin_components__item__returnResultNotLast_result_result._const_tab_at = ('..', 'opcode')
    ______TCAP_MAP_Message_begin_components__item__returnResultNotLast_result_result._const_tab_id = 'ResultType'
    _____TCAP_MAP_Message_begin_components__item__returnResultNotLast_result._cont = ASN1Dict([
        ('opcode', ______TCAP_MAP_Message_begin_components__item__returnResultNotLast_result_opcode),
        ('result', ______TCAP_MAP_Message_begin_components__item__returnResultNotLast_result_result),
        ])
    _____TCAP_MAP_Message_begin_components__item__returnResultNotLast_result._ext = None
    ____TCAP_MAP_Message_begin_components__item__returnResultNotLast._cont = ASN1Dict([
        ('invokeId', _____TCAP_MAP_Message_begin_components__item__returnResultNotLast_invokeId),
        ('result', _____TCAP_MAP_Message_begin_components__item__returnResultNotLast_result),
        ])
    ____TCAP_MAP_Message_begin_components__item__returnResultNotLast._ext = None
    ___TCAP_MAP_Message_begin_components__item_._cont = ASN1Dict([
        ('basicROS', ____TCAP_MAP_Message_begin_components__item__basicROS),
        ('returnResultNotLast', ____TCAP_MAP_Message_begin_components__item__returnResultNotLast),
        ])
    ___TCAP_MAP_Message_begin_components__item_._ext = None
    __TCAP_MAP_Message_begin_components._cont = ___TCAP_MAP_Message_begin_components__item_
    __TCAP_MAP_Message_begin_components._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    _TCAP_MAP_Message_begin._cont = ASN1Dict([
        ('otid', __TCAP_MAP_Message_begin_otid),
        ('dialoguePortion', __TCAP_MAP_Message_begin_dialoguePortion),
        ('components', __TCAP_MAP_Message_begin_components),
        ])
    _TCAP_MAP_Message_begin._ext = None
    _TCAP_MAP_Message_end = SEQ(name='end', mode=MODE_TYPE, tag=(4, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPMessages', 'End')))
    __TCAP_MAP_Message_end_dtid = OCT_STR(name='dtid', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPMessages', 'DestTransactionID')))
    __TCAP_MAP_Message_end_dialoguePortion = SEQ(name='dialoguePortion', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPMessages', 'DialoguePortion')), opt=True)
    __TCAP_MAP_Message_end_components = SEQ_OF(name='components', mode=MODE_TYPE, tag=(12, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPMessages', 'ComponentPortion')), opt=True)
    ___TCAP_MAP_Message_end_components__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPMessages', 'Component')))
    ____TCAP_MAP_Message_end_components__item__basicROS = CHOICE(name='basicROS', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'ROS')))
    _____TCAP_MAP_Message_end_components__item__basicROS_invoke = SEQ(name='invoke', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'Invoke')))
    ______TCAP_MAP_Message_end_components__item__basicROS_invoke_invokeId = CHOICE(name='invokeId', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    ______TCAP_MAP_Message_end_components__item__basicROS_invoke_invokeId._const_val = ASN1Set(rv=[('present', -128), ('present', -127), ('present', -126), ('present', -125), ('present', -124), ('present', -123), ('present', -122), ('present', -121), ('present', -120), ('present', -119), ('present', -118), ('present', -117), ('present', -116), ('present', -115), ('present', -114), ('present', -113), ('present', -112), ('present', -111), ('present', -110), ('present', -109), ('present', -108), ('present', -107), ('present', -106), ('present', -105), ('present', -104), ('present', -103), ('present', -102), ('present', -101), ('present', -100), ('present', -99), ('present', -98), ('present', -97), ('present', -96), ('present', -95), ('present', -94), ('present', -93), ('present', -92), ('present', -91), ('present', -90), ('present', -89), ('present', -88), ('present', -87), ('present', -86), ('present', -85), ('present', -84), ('present', -83), ('present', -82), ('present', -81), ('present', -80), ('present', -79), ('present', -78), ('present', -77), ('present', -76), ('present', -75), ('present', -74), ('present', -73), ('present', -72), ('present', -71), ('present', -70), ('present', -69), ('present', -68), ('present', -67), ('present', -66), ('present', -65), ('present', -64), ('present', -63), ('present', -62), ('present', -61), ('present', -60), ('present', -59), ('present', -58), ('present', -57), ('present', -56), ('present', -55), ('present', -54), ('present', -53), ('present', -52), ('present', -51), ('present', -50), ('present', -49), ('present', -48), ('present', -47), ('present', -46), ('present', -45), ('present', -44), ('present', -43), ('present', -42), ('present', -41), ('present', -40), ('present', -39), ('present', -38), ('present', -37), ('present', -36), ('present', -35), ('present', -34), ('present', -33), ('present', -32), ('present', -31), ('present', -30), ('present', -29), ('present', -28), ('present', -27), ('present', -26), ('present', -25), ('present', -24), ('present', -23), ('present', -22), ('present', -21), ('present', -20), ('present', -19), ('present', -18), ('present', -17), ('present', -16), ('present', -15), ('present', -14), ('present', -13), ('present', -12), ('present', -11), ('present', -10), ('present', -9), ('present', -8), ('present', -7), ('present', -6), ('present', -5), ('present', -4), ('present', -3), ('present', -2), ('present', -1), ('present', 0), ('present', 1), ('present', 2), ('present', 3), ('present', 4), ('present', 5), ('present', 6), ('present', 7), ('present', 8), ('present', 9), ('present', 10), ('present', 11), ('present', 12), ('present', 13), ('present', 14), ('present', 15), ('present', 16), ('present', 17), ('present', 18), ('present', 19), ('present', 20), ('present', 21), ('present', 22), ('present', 23), ('present', 24), ('present', 25), ('present', 26), ('present', 27), ('present', 28), ('present', 29), ('present', 30), ('present', 31), ('present', 32), ('present', 33), ('present', 34), ('present', 35), ('present', 36), ('present', 37), ('present', 38), ('present', 39), ('present', 40), ('present', 41), ('present', 42), ('present', 43), ('present', 44), ('present', 45), ('present', 46), ('present', 47), ('present', 48), ('present', 49), ('present', 50), ('present', 51), ('present', 52), ('present', 53), ('present', 54), ('present', 55), ('present', 56), ('present', 57), ('present', 58), ('present', 59), ('present', 60), ('present', 61), ('present', 62), ('present', 63), ('present', 64), ('present', 65), ('present', 66), ('present', 67), ('present', 68), ('present', 69), ('present', 70), ('present', 71), ('present', 72), ('present', 73), ('present', 74), ('present', 75), ('present', 76), ('present', 77), ('present', 78), ('present', 79), ('present', 80), ('present', 81), ('present', 82), ('present', 83), ('present', 84), ('present', 85), ('present', 86), ('present', 87), ('present', 88), ('present', 89), ('present', 90), ('present', 91), ('present', 92), ('present', 93), ('present', 94), ('present', 95), ('present', 96), ('present', 97), ('present', 98), ('present', 99), ('present', 100), ('present', 101), ('present', 102), ('present', 103), ('present', 104), ('present', 105), ('present', 106), ('present', 107), ('present', 108), ('present', 109), ('present', 110), ('present', 111), ('present', 112), ('present', 113), ('present', 114), ('present', 115), ('present', 116), ('present', 117), ('present', 118), ('present', 119), ('present', 120), ('present', 121), ('present', 122), ('present', 123), ('present', 124), ('present', 125), ('present', 126), ('present', 127)], rr=[], ev=None, er=[])
    ______TCAP_MAP_Message_end_components__item__basicROS_invoke_linkedId = CHOICE(name='linkedId', mode=MODE_TYPE, opt=True)
    _______TCAP_MAP_Message_end_components__item__basicROS_invoke_linkedId_present = INT(name='present', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefChoiceComp(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId'), ['present']))
    _______TCAP_MAP_Message_end_components__item__basicROS_invoke_linkedId_absent = NULL(name='absent', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______TCAP_MAP_Message_end_components__item__basicROS_invoke_linkedId._cont = ASN1Dict([
        ('present', _______TCAP_MAP_Message_end_components__item__basicROS_invoke_linkedId_present),
        ('absent', _______TCAP_MAP_Message_end_components__item__basicROS_invoke_linkedId_absent),
        ])
    ______TCAP_MAP_Message_end_components__item__basicROS_invoke_linkedId._ext = None
    ______TCAP_MAP_Message_end_components__item__basicROS_invoke_opcode = CHOICE(name='opcode', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['operationCode']))
    ______TCAP_MAP_Message_end_components__item__basicROS_invoke_opcode._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    ______TCAP_MAP_Message_end_components__item__basicROS_invoke_opcode._const_tab_at = None
    ______TCAP_MAP_Message_end_components__item__basicROS_invoke_opcode._const_tab_id = 'operationCode'
    ______TCAP_MAP_Message_end_components__item__basicROS_invoke_argument = OPEN(name='argument', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['ArgumentType']), opt=True)
    ______TCAP_MAP_Message_end_components__item__basicROS_invoke_argument._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    ______TCAP_MAP_Message_end_components__item__basicROS_invoke_argument._const_tab_at = ('..', 'opcode')
    ______TCAP_MAP_Message_end_components__item__basicROS_invoke_argument._const_tab_id = 'ArgumentType'
    _____TCAP_MAP_Message_end_components__item__basicROS_invoke._cont = ASN1Dict([
        ('invokeId', ______TCAP_MAP_Message_end_components__item__basicROS_invoke_invokeId),
        ('linkedId', ______TCAP_MAP_Message_end_components__item__basicROS_invoke_linkedId),
        ('opcode', ______TCAP_MAP_Message_end_components__item__basicROS_invoke_opcode),
        ('argument', ______TCAP_MAP_Message_end_components__item__basicROS_invoke_argument),
        ])
    _____TCAP_MAP_Message_end_components__item__basicROS_invoke._ext = None
    _____TCAP_MAP_Message_end_components__item__basicROS_returnResult = SEQ(name='returnResult', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'ReturnResult')))
    ______TCAP_MAP_Message_end_components__item__basicROS_returnResult_invokeId = CHOICE(name='invokeId', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    ______TCAP_MAP_Message_end_components__item__basicROS_returnResult_result = SEQ(name='result', mode=MODE_TYPE, opt=True)
    _______TCAP_MAP_Message_end_components__item__basicROS_returnResult_result_opcode = CHOICE(name='opcode', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['operationCode']))
    _______TCAP_MAP_Message_end_components__item__basicROS_returnResult_result_opcode._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    _______TCAP_MAP_Message_end_components__item__basicROS_returnResult_result_opcode._const_tab_at = None
    _______TCAP_MAP_Message_end_components__item__basicROS_returnResult_result_opcode._const_tab_id = 'operationCode'
    _______TCAP_MAP_Message_end_components__item__basicROS_returnResult_result_result = OPEN(name='result', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['ResultType']))
    _______TCAP_MAP_Message_end_components__item__basicROS_returnResult_result_result._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    _______TCAP_MAP_Message_end_components__item__basicROS_returnResult_result_result._const_tab_at = ('..', 'opcode')
    _______TCAP_MAP_Message_end_components__item__basicROS_returnResult_result_result._const_tab_id = 'ResultType'
    ______TCAP_MAP_Message_end_components__item__basicROS_returnResult_result._cont = ASN1Dict([
        ('opcode', _______TCAP_MAP_Message_end_components__item__basicROS_returnResult_result_opcode),
        ('result', _______TCAP_MAP_Message_end_components__item__basicROS_returnResult_result_result),
        ])
    ______TCAP_MAP_Message_end_components__item__basicROS_returnResult_result._ext = None
    _____TCAP_MAP_Message_end_components__item__basicROS_returnResult._cont = ASN1Dict([
        ('invokeId', ______TCAP_MAP_Message_end_components__item__basicROS_returnResult_invokeId),
        ('result', ______TCAP_MAP_Message_end_components__item__basicROS_returnResult_result),
        ])
    _____TCAP_MAP_Message_end_components__item__basicROS_returnResult._ext = None
    _____TCAP_MAP_Message_end_components__item__basicROS_returnError = SEQ(name='returnError', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'ReturnError')))
    ______TCAP_MAP_Message_end_components__item__basicROS_returnError_invokeId = CHOICE(name='invokeId', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    ______TCAP_MAP_Message_end_components__item__basicROS_returnError_errcode = CHOICE(name='errcode', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'ERROR'), ['errorCode']))
    ______TCAP_MAP_Message_end_components__item__basicROS_returnError_errcode._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab
    ______TCAP_MAP_Message_end_components__item__basicROS_returnError_errcode._const_tab_at = None
    ______TCAP_MAP_Message_end_components__item__basicROS_returnError_errcode._const_tab_id = 'errorCode'
    ______TCAP_MAP_Message_end_components__item__basicROS_returnError_parameter = OPEN(name='parameter', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'ERROR'), ['ParameterType']), opt=True)
    ______TCAP_MAP_Message_end_components__item__basicROS_returnError_parameter._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab
    ______TCAP_MAP_Message_end_components__item__basicROS_returnError_parameter._const_tab_at = ('..', 'errcode')
    ______TCAP_MAP_Message_end_components__item__basicROS_returnError_parameter._const_tab_id = 'ParameterType'
    _____TCAP_MAP_Message_end_components__item__basicROS_returnError._cont = ASN1Dict([
        ('invokeId', ______TCAP_MAP_Message_end_components__item__basicROS_returnError_invokeId),
        ('errcode', ______TCAP_MAP_Message_end_components__item__basicROS_returnError_errcode),
        ('parameter', ______TCAP_MAP_Message_end_components__item__basicROS_returnError_parameter),
        ])
    _____TCAP_MAP_Message_end_components__item__basicROS_returnError._ext = None
    _____TCAP_MAP_Message_end_components__item__basicROS_reject = SEQ(name='reject', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'Reject')))
    ____TCAP_MAP_Message_end_components__item__basicROS._cont = ASN1Dict([
        ('invoke', _____TCAP_MAP_Message_end_components__item__basicROS_invoke),
        ('returnResult', _____TCAP_MAP_Message_end_components__item__basicROS_returnResult),
        ('returnError', _____TCAP_MAP_Message_end_components__item__basicROS_returnError),
        ('reject', _____TCAP_MAP_Message_end_components__item__basicROS_reject),
        ])
    ____TCAP_MAP_Message_end_components__item__basicROS._ext = None
    ____TCAP_MAP_Message_end_components__item__returnResultNotLast = SEQ(name='returnResultNotLast', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefChoiceComp(('Remote-Operations-Generic-ROS-PDUs', 'ROS'), ['returnResult']))
    _____TCAP_MAP_Message_end_components__item__returnResultNotLast_invokeId = CHOICE(name='invokeId', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    _____TCAP_MAP_Message_end_components__item__returnResultNotLast_result = SEQ(name='result', mode=MODE_TYPE, opt=True)
    ______TCAP_MAP_Message_end_components__item__returnResultNotLast_result_opcode = CHOICE(name='opcode', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['operationCode']))
    ______TCAP_MAP_Message_end_components__item__returnResultNotLast_result_opcode._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    ______TCAP_MAP_Message_end_components__item__returnResultNotLast_result_opcode._const_tab_at = None
    ______TCAP_MAP_Message_end_components__item__returnResultNotLast_result_opcode._const_tab_id = 'operationCode'
    ______TCAP_MAP_Message_end_components__item__returnResultNotLast_result_result = OPEN(name='result', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['ResultType']))
    ______TCAP_MAP_Message_end_components__item__returnResultNotLast_result_result._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    ______TCAP_MAP_Message_end_components__item__returnResultNotLast_result_result._const_tab_at = ('..', 'opcode')
    ______TCAP_MAP_Message_end_components__item__returnResultNotLast_result_result._const_tab_id = 'ResultType'
    _____TCAP_MAP_Message_end_components__item__returnResultNotLast_result._cont = ASN1Dict([
        ('opcode', ______TCAP_MAP_Message_end_components__item__returnResultNotLast_result_opcode),
        ('result', ______TCAP_MAP_Message_end_components__item__returnResultNotLast_result_result),
        ])
    _____TCAP_MAP_Message_end_components__item__returnResultNotLast_result._ext = None
    ____TCAP_MAP_Message_end_components__item__returnResultNotLast._cont = ASN1Dict([
        ('invokeId', _____TCAP_MAP_Message_end_components__item__returnResultNotLast_invokeId),
        ('result', _____TCAP_MAP_Message_end_components__item__returnResultNotLast_result),
        ])
    ____TCAP_MAP_Message_end_components__item__returnResultNotLast._ext = None
    ___TCAP_MAP_Message_end_components__item_._cont = ASN1Dict([
        ('basicROS', ____TCAP_MAP_Message_end_components__item__basicROS),
        ('returnResultNotLast', ____TCAP_MAP_Message_end_components__item__returnResultNotLast),
        ])
    ___TCAP_MAP_Message_end_components__item_._ext = None
    __TCAP_MAP_Message_end_components._cont = ___TCAP_MAP_Message_end_components__item_
    __TCAP_MAP_Message_end_components._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    _TCAP_MAP_Message_end._cont = ASN1Dict([
        ('dtid', __TCAP_MAP_Message_end_dtid),
        ('dialoguePortion', __TCAP_MAP_Message_end_dialoguePortion),
        ('components', __TCAP_MAP_Message_end_components),
        ])
    _TCAP_MAP_Message_end._ext = None
    _TCAP_MAP_Message_continue_ = SEQ(name='continue', mode=MODE_TYPE, tag=(5, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPMessages', 'Continue')))
    __TCAP_MAP_Message_continue__otid = OCT_STR(name='otid', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPMessages', 'OrigTransactionID')))
    __TCAP_MAP_Message_continue__dtid = OCT_STR(name='dtid', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPMessages', 'DestTransactionID')))
    __TCAP_MAP_Message_continue__dialoguePortion = SEQ(name='dialoguePortion', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPMessages', 'DialoguePortion')), opt=True)
    __TCAP_MAP_Message_continue__components = SEQ_OF(name='components', mode=MODE_TYPE, tag=(12, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPMessages', 'ComponentPortion')), opt=True)
    ___TCAP_MAP_Message_continue__components__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPMessages', 'Component')))
    ____TCAP_MAP_Message_continue__components__item__basicROS = CHOICE(name='basicROS', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'ROS')))
    _____TCAP_MAP_Message_continue__components__item__basicROS_invoke = SEQ(name='invoke', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'Invoke')))
    ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_invokeId = CHOICE(name='invokeId', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_invokeId._const_val = ASN1Set(rv=[('present', -128), ('present', -127), ('present', -126), ('present', -125), ('present', -124), ('present', -123), ('present', -122), ('present', -121), ('present', -120), ('present', -119), ('present', -118), ('present', -117), ('present', -116), ('present', -115), ('present', -114), ('present', -113), ('present', -112), ('present', -111), ('present', -110), ('present', -109), ('present', -108), ('present', -107), ('present', -106), ('present', -105), ('present', -104), ('present', -103), ('present', -102), ('present', -101), ('present', -100), ('present', -99), ('present', -98), ('present', -97), ('present', -96), ('present', -95), ('present', -94), ('present', -93), ('present', -92), ('present', -91), ('present', -90), ('present', -89), ('present', -88), ('present', -87), ('present', -86), ('present', -85), ('present', -84), ('present', -83), ('present', -82), ('present', -81), ('present', -80), ('present', -79), ('present', -78), ('present', -77), ('present', -76), ('present', -75), ('present', -74), ('present', -73), ('present', -72), ('present', -71), ('present', -70), ('present', -69), ('present', -68), ('present', -67), ('present', -66), ('present', -65), ('present', -64), ('present', -63), ('present', -62), ('present', -61), ('present', -60), ('present', -59), ('present', -58), ('present', -57), ('present', -56), ('present', -55), ('present', -54), ('present', -53), ('present', -52), ('present', -51), ('present', -50), ('present', -49), ('present', -48), ('present', -47), ('present', -46), ('present', -45), ('present', -44), ('present', -43), ('present', -42), ('present', -41), ('present', -40), ('present', -39), ('present', -38), ('present', -37), ('present', -36), ('present', -35), ('present', -34), ('present', -33), ('present', -32), ('present', -31), ('present', -30), ('present', -29), ('present', -28), ('present', -27), ('present', -26), ('present', -25), ('present', -24), ('present', -23), ('present', -22), ('present', -21), ('present', -20), ('present', -19), ('present', -18), ('present', -17), ('present', -16), ('present', -15), ('present', -14), ('present', -13), ('present', -12), ('present', -11), ('present', -10), ('present', -9), ('present', -8), ('present', -7), ('present', -6), ('present', -5), ('present', -4), ('present', -3), ('present', -2), ('present', -1), ('present', 0), ('present', 1), ('present', 2), ('present', 3), ('present', 4), ('present', 5), ('present', 6), ('present', 7), ('present', 8), ('present', 9), ('present', 10), ('present', 11), ('present', 12), ('present', 13), ('present', 14), ('present', 15), ('present', 16), ('present', 17), ('present', 18), ('present', 19), ('present', 20), ('present', 21), ('present', 22), ('present', 23), ('present', 24), ('present', 25), ('present', 26), ('present', 27), ('present', 28), ('present', 29), ('present', 30), ('present', 31), ('present', 32), ('present', 33), ('present', 34), ('present', 35), ('present', 36), ('present', 37), ('present', 38), ('present', 39), ('present', 40), ('present', 41), ('present', 42), ('present', 43), ('present', 44), ('present', 45), ('present', 46), ('present', 47), ('present', 48), ('present', 49), ('present', 50), ('present', 51), ('present', 52), ('present', 53), ('present', 54), ('present', 55), ('present', 56), ('present', 57), ('present', 58), ('present', 59), ('present', 60), ('present', 61), ('present', 62), ('present', 63), ('present', 64), ('present', 65), ('present', 66), ('present', 67), ('present', 68), ('present', 69), ('present', 70), ('present', 71), ('present', 72), ('present', 73), ('present', 74), ('present', 75), ('present', 76), ('present', 77), ('present', 78), ('present', 79), ('present', 80), ('present', 81), ('present', 82), ('present', 83), ('present', 84), ('present', 85), ('present', 86), ('present', 87), ('present', 88), ('present', 89), ('present', 90), ('present', 91), ('present', 92), ('present', 93), ('present', 94), ('present', 95), ('present', 96), ('present', 97), ('present', 98), ('present', 99), ('present', 100), ('present', 101), ('present', 102), ('present', 103), ('present', 104), ('present', 105), ('present', 106), ('present', 107), ('present', 108), ('present', 109), ('present', 110), ('present', 111), ('present', 112), ('present', 113), ('present', 114), ('present', 115), ('present', 116), ('present', 117), ('present', 118), ('present', 119), ('present', 120), ('present', 121), ('present', 122), ('present', 123), ('present', 124), ('present', 125), ('present', 126), ('present', 127)], rr=[], ev=None, er=[])
    ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_linkedId = CHOICE(name='linkedId', mode=MODE_TYPE, opt=True)
    _______TCAP_MAP_Message_continue__components__item__basicROS_invoke_linkedId_present = INT(name='present', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefChoiceComp(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId'), ['present']))
    _______TCAP_MAP_Message_continue__components__item__basicROS_invoke_linkedId_absent = NULL(name='absent', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_linkedId._cont = ASN1Dict([
        ('present', _______TCAP_MAP_Message_continue__components__item__basicROS_invoke_linkedId_present),
        ('absent', _______TCAP_MAP_Message_continue__components__item__basicROS_invoke_linkedId_absent),
        ])
    ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_linkedId._ext = None
    ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_opcode = CHOICE(name='opcode', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['operationCode']))
    ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_opcode._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_opcode._const_tab_at = None
    ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_opcode._const_tab_id = 'operationCode'
    ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_argument = OPEN(name='argument', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['ArgumentType']), opt=True)
    ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_argument._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_argument._const_tab_at = ('..', 'opcode')
    ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_argument._const_tab_id = 'ArgumentType'
    _____TCAP_MAP_Message_continue__components__item__basicROS_invoke._cont = ASN1Dict([
        ('invokeId', ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_invokeId),
        ('linkedId', ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_linkedId),
        ('opcode', ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_opcode),
        ('argument', ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_argument),
        ])
    _____TCAP_MAP_Message_continue__components__item__basicROS_invoke._ext = None
    _____TCAP_MAP_Message_continue__components__item__basicROS_returnResult = SEQ(name='returnResult', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'ReturnResult')))
    ______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_invokeId = CHOICE(name='invokeId', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    ______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_result = SEQ(name='result', mode=MODE_TYPE, opt=True)
    _______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_result_opcode = CHOICE(name='opcode', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['operationCode']))
    _______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_result_opcode._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    _______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_result_opcode._const_tab_at = None
    _______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_result_opcode._const_tab_id = 'operationCode'
    _______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_result_result = OPEN(name='result', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['ResultType']))
    _______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_result_result._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    _______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_result_result._const_tab_at = ('..', 'opcode')
    _______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_result_result._const_tab_id = 'ResultType'
    ______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_result._cont = ASN1Dict([
        ('opcode', _______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_result_opcode),
        ('result', _______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_result_result),
        ])
    ______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_result._ext = None
    _____TCAP_MAP_Message_continue__components__item__basicROS_returnResult._cont = ASN1Dict([
        ('invokeId', ______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_invokeId),
        ('result', ______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_result),
        ])
    _____TCAP_MAP_Message_continue__components__item__basicROS_returnResult._ext = None
    _____TCAP_MAP_Message_continue__components__item__basicROS_returnError = SEQ(name='returnError', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'ReturnError')))
    ______TCAP_MAP_Message_continue__components__item__basicROS_returnError_invokeId = CHOICE(name='invokeId', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    ______TCAP_MAP_Message_continue__components__item__basicROS_returnError_errcode = CHOICE(name='errcode', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'ERROR'), ['errorCode']))
    ______TCAP_MAP_Message_continue__components__item__basicROS_returnError_errcode._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab
    ______TCAP_MAP_Message_continue__components__item__basicROS_returnError_errcode._const_tab_at = None
    ______TCAP_MAP_Message_continue__components__item__basicROS_returnError_errcode._const_tab_id = 'errorCode'
    ______TCAP_MAP_Message_continue__components__item__basicROS_returnError_parameter = OPEN(name='parameter', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'ERROR'), ['ParameterType']), opt=True)
    ______TCAP_MAP_Message_continue__components__item__basicROS_returnError_parameter._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab
    ______TCAP_MAP_Message_continue__components__item__basicROS_returnError_parameter._const_tab_at = ('..', 'errcode')
    ______TCAP_MAP_Message_continue__components__item__basicROS_returnError_parameter._const_tab_id = 'ParameterType'
    _____TCAP_MAP_Message_continue__components__item__basicROS_returnError._cont = ASN1Dict([
        ('invokeId', ______TCAP_MAP_Message_continue__components__item__basicROS_returnError_invokeId),
        ('errcode', ______TCAP_MAP_Message_continue__components__item__basicROS_returnError_errcode),
        ('parameter', ______TCAP_MAP_Message_continue__components__item__basicROS_returnError_parameter),
        ])
    _____TCAP_MAP_Message_continue__components__item__basicROS_returnError._ext = None
    _____TCAP_MAP_Message_continue__components__item__basicROS_reject = SEQ(name='reject', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'Reject')))
    ____TCAP_MAP_Message_continue__components__item__basicROS._cont = ASN1Dict([
        ('invoke', _____TCAP_MAP_Message_continue__components__item__basicROS_invoke),
        ('returnResult', _____TCAP_MAP_Message_continue__components__item__basicROS_returnResult),
        ('returnError', _____TCAP_MAP_Message_continue__components__item__basicROS_returnError),
        ('reject', _____TCAP_MAP_Message_continue__components__item__basicROS_reject),
        ])
    ____TCAP_MAP_Message_continue__components__item__basicROS._ext = None
    ____TCAP_MAP_Message_continue__components__item__returnResultNotLast = SEQ(name='returnResultNotLast', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefChoiceComp(('Remote-Operations-Generic-ROS-PDUs', 'ROS'), ['returnResult']))
    _____TCAP_MAP_Message_continue__components__item__returnResultNotLast_invokeId = CHOICE(name='invokeId', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    _____TCAP_MAP_Message_continue__components__item__returnResultNotLast_result = SEQ(name='result', mode=MODE_TYPE, opt=True)
    ______TCAP_MAP_Message_continue__components__item__returnResultNotLast_result_opcode = CHOICE(name='opcode', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['operationCode']))
    ______TCAP_MAP_Message_continue__components__item__returnResultNotLast_result_opcode._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    ______TCAP_MAP_Message_continue__components__item__returnResultNotLast_result_opcode._const_tab_at = None
    ______TCAP_MAP_Message_continue__components__item__returnResultNotLast_result_opcode._const_tab_id = 'operationCode'
    ______TCAP_MAP_Message_continue__components__item__returnResultNotLast_result_result = OPEN(name='result', mode=MODE_TYPE, typeref=ASN1RefClassField(('Remote-Operations-Information-Objects', 'OPERATION'), ['ResultType']))
    ______TCAP_MAP_Message_continue__components__item__returnResultNotLast_result_result._const_tab = _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab
    ______TCAP_MAP_Message_continue__components__item__returnResultNotLast_result_result._const_tab_at = ('..', 'opcode')
    ______TCAP_MAP_Message_continue__components__item__returnResultNotLast_result_result._const_tab_id = 'ResultType'
    _____TCAP_MAP_Message_continue__components__item__returnResultNotLast_result._cont = ASN1Dict([
        ('opcode', ______TCAP_MAP_Message_continue__components__item__returnResultNotLast_result_opcode),
        ('result', ______TCAP_MAP_Message_continue__components__item__returnResultNotLast_result_result),
        ])
    _____TCAP_MAP_Message_continue__components__item__returnResultNotLast_result._ext = None
    ____TCAP_MAP_Message_continue__components__item__returnResultNotLast._cont = ASN1Dict([
        ('invokeId', _____TCAP_MAP_Message_continue__components__item__returnResultNotLast_invokeId),
        ('result', _____TCAP_MAP_Message_continue__components__item__returnResultNotLast_result),
        ])
    ____TCAP_MAP_Message_continue__components__item__returnResultNotLast._ext = None
    ___TCAP_MAP_Message_continue__components__item_._cont = ASN1Dict([
        ('basicROS', ____TCAP_MAP_Message_continue__components__item__basicROS),
        ('returnResultNotLast', ____TCAP_MAP_Message_continue__components__item__returnResultNotLast),
        ])
    ___TCAP_MAP_Message_continue__components__item_._ext = None
    __TCAP_MAP_Message_continue__components._cont = ___TCAP_MAP_Message_continue__components__item_
    __TCAP_MAP_Message_continue__components._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    _TCAP_MAP_Message_continue_._cont = ASN1Dict([
        ('otid', __TCAP_MAP_Message_continue__otid),
        ('dtid', __TCAP_MAP_Message_continue__dtid),
        ('dialoguePortion', __TCAP_MAP_Message_continue__dialoguePortion),
        ('components', __TCAP_MAP_Message_continue__components),
        ])
    _TCAP_MAP_Message_continue_._ext = None
    _TCAP_MAP_Message_abort = SEQ(name='abort', mode=MODE_TYPE, tag=(7, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('TCAPMessages', 'Abort')))
    TCAP_MAP_Message._cont = ASN1Dict([
        ('unidirectional', _TCAP_MAP_Message_unidirectional),
        ('begin', _TCAP_MAP_Message_begin),
        ('end', _TCAP_MAP_Message_end),
        ('continue', _TCAP_MAP_Message_continue_),
        ('abort', _TCAP_MAP_Message_abort),
        ])
    TCAP_MAP_Message._ext = None
    
    _all_ = [
        __TCAP_MAP_Message_unidirectional_dialoguePortion,
        ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_invokeId,
        _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_linkedId_present,
        _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_linkedId_absent,
        ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_linkedId,
        _______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_0,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_0,
        __sendRoutingInfo_Errors_val_ParameterType_0,
        __sendRoutingInfo_Errors_val_ParameterType_1,
        __sendRoutingInfo_Errors_val_ParameterType_2,
        __sendRoutingInfo_Errors_val_ParameterType_3,
        __sendRoutingInfo_Errors_val_ParameterType_4,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_1,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_1,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_2,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_2,
        __sendRoutingInfo_Errors_val_ParameterType_0_0,
        __sendRoutingInfo_Errors_val_ParameterType_1_0,
        __sendRoutingInfo_Errors_val_ParameterType_2_0,
        __sendRoutingInfo_Errors_val_ParameterType_3_0,
        __sendRoutingInfo_Errors_val_ParameterType_4_0,
        __sendRoutingInfo_Errors_val_ParameterType_5,
        __sendRoutingInfo_Errors_val_ParameterType_6,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_3,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_3,
        __sendRoutingInfo_Errors_val_ParameterType_1_1,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_4,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_4,
        __sendRoutingInfo_Errors_val_ParameterType_2_1,
        __sendRoutingInfo_Errors_val_ParameterType_3_1,
        __sendRoutingInfo_Errors_val_ParameterType_4_1,
        __sendRoutingInfo_Errors_val_ParameterType_5_0,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_5,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_5,
        __sendRoutingInfo_Errors_val_ParameterType_0_1,
        __sendRoutingInfo_Errors_val_ParameterType_1_2,
        __sendRoutingInfo_Errors_val_ParameterType_3_2,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_6,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_6,
        __sendRoutingInfo_Errors_val_ParameterType_5_1,
        __sendRoutingInfo_Errors_val_ParameterType_6_0,
        __sendRoutingInfo_Errors_val_ParameterType_7,
        __sendRoutingInfo_Errors_val_ParameterType_8,
        __sendRoutingInfo_Errors_val_ParameterType_9,
        __sendRoutingInfo_Errors_val_ParameterType_10,
        __sendRoutingInfo_Errors_val_ParameterType_11,
        __sendRoutingInfo_Errors_val_ParameterType_12,
        __sendRoutingInfo_Errors_val_ParameterType_13,
        __sendRoutingInfo_Errors_val_ParameterType_14,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_7,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_7,
        __sendRoutingInfo_Errors_val_ParameterType_1_3,
        __sendRoutingInfo_Errors_val_ParameterType_4_2,
        __sendRoutingInfo_Errors_val_ParameterType_5_2,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_8,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_8,
        __sendRoutingInfo_Errors_val_ParameterType_0_2,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_9,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_10,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_10,
        __sendRoutingInfo_Errors_val_ParameterType_1_4,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_11,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_12,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_12,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_13,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_13,
        __sendRoutingInfo_Errors_val_ParameterType_1_5,
        __sendRoutingInfo_Errors_val_ParameterType_4_3,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_14,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_14,
        __sendRoutingInfo_Errors_val_ParameterType_4_4,
        __sendRoutingInfo_Errors_val_ParameterType_5_3,
        __sendRoutingInfo_Errors_val_ParameterType_6_1,
        __sendRoutingInfo_Errors_val_ParameterType_7_0,
        __sendRoutingInfo_Errors_val_ParameterType_8_0,
        __sendRoutingInfo_Errors_val_ParameterType_9_0,
        __sendRoutingInfo_Errors_val_ParameterType_10_0,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_15,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_15,
        __sendRoutingInfo_Errors_val_ParameterType_4_5,
        __sendRoutingInfo_Errors_val_ParameterType_6_2,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_16,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_16,
        __sendRoutingInfo_Errors_val_ParameterType_2_2,
        __sendRoutingInfo_Errors_val_ParameterType_3_3,
        __sendRoutingInfo_Errors_val_ParameterType_5_4,
        __sendRoutingInfo_Errors_val_ParameterType_6_3,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_17,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_17,
        __sendRoutingInfo_Errors_val_ParameterType_1_6,
        __sendRoutingInfo_Errors_val_ParameterType_2_3,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_18,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_18,
        __sendRoutingInfo_Errors_val_ParameterType_0_3,
        __sendRoutingInfo_Errors_val_ParameterType_3_4,
        __sendRoutingInfo_Errors_val_ParameterType_4_6,
        __sendRoutingInfo_Errors_val_ParameterType_5_5,
        __sendRoutingInfo_Errors_val_ParameterType_6_4,
        __sendRoutingInfo_Errors_val_ParameterType_7_1,
        __sendRoutingInfo_Errors_val_ParameterType_8_1,
        __sendRoutingInfo_Errors_val_ParameterType_9_1,
        __sendRoutingInfo_Errors_val_ParameterType_10_1,
        __sendRoutingInfo_Errors_val_ParameterType_11_0,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_19,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_19,
        __sendRoutingInfo_Errors_val_ParameterType_0_4,
        __sendRoutingInfo_Errors_val_ParameterType_8_2,
        __sendRoutingInfo_Errors_val_ParameterType_9_2,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_20,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_20,
        __sendRoutingInfo_Errors_val_ParameterType_1_7,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_21,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_21,
        __sendRoutingInfo_Errors_val_ParameterType_0_5,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_22,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_22,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_23,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_23,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_24,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_24,
        __sendRoutingInfo_Errors_val_ParameterType_2_4,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_25,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_25,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_26,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_28,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_28,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_29,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_29,
        __sendRoutingInfo_Errors_val_ParameterType_3_5,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_30,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_30,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_31,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_31,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_32,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_32,
        __sendRoutingInfo_Errors_val_ParameterType_4_7,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_33,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_33,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_34,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_35,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_35,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_36,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_36,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_37,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_38,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_38,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_39,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_39,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_40,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_40,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_41,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_41,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_42,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_42,
        __sendRoutingInfo_Errors_val_ParameterType_0_6,
        __sendRoutingInfo_Errors_val_ParameterType_5_6,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_43,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_43,
        __sendRoutingInfo_Errors_val_ParameterType_3_6,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_44,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_44,
        __sendRoutingInfo_Errors_val_ParameterType_4_8,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_45,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_45,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_46,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_46,
        __sendRoutingInfo_Errors_val_ParameterType_5_7,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_47,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_47,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_48,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_48,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_49,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_50,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_51,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_51,
        __sendRoutingInfo_Errors_val_ParameterType_2_5,
        __sendRoutingInfo_Errors_val_ParameterType_3_7,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_52,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_52,
        __sendRoutingInfo_Errors_val_ParameterType_7_2,
        __sendRoutingInfo_Errors_val_ParameterType_8_3,
        __sendRoutingInfo_Errors_val_ParameterType_9_3,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_53,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_53,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_54,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_54,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_55,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_55,
        __sendRoutingInfo_Errors_val_ParameterType_3_8,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_56,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_56,
        __sendRoutingInfo_Errors_val_ParameterType_7_3,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_57,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_57,
        __sendRoutingInfo_Errors_val_ParameterType_3_9,
        __sendRoutingInfo_Errors_val_ParameterType_6_5,
        __sendRoutingInfo_Errors_val_ParameterType_7_4,
        __sendRoutingInfo_Errors_val_ParameterType_9_4,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_58,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_58,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_59,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_59,
        __sendRoutingInfo_Errors_val_ParameterType_3_10,
        __sendRoutingInfo_Errors_val_ParameterType_4_9,
        __sendRoutingInfo_Errors_val_ParameterType_5_8,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_60,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_60,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_61,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_61,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_62,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_62,
        __sendRoutingInfo_Errors_val_ParameterType_7_5,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_63,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_63,
        __sendRoutingInfo_Errors_val_ParameterType_4_10,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_64,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_64,
        __sendRoutingInfo_Errors_val_ParameterType_6_6,
        __sendRoutingInfo_Errors_val_ParameterType_7_6,
        __sendRoutingInfo_Errors_val_ParameterType_8_4,
        __sendRoutingInfo_Errors_val_ParameterType_9_5,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_65,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_65,
        __sendRoutingInfo_Errors_val_ParameterType_4__11,
        __sendRoutingInfo_Errors_val_ParameterType_5_9,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_66,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_66,
        __sendRoutingInfo_Errors_val_ParameterType_8_5,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_67,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_67,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_68,
        __sendRoutingInfo_Errors_val_ParameterType_4___12,
        __sendRoutingInfo_Errors_val_ParameterType_5_10,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_69,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_69,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_70,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_70,
        __sendRoutingInfo_Errors_val_ParameterType_0_7,
        __sendRoutingInfo_Errors_val_ParameterType_4____13,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_71,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_71,
        __sendRoutingInfo_Errors_val_ParameterType_8_6,
        __sendRoutingInfo_Errors_val_ParameterType_9_6,
        __sendRoutingInfo_Errors_val_ParameterType_10_2,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_72,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_73,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_73,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_74,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_74,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_75,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_76,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_76,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_77,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_77,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_78,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_78,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_79,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_79,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_80,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_80,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_81,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_82,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_83,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_84,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_84,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_85,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_85,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_86,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_87,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_87,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_88,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_88,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_89,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_89,
        __sendRoutingInfo_Errors_val_ParameterType_4_____14,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_90,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_91,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_92,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_93,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_93,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_94,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_95,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_96,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_97,
        __sendRoutingInfo_Errors_val_ParameterType_7_7,
        __sendRoutingInfo_Errors_val_ParameterType_9_7,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_98,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_99,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_100,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_101,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_101,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_102,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_102,
        __sendRoutingInfo_Errors_val_ParameterType_6_7,
        __sendRoutingInfo_Errors_val_ParameterType_7_8,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_103,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_103,
        __sendRoutingInfo_Errors_val_ParameterType_6_8,
        __sendRoutingInfo_Errors_val_ParameterType_8_7,
        __sendRoutingInfo_Errors_val_ParameterType_9_8,
        __sendRoutingInfo_Errors_val_ParameterType_10_3,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_104,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_105,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_105,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_106,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_106,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_107,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_107,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_108,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_108,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_109,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_109,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_110,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_110,
        __sendRoutingInfo_Errors_val_ParameterType_4______15,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_111,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_111,
        __sendRoutingInfo_Errors_val_ParameterType_3__11,
        __sendRoutingInfo_Errors_val_ParameterType_4_______16,
        __sendRoutingInfo_Errors_val_ParameterType_5__11,
        __Supported_MAPv2_Operations_Linked_val_ArgumentType_0,
        __Supported_MAPv2_Operations_Linked_val_ResultType_0,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_112,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_112,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_113,
        __sendRoutingInfo_Errors_val_ParameterType_3___12,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ArgumentType_114,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode_tab_val_ResultType_114,
        ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_opcode,
        ______TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke_argument,
        _____TCAP_MAP_Message_unidirectional_components__item__basicROS_invoke,
        ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_invokeId,
        _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_result_opcode,
        _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_result_result,
        ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult_result,
        _____TCAP_MAP_Message_unidirectional_components__item__basicROS_returnResult,
        ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_invokeId,
        _______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_0,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_1,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_2,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_3,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_4,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_5,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_6,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_7,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_8,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_9,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_10,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_11,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_12,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_13,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_14,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_15,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_16,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_17,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_18,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_19,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_20,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_21,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_22,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_23,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_24,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_25,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_26,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_27,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_28,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_29,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_30,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_31,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_32,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_33,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_34,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_35,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_36,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_38,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_40,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_43,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_44,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_45,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_46,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_47,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_48,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_52,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_53,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_54,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_56,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_60,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_66,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_67,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_73,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_78,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_81,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_82,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_83,
        ________TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode_tab_val_ParameterType_85,
        ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_errcode,
        ______TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError_parameter,
        _____TCAP_MAP_Message_unidirectional_components__item__basicROS_returnError,
        _____TCAP_MAP_Message_unidirectional_components__item__basicROS_reject,
        ____TCAP_MAP_Message_unidirectional_components__item__basicROS,
        _____TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_invokeId,
        ______TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_result_opcode,
        ______TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_result_result,
        _____TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast_result,
        ____TCAP_MAP_Message_unidirectional_components__item__returnResultNotLast,
        ___TCAP_MAP_Message_unidirectional_components__item_,
        __TCAP_MAP_Message_unidirectional_components,
        _TCAP_MAP_Message_unidirectional,
        __TCAP_MAP_Message_begin_otid,
        __TCAP_MAP_Message_begin_dialoguePortion,
        ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_invokeId,
        _______TCAP_MAP_Message_begin_components__item__basicROS_invoke_linkedId_present,
        _______TCAP_MAP_Message_begin_components__item__basicROS_invoke_linkedId_absent,
        ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_linkedId,
        ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_opcode,
        ______TCAP_MAP_Message_begin_components__item__basicROS_invoke_argument,
        _____TCAP_MAP_Message_begin_components__item__basicROS_invoke,
        ______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_invokeId,
        _______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_result_opcode,
        _______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_result_result,
        ______TCAP_MAP_Message_begin_components__item__basicROS_returnResult_result,
        _____TCAP_MAP_Message_begin_components__item__basicROS_returnResult,
        ______TCAP_MAP_Message_begin_components__item__basicROS_returnError_invokeId,
        ______TCAP_MAP_Message_begin_components__item__basicROS_returnError_errcode,
        ______TCAP_MAP_Message_begin_components__item__basicROS_returnError_parameter,
        _____TCAP_MAP_Message_begin_components__item__basicROS_returnError,
        _____TCAP_MAP_Message_begin_components__item__basicROS_reject,
        ____TCAP_MAP_Message_begin_components__item__basicROS,
        _____TCAP_MAP_Message_begin_components__item__returnResultNotLast_invokeId,
        ______TCAP_MAP_Message_begin_components__item__returnResultNotLast_result_opcode,
        ______TCAP_MAP_Message_begin_components__item__returnResultNotLast_result_result,
        _____TCAP_MAP_Message_begin_components__item__returnResultNotLast_result,
        ____TCAP_MAP_Message_begin_components__item__returnResultNotLast,
        ___TCAP_MAP_Message_begin_components__item_,
        __TCAP_MAP_Message_begin_components,
        _TCAP_MAP_Message_begin,
        __TCAP_MAP_Message_end_dtid,
        __TCAP_MAP_Message_end_dialoguePortion,
        ______TCAP_MAP_Message_end_components__item__basicROS_invoke_invokeId,
        _______TCAP_MAP_Message_end_components__item__basicROS_invoke_linkedId_present,
        _______TCAP_MAP_Message_end_components__item__basicROS_invoke_linkedId_absent,
        ______TCAP_MAP_Message_end_components__item__basicROS_invoke_linkedId,
        ______TCAP_MAP_Message_end_components__item__basicROS_invoke_opcode,
        ______TCAP_MAP_Message_end_components__item__basicROS_invoke_argument,
        _____TCAP_MAP_Message_end_components__item__basicROS_invoke,
        ______TCAP_MAP_Message_end_components__item__basicROS_returnResult_invokeId,
        _______TCAP_MAP_Message_end_components__item__basicROS_returnResult_result_opcode,
        _______TCAP_MAP_Message_end_components__item__basicROS_returnResult_result_result,
        ______TCAP_MAP_Message_end_components__item__basicROS_returnResult_result,
        _____TCAP_MAP_Message_end_components__item__basicROS_returnResult,
        ______TCAP_MAP_Message_end_components__item__basicROS_returnError_invokeId,
        ______TCAP_MAP_Message_end_components__item__basicROS_returnError_errcode,
        ______TCAP_MAP_Message_end_components__item__basicROS_returnError_parameter,
        _____TCAP_MAP_Message_end_components__item__basicROS_returnError,
        _____TCAP_MAP_Message_end_components__item__basicROS_reject,
        ____TCAP_MAP_Message_end_components__item__basicROS,
        _____TCAP_MAP_Message_end_components__item__returnResultNotLast_invokeId,
        ______TCAP_MAP_Message_end_components__item__returnResultNotLast_result_opcode,
        ______TCAP_MAP_Message_end_components__item__returnResultNotLast_result_result,
        _____TCAP_MAP_Message_end_components__item__returnResultNotLast_result,
        ____TCAP_MAP_Message_end_components__item__returnResultNotLast,
        ___TCAP_MAP_Message_end_components__item_,
        __TCAP_MAP_Message_end_components,
        _TCAP_MAP_Message_end,
        __TCAP_MAP_Message_continue__otid,
        __TCAP_MAP_Message_continue__dtid,
        __TCAP_MAP_Message_continue__dialoguePortion,
        ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_invokeId,
        _______TCAP_MAP_Message_continue__components__item__basicROS_invoke_linkedId_present,
        _______TCAP_MAP_Message_continue__components__item__basicROS_invoke_linkedId_absent,
        ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_linkedId,
        ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_opcode,
        ______TCAP_MAP_Message_continue__components__item__basicROS_invoke_argument,
        _____TCAP_MAP_Message_continue__components__item__basicROS_invoke,
        ______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_invokeId,
        _______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_result_opcode,
        _______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_result_result,
        ______TCAP_MAP_Message_continue__components__item__basicROS_returnResult_result,
        _____TCAP_MAP_Message_continue__components__item__basicROS_returnResult,
        ______TCAP_MAP_Message_continue__components__item__basicROS_returnError_invokeId,
        ______TCAP_MAP_Message_continue__components__item__basicROS_returnError_errcode,
        ______TCAP_MAP_Message_continue__components__item__basicROS_returnError_parameter,
        _____TCAP_MAP_Message_continue__components__item__basicROS_returnError,
        _____TCAP_MAP_Message_continue__components__item__basicROS_reject,
        ____TCAP_MAP_Message_continue__components__item__basicROS,
        _____TCAP_MAP_Message_continue__components__item__returnResultNotLast_invokeId,
        ______TCAP_MAP_Message_continue__components__item__returnResultNotLast_result_opcode,
        ______TCAP_MAP_Message_continue__components__item__returnResultNotLast_result_result,
        _____TCAP_MAP_Message_continue__components__item__returnResultNotLast_result,
        ____TCAP_MAP_Message_continue__components__item__returnResultNotLast,
        ___TCAP_MAP_Message_continue__components__item_,
        __TCAP_MAP_Message_continue__components,
        _TCAP_MAP_Message_continue_,
        _TCAP_MAP_Message_abort,
        TCAP_MAP_Message,
    ]

class Remote_Operations_Generic_ROS_PDUs:

    _name_  = 'Remote-Operations-Generic-ROS-PDUs'
    _oid_   = [2, 4, 6, 0]
    
    _obj_ = [
        'ROS',
        'Invoke',
        'ReturnResult',
        'ReturnError',
        'Reject',
        'GeneralProblem',
        'InvokeProblem',
        'ReturnResultProblem',
        'ReturnErrorProblem',
        'RejectProblem',
        'InvokeId',
        'noInvokeId',
        'NoInvokeId',
        'Errors',
        'Bind',
        'Unbind',
        ]
    _type_ = [
        'ROS',
        'Invoke',
        'ReturnResult',
        'ReturnError',
        'Reject',
        'GeneralProblem',
        'InvokeProblem',
        'ReturnResultProblem',
        'ReturnErrorProblem',
        'RejectProblem',
        'InvokeId',
        'Bind',
        'Unbind',
        ]
    _set_ = [
        'NoInvokeId',
        'Errors',
        ]
    _val_ = [
        'noInvokeId',
        ]
    _class_ = [
        'Errors',
        ]
    _param_ = [
        'ROS',
        'Invoke',
        'ReturnResult',
        'ReturnError',
        'Errors',
        'Bind',
        'Unbind',
        ]
    
    #-----< ROS >-----#
    ROS = CHOICE(name='ROS', mode=MODE_TYPE, param=True)
    
    #-----< Invoke >-----#
    Invoke = SEQ(name='Invoke', mode=MODE_TYPE, param=True)
    
    #-----< ReturnResult >-----#
    ReturnResult = SEQ(name='ReturnResult', mode=MODE_TYPE, param=True)
    
    #-----< ReturnError >-----#
    ReturnError = SEQ(name='ReturnError', mode=MODE_TYPE, param=True)
    
    #-----< Reject >-----#
    Reject = SEQ(name='Reject', mode=MODE_TYPE)
    _Reject_invokeId = CHOICE(name='invokeId', mode=MODE_TYPE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    _Reject_problem = CHOICE(name='problem', mode=MODE_TYPE)
    __Reject_problem_general = INT(name='general', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'GeneralProblem')))
    __Reject_problem_invoke = INT(name='invoke', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeProblem')))
    __Reject_problem_returnResult = INT(name='returnResult', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'ReturnResultProblem')))
    __Reject_problem_returnError = INT(name='returnError', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'ReturnErrorProblem')))
    _Reject_problem._cont = ASN1Dict([
        ('general', __Reject_problem_general),
        ('invoke', __Reject_problem_invoke),
        ('returnResult', __Reject_problem_returnResult),
        ('returnError', __Reject_problem_returnError),
        ])
    _Reject_problem._ext = None
    Reject._cont = ASN1Dict([
        ('invokeId', _Reject_invokeId),
        ('problem', _Reject_problem),
        ])
    Reject._ext = None
    
    #-----< GeneralProblem >-----#
    GeneralProblem = INT(name='GeneralProblem', mode=MODE_TYPE)
    GeneralProblem._cont = ASN1Dict([('unrecognizedPDU', 0), ('mistypedPDU', 1), ('badlyStructuredPDU', 2)])
    
    #-----< InvokeProblem >-----#
    InvokeProblem = INT(name='InvokeProblem', mode=MODE_TYPE)
    InvokeProblem._cont = ASN1Dict([('duplicateInvocation', 0), ('unrecognizedOperation', 1), ('mistypedArgument', 2), ('resourceLimitation', 3), ('releaseInProgress', 4), ('unrecognizedLinkedId', 5), ('linkedResponseUnexpected', 6), ('unexpectedLinkedOperation', 7)])
    
    #-----< ReturnResultProblem >-----#
    ReturnResultProblem = INT(name='ReturnResultProblem', mode=MODE_TYPE)
    ReturnResultProblem._cont = ASN1Dict([('unrecognizedInvocation', 0), ('resultResponseUnexpected', 1), ('mistypedResult', 2)])
    
    #-----< ReturnErrorProblem >-----#
    ReturnErrorProblem = INT(name='ReturnErrorProblem', mode=MODE_TYPE)
    ReturnErrorProblem._cont = ASN1Dict([('unrecognizedInvocation', 0), ('errorResponseUnexpected', 1), ('unrecognizedError', 2), ('unexpectedError', 3), ('mistypedParameter', 4)])
    
    #-----< RejectProblem >-----#
    RejectProblem = INT(name='RejectProblem', mode=MODE_TYPE)
    RejectProblem._cont = ASN1Dict([('general-unrecognizedPDU', 0), ('general-mistypedPDU', 1), ('general-badlyStructuredPDU', 2), ('invoke-duplicateInvocation', 10), ('invoke-unrecognizedOperation', 11), ('invoke-mistypedArgument', 12), ('invoke-resourceLimitation', 13), ('invoke-releaseInProgress', 14), ('invoke-unrecognizedLinkedId', 15), ('invoke-linkedResponseUnexpected', 16), ('invoke-unexpectedLinkedOperation', 17), ('returnResult-unrecognizedInvocation', 20), ('returnResult-resultResponseUnexpected', 21), ('returnResult-mistypedResult', 22), ('returnError-unrecognizedInvocation', 30), ('returnError-errorResponseUnexpected', 31), ('returnError-unrecognizedError', 32), ('returnError-unexpectedError', 33), ('returnError-mistypedParameter', 34)])
    
    #-----< InvokeId >-----#
    InvokeId = CHOICE(name='InvokeId', mode=MODE_TYPE)
    _InvokeId_present = INT(name='present', mode=MODE_TYPE)
    _InvokeId_absent = NULL(name='absent', mode=MODE_TYPE)
    InvokeId._cont = ASN1Dict([
        ('present', _InvokeId_present),
        ('absent', _InvokeId_absent),
        ])
    InvokeId._ext = None
    
    #-----< noInvokeId >-----#
    noInvokeId = CHOICE(name='noInvokeId', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    noInvokeId._val = ('absent', 0)
    
    #-----< NoInvokeId >-----#
    NoInvokeId = CHOICE(name='NoInvokeId', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    NoInvokeId._val = ASN1Set(rv=[('absent', 0)], rr=[], ev=None, er=[])
    
    #-----< Errors >-----#
    Errors = CLASS(name='Errors', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')), param=True)
    
    #-----< Bind >-----#
    Bind = CHOICE(name='Bind', mode=MODE_TYPE, param=True)
    
    #-----< Unbind >-----#
    Unbind = CHOICE(name='Unbind', mode=MODE_TYPE, param=True)
    
    _all_ = [
        _Reject_invokeId,
        __Reject_problem_general,
        __Reject_problem_invoke,
        __Reject_problem_returnResult,
        __Reject_problem_returnError,
        _Reject_problem,
        Reject,
        GeneralProblem,
        InvokeProblem,
        ReturnResultProblem,
        ReturnErrorProblem,
        RejectProblem,
        _InvokeId_present,
        _InvokeId_absent,
        InvokeId,
        noInvokeId,
        NoInvokeId,
    ]

class Remote_Operations_Information_Objects:

    _name_  = 'Remote-Operations-Information-Objects'
    _oid_   = [2, 4, 5, 0]
    
    _obj_ = [
        'OPERATION',
        'ERROR',
        'OPERATION-PACKAGE',
        'CONNECTION-PACKAGE',
        'CONTRACT',
        'ROS-OBJECT-CLASS',
        'Code',
        'Priority',
        'refuse',
        'emptyBind',
        'emptyUnbind',
        ]
    _type_ = [
        'OPERATION',
        'ERROR',
        'OPERATION-PACKAGE',
        'CONNECTION-PACKAGE',
        'CONTRACT',
        'ROS-OBJECT-CLASS',
        'Code',
        'Priority',
        ]
    _set_ = [
        ]
    _val_ = [
        'refuse',
        'emptyBind',
        'emptyUnbind',
        ]
    _class_ = [
        'OPERATION',
        'ERROR',
        'OPERATION-PACKAGE',
        'CONNECTION-PACKAGE',
        'CONTRACT',
        'ROS-OBJECT-CLASS',
        'refuse',
        'emptyBind',
        'emptyUnbind',
        ]
    _param_ = [
        ]
    
    #-----< OPERATION >-----#
    OPERATION = CLASS(name='OPERATION', mode=MODE_TYPE)
    _OPERATION_ArgumentType = OPEN(name='ArgumentType', mode=MODE_TYPE, opt=True)
    _OPERATION_argumentTypeOptional = BOOL(name='argumentTypeOptional', mode=MODE_VALUE, opt=True)
    _OPERATION_returnResult = BOOL(name='returnResult', mode=MODE_VALUE, default=True)
    _OPERATION_ResultType = OPEN(name='ResultType', mode=MODE_TYPE, opt=True)
    _OPERATION_resultTypeOptional = BOOL(name='resultTypeOptional', mode=MODE_VALUE, opt=True)
    _OPERATION_Errors = CLASS(name='Errors', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')), opt=True)
    _OPERATION_Linked = CLASS(name='Linked', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')), opt=True)
    _OPERATION_synchronous = BOOL(name='synchronous', mode=MODE_VALUE, default=False)
    _OPERATION_alwaysReturns = BOOL(name='alwaysReturns', mode=MODE_VALUE, default=True)
    _OPERATION_InvokePriority = INT(name='InvokePriority', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'Priority')), opt=True)
    _OPERATION_ResultPriority = INT(name='ResultPriority', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'Priority')), opt=True)
    _OPERATION_operationCode = CHOICE(name='operationCode', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'Code')), opt=True, uniq=True)
    OPERATION._cont = ASN1Dict([
        ('ArgumentType', _OPERATION_ArgumentType),
        ('argumentTypeOptional', _OPERATION_argumentTypeOptional),
        ('returnResult', _OPERATION_returnResult),
        ('ResultType', _OPERATION_ResultType),
        ('resultTypeOptional', _OPERATION_resultTypeOptional),
        ('Errors', _OPERATION_Errors),
        ('Linked', _OPERATION_Linked),
        ('synchronous', _OPERATION_synchronous),
        ('alwaysReturns', _OPERATION_alwaysReturns),
        ('InvokePriority', _OPERATION_InvokePriority),
        ('ResultPriority', _OPERATION_ResultPriority),
        ('operationCode', _OPERATION_operationCode),
        ])
    
    #-----< ERROR >-----#
    ERROR = CLASS(name='ERROR', mode=MODE_TYPE)
    _ERROR_ParameterType = OPEN(name='ParameterType', mode=MODE_TYPE, opt=True)
    _ERROR_parameterTypeOptional = BOOL(name='parameterTypeOptional', mode=MODE_VALUE, opt=True)
    _ERROR_ErrorPriority = INT(name='ErrorPriority', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'Priority')), opt=True)
    _ERROR_errorCode = CHOICE(name='errorCode', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'Code')), opt=True, uniq=True)
    ERROR._cont = ASN1Dict([
        ('ParameterType', _ERROR_ParameterType),
        ('parameterTypeOptional', _ERROR_parameterTypeOptional),
        ('ErrorPriority', _ERROR_ErrorPriority),
        ('errorCode', _ERROR_errorCode),
        ])
    
    #-----< OPERATION-PACKAGE >-----#
    OPERATION_PACKAGE = CLASS(name='OPERATION-PACKAGE', mode=MODE_TYPE)
    _OPERATION_PACKAGE_Both = CLASS(name='Both', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')), opt=True)
    _OPERATION_PACKAGE_Consumer = CLASS(name='Consumer', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')), opt=True)
    _OPERATION_PACKAGE_Supplier = CLASS(name='Supplier', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')), opt=True)
    _OPERATION_PACKAGE_id = OID(name='id', mode=MODE_VALUE, opt=True, uniq=True)
    OPERATION_PACKAGE._cont = ASN1Dict([
        ('Both', _OPERATION_PACKAGE_Both),
        ('Consumer', _OPERATION_PACKAGE_Consumer),
        ('Supplier', _OPERATION_PACKAGE_Supplier),
        ('id', _OPERATION_PACKAGE_id),
        ])
    
    #-----< CONNECTION-PACKAGE >-----#
    CONNECTION_PACKAGE = CLASS(name='CONNECTION-PACKAGE', mode=MODE_TYPE)
    _CONNECTION_PACKAGE_bind = CLASS(name='bind', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')), default=dict([('Errors', ASN1Set(rv=[dict([('errorCode', ('local', -1))])], rr=[], ev=None, er=[])), ('synchronous', True)]))
    _CONNECTION_PACKAGE_unbind = CLASS(name='unbind', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')), default=dict([('synchronous', True)]))
    _CONNECTION_PACKAGE_responderCanUnbind = BOOL(name='responderCanUnbind', mode=MODE_VALUE, default=False)
    _CONNECTION_PACKAGE_unbindCanFail = BOOL(name='unbindCanFail', mode=MODE_VALUE, default=False)
    _CONNECTION_PACKAGE_id = OID(name='id', mode=MODE_VALUE, opt=True, uniq=True)
    CONNECTION_PACKAGE._cont = ASN1Dict([
        ('bind', _CONNECTION_PACKAGE_bind),
        ('unbind', _CONNECTION_PACKAGE_unbind),
        ('responderCanUnbind', _CONNECTION_PACKAGE_responderCanUnbind),
        ('unbindCanFail', _CONNECTION_PACKAGE_unbindCanFail),
        ('id', _CONNECTION_PACKAGE_id),
        ])
    
    #-----< CONTRACT >-----#
    CONTRACT = CLASS(name='CONTRACT', mode=MODE_TYPE)
    _CONTRACT_connection = CLASS(name='connection', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'CONNECTION-PACKAGE')), opt=True)
    _CONTRACT_OperationsOf = CLASS(name='OperationsOf', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION-PACKAGE')), opt=True)
    _CONTRACT_InitiatorConsumerOf = CLASS(name='InitiatorConsumerOf', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION-PACKAGE')), opt=True)
    _CONTRACT_InitiatorSupplierOf = CLASS(name='InitiatorSupplierOf', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION-PACKAGE')), opt=True)
    _CONTRACT_id = OID(name='id', mode=MODE_VALUE, opt=True, uniq=True)
    CONTRACT._cont = ASN1Dict([
        ('connection', _CONTRACT_connection),
        ('OperationsOf', _CONTRACT_OperationsOf),
        ('InitiatorConsumerOf', _CONTRACT_InitiatorConsumerOf),
        ('InitiatorSupplierOf', _CONTRACT_InitiatorSupplierOf),
        ('id', _CONTRACT_id),
        ])
    
    #-----< ROS-OBJECT-CLASS >-----#
    ROS_OBJECT_CLASS = CLASS(name='ROS-OBJECT-CLASS', mode=MODE_TYPE)
    _ROS_OBJECT_CLASS_Is = CLASS(name='Is', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ROS-OBJECT-CLASS')), opt=True)
    _ROS_OBJECT_CLASS_Initiates = CLASS(name='Initiates', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'CONTRACT')), opt=True)
    _ROS_OBJECT_CLASS_Responds = CLASS(name='Responds', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'CONTRACT')), opt=True)
    _ROS_OBJECT_CLASS_InitiatesAndResponds = CLASS(name='InitiatesAndResponds', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'CONTRACT')), opt=True)
    _ROS_OBJECT_CLASS_id = OID(name='id', mode=MODE_VALUE, uniq=True)
    ROS_OBJECT_CLASS._cont = ASN1Dict([
        ('Is', _ROS_OBJECT_CLASS_Is),
        ('Initiates', _ROS_OBJECT_CLASS_Initiates),
        ('Responds', _ROS_OBJECT_CLASS_Responds),
        ('InitiatesAndResponds', _ROS_OBJECT_CLASS_InitiatesAndResponds),
        ('id', _ROS_OBJECT_CLASS_id),
        ])
    
    #-----< Code >-----#
    Code = CHOICE(name='Code', mode=MODE_TYPE)
    _Code_local = INT(name='local', mode=MODE_TYPE)
    _Code_global_ = OID(name='global', mode=MODE_TYPE)
    Code._cont = ASN1Dict([
        ('local', _Code_local),
        ('global', _Code_global_),
        ])
    Code._ext = None
    
    #-----< Priority >-----#
    Priority = INT(name='Priority', mode=MODE_TYPE)
    Priority._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=None)], ev=None, er=[])
    
    #-----< refuse >-----#
    refuse = CLASS(name='refuse', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'ERROR')))
    refuse._val = dict([('errorCode', ('local', -1))])
    
    #-----< emptyBind >-----#
    emptyBind = CLASS(name='emptyBind', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    emptyBind._val = dict([('Errors', ASN1Set(rv=[dict([('errorCode', ('local', -1))])], rr=[], ev=None, er=[])), ('synchronous', True)])
    
    #-----< emptyUnbind >-----#
    emptyUnbind = CLASS(name='emptyUnbind', mode=MODE_VALUE, typeref=ASN1RefType(('Remote-Operations-Information-Objects', 'OPERATION')))
    emptyUnbind._val = dict([('synchronous', True)])
    
    _all_ = [
        _OPERATION_ArgumentType,
        _OPERATION_argumentTypeOptional,
        _OPERATION_returnResult,
        _OPERATION_ResultType,
        _OPERATION_resultTypeOptional,
        _OPERATION_Errors,
        _OPERATION_Linked,
        _OPERATION_synchronous,
        _OPERATION_alwaysReturns,
        _OPERATION_InvokePriority,
        _OPERATION_ResultPriority,
        _OPERATION_operationCode,
        OPERATION,
        _ERROR_ParameterType,
        _ERROR_parameterTypeOptional,
        _ERROR_ErrorPriority,
        _ERROR_errorCode,
        ERROR,
        _OPERATION_PACKAGE_Both,
        _OPERATION_PACKAGE_Consumer,
        _OPERATION_PACKAGE_Supplier,
        _OPERATION_PACKAGE_id,
        OPERATION_PACKAGE,
        _CONNECTION_PACKAGE_bind,
        _CONNECTION_PACKAGE_unbind,
        _CONNECTION_PACKAGE_responderCanUnbind,
        _CONNECTION_PACKAGE_unbindCanFail,
        _CONNECTION_PACKAGE_id,
        CONNECTION_PACKAGE,
        _CONTRACT_connection,
        _CONTRACT_OperationsOf,
        _CONTRACT_InitiatorConsumerOf,
        _CONTRACT_InitiatorSupplierOf,
        _CONTRACT_id,
        CONTRACT,
        _ROS_OBJECT_CLASS_Is,
        _ROS_OBJECT_CLASS_Initiates,
        _ROS_OBJECT_CLASS_Responds,
        _ROS_OBJECT_CLASS_InitiatesAndResponds,
        _ROS_OBJECT_CLASS_id,
        ROS_OBJECT_CLASS,
        _Code_local,
        _Code_global_,
        Code,
        Priority,
        refuse,
        emptyBind,
        emptyUnbind,
    ]

class TCAPMessages:

    _name_  = 'TCAPMessages'
    _oid_   = [0, 0, 17, 773, 2, 1, 3]
    
    _obj_ = [
        'TCMessage',
        'Unidirectional',
        'Begin',
        'End',
        'Continue',
        'Abort',
        'DialoguePortion',
        'OrigTransactionID',
        'DestTransactionID',
        'P-AbortCause',
        'ComponentPortion',
        'Component',
        'TCInvokeIdSet',
        ]
    _type_ = [
        'TCMessage',
        'Unidirectional',
        'Begin',
        'End',
        'Continue',
        'Abort',
        'DialoguePortion',
        'OrigTransactionID',
        'DestTransactionID',
        'P-AbortCause',
        'ComponentPortion',
        'Component',
        ]
    _set_ = [
        'TCInvokeIdSet',
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        'TCMessage',
        'Unidirectional',
        'Begin',
        'End',
        'Continue',
        'ComponentPortion',
        'Component',
        ]
    
    #-----< TCMessage >-----#
    TCMessage = CHOICE(name='TCMessage', mode=MODE_TYPE, param=True)
    
    #-----< Unidirectional >-----#
    Unidirectional = SEQ(name='Unidirectional', mode=MODE_TYPE, param=True)
    
    #-----< Begin >-----#
    Begin = SEQ(name='Begin', mode=MODE_TYPE, param=True)
    
    #-----< End >-----#
    End = SEQ(name='End', mode=MODE_TYPE, param=True)
    
    #-----< Continue >-----#
    Continue = SEQ(name='Continue', mode=MODE_TYPE, param=True)
    
    #-----< Abort >-----#
    Abort = SEQ(name='Abort', mode=MODE_TYPE)
    _Abort_dtid = OCT_STR(name='dtid', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPMessages', 'DestTransactionID')))
    _Abort_reason = CHOICE(name='reason', mode=MODE_TYPE, opt=True)
    __Abort_reason_p_abortCause = INT(name='p-abortCause', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPMessages', 'P-AbortCause')))
    __Abort_reason_u_abortCause = SEQ(name='u-abortCause', mode=MODE_TYPE, typeref=ASN1RefType(('TCAPMessages', 'DialoguePortion')))
    _Abort_reason._cont = ASN1Dict([
        ('p-abortCause', __Abort_reason_p_abortCause),
        ('u-abortCause', __Abort_reason_u_abortCause),
        ])
    _Abort_reason._ext = None
    Abort._cont = ASN1Dict([
        ('dtid', _Abort_dtid),
        ('reason', _Abort_reason),
        ])
    Abort._ext = None
    
    #-----< DialoguePortion >-----#
    DialoguePortion = SEQ(name='DialoguePortion', mode=MODE_TYPE, tag=(11, TAG_APPLICATION, TAG_EXPLICIT), typeref=ASN1RefType(('Pycrate-TCAP-MAP-Dialogue', 'TcapDialogueExternal')))
    
    #-----< OrigTransactionID >-----#
    OrigTransactionID = OCT_STR(name='OrigTransactionID', mode=MODE_TYPE, tag=(8, TAG_APPLICATION, TAG_IMPLICIT))
    OrigTransactionID._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    
    #-----< DestTransactionID >-----#
    DestTransactionID = OCT_STR(name='DestTransactionID', mode=MODE_TYPE, tag=(9, TAG_APPLICATION, TAG_IMPLICIT))
    DestTransactionID._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    
    #-----< P-AbortCause >-----#
    P_AbortCause = INT(name='P-AbortCause', mode=MODE_TYPE, tag=(10, TAG_APPLICATION, TAG_IMPLICIT))
    P_AbortCause._cont = ASN1Dict([('unrecognizedMessageType', 0), ('unrecognizedTransactionID', 1), ('badlyFormattedTransactionPortion', 2), ('incorrectTransactionPortion', 3), ('resourceLimitation', 4)])
    P_AbortCause._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< ComponentPortion >-----#
    ComponentPortion = SEQ_OF(name='ComponentPortion', mode=MODE_TYPE, tag=(12, TAG_APPLICATION, TAG_IMPLICIT), param=True)
    
    #-----< Component >-----#
    Component = CHOICE(name='Component', mode=MODE_TYPE, param=True)
    
    #-----< TCInvokeIdSet >-----#
    TCInvokeIdSet = CHOICE(name='TCInvokeIdSet', mode=MODE_SET, typeref=ASN1RefType(('Remote-Operations-Generic-ROS-PDUs', 'InvokeId')))
    TCInvokeIdSet._val = ASN1Set(rv=[('present', -128), ('present', -127), ('present', -126), ('present', -125), ('present', -124), ('present', -123), ('present', -122), ('present', -121), ('present', -120), ('present', -119), ('present', -118), ('present', -117), ('present', -116), ('present', -115), ('present', -114), ('present', -113), ('present', -112), ('present', -111), ('present', -110), ('present', -109), ('present', -108), ('present', -107), ('present', -106), ('present', -105), ('present', -104), ('present', -103), ('present', -102), ('present', -101), ('present', -100), ('present', -99), ('present', -98), ('present', -97), ('present', -96), ('present', -95), ('present', -94), ('present', -93), ('present', -92), ('present', -91), ('present', -90), ('present', -89), ('present', -88), ('present', -87), ('present', -86), ('present', -85), ('present', -84), ('present', -83), ('present', -82), ('present', -81), ('present', -80), ('present', -79), ('present', -78), ('present', -77), ('present', -76), ('present', -75), ('present', -74), ('present', -73), ('present', -72), ('present', -71), ('present', -70), ('present', -69), ('present', -68), ('present', -67), ('present', -66), ('present', -65), ('present', -64), ('present', -63), ('present', -62), ('present', -61), ('present', -60), ('present', -59), ('present', -58), ('present', -57), ('present', -56), ('present', -55), ('present', -54), ('present', -53), ('present', -52), ('present', -51), ('present', -50), ('present', -49), ('present', -48), ('present', -47), ('present', -46), ('present', -45), ('present', -44), ('present', -43), ('present', -42), ('present', -41), ('present', -40), ('present', -39), ('present', -38), ('present', -37), ('present', -36), ('present', -35), ('present', -34), ('present', -33), ('present', -32), ('present', -31), ('present', -30), ('present', -29), ('present', -28), ('present', -27), ('present', -26), ('present', -25), ('present', -24), ('present', -23), ('present', -22), ('present', -21), ('present', -20), ('present', -19), ('present', -18), ('present', -17), ('present', -16), ('present', -15), ('present', -14), ('present', -13), ('present', -12), ('present', -11), ('present', -10), ('present', -9), ('present', -8), ('present', -7), ('present', -6), ('present', -5), ('present', -4), ('present', -3), ('present', -2), ('present', -1), ('present', 0), ('present', 1), ('present', 2), ('present', 3), ('present', 4), ('present', 5), ('present', 6), ('present', 7), ('present', 8), ('present', 9), ('present', 10), ('present', 11), ('present', 12), ('present', 13), ('present', 14), ('present', 15), ('present', 16), ('present', 17), ('present', 18), ('present', 19), ('present', 20), ('present', 21), ('present', 22), ('present', 23), ('present', 24), ('present', 25), ('present', 26), ('present', 27), ('present', 28), ('present', 29), ('present', 30), ('present', 31), ('present', 32), ('present', 33), ('present', 34), ('present', 35), ('present', 36), ('present', 37), ('present', 38), ('present', 39), ('present', 40), ('present', 41), ('present', 42), ('present', 43), ('present', 44), ('present', 45), ('present', 46), ('present', 47), ('present', 48), ('present', 49), ('present', 50), ('present', 51), ('present', 52), ('present', 53), ('present', 54), ('present', 55), ('present', 56), ('present', 57), ('present', 58), ('present', 59), ('present', 60), ('present', 61), ('present', 62), ('present', 63), ('present', 64), ('present', 65), ('present', 66), ('present', 67), ('present', 68), ('present', 69), ('present', 70), ('present', 71), ('present', 72), ('present', 73), ('present', 74), ('present', 75), ('present', 76), ('present', 77), ('present', 78), ('present', 79), ('present', 80), ('present', 81), ('present', 82), ('present', 83), ('present', 84), ('present', 85), ('present', 86), ('present', 87), ('present', 88), ('present', 89), ('present', 90), ('present', 91), ('present', 92), ('present', 93), ('present', 94), ('present', 95), ('present', 96), ('present', 97), ('present', 98), ('present', 99), ('present', 100), ('present', 101), ('present', 102), ('present', 103), ('present', 104), ('present', 105), ('present', 106), ('present', 107), ('present', 108), ('present', 109), ('present', 110), ('present', 111), ('present', 112), ('present', 113), ('present', 114), ('present', 115), ('present', 116), ('present', 117), ('present', 118), ('present', 119), ('present', 120), ('present', 121), ('present', 122), ('present', 123), ('present', 124), ('present', 125), ('present', 126), ('present', 127)], rr=[], ev=None, er=[])
    
    _all_ = [
        _Abort_dtid,
        __Abort_reason_p_abortCause,
        __Abort_reason_u_abortCause,
        _Abort_reason,
        Abort,
        DialoguePortion,
        OrigTransactionID,
        DestTransactionID,
        P_AbortCause,
        TCInvokeIdSet,
    ]

class UnidialoguePDUs:

    _name_  = 'UnidialoguePDUs'
    _oid_   = [0, 0, 17, 773, 2, 3, 1]
    
    _obj_ = [
        'uniDialogue-as-id',
        'UniDialoguePDU',
        'AUDT-apdu',
        ]
    _type_ = [
        'UniDialoguePDU',
        'AUDT-apdu',
        ]
    _set_ = [
        ]
    _val_ = [
        'uniDialogue-as-id',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< uniDialogue-as-id >-----#
    uniDialogue_as_id = OID(name='uniDialogue-as-id', mode=MODE_VALUE)
    uniDialogue_as_id._val = (0, 0, 17, 773, 1, 2, 1)
    
    #-----< UniDialoguePDU >-----#
    UniDialoguePDU = CHOICE(name='UniDialoguePDU', mode=MODE_TYPE)
    _UniDialoguePDU_unidialoguePDU = SEQ(name='unidialoguePDU', mode=MODE_TYPE, typeref=ASN1RefType(('UnidialoguePDUs', 'AUDT-apdu')))
    UniDialoguePDU._cont = ASN1Dict([
        ('unidialoguePDU', _UniDialoguePDU_unidialoguePDU),
        ])
    UniDialoguePDU._ext = None
    
    #-----< AUDT-apdu >-----#
    AUDT_apdu = SEQ(name='AUDT-apdu', mode=MODE_TYPE, tag=(0, TAG_APPLICATION, TAG_IMPLICIT))
    _AUDT_apdu_protocol_version = BIT_STR(name='protocol-version', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=(1, 1))
    _AUDT_apdu_protocol_version._cont = ASN1Dict([('version1', 0)])
    _AUDT_apdu_application_context_name = OID(name='application-context-name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    _AUDT_apdu_user_information = SEQ_OF(name='user-information', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __AUDT_apdu_user_information__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('Pycrate-TCAP-MAP-Dialogue', 'TcapDialogueExternal')))
    _AUDT_apdu_user_information._cont = __AUDT_apdu_user_information__item_
    AUDT_apdu._cont = ASN1Dict([
        ('protocol-version', _AUDT_apdu_protocol_version),
        ('application-context-name', _AUDT_apdu_application_context_name),
        ('user-information', _AUDT_apdu_user_information),
        ])
    AUDT_apdu._ext = None
    
    _all_ = [
        uniDialogue_as_id,
        _UniDialoguePDU_unidialoguePDU,
        UniDialoguePDU,
        _AUDT_apdu_protocol_version,
        _AUDT_apdu_application_context_name,
        __AUDT_apdu_user_information__item_,
        _AUDT_apdu_user_information,
        AUDT_apdu,
    ]

init_modules(DialoguePDUs, EricssonMAP_Extensions, MAP_ApplicationContexts, MAP_BS_Code, MAP_CH_DataTypes, MAP_CallHandlingOperations, MAP_CommonDataTypes, MAP_DialogueInformation, MAP_ER_DataTypes, MAP_Errors, MAP_ExtensionDataTypes, MAP_Frame, MAP_GR_DataTypes, MAP_Group_Call_Operations, MAP_LCS_DataTypes, MAP_LocationServiceOperations, MAP_MS_DataTypes, MAP_MobileServiceOperations, MAP_OM_DataTypes, MAP_OperationAndMaintenanceOperations, MAP_Protocol, MAP_SM_DataTypes, MAP_SS_Code, MAP_SS_DataTypes, MAP_ShortMessageServiceOperations, MAP_SupplementaryServiceOperations, MAP_TS_Code, MAPv2_ApplicationContexts, MAPv2_BS_Code, MAPv2_CH_DataTypes, MAPv2_CallHandlingOperations, MAPv2_CommonDataTypes, MAPv2_DialogueInformation, MAPv2_ER_DataTypes, MAPv2_Errors, MAPv2_MS_DataTypes, MAPv2_MobileServiceOperations, MAPv2_OM_DataTypes, MAPv2_OperationAndMaintenanceOperations, MAPv2_Protocol, MAPv2_SM_DataTypes, MAPv2_SS_Code, MAPv2_SS_DataTypes, MAPv2_ShortMessageServiceOperations, MAPv2_SupplementaryServiceOperations, MAPv2_TS_Code, MAPv2v3_Application, MAPv2v3_Protocol, MobileDomainDefinitions, NokiaMAP_Extensions, Pycrate_TCAP_MAP_Dialogue, TCAP_MAP_Messages, Remote_Operations_Generic_ROS_PDUs, Remote_Operations_Information_Objects, TCAPMessages, UnidialoguePDUs)
