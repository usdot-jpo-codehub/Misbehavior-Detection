# -*- coding: UTF-8 -*-
# Code automatically generated by pycrate_asn1c

from pycrate_asn1rt.utils            import *
from pycrate_asn1rt.err              import *
from pycrate_asn1rt.glob             import make_GLOBAL, GLOBAL
from pycrate_asn1rt.dictobj          import ASN1Dict
from pycrate_asn1rt.refobj           import *
from pycrate_asn1rt.setobj           import *
from pycrate_asn1rt.asnobj_basic     import *
from pycrate_asn1rt.asnobj_str       import *
from pycrate_asn1rt.asnobj_construct import *
from pycrate_asn1rt.asnobj_class     import *
from pycrate_asn1rt.asnobj_ext       import *
from pycrate_asn1rt.init             import init_modules

class MAP_SS_Code:

    _name_  = 'MAP-SS-Code'
    _oid_   = [0, 4, 0, 0, 1, 3, 15, 16]
    
    _obj_ = [
        'SS-Code',
        'allSS',
        'allLineIdentificationSS',
        'clip',
        'clir',
        'colp',
        'colr',
        'mci',
        'allNameIdentificationSS',
        'cnap',
        'allForwardingSS',
        'cfu',
        'allCondForwardingSS',
        'cfb',
        'cfnry',
        'cfnrc',
        'cd',
        'allCallOfferingSS',
        'ect',
        'mah',
        'allCallCompletionSS',
        'cw',
        'hold',
        'ccbs-A',
        'ccbs-B',
        'mc',
        'allMultiPartySS',
        'multiPTY',
        'allCommunityOfInterest-SS',
        'cug',
        'allChargingSS',
        'aoci',
        'aocc',
        'allAdditionalInfoTransferSS',
        'uus1',
        'uus2',
        'uus3',
        'allBarringSS',
        'barringOfOutgoingCalls',
        'baoc',
        'boic',
        'boicExHC',
        'barringOfIncomingCalls',
        'baic',
        'bicRoam',
        'allPLMN-specificSS',
        'plmn-specificSS-1',
        'plmn-specificSS-2',
        'plmn-specificSS-3',
        'plmn-specificSS-4',
        'plmn-specificSS-5',
        'plmn-specificSS-6',
        'plmn-specificSS-7',
        'plmn-specificSS-8',
        'plmn-specificSS-9',
        'plmn-specificSS-A',
        'plmn-specificSS-B',
        'plmn-specificSS-C',
        'plmn-specificSS-D',
        'plmn-specificSS-E',
        'plmn-specificSS-F',
        'allCallPrioritySS',
        'emlpp',
        'allLCSPrivacyException',
        'universal',
        'callSessionRelated',
        'callSessionUnrelated',
        'plmnoperator',
        'serviceType',
        'allMOLR-SS',
        'basicSelfLocation',
        'autonomousSelfLocation',
        'transferToThirdParty',
        ]
    _type_ = [
        'SS-Code',
        ]
    _set_ = [
        ]
    _val_ = [
        'allSS',
        'allLineIdentificationSS',
        'clip',
        'clir',
        'colp',
        'colr',
        'mci',
        'allNameIdentificationSS',
        'cnap',
        'allForwardingSS',
        'cfu',
        'allCondForwardingSS',
        'cfb',
        'cfnry',
        'cfnrc',
        'cd',
        'allCallOfferingSS',
        'ect',
        'mah',
        'allCallCompletionSS',
        'cw',
        'hold',
        'ccbs-A',
        'ccbs-B',
        'mc',
        'allMultiPartySS',
        'multiPTY',
        'allCommunityOfInterest-SS',
        'cug',
        'allChargingSS',
        'aoci',
        'aocc',
        'allAdditionalInfoTransferSS',
        'uus1',
        'uus2',
        'uus3',
        'allBarringSS',
        'barringOfOutgoingCalls',
        'baoc',
        'boic',
        'boicExHC',
        'barringOfIncomingCalls',
        'baic',
        'bicRoam',
        'allPLMN-specificSS',
        'plmn-specificSS-1',
        'plmn-specificSS-2',
        'plmn-specificSS-3',
        'plmn-specificSS-4',
        'plmn-specificSS-5',
        'plmn-specificSS-6',
        'plmn-specificSS-7',
        'plmn-specificSS-8',
        'plmn-specificSS-9',
        'plmn-specificSS-A',
        'plmn-specificSS-B',
        'plmn-specificSS-C',
        'plmn-specificSS-D',
        'plmn-specificSS-E',
        'plmn-specificSS-F',
        'allCallPrioritySS',
        'emlpp',
        'allLCSPrivacyException',
        'universal',
        'callSessionRelated',
        'callSessionUnrelated',
        'plmnoperator',
        'serviceType',
        'allMOLR-SS',
        'basicSelfLocation',
        'autonomousSelfLocation',
        'transferToThirdParty',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< SS-Code >-----#
    SS_Code = OCT_STR(name='SS-Code', mode=MODE_TYPE)
    SS_Code._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< allSS >-----#
    allSS = OCT_STR(name='allSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allSS._val = b'\x00'
    
    #-----< allLineIdentificationSS >-----#
    allLineIdentificationSS = OCT_STR(name='allLineIdentificationSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allLineIdentificationSS._val = b'\x10'
    
    #-----< clip >-----#
    clip = OCT_STR(name='clip', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    clip._val = b'\x11'
    
    #-----< clir >-----#
    clir = OCT_STR(name='clir', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    clir._val = b'\x12'
    
    #-----< colp >-----#
    colp = OCT_STR(name='colp', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    colp._val = b'\x13'
    
    #-----< colr >-----#
    colr = OCT_STR(name='colr', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    colr._val = b'\x14'
    
    #-----< mci >-----#
    mci = OCT_STR(name='mci', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    mci._val = b'\x15'
    
    #-----< allNameIdentificationSS >-----#
    allNameIdentificationSS = OCT_STR(name='allNameIdentificationSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allNameIdentificationSS._val = b'\x18'
    
    #-----< cnap >-----#
    cnap = OCT_STR(name='cnap', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    cnap._val = b'\x19'
    
    #-----< allForwardingSS >-----#
    allForwardingSS = OCT_STR(name='allForwardingSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allForwardingSS._val = b' '
    
    #-----< cfu >-----#
    cfu = OCT_STR(name='cfu', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    cfu._val = b'!'
    
    #-----< allCondForwardingSS >-----#
    allCondForwardingSS = OCT_STR(name='allCondForwardingSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allCondForwardingSS._val = b'('
    
    #-----< cfb >-----#
    cfb = OCT_STR(name='cfb', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    cfb._val = b')'
    
    #-----< cfnry >-----#
    cfnry = OCT_STR(name='cfnry', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    cfnry._val = b'*'
    
    #-----< cfnrc >-----#
    cfnrc = OCT_STR(name='cfnrc', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    cfnrc._val = b'+'
    
    #-----< cd >-----#
    cd = OCT_STR(name='cd', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    cd._val = b'$'
    
    #-----< allCallOfferingSS >-----#
    allCallOfferingSS = OCT_STR(name='allCallOfferingSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allCallOfferingSS._val = b'0'
    
    #-----< ect >-----#
    ect = OCT_STR(name='ect', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    ect._val = b'1'
    
    #-----< mah >-----#
    mah = OCT_STR(name='mah', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    mah._val = b'2'
    
    #-----< allCallCompletionSS >-----#
    allCallCompletionSS = OCT_STR(name='allCallCompletionSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allCallCompletionSS._val = b'@'
    
    #-----< cw >-----#
    cw = OCT_STR(name='cw', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    cw._val = b'A'
    
    #-----< hold >-----#
    hold = OCT_STR(name='hold', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    hold._val = b'B'
    
    #-----< ccbs-A >-----#
    ccbs_A = OCT_STR(name='ccbs-A', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    ccbs_A._val = b'C'
    
    #-----< ccbs-B >-----#
    ccbs_B = OCT_STR(name='ccbs-B', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    ccbs_B._val = b'D'
    
    #-----< mc >-----#
    mc = OCT_STR(name='mc', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    mc._val = b'E'
    
    #-----< allMultiPartySS >-----#
    allMultiPartySS = OCT_STR(name='allMultiPartySS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allMultiPartySS._val = b'P'
    
    #-----< multiPTY >-----#
    multiPTY = OCT_STR(name='multiPTY', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    multiPTY._val = b'Q'
    
    #-----< allCommunityOfInterest-SS >-----#
    allCommunityOfInterest_SS = OCT_STR(name='allCommunityOfInterest-SS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allCommunityOfInterest_SS._val = b'`'
    
    #-----< cug >-----#
    cug = OCT_STR(name='cug', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    cug._val = b'a'
    
    #-----< allChargingSS >-----#
    allChargingSS = OCT_STR(name='allChargingSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allChargingSS._val = b'p'
    
    #-----< aoci >-----#
    aoci = OCT_STR(name='aoci', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    aoci._val = b'q'
    
    #-----< aocc >-----#
    aocc = OCT_STR(name='aocc', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    aocc._val = b'r'
    
    #-----< allAdditionalInfoTransferSS >-----#
    allAdditionalInfoTransferSS = OCT_STR(name='allAdditionalInfoTransferSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allAdditionalInfoTransferSS._val = b'\x80'
    
    #-----< uus1 >-----#
    uus1 = OCT_STR(name='uus1', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    uus1._val = b'\x81'
    
    #-----< uus2 >-----#
    uus2 = OCT_STR(name='uus2', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    uus2._val = b'\x82'
    
    #-----< uus3 >-----#
    uus3 = OCT_STR(name='uus3', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    uus3._val = b'\x83'
    
    #-----< allBarringSS >-----#
    allBarringSS = OCT_STR(name='allBarringSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allBarringSS._val = b'\x90'
    
    #-----< barringOfOutgoingCalls >-----#
    barringOfOutgoingCalls = OCT_STR(name='barringOfOutgoingCalls', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    barringOfOutgoingCalls._val = b'\x91'
    
    #-----< baoc >-----#
    baoc = OCT_STR(name='baoc', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    baoc._val = b'\x92'
    
    #-----< boic >-----#
    boic = OCT_STR(name='boic', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    boic._val = b'\x93'
    
    #-----< boicExHC >-----#
    boicExHC = OCT_STR(name='boicExHC', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    boicExHC._val = b'\x94'
    
    #-----< barringOfIncomingCalls >-----#
    barringOfIncomingCalls = OCT_STR(name='barringOfIncomingCalls', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    barringOfIncomingCalls._val = b'\x99'
    
    #-----< baic >-----#
    baic = OCT_STR(name='baic', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    baic._val = b'\x9a'
    
    #-----< bicRoam >-----#
    bicRoam = OCT_STR(name='bicRoam', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    bicRoam._val = b'\x9b'
    
    #-----< allPLMN-specificSS >-----#
    allPLMN_specificSS = OCT_STR(name='allPLMN-specificSS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allPLMN_specificSS._val = b'\xf0'
    
    #-----< plmn-specificSS-1 >-----#
    plmn_specificSS_1 = OCT_STR(name='plmn-specificSS-1', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_1._val = b'\xf1'
    
    #-----< plmn-specificSS-2 >-----#
    plmn_specificSS_2 = OCT_STR(name='plmn-specificSS-2', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_2._val = b'\xf2'
    
    #-----< plmn-specificSS-3 >-----#
    plmn_specificSS_3 = OCT_STR(name='plmn-specificSS-3', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_3._val = b'\xf3'
    
    #-----< plmn-specificSS-4 >-----#
    plmn_specificSS_4 = OCT_STR(name='plmn-specificSS-4', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_4._val = b'\xf4'
    
    #-----< plmn-specificSS-5 >-----#
    plmn_specificSS_5 = OCT_STR(name='plmn-specificSS-5', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_5._val = b'\xf5'
    
    #-----< plmn-specificSS-6 >-----#
    plmn_specificSS_6 = OCT_STR(name='plmn-specificSS-6', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_6._val = b'\xf6'
    
    #-----< plmn-specificSS-7 >-----#
    plmn_specificSS_7 = OCT_STR(name='plmn-specificSS-7', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_7._val = b'\xf7'
    
    #-----< plmn-specificSS-8 >-----#
    plmn_specificSS_8 = OCT_STR(name='plmn-specificSS-8', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_8._val = b'\xf8'
    
    #-----< plmn-specificSS-9 >-----#
    plmn_specificSS_9 = OCT_STR(name='plmn-specificSS-9', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_9._val = b'\xf9'
    
    #-----< plmn-specificSS-A >-----#
    plmn_specificSS_A = OCT_STR(name='plmn-specificSS-A', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_A._val = b'\xfa'
    
    #-----< plmn-specificSS-B >-----#
    plmn_specificSS_B = OCT_STR(name='plmn-specificSS-B', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_B._val = b'\xfb'
    
    #-----< plmn-specificSS-C >-----#
    plmn_specificSS_C = OCT_STR(name='plmn-specificSS-C', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_C._val = b'\xfc'
    
    #-----< plmn-specificSS-D >-----#
    plmn_specificSS_D = OCT_STR(name='plmn-specificSS-D', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_D._val = b'\xfd'
    
    #-----< plmn-specificSS-E >-----#
    plmn_specificSS_E = OCT_STR(name='plmn-specificSS-E', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_E._val = b'\xfe'
    
    #-----< plmn-specificSS-F >-----#
    plmn_specificSS_F = OCT_STR(name='plmn-specificSS-F', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmn_specificSS_F._val = b'\xff'
    
    #-----< allCallPrioritySS >-----#
    allCallPrioritySS = OCT_STR(name='allCallPrioritySS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allCallPrioritySS._val = b'\xa0'
    
    #-----< emlpp >-----#
    emlpp = OCT_STR(name='emlpp', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    emlpp._val = b'\xa1'
    
    #-----< allLCSPrivacyException >-----#
    allLCSPrivacyException = OCT_STR(name='allLCSPrivacyException', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allLCSPrivacyException._val = b'\xb0'
    
    #-----< universal >-----#
    universal = OCT_STR(name='universal', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    universal._val = b'\xb1'
    
    #-----< callSessionRelated >-----#
    callSessionRelated = OCT_STR(name='callSessionRelated', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    callSessionRelated._val = b'\xb2'
    
    #-----< callSessionUnrelated >-----#
    callSessionUnrelated = OCT_STR(name='callSessionUnrelated', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    callSessionUnrelated._val = b'\xb3'
    
    #-----< plmnoperator >-----#
    plmnoperator = OCT_STR(name='plmnoperator', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    plmnoperator._val = b'\xb4'
    
    #-----< serviceType >-----#
    serviceType = OCT_STR(name='serviceType', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    serviceType._val = b'\xb5'
    
    #-----< allMOLR-SS >-----#
    allMOLR_SS = OCT_STR(name='allMOLR-SS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    allMOLR_SS._val = b'\xc0'
    
    #-----< basicSelfLocation >-----#
    basicSelfLocation = OCT_STR(name='basicSelfLocation', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    basicSelfLocation._val = b'\xc1'
    
    #-----< autonomousSelfLocation >-----#
    autonomousSelfLocation = OCT_STR(name='autonomousSelfLocation', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    autonomousSelfLocation._val = b'\xc2'
    
    #-----< transferToThirdParty >-----#
    transferToThirdParty = OCT_STR(name='transferToThirdParty', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    transferToThirdParty._val = b'\xc3'
    
    _all_ = [
        SS_Code,
        allSS,
        allLineIdentificationSS,
        clip,
        clir,
        colp,
        colr,
        mci,
        allNameIdentificationSS,
        cnap,
        allForwardingSS,
        cfu,
        allCondForwardingSS,
        cfb,
        cfnry,
        cfnrc,
        cd,
        allCallOfferingSS,
        ect,
        mah,
        allCallCompletionSS,
        cw,
        hold,
        ccbs_A,
        ccbs_B,
        mc,
        allMultiPartySS,
        multiPTY,
        allCommunityOfInterest_SS,
        cug,
        allChargingSS,
        aoci,
        aocc,
        allAdditionalInfoTransferSS,
        uus1,
        uus2,
        uus3,
        allBarringSS,
        barringOfOutgoingCalls,
        baoc,
        boic,
        boicExHC,
        barringOfIncomingCalls,
        baic,
        bicRoam,
        allPLMN_specificSS,
        plmn_specificSS_1,
        plmn_specificSS_2,
        plmn_specificSS_3,
        plmn_specificSS_4,
        plmn_specificSS_5,
        plmn_specificSS_6,
        plmn_specificSS_7,
        plmn_specificSS_8,
        plmn_specificSS_9,
        plmn_specificSS_A,
        plmn_specificSS_B,
        plmn_specificSS_C,
        plmn_specificSS_D,
        plmn_specificSS_E,
        plmn_specificSS_F,
        allCallPrioritySS,
        emlpp,
        allLCSPrivacyException,
        universal,
        callSessionRelated,
        callSessionUnrelated,
        plmnoperator,
        serviceType,
        allMOLR_SS,
        basicSelfLocation,
        autonomousSelfLocation,
        transferToThirdParty,
    ]

class MAP_TS_Code:

    _name_  = 'MAP-TS-Code'
    _oid_   = [0, 4, 0, 0, 1, 3, 19, 16]
    
    _obj_ = [
        'TeleserviceCode',
        'Ext-TeleserviceCode',
        'allTeleservices',
        'allSpeechTransmissionServices',
        'telephony',
        'emergencyCalls',
        'allShortMessageServices',
        'shortMessageMT-PP',
        'shortMessageMO-PP',
        'allFacsimileTransmissionServices',
        'facsimileGroup3AndAlterSpeech',
        'automaticFacsimileGroup3',
        'facsimileGroup4',
        'allDataTeleservices',
        'allTeleservices-ExeptSMS',
        'allVoiceGroupCallServices',
        'voiceGroupCall',
        'voiceBroadcastCall',
        'allPLMN-specificTS',
        'plmn-specificTS-1',
        'plmn-specificTS-2',
        'plmn-specificTS-3',
        'plmn-specificTS-4',
        'plmn-specificTS-5',
        'plmn-specificTS-6',
        'plmn-specificTS-7',
        'plmn-specificTS-8',
        'plmn-specificTS-9',
        'plmn-specificTS-A',
        'plmn-specificTS-B',
        'plmn-specificTS-C',
        'plmn-specificTS-D',
        'plmn-specificTS-E',
        'plmn-specificTS-F',
        ]
    _type_ = [
        'TeleserviceCode',
        'Ext-TeleserviceCode',
        ]
    _set_ = [
        ]
    _val_ = [
        'allTeleservices',
        'allSpeechTransmissionServices',
        'telephony',
        'emergencyCalls',
        'allShortMessageServices',
        'shortMessageMT-PP',
        'shortMessageMO-PP',
        'allFacsimileTransmissionServices',
        'facsimileGroup3AndAlterSpeech',
        'automaticFacsimileGroup3',
        'facsimileGroup4',
        'allDataTeleservices',
        'allTeleservices-ExeptSMS',
        'allVoiceGroupCallServices',
        'voiceGroupCall',
        'voiceBroadcastCall',
        'allPLMN-specificTS',
        'plmn-specificTS-1',
        'plmn-specificTS-2',
        'plmn-specificTS-3',
        'plmn-specificTS-4',
        'plmn-specificTS-5',
        'plmn-specificTS-6',
        'plmn-specificTS-7',
        'plmn-specificTS-8',
        'plmn-specificTS-9',
        'plmn-specificTS-A',
        'plmn-specificTS-B',
        'plmn-specificTS-C',
        'plmn-specificTS-D',
        'plmn-specificTS-E',
        'plmn-specificTS-F',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< TeleserviceCode >-----#
    TeleserviceCode = OCT_STR(name='TeleserviceCode', mode=MODE_TYPE)
    TeleserviceCode._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< Ext-TeleserviceCode >-----#
    Ext_TeleserviceCode = OCT_STR(name='Ext-TeleserviceCode', mode=MODE_TYPE)
    Ext_TeleserviceCode._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< allTeleservices >-----#
    allTeleservices = OCT_STR(name='allTeleservices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    allTeleservices._val = b'\x00'
    
    #-----< allSpeechTransmissionServices >-----#
    allSpeechTransmissionServices = OCT_STR(name='allSpeechTransmissionServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    allSpeechTransmissionServices._val = b'\x10'
    
    #-----< telephony >-----#
    telephony = OCT_STR(name='telephony', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    telephony._val = b'\x11'
    
    #-----< emergencyCalls >-----#
    emergencyCalls = OCT_STR(name='emergencyCalls', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    emergencyCalls._val = b'\x12'
    
    #-----< allShortMessageServices >-----#
    allShortMessageServices = OCT_STR(name='allShortMessageServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    allShortMessageServices._val = b' '
    
    #-----< shortMessageMT-PP >-----#
    shortMessageMT_PP = OCT_STR(name='shortMessageMT-PP', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    shortMessageMT_PP._val = b'!'
    
    #-----< shortMessageMO-PP >-----#
    shortMessageMO_PP = OCT_STR(name='shortMessageMO-PP', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    shortMessageMO_PP._val = b'"'
    
    #-----< allFacsimileTransmissionServices >-----#
    allFacsimileTransmissionServices = OCT_STR(name='allFacsimileTransmissionServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    allFacsimileTransmissionServices._val = b'`'
    
    #-----< facsimileGroup3AndAlterSpeech >-----#
    facsimileGroup3AndAlterSpeech = OCT_STR(name='facsimileGroup3AndAlterSpeech', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    facsimileGroup3AndAlterSpeech._val = b'a'
    
    #-----< automaticFacsimileGroup3 >-----#
    automaticFacsimileGroup3 = OCT_STR(name='automaticFacsimileGroup3', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    automaticFacsimileGroup3._val = b'b'
    
    #-----< facsimileGroup4 >-----#
    facsimileGroup4 = OCT_STR(name='facsimileGroup4', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    facsimileGroup4._val = b'c'
    
    #-----< allDataTeleservices >-----#
    allDataTeleservices = OCT_STR(name='allDataTeleservices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    allDataTeleservices._val = b'p'
    
    #-----< allTeleservices-ExeptSMS >-----#
    allTeleservices_ExeptSMS = OCT_STR(name='allTeleservices-ExeptSMS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    allTeleservices_ExeptSMS._val = b'\x80'
    
    #-----< allVoiceGroupCallServices >-----#
    allVoiceGroupCallServices = OCT_STR(name='allVoiceGroupCallServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    allVoiceGroupCallServices._val = b'\x90'
    
    #-----< voiceGroupCall >-----#
    voiceGroupCall = OCT_STR(name='voiceGroupCall', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    voiceGroupCall._val = b'\x91'
    
    #-----< voiceBroadcastCall >-----#
    voiceBroadcastCall = OCT_STR(name='voiceBroadcastCall', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    voiceBroadcastCall._val = b'\x92'
    
    #-----< allPLMN-specificTS >-----#
    allPLMN_specificTS = OCT_STR(name='allPLMN-specificTS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    allPLMN_specificTS._val = b'\xd0'
    
    #-----< plmn-specificTS-1 >-----#
    plmn_specificTS_1 = OCT_STR(name='plmn-specificTS-1', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_1._val = b'\xd1'
    
    #-----< plmn-specificTS-2 >-----#
    plmn_specificTS_2 = OCT_STR(name='plmn-specificTS-2', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_2._val = b'\xd2'
    
    #-----< plmn-specificTS-3 >-----#
    plmn_specificTS_3 = OCT_STR(name='plmn-specificTS-3', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_3._val = b'\xd3'
    
    #-----< plmn-specificTS-4 >-----#
    plmn_specificTS_4 = OCT_STR(name='plmn-specificTS-4', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_4._val = b'\xd4'
    
    #-----< plmn-specificTS-5 >-----#
    plmn_specificTS_5 = OCT_STR(name='plmn-specificTS-5', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_5._val = b'\xd5'
    
    #-----< plmn-specificTS-6 >-----#
    plmn_specificTS_6 = OCT_STR(name='plmn-specificTS-6', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_6._val = b'\xd6'
    
    #-----< plmn-specificTS-7 >-----#
    plmn_specificTS_7 = OCT_STR(name='plmn-specificTS-7', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_7._val = b'\xd7'
    
    #-----< plmn-specificTS-8 >-----#
    plmn_specificTS_8 = OCT_STR(name='plmn-specificTS-8', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_8._val = b'\xd8'
    
    #-----< plmn-specificTS-9 >-----#
    plmn_specificTS_9 = OCT_STR(name='plmn-specificTS-9', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_9._val = b'\xd9'
    
    #-----< plmn-specificTS-A >-----#
    plmn_specificTS_A = OCT_STR(name='plmn-specificTS-A', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_A._val = b'\xda'
    
    #-----< plmn-specificTS-B >-----#
    plmn_specificTS_B = OCT_STR(name='plmn-specificTS-B', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_B._val = b'\xdb'
    
    #-----< plmn-specificTS-C >-----#
    plmn_specificTS_C = OCT_STR(name='plmn-specificTS-C', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_C._val = b'\xdc'
    
    #-----< plmn-specificTS-D >-----#
    plmn_specificTS_D = OCT_STR(name='plmn-specificTS-D', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_D._val = b'\xdd'
    
    #-----< plmn-specificTS-E >-----#
    plmn_specificTS_E = OCT_STR(name='plmn-specificTS-E', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_E._val = b'\xde'
    
    #-----< plmn-specificTS-F >-----#
    plmn_specificTS_F = OCT_STR(name='plmn-specificTS-F', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    plmn_specificTS_F._val = b'\xdf'
    
    _all_ = [
        TeleserviceCode,
        Ext_TeleserviceCode,
        allTeleservices,
        allSpeechTransmissionServices,
        telephony,
        emergencyCalls,
        allShortMessageServices,
        shortMessageMT_PP,
        shortMessageMO_PP,
        allFacsimileTransmissionServices,
        facsimileGroup3AndAlterSpeech,
        automaticFacsimileGroup3,
        facsimileGroup4,
        allDataTeleservices,
        allTeleservices_ExeptSMS,
        allVoiceGroupCallServices,
        voiceGroupCall,
        voiceBroadcastCall,
        allPLMN_specificTS,
        plmn_specificTS_1,
        plmn_specificTS_2,
        plmn_specificTS_3,
        plmn_specificTS_4,
        plmn_specificTS_5,
        plmn_specificTS_6,
        plmn_specificTS_7,
        plmn_specificTS_8,
        plmn_specificTS_9,
        plmn_specificTS_A,
        plmn_specificTS_B,
        plmn_specificTS_C,
        plmn_specificTS_D,
        plmn_specificTS_E,
        plmn_specificTS_F,
    ]

class MAP_BS_Code:

    _name_  = 'MAP-BS-Code'
    _oid_   = [0, 4, 0, 0, 1, 3, 20, 16]
    
    _obj_ = [
        'BearerServiceCode',
        'Ext-BearerServiceCode',
        'allBearerServices',
        'allDataCDA-Services',
        'dataCDA-300bps',
        'dataCDA-1200bps',
        'dataCDA-1200-75bps',
        'dataCDA-2400bps',
        'dataCDA-4800bps',
        'dataCDA-9600bps',
        'general-dataCDA',
        'allDataCDS-Services',
        'dataCDS-1200bps',
        'dataCDS-2400bps',
        'dataCDS-4800bps',
        'dataCDS-9600bps',
        'general-dataCDS',
        'allPadAccessCA-Services',
        'padAccessCA-300bps',
        'padAccessCA-1200bps',
        'padAccessCA-1200-75bps',
        'padAccessCA-2400bps',
        'padAccessCA-4800bps',
        'padAccessCA-9600bps',
        'general-padAccessCA',
        'allDataPDS-Services',
        'dataPDS-2400bps',
        'dataPDS-4800bps',
        'dataPDS-9600bps',
        'general-dataPDS',
        'allAlternateSpeech-DataCDA',
        'allAlternateSpeech-DataCDS',
        'allSpeechFollowedByDataCDA',
        'allSpeechFollowedByDataCDS',
        'allDataCircuitAsynchronous',
        'allAsynchronousServices',
        'allDataCircuitSynchronous',
        'allSynchronousServices',
        'allPLMN-specificBS',
        'plmn-specificBS-1',
        'plmn-specificBS-2',
        'plmn-specificBS-3',
        'plmn-specificBS-4',
        'plmn-specificBS-5',
        'plmn-specificBS-6',
        'plmn-specificBS-7',
        'plmn-specificBS-8',
        'plmn-specificBS-9',
        'plmn-specificBS-A',
        'plmn-specificBS-B',
        'plmn-specificBS-C',
        'plmn-specificBS-D',
        'plmn-specificBS-E',
        'plmn-specificBS-F',
        ]
    _type_ = [
        'BearerServiceCode',
        'Ext-BearerServiceCode',
        ]
    _set_ = [
        ]
    _val_ = [
        'allBearerServices',
        'allDataCDA-Services',
        'dataCDA-300bps',
        'dataCDA-1200bps',
        'dataCDA-1200-75bps',
        'dataCDA-2400bps',
        'dataCDA-4800bps',
        'dataCDA-9600bps',
        'general-dataCDA',
        'allDataCDS-Services',
        'dataCDS-1200bps',
        'dataCDS-2400bps',
        'dataCDS-4800bps',
        'dataCDS-9600bps',
        'general-dataCDS',
        'allPadAccessCA-Services',
        'padAccessCA-300bps',
        'padAccessCA-1200bps',
        'padAccessCA-1200-75bps',
        'padAccessCA-2400bps',
        'padAccessCA-4800bps',
        'padAccessCA-9600bps',
        'general-padAccessCA',
        'allDataPDS-Services',
        'dataPDS-2400bps',
        'dataPDS-4800bps',
        'dataPDS-9600bps',
        'general-dataPDS',
        'allAlternateSpeech-DataCDA',
        'allAlternateSpeech-DataCDS',
        'allSpeechFollowedByDataCDA',
        'allSpeechFollowedByDataCDS',
        'allDataCircuitAsynchronous',
        'allAsynchronousServices',
        'allDataCircuitSynchronous',
        'allSynchronousServices',
        'allPLMN-specificBS',
        'plmn-specificBS-1',
        'plmn-specificBS-2',
        'plmn-specificBS-3',
        'plmn-specificBS-4',
        'plmn-specificBS-5',
        'plmn-specificBS-6',
        'plmn-specificBS-7',
        'plmn-specificBS-8',
        'plmn-specificBS-9',
        'plmn-specificBS-A',
        'plmn-specificBS-B',
        'plmn-specificBS-C',
        'plmn-specificBS-D',
        'plmn-specificBS-E',
        'plmn-specificBS-F',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< BearerServiceCode >-----#
    BearerServiceCode = OCT_STR(name='BearerServiceCode', mode=MODE_TYPE)
    BearerServiceCode._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< Ext-BearerServiceCode >-----#
    Ext_BearerServiceCode = OCT_STR(name='Ext-BearerServiceCode', mode=MODE_TYPE)
    Ext_BearerServiceCode._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< allBearerServices >-----#
    allBearerServices = OCT_STR(name='allBearerServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allBearerServices._val = b'\x00'
    
    #-----< allDataCDA-Services >-----#
    allDataCDA_Services = OCT_STR(name='allDataCDA-Services', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allDataCDA_Services._val = b'\x10'
    
    #-----< dataCDA-300bps >-----#
    dataCDA_300bps = OCT_STR(name='dataCDA-300bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDA_300bps._val = b'\x11'
    
    #-----< dataCDA-1200bps >-----#
    dataCDA_1200bps = OCT_STR(name='dataCDA-1200bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDA_1200bps._val = b'\x12'
    
    #-----< dataCDA-1200-75bps >-----#
    dataCDA_1200_75bps = OCT_STR(name='dataCDA-1200-75bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDA_1200_75bps._val = b'\x13'
    
    #-----< dataCDA-2400bps >-----#
    dataCDA_2400bps = OCT_STR(name='dataCDA-2400bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDA_2400bps._val = b'\x14'
    
    #-----< dataCDA-4800bps >-----#
    dataCDA_4800bps = OCT_STR(name='dataCDA-4800bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDA_4800bps._val = b'\x15'
    
    #-----< dataCDA-9600bps >-----#
    dataCDA_9600bps = OCT_STR(name='dataCDA-9600bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDA_9600bps._val = b'\x16'
    
    #-----< general-dataCDA >-----#
    general_dataCDA = OCT_STR(name='general-dataCDA', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    general_dataCDA._val = b'\x17'
    
    #-----< allDataCDS-Services >-----#
    allDataCDS_Services = OCT_STR(name='allDataCDS-Services', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allDataCDS_Services._val = b'\x18'
    
    #-----< dataCDS-1200bps >-----#
    dataCDS_1200bps = OCT_STR(name='dataCDS-1200bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDS_1200bps._val = b'\x1a'
    
    #-----< dataCDS-2400bps >-----#
    dataCDS_2400bps = OCT_STR(name='dataCDS-2400bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDS_2400bps._val = b'\x1c'
    
    #-----< dataCDS-4800bps >-----#
    dataCDS_4800bps = OCT_STR(name='dataCDS-4800bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDS_4800bps._val = b'\x1d'
    
    #-----< dataCDS-9600bps >-----#
    dataCDS_9600bps = OCT_STR(name='dataCDS-9600bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataCDS_9600bps._val = b'\x1e'
    
    #-----< general-dataCDS >-----#
    general_dataCDS = OCT_STR(name='general-dataCDS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    general_dataCDS._val = b'\x1f'
    
    #-----< allPadAccessCA-Services >-----#
    allPadAccessCA_Services = OCT_STR(name='allPadAccessCA-Services', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allPadAccessCA_Services._val = b' '
    
    #-----< padAccessCA-300bps >-----#
    padAccessCA_300bps = OCT_STR(name='padAccessCA-300bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    padAccessCA_300bps._val = b'!'
    
    #-----< padAccessCA-1200bps >-----#
    padAccessCA_1200bps = OCT_STR(name='padAccessCA-1200bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    padAccessCA_1200bps._val = b'"'
    
    #-----< padAccessCA-1200-75bps >-----#
    padAccessCA_1200_75bps = OCT_STR(name='padAccessCA-1200-75bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    padAccessCA_1200_75bps._val = b'#'
    
    #-----< padAccessCA-2400bps >-----#
    padAccessCA_2400bps = OCT_STR(name='padAccessCA-2400bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    padAccessCA_2400bps._val = b'$'
    
    #-----< padAccessCA-4800bps >-----#
    padAccessCA_4800bps = OCT_STR(name='padAccessCA-4800bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    padAccessCA_4800bps._val = b'%'
    
    #-----< padAccessCA-9600bps >-----#
    padAccessCA_9600bps = OCT_STR(name='padAccessCA-9600bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    padAccessCA_9600bps._val = b'&'
    
    #-----< general-padAccessCA >-----#
    general_padAccessCA = OCT_STR(name='general-padAccessCA', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    general_padAccessCA._val = b"'"
    
    #-----< allDataPDS-Services >-----#
    allDataPDS_Services = OCT_STR(name='allDataPDS-Services', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allDataPDS_Services._val = b'('
    
    #-----< dataPDS-2400bps >-----#
    dataPDS_2400bps = OCT_STR(name='dataPDS-2400bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataPDS_2400bps._val = b','
    
    #-----< dataPDS-4800bps >-----#
    dataPDS_4800bps = OCT_STR(name='dataPDS-4800bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataPDS_4800bps._val = b'-'
    
    #-----< dataPDS-9600bps >-----#
    dataPDS_9600bps = OCT_STR(name='dataPDS-9600bps', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    dataPDS_9600bps._val = b'.'
    
    #-----< general-dataPDS >-----#
    general_dataPDS = OCT_STR(name='general-dataPDS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    general_dataPDS._val = b'/'
    
    #-----< allAlternateSpeech-DataCDA >-----#
    allAlternateSpeech_DataCDA = OCT_STR(name='allAlternateSpeech-DataCDA', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allAlternateSpeech_DataCDA._val = b'0'
    
    #-----< allAlternateSpeech-DataCDS >-----#
    allAlternateSpeech_DataCDS = OCT_STR(name='allAlternateSpeech-DataCDS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allAlternateSpeech_DataCDS._val = b'8'
    
    #-----< allSpeechFollowedByDataCDA >-----#
    allSpeechFollowedByDataCDA = OCT_STR(name='allSpeechFollowedByDataCDA', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allSpeechFollowedByDataCDA._val = b'@'
    
    #-----< allSpeechFollowedByDataCDS >-----#
    allSpeechFollowedByDataCDS = OCT_STR(name='allSpeechFollowedByDataCDS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allSpeechFollowedByDataCDS._val = b'H'
    
    #-----< allDataCircuitAsynchronous >-----#
    allDataCircuitAsynchronous = OCT_STR(name='allDataCircuitAsynchronous', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allDataCircuitAsynchronous._val = b'P'
    
    #-----< allAsynchronousServices >-----#
    allAsynchronousServices = OCT_STR(name='allAsynchronousServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allAsynchronousServices._val = b'`'
    
    #-----< allDataCircuitSynchronous >-----#
    allDataCircuitSynchronous = OCT_STR(name='allDataCircuitSynchronous', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allDataCircuitSynchronous._val = b'X'
    
    #-----< allSynchronousServices >-----#
    allSynchronousServices = OCT_STR(name='allSynchronousServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allSynchronousServices._val = b'h'
    
    #-----< allPLMN-specificBS >-----#
    allPLMN_specificBS = OCT_STR(name='allPLMN-specificBS', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    allPLMN_specificBS._val = b'\xd0'
    
    #-----< plmn-specificBS-1 >-----#
    plmn_specificBS_1 = OCT_STR(name='plmn-specificBS-1', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_1._val = b'\xd1'
    
    #-----< plmn-specificBS-2 >-----#
    plmn_specificBS_2 = OCT_STR(name='plmn-specificBS-2', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_2._val = b'\xd2'
    
    #-----< plmn-specificBS-3 >-----#
    plmn_specificBS_3 = OCT_STR(name='plmn-specificBS-3', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_3._val = b'\xd3'
    
    #-----< plmn-specificBS-4 >-----#
    plmn_specificBS_4 = OCT_STR(name='plmn-specificBS-4', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_4._val = b'\xd4'
    
    #-----< plmn-specificBS-5 >-----#
    plmn_specificBS_5 = OCT_STR(name='plmn-specificBS-5', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_5._val = b'\xd5'
    
    #-----< plmn-specificBS-6 >-----#
    plmn_specificBS_6 = OCT_STR(name='plmn-specificBS-6', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_6._val = b'\xd6'
    
    #-----< plmn-specificBS-7 >-----#
    plmn_specificBS_7 = OCT_STR(name='plmn-specificBS-7', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_7._val = b'\xd7'
    
    #-----< plmn-specificBS-8 >-----#
    plmn_specificBS_8 = OCT_STR(name='plmn-specificBS-8', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_8._val = b'\xd8'
    
    #-----< plmn-specificBS-9 >-----#
    plmn_specificBS_9 = OCT_STR(name='plmn-specificBS-9', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_9._val = b'\xd9'
    
    #-----< plmn-specificBS-A >-----#
    plmn_specificBS_A = OCT_STR(name='plmn-specificBS-A', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_A._val = b'\xda'
    
    #-----< plmn-specificBS-B >-----#
    plmn_specificBS_B = OCT_STR(name='plmn-specificBS-B', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_B._val = b'\xdb'
    
    #-----< plmn-specificBS-C >-----#
    plmn_specificBS_C = OCT_STR(name='plmn-specificBS-C', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_C._val = b'\xdc'
    
    #-----< plmn-specificBS-D >-----#
    plmn_specificBS_D = OCT_STR(name='plmn-specificBS-D', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_D._val = b'\xdd'
    
    #-----< plmn-specificBS-E >-----#
    plmn_specificBS_E = OCT_STR(name='plmn-specificBS-E', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_E._val = b'\xde'
    
    #-----< plmn-specificBS-F >-----#
    plmn_specificBS_F = OCT_STR(name='plmn-specificBS-F', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    plmn_specificBS_F._val = b'\xdf'
    
    _all_ = [
        BearerServiceCode,
        Ext_BearerServiceCode,
        allBearerServices,
        allDataCDA_Services,
        dataCDA_300bps,
        dataCDA_1200bps,
        dataCDA_1200_75bps,
        dataCDA_2400bps,
        dataCDA_4800bps,
        dataCDA_9600bps,
        general_dataCDA,
        allDataCDS_Services,
        dataCDS_1200bps,
        dataCDS_2400bps,
        dataCDS_4800bps,
        dataCDS_9600bps,
        general_dataCDS,
        allPadAccessCA_Services,
        padAccessCA_300bps,
        padAccessCA_1200bps,
        padAccessCA_1200_75bps,
        padAccessCA_2400bps,
        padAccessCA_4800bps,
        padAccessCA_9600bps,
        general_padAccessCA,
        allDataPDS_Services,
        dataPDS_2400bps,
        dataPDS_4800bps,
        dataPDS_9600bps,
        general_dataPDS,
        allAlternateSpeech_DataCDA,
        allAlternateSpeech_DataCDS,
        allSpeechFollowedByDataCDA,
        allSpeechFollowedByDataCDS,
        allDataCircuitAsynchronous,
        allAsynchronousServices,
        allDataCircuitSynchronous,
        allSynchronousServices,
        allPLMN_specificBS,
        plmn_specificBS_1,
        plmn_specificBS_2,
        plmn_specificBS_3,
        plmn_specificBS_4,
        plmn_specificBS_5,
        plmn_specificBS_6,
        plmn_specificBS_7,
        plmn_specificBS_8,
        plmn_specificBS_9,
        plmn_specificBS_A,
        plmn_specificBS_B,
        plmn_specificBS_C,
        plmn_specificBS_D,
        plmn_specificBS_E,
        plmn_specificBS_F,
    ]

class MAP_CommonDataTypes:

    _name_  = 'MAP-CommonDataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 18, 16]
    
    _obj_ = [
        'TBCD-STRING',
        'DiameterIdentity',
        'AddressString',
        'maxAddressLength',
        'ISDN-AddressString',
        'maxISDN-AddressLength',
        'FTN-AddressString',
        'maxFTN-AddressLength',
        'ISDN-SubaddressString',
        'maxISDN-SubaddressLength',
        'ExternalSignalInfo',
        'SignalInfo',
        'maxSignalInfoLength',
        'ProtocolId',
        'Ext-ExternalSignalInfo',
        'Ext-ProtocolId',
        'AccessNetworkSignalInfo',
        'LongSignalInfo',
        'maxLongSignalInfoLength',
        'AccessNetworkProtocolId',
        'AlertingPattern',
        'alertingLevel-0',
        'alertingLevel-1',
        'alertingLevel-2',
        'alertingCategory-1',
        'alertingCategory-2',
        'alertingCategory-3',
        'alertingCategory-4',
        'alertingCategory-5',
        'GSN-Address',
        'Time',
        'IMSI',
        'Identity',
        'IMSI-WithLMSI',
        'ASCI-CallReference',
        'TMSI',
        'SubscriberId',
        'IMEI',
        'HLR-Id',
        'HLR-List',
        'maxNumOfHLR-Id',
        'LMSI',
        'GlobalCellId',
        'NetworkResource',
        'AdditionalNetworkResource',
        'NAEA-PreferredCI',
        'NAEA-CIC',
        'SubscriberIdentity',
        'LCSClientExternalID',
        'LCSClientInternalID',
        'LCSServiceTypeID',
        'emergencyServices',
        'emergencyAlertServices',
        'personTracking',
        'fleetManagement',
        'assetManagement',
        'trafficCongestionReporting',
        'roadsideAssistance',
        'routingToNearestCommercialEnterprise',
        'navigation',
        'citySightseeing',
        'localizedAdvertising',
        'mobileYellowPages',
        'trafficAndPublicTransportationInfo',
        'weather',
        'assetAndServiceFinding',
        'gaming',
        'findYourFriend',
        'dating',
        'chatting',
        'routeFinding',
        'whereAmI',
        'serv64',
        'serv65',
        'serv66',
        'serv67',
        'serv68',
        'serv69',
        'serv70',
        'serv71',
        'serv72',
        'serv73',
        'serv74',
        'serv75',
        'serv76',
        'serv77',
        'serv78',
        'serv79',
        'serv80',
        'serv81',
        'serv82',
        'serv83',
        'serv84',
        'serv85',
        'serv86',
        'serv87',
        'serv88',
        'serv89',
        'serv90',
        'serv91',
        'serv92',
        'serv93',
        'serv94',
        'serv95',
        'serv96',
        'serv97',
        'serv98',
        'serv99',
        'serv100',
        'serv101',
        'serv102',
        'serv103',
        'serv104',
        'serv105',
        'serv106',
        'serv107',
        'serv108',
        'serv109',
        'serv110',
        'serv111',
        'serv112',
        'serv113',
        'serv114',
        'serv115',
        'serv116',
        'serv117',
        'serv118',
        'serv119',
        'serv120',
        'serv121',
        'serv122',
        'serv123',
        'serv124',
        'serv125',
        'serv126',
        'serv127',
        'PLMN-Id',
        'E-UTRAN-CGI',
        'TA-Id',
        'RAIdentity',
        'NetworkNodeDiameterAddress',
        'CellGlobalIdOrServiceAreaIdOrLAI',
        'CellGlobalIdOrServiceAreaIdFixedLength',
        'LAIFixedLength',
        'BasicServiceCode',
        'Ext-BasicServiceCode',
        'EMLPP-Info',
        'EMLPP-Priority',
        'priorityLevelA',
        'priorityLevelB',
        'priorityLevel0',
        'priorityLevel1',
        'priorityLevel2',
        'priorityLevel3',
        'priorityLevel4',
        'MC-SS-Info',
        'MaxMC-Bearers',
        'MC-Bearers',
        'maxNumOfMC-Bearers',
        'Ext-SS-Status',
        'AgeOfLocationInformation',
        ]
    _type_ = [
        'TBCD-STRING',
        'DiameterIdentity',
        'AddressString',
        'ISDN-AddressString',
        'FTN-AddressString',
        'ISDN-SubaddressString',
        'ExternalSignalInfo',
        'SignalInfo',
        'ProtocolId',
        'Ext-ExternalSignalInfo',
        'Ext-ProtocolId',
        'AccessNetworkSignalInfo',
        'LongSignalInfo',
        'AccessNetworkProtocolId',
        'AlertingPattern',
        'GSN-Address',
        'Time',
        'IMSI',
        'Identity',
        'IMSI-WithLMSI',
        'ASCI-CallReference',
        'TMSI',
        'SubscriberId',
        'IMEI',
        'HLR-Id',
        'HLR-List',
        'LMSI',
        'GlobalCellId',
        'NetworkResource',
        'AdditionalNetworkResource',
        'NAEA-PreferredCI',
        'NAEA-CIC',
        'SubscriberIdentity',
        'LCSClientExternalID',
        'LCSClientInternalID',
        'LCSServiceTypeID',
        'PLMN-Id',
        'E-UTRAN-CGI',
        'TA-Id',
        'RAIdentity',
        'NetworkNodeDiameterAddress',
        'CellGlobalIdOrServiceAreaIdOrLAI',
        'CellGlobalIdOrServiceAreaIdFixedLength',
        'LAIFixedLength',
        'BasicServiceCode',
        'Ext-BasicServiceCode',
        'EMLPP-Info',
        'EMLPP-Priority',
        'MC-SS-Info',
        'MaxMC-Bearers',
        'MC-Bearers',
        'Ext-SS-Status',
        'AgeOfLocationInformation',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxAddressLength',
        'maxISDN-AddressLength',
        'maxFTN-AddressLength',
        'maxISDN-SubaddressLength',
        'maxSignalInfoLength',
        'maxLongSignalInfoLength',
        'alertingLevel-0',
        'alertingLevel-1',
        'alertingLevel-2',
        'alertingCategory-1',
        'alertingCategory-2',
        'alertingCategory-3',
        'alertingCategory-4',
        'alertingCategory-5',
        'maxNumOfHLR-Id',
        'emergencyServices',
        'emergencyAlertServices',
        'personTracking',
        'fleetManagement',
        'assetManagement',
        'trafficCongestionReporting',
        'roadsideAssistance',
        'routingToNearestCommercialEnterprise',
        'navigation',
        'citySightseeing',
        'localizedAdvertising',
        'mobileYellowPages',
        'trafficAndPublicTransportationInfo',
        'weather',
        'assetAndServiceFinding',
        'gaming',
        'findYourFriend',
        'dating',
        'chatting',
        'routeFinding',
        'whereAmI',
        'serv64',
        'serv65',
        'serv66',
        'serv67',
        'serv68',
        'serv69',
        'serv70',
        'serv71',
        'serv72',
        'serv73',
        'serv74',
        'serv75',
        'serv76',
        'serv77',
        'serv78',
        'serv79',
        'serv80',
        'serv81',
        'serv82',
        'serv83',
        'serv84',
        'serv85',
        'serv86',
        'serv87',
        'serv88',
        'serv89',
        'serv90',
        'serv91',
        'serv92',
        'serv93',
        'serv94',
        'serv95',
        'serv96',
        'serv97',
        'serv98',
        'serv99',
        'serv100',
        'serv101',
        'serv102',
        'serv103',
        'serv104',
        'serv105',
        'serv106',
        'serv107',
        'serv108',
        'serv109',
        'serv110',
        'serv111',
        'serv112',
        'serv113',
        'serv114',
        'serv115',
        'serv116',
        'serv117',
        'serv118',
        'serv119',
        'serv120',
        'serv121',
        'serv122',
        'serv123',
        'serv124',
        'serv125',
        'serv126',
        'serv127',
        'priorityLevelA',
        'priorityLevelB',
        'priorityLevel0',
        'priorityLevel1',
        'priorityLevel2',
        'priorityLevel3',
        'priorityLevel4',
        'maxNumOfMC-Bearers',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< TBCD-STRING >-----#
    TBCD_STRING = OCT_STR(name='TBCD-STRING', mode=MODE_TYPE)
    
    #-----< DiameterIdentity >-----#
    DiameterIdentity = OCT_STR(name='DiameterIdentity', mode=MODE_TYPE)
    DiameterIdentity._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=9, ub=255)], ev=None, er=[])
    
    #-----< AddressString >-----#
    AddressString = OCT_STR(name='AddressString', mode=MODE_TYPE)
    AddressString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< maxAddressLength >-----#
    maxAddressLength = INT(name='maxAddressLength', mode=MODE_VALUE)
    maxAddressLength._val = 20
    
    #-----< ISDN-AddressString >-----#
    ISDN_AddressString = OCT_STR(name='ISDN-AddressString', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')))
    ISDN_AddressString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    
    #-----< maxISDN-AddressLength >-----#
    maxISDN_AddressLength = INT(name='maxISDN-AddressLength', mode=MODE_VALUE)
    maxISDN_AddressLength._val = 9
    
    #-----< FTN-AddressString >-----#
    FTN_AddressString = OCT_STR(name='FTN-AddressString', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')))
    FTN_AddressString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    
    #-----< maxFTN-AddressLength >-----#
    maxFTN_AddressLength = INT(name='maxFTN-AddressLength', mode=MODE_VALUE)
    maxFTN_AddressLength._val = 15
    
    #-----< ISDN-SubaddressString >-----#
    ISDN_SubaddressString = OCT_STR(name='ISDN-SubaddressString', mode=MODE_TYPE)
    ISDN_SubaddressString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=21)], ev=None, er=[])
    
    #-----< maxISDN-SubaddressLength >-----#
    maxISDN_SubaddressLength = INT(name='maxISDN-SubaddressLength', mode=MODE_VALUE)
    maxISDN_SubaddressLength._val = 21
    
    #-----< ExternalSignalInfo >-----#
    ExternalSignalInfo = SEQ(name='ExternalSignalInfo', mode=MODE_TYPE)
    _ExternalSignalInfo_protocolId = ENUM(name='protocolId', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ProtocolId')))
    _ExternalSignalInfo_signalInfo = OCT_STR(name='signalInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')))
    _ExternalSignalInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ExternalSignalInfo._cont = ASN1Dict([
        ('protocolId', _ExternalSignalInfo_protocolId),
        ('signalInfo', _ExternalSignalInfo_signalInfo),
        ('extensionContainer', _ExternalSignalInfo_extensionContainer),
        ])
    ExternalSignalInfo._ext = []
    
    #-----< SignalInfo >-----#
    SignalInfo = OCT_STR(name='SignalInfo', mode=MODE_TYPE)
    SignalInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=200)], ev=None, er=[])
    
    #-----< maxSignalInfoLength >-----#
    maxSignalInfoLength = INT(name='maxSignalInfoLength', mode=MODE_VALUE)
    maxSignalInfoLength._val = 200
    
    #-----< ProtocolId >-----#
    ProtocolId = ENUM(name='ProtocolId', mode=MODE_TYPE)
    ProtocolId._cont = ASN1Dict([('gsm-0408', 1), ('gsm-0806', 2), ('gsm-BSSMAP', 3), ('ets-300102-1', 4)])
    ProtocolId._ext = None
    
    #-----< Ext-ExternalSignalInfo >-----#
    Ext_ExternalSignalInfo = SEQ(name='Ext-ExternalSignalInfo', mode=MODE_TYPE)
    _Ext_ExternalSignalInfo_ext_ProtocolId = ENUM(name='ext-ProtocolId', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-ProtocolId')))
    _Ext_ExternalSignalInfo_signalInfo = OCT_STR(name='signalInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')))
    _Ext_ExternalSignalInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    Ext_ExternalSignalInfo._cont = ASN1Dict([
        ('ext-ProtocolId', _Ext_ExternalSignalInfo_ext_ProtocolId),
        ('signalInfo', _Ext_ExternalSignalInfo_signalInfo),
        ('extensionContainer', _Ext_ExternalSignalInfo_extensionContainer),
        ])
    Ext_ExternalSignalInfo._ext = []
    
    #-----< Ext-ProtocolId >-----#
    Ext_ProtocolId = ENUM(name='Ext-ProtocolId', mode=MODE_TYPE)
    Ext_ProtocolId._cont = ASN1Dict([('ets-300356', 1)])
    Ext_ProtocolId._ext = []
    
    #-----< AccessNetworkSignalInfo >-----#
    AccessNetworkSignalInfo = SEQ(name='AccessNetworkSignalInfo', mode=MODE_TYPE)
    _AccessNetworkSignalInfo_accessNetworkProtocolId = ENUM(name='accessNetworkProtocolId', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AccessNetworkProtocolId')))
    _AccessNetworkSignalInfo_signalInfo = OCT_STR(name='signalInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LongSignalInfo')))
    _AccessNetworkSignalInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    AccessNetworkSignalInfo._cont = ASN1Dict([
        ('accessNetworkProtocolId', _AccessNetworkSignalInfo_accessNetworkProtocolId),
        ('signalInfo', _AccessNetworkSignalInfo_signalInfo),
        ('extensionContainer', _AccessNetworkSignalInfo_extensionContainer),
        ])
    AccessNetworkSignalInfo._ext = []
    
    #-----< LongSignalInfo >-----#
    LongSignalInfo = OCT_STR(name='LongSignalInfo', mode=MODE_TYPE)
    LongSignalInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2560)], ev=None, er=[])
    
    #-----< maxLongSignalInfoLength >-----#
    maxLongSignalInfoLength = INT(name='maxLongSignalInfoLength', mode=MODE_VALUE)
    maxLongSignalInfoLength._val = 2560
    
    #-----< AccessNetworkProtocolId >-----#
    AccessNetworkProtocolId = ENUM(name='AccessNetworkProtocolId', mode=MODE_TYPE)
    AccessNetworkProtocolId._cont = ASN1Dict([('ts3G-48006', 1), ('ts3G-25413', 2)])
    AccessNetworkProtocolId._ext = []
    
    #-----< AlertingPattern >-----#
    AlertingPattern = OCT_STR(name='AlertingPattern', mode=MODE_TYPE)
    AlertingPattern._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< alertingLevel-0 >-----#
    alertingLevel_0 = OCT_STR(name='alertingLevel-0', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')))
    alertingLevel_0._val = b'\x00'
    
    #-----< alertingLevel-1 >-----#
    alertingLevel_1 = OCT_STR(name='alertingLevel-1', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')))
    alertingLevel_1._val = b'\x01'
    
    #-----< alertingLevel-2 >-----#
    alertingLevel_2 = OCT_STR(name='alertingLevel-2', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')))
    alertingLevel_2._val = b'\x02'
    
    #-----< alertingCategory-1 >-----#
    alertingCategory_1 = OCT_STR(name='alertingCategory-1', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')))
    alertingCategory_1._val = b'\x04'
    
    #-----< alertingCategory-2 >-----#
    alertingCategory_2 = OCT_STR(name='alertingCategory-2', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')))
    alertingCategory_2._val = b'\x05'
    
    #-----< alertingCategory-3 >-----#
    alertingCategory_3 = OCT_STR(name='alertingCategory-3', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')))
    alertingCategory_3._val = b'\x06'
    
    #-----< alertingCategory-4 >-----#
    alertingCategory_4 = OCT_STR(name='alertingCategory-4', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')))
    alertingCategory_4._val = b'\x07'
    
    #-----< alertingCategory-5 >-----#
    alertingCategory_5 = OCT_STR(name='alertingCategory-5', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')))
    alertingCategory_5._val = b'\x08'
    
    #-----< GSN-Address >-----#
    GSN_Address = OCT_STR(name='GSN-Address', mode=MODE_TYPE)
    GSN_Address._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=17)], ev=None, er=[])
    
    #-----< Time >-----#
    Time = OCT_STR(name='Time', mode=MODE_TYPE)
    Time._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< IMSI >-----#
    IMSI = OCT_STR(name='IMSI', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'TBCD-STRING')))
    IMSI._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    
    #-----< Identity >-----#
    Identity = CHOICE(name='Identity', mode=MODE_TYPE)
    _Identity_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _Identity_imsi_WithLMSI = SEQ(name='imsi-WithLMSI', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI-WithLMSI')))
    Identity._cont = ASN1Dict([
        ('imsi', _Identity_imsi),
        ('imsi-WithLMSI', _Identity_imsi_WithLMSI),
        ])
    Identity._ext = None
    
    #-----< IMSI-WithLMSI >-----#
    IMSI_WithLMSI = SEQ(name='IMSI-WithLMSI', mode=MODE_TYPE)
    _IMSI_WithLMSI_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _IMSI_WithLMSI_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')))
    IMSI_WithLMSI._cont = ASN1Dict([
        ('imsi', _IMSI_WithLMSI_imsi),
        ('lmsi', _IMSI_WithLMSI_lmsi),
        ])
    IMSI_WithLMSI._ext = []
    
    #-----< ASCI-CallReference >-----#
    ASCI_CallReference = OCT_STR(name='ASCI-CallReference', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'TBCD-STRING')))
    ASCI_CallReference._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< TMSI >-----#
    TMSI = OCT_STR(name='TMSI', mode=MODE_TYPE)
    TMSI._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    
    #-----< SubscriberId >-----#
    SubscriberId = CHOICE(name='SubscriberId', mode=MODE_TYPE)
    _SubscriberId_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _SubscriberId_tmsi = OCT_STR(name='tmsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'TMSI')))
    SubscriberId._cont = ASN1Dict([
        ('imsi', _SubscriberId_imsi),
        ('tmsi', _SubscriberId_tmsi),
        ])
    SubscriberId._ext = None
    
    #-----< IMEI >-----#
    IMEI = OCT_STR(name='IMEI', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'TBCD-STRING')))
    IMEI._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< HLR-Id >-----#
    HLR_Id = OCT_STR(name='HLR-Id', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    
    #-----< HLR-List >-----#
    HLR_List = SEQ_OF(name='HLR-List', mode=MODE_TYPE)
    _HLR_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'HLR-Id')))
    HLR_List._cont = _HLR_List__item_
    HLR_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< maxNumOfHLR-Id >-----#
    maxNumOfHLR_Id = INT(name='maxNumOfHLR-Id', mode=MODE_VALUE)
    maxNumOfHLR_Id._val = 50
    
    #-----< LMSI >-----#
    LMSI = OCT_STR(name='LMSI', mode=MODE_TYPE)
    LMSI._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< GlobalCellId >-----#
    GlobalCellId = OCT_STR(name='GlobalCellId', mode=MODE_TYPE)
    GlobalCellId._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=7)], ev=None, er=[])
    
    #-----< NetworkResource >-----#
    NetworkResource = ENUM(name='NetworkResource', mode=MODE_TYPE)
    NetworkResource._cont = ASN1Dict([('plmn', 0), ('hlr', 1), ('vlr', 2), ('pvlr', 3), ('controllingMSC', 4), ('vmsc', 5), ('eir', 6), ('rss', 7)])
    NetworkResource._ext = None
    
    #-----< AdditionalNetworkResource >-----#
    AdditionalNetworkResource = ENUM(name='AdditionalNetworkResource', mode=MODE_TYPE)
    AdditionalNetworkResource._cont = ASN1Dict([('sgsn', 0), ('ggsn', 1), ('gmlc', 2), ('gsmSCF', 3), ('nplr', 4), ('auc', 5), ('ue', 6), ('mme', 7)])
    AdditionalNetworkResource._ext = ['ue', 'mme']
    
    #-----< NAEA-PreferredCI >-----#
    NAEA_PreferredCI = SEQ(name='NAEA-PreferredCI', mode=MODE_TYPE)
    _NAEA_PreferredCI_naea_PreferredCIC = OCT_STR(name='naea-PreferredCIC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NAEA-CIC')))
    _NAEA_PreferredCI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    NAEA_PreferredCI._cont = ASN1Dict([
        ('naea-PreferredCIC', _NAEA_PreferredCI_naea_PreferredCIC),
        ('extensionContainer', _NAEA_PreferredCI_extensionContainer),
        ])
    NAEA_PreferredCI._ext = []
    
    #-----< NAEA-CIC >-----#
    NAEA_CIC = OCT_STR(name='NAEA-CIC', mode=MODE_TYPE)
    NAEA_CIC._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< SubscriberIdentity >-----#
    SubscriberIdentity = CHOICE(name='SubscriberIdentity', mode=MODE_TYPE)
    _SubscriberIdentity_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _SubscriberIdentity_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    SubscriberIdentity._cont = ASN1Dict([
        ('imsi', _SubscriberIdentity_imsi),
        ('msisdn', _SubscriberIdentity_msisdn),
        ])
    SubscriberIdentity._ext = None
    
    #-----< LCSClientExternalID >-----#
    LCSClientExternalID = SEQ(name='LCSClientExternalID', mode=MODE_TYPE)
    _LCSClientExternalID_externalAddress = OCT_STR(name='externalAddress', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _LCSClientExternalID_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    LCSClientExternalID._cont = ASN1Dict([
        ('externalAddress', _LCSClientExternalID_externalAddress),
        ('extensionContainer', _LCSClientExternalID_extensionContainer),
        ])
    LCSClientExternalID._ext = []
    
    #-----< LCSClientInternalID >-----#
    LCSClientInternalID = ENUM(name='LCSClientInternalID', mode=MODE_TYPE)
    LCSClientInternalID._cont = ASN1Dict([('broadcastService', 0), ('o-andM-HPLMN', 1), ('o-andM-VPLMN', 2), ('anonymousLocation', 3), ('targetMSsubscribedService', 4)])
    LCSClientInternalID._ext = []
    
    #-----< LCSServiceTypeID >-----#
    LCSServiceTypeID = INT(name='LCSServiceTypeID', mode=MODE_TYPE)
    LCSServiceTypeID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< emergencyServices >-----#
    emergencyServices = INT(name='emergencyServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    emergencyServices._val = 0
    
    #-----< emergencyAlertServices >-----#
    emergencyAlertServices = INT(name='emergencyAlertServices', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    emergencyAlertServices._val = 1
    
    #-----< personTracking >-----#
    personTracking = INT(name='personTracking', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    personTracking._val = 2
    
    #-----< fleetManagement >-----#
    fleetManagement = INT(name='fleetManagement', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    fleetManagement._val = 3
    
    #-----< assetManagement >-----#
    assetManagement = INT(name='assetManagement', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    assetManagement._val = 4
    
    #-----< trafficCongestionReporting >-----#
    trafficCongestionReporting = INT(name='trafficCongestionReporting', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    trafficCongestionReporting._val = 5
    
    #-----< roadsideAssistance >-----#
    roadsideAssistance = INT(name='roadsideAssistance', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    roadsideAssistance._val = 6
    
    #-----< routingToNearestCommercialEnterprise >-----#
    routingToNearestCommercialEnterprise = INT(name='routingToNearestCommercialEnterprise', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    routingToNearestCommercialEnterprise._val = 7
    
    #-----< navigation >-----#
    navigation = INT(name='navigation', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    navigation._val = 8
    
    #-----< citySightseeing >-----#
    citySightseeing = INT(name='citySightseeing', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    citySightseeing._val = 9
    
    #-----< localizedAdvertising >-----#
    localizedAdvertising = INT(name='localizedAdvertising', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    localizedAdvertising._val = 10
    
    #-----< mobileYellowPages >-----#
    mobileYellowPages = INT(name='mobileYellowPages', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    mobileYellowPages._val = 11
    
    #-----< trafficAndPublicTransportationInfo >-----#
    trafficAndPublicTransportationInfo = INT(name='trafficAndPublicTransportationInfo', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    trafficAndPublicTransportationInfo._val = 12
    
    #-----< weather >-----#
    weather = INT(name='weather', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    weather._val = 13
    
    #-----< assetAndServiceFinding >-----#
    assetAndServiceFinding = INT(name='assetAndServiceFinding', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    assetAndServiceFinding._val = 14
    
    #-----< gaming >-----#
    gaming = INT(name='gaming', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    gaming._val = 15
    
    #-----< findYourFriend >-----#
    findYourFriend = INT(name='findYourFriend', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    findYourFriend._val = 16
    
    #-----< dating >-----#
    dating = INT(name='dating', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    dating._val = 17
    
    #-----< chatting >-----#
    chatting = INT(name='chatting', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    chatting._val = 18
    
    #-----< routeFinding >-----#
    routeFinding = INT(name='routeFinding', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    routeFinding._val = 19
    
    #-----< whereAmI >-----#
    whereAmI = INT(name='whereAmI', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    whereAmI._val = 20
    
    #-----< serv64 >-----#
    serv64 = INT(name='serv64', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv64._val = 64
    
    #-----< serv65 >-----#
    serv65 = INT(name='serv65', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv65._val = 65
    
    #-----< serv66 >-----#
    serv66 = INT(name='serv66', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv66._val = 66
    
    #-----< serv67 >-----#
    serv67 = INT(name='serv67', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv67._val = 67
    
    #-----< serv68 >-----#
    serv68 = INT(name='serv68', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv68._val = 68
    
    #-----< serv69 >-----#
    serv69 = INT(name='serv69', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv69._val = 69
    
    #-----< serv70 >-----#
    serv70 = INT(name='serv70', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv70._val = 70
    
    #-----< serv71 >-----#
    serv71 = INT(name='serv71', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv71._val = 71
    
    #-----< serv72 >-----#
    serv72 = INT(name='serv72', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv72._val = 72
    
    #-----< serv73 >-----#
    serv73 = INT(name='serv73', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv73._val = 73
    
    #-----< serv74 >-----#
    serv74 = INT(name='serv74', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv74._val = 74
    
    #-----< serv75 >-----#
    serv75 = INT(name='serv75', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv75._val = 75
    
    #-----< serv76 >-----#
    serv76 = INT(name='serv76', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv76._val = 76
    
    #-----< serv77 >-----#
    serv77 = INT(name='serv77', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv77._val = 77
    
    #-----< serv78 >-----#
    serv78 = INT(name='serv78', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv78._val = 78
    
    #-----< serv79 >-----#
    serv79 = INT(name='serv79', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv79._val = 79
    
    #-----< serv80 >-----#
    serv80 = INT(name='serv80', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv80._val = 80
    
    #-----< serv81 >-----#
    serv81 = INT(name='serv81', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv81._val = 81
    
    #-----< serv82 >-----#
    serv82 = INT(name='serv82', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv82._val = 82
    
    #-----< serv83 >-----#
    serv83 = INT(name='serv83', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv83._val = 83
    
    #-----< serv84 >-----#
    serv84 = INT(name='serv84', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv84._val = 84
    
    #-----< serv85 >-----#
    serv85 = INT(name='serv85', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv85._val = 85
    
    #-----< serv86 >-----#
    serv86 = INT(name='serv86', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv86._val = 86
    
    #-----< serv87 >-----#
    serv87 = INT(name='serv87', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv87._val = 87
    
    #-----< serv88 >-----#
    serv88 = INT(name='serv88', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv88._val = 88
    
    #-----< serv89 >-----#
    serv89 = INT(name='serv89', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv89._val = 89
    
    #-----< serv90 >-----#
    serv90 = INT(name='serv90', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv90._val = 90
    
    #-----< serv91 >-----#
    serv91 = INT(name='serv91', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv91._val = 91
    
    #-----< serv92 >-----#
    serv92 = INT(name='serv92', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv92._val = 92
    
    #-----< serv93 >-----#
    serv93 = INT(name='serv93', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv93._val = 93
    
    #-----< serv94 >-----#
    serv94 = INT(name='serv94', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv94._val = 94
    
    #-----< serv95 >-----#
    serv95 = INT(name='serv95', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv95._val = 95
    
    #-----< serv96 >-----#
    serv96 = INT(name='serv96', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv96._val = 96
    
    #-----< serv97 >-----#
    serv97 = INT(name='serv97', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv97._val = 97
    
    #-----< serv98 >-----#
    serv98 = INT(name='serv98', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv98._val = 98
    
    #-----< serv99 >-----#
    serv99 = INT(name='serv99', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv99._val = 99
    
    #-----< serv100 >-----#
    serv100 = INT(name='serv100', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv100._val = 100
    
    #-----< serv101 >-----#
    serv101 = INT(name='serv101', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv101._val = 101
    
    #-----< serv102 >-----#
    serv102 = INT(name='serv102', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv102._val = 102
    
    #-----< serv103 >-----#
    serv103 = INT(name='serv103', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv103._val = 103
    
    #-----< serv104 >-----#
    serv104 = INT(name='serv104', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv104._val = 104
    
    #-----< serv105 >-----#
    serv105 = INT(name='serv105', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv105._val = 105
    
    #-----< serv106 >-----#
    serv106 = INT(name='serv106', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv106._val = 106
    
    #-----< serv107 >-----#
    serv107 = INT(name='serv107', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv107._val = 107
    
    #-----< serv108 >-----#
    serv108 = INT(name='serv108', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv108._val = 108
    
    #-----< serv109 >-----#
    serv109 = INT(name='serv109', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv109._val = 109
    
    #-----< serv110 >-----#
    serv110 = INT(name='serv110', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv110._val = 110
    
    #-----< serv111 >-----#
    serv111 = INT(name='serv111', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv111._val = 111
    
    #-----< serv112 >-----#
    serv112 = INT(name='serv112', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv112._val = 112
    
    #-----< serv113 >-----#
    serv113 = INT(name='serv113', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv113._val = 113
    
    #-----< serv114 >-----#
    serv114 = INT(name='serv114', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv114._val = 114
    
    #-----< serv115 >-----#
    serv115 = INT(name='serv115', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv115._val = 115
    
    #-----< serv116 >-----#
    serv116 = INT(name='serv116', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv116._val = 116
    
    #-----< serv117 >-----#
    serv117 = INT(name='serv117', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv117._val = 117
    
    #-----< serv118 >-----#
    serv118 = INT(name='serv118', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv118._val = 118
    
    #-----< serv119 >-----#
    serv119 = INT(name='serv119', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv119._val = 119
    
    #-----< serv120 >-----#
    serv120 = INT(name='serv120', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv120._val = 120
    
    #-----< serv121 >-----#
    serv121 = INT(name='serv121', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv121._val = 121
    
    #-----< serv122 >-----#
    serv122 = INT(name='serv122', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv122._val = 122
    
    #-----< serv123 >-----#
    serv123 = INT(name='serv123', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv123._val = 123
    
    #-----< serv124 >-----#
    serv124 = INT(name='serv124', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv124._val = 124
    
    #-----< serv125 >-----#
    serv125 = INT(name='serv125', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv125._val = 125
    
    #-----< serv126 >-----#
    serv126 = INT(name='serv126', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv126._val = 126
    
    #-----< serv127 >-----#
    serv127 = INT(name='serv127', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    serv127._val = 127
    
    #-----< PLMN-Id >-----#
    PLMN_Id = OCT_STR(name='PLMN-Id', mode=MODE_TYPE)
    PLMN_Id._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< E-UTRAN-CGI >-----#
    E_UTRAN_CGI = OCT_STR(name='E-UTRAN-CGI', mode=MODE_TYPE)
    E_UTRAN_CGI._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    
    #-----< TA-Id >-----#
    TA_Id = OCT_STR(name='TA-Id', mode=MODE_TYPE)
    TA_Id._const_sz = ASN1Set(rv=[5], rr=[], ev=None, er=[])
    
    #-----< RAIdentity >-----#
    RAIdentity = OCT_STR(name='RAIdentity', mode=MODE_TYPE)
    RAIdentity._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    
    #-----< NetworkNodeDiameterAddress >-----#
    NetworkNodeDiameterAddress = SEQ(name='NetworkNodeDiameterAddress', mode=MODE_TYPE)
    _NetworkNodeDiameterAddress_diameter_Name = OCT_STR(name='diameter-Name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')))
    _NetworkNodeDiameterAddress_diameter_Realm = OCT_STR(name='diameter-Realm', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')))
    NetworkNodeDiameterAddress._cont = ASN1Dict([
        ('diameter-Name', _NetworkNodeDiameterAddress_diameter_Name),
        ('diameter-Realm', _NetworkNodeDiameterAddress_diameter_Realm),
        ])
    NetworkNodeDiameterAddress._ext = None
    
    #-----< CellGlobalIdOrServiceAreaIdOrLAI >-----#
    CellGlobalIdOrServiceAreaIdOrLAI = CHOICE(name='CellGlobalIdOrServiceAreaIdOrLAI', mode=MODE_TYPE)
    _CellGlobalIdOrServiceAreaIdOrLAI_cellGlobalIdOrServiceAreaIdFixedLength = OCT_STR(name='cellGlobalIdOrServiceAreaIdFixedLength', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'CellGlobalIdOrServiceAreaIdFixedLength')))
    _CellGlobalIdOrServiceAreaIdOrLAI_laiFixedLength = OCT_STR(name='laiFixedLength', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LAIFixedLength')))
    CellGlobalIdOrServiceAreaIdOrLAI._cont = ASN1Dict([
        ('cellGlobalIdOrServiceAreaIdFixedLength', _CellGlobalIdOrServiceAreaIdOrLAI_cellGlobalIdOrServiceAreaIdFixedLength),
        ('laiFixedLength', _CellGlobalIdOrServiceAreaIdOrLAI_laiFixedLength),
        ])
    CellGlobalIdOrServiceAreaIdOrLAI._ext = None
    
    #-----< CellGlobalIdOrServiceAreaIdFixedLength >-----#
    CellGlobalIdOrServiceAreaIdFixedLength = OCT_STR(name='CellGlobalIdOrServiceAreaIdFixedLength', mode=MODE_TYPE)
    CellGlobalIdOrServiceAreaIdFixedLength._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    
    #-----< LAIFixedLength >-----#
    LAIFixedLength = OCT_STR(name='LAIFixedLength', mode=MODE_TYPE)
    LAIFixedLength._const_sz = ASN1Set(rv=[5], rr=[], ev=None, er=[])
    
    #-----< BasicServiceCode >-----#
    BasicServiceCode = CHOICE(name='BasicServiceCode', mode=MODE_TYPE)
    _BasicServiceCode_bearerService = OCT_STR(name='bearerService', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-BS-Code', 'BearerServiceCode')))
    _BasicServiceCode_teleservice = OCT_STR(name='teleservice', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-TS-Code', 'TeleserviceCode')))
    BasicServiceCode._cont = ASN1Dict([
        ('bearerService', _BasicServiceCode_bearerService),
        ('teleservice', _BasicServiceCode_teleservice),
        ])
    BasicServiceCode._ext = None
    
    #-----< Ext-BasicServiceCode >-----#
    Ext_BasicServiceCode = CHOICE(name='Ext-BasicServiceCode', mode=MODE_TYPE)
    _Ext_BasicServiceCode_ext_BearerService = OCT_STR(name='ext-BearerService', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-BS-Code', 'Ext-BearerServiceCode')))
    _Ext_BasicServiceCode_ext_Teleservice = OCT_STR(name='ext-Teleservice', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-TS-Code', 'Ext-TeleserviceCode')))
    Ext_BasicServiceCode._cont = ASN1Dict([
        ('ext-BearerService', _Ext_BasicServiceCode_ext_BearerService),
        ('ext-Teleservice', _Ext_BasicServiceCode_ext_Teleservice),
        ])
    Ext_BasicServiceCode._ext = None
    
    #-----< EMLPP-Info >-----#
    EMLPP_Info = SEQ(name='EMLPP-Info', mode=MODE_TYPE)
    _EMLPP_Info_maximumentitledPriority = INT(name='maximumentitledPriority', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')))
    _EMLPP_Info_defaultPriority = INT(name='defaultPriority', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')))
    _EMLPP_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    EMLPP_Info._cont = ASN1Dict([
        ('maximumentitledPriority', _EMLPP_Info_maximumentitledPriority),
        ('defaultPriority', _EMLPP_Info_defaultPriority),
        ('extensionContainer', _EMLPP_Info_extensionContainer),
        ])
    EMLPP_Info._ext = []
    
    #-----< EMLPP-Priority >-----#
    EMLPP_Priority = INT(name='EMLPP-Priority', mode=MODE_TYPE)
    EMLPP_Priority._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    
    #-----< priorityLevelA >-----#
    priorityLevelA = INT(name='priorityLevelA', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')))
    priorityLevelA._val = 6
    
    #-----< priorityLevelB >-----#
    priorityLevelB = INT(name='priorityLevelB', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')))
    priorityLevelB._val = 5
    
    #-----< priorityLevel0 >-----#
    priorityLevel0 = INT(name='priorityLevel0', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')))
    priorityLevel0._val = 0
    
    #-----< priorityLevel1 >-----#
    priorityLevel1 = INT(name='priorityLevel1', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')))
    priorityLevel1._val = 1
    
    #-----< priorityLevel2 >-----#
    priorityLevel2 = INT(name='priorityLevel2', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')))
    priorityLevel2._val = 2
    
    #-----< priorityLevel3 >-----#
    priorityLevel3 = INT(name='priorityLevel3', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')))
    priorityLevel3._val = 3
    
    #-----< priorityLevel4 >-----#
    priorityLevel4 = INT(name='priorityLevel4', mode=MODE_VALUE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')))
    priorityLevel4._val = 4
    
    #-----< MC-SS-Info >-----#
    MC_SS_Info = SEQ(name='MC-SS-Info', mode=MODE_TYPE)
    _MC_SS_Info_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _MC_SS_Info_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _MC_SS_Info_nbrSB = INT(name='nbrSB', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'MaxMC-Bearers')))
    _MC_SS_Info_nbrUser = INT(name='nbrUser', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'MC-Bearers')))
    _MC_SS_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MC_SS_Info._cont = ASN1Dict([
        ('ss-Code', _MC_SS_Info_ss_Code),
        ('ss-Status', _MC_SS_Info_ss_Status),
        ('nbrSB', _MC_SS_Info_nbrSB),
        ('nbrUser', _MC_SS_Info_nbrUser),
        ('extensionContainer', _MC_SS_Info_extensionContainer),
        ])
    MC_SS_Info._ext = []
    
    #-----< MaxMC-Bearers >-----#
    MaxMC_Bearers = INT(name='MaxMC-Bearers', mode=MODE_TYPE)
    MaxMC_Bearers._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=7)], ev=None, er=[])
    
    #-----< MC-Bearers >-----#
    MC_Bearers = INT(name='MC-Bearers', mode=MODE_TYPE)
    MC_Bearers._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=7)], ev=None, er=[])
    
    #-----< maxNumOfMC-Bearers >-----#
    maxNumOfMC_Bearers = INT(name='maxNumOfMC-Bearers', mode=MODE_VALUE)
    maxNumOfMC_Bearers._val = 7
    
    #-----< Ext-SS-Status >-----#
    Ext_SS_Status = OCT_STR(name='Ext-SS-Status', mode=MODE_TYPE)
    Ext_SS_Status._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< AgeOfLocationInformation >-----#
    AgeOfLocationInformation = INT(name='AgeOfLocationInformation', mode=MODE_TYPE)
    AgeOfLocationInformation._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    
    _all_ = [
        TBCD_STRING,
        DiameterIdentity,
        AddressString,
        maxAddressLength,
        ISDN_AddressString,
        maxISDN_AddressLength,
        FTN_AddressString,
        maxFTN_AddressLength,
        ISDN_SubaddressString,
        maxISDN_SubaddressLength,
        _ExternalSignalInfo_protocolId,
        _ExternalSignalInfo_signalInfo,
        _ExternalSignalInfo_extensionContainer,
        ExternalSignalInfo,
        SignalInfo,
        maxSignalInfoLength,
        ProtocolId,
        _Ext_ExternalSignalInfo_ext_ProtocolId,
        _Ext_ExternalSignalInfo_signalInfo,
        _Ext_ExternalSignalInfo_extensionContainer,
        Ext_ExternalSignalInfo,
        Ext_ProtocolId,
        _AccessNetworkSignalInfo_accessNetworkProtocolId,
        _AccessNetworkSignalInfo_signalInfo,
        _AccessNetworkSignalInfo_extensionContainer,
        AccessNetworkSignalInfo,
        LongSignalInfo,
        maxLongSignalInfoLength,
        AccessNetworkProtocolId,
        AlertingPattern,
        alertingLevel_0,
        alertingLevel_1,
        alertingLevel_2,
        alertingCategory_1,
        alertingCategory_2,
        alertingCategory_3,
        alertingCategory_4,
        alertingCategory_5,
        GSN_Address,
        Time,
        IMSI,
        _Identity_imsi,
        _Identity_imsi_WithLMSI,
        Identity,
        _IMSI_WithLMSI_imsi,
        _IMSI_WithLMSI_lmsi,
        IMSI_WithLMSI,
        ASCI_CallReference,
        TMSI,
        _SubscriberId_imsi,
        _SubscriberId_tmsi,
        SubscriberId,
        IMEI,
        HLR_Id,
        _HLR_List__item_,
        HLR_List,
        maxNumOfHLR_Id,
        LMSI,
        GlobalCellId,
        NetworkResource,
        AdditionalNetworkResource,
        _NAEA_PreferredCI_naea_PreferredCIC,
        _NAEA_PreferredCI_extensionContainer,
        NAEA_PreferredCI,
        NAEA_CIC,
        _SubscriberIdentity_imsi,
        _SubscriberIdentity_msisdn,
        SubscriberIdentity,
        _LCSClientExternalID_externalAddress,
        _LCSClientExternalID_extensionContainer,
        LCSClientExternalID,
        LCSClientInternalID,
        LCSServiceTypeID,
        emergencyServices,
        emergencyAlertServices,
        personTracking,
        fleetManagement,
        assetManagement,
        trafficCongestionReporting,
        roadsideAssistance,
        routingToNearestCommercialEnterprise,
        navigation,
        citySightseeing,
        localizedAdvertising,
        mobileYellowPages,
        trafficAndPublicTransportationInfo,
        weather,
        assetAndServiceFinding,
        gaming,
        findYourFriend,
        dating,
        chatting,
        routeFinding,
        whereAmI,
        serv64,
        serv65,
        serv66,
        serv67,
        serv68,
        serv69,
        serv70,
        serv71,
        serv72,
        serv73,
        serv74,
        serv75,
        serv76,
        serv77,
        serv78,
        serv79,
        serv80,
        serv81,
        serv82,
        serv83,
        serv84,
        serv85,
        serv86,
        serv87,
        serv88,
        serv89,
        serv90,
        serv91,
        serv92,
        serv93,
        serv94,
        serv95,
        serv96,
        serv97,
        serv98,
        serv99,
        serv100,
        serv101,
        serv102,
        serv103,
        serv104,
        serv105,
        serv106,
        serv107,
        serv108,
        serv109,
        serv110,
        serv111,
        serv112,
        serv113,
        serv114,
        serv115,
        serv116,
        serv117,
        serv118,
        serv119,
        serv120,
        serv121,
        serv122,
        serv123,
        serv124,
        serv125,
        serv126,
        serv127,
        PLMN_Id,
        E_UTRAN_CGI,
        TA_Id,
        RAIdentity,
        _NetworkNodeDiameterAddress_diameter_Name,
        _NetworkNodeDiameterAddress_diameter_Realm,
        NetworkNodeDiameterAddress,
        _CellGlobalIdOrServiceAreaIdOrLAI_cellGlobalIdOrServiceAreaIdFixedLength,
        _CellGlobalIdOrServiceAreaIdOrLAI_laiFixedLength,
        CellGlobalIdOrServiceAreaIdOrLAI,
        CellGlobalIdOrServiceAreaIdFixedLength,
        LAIFixedLength,
        _BasicServiceCode_bearerService,
        _BasicServiceCode_teleservice,
        BasicServiceCode,
        _Ext_BasicServiceCode_ext_BearerService,
        _Ext_BasicServiceCode_ext_Teleservice,
        Ext_BasicServiceCode,
        _EMLPP_Info_maximumentitledPriority,
        _EMLPP_Info_defaultPriority,
        _EMLPP_Info_extensionContainer,
        EMLPP_Info,
        EMLPP_Priority,
        priorityLevelA,
        priorityLevelB,
        priorityLevel0,
        priorityLevel1,
        priorityLevel2,
        priorityLevel3,
        priorityLevel4,
        _MC_SS_Info_ss_Code,
        _MC_SS_Info_ss_Status,
        _MC_SS_Info_nbrSB,
        _MC_SS_Info_nbrUser,
        _MC_SS_Info_extensionContainer,
        MC_SS_Info,
        MaxMC_Bearers,
        MC_Bearers,
        maxNumOfMC_Bearers,
        Ext_SS_Status,
        AgeOfLocationInformation,
    ]

class MAP_ER_DataTypes:

    _name_  = 'MAP-ER-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 17, 16]
    
    _obj_ = [
        'RoamingNotAllowedParam',
        'AdditionalRoamingNotAllowedCause',
        'RoamingNotAllowedCause',
        'CallBarredParam',
        'CallBarringCause',
        'ExtensibleCallBarredParam',
        'CUG-RejectParam',
        'CUG-RejectCause',
        'SS-IncompatibilityCause',
        'PW-RegistrationFailureCause',
        'SM-EnumeratedDeliveryFailureCause',
        'SM-DeliveryFailureCause',
        'AbsentSubscriberSM-Param',
        'AbsentSubscriberDiagnosticSM',
        'SystemFailureParam',
        'ExtensibleSystemFailureParam',
        'FailureCauseParam',
        'DataMissingParam',
        'UnexpectedDataParam',
        'FacilityNotSupParam',
        'OR-NotAllowedParam',
        'UnknownSubscriberParam',
        'UnknownSubscriberDiagnostic',
        'NumberChangedParam',
        'UnidentifiedSubParam',
        'IllegalSubscriberParam',
        'IllegalEquipmentParam',
        'BearerServNotProvParam',
        'TeleservNotProvParam',
        'TracingBufferFullParam',
        'NoRoamingNbParam',
        'AbsentSubscriberParam',
        'AbsentSubscriberReason',
        'BusySubscriberParam',
        'NoSubscriberReplyParam',
        'ForwardingViolationParam',
        'ForwardingFailedParam',
        'ATI-NotAllowedParam',
        'ATSI-NotAllowedParam',
        'ATM-NotAllowedParam',
        'IllegalSS-OperationParam',
        'SS-NotAvailableParam',
        'SS-SubscriptionViolationParam',
        'InformationNotAvailableParam',
        'SubBusyForMT-SMS-Param',
        'MessageWaitListFullParam',
        'ResourceLimitationParam',
        'NoGroupCallNbParam',
        'IncompatibleTerminalParam',
        'ShortTermDenialParam',
        'LongTermDenialParam',
        'UnauthorizedRequestingNetwork-Param',
        'UnauthorizedLCSClient-Param',
        'UnauthorizedLCSClient-Diagnostic',
        'PositionMethodFailure-Param',
        'PositionMethodFailure-Diagnostic',
        'UnknownOrUnreachableLCSClient-Param',
        'MM-EventNotSupported-Param',
        'TargetCellOutsideGCA-Param',
        'OngoingGroupCallParam',
        ]
    _type_ = [
        'RoamingNotAllowedParam',
        'AdditionalRoamingNotAllowedCause',
        'RoamingNotAllowedCause',
        'CallBarredParam',
        'CallBarringCause',
        'ExtensibleCallBarredParam',
        'CUG-RejectParam',
        'CUG-RejectCause',
        'SS-IncompatibilityCause',
        'PW-RegistrationFailureCause',
        'SM-EnumeratedDeliveryFailureCause',
        'SM-DeliveryFailureCause',
        'AbsentSubscriberSM-Param',
        'AbsentSubscriberDiagnosticSM',
        'SystemFailureParam',
        'ExtensibleSystemFailureParam',
        'FailureCauseParam',
        'DataMissingParam',
        'UnexpectedDataParam',
        'FacilityNotSupParam',
        'OR-NotAllowedParam',
        'UnknownSubscriberParam',
        'UnknownSubscriberDiagnostic',
        'NumberChangedParam',
        'UnidentifiedSubParam',
        'IllegalSubscriberParam',
        'IllegalEquipmentParam',
        'BearerServNotProvParam',
        'TeleservNotProvParam',
        'TracingBufferFullParam',
        'NoRoamingNbParam',
        'AbsentSubscriberParam',
        'AbsentSubscriberReason',
        'BusySubscriberParam',
        'NoSubscriberReplyParam',
        'ForwardingViolationParam',
        'ForwardingFailedParam',
        'ATI-NotAllowedParam',
        'ATSI-NotAllowedParam',
        'ATM-NotAllowedParam',
        'IllegalSS-OperationParam',
        'SS-NotAvailableParam',
        'SS-SubscriptionViolationParam',
        'InformationNotAvailableParam',
        'SubBusyForMT-SMS-Param',
        'MessageWaitListFullParam',
        'ResourceLimitationParam',
        'NoGroupCallNbParam',
        'IncompatibleTerminalParam',
        'ShortTermDenialParam',
        'LongTermDenialParam',
        'UnauthorizedRequestingNetwork-Param',
        'UnauthorizedLCSClient-Param',
        'UnauthorizedLCSClient-Diagnostic',
        'PositionMethodFailure-Param',
        'PositionMethodFailure-Diagnostic',
        'UnknownOrUnreachableLCSClient-Param',
        'MM-EventNotSupported-Param',
        'TargetCellOutsideGCA-Param',
        'OngoingGroupCallParam',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< RoamingNotAllowedParam >-----#
    RoamingNotAllowedParam = SEQ(name='RoamingNotAllowedParam', mode=MODE_TYPE)
    _RoamingNotAllowedParam_roamingNotAllowedCause = ENUM(name='roamingNotAllowedCause', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'RoamingNotAllowedCause')))
    _RoamingNotAllowedParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _RoamingNotAllowedParam_additionalRoamingNotAllowedCause = ENUM(name='additionalRoamingNotAllowedCause', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AdditionalRoamingNotAllowedCause')), opt=True)
    RoamingNotAllowedParam._cont = ASN1Dict([
        ('roamingNotAllowedCause', _RoamingNotAllowedParam_roamingNotAllowedCause),
        ('extensionContainer', _RoamingNotAllowedParam_extensionContainer),
        ('additionalRoamingNotAllowedCause', _RoamingNotAllowedParam_additionalRoamingNotAllowedCause),
        ])
    RoamingNotAllowedParam._ext = ['additionalRoamingNotAllowedCause']
    
    #-----< AdditionalRoamingNotAllowedCause >-----#
    AdditionalRoamingNotAllowedCause = ENUM(name='AdditionalRoamingNotAllowedCause', mode=MODE_TYPE)
    AdditionalRoamingNotAllowedCause._cont = ASN1Dict([('supportedRAT-TypesNotAllowed', 0)])
    AdditionalRoamingNotAllowedCause._ext = []
    
    #-----< RoamingNotAllowedCause >-----#
    RoamingNotAllowedCause = ENUM(name='RoamingNotAllowedCause', mode=MODE_TYPE)
    RoamingNotAllowedCause._cont = ASN1Dict([('plmnRoamingNotAllowed', 0), ('operatorDeterminedBarring', 3)])
    RoamingNotAllowedCause._ext = None
    
    #-----< CallBarredParam >-----#
    CallBarredParam = CHOICE(name='CallBarredParam', mode=MODE_TYPE)
    _CallBarredParam_callBarringCause = ENUM(name='callBarringCause', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarringCause')))
    _CallBarredParam_extensibleCallBarredParam = SEQ(name='extensibleCallBarredParam', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ExtensibleCallBarredParam')))
    CallBarredParam._cont = ASN1Dict([
        ('callBarringCause', _CallBarredParam_callBarringCause),
        ('extensibleCallBarredParam', _CallBarredParam_extensibleCallBarredParam),
        ])
    CallBarredParam._ext = None
    
    #-----< CallBarringCause >-----#
    CallBarringCause = ENUM(name='CallBarringCause', mode=MODE_TYPE)
    CallBarringCause._cont = ASN1Dict([('barringServiceActive', 0), ('operatorBarring', 1)])
    CallBarringCause._ext = None
    
    #-----< ExtensibleCallBarredParam >-----#
    ExtensibleCallBarredParam = SEQ(name='ExtensibleCallBarredParam', mode=MODE_TYPE)
    _ExtensibleCallBarredParam_callBarringCause = ENUM(name='callBarringCause', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CallBarringCause')), opt=True)
    _ExtensibleCallBarredParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ExtensibleCallBarredParam_unauthorisedMessageOriginator = NULL(name='unauthorisedMessageOriginator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ExtensibleCallBarredParam_anonymousCallRejection = NULL(name='anonymousCallRejection', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ExtensibleCallBarredParam._cont = ASN1Dict([
        ('callBarringCause', _ExtensibleCallBarredParam_callBarringCause),
        ('extensionContainer', _ExtensibleCallBarredParam_extensionContainer),
        ('unauthorisedMessageOriginator', _ExtensibleCallBarredParam_unauthorisedMessageOriginator),
        ('anonymousCallRejection', _ExtensibleCallBarredParam_anonymousCallRejection),
        ])
    ExtensibleCallBarredParam._ext = ['unauthorisedMessageOriginator', 'anonymousCallRejection']
    
    #-----< CUG-RejectParam >-----#
    CUG_RejectParam = SEQ(name='CUG-RejectParam', mode=MODE_TYPE)
    _CUG_RejectParam_cug_RejectCause = ENUM(name='cug-RejectCause', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'CUG-RejectCause')), opt=True)
    _CUG_RejectParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CUG_RejectParam._cont = ASN1Dict([
        ('cug-RejectCause', _CUG_RejectParam_cug_RejectCause),
        ('extensionContainer', _CUG_RejectParam_extensionContainer),
        ])
    CUG_RejectParam._ext = []
    
    #-----< CUG-RejectCause >-----#
    CUG_RejectCause = ENUM(name='CUG-RejectCause', mode=MODE_TYPE)
    CUG_RejectCause._cont = ASN1Dict([('incomingCallsBarredWithinCUG', 0), ('subscriberNotMemberOfCUG', 1), ('requestedBasicServiceViolatesCUG-Constraints', 5), ('calledPartySS-InteractionViolation', 7)])
    CUG_RejectCause._ext = None
    
    #-----< SS-IncompatibilityCause >-----#
    SS_IncompatibilityCause = SEQ(name='SS-IncompatibilityCause', mode=MODE_TYPE)
    _SS_IncompatibilityCause_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')), opt=True)
    _SS_IncompatibilityCause_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'BasicServiceCode')), opt=True)
    _SS_IncompatibilityCause_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')), opt=True)
    SS_IncompatibilityCause._cont = ASN1Dict([
        ('ss-Code', _SS_IncompatibilityCause_ss_Code),
        ('basicService', _SS_IncompatibilityCause_basicService),
        ('ss-Status', _SS_IncompatibilityCause_ss_Status),
        ])
    SS_IncompatibilityCause._ext = []
    
    #-----< PW-RegistrationFailureCause >-----#
    PW_RegistrationFailureCause = ENUM(name='PW-RegistrationFailureCause', mode=MODE_TYPE)
    PW_RegistrationFailureCause._cont = ASN1Dict([('undetermined', 0), ('invalidFormat', 1), ('newPasswordsMismatch', 2)])
    PW_RegistrationFailureCause._ext = None
    
    #-----< SM-EnumeratedDeliveryFailureCause >-----#
    SM_EnumeratedDeliveryFailureCause = ENUM(name='SM-EnumeratedDeliveryFailureCause', mode=MODE_TYPE)
    SM_EnumeratedDeliveryFailureCause._cont = ASN1Dict([('memoryCapacityExceeded', 0), ('equipmentProtocolError', 1), ('equipmentNotSM-Equipped', 2), ('unknownServiceCentre', 3), ('sc-Congestion', 4), ('invalidSME-Address', 5), ('subscriberNotSC-Subscriber', 6)])
    SM_EnumeratedDeliveryFailureCause._ext = None
    
    #-----< SM-DeliveryFailureCause >-----#
    SM_DeliveryFailureCause = SEQ(name='SM-DeliveryFailureCause', mode=MODE_TYPE)
    _SM_DeliveryFailureCause_sm_EnumeratedDeliveryFailureCause = ENUM(name='sm-EnumeratedDeliveryFailureCause', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'SM-EnumeratedDeliveryFailureCause')))
    _SM_DeliveryFailureCause_diagnosticInfo = OCT_STR(name='diagnosticInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')), opt=True)
    _SM_DeliveryFailureCause_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SM_DeliveryFailureCause._cont = ASN1Dict([
        ('sm-EnumeratedDeliveryFailureCause', _SM_DeliveryFailureCause_sm_EnumeratedDeliveryFailureCause),
        ('diagnosticInfo', _SM_DeliveryFailureCause_diagnosticInfo),
        ('extensionContainer', _SM_DeliveryFailureCause_extensionContainer),
        ])
    SM_DeliveryFailureCause._ext = []
    
    #-----< AbsentSubscriberSM-Param >-----#
    AbsentSubscriberSM_Param = SEQ(name='AbsentSubscriberSM-Param', mode=MODE_TYPE)
    _AbsentSubscriberSM_Param_absentSubscriberDiagnosticSM = INT(name='absentSubscriberDiagnosticSM', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    _AbsentSubscriberSM_Param_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _AbsentSubscriberSM_Param_additionalAbsentSubscriberDiagnosticSM = INT(name='additionalAbsentSubscriberDiagnosticSM', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    _AbsentSubscriberSM_Param_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _AbsentSubscriberSM_Param_requestedRetransmissionTime = OCT_STR(name='requestedRetransmissionTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Time')), opt=True)
    _AbsentSubscriberSM_Param_userIdentifierAlert = OCT_STR(name='userIdentifierAlert', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    AbsentSubscriberSM_Param._cont = ASN1Dict([
        ('absentSubscriberDiagnosticSM', _AbsentSubscriberSM_Param_absentSubscriberDiagnosticSM),
        ('extensionContainer', _AbsentSubscriberSM_Param_extensionContainer),
        ('additionalAbsentSubscriberDiagnosticSM', _AbsentSubscriberSM_Param_additionalAbsentSubscriberDiagnosticSM),
        ('imsi', _AbsentSubscriberSM_Param_imsi),
        ('requestedRetransmissionTime', _AbsentSubscriberSM_Param_requestedRetransmissionTime),
        ('userIdentifierAlert', _AbsentSubscriberSM_Param_userIdentifierAlert),
        ])
    AbsentSubscriberSM_Param._ext = ['additionalAbsentSubscriberDiagnosticSM', 'imsi', 'requestedRetransmissionTime', 'userIdentifierAlert']
    
    #-----< AbsentSubscriberDiagnosticSM >-----#
    AbsentSubscriberDiagnosticSM = INT(name='AbsentSubscriberDiagnosticSM', mode=MODE_TYPE)
    AbsentSubscriberDiagnosticSM._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< SystemFailureParam >-----#
    SystemFailureParam = CHOICE(name='SystemFailureParam', mode=MODE_TYPE)
    _SystemFailureParam_networkResource = ENUM(name='networkResource', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkResource')))
    _SystemFailureParam_extensibleSystemFailureParam = SEQ(name='extensibleSystemFailureParam', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'ExtensibleSystemFailureParam')))
    SystemFailureParam._cont = ASN1Dict([
        ('networkResource', _SystemFailureParam_networkResource),
        ('extensibleSystemFailureParam', _SystemFailureParam_extensibleSystemFailureParam),
        ])
    SystemFailureParam._ext = None
    
    #-----< ExtensibleSystemFailureParam >-----#
    ExtensibleSystemFailureParam = SEQ(name='ExtensibleSystemFailureParam', mode=MODE_TYPE)
    _ExtensibleSystemFailureParam_networkResource = ENUM(name='networkResource', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkResource')), opt=True)
    _ExtensibleSystemFailureParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ExtensibleSystemFailureParam_additionalNetworkResource = ENUM(name='additionalNetworkResource', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AdditionalNetworkResource')), opt=True)
    _ExtensibleSystemFailureParam_failureCauseParam = ENUM(name='failureCauseParam', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'FailureCauseParam')), opt=True)
    ExtensibleSystemFailureParam._cont = ASN1Dict([
        ('networkResource', _ExtensibleSystemFailureParam_networkResource),
        ('extensionContainer', _ExtensibleSystemFailureParam_extensionContainer),
        ('additionalNetworkResource', _ExtensibleSystemFailureParam_additionalNetworkResource),
        ('failureCauseParam', _ExtensibleSystemFailureParam_failureCauseParam),
        ])
    ExtensibleSystemFailureParam._ext = ['additionalNetworkResource', 'failureCauseParam']
    
    #-----< FailureCauseParam >-----#
    FailureCauseParam = ENUM(name='FailureCauseParam', mode=MODE_TYPE)
    FailureCauseParam._cont = ASN1Dict([('limitReachedOnNumberOfConcurrentLocationRequests', 0)])
    FailureCauseParam._ext = []
    
    #-----< DataMissingParam >-----#
    DataMissingParam = SEQ(name='DataMissingParam', mode=MODE_TYPE)
    _DataMissingParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    DataMissingParam._cont = ASN1Dict([
        ('extensionContainer', _DataMissingParam_extensionContainer),
        ])
    DataMissingParam._ext = []
    
    #-----< UnexpectedDataParam >-----#
    UnexpectedDataParam = SEQ(name='UnexpectedDataParam', mode=MODE_TYPE)
    _UnexpectedDataParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _UnexpectedDataParam_unexpectedSubscriber = NULL(name='unexpectedSubscriber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    UnexpectedDataParam._cont = ASN1Dict([
        ('extensionContainer', _UnexpectedDataParam_extensionContainer),
        ('unexpectedSubscriber', _UnexpectedDataParam_unexpectedSubscriber),
        ])
    UnexpectedDataParam._ext = ['unexpectedSubscriber']
    
    #-----< FacilityNotSupParam >-----#
    FacilityNotSupParam = SEQ(name='FacilityNotSupParam', mode=MODE_TYPE)
    _FacilityNotSupParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _FacilityNotSupParam_shapeOfLocationEstimateNotSupported = NULL(name='shapeOfLocationEstimateNotSupported', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _FacilityNotSupParam_neededLcsCapabilityNotSupportedInServingNode = NULL(name='neededLcsCapabilityNotSupportedInServingNode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    FacilityNotSupParam._cont = ASN1Dict([
        ('extensionContainer', _FacilityNotSupParam_extensionContainer),
        ('shapeOfLocationEstimateNotSupported', _FacilityNotSupParam_shapeOfLocationEstimateNotSupported),
        ('neededLcsCapabilityNotSupportedInServingNode', _FacilityNotSupParam_neededLcsCapabilityNotSupportedInServingNode),
        ])
    FacilityNotSupParam._ext = ['shapeOfLocationEstimateNotSupported', 'neededLcsCapabilityNotSupportedInServingNode']
    
    #-----< OR-NotAllowedParam >-----#
    OR_NotAllowedParam = SEQ(name='OR-NotAllowedParam', mode=MODE_TYPE)
    _OR_NotAllowedParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    OR_NotAllowedParam._cont = ASN1Dict([
        ('extensionContainer', _OR_NotAllowedParam_extensionContainer),
        ])
    OR_NotAllowedParam._ext = []
    
    #-----< UnknownSubscriberParam >-----#
    UnknownSubscriberParam = SEQ(name='UnknownSubscriberParam', mode=MODE_TYPE)
    _UnknownSubscriberParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _UnknownSubscriberParam_unknownSubscriberDiagnostic = ENUM(name='unknownSubscriberDiagnostic', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnknownSubscriberDiagnostic')), opt=True)
    UnknownSubscriberParam._cont = ASN1Dict([
        ('extensionContainer', _UnknownSubscriberParam_extensionContainer),
        ('unknownSubscriberDiagnostic', _UnknownSubscriberParam_unknownSubscriberDiagnostic),
        ])
    UnknownSubscriberParam._ext = ['unknownSubscriberDiagnostic']
    
    #-----< UnknownSubscriberDiagnostic >-----#
    UnknownSubscriberDiagnostic = ENUM(name='UnknownSubscriberDiagnostic', mode=MODE_TYPE)
    UnknownSubscriberDiagnostic._cont = ASN1Dict([('imsiUnknown', 0), ('gprs-eps-SubscriptionUnknown', 1), ('npdbMismatch', 2)])
    UnknownSubscriberDiagnostic._ext = ['npdbMismatch']
    
    #-----< NumberChangedParam >-----#
    NumberChangedParam = SEQ(name='NumberChangedParam', mode=MODE_TYPE)
    _NumberChangedParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    NumberChangedParam._cont = ASN1Dict([
        ('extensionContainer', _NumberChangedParam_extensionContainer),
        ])
    NumberChangedParam._ext = []
    
    #-----< UnidentifiedSubParam >-----#
    UnidentifiedSubParam = SEQ(name='UnidentifiedSubParam', mode=MODE_TYPE)
    _UnidentifiedSubParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    UnidentifiedSubParam._cont = ASN1Dict([
        ('extensionContainer', _UnidentifiedSubParam_extensionContainer),
        ])
    UnidentifiedSubParam._ext = []
    
    #-----< IllegalSubscriberParam >-----#
    IllegalSubscriberParam = SEQ(name='IllegalSubscriberParam', mode=MODE_TYPE)
    _IllegalSubscriberParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    IllegalSubscriberParam._cont = ASN1Dict([
        ('extensionContainer', _IllegalSubscriberParam_extensionContainer),
        ])
    IllegalSubscriberParam._ext = []
    
    #-----< IllegalEquipmentParam >-----#
    IllegalEquipmentParam = SEQ(name='IllegalEquipmentParam', mode=MODE_TYPE)
    _IllegalEquipmentParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    IllegalEquipmentParam._cont = ASN1Dict([
        ('extensionContainer', _IllegalEquipmentParam_extensionContainer),
        ])
    IllegalEquipmentParam._ext = []
    
    #-----< BearerServNotProvParam >-----#
    BearerServNotProvParam = SEQ(name='BearerServNotProvParam', mode=MODE_TYPE)
    _BearerServNotProvParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    BearerServNotProvParam._cont = ASN1Dict([
        ('extensionContainer', _BearerServNotProvParam_extensionContainer),
        ])
    BearerServNotProvParam._ext = []
    
    #-----< TeleservNotProvParam >-----#
    TeleservNotProvParam = SEQ(name='TeleservNotProvParam', mode=MODE_TYPE)
    _TeleservNotProvParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    TeleservNotProvParam._cont = ASN1Dict([
        ('extensionContainer', _TeleservNotProvParam_extensionContainer),
        ])
    TeleservNotProvParam._ext = []
    
    #-----< TracingBufferFullParam >-----#
    TracingBufferFullParam = SEQ(name='TracingBufferFullParam', mode=MODE_TYPE)
    _TracingBufferFullParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    TracingBufferFullParam._cont = ASN1Dict([
        ('extensionContainer', _TracingBufferFullParam_extensionContainer),
        ])
    TracingBufferFullParam._ext = []
    
    #-----< NoRoamingNbParam >-----#
    NoRoamingNbParam = SEQ(name='NoRoamingNbParam', mode=MODE_TYPE)
    _NoRoamingNbParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    NoRoamingNbParam._cont = ASN1Dict([
        ('extensionContainer', _NoRoamingNbParam_extensionContainer),
        ])
    NoRoamingNbParam._ext = []
    
    #-----< AbsentSubscriberParam >-----#
    AbsentSubscriberParam = SEQ(name='AbsentSubscriberParam', mode=MODE_TYPE)
    _AbsentSubscriberParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _AbsentSubscriberParam_absentSubscriberReason = ENUM(name='absentSubscriberReason', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberReason')), opt=True)
    AbsentSubscriberParam._cont = ASN1Dict([
        ('extensionContainer', _AbsentSubscriberParam_extensionContainer),
        ('absentSubscriberReason', _AbsentSubscriberParam_absentSubscriberReason),
        ])
    AbsentSubscriberParam._ext = ['absentSubscriberReason']
    
    #-----< AbsentSubscriberReason >-----#
    AbsentSubscriberReason = ENUM(name='AbsentSubscriberReason', mode=MODE_TYPE)
    AbsentSubscriberReason._cont = ASN1Dict([('imsiDetach', 0), ('restrictedArea', 1), ('noPageResponse', 2), ('purgedMS', 3), ('mtRoamingRetry', 4), ('busySubscriber', 5)])
    AbsentSubscriberReason._ext = ['purgedMS', 'mtRoamingRetry', 'busySubscriber']
    
    #-----< BusySubscriberParam >-----#
    BusySubscriberParam = SEQ(name='BusySubscriberParam', mode=MODE_TYPE)
    _BusySubscriberParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _BusySubscriberParam_ccbs_Possible = NULL(name='ccbs-Possible', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BusySubscriberParam_ccbs_Busy = NULL(name='ccbs-Busy', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    BusySubscriberParam._cont = ASN1Dict([
        ('extensionContainer', _BusySubscriberParam_extensionContainer),
        ('ccbs-Possible', _BusySubscriberParam_ccbs_Possible),
        ('ccbs-Busy', _BusySubscriberParam_ccbs_Busy),
        ])
    BusySubscriberParam._ext = ['ccbs-Possible', 'ccbs-Busy']
    
    #-----< NoSubscriberReplyParam >-----#
    NoSubscriberReplyParam = SEQ(name='NoSubscriberReplyParam', mode=MODE_TYPE)
    _NoSubscriberReplyParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    NoSubscriberReplyParam._cont = ASN1Dict([
        ('extensionContainer', _NoSubscriberReplyParam_extensionContainer),
        ])
    NoSubscriberReplyParam._ext = []
    
    #-----< ForwardingViolationParam >-----#
    ForwardingViolationParam = SEQ(name='ForwardingViolationParam', mode=MODE_TYPE)
    _ForwardingViolationParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ForwardingViolationParam._cont = ASN1Dict([
        ('extensionContainer', _ForwardingViolationParam_extensionContainer),
        ])
    ForwardingViolationParam._ext = []
    
    #-----< ForwardingFailedParam >-----#
    ForwardingFailedParam = SEQ(name='ForwardingFailedParam', mode=MODE_TYPE)
    _ForwardingFailedParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ForwardingFailedParam._cont = ASN1Dict([
        ('extensionContainer', _ForwardingFailedParam_extensionContainer),
        ])
    ForwardingFailedParam._ext = []
    
    #-----< ATI-NotAllowedParam >-----#
    ATI_NotAllowedParam = SEQ(name='ATI-NotAllowedParam', mode=MODE_TYPE)
    _ATI_NotAllowedParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ATI_NotAllowedParam._cont = ASN1Dict([
        ('extensionContainer', _ATI_NotAllowedParam_extensionContainer),
        ])
    ATI_NotAllowedParam._ext = []
    
    #-----< ATSI-NotAllowedParam >-----#
    ATSI_NotAllowedParam = SEQ(name='ATSI-NotAllowedParam', mode=MODE_TYPE)
    _ATSI_NotAllowedParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ATSI_NotAllowedParam._cont = ASN1Dict([
        ('extensionContainer', _ATSI_NotAllowedParam_extensionContainer),
        ])
    ATSI_NotAllowedParam._ext = []
    
    #-----< ATM-NotAllowedParam >-----#
    ATM_NotAllowedParam = SEQ(name='ATM-NotAllowedParam', mode=MODE_TYPE)
    _ATM_NotAllowedParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ATM_NotAllowedParam._cont = ASN1Dict([
        ('extensionContainer', _ATM_NotAllowedParam_extensionContainer),
        ])
    ATM_NotAllowedParam._ext = []
    
    #-----< IllegalSS-OperationParam >-----#
    IllegalSS_OperationParam = SEQ(name='IllegalSS-OperationParam', mode=MODE_TYPE)
    _IllegalSS_OperationParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    IllegalSS_OperationParam._cont = ASN1Dict([
        ('extensionContainer', _IllegalSS_OperationParam_extensionContainer),
        ])
    IllegalSS_OperationParam._ext = []
    
    #-----< SS-NotAvailableParam >-----#
    SS_NotAvailableParam = SEQ(name='SS-NotAvailableParam', mode=MODE_TYPE)
    _SS_NotAvailableParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SS_NotAvailableParam._cont = ASN1Dict([
        ('extensionContainer', _SS_NotAvailableParam_extensionContainer),
        ])
    SS_NotAvailableParam._ext = []
    
    #-----< SS-SubscriptionViolationParam >-----#
    SS_SubscriptionViolationParam = SEQ(name='SS-SubscriptionViolationParam', mode=MODE_TYPE)
    _SS_SubscriptionViolationParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SS_SubscriptionViolationParam._cont = ASN1Dict([
        ('extensionContainer', _SS_SubscriptionViolationParam_extensionContainer),
        ])
    SS_SubscriptionViolationParam._ext = []
    
    #-----< InformationNotAvailableParam >-----#
    InformationNotAvailableParam = SEQ(name='InformationNotAvailableParam', mode=MODE_TYPE)
    _InformationNotAvailableParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    InformationNotAvailableParam._cont = ASN1Dict([
        ('extensionContainer', _InformationNotAvailableParam_extensionContainer),
        ])
    InformationNotAvailableParam._ext = []
    
    #-----< SubBusyForMT-SMS-Param >-----#
    SubBusyForMT_SMS_Param = SEQ(name='SubBusyForMT-SMS-Param', mode=MODE_TYPE)
    _SubBusyForMT_SMS_Param_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SubBusyForMT_SMS_Param_gprsConnectionSuspended = NULL(name='gprsConnectionSuspended', mode=MODE_TYPE, opt=True)
    SubBusyForMT_SMS_Param._cont = ASN1Dict([
        ('extensionContainer', _SubBusyForMT_SMS_Param_extensionContainer),
        ('gprsConnectionSuspended', _SubBusyForMT_SMS_Param_gprsConnectionSuspended),
        ])
    SubBusyForMT_SMS_Param._ext = ['gprsConnectionSuspended']
    
    #-----< MessageWaitListFullParam >-----#
    MessageWaitListFullParam = SEQ(name='MessageWaitListFullParam', mode=MODE_TYPE)
    _MessageWaitListFullParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MessageWaitListFullParam._cont = ASN1Dict([
        ('extensionContainer', _MessageWaitListFullParam_extensionContainer),
        ])
    MessageWaitListFullParam._ext = []
    
    #-----< ResourceLimitationParam >-----#
    ResourceLimitationParam = SEQ(name='ResourceLimitationParam', mode=MODE_TYPE)
    _ResourceLimitationParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ResourceLimitationParam._cont = ASN1Dict([
        ('extensionContainer', _ResourceLimitationParam_extensionContainer),
        ])
    ResourceLimitationParam._ext = []
    
    #-----< NoGroupCallNbParam >-----#
    NoGroupCallNbParam = SEQ(name='NoGroupCallNbParam', mode=MODE_TYPE)
    _NoGroupCallNbParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    NoGroupCallNbParam._cont = ASN1Dict([
        ('extensionContainer', _NoGroupCallNbParam_extensionContainer),
        ])
    NoGroupCallNbParam._ext = []
    
    #-----< IncompatibleTerminalParam >-----#
    IncompatibleTerminalParam = SEQ(name='IncompatibleTerminalParam', mode=MODE_TYPE)
    _IncompatibleTerminalParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    IncompatibleTerminalParam._cont = ASN1Dict([
        ('extensionContainer', _IncompatibleTerminalParam_extensionContainer),
        ])
    IncompatibleTerminalParam._ext = []
    
    #-----< ShortTermDenialParam >-----#
    ShortTermDenialParam = SEQ(name='ShortTermDenialParam', mode=MODE_TYPE)
    ShortTermDenialParam._cont = ASN1Dict([
        ])
    ShortTermDenialParam._ext = []
    
    #-----< LongTermDenialParam >-----#
    LongTermDenialParam = SEQ(name='LongTermDenialParam', mode=MODE_TYPE)
    LongTermDenialParam._cont = ASN1Dict([
        ])
    LongTermDenialParam._ext = []
    
    #-----< UnauthorizedRequestingNetwork-Param >-----#
    UnauthorizedRequestingNetwork_Param = SEQ(name='UnauthorizedRequestingNetwork-Param', mode=MODE_TYPE)
    _UnauthorizedRequestingNetwork_Param_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    UnauthorizedRequestingNetwork_Param._cont = ASN1Dict([
        ('extensionContainer', _UnauthorizedRequestingNetwork_Param_extensionContainer),
        ])
    UnauthorizedRequestingNetwork_Param._ext = []
    
    #-----< UnauthorizedLCSClient-Param >-----#
    UnauthorizedLCSClient_Param = SEQ(name='UnauthorizedLCSClient-Param', mode=MODE_TYPE)
    _UnauthorizedLCSClient_Param_unauthorizedLCSClient_Diagnostic = ENUM(name='unauthorizedLCSClient-Diagnostic', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'UnauthorizedLCSClient-Diagnostic')), opt=True)
    _UnauthorizedLCSClient_Param_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    UnauthorizedLCSClient_Param._cont = ASN1Dict([
        ('unauthorizedLCSClient-Diagnostic', _UnauthorizedLCSClient_Param_unauthorizedLCSClient_Diagnostic),
        ('extensionContainer', _UnauthorizedLCSClient_Param_extensionContainer),
        ])
    UnauthorizedLCSClient_Param._ext = []
    
    #-----< UnauthorizedLCSClient-Diagnostic >-----#
    UnauthorizedLCSClient_Diagnostic = ENUM(name='UnauthorizedLCSClient-Diagnostic', mode=MODE_TYPE)
    UnauthorizedLCSClient_Diagnostic._cont = ASN1Dict([('noAdditionalInformation', 0), ('clientNotInMSPrivacyExceptionList', 1), ('callToClientNotSetup', 2), ('privacyOverrideNotApplicable', 3), ('disallowedByLocalRegulatoryRequirements', 4), ('unauthorizedPrivacyClass', 5), ('unauthorizedCallSessionUnrelatedExternalClient', 6), ('unauthorizedCallSessionRelatedExternalClient', 7)])
    UnauthorizedLCSClient_Diagnostic._ext = ['unauthorizedPrivacyClass', 'unauthorizedCallSessionUnrelatedExternalClient', 'unauthorizedCallSessionRelatedExternalClient']
    
    #-----< PositionMethodFailure-Param >-----#
    PositionMethodFailure_Param = SEQ(name='PositionMethodFailure-Param', mode=MODE_TYPE)
    _PositionMethodFailure_Param_positionMethodFailure_Diagnostic = ENUM(name='positionMethodFailure-Diagnostic', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'PositionMethodFailure-Diagnostic')), opt=True)
    _PositionMethodFailure_Param_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    PositionMethodFailure_Param._cont = ASN1Dict([
        ('positionMethodFailure-Diagnostic', _PositionMethodFailure_Param_positionMethodFailure_Diagnostic),
        ('extensionContainer', _PositionMethodFailure_Param_extensionContainer),
        ])
    PositionMethodFailure_Param._ext = []
    
    #-----< PositionMethodFailure-Diagnostic >-----#
    PositionMethodFailure_Diagnostic = ENUM(name='PositionMethodFailure-Diagnostic', mode=MODE_TYPE)
    PositionMethodFailure_Diagnostic._cont = ASN1Dict([('congestion', 0), ('insufficientResources', 1), ('insufficientMeasurementData', 2), ('inconsistentMeasurementData', 3), ('locationProcedureNotCompleted', 4), ('locationProcedureNotSupportedByTargetMS', 5), ('qoSNotAttainable', 6), ('positionMethodNotAvailableInNetwork', 7), ('positionMethodNotAvailableInLocationArea', 8)])
    PositionMethodFailure_Diagnostic._ext = []
    
    #-----< UnknownOrUnreachableLCSClient-Param >-----#
    UnknownOrUnreachableLCSClient_Param = SEQ(name='UnknownOrUnreachableLCSClient-Param', mode=MODE_TYPE)
    _UnknownOrUnreachableLCSClient_Param_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    UnknownOrUnreachableLCSClient_Param._cont = ASN1Dict([
        ('extensionContainer', _UnknownOrUnreachableLCSClient_Param_extensionContainer),
        ])
    UnknownOrUnreachableLCSClient_Param._ext = []
    
    #-----< MM-EventNotSupported-Param >-----#
    MM_EventNotSupported_Param = SEQ(name='MM-EventNotSupported-Param', mode=MODE_TYPE)
    _MM_EventNotSupported_Param_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MM_EventNotSupported_Param._cont = ASN1Dict([
        ('extensionContainer', _MM_EventNotSupported_Param_extensionContainer),
        ])
    MM_EventNotSupported_Param._ext = []
    
    #-----< TargetCellOutsideGCA-Param >-----#
    TargetCellOutsideGCA_Param = SEQ(name='TargetCellOutsideGCA-Param', mode=MODE_TYPE)
    _TargetCellOutsideGCA_Param_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    TargetCellOutsideGCA_Param._cont = ASN1Dict([
        ('extensionContainer', _TargetCellOutsideGCA_Param_extensionContainer),
        ])
    TargetCellOutsideGCA_Param._ext = []
    
    #-----< OngoingGroupCallParam >-----#
    OngoingGroupCallParam = SEQ(name='OngoingGroupCallParam', mode=MODE_TYPE)
    _OngoingGroupCallParam_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    OngoingGroupCallParam._cont = ASN1Dict([
        ('extensionContainer', _OngoingGroupCallParam_extensionContainer),
        ])
    OngoingGroupCallParam._ext = []
    
    _all_ = [
        _RoamingNotAllowedParam_roamingNotAllowedCause,
        _RoamingNotAllowedParam_extensionContainer,
        _RoamingNotAllowedParam_additionalRoamingNotAllowedCause,
        RoamingNotAllowedParam,
        AdditionalRoamingNotAllowedCause,
        RoamingNotAllowedCause,
        _CallBarredParam_callBarringCause,
        _CallBarredParam_extensibleCallBarredParam,
        CallBarredParam,
        CallBarringCause,
        _ExtensibleCallBarredParam_callBarringCause,
        _ExtensibleCallBarredParam_extensionContainer,
        _ExtensibleCallBarredParam_unauthorisedMessageOriginator,
        _ExtensibleCallBarredParam_anonymousCallRejection,
        ExtensibleCallBarredParam,
        _CUG_RejectParam_cug_RejectCause,
        _CUG_RejectParam_extensionContainer,
        CUG_RejectParam,
        CUG_RejectCause,
        _SS_IncompatibilityCause_ss_Code,
        _SS_IncompatibilityCause_basicService,
        _SS_IncompatibilityCause_ss_Status,
        SS_IncompatibilityCause,
        PW_RegistrationFailureCause,
        SM_EnumeratedDeliveryFailureCause,
        _SM_DeliveryFailureCause_sm_EnumeratedDeliveryFailureCause,
        _SM_DeliveryFailureCause_diagnosticInfo,
        _SM_DeliveryFailureCause_extensionContainer,
        SM_DeliveryFailureCause,
        _AbsentSubscriberSM_Param_absentSubscriberDiagnosticSM,
        _AbsentSubscriberSM_Param_extensionContainer,
        _AbsentSubscriberSM_Param_additionalAbsentSubscriberDiagnosticSM,
        _AbsentSubscriberSM_Param_imsi,
        _AbsentSubscriberSM_Param_requestedRetransmissionTime,
        _AbsentSubscriberSM_Param_userIdentifierAlert,
        AbsentSubscriberSM_Param,
        AbsentSubscriberDiagnosticSM,
        _SystemFailureParam_networkResource,
        _SystemFailureParam_extensibleSystemFailureParam,
        SystemFailureParam,
        _ExtensibleSystemFailureParam_networkResource,
        _ExtensibleSystemFailureParam_extensionContainer,
        _ExtensibleSystemFailureParam_additionalNetworkResource,
        _ExtensibleSystemFailureParam_failureCauseParam,
        ExtensibleSystemFailureParam,
        FailureCauseParam,
        _DataMissingParam_extensionContainer,
        DataMissingParam,
        _UnexpectedDataParam_extensionContainer,
        _UnexpectedDataParam_unexpectedSubscriber,
        UnexpectedDataParam,
        _FacilityNotSupParam_extensionContainer,
        _FacilityNotSupParam_shapeOfLocationEstimateNotSupported,
        _FacilityNotSupParam_neededLcsCapabilityNotSupportedInServingNode,
        FacilityNotSupParam,
        _OR_NotAllowedParam_extensionContainer,
        OR_NotAllowedParam,
        _UnknownSubscriberParam_extensionContainer,
        _UnknownSubscriberParam_unknownSubscriberDiagnostic,
        UnknownSubscriberParam,
        UnknownSubscriberDiagnostic,
        _NumberChangedParam_extensionContainer,
        NumberChangedParam,
        _UnidentifiedSubParam_extensionContainer,
        UnidentifiedSubParam,
        _IllegalSubscriberParam_extensionContainer,
        IllegalSubscriberParam,
        _IllegalEquipmentParam_extensionContainer,
        IllegalEquipmentParam,
        _BearerServNotProvParam_extensionContainer,
        BearerServNotProvParam,
        _TeleservNotProvParam_extensionContainer,
        TeleservNotProvParam,
        _TracingBufferFullParam_extensionContainer,
        TracingBufferFullParam,
        _NoRoamingNbParam_extensionContainer,
        NoRoamingNbParam,
        _AbsentSubscriberParam_extensionContainer,
        _AbsentSubscriberParam_absentSubscriberReason,
        AbsentSubscriberParam,
        AbsentSubscriberReason,
        _BusySubscriberParam_extensionContainer,
        _BusySubscriberParam_ccbs_Possible,
        _BusySubscriberParam_ccbs_Busy,
        BusySubscriberParam,
        _NoSubscriberReplyParam_extensionContainer,
        NoSubscriberReplyParam,
        _ForwardingViolationParam_extensionContainer,
        ForwardingViolationParam,
        _ForwardingFailedParam_extensionContainer,
        ForwardingFailedParam,
        _ATI_NotAllowedParam_extensionContainer,
        ATI_NotAllowedParam,
        _ATSI_NotAllowedParam_extensionContainer,
        ATSI_NotAllowedParam,
        _ATM_NotAllowedParam_extensionContainer,
        ATM_NotAllowedParam,
        _IllegalSS_OperationParam_extensionContainer,
        IllegalSS_OperationParam,
        _SS_NotAvailableParam_extensionContainer,
        SS_NotAvailableParam,
        _SS_SubscriptionViolationParam_extensionContainer,
        SS_SubscriptionViolationParam,
        _InformationNotAvailableParam_extensionContainer,
        InformationNotAvailableParam,
        _SubBusyForMT_SMS_Param_extensionContainer,
        _SubBusyForMT_SMS_Param_gprsConnectionSuspended,
        SubBusyForMT_SMS_Param,
        _MessageWaitListFullParam_extensionContainer,
        MessageWaitListFullParam,
        _ResourceLimitationParam_extensionContainer,
        ResourceLimitationParam,
        _NoGroupCallNbParam_extensionContainer,
        NoGroupCallNbParam,
        _IncompatibleTerminalParam_extensionContainer,
        IncompatibleTerminalParam,
        ShortTermDenialParam,
        LongTermDenialParam,
        _UnauthorizedRequestingNetwork_Param_extensionContainer,
        UnauthorizedRequestingNetwork_Param,
        _UnauthorizedLCSClient_Param_unauthorizedLCSClient_Diagnostic,
        _UnauthorizedLCSClient_Param_extensionContainer,
        UnauthorizedLCSClient_Param,
        UnauthorizedLCSClient_Diagnostic,
        _PositionMethodFailure_Param_positionMethodFailure_Diagnostic,
        _PositionMethodFailure_Param_extensionContainer,
        PositionMethodFailure_Param,
        PositionMethodFailure_Diagnostic,
        _UnknownOrUnreachableLCSClient_Param_extensionContainer,
        UnknownOrUnreachableLCSClient_Param,
        _MM_EventNotSupported_Param_extensionContainer,
        MM_EventNotSupported_Param,
        _TargetCellOutsideGCA_Param_extensionContainer,
        TargetCellOutsideGCA_Param,
        _OngoingGroupCallParam_extensionContainer,
        OngoingGroupCallParam,
    ]

class MAP_ExtensionDataTypes:

    _name_  = 'MAP-ExtensionDataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 21, 16]
    
    _obj_ = [
        'MAP-EXTENSION',
        'ExtensionContainer',
        'SLR-ArgExtensionContainer',
        'PrivateExtensionList',
        'PrivateExtension',
        'maxNumOfPrivateExtensions',
        'ExtensionSet',
        'PCS-Extensions',
        'SLR-Arg-PCS-Extensions',
        ]
    _type_ = [
        'MAP-EXTENSION',
        'ExtensionContainer',
        'SLR-ArgExtensionContainer',
        'PrivateExtensionList',
        'PrivateExtension',
        'PCS-Extensions',
        'SLR-Arg-PCS-Extensions',
        ]
    _set_ = [
        'ExtensionSet',
        ]
    _val_ = [
        'maxNumOfPrivateExtensions',
        ]
    _class_ = [
        'MAP-EXTENSION',
        'ExtensionSet',
        ]
    _param_ = [
        ]
    
    #-----< MAP-EXTENSION >-----#
    MAP_EXTENSION = CLASS(name='MAP-EXTENSION', mode=MODE_TYPE)
    _MAP_EXTENSION_ExtensionType = OPEN(name='ExtensionType', mode=MODE_TYPE, opt=True)
    _MAP_EXTENSION_extensionId = OID(name='extensionId', mode=MODE_VALUE)
    MAP_EXTENSION._cont = ASN1Dict([
        ('ExtensionType', _MAP_EXTENSION_ExtensionType),
        ('extensionId', _MAP_EXTENSION_extensionId),
        ])
    
    #-----< ExtensionContainer >-----#
    ExtensionContainer = SEQ(name='ExtensionContainer', mode=MODE_TYPE)
    _ExtensionContainer_privateExtensionList = SEQ_OF(name='privateExtensionList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'PrivateExtensionList')), opt=True)
    _ExtensionContainer_pcs_Extensions = SEQ(name='pcs-Extensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'PCS-Extensions')), opt=True)
    ExtensionContainer._cont = ASN1Dict([
        ('privateExtensionList', _ExtensionContainer_privateExtensionList),
        ('pcs-Extensions', _ExtensionContainer_pcs_Extensions),
        ])
    ExtensionContainer._ext = []
    
    #-----< SLR-ArgExtensionContainer >-----#
    SLR_ArgExtensionContainer = SEQ(name='SLR-ArgExtensionContainer', mode=MODE_TYPE)
    _SLR_ArgExtensionContainer_privateExtensionList = SEQ_OF(name='privateExtensionList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'PrivateExtensionList')), opt=True)
    _SLR_ArgExtensionContainer_slr_Arg_PCS_Extensions = SEQ(name='slr-Arg-PCS-Extensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'SLR-Arg-PCS-Extensions')), opt=True)
    SLR_ArgExtensionContainer._cont = ASN1Dict([
        ('privateExtensionList', _SLR_ArgExtensionContainer_privateExtensionList),
        ('slr-Arg-PCS-Extensions', _SLR_ArgExtensionContainer_slr_Arg_PCS_Extensions),
        ])
    SLR_ArgExtensionContainer._ext = []
    
    #-----< PrivateExtensionList >-----#
    PrivateExtensionList = SEQ_OF(name='PrivateExtensionList', mode=MODE_TYPE)
    _PrivateExtensionList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'PrivateExtension')))
    PrivateExtensionList._cont = _PrivateExtensionList__item_
    PrivateExtensionList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< PrivateExtension >-----#
    PrivateExtension = SEQ(name='PrivateExtension', mode=MODE_TYPE)
    _PrivateExtension_extId = OID(name='extId', mode=MODE_TYPE, typeref=ASN1RefClassField(('MAP-ExtensionDataTypes', 'MAP-EXTENSION'), ['extensionId']))
    __PrivateExtension_extId_tab = CLASS(name='_tab_MAP-EXTENSION', mode=MODE_SET, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'MAP-EXTENSION')))
    __PrivateExtension_extId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    _PrivateExtension_extId._const_tab = __PrivateExtension_extId_tab
    _PrivateExtension_extId._const_tab_at = None
    _PrivateExtension_extId._const_tab_id = 'extensionId'
    _PrivateExtension_extType = OPEN(name='extType', mode=MODE_TYPE, typeref=ASN1RefClassField(('MAP-ExtensionDataTypes', 'MAP-EXTENSION'), ['ExtensionType']), opt=True)
    __PrivateExtension_extType_tab = CLASS(name='_tab_MAP-EXTENSION', mode=MODE_SET, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'MAP-EXTENSION')))
    __PrivateExtension_extType_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    _PrivateExtension_extType._const_tab = __PrivateExtension_extType_tab
    _PrivateExtension_extType._const_tab_at = ('..', 'extId')
    _PrivateExtension_extType._const_tab_id = 'ExtensionType'
    PrivateExtension._cont = ASN1Dict([
        ('extId', _PrivateExtension_extId),
        ('extType', _PrivateExtension_extType),
        ])
    PrivateExtension._ext = None
    
    #-----< maxNumOfPrivateExtensions >-----#
    maxNumOfPrivateExtensions = INT(name='maxNumOfPrivateExtensions', mode=MODE_VALUE)
    maxNumOfPrivateExtensions._val = 10
    
    #-----< ExtensionSet >-----#
    ExtensionSet = CLASS(name='ExtensionSet', mode=MODE_SET, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'MAP-EXTENSION')))
    ExtensionSet._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< PCS-Extensions >-----#
    PCS_Extensions = SEQ(name='PCS-Extensions', mode=MODE_TYPE)
    PCS_Extensions._cont = ASN1Dict([
        ])
    PCS_Extensions._ext = []
    
    #-----< SLR-Arg-PCS-Extensions >-----#
    SLR_Arg_PCS_Extensions = SEQ(name='SLR-Arg-PCS-Extensions', mode=MODE_TYPE)
    _SLR_Arg_PCS_Extensions_na_ESRK_Request = NULL(name='na-ESRK-Request', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SLR_Arg_PCS_Extensions._cont = ASN1Dict([
        ('na-ESRK-Request', _SLR_Arg_PCS_Extensions_na_ESRK_Request),
        ])
    SLR_Arg_PCS_Extensions._ext = ['na-ESRK-Request']
    
    _all_ = [
        _MAP_EXTENSION_ExtensionType,
        _MAP_EXTENSION_extensionId,
        MAP_EXTENSION,
        _ExtensionContainer_privateExtensionList,
        _ExtensionContainer_pcs_Extensions,
        ExtensionContainer,
        _SLR_ArgExtensionContainer_privateExtensionList,
        _SLR_ArgExtensionContainer_slr_Arg_PCS_Extensions,
        SLR_ArgExtensionContainer,
        _PrivateExtensionList__item_,
        PrivateExtensionList,
        __PrivateExtension_extId_tab,
        _PrivateExtension_extId,
        __PrivateExtension_extType_tab,
        _PrivateExtension_extType,
        PrivateExtension,
        maxNumOfPrivateExtensions,
        ExtensionSet,
        PCS_Extensions,
        _SLR_Arg_PCS_Extensions_na_ESRK_Request,
        SLR_Arg_PCS_Extensions,
    ]

class MAP_LCS_DataTypes:

    _name_  = 'MAP-LCS-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 25, 16]
    
    _obj_ = [
        'RoutingInfoForLCS-Arg',
        'RoutingInfoForLCS-Res',
        'LCSLocationInfo',
        'ProvideSubscriberLocation-Arg',
        'LocationType',
        'LocationEstimateType',
        'DeferredLocationEventType',
        'LCS-ClientID',
        'LCSClientType',
        'LCSClientName',
        'NameString',
        'maxNameStringLength',
        'LCSRequestorID',
        'RequestorIDString',
        'maxRequestorIDStringLength',
        'LCS-FormatIndicator',
        'LCS-Priority',
        'LCS-QoS',
        'Horizontal-Accuracy',
        'Vertical-Accuracy',
        'ResponseTime',
        'ResponseTimeCategory',
        'SupportedGADShapes',
        'LCS-ReferenceNumber',
        'LCSCodeword',
        'LCSCodewordString',
        'maxLCSCodewordStringLength',
        'LCS-PrivacyCheck',
        'PrivacyCheckRelatedAction',
        'AreaEventInfo',
        'AreaDefinition',
        'AreaList',
        'maxNumOfAreas',
        'Area',
        'AreaType',
        'AreaIdentification',
        'OccurrenceInfo',
        'IntervalTime',
        'PeriodicLDRInfo',
        'ReportingAmount',
        'maxReportingAmount',
        'ReportingInterval',
        'maxReportingInterval',
        'ReportingPLMNList',
        'PLMNList',
        'maxNumOfReportingPLMN',
        'ReportingPLMN',
        'RAN-Technology',
        'ProvideSubscriberLocation-Res',
        'AccuracyFulfilmentIndicator',
        'Ext-GeographicalInformation',
        'maxExt-GeographicalInformation',
        'VelocityEstimate',
        'PositioningDataInformation',
        'maxPositioningDataInformation',
        'UtranPositioningDataInfo',
        'maxUtranPositioningDataInfo',
        'GeranGANSSpositioningData',
        'maxGeranGANSSpositioningData',
        'UtranGANSSpositioningData',
        'maxUtranGANSSpositioningData',
        'UtranAdditionalPositioningData',
        'maxUtranAdditionalPositioningData',
        'UtranBaroPressureMeas',
        'UtranCivicAddress',
        'Add-GeographicalInformation',
        'maxAdd-GeographicalInformation',
        'SubscriberLocationReport-Arg',
        'Deferredmt-lrData',
        'LCS-Event',
        'TerminationCause',
        'SequenceNumber',
        'ServingNodeAddress',
        'SubscriberLocationReport-Res',
        ]
    _type_ = [
        'RoutingInfoForLCS-Arg',
        'RoutingInfoForLCS-Res',
        'LCSLocationInfo',
        'ProvideSubscriberLocation-Arg',
        'LocationType',
        'LocationEstimateType',
        'DeferredLocationEventType',
        'LCS-ClientID',
        'LCSClientType',
        'LCSClientName',
        'NameString',
        'LCSRequestorID',
        'RequestorIDString',
        'LCS-FormatIndicator',
        'LCS-Priority',
        'LCS-QoS',
        'Horizontal-Accuracy',
        'Vertical-Accuracy',
        'ResponseTime',
        'ResponseTimeCategory',
        'SupportedGADShapes',
        'LCS-ReferenceNumber',
        'LCSCodeword',
        'LCSCodewordString',
        'LCS-PrivacyCheck',
        'PrivacyCheckRelatedAction',
        'AreaEventInfo',
        'AreaDefinition',
        'AreaList',
        'Area',
        'AreaType',
        'AreaIdentification',
        'OccurrenceInfo',
        'IntervalTime',
        'PeriodicLDRInfo',
        'ReportingAmount',
        'ReportingInterval',
        'ReportingPLMNList',
        'PLMNList',
        'ReportingPLMN',
        'RAN-Technology',
        'ProvideSubscriberLocation-Res',
        'AccuracyFulfilmentIndicator',
        'Ext-GeographicalInformation',
        'VelocityEstimate',
        'PositioningDataInformation',
        'UtranPositioningDataInfo',
        'GeranGANSSpositioningData',
        'UtranGANSSpositioningData',
        'UtranAdditionalPositioningData',
        'UtranBaroPressureMeas',
        'UtranCivicAddress',
        'Add-GeographicalInformation',
        'SubscriberLocationReport-Arg',
        'Deferredmt-lrData',
        'LCS-Event',
        'TerminationCause',
        'SequenceNumber',
        'ServingNodeAddress',
        'SubscriberLocationReport-Res',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxNameStringLength',
        'maxRequestorIDStringLength',
        'maxLCSCodewordStringLength',
        'maxNumOfAreas',
        'maxReportingAmount',
        'maxReportingInterval',
        'maxNumOfReportingPLMN',
        'maxExt-GeographicalInformation',
        'maxPositioningDataInformation',
        'maxUtranPositioningDataInfo',
        'maxGeranGANSSpositioningData',
        'maxUtranGANSSpositioningData',
        'maxUtranAdditionalPositioningData',
        'maxAdd-GeographicalInformation',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< RoutingInfoForLCS-Arg >-----#
    RoutingInfoForLCS_Arg = SEQ(name='RoutingInfoForLCS-Arg', mode=MODE_TYPE)
    _RoutingInfoForLCS_Arg_mlcNumber = OCT_STR(name='mlcNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _RoutingInfoForLCS_Arg_targetMS = CHOICE(name='targetMS', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'SubscriberIdentity')))
    _RoutingInfoForLCS_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    RoutingInfoForLCS_Arg._cont = ASN1Dict([
        ('mlcNumber', _RoutingInfoForLCS_Arg_mlcNumber),
        ('targetMS', _RoutingInfoForLCS_Arg_targetMS),
        ('extensionContainer', _RoutingInfoForLCS_Arg_extensionContainer),
        ])
    RoutingInfoForLCS_Arg._ext = []
    
    #-----< RoutingInfoForLCS-Res >-----#
    RoutingInfoForLCS_Res = SEQ(name='RoutingInfoForLCS-Res', mode=MODE_TYPE)
    _RoutingInfoForLCS_Res_targetMS = CHOICE(name='targetMS', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'SubscriberIdentity')))
    _RoutingInfoForLCS_Res_lcsLocationInfo = SEQ(name='lcsLocationInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCSLocationInfo')))
    _RoutingInfoForLCS_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _RoutingInfoForLCS_Res_v_gmlc_Address = OCT_STR(name='v-gmlc-Address', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _RoutingInfoForLCS_Res_h_gmlc_Address = OCT_STR(name='h-gmlc-Address', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _RoutingInfoForLCS_Res_ppr_Address = OCT_STR(name='ppr-Address', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _RoutingInfoForLCS_Res_additional_v_gmlc_Address = OCT_STR(name='additional-v-gmlc-Address', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    RoutingInfoForLCS_Res._cont = ASN1Dict([
        ('targetMS', _RoutingInfoForLCS_Res_targetMS),
        ('lcsLocationInfo', _RoutingInfoForLCS_Res_lcsLocationInfo),
        ('extensionContainer', _RoutingInfoForLCS_Res_extensionContainer),
        ('v-gmlc-Address', _RoutingInfoForLCS_Res_v_gmlc_Address),
        ('h-gmlc-Address', _RoutingInfoForLCS_Res_h_gmlc_Address),
        ('ppr-Address', _RoutingInfoForLCS_Res_ppr_Address),
        ('additional-v-gmlc-Address', _RoutingInfoForLCS_Res_additional_v_gmlc_Address),
        ])
    RoutingInfoForLCS_Res._ext = ['v-gmlc-Address', 'h-gmlc-Address', 'ppr-Address', 'additional-v-gmlc-Address']
    
    #-----< LCSLocationInfo >-----#
    LCSLocationInfo = SEQ(name='LCSLocationInfo', mode=MODE_TYPE)
    _LCSLocationInfo_networkNode_Number = OCT_STR(name='networkNode-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _LCSLocationInfo_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')), opt=True)
    _LCSLocationInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _LCSLocationInfo_gprsNodeIndicator = NULL(name='gprsNodeIndicator', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LCSLocationInfo_additional_Number = CHOICE(name='additional-Number', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'Additional-Number')), opt=True)
    _LCSLocationInfo_supportedLCS_CapabilitySets = BIT_STR(name='supportedLCS-CapabilitySets', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedLCS-CapabilitySets')), opt=True)
    _LCSLocationInfo_additional_LCS_CapabilitySets = BIT_STR(name='additional-LCS-CapabilitySets', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedLCS-CapabilitySets')), opt=True)
    _LCSLocationInfo_mme_Name = OCT_STR(name='mme-Name', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')), opt=True)
    _LCSLocationInfo_aaa_Server_Name = OCT_STR(name='aaa-Server-Name', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')), opt=True)
    _LCSLocationInfo_sgsn_Name = OCT_STR(name='sgsn-Name', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')), opt=True)
    _LCSLocationInfo_sgsn_Realm = OCT_STR(name='sgsn-Realm', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')), opt=True)
    LCSLocationInfo._cont = ASN1Dict([
        ('networkNode-Number', _LCSLocationInfo_networkNode_Number),
        ('lmsi', _LCSLocationInfo_lmsi),
        ('extensionContainer', _LCSLocationInfo_extensionContainer),
        ('gprsNodeIndicator', _LCSLocationInfo_gprsNodeIndicator),
        ('additional-Number', _LCSLocationInfo_additional_Number),
        ('supportedLCS-CapabilitySets', _LCSLocationInfo_supportedLCS_CapabilitySets),
        ('additional-LCS-CapabilitySets', _LCSLocationInfo_additional_LCS_CapabilitySets),
        ('mme-Name', _LCSLocationInfo_mme_Name),
        ('aaa-Server-Name', _LCSLocationInfo_aaa_Server_Name),
        ('sgsn-Name', _LCSLocationInfo_sgsn_Name),
        ('sgsn-Realm', _LCSLocationInfo_sgsn_Realm),
        ])
    LCSLocationInfo._ext = ['gprsNodeIndicator', 'additional-Number', 'supportedLCS-CapabilitySets', 'additional-LCS-CapabilitySets', 'mme-Name', 'aaa-Server-Name', 'sgsn-Name', 'sgsn-Realm']
    
    #-----< ProvideSubscriberLocation-Arg >-----#
    ProvideSubscriberLocation_Arg = SEQ(name='ProvideSubscriberLocation-Arg', mode=MODE_TYPE)
    _ProvideSubscriberLocation_Arg_locationType = SEQ(name='locationType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LocationType')))
    _ProvideSubscriberLocation_Arg_mlc_Number = OCT_STR(name='mlc-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _ProvideSubscriberLocation_Arg_lcs_ClientID = SEQ(name='lcs-ClientID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-ClientID')), opt=True)
    _ProvideSubscriberLocation_Arg_privacyOverride = NULL(name='privacyOverride', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProvideSubscriberLocation_Arg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _ProvideSubscriberLocation_Arg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _ProvideSubscriberLocation_Arg_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')), opt=True)
    _ProvideSubscriberLocation_Arg_imei = OCT_STR(name='imei', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMEI')), opt=True)
    _ProvideSubscriberLocation_Arg_lcs_Priority = OCT_STR(name='lcs-Priority', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-Priority')), opt=True)
    _ProvideSubscriberLocation_Arg_lcs_QoS = SEQ(name='lcs-QoS', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-QoS')), opt=True)
    _ProvideSubscriberLocation_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ProvideSubscriberLocation_Arg_supportedGADShapes = BIT_STR(name='supportedGADShapes', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'SupportedGADShapes')), opt=True)
    _ProvideSubscriberLocation_Arg_lcs_ReferenceNumber = OCT_STR(name='lcs-ReferenceNumber', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-ReferenceNumber')), opt=True)
    _ProvideSubscriberLocation_Arg_lcsServiceTypeID = INT(name='lcsServiceTypeID', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')), opt=True)
    _ProvideSubscriberLocation_Arg_lcsCodeword = SEQ(name='lcsCodeword', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCSCodeword')), opt=True)
    _ProvideSubscriberLocation_Arg_lcs_PrivacyCheck = SEQ(name='lcs-PrivacyCheck', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-PrivacyCheck')), opt=True)
    _ProvideSubscriberLocation_Arg_areaEventInfo = SEQ(name='areaEventInfo', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'AreaEventInfo')), opt=True)
    _ProvideSubscriberLocation_Arg_h_gmlc_Address = OCT_STR(name='h-gmlc-Address', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _ProvideSubscriberLocation_Arg_mo_lrShortCircuitIndicator = NULL(name='mo-lrShortCircuitIndicator', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProvideSubscriberLocation_Arg_periodicLDRInfo = SEQ(name='periodicLDRInfo', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'PeriodicLDRInfo')), opt=True)
    _ProvideSubscriberLocation_Arg_reportingPLMNList = SEQ(name='reportingPLMNList', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ReportingPLMNList')), opt=True)
    ProvideSubscriberLocation_Arg._cont = ASN1Dict([
        ('locationType', _ProvideSubscriberLocation_Arg_locationType),
        ('mlc-Number', _ProvideSubscriberLocation_Arg_mlc_Number),
        ('lcs-ClientID', _ProvideSubscriberLocation_Arg_lcs_ClientID),
        ('privacyOverride', _ProvideSubscriberLocation_Arg_privacyOverride),
        ('imsi', _ProvideSubscriberLocation_Arg_imsi),
        ('msisdn', _ProvideSubscriberLocation_Arg_msisdn),
        ('lmsi', _ProvideSubscriberLocation_Arg_lmsi),
        ('imei', _ProvideSubscriberLocation_Arg_imei),
        ('lcs-Priority', _ProvideSubscriberLocation_Arg_lcs_Priority),
        ('lcs-QoS', _ProvideSubscriberLocation_Arg_lcs_QoS),
        ('extensionContainer', _ProvideSubscriberLocation_Arg_extensionContainer),
        ('supportedGADShapes', _ProvideSubscriberLocation_Arg_supportedGADShapes),
        ('lcs-ReferenceNumber', _ProvideSubscriberLocation_Arg_lcs_ReferenceNumber),
        ('lcsServiceTypeID', _ProvideSubscriberLocation_Arg_lcsServiceTypeID),
        ('lcsCodeword', _ProvideSubscriberLocation_Arg_lcsCodeword),
        ('lcs-PrivacyCheck', _ProvideSubscriberLocation_Arg_lcs_PrivacyCheck),
        ('areaEventInfo', _ProvideSubscriberLocation_Arg_areaEventInfo),
        ('h-gmlc-Address', _ProvideSubscriberLocation_Arg_h_gmlc_Address),
        ('mo-lrShortCircuitIndicator', _ProvideSubscriberLocation_Arg_mo_lrShortCircuitIndicator),
        ('periodicLDRInfo', _ProvideSubscriberLocation_Arg_periodicLDRInfo),
        ('reportingPLMNList', _ProvideSubscriberLocation_Arg_reportingPLMNList),
        ])
    ProvideSubscriberLocation_Arg._ext = ['supportedGADShapes', 'lcs-ReferenceNumber', 'lcsServiceTypeID', 'lcsCodeword', 'lcs-PrivacyCheck', 'areaEventInfo', 'h-gmlc-Address', 'mo-lrShortCircuitIndicator', 'periodicLDRInfo', 'reportingPLMNList']
    
    #-----< LocationType >-----#
    LocationType = SEQ(name='LocationType', mode=MODE_TYPE)
    _LocationType_locationEstimateType = ENUM(name='locationEstimateType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LocationEstimateType')))
    _LocationType_deferredLocationEventType = BIT_STR(name='deferredLocationEventType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'DeferredLocationEventType')), opt=True)
    LocationType._cont = ASN1Dict([
        ('locationEstimateType', _LocationType_locationEstimateType),
        ('deferredLocationEventType', _LocationType_deferredLocationEventType),
        ])
    LocationType._ext = ['deferredLocationEventType']
    
    #-----< LocationEstimateType >-----#
    LocationEstimateType = ENUM(name='LocationEstimateType', mode=MODE_TYPE)
    LocationEstimateType._cont = ASN1Dict([('currentLocation', 0), ('currentOrLastKnownLocation', 1), ('initialLocation', 2), ('activateDeferredLocation', 3), ('cancelDeferredLocation', 4), ('notificationVerificationOnly', 5)])
    LocationEstimateType._ext = ['activateDeferredLocation', 'cancelDeferredLocation', 'notificationVerificationOnly']
    
    #-----< DeferredLocationEventType >-----#
    DeferredLocationEventType = BIT_STR(name='DeferredLocationEventType', mode=MODE_TYPE)
    DeferredLocationEventType._cont = ASN1Dict([('msAvailable', 0), ('enteringIntoArea', 1), ('leavingFromArea', 2), ('beingInsideArea', 3), ('periodicLDR', 4)])
    DeferredLocationEventType._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< LCS-ClientID >-----#
    LCS_ClientID = SEQ(name='LCS-ClientID', mode=MODE_TYPE)
    _LCS_ClientID_lcsClientType = ENUM(name='lcsClientType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCSClientType')))
    _LCS_ClientID_lcsClientExternalID = SEQ(name='lcsClientExternalID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSClientExternalID')), opt=True)
    _LCS_ClientID_lcsClientDialedByMS = OCT_STR(name='lcsClientDialedByMS', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')), opt=True)
    _LCS_ClientID_lcsClientInternalID = ENUM(name='lcsClientInternalID', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSClientInternalID')), opt=True)
    _LCS_ClientID_lcsClientName = SEQ(name='lcsClientName', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCSClientName')), opt=True)
    _LCS_ClientID_lcsAPN = OCT_STR(name='lcsAPN', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN')), opt=True)
    _LCS_ClientID_lcsRequestorID = SEQ(name='lcsRequestorID', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCSRequestorID')), opt=True)
    LCS_ClientID._cont = ASN1Dict([
        ('lcsClientType', _LCS_ClientID_lcsClientType),
        ('lcsClientExternalID', _LCS_ClientID_lcsClientExternalID),
        ('lcsClientDialedByMS', _LCS_ClientID_lcsClientDialedByMS),
        ('lcsClientInternalID', _LCS_ClientID_lcsClientInternalID),
        ('lcsClientName', _LCS_ClientID_lcsClientName),
        ('lcsAPN', _LCS_ClientID_lcsAPN),
        ('lcsRequestorID', _LCS_ClientID_lcsRequestorID),
        ])
    LCS_ClientID._ext = ['lcsAPN', 'lcsRequestorID']
    
    #-----< LCSClientType >-----#
    LCSClientType = ENUM(name='LCSClientType', mode=MODE_TYPE)
    LCSClientType._cont = ASN1Dict([('emergencyServices', 0), ('valueAddedServices', 1), ('plmnOperatorServices', 2), ('lawfulInterceptServices', 3)])
    LCSClientType._ext = []
    
    #-----< LCSClientName >-----#
    LCSClientName = SEQ(name='LCSClientName', mode=MODE_TYPE)
    _LCSClientName_dataCodingScheme = OCT_STR(name='dataCodingScheme', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-DataCodingScheme')))
    _LCSClientName_nameString = OCT_STR(name='nameString', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'NameString')))
    _LCSClientName_lcs_FormatIndicator = ENUM(name='lcs-FormatIndicator', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-FormatIndicator')), opt=True)
    LCSClientName._cont = ASN1Dict([
        ('dataCodingScheme', _LCSClientName_dataCodingScheme),
        ('nameString', _LCSClientName_nameString),
        ('lcs-FormatIndicator', _LCSClientName_lcs_FormatIndicator),
        ])
    LCSClientName._ext = ['lcs-FormatIndicator']
    
    #-----< NameString >-----#
    NameString = OCT_STR(name='NameString', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-String')))
    NameString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=63)], ev=None, er=[])
    
    #-----< maxNameStringLength >-----#
    maxNameStringLength = INT(name='maxNameStringLength', mode=MODE_VALUE)
    maxNameStringLength._val = 63
    
    #-----< LCSRequestorID >-----#
    LCSRequestorID = SEQ(name='LCSRequestorID', mode=MODE_TYPE)
    _LCSRequestorID_dataCodingScheme = OCT_STR(name='dataCodingScheme', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-DataCodingScheme')))
    _LCSRequestorID_requestorIDString = OCT_STR(name='requestorIDString', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'RequestorIDString')))
    _LCSRequestorID_lcs_FormatIndicator = ENUM(name='lcs-FormatIndicator', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-FormatIndicator')), opt=True)
    LCSRequestorID._cont = ASN1Dict([
        ('dataCodingScheme', _LCSRequestorID_dataCodingScheme),
        ('requestorIDString', _LCSRequestorID_requestorIDString),
        ('lcs-FormatIndicator', _LCSRequestorID_lcs_FormatIndicator),
        ])
    LCSRequestorID._ext = ['lcs-FormatIndicator']
    
    #-----< RequestorIDString >-----#
    RequestorIDString = OCT_STR(name='RequestorIDString', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-String')))
    RequestorIDString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=63)], ev=None, er=[])
    
    #-----< maxRequestorIDStringLength >-----#
    maxRequestorIDStringLength = INT(name='maxRequestorIDStringLength', mode=MODE_VALUE)
    maxRequestorIDStringLength._val = 63
    
    #-----< LCS-FormatIndicator >-----#
    LCS_FormatIndicator = ENUM(name='LCS-FormatIndicator', mode=MODE_TYPE)
    LCS_FormatIndicator._cont = ASN1Dict([('logicalName', 0), ('e-mailAddress', 1), ('msisdn', 2), ('url', 3), ('sipUrl', 4)])
    LCS_FormatIndicator._ext = []
    
    #-----< LCS-Priority >-----#
    LCS_Priority = OCT_STR(name='LCS-Priority', mode=MODE_TYPE)
    LCS_Priority._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< LCS-QoS >-----#
    LCS_QoS = SEQ(name='LCS-QoS', mode=MODE_TYPE)
    _LCS_QoS_horizontal_accuracy = OCT_STR(name='horizontal-accuracy', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Horizontal-Accuracy')), opt=True)
    _LCS_QoS_verticalCoordinateRequest = NULL(name='verticalCoordinateRequest', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LCS_QoS_vertical_accuracy = OCT_STR(name='vertical-accuracy', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Vertical-Accuracy')), opt=True)
    _LCS_QoS_responseTime = SEQ(name='responseTime', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ResponseTime')), opt=True)
    _LCS_QoS_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _LCS_QoS_velocityRequest = NULL(name='velocityRequest', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    LCS_QoS._cont = ASN1Dict([
        ('horizontal-accuracy', _LCS_QoS_horizontal_accuracy),
        ('verticalCoordinateRequest', _LCS_QoS_verticalCoordinateRequest),
        ('vertical-accuracy', _LCS_QoS_vertical_accuracy),
        ('responseTime', _LCS_QoS_responseTime),
        ('extensionContainer', _LCS_QoS_extensionContainer),
        ('velocityRequest', _LCS_QoS_velocityRequest),
        ])
    LCS_QoS._ext = ['velocityRequest']
    
    #-----< Horizontal-Accuracy >-----#
    Horizontal_Accuracy = OCT_STR(name='Horizontal-Accuracy', mode=MODE_TYPE)
    Horizontal_Accuracy._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< Vertical-Accuracy >-----#
    Vertical_Accuracy = OCT_STR(name='Vertical-Accuracy', mode=MODE_TYPE)
    Vertical_Accuracy._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< ResponseTime >-----#
    ResponseTime = SEQ(name='ResponseTime', mode=MODE_TYPE)
    _ResponseTime_responseTimeCategory = ENUM(name='responseTimeCategory', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ResponseTimeCategory')))
    ResponseTime._cont = ASN1Dict([
        ('responseTimeCategory', _ResponseTime_responseTimeCategory),
        ])
    ResponseTime._ext = []
    
    #-----< ResponseTimeCategory >-----#
    ResponseTimeCategory = ENUM(name='ResponseTimeCategory', mode=MODE_TYPE)
    ResponseTimeCategory._cont = ASN1Dict([('lowdelay', 0), ('delaytolerant', 1)])
    ResponseTimeCategory._ext = []
    
    #-----< SupportedGADShapes >-----#
    SupportedGADShapes = BIT_STR(name='SupportedGADShapes', mode=MODE_TYPE)
    SupportedGADShapes._cont = ASN1Dict([('ellipsoidPoint', 0), ('ellipsoidPointWithUncertaintyCircle', 1), ('ellipsoidPointWithUncertaintyEllipse', 2), ('polygon', 3), ('ellipsoidPointWithAltitude', 4), ('ellipsoidPointWithAltitudeAndUncertaintyElipsoid', 5), ('ellipsoidArc', 6)])
    SupportedGADShapes._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=7, ub=16)], ev=None, er=[])
    
    #-----< LCS-ReferenceNumber >-----#
    LCS_ReferenceNumber = OCT_STR(name='LCS-ReferenceNumber', mode=MODE_TYPE)
    LCS_ReferenceNumber._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< LCSCodeword >-----#
    LCSCodeword = SEQ(name='LCSCodeword', mode=MODE_TYPE)
    _LCSCodeword_dataCodingScheme = OCT_STR(name='dataCodingScheme', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-DataCodingScheme')))
    _LCSCodeword_lcsCodewordString = OCT_STR(name='lcsCodewordString', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCSCodewordString')))
    LCSCodeword._cont = ASN1Dict([
        ('dataCodingScheme', _LCSCodeword_dataCodingScheme),
        ('lcsCodewordString', _LCSCodeword_lcsCodewordString),
        ])
    LCSCodeword._ext = []
    
    #-----< LCSCodewordString >-----#
    LCSCodewordString = OCT_STR(name='LCSCodewordString', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-String')))
    LCSCodewordString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< maxLCSCodewordStringLength >-----#
    maxLCSCodewordStringLength = INT(name='maxLCSCodewordStringLength', mode=MODE_VALUE)
    maxLCSCodewordStringLength._val = 20
    
    #-----< LCS-PrivacyCheck >-----#
    LCS_PrivacyCheck = SEQ(name='LCS-PrivacyCheck', mode=MODE_TYPE)
    _LCS_PrivacyCheck_callSessionUnrelated = ENUM(name='callSessionUnrelated', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'PrivacyCheckRelatedAction')))
    _LCS_PrivacyCheck_callSessionRelated = ENUM(name='callSessionRelated', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'PrivacyCheckRelatedAction')), opt=True)
    LCS_PrivacyCheck._cont = ASN1Dict([
        ('callSessionUnrelated', _LCS_PrivacyCheck_callSessionUnrelated),
        ('callSessionRelated', _LCS_PrivacyCheck_callSessionRelated),
        ])
    LCS_PrivacyCheck._ext = []
    
    #-----< PrivacyCheckRelatedAction >-----#
    PrivacyCheckRelatedAction = ENUM(name='PrivacyCheckRelatedAction', mode=MODE_TYPE)
    PrivacyCheckRelatedAction._cont = ASN1Dict([('allowedWithoutNotification', 0), ('allowedWithNotification', 1), ('allowedIfNoResponse', 2), ('restrictedIfNoResponse', 3), ('notAllowed', 4)])
    PrivacyCheckRelatedAction._ext = []
    
    #-----< AreaEventInfo >-----#
    AreaEventInfo = SEQ(name='AreaEventInfo', mode=MODE_TYPE)
    _AreaEventInfo_areaDefinition = SEQ(name='areaDefinition', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'AreaDefinition')))
    _AreaEventInfo_occurrenceInfo = ENUM(name='occurrenceInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'OccurrenceInfo')), opt=True)
    _AreaEventInfo_intervalTime = INT(name='intervalTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'IntervalTime')), opt=True)
    AreaEventInfo._cont = ASN1Dict([
        ('areaDefinition', _AreaEventInfo_areaDefinition),
        ('occurrenceInfo', _AreaEventInfo_occurrenceInfo),
        ('intervalTime', _AreaEventInfo_intervalTime),
        ])
    AreaEventInfo._ext = []
    
    #-----< AreaDefinition >-----#
    AreaDefinition = SEQ(name='AreaDefinition', mode=MODE_TYPE)
    _AreaDefinition_areaList = SEQ_OF(name='areaList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'AreaList')))
    AreaDefinition._cont = ASN1Dict([
        ('areaList', _AreaDefinition_areaList),
        ])
    AreaDefinition._ext = []
    
    #-----< AreaList >-----#
    AreaList = SEQ_OF(name='AreaList', mode=MODE_TYPE)
    _AreaList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Area')))
    AreaList._cont = _AreaList__item_
    AreaList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< maxNumOfAreas >-----#
    maxNumOfAreas = INT(name='maxNumOfAreas', mode=MODE_VALUE)
    maxNumOfAreas._val = 10
    
    #-----< Area >-----#
    Area = SEQ(name='Area', mode=MODE_TYPE)
    _Area_areaType = ENUM(name='areaType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'AreaType')))
    _Area_areaIdentification = OCT_STR(name='areaIdentification', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'AreaIdentification')))
    Area._cont = ASN1Dict([
        ('areaType', _Area_areaType),
        ('areaIdentification', _Area_areaIdentification),
        ])
    Area._ext = []
    
    #-----< AreaType >-----#
    AreaType = ENUM(name='AreaType', mode=MODE_TYPE)
    AreaType._cont = ASN1Dict([('countryCode', 0), ('plmnId', 1), ('locationAreaId', 2), ('routingAreaId', 3), ('cellGlobalId', 4), ('utranCellId', 5)])
    AreaType._ext = ['utranCellId']
    
    #-----< AreaIdentification >-----#
    AreaIdentification = OCT_STR(name='AreaIdentification', mode=MODE_TYPE)
    AreaIdentification._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=7)], ev=None, er=[])
    
    #-----< OccurrenceInfo >-----#
    OccurrenceInfo = ENUM(name='OccurrenceInfo', mode=MODE_TYPE)
    OccurrenceInfo._cont = ASN1Dict([('oneTimeEvent', 0), ('multipleTimeEvent', 1)])
    OccurrenceInfo._ext = []
    
    #-----< IntervalTime >-----#
    IntervalTime = INT(name='IntervalTime', mode=MODE_TYPE)
    IntervalTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32767)], ev=None, er=[])
    
    #-----< PeriodicLDRInfo >-----#
    PeriodicLDRInfo = SEQ(name='PeriodicLDRInfo', mode=MODE_TYPE)
    _PeriodicLDRInfo_reportingAmount = INT(name='reportingAmount', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ReportingAmount')))
    _PeriodicLDRInfo_reportingInterval = INT(name='reportingInterval', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ReportingInterval')))
    PeriodicLDRInfo._cont = ASN1Dict([
        ('reportingAmount', _PeriodicLDRInfo_reportingAmount),
        ('reportingInterval', _PeriodicLDRInfo_reportingInterval),
        ])
    PeriodicLDRInfo._ext = []
    
    #-----< ReportingAmount >-----#
    ReportingAmount = INT(name='ReportingAmount', mode=MODE_TYPE)
    ReportingAmount._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8639999)], ev=None, er=[])
    
    #-----< maxReportingAmount >-----#
    maxReportingAmount = INT(name='maxReportingAmount', mode=MODE_VALUE)
    maxReportingAmount._val = 8639999
    
    #-----< ReportingInterval >-----#
    ReportingInterval = INT(name='ReportingInterval', mode=MODE_TYPE)
    ReportingInterval._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8639999)], ev=None, er=[])
    
    #-----< maxReportingInterval >-----#
    maxReportingInterval = INT(name='maxReportingInterval', mode=MODE_VALUE)
    maxReportingInterval._val = 8639999
    
    #-----< ReportingPLMNList >-----#
    ReportingPLMNList = SEQ(name='ReportingPLMNList', mode=MODE_TYPE)
    _ReportingPLMNList_plmn_ListPrioritized = NULL(name='plmn-ListPrioritized', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ReportingPLMNList_plmn_List = SEQ_OF(name='plmn-List', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'PLMNList')))
    ReportingPLMNList._cont = ASN1Dict([
        ('plmn-ListPrioritized', _ReportingPLMNList_plmn_ListPrioritized),
        ('plmn-List', _ReportingPLMNList_plmn_List),
        ])
    ReportingPLMNList._ext = []
    
    #-----< PLMNList >-----#
    PLMNList = SEQ_OF(name='PLMNList', mode=MODE_TYPE)
    _PLMNList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ReportingPLMN')))
    PLMNList._cont = _PLMNList__item_
    PLMNList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< maxNumOfReportingPLMN >-----#
    maxNumOfReportingPLMN = INT(name='maxNumOfReportingPLMN', mode=MODE_VALUE)
    maxNumOfReportingPLMN._val = 20
    
    #-----< ReportingPLMN >-----#
    ReportingPLMN = SEQ(name='ReportingPLMN', mode=MODE_TYPE)
    _ReportingPLMN_plmn_Id = OCT_STR(name='plmn-Id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')))
    _ReportingPLMN_ran_Technology = ENUM(name='ran-Technology', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'RAN-Technology')), opt=True)
    _ReportingPLMN_ran_PeriodicLocationSupport = NULL(name='ran-PeriodicLocationSupport', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ReportingPLMN._cont = ASN1Dict([
        ('plmn-Id', _ReportingPLMN_plmn_Id),
        ('ran-Technology', _ReportingPLMN_ran_Technology),
        ('ran-PeriodicLocationSupport', _ReportingPLMN_ran_PeriodicLocationSupport),
        ])
    ReportingPLMN._ext = []
    
    #-----< RAN-Technology >-----#
    RAN_Technology = ENUM(name='RAN-Technology', mode=MODE_TYPE)
    RAN_Technology._cont = ASN1Dict([('gsm', 0), ('umts', 1)])
    RAN_Technology._ext = []
    
    #-----< ProvideSubscriberLocation-Res >-----#
    ProvideSubscriberLocation_Res = SEQ(name='ProvideSubscriberLocation-Res', mode=MODE_TYPE)
    _ProvideSubscriberLocation_Res_locationEstimate = OCT_STR(name='locationEstimate', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Ext-GeographicalInformation')))
    _ProvideSubscriberLocation_Res_ageOfLocationEstimate = INT(name='ageOfLocationEstimate', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AgeOfLocationInformation')), opt=True)
    _ProvideSubscriberLocation_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ProvideSubscriberLocation_Res_add_LocationEstimate = OCT_STR(name='add-LocationEstimate', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Add-GeographicalInformation')), opt=True)
    _ProvideSubscriberLocation_Res_deferredmt_lrResponseIndicator = NULL(name='deferredmt-lrResponseIndicator', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProvideSubscriberLocation_Res_geranPositioningData = OCT_STR(name='geranPositioningData', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'PositioningDataInformation')), opt=True)
    _ProvideSubscriberLocation_Res_utranPositioningData = OCT_STR(name='utranPositioningData', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranPositioningDataInfo')), opt=True)
    _ProvideSubscriberLocation_Res_cellIdOrSai = CHOICE(name='cellIdOrSai', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'CellGlobalIdOrServiceAreaIdOrLAI')), opt=True)
    _ProvideSubscriberLocation_Res_sai_Present = NULL(name='sai-Present', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProvideSubscriberLocation_Res_accuracyFulfilmentIndicator = ENUM(name='accuracyFulfilmentIndicator', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'AccuracyFulfilmentIndicator')), opt=True)
    _ProvideSubscriberLocation_Res_velocityEstimate = OCT_STR(name='velocityEstimate', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'VelocityEstimate')), opt=True)
    _ProvideSubscriberLocation_Res_mo_lrShortCircuitIndicator = NULL(name='mo-lrShortCircuitIndicator', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProvideSubscriberLocation_Res_geranGANSSpositioningData = OCT_STR(name='geranGANSSpositioningData', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'GeranGANSSpositioningData')), opt=True)
    _ProvideSubscriberLocation_Res_utranGANSSpositioningData = OCT_STR(name='utranGANSSpositioningData', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranGANSSpositioningData')), opt=True)
    _ProvideSubscriberLocation_Res_targetServingNodeForHandover = CHOICE(name='targetServingNodeForHandover', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ServingNodeAddress')), opt=True)
    _ProvideSubscriberLocation_Res_utranAdditionalPositioningData = OCT_STR(name='utranAdditionalPositioningData', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranAdditionalPositioningData')), opt=True)
    _ProvideSubscriberLocation_Res_utranBaroPressureMeas = INT(name='utranBaroPressureMeas', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranBaroPressureMeas')), opt=True)
    _ProvideSubscriberLocation_Res_utranCivicAddress = OCT_STR(name='utranCivicAddress', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranCivicAddress')), opt=True)
    ProvideSubscriberLocation_Res._cont = ASN1Dict([
        ('locationEstimate', _ProvideSubscriberLocation_Res_locationEstimate),
        ('ageOfLocationEstimate', _ProvideSubscriberLocation_Res_ageOfLocationEstimate),
        ('extensionContainer', _ProvideSubscriberLocation_Res_extensionContainer),
        ('add-LocationEstimate', _ProvideSubscriberLocation_Res_add_LocationEstimate),
        ('deferredmt-lrResponseIndicator', _ProvideSubscriberLocation_Res_deferredmt_lrResponseIndicator),
        ('geranPositioningData', _ProvideSubscriberLocation_Res_geranPositioningData),
        ('utranPositioningData', _ProvideSubscriberLocation_Res_utranPositioningData),
        ('cellIdOrSai', _ProvideSubscriberLocation_Res_cellIdOrSai),
        ('sai-Present', _ProvideSubscriberLocation_Res_sai_Present),
        ('accuracyFulfilmentIndicator', _ProvideSubscriberLocation_Res_accuracyFulfilmentIndicator),
        ('velocityEstimate', _ProvideSubscriberLocation_Res_velocityEstimate),
        ('mo-lrShortCircuitIndicator', _ProvideSubscriberLocation_Res_mo_lrShortCircuitIndicator),
        ('geranGANSSpositioningData', _ProvideSubscriberLocation_Res_geranGANSSpositioningData),
        ('utranGANSSpositioningData', _ProvideSubscriberLocation_Res_utranGANSSpositioningData),
        ('targetServingNodeForHandover', _ProvideSubscriberLocation_Res_targetServingNodeForHandover),
        ('utranAdditionalPositioningData', _ProvideSubscriberLocation_Res_utranAdditionalPositioningData),
        ('utranBaroPressureMeas', _ProvideSubscriberLocation_Res_utranBaroPressureMeas),
        ('utranCivicAddress', _ProvideSubscriberLocation_Res_utranCivicAddress),
        ])
    ProvideSubscriberLocation_Res._ext = ['add-LocationEstimate', 'deferredmt-lrResponseIndicator', 'geranPositioningData', 'utranPositioningData', 'cellIdOrSai', 'sai-Present', 'accuracyFulfilmentIndicator', 'velocityEstimate', 'mo-lrShortCircuitIndicator', 'geranGANSSpositioningData', 'utranGANSSpositioningData', 'targetServingNodeForHandover', 'utranAdditionalPositioningData', 'utranBaroPressureMeas', 'utranCivicAddress']
    
    #-----< AccuracyFulfilmentIndicator >-----#
    AccuracyFulfilmentIndicator = ENUM(name='AccuracyFulfilmentIndicator', mode=MODE_TYPE)
    AccuracyFulfilmentIndicator._cont = ASN1Dict([('requestedAccuracyFulfilled', 0), ('requestedAccuracyNotFulfilled', 1)])
    AccuracyFulfilmentIndicator._ext = []
    
    #-----< Ext-GeographicalInformation >-----#
    Ext_GeographicalInformation = OCT_STR(name='Ext-GeographicalInformation', mode=MODE_TYPE)
    Ext_GeographicalInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< maxExt-GeographicalInformation >-----#
    maxExt_GeographicalInformation = INT(name='maxExt-GeographicalInformation', mode=MODE_VALUE)
    maxExt_GeographicalInformation._val = 20
    
    #-----< VelocityEstimate >-----#
    VelocityEstimate = OCT_STR(name='VelocityEstimate', mode=MODE_TYPE)
    VelocityEstimate._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=4, ub=7)], ev=None, er=[])
    
    #-----< PositioningDataInformation >-----#
    PositioningDataInformation = OCT_STR(name='PositioningDataInformation', mode=MODE_TYPE)
    PositioningDataInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=10)], ev=None, er=[])
    
    #-----< maxPositioningDataInformation >-----#
    maxPositioningDataInformation = INT(name='maxPositioningDataInformation', mode=MODE_VALUE)
    maxPositioningDataInformation._val = 10
    
    #-----< UtranPositioningDataInfo >-----#
    UtranPositioningDataInfo = OCT_STR(name='UtranPositioningDataInfo', mode=MODE_TYPE)
    UtranPositioningDataInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=11)], ev=None, er=[])
    
    #-----< maxUtranPositioningDataInfo >-----#
    maxUtranPositioningDataInfo = INT(name='maxUtranPositioningDataInfo', mode=MODE_VALUE)
    maxUtranPositioningDataInfo._val = 11
    
    #-----< GeranGANSSpositioningData >-----#
    GeranGANSSpositioningData = OCT_STR(name='GeranGANSSpositioningData', mode=MODE_TYPE)
    GeranGANSSpositioningData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=10)], ev=None, er=[])
    
    #-----< maxGeranGANSSpositioningData >-----#
    maxGeranGANSSpositioningData = INT(name='maxGeranGANSSpositioningData', mode=MODE_VALUE)
    maxGeranGANSSpositioningData._val = 10
    
    #-----< UtranGANSSpositioningData >-----#
    UtranGANSSpositioningData = OCT_STR(name='UtranGANSSpositioningData', mode=MODE_TYPE)
    UtranGANSSpositioningData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    
    #-----< maxUtranGANSSpositioningData >-----#
    maxUtranGANSSpositioningData = INT(name='maxUtranGANSSpositioningData', mode=MODE_VALUE)
    maxUtranGANSSpositioningData._val = 9
    
    #-----< UtranAdditionalPositioningData >-----#
    UtranAdditionalPositioningData = OCT_STR(name='UtranAdditionalPositioningData', mode=MODE_TYPE)
    UtranAdditionalPositioningData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< maxUtranAdditionalPositioningData >-----#
    maxUtranAdditionalPositioningData = INT(name='maxUtranAdditionalPositioningData', mode=MODE_VALUE)
    maxUtranAdditionalPositioningData._val = 8
    
    #-----< UtranBaroPressureMeas >-----#
    UtranBaroPressureMeas = INT(name='UtranBaroPressureMeas', mode=MODE_TYPE)
    UtranBaroPressureMeas._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=30000, ub=115000)], ev=None, er=[])
    
    #-----< UtranCivicAddress >-----#
    UtranCivicAddress = OCT_STR(name='UtranCivicAddress', mode=MODE_TYPE)
    
    #-----< Add-GeographicalInformation >-----#
    Add_GeographicalInformation = OCT_STR(name='Add-GeographicalInformation', mode=MODE_TYPE)
    Add_GeographicalInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=91)], ev=None, er=[])
    
    #-----< maxAdd-GeographicalInformation >-----#
    maxAdd_GeographicalInformation = INT(name='maxAdd-GeographicalInformation', mode=MODE_VALUE)
    maxAdd_GeographicalInformation._val = 91
    
    #-----< SubscriberLocationReport-Arg >-----#
    SubscriberLocationReport_Arg = SEQ(name='SubscriberLocationReport-Arg', mode=MODE_TYPE)
    _SubscriberLocationReport_Arg_lcs_Event = ENUM(name='lcs-Event', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-Event')))
    _SubscriberLocationReport_Arg_lcs_ClientID = SEQ(name='lcs-ClientID', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-ClientID')))
    _SubscriberLocationReport_Arg_lcsLocationInfo = SEQ(name='lcsLocationInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCSLocationInfo')))
    _SubscriberLocationReport_Arg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SubscriberLocationReport_Arg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _SubscriberLocationReport_Arg_imei = OCT_STR(name='imei', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMEI')), opt=True)
    _SubscriberLocationReport_Arg_na_ESRD = OCT_STR(name='na-ESRD', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SubscriberLocationReport_Arg_na_ESRK = OCT_STR(name='na-ESRK', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SubscriberLocationReport_Arg_locationEstimate = OCT_STR(name='locationEstimate', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Ext-GeographicalInformation')), opt=True)
    _SubscriberLocationReport_Arg_ageOfLocationEstimate = INT(name='ageOfLocationEstimate', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AgeOfLocationInformation')), opt=True)
    _SubscriberLocationReport_Arg_slr_ArgExtensionContainer = SEQ(name='slr-ArgExtensionContainer', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'SLR-ArgExtensionContainer')), opt=True)
    _SubscriberLocationReport_Arg_add_LocationEstimate = OCT_STR(name='add-LocationEstimate', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Add-GeographicalInformation')), opt=True)
    _SubscriberLocationReport_Arg_deferredmt_lrData = SEQ(name='deferredmt-lrData', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Deferredmt-lrData')), opt=True)
    _SubscriberLocationReport_Arg_lcs_ReferenceNumber = OCT_STR(name='lcs-ReferenceNumber', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-ReferenceNumber')), opt=True)
    _SubscriberLocationReport_Arg_geranPositioningData = OCT_STR(name='geranPositioningData', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'PositioningDataInformation')), opt=True)
    _SubscriberLocationReport_Arg_utranPositioningData = OCT_STR(name='utranPositioningData', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranPositioningDataInfo')), opt=True)
    _SubscriberLocationReport_Arg_cellIdOrSai = CHOICE(name='cellIdOrSai', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'CellGlobalIdOrServiceAreaIdOrLAI')), opt=True)
    _SubscriberLocationReport_Arg_h_gmlc_Address = OCT_STR(name='h-gmlc-Address', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _SubscriberLocationReport_Arg_lcsServiceTypeID = INT(name='lcsServiceTypeID', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')), opt=True)
    _SubscriberLocationReport_Arg_sai_Present = NULL(name='sai-Present', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SubscriberLocationReport_Arg_pseudonymIndicator = NULL(name='pseudonymIndicator', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SubscriberLocationReport_Arg_accuracyFulfilmentIndicator = ENUM(name='accuracyFulfilmentIndicator', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'AccuracyFulfilmentIndicator')), opt=True)
    _SubscriberLocationReport_Arg_velocityEstimate = OCT_STR(name='velocityEstimate', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'VelocityEstimate')), opt=True)
    _SubscriberLocationReport_Arg_sequenceNumber = INT(name='sequenceNumber', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'SequenceNumber')), opt=True)
    _SubscriberLocationReport_Arg_periodicLDRInfo = SEQ(name='periodicLDRInfo', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'PeriodicLDRInfo')), opt=True)
    _SubscriberLocationReport_Arg_mo_lrShortCircuitIndicator = NULL(name='mo-lrShortCircuitIndicator', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SubscriberLocationReport_Arg_geranGANSSpositioningData = OCT_STR(name='geranGANSSpositioningData', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'GeranGANSSpositioningData')), opt=True)
    _SubscriberLocationReport_Arg_utranGANSSpositioningData = OCT_STR(name='utranGANSSpositioningData', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranGANSSpositioningData')), opt=True)
    _SubscriberLocationReport_Arg_targetServingNodeForHandover = CHOICE(name='targetServingNodeForHandover', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ServingNodeAddress')), opt=True)
    _SubscriberLocationReport_Arg_utranAdditionalPositioningData = OCT_STR(name='utranAdditionalPositioningData', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranAdditionalPositioningData')), opt=True)
    _SubscriberLocationReport_Arg_utranBaroPressureMeas = INT(name='utranBaroPressureMeas', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranBaroPressureMeas')), opt=True)
    _SubscriberLocationReport_Arg_utranCivicAddress = OCT_STR(name='utranCivicAddress', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'UtranCivicAddress')), opt=True)
    SubscriberLocationReport_Arg._cont = ASN1Dict([
        ('lcs-Event', _SubscriberLocationReport_Arg_lcs_Event),
        ('lcs-ClientID', _SubscriberLocationReport_Arg_lcs_ClientID),
        ('lcsLocationInfo', _SubscriberLocationReport_Arg_lcsLocationInfo),
        ('msisdn', _SubscriberLocationReport_Arg_msisdn),
        ('imsi', _SubscriberLocationReport_Arg_imsi),
        ('imei', _SubscriberLocationReport_Arg_imei),
        ('na-ESRD', _SubscriberLocationReport_Arg_na_ESRD),
        ('na-ESRK', _SubscriberLocationReport_Arg_na_ESRK),
        ('locationEstimate', _SubscriberLocationReport_Arg_locationEstimate),
        ('ageOfLocationEstimate', _SubscriberLocationReport_Arg_ageOfLocationEstimate),
        ('slr-ArgExtensionContainer', _SubscriberLocationReport_Arg_slr_ArgExtensionContainer),
        ('add-LocationEstimate', _SubscriberLocationReport_Arg_add_LocationEstimate),
        ('deferredmt-lrData', _SubscriberLocationReport_Arg_deferredmt_lrData),
        ('lcs-ReferenceNumber', _SubscriberLocationReport_Arg_lcs_ReferenceNumber),
        ('geranPositioningData', _SubscriberLocationReport_Arg_geranPositioningData),
        ('utranPositioningData', _SubscriberLocationReport_Arg_utranPositioningData),
        ('cellIdOrSai', _SubscriberLocationReport_Arg_cellIdOrSai),
        ('h-gmlc-Address', _SubscriberLocationReport_Arg_h_gmlc_Address),
        ('lcsServiceTypeID', _SubscriberLocationReport_Arg_lcsServiceTypeID),
        ('sai-Present', _SubscriberLocationReport_Arg_sai_Present),
        ('pseudonymIndicator', _SubscriberLocationReport_Arg_pseudonymIndicator),
        ('accuracyFulfilmentIndicator', _SubscriberLocationReport_Arg_accuracyFulfilmentIndicator),
        ('velocityEstimate', _SubscriberLocationReport_Arg_velocityEstimate),
        ('sequenceNumber', _SubscriberLocationReport_Arg_sequenceNumber),
        ('periodicLDRInfo', _SubscriberLocationReport_Arg_periodicLDRInfo),
        ('mo-lrShortCircuitIndicator', _SubscriberLocationReport_Arg_mo_lrShortCircuitIndicator),
        ('geranGANSSpositioningData', _SubscriberLocationReport_Arg_geranGANSSpositioningData),
        ('utranGANSSpositioningData', _SubscriberLocationReport_Arg_utranGANSSpositioningData),
        ('targetServingNodeForHandover', _SubscriberLocationReport_Arg_targetServingNodeForHandover),
        ('utranAdditionalPositioningData', _SubscriberLocationReport_Arg_utranAdditionalPositioningData),
        ('utranBaroPressureMeas', _SubscriberLocationReport_Arg_utranBaroPressureMeas),
        ('utranCivicAddress', _SubscriberLocationReport_Arg_utranCivicAddress),
        ])
    SubscriberLocationReport_Arg._ext = ['add-LocationEstimate', 'deferredmt-lrData', 'lcs-ReferenceNumber', 'geranPositioningData', 'utranPositioningData', 'cellIdOrSai', 'h-gmlc-Address', 'lcsServiceTypeID', 'sai-Present', 'pseudonymIndicator', 'accuracyFulfilmentIndicator', 'velocityEstimate', 'sequenceNumber', 'periodicLDRInfo', 'mo-lrShortCircuitIndicator', 'geranGANSSpositioningData', 'utranGANSSpositioningData', 'targetServingNodeForHandover', 'utranAdditionalPositioningData', 'utranBaroPressureMeas', 'utranCivicAddress']
    
    #-----< Deferredmt-lrData >-----#
    Deferredmt_lrData = SEQ(name='Deferredmt-lrData', mode=MODE_TYPE)
    _Deferredmt_lrData_deferredLocationEventType = BIT_STR(name='deferredLocationEventType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'DeferredLocationEventType')))
    _Deferredmt_lrData_terminationCause = ENUM(name='terminationCause', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'TerminationCause')), opt=True)
    _Deferredmt_lrData_lcsLocationInfo = SEQ(name='lcsLocationInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCSLocationInfo')), opt=True)
    Deferredmt_lrData._cont = ASN1Dict([
        ('deferredLocationEventType', _Deferredmt_lrData_deferredLocationEventType),
        ('terminationCause', _Deferredmt_lrData_terminationCause),
        ('lcsLocationInfo', _Deferredmt_lrData_lcsLocationInfo),
        ])
    Deferredmt_lrData._ext = []
    
    #-----< LCS-Event >-----#
    LCS_Event = ENUM(name='LCS-Event', mode=MODE_TYPE)
    LCS_Event._cont = ASN1Dict([('emergencyCallOrigination', 0), ('emergencyCallRelease', 1), ('mo-lr', 2), ('deferredmt-lrResponse', 3), ('deferredmo-lrTTTPInitiation', 4), ('emergencyCallHandover', 5)])
    LCS_Event._ext = ['deferredmt-lrResponse', 'deferredmo-lrTTTPInitiation', 'emergencyCallHandover']
    
    #-----< TerminationCause >-----#
    TerminationCause = ENUM(name='TerminationCause', mode=MODE_TYPE)
    TerminationCause._cont = ASN1Dict([('normal', 0), ('errorundefined', 1), ('internalTimeout', 2), ('congestion', 3), ('mt-lrRestart', 4), ('privacyViolation', 5), ('shapeOfLocationEstimateNotSupported', 6), ('subscriberTermination', 7), ('uETermination', 8), ('networkTermination', 9)])
    TerminationCause._ext = ['shapeOfLocationEstimateNotSupported', 'subscriberTermination', 'uETermination', 'networkTermination']
    
    #-----< SequenceNumber >-----#
    SequenceNumber = INT(name='SequenceNumber', mode=MODE_TYPE)
    SequenceNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8639999)], ev=None, er=[])
    
    #-----< ServingNodeAddress >-----#
    ServingNodeAddress = CHOICE(name='ServingNodeAddress', mode=MODE_TYPE)
    _ServingNodeAddress_msc_Number = OCT_STR(name='msc-Number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _ServingNodeAddress_sgsn_Number = OCT_STR(name='sgsn-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _ServingNodeAddress_mme_Number = OCT_STR(name='mme-Number', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')))
    ServingNodeAddress._cont = ASN1Dict([
        ('msc-Number', _ServingNodeAddress_msc_Number),
        ('sgsn-Number', _ServingNodeAddress_sgsn_Number),
        ('mme-Number', _ServingNodeAddress_mme_Number),
        ])
    ServingNodeAddress._ext = None
    
    #-----< SubscriberLocationReport-Res >-----#
    SubscriberLocationReport_Res = SEQ(name='SubscriberLocationReport-Res', mode=MODE_TYPE)
    _SubscriberLocationReport_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SubscriberLocationReport_Res_na_ESRK = OCT_STR(name='na-ESRK', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SubscriberLocationReport_Res_na_ESRD = OCT_STR(name='na-ESRD', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SubscriberLocationReport_Res_h_gmlc_Address = OCT_STR(name='h-gmlc-Address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _SubscriberLocationReport_Res_mo_lrShortCircuitIndicator = NULL(name='mo-lrShortCircuitIndicator', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SubscriberLocationReport_Res_reportingPLMNList = SEQ(name='reportingPLMNList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'ReportingPLMNList')), opt=True)
    _SubscriberLocationReport_Res_lcs_ReferenceNumber = OCT_STR(name='lcs-ReferenceNumber', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'LCS-ReferenceNumber')), opt=True)
    SubscriberLocationReport_Res._cont = ASN1Dict([
        ('extensionContainer', _SubscriberLocationReport_Res_extensionContainer),
        ('na-ESRK', _SubscriberLocationReport_Res_na_ESRK),
        ('na-ESRD', _SubscriberLocationReport_Res_na_ESRD),
        ('h-gmlc-Address', _SubscriberLocationReport_Res_h_gmlc_Address),
        ('mo-lrShortCircuitIndicator', _SubscriberLocationReport_Res_mo_lrShortCircuitIndicator),
        ('reportingPLMNList', _SubscriberLocationReport_Res_reportingPLMNList),
        ('lcs-ReferenceNumber', _SubscriberLocationReport_Res_lcs_ReferenceNumber),
        ])
    SubscriberLocationReport_Res._ext = ['na-ESRK', 'na-ESRD', 'h-gmlc-Address', 'mo-lrShortCircuitIndicator', 'reportingPLMNList', 'lcs-ReferenceNumber']
    
    _all_ = [
        _RoutingInfoForLCS_Arg_mlcNumber,
        _RoutingInfoForLCS_Arg_targetMS,
        _RoutingInfoForLCS_Arg_extensionContainer,
        RoutingInfoForLCS_Arg,
        _RoutingInfoForLCS_Res_targetMS,
        _RoutingInfoForLCS_Res_lcsLocationInfo,
        _RoutingInfoForLCS_Res_extensionContainer,
        _RoutingInfoForLCS_Res_v_gmlc_Address,
        _RoutingInfoForLCS_Res_h_gmlc_Address,
        _RoutingInfoForLCS_Res_ppr_Address,
        _RoutingInfoForLCS_Res_additional_v_gmlc_Address,
        RoutingInfoForLCS_Res,
        _LCSLocationInfo_networkNode_Number,
        _LCSLocationInfo_lmsi,
        _LCSLocationInfo_extensionContainer,
        _LCSLocationInfo_gprsNodeIndicator,
        _LCSLocationInfo_additional_Number,
        _LCSLocationInfo_supportedLCS_CapabilitySets,
        _LCSLocationInfo_additional_LCS_CapabilitySets,
        _LCSLocationInfo_mme_Name,
        _LCSLocationInfo_aaa_Server_Name,
        _LCSLocationInfo_sgsn_Name,
        _LCSLocationInfo_sgsn_Realm,
        LCSLocationInfo,
        _ProvideSubscriberLocation_Arg_locationType,
        _ProvideSubscriberLocation_Arg_mlc_Number,
        _ProvideSubscriberLocation_Arg_lcs_ClientID,
        _ProvideSubscriberLocation_Arg_privacyOverride,
        _ProvideSubscriberLocation_Arg_imsi,
        _ProvideSubscriberLocation_Arg_msisdn,
        _ProvideSubscriberLocation_Arg_lmsi,
        _ProvideSubscriberLocation_Arg_imei,
        _ProvideSubscriberLocation_Arg_lcs_Priority,
        _ProvideSubscriberLocation_Arg_lcs_QoS,
        _ProvideSubscriberLocation_Arg_extensionContainer,
        _ProvideSubscriberLocation_Arg_supportedGADShapes,
        _ProvideSubscriberLocation_Arg_lcs_ReferenceNumber,
        _ProvideSubscriberLocation_Arg_lcsServiceTypeID,
        _ProvideSubscriberLocation_Arg_lcsCodeword,
        _ProvideSubscriberLocation_Arg_lcs_PrivacyCheck,
        _ProvideSubscriberLocation_Arg_areaEventInfo,
        _ProvideSubscriberLocation_Arg_h_gmlc_Address,
        _ProvideSubscriberLocation_Arg_mo_lrShortCircuitIndicator,
        _ProvideSubscriberLocation_Arg_periodicLDRInfo,
        _ProvideSubscriberLocation_Arg_reportingPLMNList,
        ProvideSubscriberLocation_Arg,
        _LocationType_locationEstimateType,
        _LocationType_deferredLocationEventType,
        LocationType,
        LocationEstimateType,
        DeferredLocationEventType,
        _LCS_ClientID_lcsClientType,
        _LCS_ClientID_lcsClientExternalID,
        _LCS_ClientID_lcsClientDialedByMS,
        _LCS_ClientID_lcsClientInternalID,
        _LCS_ClientID_lcsClientName,
        _LCS_ClientID_lcsAPN,
        _LCS_ClientID_lcsRequestorID,
        LCS_ClientID,
        LCSClientType,
        _LCSClientName_dataCodingScheme,
        _LCSClientName_nameString,
        _LCSClientName_lcs_FormatIndicator,
        LCSClientName,
        NameString,
        maxNameStringLength,
        _LCSRequestorID_dataCodingScheme,
        _LCSRequestorID_requestorIDString,
        _LCSRequestorID_lcs_FormatIndicator,
        LCSRequestorID,
        RequestorIDString,
        maxRequestorIDStringLength,
        LCS_FormatIndicator,
        LCS_Priority,
        _LCS_QoS_horizontal_accuracy,
        _LCS_QoS_verticalCoordinateRequest,
        _LCS_QoS_vertical_accuracy,
        _LCS_QoS_responseTime,
        _LCS_QoS_extensionContainer,
        _LCS_QoS_velocityRequest,
        LCS_QoS,
        Horizontal_Accuracy,
        Vertical_Accuracy,
        _ResponseTime_responseTimeCategory,
        ResponseTime,
        ResponseTimeCategory,
        SupportedGADShapes,
        LCS_ReferenceNumber,
        _LCSCodeword_dataCodingScheme,
        _LCSCodeword_lcsCodewordString,
        LCSCodeword,
        LCSCodewordString,
        maxLCSCodewordStringLength,
        _LCS_PrivacyCheck_callSessionUnrelated,
        _LCS_PrivacyCheck_callSessionRelated,
        LCS_PrivacyCheck,
        PrivacyCheckRelatedAction,
        _AreaEventInfo_areaDefinition,
        _AreaEventInfo_occurrenceInfo,
        _AreaEventInfo_intervalTime,
        AreaEventInfo,
        _AreaDefinition_areaList,
        AreaDefinition,
        _AreaList__item_,
        AreaList,
        maxNumOfAreas,
        _Area_areaType,
        _Area_areaIdentification,
        Area,
        AreaType,
        AreaIdentification,
        OccurrenceInfo,
        IntervalTime,
        _PeriodicLDRInfo_reportingAmount,
        _PeriodicLDRInfo_reportingInterval,
        PeriodicLDRInfo,
        ReportingAmount,
        maxReportingAmount,
        ReportingInterval,
        maxReportingInterval,
        _ReportingPLMNList_plmn_ListPrioritized,
        _ReportingPLMNList_plmn_List,
        ReportingPLMNList,
        _PLMNList__item_,
        PLMNList,
        maxNumOfReportingPLMN,
        _ReportingPLMN_plmn_Id,
        _ReportingPLMN_ran_Technology,
        _ReportingPLMN_ran_PeriodicLocationSupport,
        ReportingPLMN,
        RAN_Technology,
        _ProvideSubscriberLocation_Res_locationEstimate,
        _ProvideSubscriberLocation_Res_ageOfLocationEstimate,
        _ProvideSubscriberLocation_Res_extensionContainer,
        _ProvideSubscriberLocation_Res_add_LocationEstimate,
        _ProvideSubscriberLocation_Res_deferredmt_lrResponseIndicator,
        _ProvideSubscriberLocation_Res_geranPositioningData,
        _ProvideSubscriberLocation_Res_utranPositioningData,
        _ProvideSubscriberLocation_Res_cellIdOrSai,
        _ProvideSubscriberLocation_Res_sai_Present,
        _ProvideSubscriberLocation_Res_accuracyFulfilmentIndicator,
        _ProvideSubscriberLocation_Res_velocityEstimate,
        _ProvideSubscriberLocation_Res_mo_lrShortCircuitIndicator,
        _ProvideSubscriberLocation_Res_geranGANSSpositioningData,
        _ProvideSubscriberLocation_Res_utranGANSSpositioningData,
        _ProvideSubscriberLocation_Res_targetServingNodeForHandover,
        _ProvideSubscriberLocation_Res_utranAdditionalPositioningData,
        _ProvideSubscriberLocation_Res_utranBaroPressureMeas,
        _ProvideSubscriberLocation_Res_utranCivicAddress,
        ProvideSubscriberLocation_Res,
        AccuracyFulfilmentIndicator,
        Ext_GeographicalInformation,
        maxExt_GeographicalInformation,
        VelocityEstimate,
        PositioningDataInformation,
        maxPositioningDataInformation,
        UtranPositioningDataInfo,
        maxUtranPositioningDataInfo,
        GeranGANSSpositioningData,
        maxGeranGANSSpositioningData,
        UtranGANSSpositioningData,
        maxUtranGANSSpositioningData,
        UtranAdditionalPositioningData,
        maxUtranAdditionalPositioningData,
        UtranBaroPressureMeas,
        UtranCivicAddress,
        Add_GeographicalInformation,
        maxAdd_GeographicalInformation,
        _SubscriberLocationReport_Arg_lcs_Event,
        _SubscriberLocationReport_Arg_lcs_ClientID,
        _SubscriberLocationReport_Arg_lcsLocationInfo,
        _SubscriberLocationReport_Arg_msisdn,
        _SubscriberLocationReport_Arg_imsi,
        _SubscriberLocationReport_Arg_imei,
        _SubscriberLocationReport_Arg_na_ESRD,
        _SubscriberLocationReport_Arg_na_ESRK,
        _SubscriberLocationReport_Arg_locationEstimate,
        _SubscriberLocationReport_Arg_ageOfLocationEstimate,
        _SubscriberLocationReport_Arg_slr_ArgExtensionContainer,
        _SubscriberLocationReport_Arg_add_LocationEstimate,
        _SubscriberLocationReport_Arg_deferredmt_lrData,
        _SubscriberLocationReport_Arg_lcs_ReferenceNumber,
        _SubscriberLocationReport_Arg_geranPositioningData,
        _SubscriberLocationReport_Arg_utranPositioningData,
        _SubscriberLocationReport_Arg_cellIdOrSai,
        _SubscriberLocationReport_Arg_h_gmlc_Address,
        _SubscriberLocationReport_Arg_lcsServiceTypeID,
        _SubscriberLocationReport_Arg_sai_Present,
        _SubscriberLocationReport_Arg_pseudonymIndicator,
        _SubscriberLocationReport_Arg_accuracyFulfilmentIndicator,
        _SubscriberLocationReport_Arg_velocityEstimate,
        _SubscriberLocationReport_Arg_sequenceNumber,
        _SubscriberLocationReport_Arg_periodicLDRInfo,
        _SubscriberLocationReport_Arg_mo_lrShortCircuitIndicator,
        _SubscriberLocationReport_Arg_geranGANSSpositioningData,
        _SubscriberLocationReport_Arg_utranGANSSpositioningData,
        _SubscriberLocationReport_Arg_targetServingNodeForHandover,
        _SubscriberLocationReport_Arg_utranAdditionalPositioningData,
        _SubscriberLocationReport_Arg_utranBaroPressureMeas,
        _SubscriberLocationReport_Arg_utranCivicAddress,
        SubscriberLocationReport_Arg,
        _Deferredmt_lrData_deferredLocationEventType,
        _Deferredmt_lrData_terminationCause,
        _Deferredmt_lrData_lcsLocationInfo,
        Deferredmt_lrData,
        LCS_Event,
        TerminationCause,
        SequenceNumber,
        _ServingNodeAddress_msc_Number,
        _ServingNodeAddress_sgsn_Number,
        _ServingNodeAddress_mme_Number,
        ServingNodeAddress,
        _SubscriberLocationReport_Res_extensionContainer,
        _SubscriberLocationReport_Res_na_ESRK,
        _SubscriberLocationReport_Res_na_ESRD,
        _SubscriberLocationReport_Res_h_gmlc_Address,
        _SubscriberLocationReport_Res_mo_lrShortCircuitIndicator,
        _SubscriberLocationReport_Res_reportingPLMNList,
        _SubscriberLocationReport_Res_lcs_ReferenceNumber,
        SubscriberLocationReport_Res,
    ]

class MAP_MS_DataTypes:

    _name_  = 'MAP-MS-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 11, 16]
    
    _obj_ = [
        'UpdateLocationArg',
        'VLR-Capability',
        'SupportedRAT-Types',
        'SuperChargerInfo',
        'AgeIndicator',
        'IST-SupportIndicator',
        'SupportedLCS-CapabilitySets',
        'UpdateLocationRes',
        'ADD-Info',
        'PagingArea',
        'LocationArea',
        'LAC',
        'CancelLocationArg',
        'TypeOfUpdate',
        'CancellationType',
        'CancelLocationRes',
        'PurgeMS-Arg',
        'PurgeMS-Res',
        'SendIdentificationArg',
        'HopCounter',
        'SendIdentificationRes',
        'AuthenticationSetList',
        'TripletList',
        'QuintupletList',
        'AuthenticationTriplet',
        'AuthenticationQuintuplet',
        'CurrentSecurityContext',
        'GSM-SecurityContextData',
        'UMTS-SecurityContextData',
        'RAND',
        'SRES',
        'Kc',
        'XRES',
        'CK',
        'IK',
        'AUTN',
        'AUTS',
        'Cksn',
        'KSI',
        'AuthenticationFailureReportArg',
        'AccessType',
        'AuthenticationFailureReportRes',
        'FailureCause',
        'UpdateGprsLocationArg',
        'SMSRegisterRequest',
        'Used-RAT-Type',
        'EPS-Info',
        'PDN-GW-Update',
        'ISR-Information',
        'SGSN-Capability',
        'SupportedFeatures',
        'UE-SRVCC-Capability',
        'UpdateGprsLocationRes',
        'EPLMN-List',
        'AdjacentPLMN-List',
        'ForwardAccessSignalling-Arg',
        'AllowedGSM-Algorithms',
        'AllowedUMTS-Algorithms',
        'PermittedIntegrityProtectionAlgorithms',
        'maxPermittedIntegrityProtectionAlgorithmsLength',
        'PermittedEncryptionAlgorithms',
        'maxPermittedEncryptionAlgorithmsLength',
        'KeyStatus',
        'PrepareHO-Arg',
        'LCLS-GlobalCallReference',
        'LCLS-Negotiation',
        'LCLS-ConfigurationPreference',
        'BSSMAP-ServiceHandoverList',
        'BSSMAP-ServiceHandoverInfo',
        'maxNumOfServiceHandovers',
        'BSSMAP-ServiceHandover',
        'RANAP-ServiceHandover',
        'RadioResourceList',
        'RadioResource',
        'maxNumOfRadioResources',
        'PrepareHO-Res',
        'SelectedUMTS-Algorithms',
        'ChosenIntegrityProtectionAlgorithm',
        'ChosenEncryptionAlgorithm',
        'ChosenRadioResourceInformation',
        'ChosenChannelInfo',
        'ChosenSpeechVersion',
        'PrepareSubsequentHO-Arg',
        'PrepareSubsequentHO-Res',
        'ProcessAccessSignalling-Arg',
        'AoIPCodecsList',
        'AoIPCodec',
        'SupportedCodecsList',
        'CodecList',
        'Codec',
        'GERAN-Classmark',
        'SelectedGSM-Algorithm',
        'SendEndSignal-Arg',
        'SendEndSignal-Res',
        'RNCId',
        'RelocationNumberList',
        'MulticallBearerInfo',
        'RelocationNumber',
        'RAB-Id',
        'maxNrOfRABs',
        'maxNumOfRelocationNumber',
        'RadioResourceInformation',
        'IntegrityProtectionInformation',
        'maxNumOfIntegrityInfo',
        'EncryptionInformation',
        'maxNumOfEncryptionInfo',
        'SendAuthenticationInfoArg',
        'NumberOfRequestedVectors',
        'Re-synchronisationInfo',
        'SendAuthenticationInfoRes',
        'EPS-AuthenticationSetList',
        'UE-UsageType',
        'EPC-AV',
        'KASME',
        'RequestingNodeType',
        'CheckIMEI-Arg',
        'CheckIMEI-Res',
        'RequestedEquipmentInfo',
        'UESBI-Iu',
        'UESBI-IuA',
        'UESBI-IuB',
        'EquipmentStatus',
        'InsertSubscriberDataArg',
        'Group-Service-ID',
        'Local-GroupID',
        'IMSI-GroupIdList',
        'IMSI-GroupId',
        'SubscribedPeriodicRAUTAUtimer',
        'SubscribedPeriodicLAUtimer',
        'CSG-SubscriptionDataList',
        'CSG-SubscriptionData',
        'VPLMN-CSG-SubscriptionDataList',
        'CSG-Id',
        'LIPA-AllowedAPNList',
        'maxNumOfLIPAAllowedAPN',
        'EPS-SubscriptionData',
        'APN-OI-Replacement',
        'RFSP-ID',
        'APN-ConfigurationProfile',
        'EPS-DataList',
        'maxNumOfAPN-Configurations',
        'APN-Configuration',
        'NIDD-Mechanism',
        'PDN-Type',
        'EPS-QoS-Subscribed',
        'AMBR',
        'SpecificAPNInfoList',
        'maxNumOfSpecificAPNInfos',
        'SpecificAPNInfo',
        'Bandwidth',
        'QoS-Class-Identifier',
        'Allocation-Retention-Priority',
        'PDN-GW-Identity',
        'FQDN',
        'PDN-GW-AllocationType',
        'WLAN-Offloadability',
        'WLAN-Offloadability-Indication',
        'AccessRestrictionData',
        'AdjacentAccessRestrictionDataList',
        'AdjacentAccessRestrictionData',
        'CS-AllocationRetentionPriority',
        'IST-AlertTimerValue',
        'LCSInformation',
        'GMLC-List',
        'maxNumOfGMLC',
        'NetworkAccessMode',
        'GPRSDataList',
        'maxNumOfPDP-Contexts',
        'PDP-Context',
        'Restoration-Priority',
        'SIPTO-Permission',
        'SIPTO-Local-Network-Permission',
        'LIPA-Permission',
        'ContextId',
        'GPRSSubscriptionData',
        'SGSN-CAMEL-SubscriptionInfo',
        'GPRS-CSI',
        'GPRS-CamelTDPDataList',
        'GPRS-CamelTDPData',
        'DefaultGPRS-Handling',
        'GPRS-TriggerDetectionPoint',
        'APN',
        'PDP-Type',
        'Ext-PDP-Type',
        'PDP-Address',
        'QoS-Subscribed',
        'Ext-QoS-Subscribed',
        'Ext2-QoS-Subscribed',
        'Ext3-QoS-Subscribed',
        'Ext4-QoS-Subscribed',
        'ChargingCharacteristics',
        'LSAOnlyAccessIndicator',
        'LSADataList',
        'maxNumOfLSAs',
        'LSAData',
        'LSAInformation',
        'LSAIdentity',
        'LSAAttributes',
        'SubscriberData',
        'Category',
        'SubscriberStatus',
        'BearerServiceList',
        'maxNumOfBearerServices',
        'TeleserviceList',
        'maxNumOfTeleservices',
        'ODB-Data',
        'ODB-GeneralData',
        'ODB-HPLMN-Data',
        'Ext-SS-InfoList',
        'Ext-SS-Info',
        'Ext-ForwInfo',
        'Ext-ForwFeatureList',
        'Ext-ForwFeature',
        'Ext-ForwOptions',
        'Ext-NoRepCondTime',
        'Ext-CallBarInfo',
        'Ext-CallBarFeatureList',
        'Ext-CallBarringFeature',
        'CUG-Info',
        'CUG-SubscriptionList',
        'CUG-Subscription',
        'CUG-Index',
        'CUG-Interlock',
        'IntraCUG-Options',
        'maxNumOfCUG',
        'CUG-FeatureList',
        'Ext-BasicServiceGroupList',
        'maxNumOfExt-BasicServiceGroups',
        'CUG-Feature',
        'InterCUG-Restrictions',
        'Ext-SS-Data',
        'LCS-PrivacyExceptionList',
        'maxNumOfPrivacyClass',
        'LCS-PrivacyClass',
        'ExternalClientList',
        'maxNumOfExternalClient',
        'PLMNClientList',
        'maxNumOfPLMNClient',
        'Ext-ExternalClientList',
        'maxNumOfExt-ExternalClient',
        'ExternalClient',
        'GMLC-Restriction',
        'NotificationToMSUser',
        'ServiceTypeList',
        'maxNumOfServiceType',
        'ServiceType',
        'MOLR-List',
        'maxNumOfMOLR-Class',
        'MOLR-Class',
        'ZoneCodeList',
        'ZoneCode',
        'maxNumOfZoneCodes',
        'InsertSubscriberDataRes',
        'RegionalSubscriptionResponse',
        'DeleteSubscriberDataArg',
        'SpecificCSI-Withdraw',
        'GPRSSubscriptionDataWithdraw',
        'EPS-SubscriptionDataWithdraw',
        'ContextIdList',
        'LSAInformationWithdraw',
        'LSAIdentityList',
        'BasicServiceList',
        'maxNumOfBasicServices',
        'DeleteSubscriberDataRes',
        'VlrCamelSubscriptionInfo',
        'MT-smsCAMELTDP-CriteriaList',
        'MT-smsCAMELTDP-Criteria',
        'TPDU-TypeCriterion',
        'maxNumOfTPDUTypes',
        'MT-SMS-TPDU-Type',
        'D-CSI',
        'DP-AnalysedInfoCriteriaList',
        'maxNumOfDP-AnalysedInfoCriteria',
        'DP-AnalysedInfoCriterium',
        'SS-CSI',
        'SS-CamelData',
        'SS-EventList',
        'maxNumOfCamelSSEvents',
        'O-CSI',
        'O-BcsmCamelTDPDataList',
        'maxNumOfCamelTDPData',
        'O-BcsmCamelTDPData',
        'ServiceKey',
        'O-BcsmTriggerDetectionPoint',
        'O-BcsmCamelTDPCriteriaList',
        'T-BCSM-CAMEL-TDP-CriteriaList',
        'O-BcsmCamelTDP-Criteria',
        'T-BCSM-CAMEL-TDP-Criteria',
        'DestinationNumberCriteria',
        'DestinationNumberList',
        'DestinationNumberLengthList',
        'BasicServiceCriteria',
        'maxNumOfISDN-AddressDigits',
        'maxNumOfCamelDestinationNumbers',
        'maxNumOfCamelDestinationNumberLengths',
        'maxNumOfCamelBasicServiceCriteria',
        'CallTypeCriteria',
        'MatchType',
        'O-CauseValueCriteria',
        'T-CauseValueCriteria',
        'maxNumOfCAMEL-O-CauseValueCriteria',
        'maxNumOfCAMEL-T-CauseValueCriteria',
        'CauseValue',
        'DefaultCallHandling',
        'CamelCapabilityHandling',
        'SupportedCamelPhases',
        'OfferedCamel4CSIs',
        'OfferedCamel4Functionalities',
        'SMS-CSI',
        'SMS-CAMEL-TDP-DataList',
        'SMS-CAMEL-TDP-Data',
        'SMS-TriggerDetectionPoint',
        'DefaultSMS-Handling',
        'M-CSI',
        'MG-CSI',
        'MobilityTriggers',
        'maxNumOfMobilityTriggers',
        'MM-Code',
        'T-CSI',
        'T-BcsmCamelTDPDataList',
        'T-BcsmCamelTDPData',
        'T-BcsmTriggerDetectionPoint',
        'SendRoutingInfoForGprsArg',
        'SendRoutingInfoForGprsRes',
        'FailureReportArg',
        'FailureReportRes',
        'NoteMsPresentForGprsArg',
        'NoteMsPresentForGprsRes',
        'ResetArg',
        'SendingNode-Number',
        'RestoreDataArg',
        'RestoreDataRes',
        'VBSDataList',
        'VGCSDataList',
        'maxNumOfVBSGroupIds',
        'maxNumOfVGCSGroupIds',
        'VoiceGroupCallData',
        'AdditionalInfo',
        'AdditionalSubscriptions',
        'VoiceBroadcastData',
        'GroupId',
        'Long-GroupId',
        'ProvideSubscriberInfoArg',
        'ProvideSubscriberInfoRes',
        'SubscriberInfo',
        'IMS-VoiceOverPS-SessionsInd',
        'TimeZone',
        'DaylightSavingTime',
        'MNPInfoRes',
        'RouteingNumber',
        'NumberPortabilityStatus',
        'MS-Classmark2',
        'GPRSMSClass',
        'MSNetworkCapability',
        'MSRadioAccessCapability',
        'RequestedInfo',
        'DomainType',
        'RequestedNodes',
        'LocationInformation',
        'LocationInformationEPS',
        'LocationInformationGPRS',
        'UserCSGInformation',
        'GeographicalInformation',
        'GeodeticInformation',
        'LocationNumber',
        'SubscriberState',
        'PS-SubscriberState',
        'PDP-ContextInfoList',
        'PDP-ContextInfo',
        'NSAPI',
        'TransactionId',
        'TEID',
        'GPRSChargingID',
        'NotReachableReason',
        'AnyTimeInterrogationArg',
        'AnyTimeInterrogationRes',
        'AnyTimeSubscriptionInterrogationArg',
        'AnyTimeSubscriptionInterrogationRes',
        'CallWaitingData',
        'Ext-CwFeatureList',
        'Ext-CwFeature',
        'ClipData',
        'ClirData',
        'CallHoldData',
        'EctData',
        'RequestedSubscriptionInfo',
        'MSISDN-BS-List',
        'maxNumOfMSISDN',
        'MSISDN-BS',
        'RequestedCAMEL-SubscriptionInfo',
        'AdditionalRequestedCAMEL-SubscriptionInfo',
        'CallForwardingData',
        'CallBarringData',
        'WrongPasswordAttemptsCounter',
        'ODB-Info',
        'CAMEL-SubscriptionInfo',
        'AnyTimeModificationArg',
        'ModificationRequestFor-CW-Info',
        'ModificationRequestFor-CH-Info',
        'ModificationRequestFor-ECT-Info',
        'ModificationRequestFor-CLIR-Info',
        'ModificationRequestFor-CLIP-Info',
        'ModificationRequestFor-CSG',
        'RequestedServingNode',
        'ServingNode',
        'AnyTimeModificationRes',
        'ModificationRequestFor-CF-Info',
        'ModificationRequestFor-CB-Info',
        'ModificationRequestFor-ODB-data',
        'ModificationRequestFor-CSI',
        'ModificationRequestFor-IP-SM-GW-Data',
        'ModificationInstruction',
        'NoteSubscriberDataModifiedArg',
        'NoteSubscriberDataModifiedRes',
        'NoteMM-EventArg',
        'NoteMM-EventRes',
        'Ext-SS-InfoFor-CSE',
        'Ext-ForwardingInfoFor-CSE',
        'Ext-CallBarringInfoFor-CSE',
        'UpdateVcsgLocationArg',
        'UpdateVcsgLocationRes',
        'CancelVcsgLocationArg',
        'CancelVcsgLocationRes',
        ]
    _type_ = [
        'UpdateLocationArg',
        'VLR-Capability',
        'SupportedRAT-Types',
        'SuperChargerInfo',
        'AgeIndicator',
        'IST-SupportIndicator',
        'SupportedLCS-CapabilitySets',
        'UpdateLocationRes',
        'ADD-Info',
        'PagingArea',
        'LocationArea',
        'LAC',
        'CancelLocationArg',
        'TypeOfUpdate',
        'CancellationType',
        'CancelLocationRes',
        'PurgeMS-Arg',
        'PurgeMS-Res',
        'SendIdentificationArg',
        'HopCounter',
        'SendIdentificationRes',
        'AuthenticationSetList',
        'TripletList',
        'QuintupletList',
        'AuthenticationTriplet',
        'AuthenticationQuintuplet',
        'CurrentSecurityContext',
        'GSM-SecurityContextData',
        'UMTS-SecurityContextData',
        'RAND',
        'SRES',
        'Kc',
        'XRES',
        'CK',
        'IK',
        'AUTN',
        'AUTS',
        'Cksn',
        'KSI',
        'AuthenticationFailureReportArg',
        'AccessType',
        'AuthenticationFailureReportRes',
        'FailureCause',
        'UpdateGprsLocationArg',
        'SMSRegisterRequest',
        'Used-RAT-Type',
        'EPS-Info',
        'PDN-GW-Update',
        'ISR-Information',
        'SGSN-Capability',
        'SupportedFeatures',
        'UE-SRVCC-Capability',
        'UpdateGprsLocationRes',
        'EPLMN-List',
        'AdjacentPLMN-List',
        'ForwardAccessSignalling-Arg',
        'AllowedGSM-Algorithms',
        'AllowedUMTS-Algorithms',
        'PermittedIntegrityProtectionAlgorithms',
        'PermittedEncryptionAlgorithms',
        'KeyStatus',
        'PrepareHO-Arg',
        'LCLS-GlobalCallReference',
        'LCLS-Negotiation',
        'LCLS-ConfigurationPreference',
        'BSSMAP-ServiceHandoverList',
        'BSSMAP-ServiceHandoverInfo',
        'BSSMAP-ServiceHandover',
        'RANAP-ServiceHandover',
        'RadioResourceList',
        'RadioResource',
        'PrepareHO-Res',
        'SelectedUMTS-Algorithms',
        'ChosenIntegrityProtectionAlgorithm',
        'ChosenEncryptionAlgorithm',
        'ChosenRadioResourceInformation',
        'ChosenChannelInfo',
        'ChosenSpeechVersion',
        'PrepareSubsequentHO-Arg',
        'PrepareSubsequentHO-Res',
        'ProcessAccessSignalling-Arg',
        'AoIPCodecsList',
        'AoIPCodec',
        'SupportedCodecsList',
        'CodecList',
        'Codec',
        'GERAN-Classmark',
        'SelectedGSM-Algorithm',
        'SendEndSignal-Arg',
        'SendEndSignal-Res',
        'RNCId',
        'RelocationNumberList',
        'MulticallBearerInfo',
        'RelocationNumber',
        'RAB-Id',
        'RadioResourceInformation',
        'IntegrityProtectionInformation',
        'EncryptionInformation',
        'SendAuthenticationInfoArg',
        'NumberOfRequestedVectors',
        'Re-synchronisationInfo',
        'SendAuthenticationInfoRes',
        'EPS-AuthenticationSetList',
        'UE-UsageType',
        'EPC-AV',
        'KASME',
        'RequestingNodeType',
        'CheckIMEI-Arg',
        'CheckIMEI-Res',
        'RequestedEquipmentInfo',
        'UESBI-Iu',
        'UESBI-IuA',
        'UESBI-IuB',
        'EquipmentStatus',
        'InsertSubscriberDataArg',
        'Group-Service-ID',
        'Local-GroupID',
        'IMSI-GroupIdList',
        'IMSI-GroupId',
        'SubscribedPeriodicRAUTAUtimer',
        'SubscribedPeriodicLAUtimer',
        'CSG-SubscriptionDataList',
        'CSG-SubscriptionData',
        'VPLMN-CSG-SubscriptionDataList',
        'CSG-Id',
        'LIPA-AllowedAPNList',
        'EPS-SubscriptionData',
        'APN-OI-Replacement',
        'RFSP-ID',
        'APN-ConfigurationProfile',
        'EPS-DataList',
        'APN-Configuration',
        'NIDD-Mechanism',
        'PDN-Type',
        'EPS-QoS-Subscribed',
        'AMBR',
        'SpecificAPNInfoList',
        'SpecificAPNInfo',
        'Bandwidth',
        'QoS-Class-Identifier',
        'Allocation-Retention-Priority',
        'PDN-GW-Identity',
        'FQDN',
        'PDN-GW-AllocationType',
        'WLAN-Offloadability',
        'WLAN-Offloadability-Indication',
        'AccessRestrictionData',
        'AdjacentAccessRestrictionDataList',
        'AdjacentAccessRestrictionData',
        'CS-AllocationRetentionPriority',
        'IST-AlertTimerValue',
        'LCSInformation',
        'GMLC-List',
        'NetworkAccessMode',
        'GPRSDataList',
        'PDP-Context',
        'Restoration-Priority',
        'SIPTO-Permission',
        'SIPTO-Local-Network-Permission',
        'LIPA-Permission',
        'ContextId',
        'GPRSSubscriptionData',
        'SGSN-CAMEL-SubscriptionInfo',
        'GPRS-CSI',
        'GPRS-CamelTDPDataList',
        'GPRS-CamelTDPData',
        'DefaultGPRS-Handling',
        'GPRS-TriggerDetectionPoint',
        'APN',
        'PDP-Type',
        'Ext-PDP-Type',
        'PDP-Address',
        'QoS-Subscribed',
        'Ext-QoS-Subscribed',
        'Ext2-QoS-Subscribed',
        'Ext3-QoS-Subscribed',
        'Ext4-QoS-Subscribed',
        'ChargingCharacteristics',
        'LSAOnlyAccessIndicator',
        'LSADataList',
        'LSAData',
        'LSAInformation',
        'LSAIdentity',
        'LSAAttributes',
        'SubscriberData',
        'Category',
        'SubscriberStatus',
        'BearerServiceList',
        'TeleserviceList',
        'ODB-Data',
        'ODB-GeneralData',
        'ODB-HPLMN-Data',
        'Ext-SS-InfoList',
        'Ext-SS-Info',
        'Ext-ForwInfo',
        'Ext-ForwFeatureList',
        'Ext-ForwFeature',
        'Ext-ForwOptions',
        'Ext-NoRepCondTime',
        'Ext-CallBarInfo',
        'Ext-CallBarFeatureList',
        'Ext-CallBarringFeature',
        'CUG-Info',
        'CUG-SubscriptionList',
        'CUG-Subscription',
        'CUG-Index',
        'CUG-Interlock',
        'IntraCUG-Options',
        'CUG-FeatureList',
        'Ext-BasicServiceGroupList',
        'CUG-Feature',
        'InterCUG-Restrictions',
        'Ext-SS-Data',
        'LCS-PrivacyExceptionList',
        'LCS-PrivacyClass',
        'ExternalClientList',
        'PLMNClientList',
        'Ext-ExternalClientList',
        'ExternalClient',
        'GMLC-Restriction',
        'NotificationToMSUser',
        'ServiceTypeList',
        'ServiceType',
        'MOLR-List',
        'MOLR-Class',
        'ZoneCodeList',
        'ZoneCode',
        'InsertSubscriberDataRes',
        'RegionalSubscriptionResponse',
        'DeleteSubscriberDataArg',
        'SpecificCSI-Withdraw',
        'GPRSSubscriptionDataWithdraw',
        'EPS-SubscriptionDataWithdraw',
        'ContextIdList',
        'LSAInformationWithdraw',
        'LSAIdentityList',
        'BasicServiceList',
        'DeleteSubscriberDataRes',
        'VlrCamelSubscriptionInfo',
        'MT-smsCAMELTDP-CriteriaList',
        'MT-smsCAMELTDP-Criteria',
        'TPDU-TypeCriterion',
        'MT-SMS-TPDU-Type',
        'D-CSI',
        'DP-AnalysedInfoCriteriaList',
        'DP-AnalysedInfoCriterium',
        'SS-CSI',
        'SS-CamelData',
        'SS-EventList',
        'O-CSI',
        'O-BcsmCamelTDPDataList',
        'O-BcsmCamelTDPData',
        'ServiceKey',
        'O-BcsmTriggerDetectionPoint',
        'O-BcsmCamelTDPCriteriaList',
        'T-BCSM-CAMEL-TDP-CriteriaList',
        'O-BcsmCamelTDP-Criteria',
        'T-BCSM-CAMEL-TDP-Criteria',
        'DestinationNumberCriteria',
        'DestinationNumberList',
        'DestinationNumberLengthList',
        'BasicServiceCriteria',
        'CallTypeCriteria',
        'MatchType',
        'O-CauseValueCriteria',
        'T-CauseValueCriteria',
        'CauseValue',
        'DefaultCallHandling',
        'CamelCapabilityHandling',
        'SupportedCamelPhases',
        'OfferedCamel4CSIs',
        'OfferedCamel4Functionalities',
        'SMS-CSI',
        'SMS-CAMEL-TDP-DataList',
        'SMS-CAMEL-TDP-Data',
        'SMS-TriggerDetectionPoint',
        'DefaultSMS-Handling',
        'M-CSI',
        'MG-CSI',
        'MobilityTriggers',
        'MM-Code',
        'T-CSI',
        'T-BcsmCamelTDPDataList',
        'T-BcsmCamelTDPData',
        'T-BcsmTriggerDetectionPoint',
        'SendRoutingInfoForGprsArg',
        'SendRoutingInfoForGprsRes',
        'FailureReportArg',
        'FailureReportRes',
        'NoteMsPresentForGprsArg',
        'NoteMsPresentForGprsRes',
        'ResetArg',
        'SendingNode-Number',
        'RestoreDataArg',
        'RestoreDataRes',
        'VBSDataList',
        'VGCSDataList',
        'VoiceGroupCallData',
        'AdditionalInfo',
        'AdditionalSubscriptions',
        'VoiceBroadcastData',
        'GroupId',
        'Long-GroupId',
        'ProvideSubscriberInfoArg',
        'ProvideSubscriberInfoRes',
        'SubscriberInfo',
        'IMS-VoiceOverPS-SessionsInd',
        'TimeZone',
        'DaylightSavingTime',
        'MNPInfoRes',
        'RouteingNumber',
        'NumberPortabilityStatus',
        'MS-Classmark2',
        'GPRSMSClass',
        'MSNetworkCapability',
        'MSRadioAccessCapability',
        'RequestedInfo',
        'DomainType',
        'RequestedNodes',
        'LocationInformation',
        'LocationInformationEPS',
        'LocationInformationGPRS',
        'UserCSGInformation',
        'GeographicalInformation',
        'GeodeticInformation',
        'LocationNumber',
        'SubscriberState',
        'PS-SubscriberState',
        'PDP-ContextInfoList',
        'PDP-ContextInfo',
        'NSAPI',
        'TransactionId',
        'TEID',
        'GPRSChargingID',
        'NotReachableReason',
        'AnyTimeInterrogationArg',
        'AnyTimeInterrogationRes',
        'AnyTimeSubscriptionInterrogationArg',
        'AnyTimeSubscriptionInterrogationRes',
        'CallWaitingData',
        'Ext-CwFeatureList',
        'Ext-CwFeature',
        'ClipData',
        'ClirData',
        'CallHoldData',
        'EctData',
        'RequestedSubscriptionInfo',
        'MSISDN-BS-List',
        'MSISDN-BS',
        'RequestedCAMEL-SubscriptionInfo',
        'AdditionalRequestedCAMEL-SubscriptionInfo',
        'CallForwardingData',
        'CallBarringData',
        'WrongPasswordAttemptsCounter',
        'ODB-Info',
        'CAMEL-SubscriptionInfo',
        'AnyTimeModificationArg',
        'ModificationRequestFor-CW-Info',
        'ModificationRequestFor-CH-Info',
        'ModificationRequestFor-ECT-Info',
        'ModificationRequestFor-CLIR-Info',
        'ModificationRequestFor-CLIP-Info',
        'ModificationRequestFor-CSG',
        'RequestedServingNode',
        'ServingNode',
        'AnyTimeModificationRes',
        'ModificationRequestFor-CF-Info',
        'ModificationRequestFor-CB-Info',
        'ModificationRequestFor-ODB-data',
        'ModificationRequestFor-CSI',
        'ModificationRequestFor-IP-SM-GW-Data',
        'ModificationInstruction',
        'NoteSubscriberDataModifiedArg',
        'NoteSubscriberDataModifiedRes',
        'NoteMM-EventArg',
        'NoteMM-EventRes',
        'Ext-SS-InfoFor-CSE',
        'Ext-ForwardingInfoFor-CSE',
        'Ext-CallBarringInfoFor-CSE',
        'UpdateVcsgLocationArg',
        'UpdateVcsgLocationRes',
        'CancelVcsgLocationArg',
        'CancelVcsgLocationRes',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxPermittedIntegrityProtectionAlgorithmsLength',
        'maxPermittedEncryptionAlgorithmsLength',
        'maxNumOfServiceHandovers',
        'maxNumOfRadioResources',
        'maxNrOfRABs',
        'maxNumOfRelocationNumber',
        'maxNumOfIntegrityInfo',
        'maxNumOfEncryptionInfo',
        'maxNumOfLIPAAllowedAPN',
        'maxNumOfAPN-Configurations',
        'maxNumOfSpecificAPNInfos',
        'maxNumOfGMLC',
        'maxNumOfPDP-Contexts',
        'maxNumOfLSAs',
        'maxNumOfBearerServices',
        'maxNumOfTeleservices',
        'maxNumOfCUG',
        'maxNumOfExt-BasicServiceGroups',
        'maxNumOfPrivacyClass',
        'maxNumOfExternalClient',
        'maxNumOfPLMNClient',
        'maxNumOfExt-ExternalClient',
        'maxNumOfServiceType',
        'maxNumOfMOLR-Class',
        'maxNumOfZoneCodes',
        'maxNumOfBasicServices',
        'maxNumOfTPDUTypes',
        'maxNumOfDP-AnalysedInfoCriteria',
        'maxNumOfCamelSSEvents',
        'maxNumOfCamelTDPData',
        'maxNumOfISDN-AddressDigits',
        'maxNumOfCamelDestinationNumbers',
        'maxNumOfCamelDestinationNumberLengths',
        'maxNumOfCamelBasicServiceCriteria',
        'maxNumOfCAMEL-O-CauseValueCriteria',
        'maxNumOfCAMEL-T-CauseValueCriteria',
        'maxNumOfMobilityTriggers',
        'maxNumOfVBSGroupIds',
        'maxNumOfVGCSGroupIds',
        'maxNumOfMSISDN',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< UpdateLocationArg >-----#
    UpdateLocationArg = SEQ(name='UpdateLocationArg', mode=MODE_TYPE)
    _UpdateLocationArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _UpdateLocationArg_msc_Number = OCT_STR(name='msc-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _UpdateLocationArg_vlr_Number = OCT_STR(name='vlr-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _UpdateLocationArg_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')), opt=True)
    _UpdateLocationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _UpdateLocationArg_vlr_Capability = SEQ(name='vlr-Capability', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'VLR-Capability')), opt=True)
    _UpdateLocationArg_informPreviousNetworkEntity = NULL(name='informPreviousNetworkEntity', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateLocationArg_cs_LCS_NotSupportedByUE = NULL(name='cs-LCS-NotSupportedByUE', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateLocationArg_v_gmlc_Address = OCT_STR(name='v-gmlc-Address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _UpdateLocationArg_add_info = SEQ(name='add-info', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ADD-Info')), opt=True)
    _UpdateLocationArg_pagingArea = SEQ_OF(name='pagingArea', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PagingArea')), opt=True)
    _UpdateLocationArg_skipSubscriberDataUpdate = NULL(name='skipSubscriberDataUpdate', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateLocationArg_restorationIndicator = NULL(name='restorationIndicator', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateLocationArg_eplmn_List = SEQ_OF(name='eplmn-List', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EPLMN-List')), opt=True)
    _UpdateLocationArg_mme_DiameterAddress = SEQ(name='mme-DiameterAddress', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    UpdateLocationArg._cont = ASN1Dict([
        ('imsi', _UpdateLocationArg_imsi),
        ('msc-Number', _UpdateLocationArg_msc_Number),
        ('vlr-Number', _UpdateLocationArg_vlr_Number),
        ('lmsi', _UpdateLocationArg_lmsi),
        ('extensionContainer', _UpdateLocationArg_extensionContainer),
        ('vlr-Capability', _UpdateLocationArg_vlr_Capability),
        ('informPreviousNetworkEntity', _UpdateLocationArg_informPreviousNetworkEntity),
        ('cs-LCS-NotSupportedByUE', _UpdateLocationArg_cs_LCS_NotSupportedByUE),
        ('v-gmlc-Address', _UpdateLocationArg_v_gmlc_Address),
        ('add-info', _UpdateLocationArg_add_info),
        ('pagingArea', _UpdateLocationArg_pagingArea),
        ('skipSubscriberDataUpdate', _UpdateLocationArg_skipSubscriberDataUpdate),
        ('restorationIndicator', _UpdateLocationArg_restorationIndicator),
        ('eplmn-List', _UpdateLocationArg_eplmn_List),
        ('mme-DiameterAddress', _UpdateLocationArg_mme_DiameterAddress),
        ])
    UpdateLocationArg._ext = ['vlr-Capability', 'informPreviousNetworkEntity', 'cs-LCS-NotSupportedByUE', 'v-gmlc-Address', 'add-info', 'pagingArea', 'skipSubscriberDataUpdate', 'restorationIndicator', 'eplmn-List', 'mme-DiameterAddress']
    
    #-----< VLR-Capability >-----#
    VLR_Capability = SEQ(name='VLR-Capability', mode=MODE_TYPE)
    _VLR_Capability_supportedCamelPhases = BIT_STR(name='supportedCamelPhases', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedCamelPhases')), opt=True)
    _VLR_Capability_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _VLR_Capability_solsaSupportIndicator = NULL(name='solsaSupportIndicator', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VLR_Capability_istSupportIndicator = ENUM(name='istSupportIndicator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'IST-SupportIndicator')), opt=True)
    _VLR_Capability_superChargerSupportedInServingNetworkEntity = CHOICE(name='superChargerSupportedInServingNetworkEntity', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SuperChargerInfo')), opt=True)
    _VLR_Capability_longFTN_Supported = NULL(name='longFTN-Supported', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VLR_Capability_supportedLCS_CapabilitySets = BIT_STR(name='supportedLCS-CapabilitySets', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedLCS-CapabilitySets')), opt=True)
    _VLR_Capability_offeredCamel4CSIs = BIT_STR(name='offeredCamel4CSIs', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'OfferedCamel4CSIs')), opt=True)
    _VLR_Capability_supportedRAT_TypesIndicator = BIT_STR(name='supportedRAT-TypesIndicator', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedRAT-Types')), opt=True)
    _VLR_Capability_longGroupID_Supported = NULL(name='longGroupID-Supported', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VLR_Capability_mtRoamingForwardingSupported = NULL(name='mtRoamingForwardingSupported', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VLR_Capability_msisdn_lessOperation_Supported = NULL(name='msisdn-lessOperation-Supported', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    VLR_Capability._cont = ASN1Dict([
        ('supportedCamelPhases', _VLR_Capability_supportedCamelPhases),
        ('extensionContainer', _VLR_Capability_extensionContainer),
        ('solsaSupportIndicator', _VLR_Capability_solsaSupportIndicator),
        ('istSupportIndicator', _VLR_Capability_istSupportIndicator),
        ('superChargerSupportedInServingNetworkEntity', _VLR_Capability_superChargerSupportedInServingNetworkEntity),
        ('longFTN-Supported', _VLR_Capability_longFTN_Supported),
        ('supportedLCS-CapabilitySets', _VLR_Capability_supportedLCS_CapabilitySets),
        ('offeredCamel4CSIs', _VLR_Capability_offeredCamel4CSIs),
        ('supportedRAT-TypesIndicator', _VLR_Capability_supportedRAT_TypesIndicator),
        ('longGroupID-Supported', _VLR_Capability_longGroupID_Supported),
        ('mtRoamingForwardingSupported', _VLR_Capability_mtRoamingForwardingSupported),
        ('msisdn-lessOperation-Supported', _VLR_Capability_msisdn_lessOperation_Supported),
        ])
    VLR_Capability._ext = ['solsaSupportIndicator', 'istSupportIndicator', 'superChargerSupportedInServingNetworkEntity', 'longFTN-Supported', 'supportedLCS-CapabilitySets', 'offeredCamel4CSIs', 'supportedRAT-TypesIndicator', 'longGroupID-Supported', 'mtRoamingForwardingSupported', 'msisdn-lessOperation-Supported']
    
    #-----< SupportedRAT-Types >-----#
    SupportedRAT_Types = BIT_STR(name='SupportedRAT-Types', mode=MODE_TYPE)
    SupportedRAT_Types._cont = ASN1Dict([('utran', 0), ('geran', 1), ('gan', 2), ('i-hspa-evolution', 3), ('e-utran', 4)])
    SupportedRAT_Types._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=8)], ev=None, er=[])
    
    #-----< SuperChargerInfo >-----#
    SuperChargerInfo = CHOICE(name='SuperChargerInfo', mode=MODE_TYPE)
    _SuperChargerInfo_sendSubscriberData = NULL(name='sendSubscriberData', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SuperChargerInfo_subscriberDataStored = OCT_STR(name='subscriberDataStored', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AgeIndicator')))
    SuperChargerInfo._cont = ASN1Dict([
        ('sendSubscriberData', _SuperChargerInfo_sendSubscriberData),
        ('subscriberDataStored', _SuperChargerInfo_subscriberDataStored),
        ])
    SuperChargerInfo._ext = None
    
    #-----< AgeIndicator >-----#
    AgeIndicator = OCT_STR(name='AgeIndicator', mode=MODE_TYPE)
    AgeIndicator._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=6)], ev=None, er=[])
    
    #-----< IST-SupportIndicator >-----#
    IST_SupportIndicator = ENUM(name='IST-SupportIndicator', mode=MODE_TYPE)
    IST_SupportIndicator._cont = ASN1Dict([('basicISTSupported', 0), ('istCommandSupported', 1)])
    IST_SupportIndicator._ext = []
    
    #-----< SupportedLCS-CapabilitySets >-----#
    SupportedLCS_CapabilitySets = BIT_STR(name='SupportedLCS-CapabilitySets', mode=MODE_TYPE)
    SupportedLCS_CapabilitySets._cont = ASN1Dict([('lcsCapabilitySet1', 0), ('lcsCapabilitySet2', 1), ('lcsCapabilitySet3', 2), ('lcsCapabilitySet4', 3), ('lcsCapabilitySet5', 4)])
    SupportedLCS_CapabilitySets._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=16)], ev=None, er=[])
    
    #-----< UpdateLocationRes >-----#
    UpdateLocationRes = SEQ(name='UpdateLocationRes', mode=MODE_TYPE)
    _UpdateLocationRes_hlr_Number = OCT_STR(name='hlr-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _UpdateLocationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _UpdateLocationRes_add_Capability = NULL(name='add-Capability', mode=MODE_TYPE, opt=True)
    _UpdateLocationRes_pagingArea_Capability = NULL(name='pagingArea-Capability', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    UpdateLocationRes._cont = ASN1Dict([
        ('hlr-Number', _UpdateLocationRes_hlr_Number),
        ('extensionContainer', _UpdateLocationRes_extensionContainer),
        ('add-Capability', _UpdateLocationRes_add_Capability),
        ('pagingArea-Capability', _UpdateLocationRes_pagingArea_Capability),
        ])
    UpdateLocationRes._ext = ['add-Capability', 'pagingArea-Capability']
    
    #-----< ADD-Info >-----#
    ADD_Info = SEQ(name='ADD-Info', mode=MODE_TYPE)
    _ADD_Info_imeisv = OCT_STR(name='imeisv', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMEI')))
    _ADD_Info_skipSubscriberDataUpdate = NULL(name='skipSubscriberDataUpdate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ADD_Info._cont = ASN1Dict([
        ('imeisv', _ADD_Info_imeisv),
        ('skipSubscriberDataUpdate', _ADD_Info_skipSubscriberDataUpdate),
        ])
    ADD_Info._ext = []
    
    #-----< PagingArea >-----#
    PagingArea = SEQ_OF(name='PagingArea', mode=MODE_TYPE)
    _PagingArea__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationArea')))
    PagingArea._cont = _PagingArea__item_
    PagingArea._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< LocationArea >-----#
    LocationArea = CHOICE(name='LocationArea', mode=MODE_TYPE)
    _LocationArea_laiFixedLength = OCT_STR(name='laiFixedLength', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LAIFixedLength')))
    _LocationArea_lac = OCT_STR(name='lac', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LAC')))
    LocationArea._cont = ASN1Dict([
        ('laiFixedLength', _LocationArea_laiFixedLength),
        ('lac', _LocationArea_lac),
        ])
    LocationArea._ext = None
    
    #-----< LAC >-----#
    LAC = OCT_STR(name='LAC', mode=MODE_TYPE)
    LAC._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< CancelLocationArg >-----#
    CancelLocationArg = SEQ(name='CancelLocationArg', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CancelLocationArg_identity = CHOICE(name='identity', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Identity')))
    _CancelLocationArg_cancellationType = ENUM(name='cancellationType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CancellationType')), opt=True)
    _CancelLocationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _CancelLocationArg_typeOfUpdate = ENUM(name='typeOfUpdate', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TypeOfUpdate')), opt=True)
    _CancelLocationArg_mtrf_SupportedAndAuthorized = NULL(name='mtrf-SupportedAndAuthorized', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CancelLocationArg_mtrf_SupportedAndNotAuthorized = NULL(name='mtrf-SupportedAndNotAuthorized', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CancelLocationArg_newMSC_Number = OCT_STR(name='newMSC-Number', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _CancelLocationArg_newVLR_Number = OCT_STR(name='newVLR-Number', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _CancelLocationArg_new_lmsi = OCT_STR(name='new-lmsi', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')), opt=True)
    _CancelLocationArg_reattach_Required = NULL(name='reattach-Required', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    CancelLocationArg._cont = ASN1Dict([
        ('identity', _CancelLocationArg_identity),
        ('cancellationType', _CancelLocationArg_cancellationType),
        ('extensionContainer', _CancelLocationArg_extensionContainer),
        ('typeOfUpdate', _CancelLocationArg_typeOfUpdate),
        ('mtrf-SupportedAndAuthorized', _CancelLocationArg_mtrf_SupportedAndAuthorized),
        ('mtrf-SupportedAndNotAuthorized', _CancelLocationArg_mtrf_SupportedAndNotAuthorized),
        ('newMSC-Number', _CancelLocationArg_newMSC_Number),
        ('newVLR-Number', _CancelLocationArg_newVLR_Number),
        ('new-lmsi', _CancelLocationArg_new_lmsi),
        ('reattach-Required', _CancelLocationArg_reattach_Required),
        ])
    CancelLocationArg._ext = ['typeOfUpdate', 'mtrf-SupportedAndAuthorized', 'mtrf-SupportedAndNotAuthorized', 'newMSC-Number', 'newVLR-Number', 'new-lmsi', 'reattach-Required']
    
    #-----< TypeOfUpdate >-----#
    TypeOfUpdate = ENUM(name='TypeOfUpdate', mode=MODE_TYPE)
    TypeOfUpdate._cont = ASN1Dict([('sgsn-change', 0), ('mme-change', 1)])
    TypeOfUpdate._ext = []
    
    #-----< CancellationType >-----#
    CancellationType = ENUM(name='CancellationType', mode=MODE_TYPE)
    CancellationType._cont = ASN1Dict([('updateProcedure', 0), ('subscriptionWithdraw', 1), ('initialAttachProcedure', 2)])
    CancellationType._ext = ['initialAttachProcedure']
    
    #-----< CancelLocationRes >-----#
    CancelLocationRes = SEQ(name='CancelLocationRes', mode=MODE_TYPE)
    _CancelLocationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CancelLocationRes._cont = ASN1Dict([
        ('extensionContainer', _CancelLocationRes_extensionContainer),
        ])
    CancelLocationRes._ext = []
    
    #-----< PurgeMS-Arg >-----#
    PurgeMS_Arg = SEQ(name='PurgeMS-Arg', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PurgeMS_Arg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _PurgeMS_Arg_vlr_Number = OCT_STR(name='vlr-Number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _PurgeMS_Arg_sgsn_Number = OCT_STR(name='sgsn-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _PurgeMS_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _PurgeMS_Arg_locationInformation = SEQ(name='locationInformation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationInformation')), opt=True)
    _PurgeMS_Arg_locationInformationGPRS = SEQ(name='locationInformationGPRS', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationInformationGPRS')), opt=True)
    _PurgeMS_Arg_locationInformationEPS = SEQ(name='locationInformationEPS', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationInformationEPS')), opt=True)
    PurgeMS_Arg._cont = ASN1Dict([
        ('imsi', _PurgeMS_Arg_imsi),
        ('vlr-Number', _PurgeMS_Arg_vlr_Number),
        ('sgsn-Number', _PurgeMS_Arg_sgsn_Number),
        ('extensionContainer', _PurgeMS_Arg_extensionContainer),
        ('locationInformation', _PurgeMS_Arg_locationInformation),
        ('locationInformationGPRS', _PurgeMS_Arg_locationInformationGPRS),
        ('locationInformationEPS', _PurgeMS_Arg_locationInformationEPS),
        ])
    PurgeMS_Arg._ext = ['locationInformation', 'locationInformationGPRS', 'locationInformationEPS']
    
    #-----< PurgeMS-Res >-----#
    PurgeMS_Res = SEQ(name='PurgeMS-Res', mode=MODE_TYPE)
    _PurgeMS_Res_freezeTMSI = NULL(name='freezeTMSI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PurgeMS_Res_freezeP_TMSI = NULL(name='freezeP-TMSI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PurgeMS_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _PurgeMS_Res_freezeM_TMSI = NULL(name='freezeM-TMSI', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    PurgeMS_Res._cont = ASN1Dict([
        ('freezeTMSI', _PurgeMS_Res_freezeTMSI),
        ('freezeP-TMSI', _PurgeMS_Res_freezeP_TMSI),
        ('extensionContainer', _PurgeMS_Res_extensionContainer),
        ('freezeM-TMSI', _PurgeMS_Res_freezeM_TMSI),
        ])
    PurgeMS_Res._ext = ['freezeM-TMSI']
    
    #-----< SendIdentificationArg >-----#
    SendIdentificationArg = SEQ(name='SendIdentificationArg', mode=MODE_TYPE)
    _SendIdentificationArg_tmsi = OCT_STR(name='tmsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'TMSI')))
    _SendIdentificationArg_numberOfRequestedVectors = INT(name='numberOfRequestedVectors', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NumberOfRequestedVectors')), opt=True)
    _SendIdentificationArg_segmentationProhibited = NULL(name='segmentationProhibited', mode=MODE_TYPE, opt=True)
    _SendIdentificationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SendIdentificationArg_msc_Number = OCT_STR(name='msc-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SendIdentificationArg_previous_LAI = OCT_STR(name='previous-LAI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LAIFixedLength')), opt=True)
    _SendIdentificationArg_hopCounter = INT(name='hopCounter', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'HopCounter')), opt=True)
    _SendIdentificationArg_mtRoamingForwardingSupported = NULL(name='mtRoamingForwardingSupported', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SendIdentificationArg_newVLR_Number = OCT_STR(name='newVLR-Number', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SendIdentificationArg_new_lmsi = OCT_STR(name='new-lmsi', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')), opt=True)
    SendIdentificationArg._cont = ASN1Dict([
        ('tmsi', _SendIdentificationArg_tmsi),
        ('numberOfRequestedVectors', _SendIdentificationArg_numberOfRequestedVectors),
        ('segmentationProhibited', _SendIdentificationArg_segmentationProhibited),
        ('extensionContainer', _SendIdentificationArg_extensionContainer),
        ('msc-Number', _SendIdentificationArg_msc_Number),
        ('previous-LAI', _SendIdentificationArg_previous_LAI),
        ('hopCounter', _SendIdentificationArg_hopCounter),
        ('mtRoamingForwardingSupported', _SendIdentificationArg_mtRoamingForwardingSupported),
        ('newVLR-Number', _SendIdentificationArg_newVLR_Number),
        ('new-lmsi', _SendIdentificationArg_new_lmsi),
        ])
    SendIdentificationArg._ext = ['msc-Number', 'previous-LAI', 'hopCounter', 'mtRoamingForwardingSupported', 'newVLR-Number', 'new-lmsi']
    
    #-----< HopCounter >-----#
    HopCounter = INT(name='HopCounter', mode=MODE_TYPE)
    HopCounter._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    
    #-----< SendIdentificationRes >-----#
    SendIdentificationRes = SEQ(name='SendIdentificationRes', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SendIdentificationRes_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _SendIdentificationRes_authenticationSetList = CHOICE(name='authenticationSetList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AuthenticationSetList')), opt=True)
    _SendIdentificationRes_currentSecurityContext = CHOICE(name='currentSecurityContext', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CurrentSecurityContext')), opt=True)
    _SendIdentificationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SendIdentificationRes_lastUsedLtePLMN_Id = OCT_STR(name='lastUsedLtePLMN-Id', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')), opt=True)
    _SendIdentificationRes_mtCallPendingFlag = NULL(name='mtCallPendingFlag', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SendIdentificationRes._cont = ASN1Dict([
        ('imsi', _SendIdentificationRes_imsi),
        ('authenticationSetList', _SendIdentificationRes_authenticationSetList),
        ('currentSecurityContext', _SendIdentificationRes_currentSecurityContext),
        ('extensionContainer', _SendIdentificationRes_extensionContainer),
        ('lastUsedLtePLMN-Id', _SendIdentificationRes_lastUsedLtePLMN_Id),
        ('mtCallPendingFlag', _SendIdentificationRes_mtCallPendingFlag),
        ])
    SendIdentificationRes._ext = ['lastUsedLtePLMN-Id', 'mtCallPendingFlag']
    
    #-----< AuthenticationSetList >-----#
    AuthenticationSetList = CHOICE(name='AuthenticationSetList', mode=MODE_TYPE)
    _AuthenticationSetList_tripletList = SEQ_OF(name='tripletList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TripletList')))
    _AuthenticationSetList_quintupletList = SEQ_OF(name='quintupletList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'QuintupletList')))
    AuthenticationSetList._cont = ASN1Dict([
        ('tripletList', _AuthenticationSetList_tripletList),
        ('quintupletList', _AuthenticationSetList_quintupletList),
        ])
    AuthenticationSetList._ext = None
    
    #-----< TripletList >-----#
    TripletList = SEQ_OF(name='TripletList', mode=MODE_TYPE)
    _TripletList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AuthenticationTriplet')))
    TripletList._cont = _TripletList__item_
    TripletList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< QuintupletList >-----#
    QuintupletList = SEQ_OF(name='QuintupletList', mode=MODE_TYPE)
    _QuintupletList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AuthenticationQuintuplet')))
    QuintupletList._cont = _QuintupletList__item_
    QuintupletList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< AuthenticationTriplet >-----#
    AuthenticationTriplet = SEQ(name='AuthenticationTriplet', mode=MODE_TYPE)
    _AuthenticationTriplet_rand = OCT_STR(name='rand', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAND')))
    _AuthenticationTriplet_sres = OCT_STR(name='sres', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SRES')))
    _AuthenticationTriplet_kc = OCT_STR(name='kc', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Kc')))
    AuthenticationTriplet._cont = ASN1Dict([
        ('rand', _AuthenticationTriplet_rand),
        ('sres', _AuthenticationTriplet_sres),
        ('kc', _AuthenticationTriplet_kc),
        ])
    AuthenticationTriplet._ext = []
    
    #-----< AuthenticationQuintuplet >-----#
    AuthenticationQuintuplet = SEQ(name='AuthenticationQuintuplet', mode=MODE_TYPE)
    _AuthenticationQuintuplet_rand = OCT_STR(name='rand', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAND')))
    _AuthenticationQuintuplet_xres = OCT_STR(name='xres', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'XRES')))
    _AuthenticationQuintuplet_ck = OCT_STR(name='ck', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CK')))
    _AuthenticationQuintuplet_ik = OCT_STR(name='ik', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'IK')))
    _AuthenticationQuintuplet_autn = OCT_STR(name='autn', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AUTN')))
    AuthenticationQuintuplet._cont = ASN1Dict([
        ('rand', _AuthenticationQuintuplet_rand),
        ('xres', _AuthenticationQuintuplet_xres),
        ('ck', _AuthenticationQuintuplet_ck),
        ('ik', _AuthenticationQuintuplet_ik),
        ('autn', _AuthenticationQuintuplet_autn),
        ])
    AuthenticationQuintuplet._ext = []
    
    #-----< CurrentSecurityContext >-----#
    CurrentSecurityContext = CHOICE(name='CurrentSecurityContext', mode=MODE_TYPE)
    _CurrentSecurityContext_gsm_SecurityContextData = SEQ(name='gsm-SecurityContextData', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GSM-SecurityContextData')))
    _CurrentSecurityContext_umts_SecurityContextData = SEQ(name='umts-SecurityContextData', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UMTS-SecurityContextData')))
    CurrentSecurityContext._cont = ASN1Dict([
        ('gsm-SecurityContextData', _CurrentSecurityContext_gsm_SecurityContextData),
        ('umts-SecurityContextData', _CurrentSecurityContext_umts_SecurityContextData),
        ])
    CurrentSecurityContext._ext = None
    
    #-----< GSM-SecurityContextData >-----#
    GSM_SecurityContextData = SEQ(name='GSM-SecurityContextData', mode=MODE_TYPE)
    _GSM_SecurityContextData_kc = OCT_STR(name='kc', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Kc')))
    _GSM_SecurityContextData_cksn = OCT_STR(name='cksn', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Cksn')))
    GSM_SecurityContextData._cont = ASN1Dict([
        ('kc', _GSM_SecurityContextData_kc),
        ('cksn', _GSM_SecurityContextData_cksn),
        ])
    GSM_SecurityContextData._ext = []
    
    #-----< UMTS-SecurityContextData >-----#
    UMTS_SecurityContextData = SEQ(name='UMTS-SecurityContextData', mode=MODE_TYPE)
    _UMTS_SecurityContextData_ck = OCT_STR(name='ck', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CK')))
    _UMTS_SecurityContextData_ik = OCT_STR(name='ik', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'IK')))
    _UMTS_SecurityContextData_ksi = OCT_STR(name='ksi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'KSI')))
    UMTS_SecurityContextData._cont = ASN1Dict([
        ('ck', _UMTS_SecurityContextData_ck),
        ('ik', _UMTS_SecurityContextData_ik),
        ('ksi', _UMTS_SecurityContextData_ksi),
        ])
    UMTS_SecurityContextData._ext = []
    
    #-----< RAND >-----#
    RAND = OCT_STR(name='RAND', mode=MODE_TYPE)
    RAND._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< SRES >-----#
    SRES = OCT_STR(name='SRES', mode=MODE_TYPE)
    SRES._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< Kc >-----#
    Kc = OCT_STR(name='Kc', mode=MODE_TYPE)
    Kc._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< XRES >-----#
    XRES = OCT_STR(name='XRES', mode=MODE_TYPE)
    XRES._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=4, ub=16)], ev=None, er=[])
    
    #-----< CK >-----#
    CK = OCT_STR(name='CK', mode=MODE_TYPE)
    CK._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< IK >-----#
    IK = OCT_STR(name='IK', mode=MODE_TYPE)
    IK._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< AUTN >-----#
    AUTN = OCT_STR(name='AUTN', mode=MODE_TYPE)
    AUTN._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< AUTS >-----#
    AUTS = OCT_STR(name='AUTS', mode=MODE_TYPE)
    AUTS._const_sz = ASN1Set(rv=[14], rr=[], ev=None, er=[])
    
    #-----< Cksn >-----#
    Cksn = OCT_STR(name='Cksn', mode=MODE_TYPE)
    Cksn._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< KSI >-----#
    KSI = OCT_STR(name='KSI', mode=MODE_TYPE)
    KSI._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< AuthenticationFailureReportArg >-----#
    AuthenticationFailureReportArg = SEQ(name='AuthenticationFailureReportArg', mode=MODE_TYPE)
    _AuthenticationFailureReportArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _AuthenticationFailureReportArg_failureCause = ENUM(name='failureCause', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'FailureCause')))
    _AuthenticationFailureReportArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _AuthenticationFailureReportArg_re_attempt = BOOL(name='re-attempt', mode=MODE_TYPE, opt=True)
    _AuthenticationFailureReportArg_accessType = ENUM(name='accessType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AccessType')), opt=True)
    _AuthenticationFailureReportArg_rand = OCT_STR(name='rand', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAND')), opt=True)
    _AuthenticationFailureReportArg_vlr_Number = OCT_STR(name='vlr-Number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _AuthenticationFailureReportArg_sgsn_Number = OCT_STR(name='sgsn-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    AuthenticationFailureReportArg._cont = ASN1Dict([
        ('imsi', _AuthenticationFailureReportArg_imsi),
        ('failureCause', _AuthenticationFailureReportArg_failureCause),
        ('extensionContainer', _AuthenticationFailureReportArg_extensionContainer),
        ('re-attempt', _AuthenticationFailureReportArg_re_attempt),
        ('accessType', _AuthenticationFailureReportArg_accessType),
        ('rand', _AuthenticationFailureReportArg_rand),
        ('vlr-Number', _AuthenticationFailureReportArg_vlr_Number),
        ('sgsn-Number', _AuthenticationFailureReportArg_sgsn_Number),
        ])
    AuthenticationFailureReportArg._ext = ['re-attempt', 'accessType', 'rand', 'vlr-Number', 'sgsn-Number']
    
    #-----< AccessType >-----#
    AccessType = ENUM(name='AccessType', mode=MODE_TYPE)
    AccessType._cont = ASN1Dict([('call', 0), ('emergencyCall', 1), ('locationUpdating', 2), ('supplementaryService', 3), ('shortMessage', 4), ('gprsAttach', 5), ('routingAreaUpdating', 6), ('serviceRequest', 7), ('pdpContextActivation', 8), ('pdpContextDeactivation', 9), ('gprsDetach', 10)])
    AccessType._ext = ['gprsDetach']
    
    #-----< AuthenticationFailureReportRes >-----#
    AuthenticationFailureReportRes = SEQ(name='AuthenticationFailureReportRes', mode=MODE_TYPE)
    _AuthenticationFailureReportRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    AuthenticationFailureReportRes._cont = ASN1Dict([
        ('extensionContainer', _AuthenticationFailureReportRes_extensionContainer),
        ])
    AuthenticationFailureReportRes._ext = []
    
    #-----< FailureCause >-----#
    FailureCause = ENUM(name='FailureCause', mode=MODE_TYPE)
    FailureCause._cont = ASN1Dict([('wrongUserResponse', 0), ('wrongNetworkSignature', 1)])
    FailureCause._ext = None
    
    #-----< UpdateGprsLocationArg >-----#
    UpdateGprsLocationArg = SEQ(name='UpdateGprsLocationArg', mode=MODE_TYPE)
    _UpdateGprsLocationArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _UpdateGprsLocationArg_sgsn_Number = OCT_STR(name='sgsn-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _UpdateGprsLocationArg_sgsn_Address = OCT_STR(name='sgsn-Address', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')))
    _UpdateGprsLocationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _UpdateGprsLocationArg_sgsn_Capability = SEQ(name='sgsn-Capability', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SGSN-Capability')), opt=True)
    _UpdateGprsLocationArg_informPreviousNetworkEntity = NULL(name='informPreviousNetworkEntity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_ps_LCS_NotSupportedByUE = NULL(name='ps-LCS-NotSupportedByUE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_v_gmlc_Address = OCT_STR(name='v-gmlc-Address', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _UpdateGprsLocationArg_add_info = SEQ(name='add-info', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ADD-Info')), opt=True)
    _UpdateGprsLocationArg_eps_info = CHOICE(name='eps-info', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EPS-Info')), opt=True)
    _UpdateGprsLocationArg_servingNodeTypeIndicator = NULL(name='servingNodeTypeIndicator', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_skipSubscriberDataUpdate = NULL(name='skipSubscriberDataUpdate', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_usedRAT_Type = ENUM(name='usedRAT-Type', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Used-RAT-Type')), opt=True)
    _UpdateGprsLocationArg_gprsSubscriptionDataNotNeeded = NULL(name='gprsSubscriptionDataNotNeeded', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_nodeTypeIndicator = NULL(name='nodeTypeIndicator', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_areaRestricted = NULL(name='areaRestricted', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_ue_reachableIndicator = NULL(name='ue-reachableIndicator', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_epsSubscriptionDataNotNeeded = NULL(name='epsSubscriptionDataNotNeeded', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_ue_srvcc_Capability = ENUM(name='ue-srvcc-Capability', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UE-SRVCC-Capability')), opt=True)
    _UpdateGprsLocationArg_eplmn_List = SEQ_OF(name='eplmn-List', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EPLMN-List')), opt=True)
    _UpdateGprsLocationArg_mmeNumberforMTSMS = OCT_STR(name='mmeNumberforMTSMS', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _UpdateGprsLocationArg_smsRegisterRequest = ENUM(name='smsRegisterRequest', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMSRegisterRequest')), opt=True)
    _UpdateGprsLocationArg_sms_Only = NULL(name='sms-Only', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_removalofMMERegistrationforSMS = NULL(name='removalofMMERegistrationforSMS', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_sgsn_Name = OCT_STR(name='sgsn-Name', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')), opt=True)
    _UpdateGprsLocationArg_sgsn_Realm = OCT_STR(name='sgsn-Realm', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')), opt=True)
    _UpdateGprsLocationArg_lgd_supportIndicator = NULL(name='lgd-supportIndicator', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationArg_adjacentPLMN_List = SEQ_OF(name='adjacentPLMN-List', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdjacentPLMN-List')), opt=True)
    UpdateGprsLocationArg._cont = ASN1Dict([
        ('imsi', _UpdateGprsLocationArg_imsi),
        ('sgsn-Number', _UpdateGprsLocationArg_sgsn_Number),
        ('sgsn-Address', _UpdateGprsLocationArg_sgsn_Address),
        ('extensionContainer', _UpdateGprsLocationArg_extensionContainer),
        ('sgsn-Capability', _UpdateGprsLocationArg_sgsn_Capability),
        ('informPreviousNetworkEntity', _UpdateGprsLocationArg_informPreviousNetworkEntity),
        ('ps-LCS-NotSupportedByUE', _UpdateGprsLocationArg_ps_LCS_NotSupportedByUE),
        ('v-gmlc-Address', _UpdateGprsLocationArg_v_gmlc_Address),
        ('add-info', _UpdateGprsLocationArg_add_info),
        ('eps-info', _UpdateGprsLocationArg_eps_info),
        ('servingNodeTypeIndicator', _UpdateGprsLocationArg_servingNodeTypeIndicator),
        ('skipSubscriberDataUpdate', _UpdateGprsLocationArg_skipSubscriberDataUpdate),
        ('usedRAT-Type', _UpdateGprsLocationArg_usedRAT_Type),
        ('gprsSubscriptionDataNotNeeded', _UpdateGprsLocationArg_gprsSubscriptionDataNotNeeded),
        ('nodeTypeIndicator', _UpdateGprsLocationArg_nodeTypeIndicator),
        ('areaRestricted', _UpdateGprsLocationArg_areaRestricted),
        ('ue-reachableIndicator', _UpdateGprsLocationArg_ue_reachableIndicator),
        ('epsSubscriptionDataNotNeeded', _UpdateGprsLocationArg_epsSubscriptionDataNotNeeded),
        ('ue-srvcc-Capability', _UpdateGprsLocationArg_ue_srvcc_Capability),
        ('eplmn-List', _UpdateGprsLocationArg_eplmn_List),
        ('mmeNumberforMTSMS', _UpdateGprsLocationArg_mmeNumberforMTSMS),
        ('smsRegisterRequest', _UpdateGprsLocationArg_smsRegisterRequest),
        ('sms-Only', _UpdateGprsLocationArg_sms_Only),
        ('removalofMMERegistrationforSMS', _UpdateGprsLocationArg_removalofMMERegistrationforSMS),
        ('sgsn-Name', _UpdateGprsLocationArg_sgsn_Name),
        ('sgsn-Realm', _UpdateGprsLocationArg_sgsn_Realm),
        ('lgd-supportIndicator', _UpdateGprsLocationArg_lgd_supportIndicator),
        ('adjacentPLMN-List', _UpdateGprsLocationArg_adjacentPLMN_List),
        ])
    UpdateGprsLocationArg._ext = ['sgsn-Capability', 'informPreviousNetworkEntity', 'ps-LCS-NotSupportedByUE', 'v-gmlc-Address', 'add-info', 'eps-info', 'servingNodeTypeIndicator', 'skipSubscriberDataUpdate', 'usedRAT-Type', 'gprsSubscriptionDataNotNeeded', 'nodeTypeIndicator', 'areaRestricted', 'ue-reachableIndicator', 'epsSubscriptionDataNotNeeded', 'ue-srvcc-Capability', 'eplmn-List', 'mmeNumberforMTSMS', 'smsRegisterRequest', 'sms-Only', 'removalofMMERegistrationforSMS', 'sgsn-Name', 'sgsn-Realm', 'lgd-supportIndicator', 'adjacentPLMN-List']
    
    #-----< SMSRegisterRequest >-----#
    SMSRegisterRequest = ENUM(name='SMSRegisterRequest', mode=MODE_TYPE)
    SMSRegisterRequest._cont = ASN1Dict([('sms-registration-required', 0), ('sms-registration-not-preferred', 1), ('no-preference', 2)])
    SMSRegisterRequest._ext = []
    
    #-----< Used-RAT-Type >-----#
    Used_RAT_Type = ENUM(name='Used-RAT-Type', mode=MODE_TYPE)
    Used_RAT_Type._cont = ASN1Dict([('utran', 0), ('geran', 1), ('gan', 2), ('i-hspa-evolution', 3), ('e-utran', 4)])
    Used_RAT_Type._ext = []
    
    #-----< EPS-Info >-----#
    EPS_Info = CHOICE(name='EPS-Info', mode=MODE_TYPE)
    _EPS_Info_pdn_gw_update = SEQ(name='pdn-gw-update', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDN-GW-Update')))
    _EPS_Info_isr_Information = BIT_STR(name='isr-Information', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ISR-Information')))
    EPS_Info._cont = ASN1Dict([
        ('pdn-gw-update', _EPS_Info_pdn_gw_update),
        ('isr-Information', _EPS_Info_isr_Information),
        ])
    EPS_Info._ext = None
    
    #-----< PDN-GW-Update >-----#
    PDN_GW_Update = SEQ(name='PDN-GW-Update', mode=MODE_TYPE)
    _PDN_GW_Update_apn = OCT_STR(name='apn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN')), opt=True)
    _PDN_GW_Update_pdn_gw_Identity = SEQ(name='pdn-gw-Identity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDN-GW-Identity')), opt=True)
    _PDN_GW_Update_contextId = INT(name='contextId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ContextId')), opt=True)
    _PDN_GW_Update_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    PDN_GW_Update._cont = ASN1Dict([
        ('apn', _PDN_GW_Update_apn),
        ('pdn-gw-Identity', _PDN_GW_Update_pdn_gw_Identity),
        ('contextId', _PDN_GW_Update_contextId),
        ('extensionContainer', _PDN_GW_Update_extensionContainer),
        ])
    PDN_GW_Update._ext = []
    
    #-----< ISR-Information >-----#
    ISR_Information = BIT_STR(name='ISR-Information', mode=MODE_TYPE)
    ISR_Information._cont = ASN1Dict([('updateLocation', 0), ('cancelSGSN', 1), ('initialAttachIndicator', 2)])
    ISR_Information._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    
    #-----< SGSN-Capability >-----#
    SGSN_Capability = SEQ(name='SGSN-Capability', mode=MODE_TYPE)
    _SGSN_Capability_solsaSupportIndicator = NULL(name='solsaSupportIndicator', mode=MODE_TYPE, opt=True)
    _SGSN_Capability_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SGSN_Capability_superChargerSupportedInServingNetworkEntity = CHOICE(name='superChargerSupportedInServingNetworkEntity', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SuperChargerInfo')), opt=True)
    _SGSN_Capability_gprsEnhancementsSupportIndicator = NULL(name='gprsEnhancementsSupportIndicator', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SGSN_Capability_supportedCamelPhases = BIT_STR(name='supportedCamelPhases', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedCamelPhases')), opt=True)
    _SGSN_Capability_supportedLCS_CapabilitySets = BIT_STR(name='supportedLCS-CapabilitySets', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedLCS-CapabilitySets')), opt=True)
    _SGSN_Capability_offeredCamel4CSIs = BIT_STR(name='offeredCamel4CSIs', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'OfferedCamel4CSIs')), opt=True)
    _SGSN_Capability_smsCallBarringSupportIndicator = NULL(name='smsCallBarringSupportIndicator', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SGSN_Capability_supportedRAT_TypesIndicator = BIT_STR(name='supportedRAT-TypesIndicator', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedRAT-Types')), opt=True)
    _SGSN_Capability_supportedFeatures = BIT_STR(name='supportedFeatures', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedFeatures')), opt=True)
    _SGSN_Capability_t_adsDataRetrieval = NULL(name='t-adsDataRetrieval', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SGSN_Capability_homogeneousSupportOfIMSVoiceOverPSSessions = BOOL(name='homogeneousSupportOfIMSVoiceOverPSSessions', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SGSN_Capability_cancellationTypeInitialAttach = NULL(name='cancellationTypeInitialAttach', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SGSN_Capability_msisdn_lessOperation_Supported = NULL(name='msisdn-lessOperation-Supported', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SGSN_Capability_updateofHomogeneousSupportOfIMSVoiceOverPSSessions = NULL(name='updateofHomogeneousSupportOfIMSVoiceOverPSSessions', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SGSN_Capability._cont = ASN1Dict([
        ('solsaSupportIndicator', _SGSN_Capability_solsaSupportIndicator),
        ('extensionContainer', _SGSN_Capability_extensionContainer),
        ('superChargerSupportedInServingNetworkEntity', _SGSN_Capability_superChargerSupportedInServingNetworkEntity),
        ('gprsEnhancementsSupportIndicator', _SGSN_Capability_gprsEnhancementsSupportIndicator),
        ('supportedCamelPhases', _SGSN_Capability_supportedCamelPhases),
        ('supportedLCS-CapabilitySets', _SGSN_Capability_supportedLCS_CapabilitySets),
        ('offeredCamel4CSIs', _SGSN_Capability_offeredCamel4CSIs),
        ('smsCallBarringSupportIndicator', _SGSN_Capability_smsCallBarringSupportIndicator),
        ('supportedRAT-TypesIndicator', _SGSN_Capability_supportedRAT_TypesIndicator),
        ('supportedFeatures', _SGSN_Capability_supportedFeatures),
        ('t-adsDataRetrieval', _SGSN_Capability_t_adsDataRetrieval),
        ('homogeneousSupportOfIMSVoiceOverPSSessions', _SGSN_Capability_homogeneousSupportOfIMSVoiceOverPSSessions),
        ('cancellationTypeInitialAttach', _SGSN_Capability_cancellationTypeInitialAttach),
        ('msisdn-lessOperation-Supported', _SGSN_Capability_msisdn_lessOperation_Supported),
        ('updateofHomogeneousSupportOfIMSVoiceOverPSSessions', _SGSN_Capability_updateofHomogeneousSupportOfIMSVoiceOverPSSessions),
        ])
    SGSN_Capability._ext = ['superChargerSupportedInServingNetworkEntity', 'gprsEnhancementsSupportIndicator', 'supportedCamelPhases', 'supportedLCS-CapabilitySets', 'offeredCamel4CSIs', 'smsCallBarringSupportIndicator', 'supportedRAT-TypesIndicator', 'supportedFeatures', 't-adsDataRetrieval', 'homogeneousSupportOfIMSVoiceOverPSSessions', 'cancellationTypeInitialAttach', 'msisdn-lessOperation-Supported', 'updateofHomogeneousSupportOfIMSVoiceOverPSSessions']
    
    #-----< SupportedFeatures >-----#
    SupportedFeatures = BIT_STR(name='SupportedFeatures', mode=MODE_TYPE)
    SupportedFeatures._cont = ASN1Dict([('odb-all-apn', 0), ('odb-HPLMN-APN', 1), ('odb-VPLMN-APN', 2), ('odb-all-og', 3), ('odb-all-international-og', 4), ('odb-all-int-og-not-to-HPLMN-country', 5), ('odb-all-interzonal-og', 6), ('odb-all-interzonal-og-not-to-HPLMN-country', 7), ('odb-all-interzonal-og-and-internat-og-not-to-HPLMN-country', 8), ('regSub', 9), ('trace', 10), ('lcs-all-PrivExcep', 11), ('lcs-universal', 12), ('lcs-CallSessionRelated', 13), ('lcs-CallSessionUnrelated', 14), ('lcs-PLMN-operator', 15), ('lcs-ServiceType', 16), ('lcs-all-MOLR-SS', 17), ('lcs-basicSelfLocation', 18), ('lcs-autonomousSelfLocation', 19), ('lcs-transferToThirdParty', 20), ('sm-mo-pp', 21), ('barring-OutgoingCalls', 22), ('baoc', 23), ('boic', 24), ('boicExHC', 25), ('localTimeZoneRetrieval', 26), ('additionalMsisdn', 27), ('smsInMME', 28), ('smsInSGSN', 29), ('ue-Reachability-Notification', 30), ('state-Location-Information-Retrieval', 31), ('partialPurge', 32), ('gddInSGSN', 33), ('sgsnCAMELCapability', 34), ('pcscf-Restoration', 35), ('dedicatedCoreNetworks', 36), ('non-IP-PDN-Type-APNs', 37)])
    SupportedFeatures._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=26, ub=40)], ev=None, er=[])
    
    #-----< UE-SRVCC-Capability >-----#
    UE_SRVCC_Capability = ENUM(name='UE-SRVCC-Capability', mode=MODE_TYPE)
    UE_SRVCC_Capability._cont = ASN1Dict([('ue-srvcc-not-supported', 0), ('ue-srvcc-supported', 1)])
    UE_SRVCC_Capability._ext = []
    
    #-----< UpdateGprsLocationRes >-----#
    UpdateGprsLocationRes = SEQ(name='UpdateGprsLocationRes', mode=MODE_TYPE)
    _UpdateGprsLocationRes_hlr_Number = OCT_STR(name='hlr-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _UpdateGprsLocationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _UpdateGprsLocationRes_add_Capability = NULL(name='add-Capability', mode=MODE_TYPE, opt=True)
    _UpdateGprsLocationRes_sgsn_mmeSeparationSupported = NULL(name='sgsn-mmeSeparationSupported', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateGprsLocationRes_mmeRegisteredforSMS = NULL(name='mmeRegisteredforSMS', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    UpdateGprsLocationRes._cont = ASN1Dict([
        ('hlr-Number', _UpdateGprsLocationRes_hlr_Number),
        ('extensionContainer', _UpdateGprsLocationRes_extensionContainer),
        ('add-Capability', _UpdateGprsLocationRes_add_Capability),
        ('sgsn-mmeSeparationSupported', _UpdateGprsLocationRes_sgsn_mmeSeparationSupported),
        ('mmeRegisteredforSMS', _UpdateGprsLocationRes_mmeRegisteredforSMS),
        ])
    UpdateGprsLocationRes._ext = ['add-Capability', 'sgsn-mmeSeparationSupported', 'mmeRegisteredforSMS']
    
    #-----< EPLMN-List >-----#
    EPLMN_List = SEQ_OF(name='EPLMN-List', mode=MODE_TYPE)
    _EPLMN_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')))
    EPLMN_List._cont = _EPLMN_List__item_
    EPLMN_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< AdjacentPLMN-List >-----#
    AdjacentPLMN_List = SEQ_OF(name='AdjacentPLMN-List', mode=MODE_TYPE)
    _AdjacentPLMN_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')))
    AdjacentPLMN_List._cont = _AdjacentPLMN_List__item_
    AdjacentPLMN_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< ForwardAccessSignalling-Arg >-----#
    ForwardAccessSignalling_Arg = SEQ(name='ForwardAccessSignalling-Arg', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ForwardAccessSignalling_Arg_an_APDU = SEQ(name='an-APDU', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AccessNetworkSignalInfo')))
    _ForwardAccessSignalling_Arg_integrityProtectionInfo = OCT_STR(name='integrityProtectionInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'IntegrityProtectionInformation')), opt=True)
    _ForwardAccessSignalling_Arg_encryptionInfo = OCT_STR(name='encryptionInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EncryptionInformation')), opt=True)
    _ForwardAccessSignalling_Arg_keyStatus = ENUM(name='keyStatus', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'KeyStatus')), opt=True)
    _ForwardAccessSignalling_Arg_allowedGSM_Algorithms = OCT_STR(name='allowedGSM-Algorithms', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AllowedGSM-Algorithms')), opt=True)
    _ForwardAccessSignalling_Arg_allowedUMTS_Algorithms = SEQ(name='allowedUMTS-Algorithms', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AllowedUMTS-Algorithms')), opt=True)
    _ForwardAccessSignalling_Arg_radioResourceInformation = OCT_STR(name='radioResourceInformation', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RadioResourceInformation')), opt=True)
    _ForwardAccessSignalling_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ForwardAccessSignalling_Arg_radioResourceList = SEQ_OF(name='radioResourceList', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RadioResourceList')), opt=True)
    _ForwardAccessSignalling_Arg_bssmap_ServiceHandover = OCT_STR(name='bssmap-ServiceHandover', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BSSMAP-ServiceHandover')), opt=True)
    _ForwardAccessSignalling_Arg_ranap_ServiceHandover = OCT_STR(name='ranap-ServiceHandover', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RANAP-ServiceHandover')), opt=True)
    _ForwardAccessSignalling_Arg_bssmap_ServiceHandoverList = SEQ_OF(name='bssmap-ServiceHandoverList', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BSSMAP-ServiceHandoverList')), opt=True)
    _ForwardAccessSignalling_Arg_currentlyUsedCodec = OCT_STR(name='currentlyUsedCodec', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _ForwardAccessSignalling_Arg_iuSupportedCodecsList = SEQ(name='iuSupportedCodecsList', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedCodecsList')), opt=True)
    _ForwardAccessSignalling_Arg_rab_ConfigurationIndicator = NULL(name='rab-ConfigurationIndicator', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ForwardAccessSignalling_Arg_iuSelectedCodec = OCT_STR(name='iuSelectedCodec', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _ForwardAccessSignalling_Arg_alternativeChannelType = OCT_STR(name='alternativeChannelType', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RadioResourceInformation')), opt=True)
    _ForwardAccessSignalling_Arg_tracePropagationList = SEQ(name='tracePropagationList', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TracePropagationList')), opt=True)
    _ForwardAccessSignalling_Arg_aoipSupportedCodecsListAnchor = SEQ(name='aoipSupportedCodecsListAnchor', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodecsList')), opt=True)
    _ForwardAccessSignalling_Arg_aoipSelectedCodecTarget = OCT_STR(name='aoipSelectedCodecTarget', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _ForwardAccessSignalling_Arg_uesbi_Iu = SEQ(name='uesbi-Iu', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UESBI-Iu')), opt=True)
    _ForwardAccessSignalling_Arg_imeisv = OCT_STR(name='imeisv', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMEI')), opt=True)
    ForwardAccessSignalling_Arg._cont = ASN1Dict([
        ('an-APDU', _ForwardAccessSignalling_Arg_an_APDU),
        ('integrityProtectionInfo', _ForwardAccessSignalling_Arg_integrityProtectionInfo),
        ('encryptionInfo', _ForwardAccessSignalling_Arg_encryptionInfo),
        ('keyStatus', _ForwardAccessSignalling_Arg_keyStatus),
        ('allowedGSM-Algorithms', _ForwardAccessSignalling_Arg_allowedGSM_Algorithms),
        ('allowedUMTS-Algorithms', _ForwardAccessSignalling_Arg_allowedUMTS_Algorithms),
        ('radioResourceInformation', _ForwardAccessSignalling_Arg_radioResourceInformation),
        ('extensionContainer', _ForwardAccessSignalling_Arg_extensionContainer),
        ('radioResourceList', _ForwardAccessSignalling_Arg_radioResourceList),
        ('bssmap-ServiceHandover', _ForwardAccessSignalling_Arg_bssmap_ServiceHandover),
        ('ranap-ServiceHandover', _ForwardAccessSignalling_Arg_ranap_ServiceHandover),
        ('bssmap-ServiceHandoverList', _ForwardAccessSignalling_Arg_bssmap_ServiceHandoverList),
        ('currentlyUsedCodec', _ForwardAccessSignalling_Arg_currentlyUsedCodec),
        ('iuSupportedCodecsList', _ForwardAccessSignalling_Arg_iuSupportedCodecsList),
        ('rab-ConfigurationIndicator', _ForwardAccessSignalling_Arg_rab_ConfigurationIndicator),
        ('iuSelectedCodec', _ForwardAccessSignalling_Arg_iuSelectedCodec),
        ('alternativeChannelType', _ForwardAccessSignalling_Arg_alternativeChannelType),
        ('tracePropagationList', _ForwardAccessSignalling_Arg_tracePropagationList),
        ('aoipSupportedCodecsListAnchor', _ForwardAccessSignalling_Arg_aoipSupportedCodecsListAnchor),
        ('aoipSelectedCodecTarget', _ForwardAccessSignalling_Arg_aoipSelectedCodecTarget),
        ('uesbi-Iu', _ForwardAccessSignalling_Arg_uesbi_Iu),
        ('imeisv', _ForwardAccessSignalling_Arg_imeisv),
        ])
    ForwardAccessSignalling_Arg._ext = ['radioResourceList', 'bssmap-ServiceHandover', 'ranap-ServiceHandover', 'bssmap-ServiceHandoverList', 'currentlyUsedCodec', 'iuSupportedCodecsList', 'rab-ConfigurationIndicator', 'iuSelectedCodec', 'alternativeChannelType', 'tracePropagationList', 'aoipSupportedCodecsListAnchor', 'aoipSelectedCodecTarget', 'uesbi-Iu', 'imeisv']
    
    #-----< AllowedGSM-Algorithms >-----#
    AllowedGSM_Algorithms = OCT_STR(name='AllowedGSM-Algorithms', mode=MODE_TYPE)
    AllowedGSM_Algorithms._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< AllowedUMTS-Algorithms >-----#
    AllowedUMTS_Algorithms = SEQ(name='AllowedUMTS-Algorithms', mode=MODE_TYPE)
    _AllowedUMTS_Algorithms_integrityProtectionAlgorithms = OCT_STR(name='integrityProtectionAlgorithms', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PermittedIntegrityProtectionAlgorithms')), opt=True)
    _AllowedUMTS_Algorithms_encryptionAlgorithms = OCT_STR(name='encryptionAlgorithms', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PermittedEncryptionAlgorithms')), opt=True)
    _AllowedUMTS_Algorithms_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    AllowedUMTS_Algorithms._cont = ASN1Dict([
        ('integrityProtectionAlgorithms', _AllowedUMTS_Algorithms_integrityProtectionAlgorithms),
        ('encryptionAlgorithms', _AllowedUMTS_Algorithms_encryptionAlgorithms),
        ('extensionContainer', _AllowedUMTS_Algorithms_extensionContainer),
        ])
    AllowedUMTS_Algorithms._ext = []
    
    #-----< PermittedIntegrityProtectionAlgorithms >-----#
    PermittedIntegrityProtectionAlgorithms = OCT_STR(name='PermittedIntegrityProtectionAlgorithms', mode=MODE_TYPE)
    PermittedIntegrityProtectionAlgorithms._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    
    #-----< maxPermittedIntegrityProtectionAlgorithmsLength >-----#
    maxPermittedIntegrityProtectionAlgorithmsLength = INT(name='maxPermittedIntegrityProtectionAlgorithmsLength', mode=MODE_VALUE)
    maxPermittedIntegrityProtectionAlgorithmsLength._val = 9
    
    #-----< PermittedEncryptionAlgorithms >-----#
    PermittedEncryptionAlgorithms = OCT_STR(name='PermittedEncryptionAlgorithms', mode=MODE_TYPE)
    PermittedEncryptionAlgorithms._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    
    #-----< maxPermittedEncryptionAlgorithmsLength >-----#
    maxPermittedEncryptionAlgorithmsLength = INT(name='maxPermittedEncryptionAlgorithmsLength', mode=MODE_VALUE)
    maxPermittedEncryptionAlgorithmsLength._val = 9
    
    #-----< KeyStatus >-----#
    KeyStatus = ENUM(name='KeyStatus', mode=MODE_TYPE)
    KeyStatus._cont = ASN1Dict([('old', 0), ('new', 1)])
    KeyStatus._ext = []
    
    #-----< PrepareHO-Arg >-----#
    PrepareHO_Arg = SEQ(name='PrepareHO-Arg', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PrepareHO_Arg_targetCellId = OCT_STR(name='targetCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GlobalCellId')), opt=True)
    _PrepareHO_Arg_ho_NumberNotRequired = NULL(name='ho-NumberNotRequired', mode=MODE_TYPE, opt=True)
    _PrepareHO_Arg_targetRNCId = OCT_STR(name='targetRNCId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RNCId')), opt=True)
    _PrepareHO_Arg_an_APDU = SEQ(name='an-APDU', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AccessNetworkSignalInfo')), opt=True)
    _PrepareHO_Arg_multipleBearerRequested = NULL(name='multipleBearerRequested', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PrepareHO_Arg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _PrepareHO_Arg_integrityProtectionInfo = OCT_STR(name='integrityProtectionInfo', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'IntegrityProtectionInformation')), opt=True)
    _PrepareHO_Arg_encryptionInfo = OCT_STR(name='encryptionInfo', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EncryptionInformation')), opt=True)
    _PrepareHO_Arg_radioResourceInformation = OCT_STR(name='radioResourceInformation', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RadioResourceInformation')), opt=True)
    _PrepareHO_Arg_allowedGSM_Algorithms = OCT_STR(name='allowedGSM-Algorithms', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AllowedGSM-Algorithms')), opt=True)
    _PrepareHO_Arg_allowedUMTS_Algorithms = SEQ(name='allowedUMTS-Algorithms', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AllowedUMTS-Algorithms')), opt=True)
    _PrepareHO_Arg_radioResourceList = SEQ_OF(name='radioResourceList', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RadioResourceList')), opt=True)
    _PrepareHO_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _PrepareHO_Arg_rab_Id = INT(name='rab-Id', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAB-Id')), opt=True)
    _PrepareHO_Arg_bssmap_ServiceHandover = OCT_STR(name='bssmap-ServiceHandover', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BSSMAP-ServiceHandover')), opt=True)
    _PrepareHO_Arg_ranap_ServiceHandover = OCT_STR(name='ranap-ServiceHandover', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RANAP-ServiceHandover')), opt=True)
    _PrepareHO_Arg_bssmap_ServiceHandoverList = SEQ_OF(name='bssmap-ServiceHandoverList', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BSSMAP-ServiceHandoverList')), opt=True)
    _PrepareHO_Arg_asciCallReference = OCT_STR(name='asciCallReference', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ASCI-CallReference')), opt=True)
    _PrepareHO_Arg_geran_classmark = OCT_STR(name='geran-classmark', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GERAN-Classmark')), opt=True)
    _PrepareHO_Arg_iuCurrentlyUsedCodec = OCT_STR(name='iuCurrentlyUsedCodec', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _PrepareHO_Arg_iuSupportedCodecsList = SEQ(name='iuSupportedCodecsList', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedCodecsList')), opt=True)
    _PrepareHO_Arg_rab_ConfigurationIndicator = NULL(name='rab-ConfigurationIndicator', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PrepareHO_Arg_uesbi_Iu = SEQ(name='uesbi-Iu', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UESBI-Iu')), opt=True)
    _PrepareHO_Arg_imeisv = OCT_STR(name='imeisv', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMEI')), opt=True)
    _PrepareHO_Arg_alternativeChannelType = OCT_STR(name='alternativeChannelType', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RadioResourceInformation')), opt=True)
    _PrepareHO_Arg_tracePropagationList = SEQ(name='tracePropagationList', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TracePropagationList')), opt=True)
    _PrepareHO_Arg_aoipSupportedCodecsListAnchor = SEQ(name='aoipSupportedCodecsListAnchor', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodecsList')), opt=True)
    _PrepareHO_Arg_regionalSubscriptionData = SEQ_OF(name='regionalSubscriptionData', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ZoneCodeList')), opt=True)
    _PrepareHO_Arg_lclsGlobalCallReference = OCT_STR(name='lclsGlobalCallReference', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LCLS-GlobalCallReference')), opt=True)
    _PrepareHO_Arg_lcls_Negotiation = BIT_STR(name='lcls-Negotiation', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LCLS-Negotiation')), opt=True)
    _PrepareHO_Arg_lcls_Configuration_Preference = BIT_STR(name='lcls-Configuration-Preference', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LCLS-ConfigurationPreference')), opt=True)
    _PrepareHO_Arg_csg_SubscriptionDataList = SEQ_OF(name='csg-SubscriptionDataList', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CSG-SubscriptionDataList')), opt=True)
    PrepareHO_Arg._cont = ASN1Dict([
        ('targetCellId', _PrepareHO_Arg_targetCellId),
        ('ho-NumberNotRequired', _PrepareHO_Arg_ho_NumberNotRequired),
        ('targetRNCId', _PrepareHO_Arg_targetRNCId),
        ('an-APDU', _PrepareHO_Arg_an_APDU),
        ('multipleBearerRequested', _PrepareHO_Arg_multipleBearerRequested),
        ('imsi', _PrepareHO_Arg_imsi),
        ('integrityProtectionInfo', _PrepareHO_Arg_integrityProtectionInfo),
        ('encryptionInfo', _PrepareHO_Arg_encryptionInfo),
        ('radioResourceInformation', _PrepareHO_Arg_radioResourceInformation),
        ('allowedGSM-Algorithms', _PrepareHO_Arg_allowedGSM_Algorithms),
        ('allowedUMTS-Algorithms', _PrepareHO_Arg_allowedUMTS_Algorithms),
        ('radioResourceList', _PrepareHO_Arg_radioResourceList),
        ('extensionContainer', _PrepareHO_Arg_extensionContainer),
        ('rab-Id', _PrepareHO_Arg_rab_Id),
        ('bssmap-ServiceHandover', _PrepareHO_Arg_bssmap_ServiceHandover),
        ('ranap-ServiceHandover', _PrepareHO_Arg_ranap_ServiceHandover),
        ('bssmap-ServiceHandoverList', _PrepareHO_Arg_bssmap_ServiceHandoverList),
        ('asciCallReference', _PrepareHO_Arg_asciCallReference),
        ('geran-classmark', _PrepareHO_Arg_geran_classmark),
        ('iuCurrentlyUsedCodec', _PrepareHO_Arg_iuCurrentlyUsedCodec),
        ('iuSupportedCodecsList', _PrepareHO_Arg_iuSupportedCodecsList),
        ('rab-ConfigurationIndicator', _PrepareHO_Arg_rab_ConfigurationIndicator),
        ('uesbi-Iu', _PrepareHO_Arg_uesbi_Iu),
        ('imeisv', _PrepareHO_Arg_imeisv),
        ('alternativeChannelType', _PrepareHO_Arg_alternativeChannelType),
        ('tracePropagationList', _PrepareHO_Arg_tracePropagationList),
        ('aoipSupportedCodecsListAnchor', _PrepareHO_Arg_aoipSupportedCodecsListAnchor),
        ('regionalSubscriptionData', _PrepareHO_Arg_regionalSubscriptionData),
        ('lclsGlobalCallReference', _PrepareHO_Arg_lclsGlobalCallReference),
        ('lcls-Negotiation', _PrepareHO_Arg_lcls_Negotiation),
        ('lcls-Configuration-Preference', _PrepareHO_Arg_lcls_Configuration_Preference),
        ('csg-SubscriptionDataList', _PrepareHO_Arg_csg_SubscriptionDataList),
        ])
    PrepareHO_Arg._ext = ['rab-Id', 'bssmap-ServiceHandover', 'ranap-ServiceHandover', 'bssmap-ServiceHandoverList', 'asciCallReference', 'geran-classmark', 'iuCurrentlyUsedCodec', 'iuSupportedCodecsList', 'rab-ConfigurationIndicator', 'uesbi-Iu', 'imeisv', 'alternativeChannelType', 'tracePropagationList', 'aoipSupportedCodecsListAnchor', 'regionalSubscriptionData', 'lclsGlobalCallReference', 'lcls-Negotiation', 'lcls-Configuration-Preference', 'csg-SubscriptionDataList']
    
    #-----< LCLS-GlobalCallReference >-----#
    LCLS_GlobalCallReference = OCT_STR(name='LCLS-GlobalCallReference', mode=MODE_TYPE)
    LCLS_GlobalCallReference._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=13, ub=15)], ev=None, er=[])
    
    #-----< LCLS-Negotiation >-----#
    LCLS_Negotiation = BIT_STR(name='LCLS-Negotiation', mode=MODE_TYPE)
    LCLS_Negotiation._cont = ASN1Dict([('permission-indicator-not-allowed-bit', 0), ('permission-indicator-spare-bit', 1)])
    LCLS_Negotiation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=8)], ev=None, er=[])
    
    #-----< LCLS-ConfigurationPreference >-----#
    LCLS_ConfigurationPreference = BIT_STR(name='LCLS-ConfigurationPreference', mode=MODE_TYPE)
    LCLS_ConfigurationPreference._cont = ASN1Dict([('forward-data-sending-indicator', 0), ('backward-data-sending-indicator', 1), ('forward-data-reception-indicator', 2), ('backward-data-reception-indicator', 3)])
    LCLS_ConfigurationPreference._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=4, ub=8)], ev=None, er=[])
    
    #-----< BSSMAP-ServiceHandoverList >-----#
    BSSMAP_ServiceHandoverList = SEQ_OF(name='BSSMAP-ServiceHandoverList', mode=MODE_TYPE)
    _BSSMAP_ServiceHandoverList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'BSSMAP-ServiceHandoverInfo')))
    BSSMAP_ServiceHandoverList._cont = _BSSMAP_ServiceHandoverList__item_
    BSSMAP_ServiceHandoverList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=7)], ev=None, er=[])
    
    #-----< BSSMAP-ServiceHandoverInfo >-----#
    BSSMAP_ServiceHandoverInfo = SEQ(name='BSSMAP-ServiceHandoverInfo', mode=MODE_TYPE)
    _BSSMAP_ServiceHandoverInfo_bssmap_ServiceHandover = OCT_STR(name='bssmap-ServiceHandover', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'BSSMAP-ServiceHandover')))
    _BSSMAP_ServiceHandoverInfo_rab_Id = INT(name='rab-Id', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAB-Id')))
    BSSMAP_ServiceHandoverInfo._cont = ASN1Dict([
        ('bssmap-ServiceHandover', _BSSMAP_ServiceHandoverInfo_bssmap_ServiceHandover),
        ('rab-Id', _BSSMAP_ServiceHandoverInfo_rab_Id),
        ])
    BSSMAP_ServiceHandoverInfo._ext = []
    
    #-----< maxNumOfServiceHandovers >-----#
    maxNumOfServiceHandovers = INT(name='maxNumOfServiceHandovers', mode=MODE_VALUE)
    maxNumOfServiceHandovers._val = 7
    
    #-----< BSSMAP-ServiceHandover >-----#
    BSSMAP_ServiceHandover = OCT_STR(name='BSSMAP-ServiceHandover', mode=MODE_TYPE)
    BSSMAP_ServiceHandover._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< RANAP-ServiceHandover >-----#
    RANAP_ServiceHandover = OCT_STR(name='RANAP-ServiceHandover', mode=MODE_TYPE)
    RANAP_ServiceHandover._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< RadioResourceList >-----#
    RadioResourceList = SEQ_OF(name='RadioResourceList', mode=MODE_TYPE)
    _RadioResourceList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RadioResource')))
    RadioResourceList._cont = _RadioResourceList__item_
    RadioResourceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=7)], ev=None, er=[])
    
    #-----< RadioResource >-----#
    RadioResource = SEQ(name='RadioResource', mode=MODE_TYPE)
    _RadioResource_radioResourceInformation = OCT_STR(name='radioResourceInformation', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RadioResourceInformation')))
    _RadioResource_rab_Id = INT(name='rab-Id', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAB-Id')))
    RadioResource._cont = ASN1Dict([
        ('radioResourceInformation', _RadioResource_radioResourceInformation),
        ('rab-Id', _RadioResource_rab_Id),
        ])
    RadioResource._ext = []
    
    #-----< maxNumOfRadioResources >-----#
    maxNumOfRadioResources = INT(name='maxNumOfRadioResources', mode=MODE_VALUE)
    maxNumOfRadioResources._val = 7
    
    #-----< PrepareHO-Res >-----#
    PrepareHO_Res = SEQ(name='PrepareHO-Res', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PrepareHO_Res_handoverNumber = OCT_STR(name='handoverNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _PrepareHO_Res_relocationNumberList = SEQ_OF(name='relocationNumberList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RelocationNumberList')), opt=True)
    _PrepareHO_Res_an_APDU = SEQ(name='an-APDU', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AccessNetworkSignalInfo')), opt=True)
    _PrepareHO_Res_multicallBearerInfo = INT(name='multicallBearerInfo', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MulticallBearerInfo')), opt=True)
    _PrepareHO_Res_multipleBearerNotSupported = NULL(name='multipleBearerNotSupported', mode=MODE_TYPE, opt=True)
    _PrepareHO_Res_selectedUMTS_Algorithms = SEQ(name='selectedUMTS-Algorithms', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SelectedUMTS-Algorithms')), opt=True)
    _PrepareHO_Res_chosenRadioResourceInformation = SEQ(name='chosenRadioResourceInformation', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChosenRadioResourceInformation')), opt=True)
    _PrepareHO_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _PrepareHO_Res_iuSelectedCodec = OCT_STR(name='iuSelectedCodec', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _PrepareHO_Res_iuAvailableCodecsList = SEQ(name='iuAvailableCodecsList', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CodecList')), opt=True)
    _PrepareHO_Res_aoipSelectedCodecTarget = OCT_STR(name='aoipSelectedCodecTarget', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _PrepareHO_Res_aoipAvailableCodecsListMap = SEQ(name='aoipAvailableCodecsListMap', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodecsList')), opt=True)
    PrepareHO_Res._cont = ASN1Dict([
        ('handoverNumber', _PrepareHO_Res_handoverNumber),
        ('relocationNumberList', _PrepareHO_Res_relocationNumberList),
        ('an-APDU', _PrepareHO_Res_an_APDU),
        ('multicallBearerInfo', _PrepareHO_Res_multicallBearerInfo),
        ('multipleBearerNotSupported', _PrepareHO_Res_multipleBearerNotSupported),
        ('selectedUMTS-Algorithms', _PrepareHO_Res_selectedUMTS_Algorithms),
        ('chosenRadioResourceInformation', _PrepareHO_Res_chosenRadioResourceInformation),
        ('extensionContainer', _PrepareHO_Res_extensionContainer),
        ('iuSelectedCodec', _PrepareHO_Res_iuSelectedCodec),
        ('iuAvailableCodecsList', _PrepareHO_Res_iuAvailableCodecsList),
        ('aoipSelectedCodecTarget', _PrepareHO_Res_aoipSelectedCodecTarget),
        ('aoipAvailableCodecsListMap', _PrepareHO_Res_aoipAvailableCodecsListMap),
        ])
    PrepareHO_Res._ext = ['iuSelectedCodec', 'iuAvailableCodecsList', 'aoipSelectedCodecTarget', 'aoipAvailableCodecsListMap']
    
    #-----< SelectedUMTS-Algorithms >-----#
    SelectedUMTS_Algorithms = SEQ(name='SelectedUMTS-Algorithms', mode=MODE_TYPE)
    _SelectedUMTS_Algorithms_integrityProtectionAlgorithm = OCT_STR(name='integrityProtectionAlgorithm', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChosenIntegrityProtectionAlgorithm')), opt=True)
    _SelectedUMTS_Algorithms_encryptionAlgorithm = OCT_STR(name='encryptionAlgorithm', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChosenEncryptionAlgorithm')), opt=True)
    _SelectedUMTS_Algorithms_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SelectedUMTS_Algorithms._cont = ASN1Dict([
        ('integrityProtectionAlgorithm', _SelectedUMTS_Algorithms_integrityProtectionAlgorithm),
        ('encryptionAlgorithm', _SelectedUMTS_Algorithms_encryptionAlgorithm),
        ('extensionContainer', _SelectedUMTS_Algorithms_extensionContainer),
        ])
    SelectedUMTS_Algorithms._ext = []
    
    #-----< ChosenIntegrityProtectionAlgorithm >-----#
    ChosenIntegrityProtectionAlgorithm = OCT_STR(name='ChosenIntegrityProtectionAlgorithm', mode=MODE_TYPE)
    ChosenIntegrityProtectionAlgorithm._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< ChosenEncryptionAlgorithm >-----#
    ChosenEncryptionAlgorithm = OCT_STR(name='ChosenEncryptionAlgorithm', mode=MODE_TYPE)
    ChosenEncryptionAlgorithm._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< ChosenRadioResourceInformation >-----#
    ChosenRadioResourceInformation = SEQ(name='ChosenRadioResourceInformation', mode=MODE_TYPE)
    _ChosenRadioResourceInformation_chosenChannelInfo = OCT_STR(name='chosenChannelInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChosenChannelInfo')), opt=True)
    _ChosenRadioResourceInformation_chosenSpeechVersion = OCT_STR(name='chosenSpeechVersion', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChosenSpeechVersion')), opt=True)
    ChosenRadioResourceInformation._cont = ASN1Dict([
        ('chosenChannelInfo', _ChosenRadioResourceInformation_chosenChannelInfo),
        ('chosenSpeechVersion', _ChosenRadioResourceInformation_chosenSpeechVersion),
        ])
    ChosenRadioResourceInformation._ext = []
    
    #-----< ChosenChannelInfo >-----#
    ChosenChannelInfo = OCT_STR(name='ChosenChannelInfo', mode=MODE_TYPE)
    ChosenChannelInfo._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< ChosenSpeechVersion >-----#
    ChosenSpeechVersion = OCT_STR(name='ChosenSpeechVersion', mode=MODE_TYPE)
    ChosenSpeechVersion._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< PrepareSubsequentHO-Arg >-----#
    PrepareSubsequentHO_Arg = SEQ(name='PrepareSubsequentHO-Arg', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PrepareSubsequentHO_Arg_targetCellId = OCT_STR(name='targetCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GlobalCellId')), opt=True)
    _PrepareSubsequentHO_Arg_targetMSC_Number = OCT_STR(name='targetMSC-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _PrepareSubsequentHO_Arg_targetRNCId = OCT_STR(name='targetRNCId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RNCId')), opt=True)
    _PrepareSubsequentHO_Arg_an_APDU = SEQ(name='an-APDU', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AccessNetworkSignalInfo')), opt=True)
    _PrepareSubsequentHO_Arg_selectedRab_Id = INT(name='selectedRab-Id', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAB-Id')), opt=True)
    _PrepareSubsequentHO_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _PrepareSubsequentHO_Arg_geran_classmark = OCT_STR(name='geran-classmark', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GERAN-Classmark')), opt=True)
    _PrepareSubsequentHO_Arg_rab_ConfigurationIndicator = NULL(name='rab-ConfigurationIndicator', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    PrepareSubsequentHO_Arg._cont = ASN1Dict([
        ('targetCellId', _PrepareSubsequentHO_Arg_targetCellId),
        ('targetMSC-Number', _PrepareSubsequentHO_Arg_targetMSC_Number),
        ('targetRNCId', _PrepareSubsequentHO_Arg_targetRNCId),
        ('an-APDU', _PrepareSubsequentHO_Arg_an_APDU),
        ('selectedRab-Id', _PrepareSubsequentHO_Arg_selectedRab_Id),
        ('extensionContainer', _PrepareSubsequentHO_Arg_extensionContainer),
        ('geran-classmark', _PrepareSubsequentHO_Arg_geran_classmark),
        ('rab-ConfigurationIndicator', _PrepareSubsequentHO_Arg_rab_ConfigurationIndicator),
        ])
    PrepareSubsequentHO_Arg._ext = ['geran-classmark', 'rab-ConfigurationIndicator']
    
    #-----< PrepareSubsequentHO-Res >-----#
    PrepareSubsequentHO_Res = SEQ(name='PrepareSubsequentHO-Res', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PrepareSubsequentHO_Res_an_APDU = SEQ(name='an-APDU', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AccessNetworkSignalInfo')))
    _PrepareSubsequentHO_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    PrepareSubsequentHO_Res._cont = ASN1Dict([
        ('an-APDU', _PrepareSubsequentHO_Res_an_APDU),
        ('extensionContainer', _PrepareSubsequentHO_Res_extensionContainer),
        ])
    PrepareSubsequentHO_Res._ext = []
    
    #-----< ProcessAccessSignalling-Arg >-----#
    ProcessAccessSignalling_Arg = SEQ(name='ProcessAccessSignalling-Arg', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProcessAccessSignalling_Arg_an_APDU = SEQ(name='an-APDU', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AccessNetworkSignalInfo')))
    _ProcessAccessSignalling_Arg_selectedUMTS_Algorithms = SEQ(name='selectedUMTS-Algorithms', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SelectedUMTS-Algorithms')), opt=True)
    _ProcessAccessSignalling_Arg_selectedGSM_Algorithm = OCT_STR(name='selectedGSM-Algorithm', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SelectedGSM-Algorithm')), opt=True)
    _ProcessAccessSignalling_Arg_chosenRadioResourceInformation = SEQ(name='chosenRadioResourceInformation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChosenRadioResourceInformation')), opt=True)
    _ProcessAccessSignalling_Arg_selectedRab_Id = INT(name='selectedRab-Id', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAB-Id')), opt=True)
    _ProcessAccessSignalling_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ProcessAccessSignalling_Arg_iUSelectedCodec = OCT_STR(name='iUSelectedCodec', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _ProcessAccessSignalling_Arg_iuAvailableCodecsList = SEQ(name='iuAvailableCodecsList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CodecList')), opt=True)
    _ProcessAccessSignalling_Arg_aoipSelectedCodecTarget = OCT_STR(name='aoipSelectedCodecTarget', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _ProcessAccessSignalling_Arg_aoipAvailableCodecsListMap = SEQ(name='aoipAvailableCodecsListMap', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodecsList')), opt=True)
    ProcessAccessSignalling_Arg._cont = ASN1Dict([
        ('an-APDU', _ProcessAccessSignalling_Arg_an_APDU),
        ('selectedUMTS-Algorithms', _ProcessAccessSignalling_Arg_selectedUMTS_Algorithms),
        ('selectedGSM-Algorithm', _ProcessAccessSignalling_Arg_selectedGSM_Algorithm),
        ('chosenRadioResourceInformation', _ProcessAccessSignalling_Arg_chosenRadioResourceInformation),
        ('selectedRab-Id', _ProcessAccessSignalling_Arg_selectedRab_Id),
        ('extensionContainer', _ProcessAccessSignalling_Arg_extensionContainer),
        ('iUSelectedCodec', _ProcessAccessSignalling_Arg_iUSelectedCodec),
        ('iuAvailableCodecsList', _ProcessAccessSignalling_Arg_iuAvailableCodecsList),
        ('aoipSelectedCodecTarget', _ProcessAccessSignalling_Arg_aoipSelectedCodecTarget),
        ('aoipAvailableCodecsListMap', _ProcessAccessSignalling_Arg_aoipAvailableCodecsListMap),
        ])
    ProcessAccessSignalling_Arg._ext = ['iUSelectedCodec', 'iuAvailableCodecsList', 'aoipSelectedCodecTarget', 'aoipAvailableCodecsListMap']
    
    #-----< AoIPCodecsList >-----#
    AoIPCodecsList = SEQ(name='AoIPCodecsList', mode=MODE_TYPE)
    _AoIPCodecsList_codec1 = OCT_STR(name='codec1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')))
    _AoIPCodecsList_codec2 = OCT_STR(name='codec2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _AoIPCodecsList_codec3 = OCT_STR(name='codec3', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _AoIPCodecsList_codec4 = OCT_STR(name='codec4', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _AoIPCodecsList_codec5 = OCT_STR(name='codec5', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _AoIPCodecsList_codec6 = OCT_STR(name='codec6', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _AoIPCodecsList_codec7 = OCT_STR(name='codec7', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _AoIPCodecsList_codec8 = OCT_STR(name='codec8', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AoIPCodec')), opt=True)
    _AoIPCodecsList_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    AoIPCodecsList._cont = ASN1Dict([
        ('codec1', _AoIPCodecsList_codec1),
        ('codec2', _AoIPCodecsList_codec2),
        ('codec3', _AoIPCodecsList_codec3),
        ('codec4', _AoIPCodecsList_codec4),
        ('codec5', _AoIPCodecsList_codec5),
        ('codec6', _AoIPCodecsList_codec6),
        ('codec7', _AoIPCodecsList_codec7),
        ('codec8', _AoIPCodecsList_codec8),
        ('extensionContainer', _AoIPCodecsList_extensionContainer),
        ])
    AoIPCodecsList._ext = []
    
    #-----< AoIPCodec >-----#
    AoIPCodec = OCT_STR(name='AoIPCodec', mode=MODE_TYPE)
    AoIPCodec._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< SupportedCodecsList >-----#
    SupportedCodecsList = SEQ(name='SupportedCodecsList', mode=MODE_TYPE)
    _SupportedCodecsList_utranCodecList = SEQ(name='utranCodecList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CodecList')), opt=True)
    _SupportedCodecsList_geranCodecList = SEQ(name='geranCodecList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CodecList')), opt=True)
    _SupportedCodecsList_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SupportedCodecsList._cont = ASN1Dict([
        ('utranCodecList', _SupportedCodecsList_utranCodecList),
        ('geranCodecList', _SupportedCodecsList_geranCodecList),
        ('extensionContainer', _SupportedCodecsList_extensionContainer),
        ])
    SupportedCodecsList._ext = []
    
    #-----< CodecList >-----#
    CodecList = SEQ(name='CodecList', mode=MODE_TYPE)
    _CodecList_codec1 = OCT_STR(name='codec1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')))
    _CodecList_codec2 = OCT_STR(name='codec2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _CodecList_codec3 = OCT_STR(name='codec3', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _CodecList_codec4 = OCT_STR(name='codec4', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _CodecList_codec5 = OCT_STR(name='codec5', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _CodecList_codec6 = OCT_STR(name='codec6', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _CodecList_codec7 = OCT_STR(name='codec7', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _CodecList_codec8 = OCT_STR(name='codec8', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Codec')), opt=True)
    _CodecList_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CodecList._cont = ASN1Dict([
        ('codec1', _CodecList_codec1),
        ('codec2', _CodecList_codec2),
        ('codec3', _CodecList_codec3),
        ('codec4', _CodecList_codec4),
        ('codec5', _CodecList_codec5),
        ('codec6', _CodecList_codec6),
        ('codec7', _CodecList_codec7),
        ('codec8', _CodecList_codec8),
        ('extensionContainer', _CodecList_extensionContainer),
        ])
    CodecList._ext = []
    
    #-----< Codec >-----#
    Codec = OCT_STR(name='Codec', mode=MODE_TYPE)
    Codec._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    
    #-----< GERAN-Classmark >-----#
    GERAN_Classmark = OCT_STR(name='GERAN-Classmark', mode=MODE_TYPE)
    GERAN_Classmark._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=87)], ev=None, er=[])
    
    #-----< SelectedGSM-Algorithm >-----#
    SelectedGSM_Algorithm = OCT_STR(name='SelectedGSM-Algorithm', mode=MODE_TYPE)
    SelectedGSM_Algorithm._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< SendEndSignal-Arg >-----#
    SendEndSignal_Arg = SEQ(name='SendEndSignal-Arg', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SendEndSignal_Arg_an_APDU = SEQ(name='an-APDU', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AccessNetworkSignalInfo')))
    _SendEndSignal_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SendEndSignal_Arg._cont = ASN1Dict([
        ('an-APDU', _SendEndSignal_Arg_an_APDU),
        ('extensionContainer', _SendEndSignal_Arg_extensionContainer),
        ])
    SendEndSignal_Arg._ext = []
    
    #-----< SendEndSignal-Res >-----#
    SendEndSignal_Res = SEQ(name='SendEndSignal-Res', mode=MODE_TYPE)
    _SendEndSignal_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SendEndSignal_Res._cont = ASN1Dict([
        ('extensionContainer', _SendEndSignal_Res_extensionContainer),
        ])
    SendEndSignal_Res._ext = []
    
    #-----< RNCId >-----#
    RNCId = OCT_STR(name='RNCId', mode=MODE_TYPE)
    RNCId._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    
    #-----< RelocationNumberList >-----#
    RelocationNumberList = SEQ_OF(name='RelocationNumberList', mode=MODE_TYPE)
    _RelocationNumberList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RelocationNumber')))
    RelocationNumberList._cont = _RelocationNumberList__item_
    RelocationNumberList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=7)], ev=None, er=[])
    
    #-----< MulticallBearerInfo >-----#
    MulticallBearerInfo = INT(name='MulticallBearerInfo', mode=MODE_TYPE)
    MulticallBearerInfo._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=7)], ev=None, er=[])
    
    #-----< RelocationNumber >-----#
    RelocationNumber = SEQ(name='RelocationNumber', mode=MODE_TYPE)
    _RelocationNumber_handoverNumber = OCT_STR(name='handoverNumber', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _RelocationNumber_rab_Id = INT(name='rab-Id', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAB-Id')))
    RelocationNumber._cont = ASN1Dict([
        ('handoverNumber', _RelocationNumber_handoverNumber),
        ('rab-Id', _RelocationNumber_rab_Id),
        ])
    RelocationNumber._ext = []
    
    #-----< RAB-Id >-----#
    RAB_Id = INT(name='RAB-Id', mode=MODE_TYPE)
    RAB_Id._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    
    #-----< maxNrOfRABs >-----#
    maxNrOfRABs = INT(name='maxNrOfRABs', mode=MODE_VALUE)
    maxNrOfRABs._val = 255
    
    #-----< maxNumOfRelocationNumber >-----#
    maxNumOfRelocationNumber = INT(name='maxNumOfRelocationNumber', mode=MODE_VALUE)
    maxNumOfRelocationNumber._val = 7
    
    #-----< RadioResourceInformation >-----#
    RadioResourceInformation = OCT_STR(name='RadioResourceInformation', mode=MODE_TYPE)
    RadioResourceInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=13)], ev=None, er=[])
    
    #-----< IntegrityProtectionInformation >-----#
    IntegrityProtectionInformation = OCT_STR(name='IntegrityProtectionInformation', mode=MODE_TYPE)
    IntegrityProtectionInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=18, ub=100)], ev=None, er=[])
    
    #-----< maxNumOfIntegrityInfo >-----#
    maxNumOfIntegrityInfo = INT(name='maxNumOfIntegrityInfo', mode=MODE_VALUE)
    maxNumOfIntegrityInfo._val = 100
    
    #-----< EncryptionInformation >-----#
    EncryptionInformation = OCT_STR(name='EncryptionInformation', mode=MODE_TYPE)
    EncryptionInformation._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=18, ub=100)], ev=None, er=[])
    
    #-----< maxNumOfEncryptionInfo >-----#
    maxNumOfEncryptionInfo = INT(name='maxNumOfEncryptionInfo', mode=MODE_VALUE)
    maxNumOfEncryptionInfo._val = 100
    
    #-----< SendAuthenticationInfoArg >-----#
    SendAuthenticationInfoArg = SEQ(name='SendAuthenticationInfoArg', mode=MODE_TYPE)
    _SendAuthenticationInfoArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _SendAuthenticationInfoArg_numberOfRequestedVectors = INT(name='numberOfRequestedVectors', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NumberOfRequestedVectors')))
    _SendAuthenticationInfoArg_segmentationProhibited = NULL(name='segmentationProhibited', mode=MODE_TYPE, opt=True)
    _SendAuthenticationInfoArg_immediateResponsePreferred = NULL(name='immediateResponsePreferred', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SendAuthenticationInfoArg_re_synchronisationInfo = SEQ(name='re-synchronisationInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Re-synchronisationInfo')), opt=True)
    _SendAuthenticationInfoArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SendAuthenticationInfoArg_requestingNodeType = ENUM(name='requestingNodeType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RequestingNodeType')), opt=True)
    _SendAuthenticationInfoArg_requestingPLMN_Id = OCT_STR(name='requestingPLMN-Id', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')), opt=True)
    _SendAuthenticationInfoArg_numberOfRequestedAdditional_Vectors = INT(name='numberOfRequestedAdditional-Vectors', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'NumberOfRequestedVectors')), opt=True)
    _SendAuthenticationInfoArg_additionalVectorsAreForEPS = NULL(name='additionalVectorsAreForEPS', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SendAuthenticationInfoArg_ueUsageTypeRequestIndication = NULL(name='ueUsageTypeRequestIndication', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SendAuthenticationInfoArg._cont = ASN1Dict([
        ('imsi', _SendAuthenticationInfoArg_imsi),
        ('numberOfRequestedVectors', _SendAuthenticationInfoArg_numberOfRequestedVectors),
        ('segmentationProhibited', _SendAuthenticationInfoArg_segmentationProhibited),
        ('immediateResponsePreferred', _SendAuthenticationInfoArg_immediateResponsePreferred),
        ('re-synchronisationInfo', _SendAuthenticationInfoArg_re_synchronisationInfo),
        ('extensionContainer', _SendAuthenticationInfoArg_extensionContainer),
        ('requestingNodeType', _SendAuthenticationInfoArg_requestingNodeType),
        ('requestingPLMN-Id', _SendAuthenticationInfoArg_requestingPLMN_Id),
        ('numberOfRequestedAdditional-Vectors', _SendAuthenticationInfoArg_numberOfRequestedAdditional_Vectors),
        ('additionalVectorsAreForEPS', _SendAuthenticationInfoArg_additionalVectorsAreForEPS),
        ('ueUsageTypeRequestIndication', _SendAuthenticationInfoArg_ueUsageTypeRequestIndication),
        ])
    SendAuthenticationInfoArg._ext = ['requestingNodeType', 'requestingPLMN-Id', 'numberOfRequestedAdditional-Vectors', 'additionalVectorsAreForEPS', 'ueUsageTypeRequestIndication']
    
    #-----< NumberOfRequestedVectors >-----#
    NumberOfRequestedVectors = INT(name='NumberOfRequestedVectors', mode=MODE_TYPE)
    NumberOfRequestedVectors._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< Re-synchronisationInfo >-----#
    Re_synchronisationInfo = SEQ(name='Re-synchronisationInfo', mode=MODE_TYPE)
    _Re_synchronisationInfo_rand = OCT_STR(name='rand', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAND')))
    _Re_synchronisationInfo_auts = OCT_STR(name='auts', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AUTS')))
    Re_synchronisationInfo._cont = ASN1Dict([
        ('rand', _Re_synchronisationInfo_rand),
        ('auts', _Re_synchronisationInfo_auts),
        ])
    Re_synchronisationInfo._ext = []
    
    #-----< SendAuthenticationInfoRes >-----#
    SendAuthenticationInfoRes = SEQ(name='SendAuthenticationInfoRes', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SendAuthenticationInfoRes_authenticationSetList = CHOICE(name='authenticationSetList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AuthenticationSetList')), opt=True)
    _SendAuthenticationInfoRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SendAuthenticationInfoRes_eps_AuthenticationSetList = SEQ_OF(name='eps-AuthenticationSetList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EPS-AuthenticationSetList')), opt=True)
    _SendAuthenticationInfoRes_ueUsageType = OCT_STR(name='ueUsageType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UE-UsageType')), opt=True)
    SendAuthenticationInfoRes._cont = ASN1Dict([
        ('authenticationSetList', _SendAuthenticationInfoRes_authenticationSetList),
        ('extensionContainer', _SendAuthenticationInfoRes_extensionContainer),
        ('eps-AuthenticationSetList', _SendAuthenticationInfoRes_eps_AuthenticationSetList),
        ('ueUsageType', _SendAuthenticationInfoRes_ueUsageType),
        ])
    SendAuthenticationInfoRes._ext = ['eps-AuthenticationSetList', 'ueUsageType']
    
    #-----< EPS-AuthenticationSetList >-----#
    EPS_AuthenticationSetList = SEQ_OF(name='EPS-AuthenticationSetList', mode=MODE_TYPE)
    _EPS_AuthenticationSetList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'EPC-AV')))
    EPS_AuthenticationSetList._cont = _EPS_AuthenticationSetList__item_
    EPS_AuthenticationSetList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< UE-UsageType >-----#
    UE_UsageType = OCT_STR(name='UE-UsageType', mode=MODE_TYPE)
    UE_UsageType._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< EPC-AV >-----#
    EPC_AV = SEQ(name='EPC-AV', mode=MODE_TYPE)
    _EPC_AV_rand = OCT_STR(name='rand', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RAND')))
    _EPC_AV_xres = OCT_STR(name='xres', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'XRES')))
    _EPC_AV_autn = OCT_STR(name='autn', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AUTN')))
    _EPC_AV_kasme = OCT_STR(name='kasme', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'KASME')))
    _EPC_AV_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    EPC_AV._cont = ASN1Dict([
        ('rand', _EPC_AV_rand),
        ('xres', _EPC_AV_xres),
        ('autn', _EPC_AV_autn),
        ('kasme', _EPC_AV_kasme),
        ('extensionContainer', _EPC_AV_extensionContainer),
        ])
    EPC_AV._ext = []
    
    #-----< KASME >-----#
    KASME = OCT_STR(name='KASME', mode=MODE_TYPE)
    KASME._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    
    #-----< RequestingNodeType >-----#
    RequestingNodeType = ENUM(name='RequestingNodeType', mode=MODE_TYPE)
    RequestingNodeType._cont = ASN1Dict([('vlr', 0), ('sgsn', 1), ('s-cscf', 2), ('bsf', 3), ('gan-aaa-server', 4), ('wlan-aaa-server', 5), ('mme', 16), ('mme-sgsn', 17)])
    RequestingNodeType._ext = ['s-cscf', 'bsf', 'gan-aaa-server', 'wlan-aaa-server', 'mme', 'mme-sgsn']
    
    #-----< CheckIMEI-Arg >-----#
    CheckIMEI_Arg = SEQ(name='CheckIMEI-Arg', mode=MODE_TYPE)
    _CheckIMEI_Arg_imei = OCT_STR(name='imei', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMEI')))
    _CheckIMEI_Arg_requestedEquipmentInfo = BIT_STR(name='requestedEquipmentInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'RequestedEquipmentInfo')))
    _CheckIMEI_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CheckIMEI_Arg._cont = ASN1Dict([
        ('imei', _CheckIMEI_Arg_imei),
        ('requestedEquipmentInfo', _CheckIMEI_Arg_requestedEquipmentInfo),
        ('extensionContainer', _CheckIMEI_Arg_extensionContainer),
        ])
    CheckIMEI_Arg._ext = []
    
    #-----< CheckIMEI-Res >-----#
    CheckIMEI_Res = SEQ(name='CheckIMEI-Res', mode=MODE_TYPE)
    _CheckIMEI_Res_equipmentStatus = ENUM(name='equipmentStatus', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'EquipmentStatus')), opt=True)
    _CheckIMEI_Res_bmuef = SEQ(name='bmuef', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'UESBI-Iu')), opt=True)
    _CheckIMEI_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CheckIMEI_Res._cont = ASN1Dict([
        ('equipmentStatus', _CheckIMEI_Res_equipmentStatus),
        ('bmuef', _CheckIMEI_Res_bmuef),
        ('extensionContainer', _CheckIMEI_Res_extensionContainer),
        ])
    CheckIMEI_Res._ext = []
    
    #-----< RequestedEquipmentInfo >-----#
    RequestedEquipmentInfo = BIT_STR(name='RequestedEquipmentInfo', mode=MODE_TYPE)
    RequestedEquipmentInfo._cont = ASN1Dict([('equipmentStatus', 0), ('bmuef', 1)])
    RequestedEquipmentInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=8)], ev=None, er=[])
    
    #-----< UESBI-Iu >-----#
    UESBI_Iu = SEQ(name='UESBI-Iu', mode=MODE_TYPE)
    _UESBI_Iu_uesbi_IuA = BIT_STR(name='uesbi-IuA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UESBI-IuA')), opt=True)
    _UESBI_Iu_uesbi_IuB = BIT_STR(name='uesbi-IuB', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UESBI-IuB')), opt=True)
    UESBI_Iu._cont = ASN1Dict([
        ('uesbi-IuA', _UESBI_Iu_uesbi_IuA),
        ('uesbi-IuB', _UESBI_Iu_uesbi_IuB),
        ])
    UESBI_Iu._ext = []
    
    #-----< UESBI-IuA >-----#
    UESBI_IuA = BIT_STR(name='UESBI-IuA', mode=MODE_TYPE)
    UESBI_IuA._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    
    #-----< UESBI-IuB >-----#
    UESBI_IuB = BIT_STR(name='UESBI-IuB', mode=MODE_TYPE)
    UESBI_IuB._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    
    #-----< EquipmentStatus >-----#
    EquipmentStatus = ENUM(name='EquipmentStatus', mode=MODE_TYPE)
    EquipmentStatus._cont = ASN1Dict([('whiteListed', 0), ('blackListed', 1), ('greyListed', 2)])
    EquipmentStatus._ext = None
    
    #-----< InsertSubscriberDataArg >-----#
    InsertSubscriberDataArg = SEQ(name='InsertSubscriberDataArg', mode=MODE_TYPE)
    _InsertSubscriberDataArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _InsertSubscriberDataArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _InsertSubscriberDataArg_category = OCT_STR(name='category', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Category')), opt=True)
    _InsertSubscriberDataArg_subscriberStatus = ENUM(name='subscriberStatus', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SubscriberStatus')), opt=True)
    _InsertSubscriberDataArg_bearerServiceList = SEQ_OF(name='bearerServiceList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BearerServiceList')), opt=True)
    _InsertSubscriberDataArg_teleserviceList = SEQ_OF(name='teleserviceList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TeleserviceList')), opt=True)
    _InsertSubscriberDataArg_provisionedSS = SEQ_OF(name='provisionedSS', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-SS-InfoList')), opt=True)
    _InsertSubscriberDataArg_odb_Data = SEQ(name='odb-Data', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-Data')), opt=True)
    _InsertSubscriberDataArg_roamingRestrictionDueToUnsupportedFeature = NULL(name='roamingRestrictionDueToUnsupportedFeature', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_regionalSubscriptionData = SEQ_OF(name='regionalSubscriptionData', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ZoneCodeList')), opt=True)
    _InsertSubscriberDataArg_vbsSubscriptionData = SEQ_OF(name='vbsSubscriptionData', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'VBSDataList')), opt=True)
    _InsertSubscriberDataArg_vgcsSubscriptionData = SEQ_OF(name='vgcsSubscriptionData', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'VGCSDataList')), opt=True)
    _InsertSubscriberDataArg_vlrCamelSubscriptionInfo = SEQ(name='vlrCamelSubscriptionInfo', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'VlrCamelSubscriptionInfo')), opt=True)
    _InsertSubscriberDataArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _InsertSubscriberDataArg_naea_PreferredCI = SEQ(name='naea-PreferredCI', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NAEA-PreferredCI')), opt=True)
    _InsertSubscriberDataArg_gprsSubscriptionData = SEQ(name='gprsSubscriptionData', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRSSubscriptionData')), opt=True)
    _InsertSubscriberDataArg_roamingRestrictedInSgsnDueToUnsupportedFeature = NULL(name='roamingRestrictedInSgsnDueToUnsupportedFeature', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_networkAccessMode = ENUM(name='networkAccessMode', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'NetworkAccessMode')), opt=True)
    _InsertSubscriberDataArg_lsaInformation = SEQ(name='lsaInformation', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAInformation')), opt=True)
    _InsertSubscriberDataArg_lmu_Indicator = NULL(name='lmu-Indicator', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_lcsInformation = SEQ(name='lcsInformation', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LCSInformation')), opt=True)
    _InsertSubscriberDataArg_istAlertTimer = INT(name='istAlertTimer', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'IST-AlertTimerValue')), opt=True)
    _InsertSubscriberDataArg_superChargerSupportedInHLR = OCT_STR(name='superChargerSupportedInHLR', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AgeIndicator')), opt=True)
    _InsertSubscriberDataArg_mc_SS_Info = SEQ(name='mc-SS-Info', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'MC-SS-Info')), opt=True)
    _InsertSubscriberDataArg_cs_AllocationRetentionPriority = OCT_STR(name='cs-AllocationRetentionPriority', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CS-AllocationRetentionPriority')), opt=True)
    _InsertSubscriberDataArg_sgsn_CAMEL_SubscriptionInfo = SEQ(name='sgsn-CAMEL-SubscriptionInfo', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SGSN-CAMEL-SubscriptionInfo')), opt=True)
    _InsertSubscriberDataArg_chargingCharacteristics = OCT_STR(name='chargingCharacteristics', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChargingCharacteristics')), opt=True)
    _InsertSubscriberDataArg_accessRestrictionData = BIT_STR(name='accessRestrictionData', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AccessRestrictionData')), opt=True)
    _InsertSubscriberDataArg_ics_Indicator = BOOL(name='ics-Indicator', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_eps_SubscriptionData = SEQ(name='eps-SubscriptionData', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EPS-SubscriptionData')), opt=True)
    _InsertSubscriberDataArg_csg_SubscriptionDataList = SEQ_OF(name='csg-SubscriptionDataList', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CSG-SubscriptionDataList')), opt=True)
    _InsertSubscriberDataArg_ue_ReachabilityRequestIndicator = NULL(name='ue-ReachabilityRequestIndicator', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_sgsn_Number = OCT_STR(name='sgsn-Number', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _InsertSubscriberDataArg_mme_Name = OCT_STR(name='mme-Name', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')), opt=True)
    _InsertSubscriberDataArg_subscribedPeriodicRAUTAUtimer = INT(name='subscribedPeriodicRAUTAUtimer', mode=MODE_TYPE, tag=(36, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SubscribedPeriodicRAUTAUtimer')), opt=True)
    _InsertSubscriberDataArg_vplmnLIPAAllowed = NULL(name='vplmnLIPAAllowed', mode=MODE_TYPE, tag=(37, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_mdtUserConsent = BOOL(name='mdtUserConsent', mode=MODE_TYPE, tag=(38, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_subscribedPeriodicLAUtimer = INT(name='subscribedPeriodicLAUtimer', mode=MODE_TYPE, tag=(39, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SubscribedPeriodicLAUtimer')), opt=True)
    _InsertSubscriberDataArg_vplmn_Csg_SubscriptionDataList = SEQ_OF(name='vplmn-Csg-SubscriptionDataList', mode=MODE_TYPE, tag=(40, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'VPLMN-CSG-SubscriptionDataList')), opt=True)
    _InsertSubscriberDataArg_additionalMSISDN = OCT_STR(name='additionalMSISDN', mode=MODE_TYPE, tag=(41, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _InsertSubscriberDataArg_psAndSMS_OnlyServiceProvision = NULL(name='psAndSMS-OnlyServiceProvision', mode=MODE_TYPE, tag=(42, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_smsInSGSNAllowed = NULL(name='smsInSGSNAllowed', mode=MODE_TYPE, tag=(43, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_cs_to_ps_SRVCC_Allowed_Indicator = NULL(name='cs-to-ps-SRVCC-Allowed-Indicator', mode=MODE_TYPE, tag=(44, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_pcscf_Restoration_Request = NULL(name='pcscf-Restoration-Request', mode=MODE_TYPE, tag=(45, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InsertSubscriberDataArg_adjacentAccessRestrictionDataList = SEQ_OF(name='adjacentAccessRestrictionDataList', mode=MODE_TYPE, tag=(46, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdjacentAccessRestrictionDataList')), opt=True)
    _InsertSubscriberDataArg_imsi_Group_Id_List = SEQ_OF(name='imsi-Group-Id-List', mode=MODE_TYPE, tag=(47, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'IMSI-GroupIdList')), opt=True)
    _InsertSubscriberDataArg_ueUsageType = OCT_STR(name='ueUsageType', mode=MODE_TYPE, tag=(48, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UE-UsageType')), opt=True)
    _InsertSubscriberDataArg_userPlaneIntegrityProtectionIndicator = NULL(name='userPlaneIntegrityProtectionIndicator', mode=MODE_TYPE, tag=(49, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    InsertSubscriberDataArg._cont = ASN1Dict([
        ('imsi', _InsertSubscriberDataArg_imsi),
        ('msisdn', _InsertSubscriberDataArg_msisdn),
        ('category', _InsertSubscriberDataArg_category),
        ('subscriberStatus', _InsertSubscriberDataArg_subscriberStatus),
        ('bearerServiceList', _InsertSubscriberDataArg_bearerServiceList),
        ('teleserviceList', _InsertSubscriberDataArg_teleserviceList),
        ('provisionedSS', _InsertSubscriberDataArg_provisionedSS),
        ('odb-Data', _InsertSubscriberDataArg_odb_Data),
        ('roamingRestrictionDueToUnsupportedFeature', _InsertSubscriberDataArg_roamingRestrictionDueToUnsupportedFeature),
        ('regionalSubscriptionData', _InsertSubscriberDataArg_regionalSubscriptionData),
        ('vbsSubscriptionData', _InsertSubscriberDataArg_vbsSubscriptionData),
        ('vgcsSubscriptionData', _InsertSubscriberDataArg_vgcsSubscriptionData),
        ('vlrCamelSubscriptionInfo', _InsertSubscriberDataArg_vlrCamelSubscriptionInfo),
        ('extensionContainer', _InsertSubscriberDataArg_extensionContainer),
        ('naea-PreferredCI', _InsertSubscriberDataArg_naea_PreferredCI),
        ('gprsSubscriptionData', _InsertSubscriberDataArg_gprsSubscriptionData),
        ('roamingRestrictedInSgsnDueToUnsupportedFeature', _InsertSubscriberDataArg_roamingRestrictedInSgsnDueToUnsupportedFeature),
        ('networkAccessMode', _InsertSubscriberDataArg_networkAccessMode),
        ('lsaInformation', _InsertSubscriberDataArg_lsaInformation),
        ('lmu-Indicator', _InsertSubscriberDataArg_lmu_Indicator),
        ('lcsInformation', _InsertSubscriberDataArg_lcsInformation),
        ('istAlertTimer', _InsertSubscriberDataArg_istAlertTimer),
        ('superChargerSupportedInHLR', _InsertSubscriberDataArg_superChargerSupportedInHLR),
        ('mc-SS-Info', _InsertSubscriberDataArg_mc_SS_Info),
        ('cs-AllocationRetentionPriority', _InsertSubscriberDataArg_cs_AllocationRetentionPriority),
        ('sgsn-CAMEL-SubscriptionInfo', _InsertSubscriberDataArg_sgsn_CAMEL_SubscriptionInfo),
        ('chargingCharacteristics', _InsertSubscriberDataArg_chargingCharacteristics),
        ('accessRestrictionData', _InsertSubscriberDataArg_accessRestrictionData),
        ('ics-Indicator', _InsertSubscriberDataArg_ics_Indicator),
        ('eps-SubscriptionData', _InsertSubscriberDataArg_eps_SubscriptionData),
        ('csg-SubscriptionDataList', _InsertSubscriberDataArg_csg_SubscriptionDataList),
        ('ue-ReachabilityRequestIndicator', _InsertSubscriberDataArg_ue_ReachabilityRequestIndicator),
        ('sgsn-Number', _InsertSubscriberDataArg_sgsn_Number),
        ('mme-Name', _InsertSubscriberDataArg_mme_Name),
        ('subscribedPeriodicRAUTAUtimer', _InsertSubscriberDataArg_subscribedPeriodicRAUTAUtimer),
        ('vplmnLIPAAllowed', _InsertSubscriberDataArg_vplmnLIPAAllowed),
        ('mdtUserConsent', _InsertSubscriberDataArg_mdtUserConsent),
        ('subscribedPeriodicLAUtimer', _InsertSubscriberDataArg_subscribedPeriodicLAUtimer),
        ('vplmn-Csg-SubscriptionDataList', _InsertSubscriberDataArg_vplmn_Csg_SubscriptionDataList),
        ('additionalMSISDN', _InsertSubscriberDataArg_additionalMSISDN),
        ('psAndSMS-OnlyServiceProvision', _InsertSubscriberDataArg_psAndSMS_OnlyServiceProvision),
        ('smsInSGSNAllowed', _InsertSubscriberDataArg_smsInSGSNAllowed),
        ('cs-to-ps-SRVCC-Allowed-Indicator', _InsertSubscriberDataArg_cs_to_ps_SRVCC_Allowed_Indicator),
        ('pcscf-Restoration-Request', _InsertSubscriberDataArg_pcscf_Restoration_Request),
        ('adjacentAccessRestrictionDataList', _InsertSubscriberDataArg_adjacentAccessRestrictionDataList),
        ('imsi-Group-Id-List', _InsertSubscriberDataArg_imsi_Group_Id_List),
        ('ueUsageType', _InsertSubscriberDataArg_ueUsageType),
        ('userPlaneIntegrityProtectionIndicator', _InsertSubscriberDataArg_userPlaneIntegrityProtectionIndicator),
        ])
    InsertSubscriberDataArg._ext = ['naea-PreferredCI', 'gprsSubscriptionData', 'roamingRestrictedInSgsnDueToUnsupportedFeature', 'networkAccessMode', 'lsaInformation', 'lmu-Indicator', 'lcsInformation', 'istAlertTimer', 'superChargerSupportedInHLR', 'mc-SS-Info', 'cs-AllocationRetentionPriority', 'sgsn-CAMEL-SubscriptionInfo', 'chargingCharacteristics', 'accessRestrictionData', 'ics-Indicator', 'eps-SubscriptionData', 'csg-SubscriptionDataList', 'ue-ReachabilityRequestIndicator', 'sgsn-Number', 'mme-Name', 'subscribedPeriodicRAUTAUtimer', 'vplmnLIPAAllowed', 'mdtUserConsent', 'subscribedPeriodicLAUtimer', 'vplmn-Csg-SubscriptionDataList', 'additionalMSISDN', 'psAndSMS-OnlyServiceProvision', 'smsInSGSNAllowed', 'cs-to-ps-SRVCC-Allowed-Indicator', 'pcscf-Restoration-Request', 'adjacentAccessRestrictionDataList', 'imsi-Group-Id-List', 'ueUsageType', 'userPlaneIntegrityProtectionIndicator']
    
    #-----< Group-Service-ID >-----#
    Group_Service_ID = INT(name='Group-Service-ID', mode=MODE_TYPE)
    Group_Service_ID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    
    #-----< Local-GroupID >-----#
    Local_GroupID = OCT_STR(name='Local-GroupID', mode=MODE_TYPE)
    Local_GroupID._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< IMSI-GroupIdList >-----#
    IMSI_GroupIdList = SEQ_OF(name='IMSI-GroupIdList', mode=MODE_TYPE)
    _IMSI_GroupIdList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'IMSI-GroupId')))
    IMSI_GroupIdList._cont = _IMSI_GroupIdList__item_
    IMSI_GroupIdList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< IMSI-GroupId >-----#
    IMSI_GroupId = SEQ(name='IMSI-GroupId', mode=MODE_TYPE)
    _IMSI_GroupId_group_Service_Id = INT(name='group-Service-Id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Group-Service-ID')))
    _IMSI_GroupId_plmnId = OCT_STR(name='plmnId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')))
    _IMSI_GroupId_local_Group_ID = OCT_STR(name='local-Group-ID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Local-GroupID')))
    IMSI_GroupId._cont = ASN1Dict([
        ('group-Service-Id', _IMSI_GroupId_group_Service_Id),
        ('plmnId', _IMSI_GroupId_plmnId),
        ('local-Group-ID', _IMSI_GroupId_local_Group_ID),
        ])
    IMSI_GroupId._ext = []
    
    #-----< SubscribedPeriodicRAUTAUtimer >-----#
    SubscribedPeriodicRAUTAUtimer = INT(name='SubscribedPeriodicRAUTAUtimer', mode=MODE_TYPE)
    SubscribedPeriodicRAUTAUtimer._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    
    #-----< SubscribedPeriodicLAUtimer >-----#
    SubscribedPeriodicLAUtimer = INT(name='SubscribedPeriodicLAUtimer', mode=MODE_TYPE)
    SubscribedPeriodicLAUtimer._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    
    #-----< CSG-SubscriptionDataList >-----#
    CSG_SubscriptionDataList = SEQ_OF(name='CSG-SubscriptionDataList', mode=MODE_TYPE)
    _CSG_SubscriptionDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CSG-SubscriptionData')))
    CSG_SubscriptionDataList._cont = _CSG_SubscriptionDataList__item_
    CSG_SubscriptionDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< CSG-SubscriptionData >-----#
    CSG_SubscriptionData = SEQ(name='CSG-SubscriptionData', mode=MODE_TYPE)
    _CSG_SubscriptionData_csg_Id = BIT_STR(name='csg-Id', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CSG-Id')))
    _CSG_SubscriptionData_expirationDate = OCT_STR(name='expirationDate', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Time')), opt=True)
    _CSG_SubscriptionData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _CSG_SubscriptionData_lipa_AllowedAPNList = SEQ_OF(name='lipa-AllowedAPNList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LIPA-AllowedAPNList')), opt=True)
    _CSG_SubscriptionData_plmn_Id = OCT_STR(name='plmn-Id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')), opt=True)
    CSG_SubscriptionData._cont = ASN1Dict([
        ('csg-Id', _CSG_SubscriptionData_csg_Id),
        ('expirationDate', _CSG_SubscriptionData_expirationDate),
        ('extensionContainer', _CSG_SubscriptionData_extensionContainer),
        ('lipa-AllowedAPNList', _CSG_SubscriptionData_lipa_AllowedAPNList),
        ('plmn-Id', _CSG_SubscriptionData_plmn_Id),
        ])
    CSG_SubscriptionData._ext = ['lipa-AllowedAPNList', 'plmn-Id']
    
    #-----< VPLMN-CSG-SubscriptionDataList >-----#
    VPLMN_CSG_SubscriptionDataList = SEQ_OF(name='VPLMN-CSG-SubscriptionDataList', mode=MODE_TYPE)
    _VPLMN_CSG_SubscriptionDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CSG-SubscriptionData')))
    VPLMN_CSG_SubscriptionDataList._cont = _VPLMN_CSG_SubscriptionDataList__item_
    VPLMN_CSG_SubscriptionDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< CSG-Id >-----#
    CSG_Id = BIT_STR(name='CSG-Id', mode=MODE_TYPE)
    CSG_Id._const_sz = ASN1Set(rv=[27], rr=[], ev=None, er=[])
    
    #-----< LIPA-AllowedAPNList >-----#
    LIPA_AllowedAPNList = SEQ_OF(name='LIPA-AllowedAPNList', mode=MODE_TYPE)
    _LIPA_AllowedAPNList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN')))
    LIPA_AllowedAPNList._cont = _LIPA_AllowedAPNList__item_
    LIPA_AllowedAPNList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< maxNumOfLIPAAllowedAPN >-----#
    maxNumOfLIPAAllowedAPN = INT(name='maxNumOfLIPAAllowedAPN', mode=MODE_VALUE)
    maxNumOfLIPAAllowedAPN._val = 50
    
    #-----< EPS-SubscriptionData >-----#
    EPS_SubscriptionData = SEQ(name='EPS-SubscriptionData', mode=MODE_TYPE)
    _EPS_SubscriptionData_apn_oi_Replacement = OCT_STR(name='apn-oi-Replacement', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN-OI-Replacement')), opt=True)
    _EPS_SubscriptionData_rfsp_id = INT(name='rfsp-id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RFSP-ID')), opt=True)
    _EPS_SubscriptionData_ambr = SEQ(name='ambr', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AMBR')), opt=True)
    _EPS_SubscriptionData_apn_ConfigurationProfile = SEQ(name='apn-ConfigurationProfile', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN-ConfigurationProfile')), opt=True)
    _EPS_SubscriptionData_stn_sr = OCT_STR(name='stn-sr', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _EPS_SubscriptionData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _EPS_SubscriptionData_mps_CSPriority = NULL(name='mps-CSPriority', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_SubscriptionData_mps_EPSPriority = NULL(name='mps-EPSPriority', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EPS_SubscriptionData_subscribed_vsrvcc = NULL(name='subscribed-vsrvcc', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    EPS_SubscriptionData._cont = ASN1Dict([
        ('apn-oi-Replacement', _EPS_SubscriptionData_apn_oi_Replacement),
        ('rfsp-id', _EPS_SubscriptionData_rfsp_id),
        ('ambr', _EPS_SubscriptionData_ambr),
        ('apn-ConfigurationProfile', _EPS_SubscriptionData_apn_ConfigurationProfile),
        ('stn-sr', _EPS_SubscriptionData_stn_sr),
        ('extensionContainer', _EPS_SubscriptionData_extensionContainer),
        ('mps-CSPriority', _EPS_SubscriptionData_mps_CSPriority),
        ('mps-EPSPriority', _EPS_SubscriptionData_mps_EPSPriority),
        ('subscribed-vsrvcc', _EPS_SubscriptionData_subscribed_vsrvcc),
        ])
    EPS_SubscriptionData._ext = ['mps-CSPriority', 'mps-EPSPriority', 'subscribed-vsrvcc']
    
    #-----< APN-OI-Replacement >-----#
    APN_OI_Replacement = OCT_STR(name='APN-OI-Replacement', mode=MODE_TYPE)
    APN_OI_Replacement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=9, ub=100)], ev=None, er=[])
    
    #-----< RFSP-ID >-----#
    RFSP_ID = INT(name='RFSP-ID', mode=MODE_TYPE)
    RFSP_ID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    
    #-----< APN-ConfigurationProfile >-----#
    APN_ConfigurationProfile = SEQ(name='APN-ConfigurationProfile', mode=MODE_TYPE)
    _APN_ConfigurationProfile_defaultContext = INT(name='defaultContext', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ContextId')))
    _APN_ConfigurationProfile_completeDataListIncluded = NULL(name='completeDataListIncluded', mode=MODE_TYPE, opt=True)
    _APN_ConfigurationProfile_epsDataList = SEQ_OF(name='epsDataList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EPS-DataList')))
    _APN_ConfigurationProfile_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _APN_ConfigurationProfile_additionalDefaultContext = INT(name='additionalDefaultContext', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ContextId')), opt=True)
    APN_ConfigurationProfile._cont = ASN1Dict([
        ('defaultContext', _APN_ConfigurationProfile_defaultContext),
        ('completeDataListIncluded', _APN_ConfigurationProfile_completeDataListIncluded),
        ('epsDataList', _APN_ConfigurationProfile_epsDataList),
        ('extensionContainer', _APN_ConfigurationProfile_extensionContainer),
        ('additionalDefaultContext', _APN_ConfigurationProfile_additionalDefaultContext),
        ])
    APN_ConfigurationProfile._ext = ['additionalDefaultContext']
    
    #-----< EPS-DataList >-----#
    EPS_DataList = SEQ_OF(name='EPS-DataList', mode=MODE_TYPE)
    _EPS_DataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN-Configuration')))
    EPS_DataList._cont = _EPS_DataList__item_
    EPS_DataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< maxNumOfAPN-Configurations >-----#
    maxNumOfAPN_Configurations = INT(name='maxNumOfAPN-Configurations', mode=MODE_VALUE)
    maxNumOfAPN_Configurations._val = 50
    
    #-----< APN-Configuration >-----#
    APN_Configuration = SEQ(name='APN-Configuration', mode=MODE_TYPE)
    _APN_Configuration_contextId = INT(name='contextId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ContextId')))
    _APN_Configuration_pdn_Type = OCT_STR(name='pdn-Type', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDN-Type')))
    _APN_Configuration_servedPartyIP_IPv4_Address = OCT_STR(name='servedPartyIP-IPv4-Address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Address')), opt=True)
    _APN_Configuration_apn = OCT_STR(name='apn', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN')))
    _APN_Configuration_eps_qos_Subscribed = SEQ(name='eps-qos-Subscribed', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EPS-QoS-Subscribed')))
    _APN_Configuration_pdn_gw_Identity = SEQ(name='pdn-gw-Identity', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDN-GW-Identity')), opt=True)
    _APN_Configuration_pdn_gw_AllocationType = ENUM(name='pdn-gw-AllocationType', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDN-GW-AllocationType')), opt=True)
    _APN_Configuration_vplmnAddressAllowed = NULL(name='vplmnAddressAllowed', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _APN_Configuration_chargingCharacteristics = OCT_STR(name='chargingCharacteristics', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChargingCharacteristics')), opt=True)
    _APN_Configuration_ambr = SEQ(name='ambr', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AMBR')), opt=True)
    _APN_Configuration_specificAPNInfoList = SEQ_OF(name='specificAPNInfoList', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SpecificAPNInfoList')), opt=True)
    _APN_Configuration_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _APN_Configuration_servedPartyIP_IPv6_Address = OCT_STR(name='servedPartyIP-IPv6-Address', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Address')), opt=True)
    _APN_Configuration_apn_oi_Replacement = OCT_STR(name='apn-oi-Replacement', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN-OI-Replacement')), opt=True)
    _APN_Configuration_sipto_Permission = ENUM(name='sipto-Permission', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SIPTO-Permission')), opt=True)
    _APN_Configuration_lipa_Permission = ENUM(name='lipa-Permission', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LIPA-Permission')), opt=True)
    _APN_Configuration_restoration_Priority = OCT_STR(name='restoration-Priority', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Restoration-Priority')), opt=True)
    _APN_Configuration_sipto_local_network_Permission = ENUM(name='sipto-local-network-Permission', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SIPTO-Local-Network-Permission')), opt=True)
    _APN_Configuration_wlan_offloadability = SEQ(name='wlan-offloadability', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'WLAN-Offloadability')), opt=True)
    _APN_Configuration_non_IP_PDN_Type_Indicator = NULL(name='non-IP-PDN-Type-Indicator', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _APN_Configuration_nIDD_Mechanism = ENUM(name='nIDD-Mechanism', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'NIDD-Mechanism')), opt=True)
    _APN_Configuration_sCEF_ID = OCT_STR(name='sCEF-ID', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'FQDN')), opt=True)
    APN_Configuration._cont = ASN1Dict([
        ('contextId', _APN_Configuration_contextId),
        ('pdn-Type', _APN_Configuration_pdn_Type),
        ('servedPartyIP-IPv4-Address', _APN_Configuration_servedPartyIP_IPv4_Address),
        ('apn', _APN_Configuration_apn),
        ('eps-qos-Subscribed', _APN_Configuration_eps_qos_Subscribed),
        ('pdn-gw-Identity', _APN_Configuration_pdn_gw_Identity),
        ('pdn-gw-AllocationType', _APN_Configuration_pdn_gw_AllocationType),
        ('vplmnAddressAllowed', _APN_Configuration_vplmnAddressAllowed),
        ('chargingCharacteristics', _APN_Configuration_chargingCharacteristics),
        ('ambr', _APN_Configuration_ambr),
        ('specificAPNInfoList', _APN_Configuration_specificAPNInfoList),
        ('extensionContainer', _APN_Configuration_extensionContainer),
        ('servedPartyIP-IPv6-Address', _APN_Configuration_servedPartyIP_IPv6_Address),
        ('apn-oi-Replacement', _APN_Configuration_apn_oi_Replacement),
        ('sipto-Permission', _APN_Configuration_sipto_Permission),
        ('lipa-Permission', _APN_Configuration_lipa_Permission),
        ('restoration-Priority', _APN_Configuration_restoration_Priority),
        ('sipto-local-network-Permission', _APN_Configuration_sipto_local_network_Permission),
        ('wlan-offloadability', _APN_Configuration_wlan_offloadability),
        ('non-IP-PDN-Type-Indicator', _APN_Configuration_non_IP_PDN_Type_Indicator),
        ('nIDD-Mechanism', _APN_Configuration_nIDD_Mechanism),
        ('sCEF-ID', _APN_Configuration_sCEF_ID),
        ])
    APN_Configuration._ext = ['apn-oi-Replacement', 'sipto-Permission', 'lipa-Permission', 'restoration-Priority', 'sipto-local-network-Permission', 'wlan-offloadability', 'non-IP-PDN-Type-Indicator', 'nIDD-Mechanism', 'sCEF-ID']
    
    #-----< NIDD-Mechanism >-----#
    NIDD_Mechanism = ENUM(name='NIDD-Mechanism', mode=MODE_TYPE)
    NIDD_Mechanism._cont = ASN1Dict([('sGi-based-data-delivery', 0), ('sCEF-based-data-delivery', 1)])
    NIDD_Mechanism._ext = None
    
    #-----< PDN-Type >-----#
    PDN_Type = OCT_STR(name='PDN-Type', mode=MODE_TYPE)
    PDN_Type._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< EPS-QoS-Subscribed >-----#
    EPS_QoS_Subscribed = SEQ(name='EPS-QoS-Subscribed', mode=MODE_TYPE)
    _EPS_QoS_Subscribed_qos_Class_Identifier = INT(name='qos-Class-Identifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'QoS-Class-Identifier')))
    _EPS_QoS_Subscribed_allocation_Retention_Priority = SEQ(name='allocation-Retention-Priority', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Allocation-Retention-Priority')))
    _EPS_QoS_Subscribed_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    EPS_QoS_Subscribed._cont = ASN1Dict([
        ('qos-Class-Identifier', _EPS_QoS_Subscribed_qos_Class_Identifier),
        ('allocation-Retention-Priority', _EPS_QoS_Subscribed_allocation_Retention_Priority),
        ('extensionContainer', _EPS_QoS_Subscribed_extensionContainer),
        ])
    EPS_QoS_Subscribed._ext = []
    
    #-----< AMBR >-----#
    AMBR = SEQ(name='AMBR', mode=MODE_TYPE)
    _AMBR_max_RequestedBandwidth_UL = INT(name='max-RequestedBandwidth-UL', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Bandwidth')))
    _AMBR_max_RequestedBandwidth_DL = INT(name='max-RequestedBandwidth-DL', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Bandwidth')))
    _AMBR_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    AMBR._cont = ASN1Dict([
        ('max-RequestedBandwidth-UL', _AMBR_max_RequestedBandwidth_UL),
        ('max-RequestedBandwidth-DL', _AMBR_max_RequestedBandwidth_DL),
        ('extensionContainer', _AMBR_extensionContainer),
        ])
    AMBR._ext = []
    
    #-----< SpecificAPNInfoList >-----#
    SpecificAPNInfoList = SEQ_OF(name='SpecificAPNInfoList', mode=MODE_TYPE)
    _SpecificAPNInfoList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SpecificAPNInfo')))
    SpecificAPNInfoList._cont = _SpecificAPNInfoList__item_
    SpecificAPNInfoList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< maxNumOfSpecificAPNInfos >-----#
    maxNumOfSpecificAPNInfos = INT(name='maxNumOfSpecificAPNInfos', mode=MODE_VALUE)
    maxNumOfSpecificAPNInfos._val = 50
    
    #-----< SpecificAPNInfo >-----#
    SpecificAPNInfo = SEQ(name='SpecificAPNInfo', mode=MODE_TYPE)
    _SpecificAPNInfo_apn = OCT_STR(name='apn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN')))
    _SpecificAPNInfo_pdn_gw_Identity = SEQ(name='pdn-gw-Identity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDN-GW-Identity')))
    _SpecificAPNInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SpecificAPNInfo._cont = ASN1Dict([
        ('apn', _SpecificAPNInfo_apn),
        ('pdn-gw-Identity', _SpecificAPNInfo_pdn_gw_Identity),
        ('extensionContainer', _SpecificAPNInfo_extensionContainer),
        ])
    SpecificAPNInfo._ext = []
    
    #-----< Bandwidth >-----#
    Bandwidth = INT(name='Bandwidth', mode=MODE_TYPE)
    
    #-----< QoS-Class-Identifier >-----#
    QoS_Class_Identifier = INT(name='QoS-Class-Identifier', mode=MODE_TYPE)
    QoS_Class_Identifier._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    
    #-----< Allocation-Retention-Priority >-----#
    Allocation_Retention_Priority = SEQ(name='Allocation-Retention-Priority', mode=MODE_TYPE)
    _Allocation_Retention_Priority_priority_level = INT(name='priority-level', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Allocation_Retention_Priority_pre_emption_capability = BOOL(name='pre-emption-capability', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Allocation_Retention_Priority_pre_emption_vulnerability = BOOL(name='pre-emption-vulnerability', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Allocation_Retention_Priority_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    Allocation_Retention_Priority._cont = ASN1Dict([
        ('priority-level', _Allocation_Retention_Priority_priority_level),
        ('pre-emption-capability', _Allocation_Retention_Priority_pre_emption_capability),
        ('pre-emption-vulnerability', _Allocation_Retention_Priority_pre_emption_vulnerability),
        ('extensionContainer', _Allocation_Retention_Priority_extensionContainer),
        ])
    Allocation_Retention_Priority._ext = []
    
    #-----< PDN-GW-Identity >-----#
    PDN_GW_Identity = SEQ(name='PDN-GW-Identity', mode=MODE_TYPE)
    _PDN_GW_Identity_pdn_gw_ipv4_Address = OCT_STR(name='pdn-gw-ipv4-Address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Address')), opt=True)
    _PDN_GW_Identity_pdn_gw_ipv6_Address = OCT_STR(name='pdn-gw-ipv6-Address', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Address')), opt=True)
    _PDN_GW_Identity_pdn_gw_name = OCT_STR(name='pdn-gw-name', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'FQDN')), opt=True)
    _PDN_GW_Identity_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    PDN_GW_Identity._cont = ASN1Dict([
        ('pdn-gw-ipv4-Address', _PDN_GW_Identity_pdn_gw_ipv4_Address),
        ('pdn-gw-ipv6-Address', _PDN_GW_Identity_pdn_gw_ipv6_Address),
        ('pdn-gw-name', _PDN_GW_Identity_pdn_gw_name),
        ('extensionContainer', _PDN_GW_Identity_extensionContainer),
        ])
    PDN_GW_Identity._ext = []
    
    #-----< FQDN >-----#
    FQDN = OCT_STR(name='FQDN', mode=MODE_TYPE)
    FQDN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=9, ub=255)], ev=None, er=[])
    
    #-----< PDN-GW-AllocationType >-----#
    PDN_GW_AllocationType = ENUM(name='PDN-GW-AllocationType', mode=MODE_TYPE)
    PDN_GW_AllocationType._cont = ASN1Dict([('static', 0), ('dynamic', 1)])
    PDN_GW_AllocationType._ext = None
    
    #-----< WLAN-Offloadability >-----#
    WLAN_Offloadability = SEQ(name='WLAN-Offloadability', mode=MODE_TYPE)
    _WLAN_Offloadability_wlan_offloadability_EUTRAN = ENUM(name='wlan-offloadability-EUTRAN', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'WLAN-Offloadability-Indication')), opt=True)
    _WLAN_Offloadability_wlan_offloadability_UTRAN = ENUM(name='wlan-offloadability-UTRAN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'WLAN-Offloadability-Indication')), opt=True)
    _WLAN_Offloadability_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    WLAN_Offloadability._cont = ASN1Dict([
        ('wlan-offloadability-EUTRAN', _WLAN_Offloadability_wlan_offloadability_EUTRAN),
        ('wlan-offloadability-UTRAN', _WLAN_Offloadability_wlan_offloadability_UTRAN),
        ('extensionContainer', _WLAN_Offloadability_extensionContainer),
        ])
    WLAN_Offloadability._ext = []
    
    #-----< WLAN-Offloadability-Indication >-----#
    WLAN_Offloadability_Indication = ENUM(name='WLAN-Offloadability-Indication', mode=MODE_TYPE)
    WLAN_Offloadability_Indication._cont = ASN1Dict([('notAllowed', 0), ('allowed', 1)])
    WLAN_Offloadability_Indication._ext = None
    
    #-----< AccessRestrictionData >-----#
    AccessRestrictionData = BIT_STR(name='AccessRestrictionData', mode=MODE_TYPE)
    AccessRestrictionData._cont = ASN1Dict([('utranNotAllowed', 0), ('geranNotAllowed', 1), ('ganNotAllowed', 2), ('i-hspa-evolutionNotAllowed', 3), ('wb-e-utranNotAllowed', 4), ('ho-toNon3GPP-AccessNotAllowed', 5), ('nb-iotNotAllowed', 6)])
    AccessRestrictionData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=8)], ev=None, er=[])
    
    #-----< AdjacentAccessRestrictionDataList >-----#
    AdjacentAccessRestrictionDataList = SEQ_OF(name='AdjacentAccessRestrictionDataList', mode=MODE_TYPE)
    _AdjacentAccessRestrictionDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdjacentAccessRestrictionData')))
    AdjacentAccessRestrictionDataList._cont = _AdjacentAccessRestrictionDataList__item_
    AdjacentAccessRestrictionDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< AdjacentAccessRestrictionData >-----#
    AdjacentAccessRestrictionData = SEQ(name='AdjacentAccessRestrictionData', mode=MODE_TYPE)
    _AdjacentAccessRestrictionData_plmnId = OCT_STR(name='plmnId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')))
    _AdjacentAccessRestrictionData_accessRestrictionData = BIT_STR(name='accessRestrictionData', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AccessRestrictionData')))
    AdjacentAccessRestrictionData._cont = ASN1Dict([
        ('plmnId', _AdjacentAccessRestrictionData_plmnId),
        ('accessRestrictionData', _AdjacentAccessRestrictionData_accessRestrictionData),
        ])
    AdjacentAccessRestrictionData._ext = []
    
    #-----< CS-AllocationRetentionPriority >-----#
    CS_AllocationRetentionPriority = OCT_STR(name='CS-AllocationRetentionPriority', mode=MODE_TYPE)
    CS_AllocationRetentionPriority._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< IST-AlertTimerValue >-----#
    IST_AlertTimerValue = INT(name='IST-AlertTimerValue', mode=MODE_TYPE)
    IST_AlertTimerValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=15, ub=255)], ev=None, er=[])
    
    #-----< LCSInformation >-----#
    LCSInformation = SEQ(name='LCSInformation', mode=MODE_TYPE)
    _LCSInformation_gmlc_List = SEQ_OF(name='gmlc-List', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GMLC-List')), opt=True)
    _LCSInformation_lcs_PrivacyExceptionList = SEQ_OF(name='lcs-PrivacyExceptionList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LCS-PrivacyExceptionList')), opt=True)
    _LCSInformation_molr_List = SEQ_OF(name='molr-List', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MOLR-List')), opt=True)
    _LCSInformation_add_lcs_PrivacyExceptionList = SEQ_OF(name='add-lcs-PrivacyExceptionList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LCS-PrivacyExceptionList')), opt=True)
    LCSInformation._cont = ASN1Dict([
        ('gmlc-List', _LCSInformation_gmlc_List),
        ('lcs-PrivacyExceptionList', _LCSInformation_lcs_PrivacyExceptionList),
        ('molr-List', _LCSInformation_molr_List),
        ('add-lcs-PrivacyExceptionList', _LCSInformation_add_lcs_PrivacyExceptionList),
        ])
    LCSInformation._ext = ['add-lcs-PrivacyExceptionList']
    
    #-----< GMLC-List >-----#
    GMLC_List = SEQ_OF(name='GMLC-List', mode=MODE_TYPE)
    _GMLC_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    GMLC_List._cont = _GMLC_List__item_
    GMLC_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< maxNumOfGMLC >-----#
    maxNumOfGMLC = INT(name='maxNumOfGMLC', mode=MODE_VALUE)
    maxNumOfGMLC._val = 5
    
    #-----< NetworkAccessMode >-----#
    NetworkAccessMode = ENUM(name='NetworkAccessMode', mode=MODE_TYPE)
    NetworkAccessMode._cont = ASN1Dict([('packetAndCircuit', 0), ('onlyCircuit', 1), ('onlyPacket', 2)])
    NetworkAccessMode._ext = []
    
    #-----< GPRSDataList >-----#
    GPRSDataList = SEQ_OF(name='GPRSDataList', mode=MODE_TYPE)
    _GPRSDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Context')))
    GPRSDataList._cont = _GPRSDataList__item_
    GPRSDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< maxNumOfPDP-Contexts >-----#
    maxNumOfPDP_Contexts = INT(name='maxNumOfPDP-Contexts', mode=MODE_VALUE)
    maxNumOfPDP_Contexts._val = 50
    
    #-----< PDP-Context >-----#
    PDP_Context = SEQ(name='PDP-Context', mode=MODE_TYPE)
    _PDP_Context_pdp_ContextId = INT(name='pdp-ContextId', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ContextId')))
    _PDP_Context_pdp_Type = OCT_STR(name='pdp-Type', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Type')))
    _PDP_Context_pdp_Address = OCT_STR(name='pdp-Address', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Address')), opt=True)
    _PDP_Context_qos_Subscribed = OCT_STR(name='qos-Subscribed', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'QoS-Subscribed')))
    _PDP_Context_vplmnAddressAllowed = NULL(name='vplmnAddressAllowed', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PDP_Context_apn = OCT_STR(name='apn', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN')))
    _PDP_Context_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _PDP_Context_ext_QoS_Subscribed = OCT_STR(name='ext-QoS-Subscribed', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-QoS-Subscribed')), opt=True)
    _PDP_Context_pdp_ChargingCharacteristics = OCT_STR(name='pdp-ChargingCharacteristics', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChargingCharacteristics')), opt=True)
    _PDP_Context_ext2_QoS_Subscribed = OCT_STR(name='ext2-QoS-Subscribed', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext2-QoS-Subscribed')), opt=True)
    _PDP_Context_ext3_QoS_Subscribed = OCT_STR(name='ext3-QoS-Subscribed', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext3-QoS-Subscribed')), opt=True)
    _PDP_Context_ext4_QoS_Subscribed = OCT_STR(name='ext4-QoS-Subscribed', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext4-QoS-Subscribed')), opt=True)
    _PDP_Context_apn_oi_Replacement = OCT_STR(name='apn-oi-Replacement', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN-OI-Replacement')), opt=True)
    _PDP_Context_ext_pdp_Type = OCT_STR(name='ext-pdp-Type', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-PDP-Type')), opt=True)
    _PDP_Context_ext_pdp_Address = OCT_STR(name='ext-pdp-Address', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Address')), opt=True)
    _PDP_Context_ambr = SEQ(name='ambr', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AMBR')), opt=True)
    _PDP_Context_sipto_Permission = ENUM(name='sipto-Permission', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SIPTO-Permission')), opt=True)
    _PDP_Context_lipa_Permission = ENUM(name='lipa-Permission', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LIPA-Permission')), opt=True)
    _PDP_Context_restoration_Priority = OCT_STR(name='restoration-Priority', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Restoration-Priority')), opt=True)
    _PDP_Context_sipto_local_network_Permission = ENUM(name='sipto-local-network-Permission', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SIPTO-Local-Network-Permission')), opt=True)
    PDP_Context._cont = ASN1Dict([
        ('pdp-ContextId', _PDP_Context_pdp_ContextId),
        ('pdp-Type', _PDP_Context_pdp_Type),
        ('pdp-Address', _PDP_Context_pdp_Address),
        ('qos-Subscribed', _PDP_Context_qos_Subscribed),
        ('vplmnAddressAllowed', _PDP_Context_vplmnAddressAllowed),
        ('apn', _PDP_Context_apn),
        ('extensionContainer', _PDP_Context_extensionContainer),
        ('ext-QoS-Subscribed', _PDP_Context_ext_QoS_Subscribed),
        ('pdp-ChargingCharacteristics', _PDP_Context_pdp_ChargingCharacteristics),
        ('ext2-QoS-Subscribed', _PDP_Context_ext2_QoS_Subscribed),
        ('ext3-QoS-Subscribed', _PDP_Context_ext3_QoS_Subscribed),
        ('ext4-QoS-Subscribed', _PDP_Context_ext4_QoS_Subscribed),
        ('apn-oi-Replacement', _PDP_Context_apn_oi_Replacement),
        ('ext-pdp-Type', _PDP_Context_ext_pdp_Type),
        ('ext-pdp-Address', _PDP_Context_ext_pdp_Address),
        ('ambr', _PDP_Context_ambr),
        ('sipto-Permission', _PDP_Context_sipto_Permission),
        ('lipa-Permission', _PDP_Context_lipa_Permission),
        ('restoration-Priority', _PDP_Context_restoration_Priority),
        ('sipto-local-network-Permission', _PDP_Context_sipto_local_network_Permission),
        ])
    PDP_Context._ext = ['ext-QoS-Subscribed', 'pdp-ChargingCharacteristics', 'ext2-QoS-Subscribed', 'ext3-QoS-Subscribed', 'ext4-QoS-Subscribed', 'apn-oi-Replacement', 'ext-pdp-Type', 'ext-pdp-Address', 'ambr', 'sipto-Permission', 'lipa-Permission', 'restoration-Priority', 'sipto-local-network-Permission']
    
    #-----< Restoration-Priority >-----#
    Restoration_Priority = OCT_STR(name='Restoration-Priority', mode=MODE_TYPE)
    Restoration_Priority._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< SIPTO-Permission >-----#
    SIPTO_Permission = ENUM(name='SIPTO-Permission', mode=MODE_TYPE)
    SIPTO_Permission._cont = ASN1Dict([('siptoAboveRanAllowed', 0), ('siptoAboveRanNotAllowed', 1)])
    SIPTO_Permission._ext = None
    
    #-----< SIPTO-Local-Network-Permission >-----#
    SIPTO_Local_Network_Permission = ENUM(name='SIPTO-Local-Network-Permission', mode=MODE_TYPE)
    SIPTO_Local_Network_Permission._cont = ASN1Dict([('siptoAtLocalNetworkAllowed', 0), ('siptoAtLocalNetworkNotAllowed', 1)])
    SIPTO_Local_Network_Permission._ext = None
    
    #-----< LIPA-Permission >-----#
    LIPA_Permission = ENUM(name='LIPA-Permission', mode=MODE_TYPE)
    LIPA_Permission._cont = ASN1Dict([('lipaProhibited', 0), ('lipaOnly', 1), ('lipaConditional', 2)])
    LIPA_Permission._ext = None
    
    #-----< ContextId >-----#
    ContextId = INT(name='ContextId', mode=MODE_TYPE)
    ContextId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< GPRSSubscriptionData >-----#
    GPRSSubscriptionData = SEQ(name='GPRSSubscriptionData', mode=MODE_TYPE)
    _GPRSSubscriptionData_completeDataListIncluded = NULL(name='completeDataListIncluded', mode=MODE_TYPE, opt=True)
    _GPRSSubscriptionData_gprsDataList = SEQ_OF(name='gprsDataList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRSDataList')))
    _GPRSSubscriptionData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _GPRSSubscriptionData_apn_oi_Replacement = OCT_STR(name='apn-oi-Replacement', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN-OI-Replacement')), opt=True)
    GPRSSubscriptionData._cont = ASN1Dict([
        ('completeDataListIncluded', _GPRSSubscriptionData_completeDataListIncluded),
        ('gprsDataList', _GPRSSubscriptionData_gprsDataList),
        ('extensionContainer', _GPRSSubscriptionData_extensionContainer),
        ('apn-oi-Replacement', _GPRSSubscriptionData_apn_oi_Replacement),
        ])
    GPRSSubscriptionData._ext = ['apn-oi-Replacement']
    
    #-----< SGSN-CAMEL-SubscriptionInfo >-----#
    SGSN_CAMEL_SubscriptionInfo = SEQ(name='SGSN-CAMEL-SubscriptionInfo', mode=MODE_TYPE)
    _SGSN_CAMEL_SubscriptionInfo_gprs_CSI = SEQ(name='gprs-CSI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRS-CSI')), opt=True)
    _SGSN_CAMEL_SubscriptionInfo_mo_sms_CSI = SEQ(name='mo-sms-CSI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-CSI')), opt=True)
    _SGSN_CAMEL_SubscriptionInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SGSN_CAMEL_SubscriptionInfo_mt_sms_CSI = SEQ(name='mt-sms-CSI', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-CSI')), opt=True)
    _SGSN_CAMEL_SubscriptionInfo_mt_smsCAMELTDP_CriteriaList = SEQ_OF(name='mt-smsCAMELTDP-CriteriaList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MT-smsCAMELTDP-CriteriaList')), opt=True)
    _SGSN_CAMEL_SubscriptionInfo_mg_csi = SEQ(name='mg-csi', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MG-CSI')), opt=True)
    SGSN_CAMEL_SubscriptionInfo._cont = ASN1Dict([
        ('gprs-CSI', _SGSN_CAMEL_SubscriptionInfo_gprs_CSI),
        ('mo-sms-CSI', _SGSN_CAMEL_SubscriptionInfo_mo_sms_CSI),
        ('extensionContainer', _SGSN_CAMEL_SubscriptionInfo_extensionContainer),
        ('mt-sms-CSI', _SGSN_CAMEL_SubscriptionInfo_mt_sms_CSI),
        ('mt-smsCAMELTDP-CriteriaList', _SGSN_CAMEL_SubscriptionInfo_mt_smsCAMELTDP_CriteriaList),
        ('mg-csi', _SGSN_CAMEL_SubscriptionInfo_mg_csi),
        ])
    SGSN_CAMEL_SubscriptionInfo._ext = ['mt-sms-CSI', 'mt-smsCAMELTDP-CriteriaList', 'mg-csi']
    
    #-----< GPRS-CSI >-----#
    GPRS_CSI = SEQ(name='GPRS-CSI', mode=MODE_TYPE)
    _GPRS_CSI_gprs_CamelTDPDataList = SEQ_OF(name='gprs-CamelTDPDataList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRS-CamelTDPDataList')), opt=True)
    _GPRS_CSI_camelCapabilityHandling = INT(name='camelCapabilityHandling', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CamelCapabilityHandling')), opt=True)
    _GPRS_CSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _GPRS_CSI_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GPRS_CSI_csi_Active = NULL(name='csi-Active', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    GPRS_CSI._cont = ASN1Dict([
        ('gprs-CamelTDPDataList', _GPRS_CSI_gprs_CamelTDPDataList),
        ('camelCapabilityHandling', _GPRS_CSI_camelCapabilityHandling),
        ('extensionContainer', _GPRS_CSI_extensionContainer),
        ('notificationToCSE', _GPRS_CSI_notificationToCSE),
        ('csi-Active', _GPRS_CSI_csi_Active),
        ])
    GPRS_CSI._ext = []
    
    #-----< GPRS-CamelTDPDataList >-----#
    GPRS_CamelTDPDataList = SEQ_OF(name='GPRS-CamelTDPDataList', mode=MODE_TYPE)
    _GPRS_CamelTDPDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRS-CamelTDPData')))
    GPRS_CamelTDPDataList._cont = _GPRS_CamelTDPDataList__item_
    GPRS_CamelTDPDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< GPRS-CamelTDPData >-----#
    GPRS_CamelTDPData = SEQ(name='GPRS-CamelTDPData', mode=MODE_TYPE)
    _GPRS_CamelTDPData_gprs_TriggerDetectionPoint = ENUM(name='gprs-TriggerDetectionPoint', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRS-TriggerDetectionPoint')))
    _GPRS_CamelTDPData_serviceKey = INT(name='serviceKey', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceKey')))
    _GPRS_CamelTDPData_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _GPRS_CamelTDPData_defaultSessionHandling = ENUM(name='defaultSessionHandling', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DefaultGPRS-Handling')))
    _GPRS_CamelTDPData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    GPRS_CamelTDPData._cont = ASN1Dict([
        ('gprs-TriggerDetectionPoint', _GPRS_CamelTDPData_gprs_TriggerDetectionPoint),
        ('serviceKey', _GPRS_CamelTDPData_serviceKey),
        ('gsmSCF-Address', _GPRS_CamelTDPData_gsmSCF_Address),
        ('defaultSessionHandling', _GPRS_CamelTDPData_defaultSessionHandling),
        ('extensionContainer', _GPRS_CamelTDPData_extensionContainer),
        ])
    GPRS_CamelTDPData._ext = []
    
    #-----< DefaultGPRS-Handling >-----#
    DefaultGPRS_Handling = ENUM(name='DefaultGPRS-Handling', mode=MODE_TYPE)
    DefaultGPRS_Handling._cont = ASN1Dict([('continueTransaction', 0), ('releaseTransaction', 1)])
    DefaultGPRS_Handling._ext = []
    
    #-----< GPRS-TriggerDetectionPoint >-----#
    GPRS_TriggerDetectionPoint = ENUM(name='GPRS-TriggerDetectionPoint', mode=MODE_TYPE)
    GPRS_TriggerDetectionPoint._cont = ASN1Dict([('attach', 1), ('attachChangeOfPosition', 2), ('pdp-ContextEstablishment', 11), ('pdp-ContextEstablishmentAcknowledgement', 12), ('pdp-ContextChangeOfPosition', 14)])
    GPRS_TriggerDetectionPoint._ext = []
    
    #-----< APN >-----#
    APN = OCT_STR(name='APN', mode=MODE_TYPE)
    APN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=63)], ev=None, er=[])
    
    #-----< PDP-Type >-----#
    PDP_Type = OCT_STR(name='PDP-Type', mode=MODE_TYPE)
    PDP_Type._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< Ext-PDP-Type >-----#
    Ext_PDP_Type = OCT_STR(name='Ext-PDP-Type', mode=MODE_TYPE)
    Ext_PDP_Type._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< PDP-Address >-----#
    PDP_Address = OCT_STR(name='PDP-Address', mode=MODE_TYPE)
    PDP_Address._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< QoS-Subscribed >-----#
    QoS_Subscribed = OCT_STR(name='QoS-Subscribed', mode=MODE_TYPE)
    QoS_Subscribed._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< Ext-QoS-Subscribed >-----#
    Ext_QoS_Subscribed = OCT_STR(name='Ext-QoS-Subscribed', mode=MODE_TYPE)
    Ext_QoS_Subscribed._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    
    #-----< Ext2-QoS-Subscribed >-----#
    Ext2_QoS_Subscribed = OCT_STR(name='Ext2-QoS-Subscribed', mode=MODE_TYPE)
    Ext2_QoS_Subscribed._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< Ext3-QoS-Subscribed >-----#
    Ext3_QoS_Subscribed = OCT_STR(name='Ext3-QoS-Subscribed', mode=MODE_TYPE)
    Ext3_QoS_Subscribed._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    
    #-----< Ext4-QoS-Subscribed >-----#
    Ext4_QoS_Subscribed = OCT_STR(name='Ext4-QoS-Subscribed', mode=MODE_TYPE)
    Ext4_QoS_Subscribed._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< ChargingCharacteristics >-----#
    ChargingCharacteristics = OCT_STR(name='ChargingCharacteristics', mode=MODE_TYPE)
    ChargingCharacteristics._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< LSAOnlyAccessIndicator >-----#
    LSAOnlyAccessIndicator = ENUM(name='LSAOnlyAccessIndicator', mode=MODE_TYPE)
    LSAOnlyAccessIndicator._cont = ASN1Dict([('accessOutsideLSAsAllowed', 0), ('accessOutsideLSAsRestricted', 1)])
    LSAOnlyAccessIndicator._ext = None
    
    #-----< LSADataList >-----#
    LSADataList = SEQ_OF(name='LSADataList', mode=MODE_TYPE)
    _LSADataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAData')))
    LSADataList._cont = _LSADataList__item_
    LSADataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< maxNumOfLSAs >-----#
    maxNumOfLSAs = INT(name='maxNumOfLSAs', mode=MODE_VALUE)
    maxNumOfLSAs._val = 20
    
    #-----< LSAData >-----#
    LSAData = SEQ(name='LSAData', mode=MODE_TYPE)
    _LSAData_lsaIdentity = OCT_STR(name='lsaIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAIdentity')))
    _LSAData_lsaAttributes = OCT_STR(name='lsaAttributes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAAttributes')))
    _LSAData_lsaActiveModeIndicator = NULL(name='lsaActiveModeIndicator', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LSAData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    LSAData._cont = ASN1Dict([
        ('lsaIdentity', _LSAData_lsaIdentity),
        ('lsaAttributes', _LSAData_lsaAttributes),
        ('lsaActiveModeIndicator', _LSAData_lsaActiveModeIndicator),
        ('extensionContainer', _LSAData_extensionContainer),
        ])
    LSAData._ext = []
    
    #-----< LSAInformation >-----#
    LSAInformation = SEQ(name='LSAInformation', mode=MODE_TYPE)
    _LSAInformation_completeDataListIncluded = NULL(name='completeDataListIncluded', mode=MODE_TYPE, opt=True)
    _LSAInformation_lsaOnlyAccessIndicator = ENUM(name='lsaOnlyAccessIndicator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAOnlyAccessIndicator')), opt=True)
    _LSAInformation_lsaDataList = SEQ_OF(name='lsaDataList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSADataList')), opt=True)
    _LSAInformation_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    LSAInformation._cont = ASN1Dict([
        ('completeDataListIncluded', _LSAInformation_completeDataListIncluded),
        ('lsaOnlyAccessIndicator', _LSAInformation_lsaOnlyAccessIndicator),
        ('lsaDataList', _LSAInformation_lsaDataList),
        ('extensionContainer', _LSAInformation_extensionContainer),
        ])
    LSAInformation._ext = []
    
    #-----< LSAIdentity >-----#
    LSAIdentity = OCT_STR(name='LSAIdentity', mode=MODE_TYPE)
    LSAIdentity._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< LSAAttributes >-----#
    LSAAttributes = OCT_STR(name='LSAAttributes', mode=MODE_TYPE)
    LSAAttributes._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< SubscriberData >-----#
    SubscriberData = SEQ(name='SubscriberData', mode=MODE_TYPE)
    _SubscriberData_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SubscriberData_category = OCT_STR(name='category', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Category')), opt=True)
    _SubscriberData_subscriberStatus = ENUM(name='subscriberStatus', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SubscriberStatus')), opt=True)
    _SubscriberData_bearerServiceList = SEQ_OF(name='bearerServiceList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BearerServiceList')), opt=True)
    _SubscriberData_teleserviceList = SEQ_OF(name='teleserviceList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TeleserviceList')), opt=True)
    _SubscriberData_provisionedSS = SEQ_OF(name='provisionedSS', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-SS-InfoList')), opt=True)
    _SubscriberData_odb_Data = SEQ(name='odb-Data', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-Data')), opt=True)
    _SubscriberData_roamingRestrictionDueToUnsupportedFeature = NULL(name='roamingRestrictionDueToUnsupportedFeature', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SubscriberData_regionalSubscriptionData = SEQ_OF(name='regionalSubscriptionData', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ZoneCodeList')), opt=True)
    _SubscriberData_vbsSubscriptionData = SEQ_OF(name='vbsSubscriptionData', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'VBSDataList')), opt=True)
    _SubscriberData_vgcsSubscriptionData = SEQ_OF(name='vgcsSubscriptionData', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'VGCSDataList')), opt=True)
    _SubscriberData_vlrCamelSubscriptionInfo = SEQ(name='vlrCamelSubscriptionInfo', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'VlrCamelSubscriptionInfo')), opt=True)
    SubscriberData._cont = ASN1Dict([
        ('msisdn', _SubscriberData_msisdn),
        ('category', _SubscriberData_category),
        ('subscriberStatus', _SubscriberData_subscriberStatus),
        ('bearerServiceList', _SubscriberData_bearerServiceList),
        ('teleserviceList', _SubscriberData_teleserviceList),
        ('provisionedSS', _SubscriberData_provisionedSS),
        ('odb-Data', _SubscriberData_odb_Data),
        ('roamingRestrictionDueToUnsupportedFeature', _SubscriberData_roamingRestrictionDueToUnsupportedFeature),
        ('regionalSubscriptionData', _SubscriberData_regionalSubscriptionData),
        ('vbsSubscriptionData', _SubscriberData_vbsSubscriptionData),
        ('vgcsSubscriptionData', _SubscriberData_vgcsSubscriptionData),
        ('vlrCamelSubscriptionInfo', _SubscriberData_vlrCamelSubscriptionInfo),
        ])
    SubscriberData._ext = None
    
    #-----< Category >-----#
    Category = OCT_STR(name='Category', mode=MODE_TYPE)
    Category._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< SubscriberStatus >-----#
    SubscriberStatus = ENUM(name='SubscriberStatus', mode=MODE_TYPE)
    SubscriberStatus._cont = ASN1Dict([('serviceGranted', 0), ('operatorDeterminedBarring', 1)])
    SubscriberStatus._ext = None
    
    #-----< BearerServiceList >-----#
    BearerServiceList = SEQ_OF(name='BearerServiceList', mode=MODE_TYPE)
    _BearerServiceList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-BS-Code', 'Ext-BearerServiceCode')))
    BearerServiceList._cont = _BearerServiceList__item_
    BearerServiceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< maxNumOfBearerServices >-----#
    maxNumOfBearerServices = INT(name='maxNumOfBearerServices', mode=MODE_VALUE)
    maxNumOfBearerServices._val = 50
    
    #-----< TeleserviceList >-----#
    TeleserviceList = SEQ_OF(name='TeleserviceList', mode=MODE_TYPE)
    _TeleserviceList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-TS-Code', 'Ext-TeleserviceCode')))
    TeleserviceList._cont = _TeleserviceList__item_
    TeleserviceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< maxNumOfTeleservices >-----#
    maxNumOfTeleservices = INT(name='maxNumOfTeleservices', mode=MODE_VALUE)
    maxNumOfTeleservices._val = 20
    
    #-----< ODB-Data >-----#
    ODB_Data = SEQ(name='ODB-Data', mode=MODE_TYPE)
    _ODB_Data_odb_GeneralData = BIT_STR(name='odb-GeneralData', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-GeneralData')))
    _ODB_Data_odb_HPLMN_Data = BIT_STR(name='odb-HPLMN-Data', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-HPLMN-Data')), opt=True)
    _ODB_Data_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ODB_Data._cont = ASN1Dict([
        ('odb-GeneralData', _ODB_Data_odb_GeneralData),
        ('odb-HPLMN-Data', _ODB_Data_odb_HPLMN_Data),
        ('extensionContainer', _ODB_Data_extensionContainer),
        ])
    ODB_Data._ext = []
    
    #-----< ODB-GeneralData >-----#
    ODB_GeneralData = BIT_STR(name='ODB-GeneralData', mode=MODE_TYPE)
    ODB_GeneralData._cont = ASN1Dict([('allOG-CallsBarred', 0), ('internationalOGCallsBarred', 1), ('internationalOGCallsNotToHPLMN-CountryBarred', 2), ('interzonalOGCallsBarred', 6), ('interzonalOGCallsNotToHPLMN-CountryBarred', 7), ('interzonalOGCallsAndInternationalOGCallsNotToHPLMN-CountryBarred', 8), ('premiumRateInformationOGCallsBarred', 3), ('premiumRateEntertainementOGCallsBarred', 4), ('ss-AccessBarred', 5), ('allECT-Barred', 9), ('chargeableECT-Barred', 10), ('internationalECT-Barred', 11), ('interzonalECT-Barred', 12), ('doublyChargeableECT-Barred', 13), ('multipleECT-Barred', 14), ('allPacketOrientedServicesBarred', 15), ('roamerAccessToHPLMN-AP-Barred', 16), ('roamerAccessToVPLMN-AP-Barred', 17), ('roamingOutsidePLMNOG-CallsBarred', 18), ('allIC-CallsBarred', 19), ('roamingOutsidePLMNIC-CallsBarred', 20), ('roamingOutsidePLMNICountryIC-CallsBarred', 21), ('roamingOutsidePLMN-Barred', 22), ('roamingOutsidePLMN-CountryBarred', 23), ('registrationAllCF-Barred', 24), ('registrationCFNotToHPLMN-Barred', 25), ('registrationInterzonalCF-Barred', 26), ('registrationInterzonalCFNotToHPLMN-Barred', 27), ('registrationInternationalCF-Barred', 28)])
    ODB_GeneralData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=15, ub=32)], ev=None, er=[])
    
    #-----< ODB-HPLMN-Data >-----#
    ODB_HPLMN_Data = BIT_STR(name='ODB-HPLMN-Data', mode=MODE_TYPE)
    ODB_HPLMN_Data._cont = ASN1Dict([('plmn-SpecificBarringType1', 0), ('plmn-SpecificBarringType2', 1), ('plmn-SpecificBarringType3', 2), ('plmn-SpecificBarringType4', 3)])
    ODB_HPLMN_Data._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=4, ub=32)], ev=None, er=[])
    
    #-----< Ext-SS-InfoList >-----#
    Ext_SS_InfoList = SEQ_OF(name='Ext-SS-InfoList', mode=MODE_TYPE)
    _Ext_SS_InfoList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-SS-Info')))
    Ext_SS_InfoList._cont = _Ext_SS_InfoList__item_
    Ext_SS_InfoList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=30)], ev=None, er=[])
    
    #-----< Ext-SS-Info >-----#
    Ext_SS_Info = CHOICE(name='Ext-SS-Info', mode=MODE_TYPE)
    _Ext_SS_Info_forwardingInfo = SEQ(name='forwardingInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-ForwInfo')))
    _Ext_SS_Info_callBarringInfo = SEQ(name='callBarringInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-CallBarInfo')))
    _Ext_SS_Info_cug_Info = SEQ(name='cug-Info', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CUG-Info')))
    _Ext_SS_Info_ss_Data = SEQ(name='ss-Data', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-SS-Data')))
    _Ext_SS_Info_emlpp_Info = SEQ(name='emlpp-Info', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Info')))
    Ext_SS_Info._cont = ASN1Dict([
        ('forwardingInfo', _Ext_SS_Info_forwardingInfo),
        ('callBarringInfo', _Ext_SS_Info_callBarringInfo),
        ('cug-Info', _Ext_SS_Info_cug_Info),
        ('ss-Data', _Ext_SS_Info_ss_Data),
        ('emlpp-Info', _Ext_SS_Info_emlpp_Info),
        ])
    Ext_SS_Info._ext = None
    
    #-----< Ext-ForwInfo >-----#
    Ext_ForwInfo = SEQ(name='Ext-ForwInfo', mode=MODE_TYPE)
    _Ext_ForwInfo_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _Ext_ForwInfo_forwardingFeatureList = SEQ_OF(name='forwardingFeatureList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-ForwFeatureList')))
    _Ext_ForwInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    Ext_ForwInfo._cont = ASN1Dict([
        ('ss-Code', _Ext_ForwInfo_ss_Code),
        ('forwardingFeatureList', _Ext_ForwInfo_forwardingFeatureList),
        ('extensionContainer', _Ext_ForwInfo_extensionContainer),
        ])
    Ext_ForwInfo._ext = []
    
    #-----< Ext-ForwFeatureList >-----#
    Ext_ForwFeatureList = SEQ_OF(name='Ext-ForwFeatureList', mode=MODE_TYPE)
    _Ext_ForwFeatureList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-ForwFeature')))
    Ext_ForwFeatureList._cont = _Ext_ForwFeatureList__item_
    Ext_ForwFeatureList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< Ext-ForwFeature >-----#
    Ext_ForwFeature = SEQ(name='Ext-ForwFeature', mode=MODE_TYPE)
    _Ext_ForwFeature_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')), opt=True)
    _Ext_ForwFeature_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _Ext_ForwFeature_forwardedToNumber = OCT_STR(name='forwardedToNumber', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _Ext_ForwFeature_forwardedToSubaddress = OCT_STR(name='forwardedToSubaddress', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-SubaddressString')), opt=True)
    _Ext_ForwFeature_forwardingOptions = OCT_STR(name='forwardingOptions', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-ForwOptions')), opt=True)
    _Ext_ForwFeature_noReplyConditionTime = INT(name='noReplyConditionTime', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-NoRepCondTime')), opt=True)
    _Ext_ForwFeature_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _Ext_ForwFeature_longForwardedToNumber = OCT_STR(name='longForwardedToNumber', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'FTN-AddressString')), opt=True)
    Ext_ForwFeature._cont = ASN1Dict([
        ('basicService', _Ext_ForwFeature_basicService),
        ('ss-Status', _Ext_ForwFeature_ss_Status),
        ('forwardedToNumber', _Ext_ForwFeature_forwardedToNumber),
        ('forwardedToSubaddress', _Ext_ForwFeature_forwardedToSubaddress),
        ('forwardingOptions', _Ext_ForwFeature_forwardingOptions),
        ('noReplyConditionTime', _Ext_ForwFeature_noReplyConditionTime),
        ('extensionContainer', _Ext_ForwFeature_extensionContainer),
        ('longForwardedToNumber', _Ext_ForwFeature_longForwardedToNumber),
        ])
    Ext_ForwFeature._ext = ['longForwardedToNumber']
    
    #-----< Ext-ForwOptions >-----#
    Ext_ForwOptions = OCT_STR(name='Ext-ForwOptions', mode=MODE_TYPE)
    Ext_ForwOptions._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< Ext-NoRepCondTime >-----#
    Ext_NoRepCondTime = INT(name='Ext-NoRepCondTime', mode=MODE_TYPE)
    Ext_NoRepCondTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=100)], ev=None, er=[])
    
    #-----< Ext-CallBarInfo >-----#
    Ext_CallBarInfo = SEQ(name='Ext-CallBarInfo', mode=MODE_TYPE)
    _Ext_CallBarInfo_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _Ext_CallBarInfo_callBarringFeatureList = SEQ_OF(name='callBarringFeatureList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-CallBarFeatureList')))
    _Ext_CallBarInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    Ext_CallBarInfo._cont = ASN1Dict([
        ('ss-Code', _Ext_CallBarInfo_ss_Code),
        ('callBarringFeatureList', _Ext_CallBarInfo_callBarringFeatureList),
        ('extensionContainer', _Ext_CallBarInfo_extensionContainer),
        ])
    Ext_CallBarInfo._ext = []
    
    #-----< Ext-CallBarFeatureList >-----#
    Ext_CallBarFeatureList = SEQ_OF(name='Ext-CallBarFeatureList', mode=MODE_TYPE)
    _Ext_CallBarFeatureList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-CallBarringFeature')))
    Ext_CallBarFeatureList._cont = _Ext_CallBarFeatureList__item_
    Ext_CallBarFeatureList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< Ext-CallBarringFeature >-----#
    Ext_CallBarringFeature = SEQ(name='Ext-CallBarringFeature', mode=MODE_TYPE)
    _Ext_CallBarringFeature_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')), opt=True)
    _Ext_CallBarringFeature_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _Ext_CallBarringFeature_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    Ext_CallBarringFeature._cont = ASN1Dict([
        ('basicService', _Ext_CallBarringFeature_basicService),
        ('ss-Status', _Ext_CallBarringFeature_ss_Status),
        ('extensionContainer', _Ext_CallBarringFeature_extensionContainer),
        ])
    Ext_CallBarringFeature._ext = []
    
    #-----< CUG-Info >-----#
    CUG_Info = SEQ(name='CUG-Info', mode=MODE_TYPE)
    _CUG_Info_cug_SubscriptionList = SEQ_OF(name='cug-SubscriptionList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CUG-SubscriptionList')))
    _CUG_Info_cug_FeatureList = SEQ_OF(name='cug-FeatureList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CUG-FeatureList')), opt=True)
    _CUG_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CUG_Info._cont = ASN1Dict([
        ('cug-SubscriptionList', _CUG_Info_cug_SubscriptionList),
        ('cug-FeatureList', _CUG_Info_cug_FeatureList),
        ('extensionContainer', _CUG_Info_extensionContainer),
        ])
    CUG_Info._ext = []
    
    #-----< CUG-SubscriptionList >-----#
    CUG_SubscriptionList = SEQ_OF(name='CUG-SubscriptionList', mode=MODE_TYPE)
    _CUG_SubscriptionList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CUG-Subscription')))
    CUG_SubscriptionList._cont = _CUG_SubscriptionList__item_
    CUG_SubscriptionList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=10)], ev=None, er=[])
    
    #-----< CUG-Subscription >-----#
    CUG_Subscription = SEQ(name='CUG-Subscription', mode=MODE_TYPE)
    _CUG_Subscription_cug_Index = INT(name='cug-Index', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CUG-Index')))
    _CUG_Subscription_cug_Interlock = OCT_STR(name='cug-Interlock', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CUG-Interlock')))
    _CUG_Subscription_intraCUG_Options = ENUM(name='intraCUG-Options', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'IntraCUG-Options')))
    _CUG_Subscription_basicServiceGroupList = SEQ_OF(name='basicServiceGroupList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-BasicServiceGroupList')), opt=True)
    _CUG_Subscription_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CUG_Subscription._cont = ASN1Dict([
        ('cug-Index', _CUG_Subscription_cug_Index),
        ('cug-Interlock', _CUG_Subscription_cug_Interlock),
        ('intraCUG-Options', _CUG_Subscription_intraCUG_Options),
        ('basicServiceGroupList', _CUG_Subscription_basicServiceGroupList),
        ('extensionContainer', _CUG_Subscription_extensionContainer),
        ])
    CUG_Subscription._ext = []
    
    #-----< CUG-Index >-----#
    CUG_Index = INT(name='CUG-Index', mode=MODE_TYPE)
    CUG_Index._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    
    #-----< CUG-Interlock >-----#
    CUG_Interlock = OCT_STR(name='CUG-Interlock', mode=MODE_TYPE)
    CUG_Interlock._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< IntraCUG-Options >-----#
    IntraCUG_Options = ENUM(name='IntraCUG-Options', mode=MODE_TYPE)
    IntraCUG_Options._cont = ASN1Dict([('noCUG-Restrictions', 0), ('cugIC-CallBarred', 1), ('cugOG-CallBarred', 2)])
    IntraCUG_Options._ext = None
    
    #-----< maxNumOfCUG >-----#
    maxNumOfCUG = INT(name='maxNumOfCUG', mode=MODE_VALUE)
    maxNumOfCUG._val = 10
    
    #-----< CUG-FeatureList >-----#
    CUG_FeatureList = SEQ_OF(name='CUG-FeatureList', mode=MODE_TYPE)
    _CUG_FeatureList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CUG-Feature')))
    CUG_FeatureList._cont = _CUG_FeatureList__item_
    CUG_FeatureList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< Ext-BasicServiceGroupList >-----#
    Ext_BasicServiceGroupList = SEQ_OF(name='Ext-BasicServiceGroupList', mode=MODE_TYPE)
    _Ext_BasicServiceGroupList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')))
    Ext_BasicServiceGroupList._cont = _Ext_BasicServiceGroupList__item_
    Ext_BasicServiceGroupList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< maxNumOfExt-BasicServiceGroups >-----#
    maxNumOfExt_BasicServiceGroups = INT(name='maxNumOfExt-BasicServiceGroups', mode=MODE_VALUE)
    maxNumOfExt_BasicServiceGroups._val = 32
    
    #-----< CUG-Feature >-----#
    CUG_Feature = SEQ(name='CUG-Feature', mode=MODE_TYPE)
    _CUG_Feature_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')), opt=True)
    _CUG_Feature_preferentialCUG_Indicator = INT(name='preferentialCUG-Indicator', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CUG-Index')), opt=True)
    _CUG_Feature_interCUG_Restrictions = OCT_STR(name='interCUG-Restrictions', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'InterCUG-Restrictions')))
    _CUG_Feature_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CUG_Feature._cont = ASN1Dict([
        ('basicService', _CUG_Feature_basicService),
        ('preferentialCUG-Indicator', _CUG_Feature_preferentialCUG_Indicator),
        ('interCUG-Restrictions', _CUG_Feature_interCUG_Restrictions),
        ('extensionContainer', _CUG_Feature_extensionContainer),
        ])
    CUG_Feature._ext = []
    
    #-----< InterCUG-Restrictions >-----#
    InterCUG_Restrictions = OCT_STR(name='InterCUG-Restrictions', mode=MODE_TYPE)
    InterCUG_Restrictions._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< Ext-SS-Data >-----#
    Ext_SS_Data = SEQ(name='Ext-SS-Data', mode=MODE_TYPE)
    _Ext_SS_Data_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _Ext_SS_Data_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _Ext_SS_Data_ss_SubscriptionOption = CHOICE(name='ss-SubscriptionOption', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-SubscriptionOption')), opt=True)
    _Ext_SS_Data_basicServiceGroupList = SEQ_OF(name='basicServiceGroupList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-BasicServiceGroupList')), opt=True)
    _Ext_SS_Data_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    Ext_SS_Data._cont = ASN1Dict([
        ('ss-Code', _Ext_SS_Data_ss_Code),
        ('ss-Status', _Ext_SS_Data_ss_Status),
        ('ss-SubscriptionOption', _Ext_SS_Data_ss_SubscriptionOption),
        ('basicServiceGroupList', _Ext_SS_Data_basicServiceGroupList),
        ('extensionContainer', _Ext_SS_Data_extensionContainer),
        ])
    Ext_SS_Data._ext = []
    
    #-----< LCS-PrivacyExceptionList >-----#
    LCS_PrivacyExceptionList = SEQ_OF(name='LCS-PrivacyExceptionList', mode=MODE_TYPE)
    _LCS_PrivacyExceptionList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'LCS-PrivacyClass')))
    LCS_PrivacyExceptionList._cont = _LCS_PrivacyExceptionList__item_
    LCS_PrivacyExceptionList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    
    #-----< maxNumOfPrivacyClass >-----#
    maxNumOfPrivacyClass = INT(name='maxNumOfPrivacyClass', mode=MODE_VALUE)
    maxNumOfPrivacyClass._val = 4
    
    #-----< LCS-PrivacyClass >-----#
    LCS_PrivacyClass = SEQ(name='LCS-PrivacyClass', mode=MODE_TYPE)
    _LCS_PrivacyClass_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _LCS_PrivacyClass_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _LCS_PrivacyClass_notificationToMSUser = ENUM(name='notificationToMSUser', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'NotificationToMSUser')), opt=True)
    _LCS_PrivacyClass_externalClientList = SEQ_OF(name='externalClientList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ExternalClientList')), opt=True)
    _LCS_PrivacyClass_plmnClientList = SEQ_OF(name='plmnClientList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PLMNClientList')), opt=True)
    _LCS_PrivacyClass_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _LCS_PrivacyClass_ext_externalClientList = SEQ_OF(name='ext-externalClientList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-ExternalClientList')), opt=True)
    _LCS_PrivacyClass_serviceTypeList = SEQ_OF(name='serviceTypeList', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceTypeList')), opt=True)
    LCS_PrivacyClass._cont = ASN1Dict([
        ('ss-Code', _LCS_PrivacyClass_ss_Code),
        ('ss-Status', _LCS_PrivacyClass_ss_Status),
        ('notificationToMSUser', _LCS_PrivacyClass_notificationToMSUser),
        ('externalClientList', _LCS_PrivacyClass_externalClientList),
        ('plmnClientList', _LCS_PrivacyClass_plmnClientList),
        ('extensionContainer', _LCS_PrivacyClass_extensionContainer),
        ('ext-externalClientList', _LCS_PrivacyClass_ext_externalClientList),
        ('serviceTypeList', _LCS_PrivacyClass_serviceTypeList),
        ])
    LCS_PrivacyClass._ext = ['ext-externalClientList', 'serviceTypeList']
    
    #-----< ExternalClientList >-----#
    ExternalClientList = SEQ_OF(name='ExternalClientList', mode=MODE_TYPE)
    _ExternalClientList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ExternalClient')))
    ExternalClientList._cont = _ExternalClientList__item_
    ExternalClientList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=5)], ev=None, er=[])
    
    #-----< maxNumOfExternalClient >-----#
    maxNumOfExternalClient = INT(name='maxNumOfExternalClient', mode=MODE_VALUE)
    maxNumOfExternalClient._val = 5
    
    #-----< PLMNClientList >-----#
    PLMNClientList = SEQ_OF(name='PLMNClientList', mode=MODE_TYPE)
    _PLMNClientList__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSClientInternalID')))
    PLMNClientList._cont = _PLMNClientList__item_
    PLMNClientList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< maxNumOfPLMNClient >-----#
    maxNumOfPLMNClient = INT(name='maxNumOfPLMNClient', mode=MODE_VALUE)
    maxNumOfPLMNClient._val = 5
    
    #-----< Ext-ExternalClientList >-----#
    Ext_ExternalClientList = SEQ_OF(name='Ext-ExternalClientList', mode=MODE_TYPE)
    _Ext_ExternalClientList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ExternalClient')))
    Ext_ExternalClientList._cont = _Ext_ExternalClientList__item_
    Ext_ExternalClientList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=35)], ev=None, er=[])
    
    #-----< maxNumOfExt-ExternalClient >-----#
    maxNumOfExt_ExternalClient = INT(name='maxNumOfExt-ExternalClient', mode=MODE_VALUE)
    maxNumOfExt_ExternalClient._val = 35
    
    #-----< ExternalClient >-----#
    ExternalClient = SEQ(name='ExternalClient', mode=MODE_TYPE)
    _ExternalClient_clientIdentity = SEQ(name='clientIdentity', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSClientExternalID')))
    _ExternalClient_gmlc_Restriction = ENUM(name='gmlc-Restriction', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GMLC-Restriction')), opt=True)
    _ExternalClient_notificationToMSUser = ENUM(name='notificationToMSUser', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'NotificationToMSUser')), opt=True)
    _ExternalClient_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ExternalClient._cont = ASN1Dict([
        ('clientIdentity', _ExternalClient_clientIdentity),
        ('gmlc-Restriction', _ExternalClient_gmlc_Restriction),
        ('notificationToMSUser', _ExternalClient_notificationToMSUser),
        ('extensionContainer', _ExternalClient_extensionContainer),
        ])
    ExternalClient._ext = []
    
    #-----< GMLC-Restriction >-----#
    GMLC_Restriction = ENUM(name='GMLC-Restriction', mode=MODE_TYPE)
    GMLC_Restriction._cont = ASN1Dict([('gmlc-List', 0), ('home-Country', 1)])
    GMLC_Restriction._ext = []
    
    #-----< NotificationToMSUser >-----#
    NotificationToMSUser = ENUM(name='NotificationToMSUser', mode=MODE_TYPE)
    NotificationToMSUser._cont = ASN1Dict([('notifyLocationAllowed', 0), ('notifyAndVerify-LocationAllowedIfNoResponse', 1), ('notifyAndVerify-LocationNotAllowedIfNoResponse', 2), ('locationNotAllowed', 3)])
    NotificationToMSUser._ext = ['locationNotAllowed']
    
    #-----< ServiceTypeList >-----#
    ServiceTypeList = SEQ_OF(name='ServiceTypeList', mode=MODE_TYPE)
    _ServiceTypeList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceType')))
    ServiceTypeList._cont = _ServiceTypeList__item_
    ServiceTypeList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< maxNumOfServiceType >-----#
    maxNumOfServiceType = INT(name='maxNumOfServiceType', mode=MODE_VALUE)
    maxNumOfServiceType._val = 32
    
    #-----< ServiceType >-----#
    ServiceType = SEQ(name='ServiceType', mode=MODE_TYPE)
    _ServiceType_serviceTypeIdentity = INT(name='serviceTypeIdentity', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LCSServiceTypeID')))
    _ServiceType_gmlc_Restriction = ENUM(name='gmlc-Restriction', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GMLC-Restriction')), opt=True)
    _ServiceType_notificationToMSUser = ENUM(name='notificationToMSUser', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'NotificationToMSUser')), opt=True)
    _ServiceType_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ServiceType._cont = ASN1Dict([
        ('serviceTypeIdentity', _ServiceType_serviceTypeIdentity),
        ('gmlc-Restriction', _ServiceType_gmlc_Restriction),
        ('notificationToMSUser', _ServiceType_notificationToMSUser),
        ('extensionContainer', _ServiceType_extensionContainer),
        ])
    ServiceType._ext = []
    
    #-----< MOLR-List >-----#
    MOLR_List = SEQ_OF(name='MOLR-List', mode=MODE_TYPE)
    _MOLR_List__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'MOLR-Class')))
    MOLR_List._cont = _MOLR_List__item_
    MOLR_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< maxNumOfMOLR-Class >-----#
    maxNumOfMOLR_Class = INT(name='maxNumOfMOLR-Class', mode=MODE_VALUE)
    maxNumOfMOLR_Class._val = 3
    
    #-----< MOLR-Class >-----#
    MOLR_Class = SEQ(name='MOLR-Class', mode=MODE_TYPE)
    _MOLR_Class_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _MOLR_Class_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _MOLR_Class_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MOLR_Class._cont = ASN1Dict([
        ('ss-Code', _MOLR_Class_ss_Code),
        ('ss-Status', _MOLR_Class_ss_Status),
        ('extensionContainer', _MOLR_Class_extensionContainer),
        ])
    MOLR_Class._ext = []
    
    #-----< ZoneCodeList >-----#
    ZoneCodeList = SEQ_OF(name='ZoneCodeList', mode=MODE_TYPE)
    _ZoneCodeList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ZoneCode')))
    ZoneCodeList._cont = _ZoneCodeList__item_
    ZoneCodeList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< ZoneCode >-----#
    ZoneCode = OCT_STR(name='ZoneCode', mode=MODE_TYPE)
    ZoneCode._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< maxNumOfZoneCodes >-----#
    maxNumOfZoneCodes = INT(name='maxNumOfZoneCodes', mode=MODE_VALUE)
    maxNumOfZoneCodes._val = 10
    
    #-----< InsertSubscriberDataRes >-----#
    InsertSubscriberDataRes = SEQ(name='InsertSubscriberDataRes', mode=MODE_TYPE)
    _InsertSubscriberDataRes_teleserviceList = SEQ_OF(name='teleserviceList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TeleserviceList')), opt=True)
    _InsertSubscriberDataRes_bearerServiceList = SEQ_OF(name='bearerServiceList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BearerServiceList')), opt=True)
    _InsertSubscriberDataRes_ss_List = SEQ_OF(name='ss-List', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-List')), opt=True)
    _InsertSubscriberDataRes_odb_GeneralData = BIT_STR(name='odb-GeneralData', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-GeneralData')), opt=True)
    _InsertSubscriberDataRes_regionalSubscriptionResponse = ENUM(name='regionalSubscriptionResponse', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RegionalSubscriptionResponse')), opt=True)
    _InsertSubscriberDataRes_supportedCamelPhases = BIT_STR(name='supportedCamelPhases', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedCamelPhases')), opt=True)
    _InsertSubscriberDataRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _InsertSubscriberDataRes_offeredCamel4CSIs = BIT_STR(name='offeredCamel4CSIs', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'OfferedCamel4CSIs')), opt=True)
    _InsertSubscriberDataRes_supportedFeatures = BIT_STR(name='supportedFeatures', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedFeatures')), opt=True)
    InsertSubscriberDataRes._cont = ASN1Dict([
        ('teleserviceList', _InsertSubscriberDataRes_teleserviceList),
        ('bearerServiceList', _InsertSubscriberDataRes_bearerServiceList),
        ('ss-List', _InsertSubscriberDataRes_ss_List),
        ('odb-GeneralData', _InsertSubscriberDataRes_odb_GeneralData),
        ('regionalSubscriptionResponse', _InsertSubscriberDataRes_regionalSubscriptionResponse),
        ('supportedCamelPhases', _InsertSubscriberDataRes_supportedCamelPhases),
        ('extensionContainer', _InsertSubscriberDataRes_extensionContainer),
        ('offeredCamel4CSIs', _InsertSubscriberDataRes_offeredCamel4CSIs),
        ('supportedFeatures', _InsertSubscriberDataRes_supportedFeatures),
        ])
    InsertSubscriberDataRes._ext = ['offeredCamel4CSIs', 'supportedFeatures']
    
    #-----< RegionalSubscriptionResponse >-----#
    RegionalSubscriptionResponse = ENUM(name='RegionalSubscriptionResponse', mode=MODE_TYPE)
    RegionalSubscriptionResponse._cont = ASN1Dict([('networkNode-AreaRestricted', 0), ('tooManyZoneCodes', 1), ('zoneCodesConflict', 2), ('regionalSubscNotSupported', 3)])
    RegionalSubscriptionResponse._ext = None
    
    #-----< DeleteSubscriberDataArg >-----#
    DeleteSubscriberDataArg = SEQ(name='DeleteSubscriberDataArg', mode=MODE_TYPE)
    _DeleteSubscriberDataArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _DeleteSubscriberDataArg_basicServiceList = SEQ_OF(name='basicServiceList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BasicServiceList')), opt=True)
    _DeleteSubscriberDataArg_ss_List = SEQ_OF(name='ss-List', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-List')), opt=True)
    _DeleteSubscriberDataArg_roamingRestrictionDueToUnsupportedFeature = NULL(name='roamingRestrictionDueToUnsupportedFeature', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_regionalSubscriptionIdentifier = OCT_STR(name='regionalSubscriptionIdentifier', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ZoneCode')), opt=True)
    _DeleteSubscriberDataArg_vbsGroupIndication = NULL(name='vbsGroupIndication', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_vgcsGroupIndication = NULL(name='vgcsGroupIndication', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_camelSubscriptionInfoWithdraw = NULL(name='camelSubscriptionInfoWithdraw', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _DeleteSubscriberDataArg_gprsSubscriptionDataWithdraw = CHOICE(name='gprsSubscriptionDataWithdraw', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRSSubscriptionDataWithdraw')), opt=True)
    _DeleteSubscriberDataArg_roamingRestrictedInSgsnDueToUnsuppportedFeature = NULL(name='roamingRestrictedInSgsnDueToUnsuppportedFeature', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_lsaInformationWithdraw = CHOICE(name='lsaInformationWithdraw', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAInformationWithdraw')), opt=True)
    _DeleteSubscriberDataArg_gmlc_ListWithdraw = NULL(name='gmlc-ListWithdraw', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_istInformationWithdraw = NULL(name='istInformationWithdraw', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_specificCSI_Withdraw = BIT_STR(name='specificCSI-Withdraw', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SpecificCSI-Withdraw')), opt=True)
    _DeleteSubscriberDataArg_chargingCharacteristicsWithdraw = NULL(name='chargingCharacteristicsWithdraw', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_stn_srWithdraw = NULL(name='stn-srWithdraw', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_epsSubscriptionDataWithdraw = CHOICE(name='epsSubscriptionDataWithdraw', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EPS-SubscriptionDataWithdraw')), opt=True)
    _DeleteSubscriberDataArg_apn_oi_replacementWithdraw = NULL(name='apn-oi-replacementWithdraw', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_csg_SubscriptionDeleted = NULL(name='csg-SubscriptionDeleted', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_subscribedPeriodicTAU_RAU_TimerWithdraw = NULL(name='subscribedPeriodicTAU-RAU-TimerWithdraw', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_subscribedPeriodicLAU_TimerWithdraw = NULL(name='subscribedPeriodicLAU-TimerWithdraw', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_subscribed_vsrvccWithdraw = NULL(name='subscribed-vsrvccWithdraw', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_vplmn_Csg_SubscriptionDeleted = NULL(name='vplmn-Csg-SubscriptionDeleted', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_additionalMSISDN_Withdraw = NULL(name='additionalMSISDN-Withdraw', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_cs_to_ps_SRVCC_Withdraw = NULL(name='cs-to-ps-SRVCC-Withdraw', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_imsiGroupIdList_Withdraw = NULL(name='imsiGroupIdList-Withdraw', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DeleteSubscriberDataArg_userPlaneIntegrityProtectionWithdraw = NULL(name='userPlaneIntegrityProtectionWithdraw', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    DeleteSubscriberDataArg._cont = ASN1Dict([
        ('imsi', _DeleteSubscriberDataArg_imsi),
        ('basicServiceList', _DeleteSubscriberDataArg_basicServiceList),
        ('ss-List', _DeleteSubscriberDataArg_ss_List),
        ('roamingRestrictionDueToUnsupportedFeature', _DeleteSubscriberDataArg_roamingRestrictionDueToUnsupportedFeature),
        ('regionalSubscriptionIdentifier', _DeleteSubscriberDataArg_regionalSubscriptionIdentifier),
        ('vbsGroupIndication', _DeleteSubscriberDataArg_vbsGroupIndication),
        ('vgcsGroupIndication', _DeleteSubscriberDataArg_vgcsGroupIndication),
        ('camelSubscriptionInfoWithdraw', _DeleteSubscriberDataArg_camelSubscriptionInfoWithdraw),
        ('extensionContainer', _DeleteSubscriberDataArg_extensionContainer),
        ('gprsSubscriptionDataWithdraw', _DeleteSubscriberDataArg_gprsSubscriptionDataWithdraw),
        ('roamingRestrictedInSgsnDueToUnsuppportedFeature', _DeleteSubscriberDataArg_roamingRestrictedInSgsnDueToUnsuppportedFeature),
        ('lsaInformationWithdraw', _DeleteSubscriberDataArg_lsaInformationWithdraw),
        ('gmlc-ListWithdraw', _DeleteSubscriberDataArg_gmlc_ListWithdraw),
        ('istInformationWithdraw', _DeleteSubscriberDataArg_istInformationWithdraw),
        ('specificCSI-Withdraw', _DeleteSubscriberDataArg_specificCSI_Withdraw),
        ('chargingCharacteristicsWithdraw', _DeleteSubscriberDataArg_chargingCharacteristicsWithdraw),
        ('stn-srWithdraw', _DeleteSubscriberDataArg_stn_srWithdraw),
        ('epsSubscriptionDataWithdraw', _DeleteSubscriberDataArg_epsSubscriptionDataWithdraw),
        ('apn-oi-replacementWithdraw', _DeleteSubscriberDataArg_apn_oi_replacementWithdraw),
        ('csg-SubscriptionDeleted', _DeleteSubscriberDataArg_csg_SubscriptionDeleted),
        ('subscribedPeriodicTAU-RAU-TimerWithdraw', _DeleteSubscriberDataArg_subscribedPeriodicTAU_RAU_TimerWithdraw),
        ('subscribedPeriodicLAU-TimerWithdraw', _DeleteSubscriberDataArg_subscribedPeriodicLAU_TimerWithdraw),
        ('subscribed-vsrvccWithdraw', _DeleteSubscriberDataArg_subscribed_vsrvccWithdraw),
        ('vplmn-Csg-SubscriptionDeleted', _DeleteSubscriberDataArg_vplmn_Csg_SubscriptionDeleted),
        ('additionalMSISDN-Withdraw', _DeleteSubscriberDataArg_additionalMSISDN_Withdraw),
        ('cs-to-ps-SRVCC-Withdraw', _DeleteSubscriberDataArg_cs_to_ps_SRVCC_Withdraw),
        ('imsiGroupIdList-Withdraw', _DeleteSubscriberDataArg_imsiGroupIdList_Withdraw),
        ('userPlaneIntegrityProtectionWithdraw', _DeleteSubscriberDataArg_userPlaneIntegrityProtectionWithdraw),
        ])
    DeleteSubscriberDataArg._ext = ['gprsSubscriptionDataWithdraw', 'roamingRestrictedInSgsnDueToUnsuppportedFeature', 'lsaInformationWithdraw', 'gmlc-ListWithdraw', 'istInformationWithdraw', 'specificCSI-Withdraw', 'chargingCharacteristicsWithdraw', 'stn-srWithdraw', 'epsSubscriptionDataWithdraw', 'apn-oi-replacementWithdraw', 'csg-SubscriptionDeleted', 'subscribedPeriodicTAU-RAU-TimerWithdraw', 'subscribedPeriodicLAU-TimerWithdraw', 'subscribed-vsrvccWithdraw', 'vplmn-Csg-SubscriptionDeleted', 'additionalMSISDN-Withdraw', 'cs-to-ps-SRVCC-Withdraw', 'imsiGroupIdList-Withdraw', 'userPlaneIntegrityProtectionWithdraw']
    
    #-----< SpecificCSI-Withdraw >-----#
    SpecificCSI_Withdraw = BIT_STR(name='SpecificCSI-Withdraw', mode=MODE_TYPE)
    SpecificCSI_Withdraw._cont = ASN1Dict([('o-csi', 0), ('ss-csi', 1), ('tif-csi', 2), ('d-csi', 3), ('vt-csi', 4), ('mo-sms-csi', 5), ('m-csi', 6), ('gprs-csi', 7), ('t-csi', 8), ('mt-sms-csi', 9), ('mg-csi', 10), ('o-IM-CSI', 11), ('d-IM-CSI', 12), ('vt-IM-CSI', 13)])
    SpecificCSI_Withdraw._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=8, ub=32)], ev=None, er=[])
    
    #-----< GPRSSubscriptionDataWithdraw >-----#
    GPRSSubscriptionDataWithdraw = CHOICE(name='GPRSSubscriptionDataWithdraw', mode=MODE_TYPE)
    _GPRSSubscriptionDataWithdraw_allGPRSData = NULL(name='allGPRSData', mode=MODE_TYPE)
    _GPRSSubscriptionDataWithdraw_contextIdList = SEQ_OF(name='contextIdList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ContextIdList')))
    GPRSSubscriptionDataWithdraw._cont = ASN1Dict([
        ('allGPRSData', _GPRSSubscriptionDataWithdraw_allGPRSData),
        ('contextIdList', _GPRSSubscriptionDataWithdraw_contextIdList),
        ])
    GPRSSubscriptionDataWithdraw._ext = None
    
    #-----< EPS-SubscriptionDataWithdraw >-----#
    EPS_SubscriptionDataWithdraw = CHOICE(name='EPS-SubscriptionDataWithdraw', mode=MODE_TYPE)
    _EPS_SubscriptionDataWithdraw_allEPS_Data = NULL(name='allEPS-Data', mode=MODE_TYPE)
    _EPS_SubscriptionDataWithdraw_contextIdList = SEQ_OF(name='contextIdList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ContextIdList')))
    EPS_SubscriptionDataWithdraw._cont = ASN1Dict([
        ('allEPS-Data', _EPS_SubscriptionDataWithdraw_allEPS_Data),
        ('contextIdList', _EPS_SubscriptionDataWithdraw_contextIdList),
        ])
    EPS_SubscriptionDataWithdraw._ext = None
    
    #-----< ContextIdList >-----#
    ContextIdList = SEQ_OF(name='ContextIdList', mode=MODE_TYPE)
    _ContextIdList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ContextId')))
    ContextIdList._cont = _ContextIdList__item_
    ContextIdList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< LSAInformationWithdraw >-----#
    LSAInformationWithdraw = CHOICE(name='LSAInformationWithdraw', mode=MODE_TYPE)
    _LSAInformationWithdraw_allLSAData = NULL(name='allLSAData', mode=MODE_TYPE)
    _LSAInformationWithdraw_lsaIdentityList = SEQ_OF(name='lsaIdentityList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAIdentityList')))
    LSAInformationWithdraw._cont = ASN1Dict([
        ('allLSAData', _LSAInformationWithdraw_allLSAData),
        ('lsaIdentityList', _LSAInformationWithdraw_lsaIdentityList),
        ])
    LSAInformationWithdraw._ext = None
    
    #-----< LSAIdentityList >-----#
    LSAIdentityList = SEQ_OF(name='LSAIdentityList', mode=MODE_TYPE)
    _LSAIdentityList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAIdentity')))
    LSAIdentityList._cont = _LSAIdentityList__item_
    LSAIdentityList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< BasicServiceList >-----#
    BasicServiceList = SEQ_OF(name='BasicServiceList', mode=MODE_TYPE)
    _BasicServiceList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')))
    BasicServiceList._cont = _BasicServiceList__item_
    BasicServiceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=70)], ev=None, er=[])
    
    #-----< maxNumOfBasicServices >-----#
    maxNumOfBasicServices = INT(name='maxNumOfBasicServices', mode=MODE_VALUE)
    maxNumOfBasicServices._val = 70
    
    #-----< DeleteSubscriberDataRes >-----#
    DeleteSubscriberDataRes = SEQ(name='DeleteSubscriberDataRes', mode=MODE_TYPE)
    _DeleteSubscriberDataRes_regionalSubscriptionResponse = ENUM(name='regionalSubscriptionResponse', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RegionalSubscriptionResponse')), opt=True)
    _DeleteSubscriberDataRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    DeleteSubscriberDataRes._cont = ASN1Dict([
        ('regionalSubscriptionResponse', _DeleteSubscriberDataRes_regionalSubscriptionResponse),
        ('extensionContainer', _DeleteSubscriberDataRes_extensionContainer),
        ])
    DeleteSubscriberDataRes._ext = []
    
    #-----< VlrCamelSubscriptionInfo >-----#
    VlrCamelSubscriptionInfo = SEQ(name='VlrCamelSubscriptionInfo', mode=MODE_TYPE)
    _VlrCamelSubscriptionInfo_o_CSI = SEQ(name='o-CSI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-CSI')), opt=True)
    _VlrCamelSubscriptionInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _VlrCamelSubscriptionInfo_ss_CSI = SEQ(name='ss-CSI', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SS-CSI')), opt=True)
    _VlrCamelSubscriptionInfo_o_BcsmCamelTDP_CriteriaList = SEQ_OF(name='o-BcsmCamelTDP-CriteriaList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-BcsmCamelTDPCriteriaList')), opt=True)
    _VlrCamelSubscriptionInfo_tif_CSI = NULL(name='tif-CSI', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VlrCamelSubscriptionInfo_m_CSI = SEQ(name='m-CSI', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'M-CSI')), opt=True)
    _VlrCamelSubscriptionInfo_mo_sms_CSI = SEQ(name='mo-sms-CSI', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-CSI')), opt=True)
    _VlrCamelSubscriptionInfo_vt_CSI = SEQ(name='vt-CSI', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-CSI')), opt=True)
    _VlrCamelSubscriptionInfo_t_BCSM_CAMEL_TDP_CriteriaList = SEQ_OF(name='t-BCSM-CAMEL-TDP-CriteriaList', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-BCSM-CAMEL-TDP-CriteriaList')), opt=True)
    _VlrCamelSubscriptionInfo_d_CSI = SEQ(name='d-CSI', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'D-CSI')), opt=True)
    _VlrCamelSubscriptionInfo_mt_sms_CSI = SEQ(name='mt-sms-CSI', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-CSI')), opt=True)
    _VlrCamelSubscriptionInfo_mt_smsCAMELTDP_CriteriaList = SEQ_OF(name='mt-smsCAMELTDP-CriteriaList', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MT-smsCAMELTDP-CriteriaList')), opt=True)
    VlrCamelSubscriptionInfo._cont = ASN1Dict([
        ('o-CSI', _VlrCamelSubscriptionInfo_o_CSI),
        ('extensionContainer', _VlrCamelSubscriptionInfo_extensionContainer),
        ('ss-CSI', _VlrCamelSubscriptionInfo_ss_CSI),
        ('o-BcsmCamelTDP-CriteriaList', _VlrCamelSubscriptionInfo_o_BcsmCamelTDP_CriteriaList),
        ('tif-CSI', _VlrCamelSubscriptionInfo_tif_CSI),
        ('m-CSI', _VlrCamelSubscriptionInfo_m_CSI),
        ('mo-sms-CSI', _VlrCamelSubscriptionInfo_mo_sms_CSI),
        ('vt-CSI', _VlrCamelSubscriptionInfo_vt_CSI),
        ('t-BCSM-CAMEL-TDP-CriteriaList', _VlrCamelSubscriptionInfo_t_BCSM_CAMEL_TDP_CriteriaList),
        ('d-CSI', _VlrCamelSubscriptionInfo_d_CSI),
        ('mt-sms-CSI', _VlrCamelSubscriptionInfo_mt_sms_CSI),
        ('mt-smsCAMELTDP-CriteriaList', _VlrCamelSubscriptionInfo_mt_smsCAMELTDP_CriteriaList),
        ])
    VlrCamelSubscriptionInfo._ext = ['ss-CSI', 'o-BcsmCamelTDP-CriteriaList', 'tif-CSI', 'm-CSI', 'mo-sms-CSI', 'vt-CSI', 't-BCSM-CAMEL-TDP-CriteriaList', 'd-CSI', 'mt-sms-CSI', 'mt-smsCAMELTDP-CriteriaList']
    
    #-----< MT-smsCAMELTDP-CriteriaList >-----#
    MT_smsCAMELTDP_CriteriaList = SEQ_OF(name='MT-smsCAMELTDP-CriteriaList', mode=MODE_TYPE)
    _MT_smsCAMELTDP_CriteriaList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'MT-smsCAMELTDP-Criteria')))
    MT_smsCAMELTDP_CriteriaList._cont = _MT_smsCAMELTDP_CriteriaList__item_
    MT_smsCAMELTDP_CriteriaList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< MT-smsCAMELTDP-Criteria >-----#
    MT_smsCAMELTDP_Criteria = SEQ(name='MT-smsCAMELTDP-Criteria', mode=MODE_TYPE)
    _MT_smsCAMELTDP_Criteria_sms_TriggerDetectionPoint = ENUM(name='sms-TriggerDetectionPoint', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-TriggerDetectionPoint')))
    _MT_smsCAMELTDP_Criteria_tpdu_TypeCriterion = SEQ_OF(name='tpdu-TypeCriterion', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TPDU-TypeCriterion')), opt=True)
    MT_smsCAMELTDP_Criteria._cont = ASN1Dict([
        ('sms-TriggerDetectionPoint', _MT_smsCAMELTDP_Criteria_sms_TriggerDetectionPoint),
        ('tpdu-TypeCriterion', _MT_smsCAMELTDP_Criteria_tpdu_TypeCriterion),
        ])
    MT_smsCAMELTDP_Criteria._ext = []
    
    #-----< TPDU-TypeCriterion >-----#
    TPDU_TypeCriterion = SEQ_OF(name='TPDU-TypeCriterion', mode=MODE_TYPE)
    _TPDU_TypeCriterion__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'MT-SMS-TPDU-Type')))
    TPDU_TypeCriterion._cont = _TPDU_TypeCriterion__item_
    TPDU_TypeCriterion._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< maxNumOfTPDUTypes >-----#
    maxNumOfTPDUTypes = INT(name='maxNumOfTPDUTypes', mode=MODE_VALUE)
    maxNumOfTPDUTypes._val = 5
    
    #-----< MT-SMS-TPDU-Type >-----#
    MT_SMS_TPDU_Type = ENUM(name='MT-SMS-TPDU-Type', mode=MODE_TYPE)
    MT_SMS_TPDU_Type._cont = ASN1Dict([('sms-DELIVER', 0), ('sms-SUBMIT-REPORT', 1), ('sms-STATUS-REPORT', 2)])
    MT_SMS_TPDU_Type._ext = []
    
    #-----< D-CSI >-----#
    D_CSI = SEQ(name='D-CSI', mode=MODE_TYPE)
    _D_CSI_dp_AnalysedInfoCriteriaList = SEQ_OF(name='dp-AnalysedInfoCriteriaList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DP-AnalysedInfoCriteriaList')), opt=True)
    _D_CSI_camelCapabilityHandling = INT(name='camelCapabilityHandling', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CamelCapabilityHandling')), opt=True)
    _D_CSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _D_CSI_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _D_CSI_csi_Active = NULL(name='csi-Active', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    D_CSI._cont = ASN1Dict([
        ('dp-AnalysedInfoCriteriaList', _D_CSI_dp_AnalysedInfoCriteriaList),
        ('camelCapabilityHandling', _D_CSI_camelCapabilityHandling),
        ('extensionContainer', _D_CSI_extensionContainer),
        ('notificationToCSE', _D_CSI_notificationToCSE),
        ('csi-Active', _D_CSI_csi_Active),
        ])
    D_CSI._ext = []
    
    #-----< DP-AnalysedInfoCriteriaList >-----#
    DP_AnalysedInfoCriteriaList = SEQ_OF(name='DP-AnalysedInfoCriteriaList', mode=MODE_TYPE)
    _DP_AnalysedInfoCriteriaList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'DP-AnalysedInfoCriterium')))
    DP_AnalysedInfoCriteriaList._cont = _DP_AnalysedInfoCriteriaList__item_
    DP_AnalysedInfoCriteriaList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< maxNumOfDP-AnalysedInfoCriteria >-----#
    maxNumOfDP_AnalysedInfoCriteria = INT(name='maxNumOfDP-AnalysedInfoCriteria', mode=MODE_VALUE)
    maxNumOfDP_AnalysedInfoCriteria._val = 10
    
    #-----< DP-AnalysedInfoCriterium >-----#
    DP_AnalysedInfoCriterium = SEQ(name='DP-AnalysedInfoCriterium', mode=MODE_TYPE)
    _DP_AnalysedInfoCriterium_dialledNumber = OCT_STR(name='dialledNumber', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _DP_AnalysedInfoCriterium_serviceKey = INT(name='serviceKey', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceKey')))
    _DP_AnalysedInfoCriterium_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _DP_AnalysedInfoCriterium_defaultCallHandling = ENUM(name='defaultCallHandling', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'DefaultCallHandling')))
    _DP_AnalysedInfoCriterium_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    DP_AnalysedInfoCriterium._cont = ASN1Dict([
        ('dialledNumber', _DP_AnalysedInfoCriterium_dialledNumber),
        ('serviceKey', _DP_AnalysedInfoCriterium_serviceKey),
        ('gsmSCF-Address', _DP_AnalysedInfoCriterium_gsmSCF_Address),
        ('defaultCallHandling', _DP_AnalysedInfoCriterium_defaultCallHandling),
        ('extensionContainer', _DP_AnalysedInfoCriterium_extensionContainer),
        ])
    DP_AnalysedInfoCriterium._ext = []
    
    #-----< SS-CSI >-----#
    SS_CSI = SEQ(name='SS-CSI', mode=MODE_TYPE)
    _SS_CSI_ss_CamelData = SEQ(name='ss-CamelData', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SS-CamelData')))
    _SS_CSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SS_CSI_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SS_CSI_csi_Active = NULL(name='csi-Active', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SS_CSI._cont = ASN1Dict([
        ('ss-CamelData', _SS_CSI_ss_CamelData),
        ('extensionContainer', _SS_CSI_extensionContainer),
        ('notificationToCSE', _SS_CSI_notificationToCSE),
        ('csi-Active', _SS_CSI_csi_Active),
        ])
    SS_CSI._ext = ['notificationToCSE', 'csi-Active']
    
    #-----< SS-CamelData >-----#
    SS_CamelData = SEQ(name='SS-CamelData', mode=MODE_TYPE)
    _SS_CamelData_ss_EventList = SEQ_OF(name='ss-EventList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SS-EventList')))
    _SS_CamelData_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _SS_CamelData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SS_CamelData._cont = ASN1Dict([
        ('ss-EventList', _SS_CamelData_ss_EventList),
        ('gsmSCF-Address', _SS_CamelData_gsmSCF_Address),
        ('extensionContainer', _SS_CamelData_extensionContainer),
        ])
    SS_CamelData._ext = []
    
    #-----< SS-EventList >-----#
    SS_EventList = SEQ_OF(name='SS-EventList', mode=MODE_TYPE)
    _SS_EventList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    SS_EventList._cont = _SS_EventList__item_
    SS_EventList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< maxNumOfCamelSSEvents >-----#
    maxNumOfCamelSSEvents = INT(name='maxNumOfCamelSSEvents', mode=MODE_VALUE)
    maxNumOfCamelSSEvents._val = 10
    
    #-----< O-CSI >-----#
    O_CSI = SEQ(name='O-CSI', mode=MODE_TYPE)
    _O_CSI_o_BcsmCamelTDPDataList = SEQ_OF(name='o-BcsmCamelTDPDataList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-BcsmCamelTDPDataList')))
    _O_CSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _O_CSI_camelCapabilityHandling = INT(name='camelCapabilityHandling', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CamelCapabilityHandling')), opt=True)
    _O_CSI_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _O_CSI_csiActive = NULL(name='csiActive', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    O_CSI._cont = ASN1Dict([
        ('o-BcsmCamelTDPDataList', _O_CSI_o_BcsmCamelTDPDataList),
        ('extensionContainer', _O_CSI_extensionContainer),
        ('camelCapabilityHandling', _O_CSI_camelCapabilityHandling),
        ('notificationToCSE', _O_CSI_notificationToCSE),
        ('csiActive', _O_CSI_csiActive),
        ])
    O_CSI._ext = ['camelCapabilityHandling', 'notificationToCSE', 'csiActive']
    
    #-----< O-BcsmCamelTDPDataList >-----#
    O_BcsmCamelTDPDataList = SEQ_OF(name='O-BcsmCamelTDPDataList', mode=MODE_TYPE)
    _O_BcsmCamelTDPDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-BcsmCamelTDPData')))
    O_BcsmCamelTDPDataList._cont = _O_BcsmCamelTDPDataList__item_
    O_BcsmCamelTDPDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< maxNumOfCamelTDPData >-----#
    maxNumOfCamelTDPData = INT(name='maxNumOfCamelTDPData', mode=MODE_VALUE)
    maxNumOfCamelTDPData._val = 10
    
    #-----< O-BcsmCamelTDPData >-----#
    O_BcsmCamelTDPData = SEQ(name='O-BcsmCamelTDPData', mode=MODE_TYPE)
    _O_BcsmCamelTDPData_o_BcsmTriggerDetectionPoint = ENUM(name='o-BcsmTriggerDetectionPoint', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-BcsmTriggerDetectionPoint')))
    _O_BcsmCamelTDPData_serviceKey = INT(name='serviceKey', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceKey')))
    _O_BcsmCamelTDPData_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _O_BcsmCamelTDPData_defaultCallHandling = ENUM(name='defaultCallHandling', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DefaultCallHandling')))
    _O_BcsmCamelTDPData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    O_BcsmCamelTDPData._cont = ASN1Dict([
        ('o-BcsmTriggerDetectionPoint', _O_BcsmCamelTDPData_o_BcsmTriggerDetectionPoint),
        ('serviceKey', _O_BcsmCamelTDPData_serviceKey),
        ('gsmSCF-Address', _O_BcsmCamelTDPData_gsmSCF_Address),
        ('defaultCallHandling', _O_BcsmCamelTDPData_defaultCallHandling),
        ('extensionContainer', _O_BcsmCamelTDPData_extensionContainer),
        ])
    O_BcsmCamelTDPData._ext = []
    
    #-----< ServiceKey >-----#
    ServiceKey = INT(name='ServiceKey', mode=MODE_TYPE)
    ServiceKey._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2147483647)], ev=None, er=[])
    
    #-----< O-BcsmTriggerDetectionPoint >-----#
    O_BcsmTriggerDetectionPoint = ENUM(name='O-BcsmTriggerDetectionPoint', mode=MODE_TYPE)
    O_BcsmTriggerDetectionPoint._cont = ASN1Dict([('collectedInfo', 2), ('routeSelectFailure', 4)])
    O_BcsmTriggerDetectionPoint._ext = ['routeSelectFailure']
    
    #-----< O-BcsmCamelTDPCriteriaList >-----#
    O_BcsmCamelTDPCriteriaList = SEQ_OF(name='O-BcsmCamelTDPCriteriaList', mode=MODE_TYPE)
    _O_BcsmCamelTDPCriteriaList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-BcsmCamelTDP-Criteria')))
    O_BcsmCamelTDPCriteriaList._cont = _O_BcsmCamelTDPCriteriaList__item_
    O_BcsmCamelTDPCriteriaList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< T-BCSM-CAMEL-TDP-CriteriaList >-----#
    T_BCSM_CAMEL_TDP_CriteriaList = SEQ_OF(name='T-BCSM-CAMEL-TDP-CriteriaList', mode=MODE_TYPE)
    _T_BCSM_CAMEL_TDP_CriteriaList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-BCSM-CAMEL-TDP-Criteria')))
    T_BCSM_CAMEL_TDP_CriteriaList._cont = _T_BCSM_CAMEL_TDP_CriteriaList__item_
    T_BCSM_CAMEL_TDP_CriteriaList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< O-BcsmCamelTDP-Criteria >-----#
    O_BcsmCamelTDP_Criteria = SEQ(name='O-BcsmCamelTDP-Criteria', mode=MODE_TYPE)
    _O_BcsmCamelTDP_Criteria_o_BcsmTriggerDetectionPoint = ENUM(name='o-BcsmTriggerDetectionPoint', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-BcsmTriggerDetectionPoint')))
    _O_BcsmCamelTDP_Criteria_destinationNumberCriteria = SEQ(name='destinationNumberCriteria', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DestinationNumberCriteria')), opt=True)
    _O_BcsmCamelTDP_Criteria_basicServiceCriteria = SEQ_OF(name='basicServiceCriteria', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BasicServiceCriteria')), opt=True)
    _O_BcsmCamelTDP_Criteria_callTypeCriteria = ENUM(name='callTypeCriteria', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CallTypeCriteria')), opt=True)
    _O_BcsmCamelTDP_Criteria_o_CauseValueCriteria = SEQ_OF(name='o-CauseValueCriteria', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-CauseValueCriteria')), opt=True)
    _O_BcsmCamelTDP_Criteria_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    O_BcsmCamelTDP_Criteria._cont = ASN1Dict([
        ('o-BcsmTriggerDetectionPoint', _O_BcsmCamelTDP_Criteria_o_BcsmTriggerDetectionPoint),
        ('destinationNumberCriteria', _O_BcsmCamelTDP_Criteria_destinationNumberCriteria),
        ('basicServiceCriteria', _O_BcsmCamelTDP_Criteria_basicServiceCriteria),
        ('callTypeCriteria', _O_BcsmCamelTDP_Criteria_callTypeCriteria),
        ('o-CauseValueCriteria', _O_BcsmCamelTDP_Criteria_o_CauseValueCriteria),
        ('extensionContainer', _O_BcsmCamelTDP_Criteria_extensionContainer),
        ])
    O_BcsmCamelTDP_Criteria._ext = ['o-CauseValueCriteria', 'extensionContainer']
    
    #-----< T-BCSM-CAMEL-TDP-Criteria >-----#
    T_BCSM_CAMEL_TDP_Criteria = SEQ(name='T-BCSM-CAMEL-TDP-Criteria', mode=MODE_TYPE)
    _T_BCSM_CAMEL_TDP_Criteria_t_BCSM_TriggerDetectionPoint = ENUM(name='t-BCSM-TriggerDetectionPoint', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-BcsmTriggerDetectionPoint')))
    _T_BCSM_CAMEL_TDP_Criteria_basicServiceCriteria = SEQ_OF(name='basicServiceCriteria', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BasicServiceCriteria')), opt=True)
    _T_BCSM_CAMEL_TDP_Criteria_t_CauseValueCriteria = SEQ_OF(name='t-CauseValueCriteria', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-CauseValueCriteria')), opt=True)
    T_BCSM_CAMEL_TDP_Criteria._cont = ASN1Dict([
        ('t-BCSM-TriggerDetectionPoint', _T_BCSM_CAMEL_TDP_Criteria_t_BCSM_TriggerDetectionPoint),
        ('basicServiceCriteria', _T_BCSM_CAMEL_TDP_Criteria_basicServiceCriteria),
        ('t-CauseValueCriteria', _T_BCSM_CAMEL_TDP_Criteria_t_CauseValueCriteria),
        ])
    T_BCSM_CAMEL_TDP_Criteria._ext = []
    
    #-----< DestinationNumberCriteria >-----#
    DestinationNumberCriteria = SEQ(name='DestinationNumberCriteria', mode=MODE_TYPE)
    _DestinationNumberCriteria_matchType = ENUM(name='matchType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MatchType')))
    _DestinationNumberCriteria_destinationNumberList = SEQ_OF(name='destinationNumberList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DestinationNumberList')), opt=True)
    _DestinationNumberCriteria_destinationNumberLengthList = SEQ_OF(name='destinationNumberLengthList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DestinationNumberLengthList')), opt=True)
    DestinationNumberCriteria._cont = ASN1Dict([
        ('matchType', _DestinationNumberCriteria_matchType),
        ('destinationNumberList', _DestinationNumberCriteria_destinationNumberList),
        ('destinationNumberLengthList', _DestinationNumberCriteria_destinationNumberLengthList),
        ])
    DestinationNumberCriteria._ext = []
    
    #-----< DestinationNumberList >-----#
    DestinationNumberList = SEQ_OF(name='DestinationNumberList', mode=MODE_TYPE)
    _DestinationNumberList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    DestinationNumberList._cont = _DestinationNumberList__item_
    DestinationNumberList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< DestinationNumberLengthList >-----#
    DestinationNumberLengthList = SEQ_OF(name='DestinationNumberLengthList', mode=MODE_TYPE)
    _DestinationNumberLengthList__item_ = INT(name='_item_', mode=MODE_TYPE)
    _DestinationNumberLengthList__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    DestinationNumberLengthList._cont = _DestinationNumberLengthList__item_
    DestinationNumberLengthList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< BasicServiceCriteria >-----#
    BasicServiceCriteria = SEQ_OF(name='BasicServiceCriteria', mode=MODE_TYPE)
    _BasicServiceCriteria__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')))
    BasicServiceCriteria._cont = _BasicServiceCriteria__item_
    BasicServiceCriteria._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< maxNumOfISDN-AddressDigits >-----#
    maxNumOfISDN_AddressDigits = INT(name='maxNumOfISDN-AddressDigits', mode=MODE_VALUE)
    maxNumOfISDN_AddressDigits._val = 15
    
    #-----< maxNumOfCamelDestinationNumbers >-----#
    maxNumOfCamelDestinationNumbers = INT(name='maxNumOfCamelDestinationNumbers', mode=MODE_VALUE)
    maxNumOfCamelDestinationNumbers._val = 10
    
    #-----< maxNumOfCamelDestinationNumberLengths >-----#
    maxNumOfCamelDestinationNumberLengths = INT(name='maxNumOfCamelDestinationNumberLengths', mode=MODE_VALUE)
    maxNumOfCamelDestinationNumberLengths._val = 3
    
    #-----< maxNumOfCamelBasicServiceCriteria >-----#
    maxNumOfCamelBasicServiceCriteria = INT(name='maxNumOfCamelBasicServiceCriteria', mode=MODE_VALUE)
    maxNumOfCamelBasicServiceCriteria._val = 5
    
    #-----< CallTypeCriteria >-----#
    CallTypeCriteria = ENUM(name='CallTypeCriteria', mode=MODE_TYPE)
    CallTypeCriteria._cont = ASN1Dict([('forwarded', 0), ('notForwarded', 1)])
    CallTypeCriteria._ext = None
    
    #-----< MatchType >-----#
    MatchType = ENUM(name='MatchType', mode=MODE_TYPE)
    MatchType._cont = ASN1Dict([('inhibiting', 0), ('enabling', 1)])
    MatchType._ext = None
    
    #-----< O-CauseValueCriteria >-----#
    O_CauseValueCriteria = SEQ_OF(name='O-CauseValueCriteria', mode=MODE_TYPE)
    _O_CauseValueCriteria__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CauseValue')))
    O_CauseValueCriteria._cont = _O_CauseValueCriteria__item_
    O_CauseValueCriteria._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< T-CauseValueCriteria >-----#
    T_CauseValueCriteria = SEQ_OF(name='T-CauseValueCriteria', mode=MODE_TYPE)
    _T_CauseValueCriteria__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'CauseValue')))
    T_CauseValueCriteria._cont = _T_CauseValueCriteria__item_
    T_CauseValueCriteria._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< maxNumOfCAMEL-O-CauseValueCriteria >-----#
    maxNumOfCAMEL_O_CauseValueCriteria = INT(name='maxNumOfCAMEL-O-CauseValueCriteria', mode=MODE_VALUE)
    maxNumOfCAMEL_O_CauseValueCriteria._val = 5
    
    #-----< maxNumOfCAMEL-T-CauseValueCriteria >-----#
    maxNumOfCAMEL_T_CauseValueCriteria = INT(name='maxNumOfCAMEL-T-CauseValueCriteria', mode=MODE_VALUE)
    maxNumOfCAMEL_T_CauseValueCriteria._val = 5
    
    #-----< CauseValue >-----#
    CauseValue = OCT_STR(name='CauseValue', mode=MODE_TYPE)
    CauseValue._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< DefaultCallHandling >-----#
    DefaultCallHandling = ENUM(name='DefaultCallHandling', mode=MODE_TYPE)
    DefaultCallHandling._cont = ASN1Dict([('continueCall', 0), ('releaseCall', 1)])
    DefaultCallHandling._ext = []
    
    #-----< CamelCapabilityHandling >-----#
    CamelCapabilityHandling = INT(name='CamelCapabilityHandling', mode=MODE_TYPE)
    CamelCapabilityHandling._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< SupportedCamelPhases >-----#
    SupportedCamelPhases = BIT_STR(name='SupportedCamelPhases', mode=MODE_TYPE)
    SupportedCamelPhases._cont = ASN1Dict([('phase1', 0), ('phase2', 1), ('phase3', 2), ('phase4', 3)])
    SupportedCamelPhases._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< OfferedCamel4CSIs >-----#
    OfferedCamel4CSIs = BIT_STR(name='OfferedCamel4CSIs', mode=MODE_TYPE)
    OfferedCamel4CSIs._cont = ASN1Dict([('o-csi', 0), ('d-csi', 1), ('vt-csi', 2), ('t-csi', 3), ('mt-sms-csi', 4), ('mg-csi', 5), ('psi-enhancements', 6)])
    OfferedCamel4CSIs._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=7, ub=16)], ev=None, er=[])
    
    #-----< OfferedCamel4Functionalities >-----#
    OfferedCamel4Functionalities = BIT_STR(name='OfferedCamel4Functionalities', mode=MODE_TYPE)
    OfferedCamel4Functionalities._cont = ASN1Dict([('initiateCallAttempt', 0), ('splitLeg', 1), ('moveLeg', 2), ('disconnectLeg', 3), ('entityReleased', 4), ('dfc-WithArgument', 5), ('playTone', 6), ('dtmf-MidCall', 7), ('chargingIndicator', 8), ('alertingDP', 9), ('locationAtAlerting', 10), ('changeOfPositionDP', 11), ('or-Interactions', 12), ('warningToneEnhancements', 13), ('cf-Enhancements', 14), ('subscribedEnhancedDialledServices', 15), ('servingNetworkEnhancedDialledServices', 16), ('criteriaForChangeOfPositionDP', 17), ('serviceChangeDP', 18), ('collectInformation', 19)])
    OfferedCamel4Functionalities._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=15, ub=64)], ev=None, er=[])
    
    #-----< SMS-CSI >-----#
    SMS_CSI = SEQ(name='SMS-CSI', mode=MODE_TYPE)
    _SMS_CSI_sms_CAMEL_TDP_DataList = SEQ_OF(name='sms-CAMEL-TDP-DataList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-CAMEL-TDP-DataList')), opt=True)
    _SMS_CSI_camelCapabilityHandling = INT(name='camelCapabilityHandling', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CamelCapabilityHandling')), opt=True)
    _SMS_CSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SMS_CSI_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SMS_CSI_csi_Active = NULL(name='csi-Active', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SMS_CSI._cont = ASN1Dict([
        ('sms-CAMEL-TDP-DataList', _SMS_CSI_sms_CAMEL_TDP_DataList),
        ('camelCapabilityHandling', _SMS_CSI_camelCapabilityHandling),
        ('extensionContainer', _SMS_CSI_extensionContainer),
        ('notificationToCSE', _SMS_CSI_notificationToCSE),
        ('csi-Active', _SMS_CSI_csi_Active),
        ])
    SMS_CSI._ext = []
    
    #-----< SMS-CAMEL-TDP-DataList >-----#
    SMS_CAMEL_TDP_DataList = SEQ_OF(name='SMS-CAMEL-TDP-DataList', mode=MODE_TYPE)
    _SMS_CAMEL_TDP_DataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-CAMEL-TDP-Data')))
    SMS_CAMEL_TDP_DataList._cont = _SMS_CAMEL_TDP_DataList__item_
    SMS_CAMEL_TDP_DataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< SMS-CAMEL-TDP-Data >-----#
    SMS_CAMEL_TDP_Data = SEQ(name='SMS-CAMEL-TDP-Data', mode=MODE_TYPE)
    _SMS_CAMEL_TDP_Data_sms_TriggerDetectionPoint = ENUM(name='sms-TriggerDetectionPoint', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-TriggerDetectionPoint')))
    _SMS_CAMEL_TDP_Data_serviceKey = INT(name='serviceKey', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceKey')))
    _SMS_CAMEL_TDP_Data_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _SMS_CAMEL_TDP_Data_defaultSMS_Handling = ENUM(name='defaultSMS-Handling', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DefaultSMS-Handling')))
    _SMS_CAMEL_TDP_Data_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SMS_CAMEL_TDP_Data._cont = ASN1Dict([
        ('sms-TriggerDetectionPoint', _SMS_CAMEL_TDP_Data_sms_TriggerDetectionPoint),
        ('serviceKey', _SMS_CAMEL_TDP_Data_serviceKey),
        ('gsmSCF-Address', _SMS_CAMEL_TDP_Data_gsmSCF_Address),
        ('defaultSMS-Handling', _SMS_CAMEL_TDP_Data_defaultSMS_Handling),
        ('extensionContainer', _SMS_CAMEL_TDP_Data_extensionContainer),
        ])
    SMS_CAMEL_TDP_Data._ext = []
    
    #-----< SMS-TriggerDetectionPoint >-----#
    SMS_TriggerDetectionPoint = ENUM(name='SMS-TriggerDetectionPoint', mode=MODE_TYPE)
    SMS_TriggerDetectionPoint._cont = ASN1Dict([('sms-CollectedInfo', 1), ('sms-DeliveryRequest', 2)])
    SMS_TriggerDetectionPoint._ext = ['sms-DeliveryRequest']
    
    #-----< DefaultSMS-Handling >-----#
    DefaultSMS_Handling = ENUM(name='DefaultSMS-Handling', mode=MODE_TYPE)
    DefaultSMS_Handling._cont = ASN1Dict([('continueTransaction', 0), ('releaseTransaction', 1)])
    DefaultSMS_Handling._ext = []
    
    #-----< M-CSI >-----#
    M_CSI = SEQ(name='M-CSI', mode=MODE_TYPE)
    _M_CSI_mobilityTriggers = SEQ_OF(name='mobilityTriggers', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'MobilityTriggers')))
    _M_CSI_serviceKey = INT(name='serviceKey', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceKey')))
    _M_CSI_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _M_CSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _M_CSI_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _M_CSI_csi_Active = NULL(name='csi-Active', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    M_CSI._cont = ASN1Dict([
        ('mobilityTriggers', _M_CSI_mobilityTriggers),
        ('serviceKey', _M_CSI_serviceKey),
        ('gsmSCF-Address', _M_CSI_gsmSCF_Address),
        ('extensionContainer', _M_CSI_extensionContainer),
        ('notificationToCSE', _M_CSI_notificationToCSE),
        ('csi-Active', _M_CSI_csi_Active),
        ])
    M_CSI._ext = []
    
    #-----< MG-CSI >-----#
    MG_CSI = SEQ(name='MG-CSI', mode=MODE_TYPE)
    _MG_CSI_mobilityTriggers = SEQ_OF(name='mobilityTriggers', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'MobilityTriggers')))
    _MG_CSI_serviceKey = INT(name='serviceKey', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceKey')))
    _MG_CSI_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _MG_CSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _MG_CSI_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MG_CSI_csi_Active = NULL(name='csi-Active', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    MG_CSI._cont = ASN1Dict([
        ('mobilityTriggers', _MG_CSI_mobilityTriggers),
        ('serviceKey', _MG_CSI_serviceKey),
        ('gsmSCF-Address', _MG_CSI_gsmSCF_Address),
        ('extensionContainer', _MG_CSI_extensionContainer),
        ('notificationToCSE', _MG_CSI_notificationToCSE),
        ('csi-Active', _MG_CSI_csi_Active),
        ])
    MG_CSI._ext = []
    
    #-----< MobilityTriggers >-----#
    MobilityTriggers = SEQ_OF(name='MobilityTriggers', mode=MODE_TYPE)
    _MobilityTriggers__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'MM-Code')))
    MobilityTriggers._cont = _MobilityTriggers__item_
    MobilityTriggers._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< maxNumOfMobilityTriggers >-----#
    maxNumOfMobilityTriggers = INT(name='maxNumOfMobilityTriggers', mode=MODE_VALUE)
    maxNumOfMobilityTriggers._val = 10
    
    #-----< MM-Code >-----#
    MM_Code = OCT_STR(name='MM-Code', mode=MODE_TYPE)
    MM_Code._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< T-CSI >-----#
    T_CSI = SEQ(name='T-CSI', mode=MODE_TYPE)
    _T_CSI_t_BcsmCamelTDPDataList = SEQ_OF(name='t-BcsmCamelTDPDataList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-BcsmCamelTDPDataList')))
    _T_CSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _T_CSI_camelCapabilityHandling = INT(name='camelCapabilityHandling', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CamelCapabilityHandling')), opt=True)
    _T_CSI_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _T_CSI_csi_Active = NULL(name='csi-Active', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    T_CSI._cont = ASN1Dict([
        ('t-BcsmCamelTDPDataList', _T_CSI_t_BcsmCamelTDPDataList),
        ('extensionContainer', _T_CSI_extensionContainer),
        ('camelCapabilityHandling', _T_CSI_camelCapabilityHandling),
        ('notificationToCSE', _T_CSI_notificationToCSE),
        ('csi-Active', _T_CSI_csi_Active),
        ])
    T_CSI._ext = ['camelCapabilityHandling', 'notificationToCSE', 'csi-Active']
    
    #-----< T-BcsmCamelTDPDataList >-----#
    T_BcsmCamelTDPDataList = SEQ_OF(name='T-BcsmCamelTDPDataList', mode=MODE_TYPE)
    _T_BcsmCamelTDPDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-BcsmCamelTDPData')))
    T_BcsmCamelTDPDataList._cont = _T_BcsmCamelTDPDataList__item_
    T_BcsmCamelTDPDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< T-BcsmCamelTDPData >-----#
    T_BcsmCamelTDPData = SEQ(name='T-BcsmCamelTDPData', mode=MODE_TYPE)
    _T_BcsmCamelTDPData_t_BcsmTriggerDetectionPoint = ENUM(name='t-BcsmTriggerDetectionPoint', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-BcsmTriggerDetectionPoint')))
    _T_BcsmCamelTDPData_serviceKey = INT(name='serviceKey', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceKey')))
    _T_BcsmCamelTDPData_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _T_BcsmCamelTDPData_defaultCallHandling = ENUM(name='defaultCallHandling', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DefaultCallHandling')))
    _T_BcsmCamelTDPData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    T_BcsmCamelTDPData._cont = ASN1Dict([
        ('t-BcsmTriggerDetectionPoint', _T_BcsmCamelTDPData_t_BcsmTriggerDetectionPoint),
        ('serviceKey', _T_BcsmCamelTDPData_serviceKey),
        ('gsmSCF-Address', _T_BcsmCamelTDPData_gsmSCF_Address),
        ('defaultCallHandling', _T_BcsmCamelTDPData_defaultCallHandling),
        ('extensionContainer', _T_BcsmCamelTDPData_extensionContainer),
        ])
    T_BcsmCamelTDPData._ext = []
    
    #-----< T-BcsmTriggerDetectionPoint >-----#
    T_BcsmTriggerDetectionPoint = ENUM(name='T-BcsmTriggerDetectionPoint', mode=MODE_TYPE)
    T_BcsmTriggerDetectionPoint._cont = ASN1Dict([('termAttemptAuthorized', 12), ('tBusy', 13), ('tNoAnswer', 14)])
    T_BcsmTriggerDetectionPoint._ext = ['tBusy', 'tNoAnswer']
    
    #-----< SendRoutingInfoForGprsArg >-----#
    SendRoutingInfoForGprsArg = SEQ(name='SendRoutingInfoForGprsArg', mode=MODE_TYPE)
    _SendRoutingInfoForGprsArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _SendRoutingInfoForGprsArg_ggsn_Address = OCT_STR(name='ggsn-Address', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _SendRoutingInfoForGprsArg_ggsn_Number = OCT_STR(name='ggsn-Number', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _SendRoutingInfoForGprsArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SendRoutingInfoForGprsArg._cont = ASN1Dict([
        ('imsi', _SendRoutingInfoForGprsArg_imsi),
        ('ggsn-Address', _SendRoutingInfoForGprsArg_ggsn_Address),
        ('ggsn-Number', _SendRoutingInfoForGprsArg_ggsn_Number),
        ('extensionContainer', _SendRoutingInfoForGprsArg_extensionContainer),
        ])
    SendRoutingInfoForGprsArg._ext = []
    
    #-----< SendRoutingInfoForGprsRes >-----#
    SendRoutingInfoForGprsRes = SEQ(name='SendRoutingInfoForGprsRes', mode=MODE_TYPE)
    _SendRoutingInfoForGprsRes_sgsn_Address = OCT_STR(name='sgsn-Address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')))
    _SendRoutingInfoForGprsRes_ggsn_Address = OCT_STR(name='ggsn-Address', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _SendRoutingInfoForGprsRes_mobileNotReachableReason = INT(name='mobileNotReachableReason', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    _SendRoutingInfoForGprsRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SendRoutingInfoForGprsRes._cont = ASN1Dict([
        ('sgsn-Address', _SendRoutingInfoForGprsRes_sgsn_Address),
        ('ggsn-Address', _SendRoutingInfoForGprsRes_ggsn_Address),
        ('mobileNotReachableReason', _SendRoutingInfoForGprsRes_mobileNotReachableReason),
        ('extensionContainer', _SendRoutingInfoForGprsRes_extensionContainer),
        ])
    SendRoutingInfoForGprsRes._ext = []
    
    #-----< FailureReportArg >-----#
    FailureReportArg = SEQ(name='FailureReportArg', mode=MODE_TYPE)
    _FailureReportArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _FailureReportArg_ggsn_Number = OCT_STR(name='ggsn-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _FailureReportArg_ggsn_Address = OCT_STR(name='ggsn-Address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _FailureReportArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    FailureReportArg._cont = ASN1Dict([
        ('imsi', _FailureReportArg_imsi),
        ('ggsn-Number', _FailureReportArg_ggsn_Number),
        ('ggsn-Address', _FailureReportArg_ggsn_Address),
        ('extensionContainer', _FailureReportArg_extensionContainer),
        ])
    FailureReportArg._ext = []
    
    #-----< FailureReportRes >-----#
    FailureReportRes = SEQ(name='FailureReportRes', mode=MODE_TYPE)
    _FailureReportRes_ggsn_Address = OCT_STR(name='ggsn-Address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _FailureReportRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    FailureReportRes._cont = ASN1Dict([
        ('ggsn-Address', _FailureReportRes_ggsn_Address),
        ('extensionContainer', _FailureReportRes_extensionContainer),
        ])
    FailureReportRes._ext = []
    
    #-----< NoteMsPresentForGprsArg >-----#
    NoteMsPresentForGprsArg = SEQ(name='NoteMsPresentForGprsArg', mode=MODE_TYPE)
    _NoteMsPresentForGprsArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _NoteMsPresentForGprsArg_sgsn_Address = OCT_STR(name='sgsn-Address', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')))
    _NoteMsPresentForGprsArg_ggsn_Address = OCT_STR(name='ggsn-Address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _NoteMsPresentForGprsArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    NoteMsPresentForGprsArg._cont = ASN1Dict([
        ('imsi', _NoteMsPresentForGprsArg_imsi),
        ('sgsn-Address', _NoteMsPresentForGprsArg_sgsn_Address),
        ('ggsn-Address', _NoteMsPresentForGprsArg_ggsn_Address),
        ('extensionContainer', _NoteMsPresentForGprsArg_extensionContainer),
        ])
    NoteMsPresentForGprsArg._ext = []
    
    #-----< NoteMsPresentForGprsRes >-----#
    NoteMsPresentForGprsRes = SEQ(name='NoteMsPresentForGprsRes', mode=MODE_TYPE)
    _NoteMsPresentForGprsRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    NoteMsPresentForGprsRes._cont = ASN1Dict([
        ('extensionContainer', _NoteMsPresentForGprsRes_extensionContainer),
        ])
    NoteMsPresentForGprsRes._ext = []
    
    #-----< ResetArg >-----#
    ResetArg = SEQ(name='ResetArg', mode=MODE_TYPE)
    _ResetArg_sendingNodenumber = CHOICE(name='sendingNodenumber', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SendingNode-Number')))
    _ResetArg_hlr_List = SEQ_OF(name='hlr-List', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'HLR-List')), opt=True)
    _ResetArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ResetArg._cont = ASN1Dict([
        ('sendingNodenumber', _ResetArg_sendingNodenumber),
        ('hlr-List', _ResetArg_hlr_List),
        ('extensionContainer', _ResetArg_extensionContainer),
        ])
    ResetArg._ext = []
    
    #-----< SendingNode-Number >-----#
    SendingNode_Number = CHOICE(name='SendingNode-Number', mode=MODE_TYPE)
    _SendingNode_Number_hlr_Number = OCT_STR(name='hlr-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _SendingNode_Number_css_Number = OCT_STR(name='css-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    SendingNode_Number._cont = ASN1Dict([
        ('hlr-Number', _SendingNode_Number_hlr_Number),
        ('css-Number', _SendingNode_Number_css_Number),
        ])
    SendingNode_Number._ext = None
    
    #-----< RestoreDataArg >-----#
    RestoreDataArg = SEQ(name='RestoreDataArg', mode=MODE_TYPE)
    _RestoreDataArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _RestoreDataArg_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')), opt=True)
    _RestoreDataArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _RestoreDataArg_vlr_Capability = SEQ(name='vlr-Capability', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'VLR-Capability')), opt=True)
    _RestoreDataArg_restorationIndicator = NULL(name='restorationIndicator', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    RestoreDataArg._cont = ASN1Dict([
        ('imsi', _RestoreDataArg_imsi),
        ('lmsi', _RestoreDataArg_lmsi),
        ('extensionContainer', _RestoreDataArg_extensionContainer),
        ('vlr-Capability', _RestoreDataArg_vlr_Capability),
        ('restorationIndicator', _RestoreDataArg_restorationIndicator),
        ])
    RestoreDataArg._ext = ['vlr-Capability', 'restorationIndicator']
    
    #-----< RestoreDataRes >-----#
    RestoreDataRes = SEQ(name='RestoreDataRes', mode=MODE_TYPE)
    _RestoreDataRes_hlr_Number = OCT_STR(name='hlr-Number', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _RestoreDataRes_msNotReachable = NULL(name='msNotReachable', mode=MODE_TYPE, opt=True)
    _RestoreDataRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    RestoreDataRes._cont = ASN1Dict([
        ('hlr-Number', _RestoreDataRes_hlr_Number),
        ('msNotReachable', _RestoreDataRes_msNotReachable),
        ('extensionContainer', _RestoreDataRes_extensionContainer),
        ])
    RestoreDataRes._ext = []
    
    #-----< VBSDataList >-----#
    VBSDataList = SEQ_OF(name='VBSDataList', mode=MODE_TYPE)
    _VBSDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'VoiceBroadcastData')))
    VBSDataList._cont = _VBSDataList__item_
    VBSDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< VGCSDataList >-----#
    VGCSDataList = SEQ_OF(name='VGCSDataList', mode=MODE_TYPE)
    _VGCSDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'VoiceGroupCallData')))
    VGCSDataList._cont = _VGCSDataList__item_
    VGCSDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< maxNumOfVBSGroupIds >-----#
    maxNumOfVBSGroupIds = INT(name='maxNumOfVBSGroupIds', mode=MODE_VALUE)
    maxNumOfVBSGroupIds._val = 50
    
    #-----< maxNumOfVGCSGroupIds >-----#
    maxNumOfVGCSGroupIds = INT(name='maxNumOfVGCSGroupIds', mode=MODE_VALUE)
    maxNumOfVGCSGroupIds._val = 50
    
    #-----< VoiceGroupCallData >-----#
    VoiceGroupCallData = SEQ(name='VoiceGroupCallData', mode=MODE_TYPE)
    _VoiceGroupCallData_groupId = OCT_STR(name='groupId', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'GroupId')))
    _VoiceGroupCallData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _VoiceGroupCallData_additionalSubscriptions = BIT_STR(name='additionalSubscriptions', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdditionalSubscriptions')), opt=True)
    _VoiceGroupCallData_additionalInfo = BIT_STR(name='additionalInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdditionalInfo')), opt=True)
    _VoiceGroupCallData_longGroupId = OCT_STR(name='longGroupId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Long-GroupId')), opt=True)
    VoiceGroupCallData._cont = ASN1Dict([
        ('groupId', _VoiceGroupCallData_groupId),
        ('extensionContainer', _VoiceGroupCallData_extensionContainer),
        ('additionalSubscriptions', _VoiceGroupCallData_additionalSubscriptions),
        ('additionalInfo', _VoiceGroupCallData_additionalInfo),
        ('longGroupId', _VoiceGroupCallData_longGroupId),
        ])
    VoiceGroupCallData._ext = ['additionalSubscriptions', 'additionalInfo', 'longGroupId']
    
    #-----< AdditionalInfo >-----#
    AdditionalInfo = BIT_STR(name='AdditionalInfo', mode=MODE_TYPE)
    AdditionalInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=136)], ev=None, er=[])
    
    #-----< AdditionalSubscriptions >-----#
    AdditionalSubscriptions = BIT_STR(name='AdditionalSubscriptions', mode=MODE_TYPE)
    AdditionalSubscriptions._cont = ASN1Dict([('privilegedUplinkRequest', 0), ('emergencyUplinkRequest', 1), ('emergencyReset', 2)])
    AdditionalSubscriptions._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    
    #-----< VoiceBroadcastData >-----#
    VoiceBroadcastData = SEQ(name='VoiceBroadcastData', mode=MODE_TYPE)
    _VoiceBroadcastData_groupid = OCT_STR(name='groupid', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'GroupId')))
    _VoiceBroadcastData_broadcastInitEntitlement = NULL(name='broadcastInitEntitlement', mode=MODE_TYPE, opt=True)
    _VoiceBroadcastData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _VoiceBroadcastData_longGroupId = OCT_STR(name='longGroupId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Long-GroupId')), opt=True)
    VoiceBroadcastData._cont = ASN1Dict([
        ('groupid', _VoiceBroadcastData_groupid),
        ('broadcastInitEntitlement', _VoiceBroadcastData_broadcastInitEntitlement),
        ('extensionContainer', _VoiceBroadcastData_extensionContainer),
        ('longGroupId', _VoiceBroadcastData_longGroupId),
        ])
    VoiceBroadcastData._ext = ['longGroupId']
    
    #-----< GroupId >-----#
    GroupId = OCT_STR(name='GroupId', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'TBCD-STRING')))
    GroupId._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< Long-GroupId >-----#
    Long_GroupId = OCT_STR(name='Long-GroupId', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'TBCD-STRING')))
    Long_GroupId._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< ProvideSubscriberInfoArg >-----#
    ProvideSubscriberInfoArg = SEQ(name='ProvideSubscriberInfoArg', mode=MODE_TYPE)
    _ProvideSubscriberInfoArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _ProvideSubscriberInfoArg_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')), opt=True)
    _ProvideSubscriberInfoArg_requestedInfo = SEQ(name='requestedInfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RequestedInfo')))
    _ProvideSubscriberInfoArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ProvideSubscriberInfoArg_callPriority = INT(name='callPriority', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')), opt=True)
    ProvideSubscriberInfoArg._cont = ASN1Dict([
        ('imsi', _ProvideSubscriberInfoArg_imsi),
        ('lmsi', _ProvideSubscriberInfoArg_lmsi),
        ('requestedInfo', _ProvideSubscriberInfoArg_requestedInfo),
        ('extensionContainer', _ProvideSubscriberInfoArg_extensionContainer),
        ('callPriority', _ProvideSubscriberInfoArg_callPriority),
        ])
    ProvideSubscriberInfoArg._ext = ['callPriority']
    
    #-----< ProvideSubscriberInfoRes >-----#
    ProvideSubscriberInfoRes = SEQ(name='ProvideSubscriberInfoRes', mode=MODE_TYPE)
    _ProvideSubscriberInfoRes_subscriberInfo = SEQ(name='subscriberInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SubscriberInfo')))
    _ProvideSubscriberInfoRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ProvideSubscriberInfoRes._cont = ASN1Dict([
        ('subscriberInfo', _ProvideSubscriberInfoRes_subscriberInfo),
        ('extensionContainer', _ProvideSubscriberInfoRes_extensionContainer),
        ])
    ProvideSubscriberInfoRes._ext = []
    
    #-----< SubscriberInfo >-----#
    SubscriberInfo = SEQ(name='SubscriberInfo', mode=MODE_TYPE)
    _SubscriberInfo_locationInformation = SEQ(name='locationInformation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationInformation')), opt=True)
    _SubscriberInfo_subscriberState = CHOICE(name='subscriberState', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SubscriberState')), opt=True)
    _SubscriberInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SubscriberInfo_locationInformationGPRS = SEQ(name='locationInformationGPRS', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationInformationGPRS')), opt=True)
    _SubscriberInfo_ps_SubscriberState = CHOICE(name='ps-SubscriberState', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PS-SubscriberState')), opt=True)
    _SubscriberInfo_imei = OCT_STR(name='imei', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMEI')), opt=True)
    _SubscriberInfo_ms_Classmark2 = OCT_STR(name='ms-Classmark2', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MS-Classmark2')), opt=True)
    _SubscriberInfo_gprs_MS_Class = SEQ(name='gprs-MS-Class', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRSMSClass')), opt=True)
    _SubscriberInfo_mnpInfoRes = SEQ(name='mnpInfoRes', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MNPInfoRes')), opt=True)
    _SubscriberInfo_imsVoiceOverPS_SessionsIndication = ENUM(name='imsVoiceOverPS-SessionsIndication', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'IMS-VoiceOverPS-SessionsInd')), opt=True)
    _SubscriberInfo_lastUE_ActivityTime = OCT_STR(name='lastUE-ActivityTime', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Time')), opt=True)
    _SubscriberInfo_lastRAT_Type = ENUM(name='lastRAT-Type', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Used-RAT-Type')), opt=True)
    _SubscriberInfo_eps_SubscriberState = CHOICE(name='eps-SubscriberState', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PS-SubscriberState')), opt=True)
    _SubscriberInfo_locationInformationEPS = SEQ(name='locationInformationEPS', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationInformationEPS')), opt=True)
    _SubscriberInfo_timeZone = OCT_STR(name='timeZone', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TimeZone')), opt=True)
    _SubscriberInfo_daylightSavingTime = ENUM(name='daylightSavingTime', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DaylightSavingTime')), opt=True)
    SubscriberInfo._cont = ASN1Dict([
        ('locationInformation', _SubscriberInfo_locationInformation),
        ('subscriberState', _SubscriberInfo_subscriberState),
        ('extensionContainer', _SubscriberInfo_extensionContainer),
        ('locationInformationGPRS', _SubscriberInfo_locationInformationGPRS),
        ('ps-SubscriberState', _SubscriberInfo_ps_SubscriberState),
        ('imei', _SubscriberInfo_imei),
        ('ms-Classmark2', _SubscriberInfo_ms_Classmark2),
        ('gprs-MS-Class', _SubscriberInfo_gprs_MS_Class),
        ('mnpInfoRes', _SubscriberInfo_mnpInfoRes),
        ('imsVoiceOverPS-SessionsIndication', _SubscriberInfo_imsVoiceOverPS_SessionsIndication),
        ('lastUE-ActivityTime', _SubscriberInfo_lastUE_ActivityTime),
        ('lastRAT-Type', _SubscriberInfo_lastRAT_Type),
        ('eps-SubscriberState', _SubscriberInfo_eps_SubscriberState),
        ('locationInformationEPS', _SubscriberInfo_locationInformationEPS),
        ('timeZone', _SubscriberInfo_timeZone),
        ('daylightSavingTime', _SubscriberInfo_daylightSavingTime),
        ])
    SubscriberInfo._ext = ['locationInformationGPRS', 'ps-SubscriberState', 'imei', 'ms-Classmark2', 'gprs-MS-Class', 'mnpInfoRes', 'imsVoiceOverPS-SessionsIndication', 'lastUE-ActivityTime', 'lastRAT-Type', 'eps-SubscriberState', 'locationInformationEPS', 'timeZone', 'daylightSavingTime']
    
    #-----< IMS-VoiceOverPS-SessionsInd >-----#
    IMS_VoiceOverPS_SessionsInd = ENUM(name='IMS-VoiceOverPS-SessionsInd', mode=MODE_TYPE)
    IMS_VoiceOverPS_SessionsInd._cont = ASN1Dict([('imsVoiceOverPS-SessionsNotSupported', 0), ('imsVoiceOverPS-SessionsSupported', 1), ('unknown', 2)])
    IMS_VoiceOverPS_SessionsInd._ext = None
    
    #-----< TimeZone >-----#
    TimeZone = OCT_STR(name='TimeZone', mode=MODE_TYPE)
    TimeZone._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=3)], ev=None, er=[])
    
    #-----< DaylightSavingTime >-----#
    DaylightSavingTime = ENUM(name='DaylightSavingTime', mode=MODE_TYPE)
    DaylightSavingTime._cont = ASN1Dict([('noAdjustment', 0), ('plusOneHourAdjustment', 1), ('plusTwoHoursAdjustment', 2)])
    DaylightSavingTime._ext = None
    
    #-----< MNPInfoRes >-----#
    MNPInfoRes = SEQ(name='MNPInfoRes', mode=MODE_TYPE)
    _MNPInfoRes_routeingNumber = OCT_STR(name='routeingNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RouteingNumber')), opt=True)
    _MNPInfoRes_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _MNPInfoRes_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _MNPInfoRes_numberPortabilityStatus = ENUM(name='numberPortabilityStatus', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'NumberPortabilityStatus')), opt=True)
    _MNPInfoRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MNPInfoRes._cont = ASN1Dict([
        ('routeingNumber', _MNPInfoRes_routeingNumber),
        ('imsi', _MNPInfoRes_imsi),
        ('msisdn', _MNPInfoRes_msisdn),
        ('numberPortabilityStatus', _MNPInfoRes_numberPortabilityStatus),
        ('extensionContainer', _MNPInfoRes_extensionContainer),
        ])
    MNPInfoRes._ext = []
    
    #-----< RouteingNumber >-----#
    RouteingNumber = OCT_STR(name='RouteingNumber', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'TBCD-STRING')))
    RouteingNumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< NumberPortabilityStatus >-----#
    NumberPortabilityStatus = ENUM(name='NumberPortabilityStatus', mode=MODE_TYPE)
    NumberPortabilityStatus._cont = ASN1Dict([('notKnownToBePorted', 0), ('ownNumberPortedOut', 1), ('foreignNumberPortedToForeignNetwork', 2), ('ownNumberNotPortedOut', 4), ('foreignNumberPortedIn', 5)])
    NumberPortabilityStatus._ext = ['ownNumberNotPortedOut', 'foreignNumberPortedIn']
    
    #-----< MS-Classmark2 >-----#
    MS_Classmark2 = OCT_STR(name='MS-Classmark2', mode=MODE_TYPE)
    MS_Classmark2._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< GPRSMSClass >-----#
    GPRSMSClass = SEQ(name='GPRSMSClass', mode=MODE_TYPE)
    _GPRSMSClass_mSNetworkCapability = OCT_STR(name='mSNetworkCapability', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MSNetworkCapability')))
    _GPRSMSClass_mSRadioAccessCapability = OCT_STR(name='mSRadioAccessCapability', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MSRadioAccessCapability')), opt=True)
    GPRSMSClass._cont = ASN1Dict([
        ('mSNetworkCapability', _GPRSMSClass_mSNetworkCapability),
        ('mSRadioAccessCapability', _GPRSMSClass_mSRadioAccessCapability),
        ])
    GPRSMSClass._ext = None
    
    #-----< MSNetworkCapability >-----#
    MSNetworkCapability = OCT_STR(name='MSNetworkCapability', mode=MODE_TYPE)
    MSNetworkCapability._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< MSRadioAccessCapability >-----#
    MSRadioAccessCapability = OCT_STR(name='MSRadioAccessCapability', mode=MODE_TYPE)
    MSRadioAccessCapability._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< RequestedInfo >-----#
    RequestedInfo = SEQ(name='RequestedInfo', mode=MODE_TYPE)
    _RequestedInfo_locationInformation = NULL(name='locationInformation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedInfo_subscriberState = NULL(name='subscriberState', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _RequestedInfo_currentLocation = NULL(name='currentLocation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedInfo_requestedDomain = ENUM(name='requestedDomain', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'DomainType')), opt=True)
    _RequestedInfo_imei = NULL(name='imei', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedInfo_ms_classmark = NULL(name='ms-classmark', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedInfo_mnpRequestedInfo = NULL(name='mnpRequestedInfo', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedInfo_locationInformationEPS_Supported = NULL(name='locationInformationEPS-Supported', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedInfo_t_adsData = NULL(name='t-adsData', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedInfo_requestedNodes = BIT_STR(name='requestedNodes', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RequestedNodes')), opt=True)
    _RequestedInfo_servingNodeIndication = NULL(name='servingNodeIndication', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedInfo_localTimeZoneRequest = NULL(name='localTimeZoneRequest', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    RequestedInfo._cont = ASN1Dict([
        ('locationInformation', _RequestedInfo_locationInformation),
        ('subscriberState', _RequestedInfo_subscriberState),
        ('extensionContainer', _RequestedInfo_extensionContainer),
        ('currentLocation', _RequestedInfo_currentLocation),
        ('requestedDomain', _RequestedInfo_requestedDomain),
        ('imei', _RequestedInfo_imei),
        ('ms-classmark', _RequestedInfo_ms_classmark),
        ('mnpRequestedInfo', _RequestedInfo_mnpRequestedInfo),
        ('locationInformationEPS-Supported', _RequestedInfo_locationInformationEPS_Supported),
        ('t-adsData', _RequestedInfo_t_adsData),
        ('requestedNodes', _RequestedInfo_requestedNodes),
        ('servingNodeIndication', _RequestedInfo_servingNodeIndication),
        ('localTimeZoneRequest', _RequestedInfo_localTimeZoneRequest),
        ])
    RequestedInfo._ext = ['currentLocation', 'requestedDomain', 'imei', 'ms-classmark', 'mnpRequestedInfo', 'locationInformationEPS-Supported', 't-adsData', 'requestedNodes', 'servingNodeIndication', 'localTimeZoneRequest']
    
    #-----< DomainType >-----#
    DomainType = ENUM(name='DomainType', mode=MODE_TYPE)
    DomainType._cont = ASN1Dict([('cs-Domain', 0), ('ps-Domain', 1)])
    DomainType._ext = []
    
    #-----< RequestedNodes >-----#
    RequestedNodes = BIT_STR(name='RequestedNodes', mode=MODE_TYPE)
    RequestedNodes._cont = ASN1Dict([('mme', 0), ('sgsn', 1)])
    RequestedNodes._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< LocationInformation >-----#
    LocationInformation = SEQ(name='LocationInformation', mode=MODE_TYPE)
    _LocationInformation_ageOfLocationInformation = INT(name='ageOfLocationInformation', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AgeOfLocationInformation')), opt=True)
    _LocationInformation_geographicalInformation = OCT_STR(name='geographicalInformation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GeographicalInformation')), opt=True)
    _LocationInformation_vlr_number = OCT_STR(name='vlr-number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _LocationInformation_locationNumber = OCT_STR(name='locationNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationNumber')), opt=True)
    _LocationInformation_cellGlobalIdOrServiceAreaIdOrLAI = CHOICE(name='cellGlobalIdOrServiceAreaIdOrLAI', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'CellGlobalIdOrServiceAreaIdOrLAI')), opt=True)
    _LocationInformation_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _LocationInformation_selectedLSA_Id = OCT_STR(name='selectedLSA-Id', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAIdentity')), opt=True)
    _LocationInformation_msc_Number = OCT_STR(name='msc-Number', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _LocationInformation_geodeticInformation = OCT_STR(name='geodeticInformation', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GeodeticInformation')), opt=True)
    _LocationInformation_currentLocationRetrieved = NULL(name='currentLocationRetrieved', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LocationInformation_sai_Present = NULL(name='sai-Present', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LocationInformation_locationInformationEPS = SEQ(name='locationInformationEPS', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationInformationEPS')), opt=True)
    _LocationInformation_userCSGInformation = SEQ(name='userCSGInformation', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UserCSGInformation')), opt=True)
    LocationInformation._cont = ASN1Dict([
        ('ageOfLocationInformation', _LocationInformation_ageOfLocationInformation),
        ('geographicalInformation', _LocationInformation_geographicalInformation),
        ('vlr-number', _LocationInformation_vlr_number),
        ('locationNumber', _LocationInformation_locationNumber),
        ('cellGlobalIdOrServiceAreaIdOrLAI', _LocationInformation_cellGlobalIdOrServiceAreaIdOrLAI),
        ('extensionContainer', _LocationInformation_extensionContainer),
        ('selectedLSA-Id', _LocationInformation_selectedLSA_Id),
        ('msc-Number', _LocationInformation_msc_Number),
        ('geodeticInformation', _LocationInformation_geodeticInformation),
        ('currentLocationRetrieved', _LocationInformation_currentLocationRetrieved),
        ('sai-Present', _LocationInformation_sai_Present),
        ('locationInformationEPS', _LocationInformation_locationInformationEPS),
        ('userCSGInformation', _LocationInformation_userCSGInformation),
        ])
    LocationInformation._ext = ['selectedLSA-Id', 'msc-Number', 'geodeticInformation', 'currentLocationRetrieved', 'sai-Present', 'locationInformationEPS', 'userCSGInformation']
    
    #-----< LocationInformationEPS >-----#
    LocationInformationEPS = SEQ(name='LocationInformationEPS', mode=MODE_TYPE)
    _LocationInformationEPS_e_utranCellGlobalIdentity = OCT_STR(name='e-utranCellGlobalIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'E-UTRAN-CGI')), opt=True)
    _LocationInformationEPS_trackingAreaIdentity = OCT_STR(name='trackingAreaIdentity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'TA-Id')), opt=True)
    _LocationInformationEPS_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _LocationInformationEPS_geographicalInformation = OCT_STR(name='geographicalInformation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GeographicalInformation')), opt=True)
    _LocationInformationEPS_geodeticInformation = OCT_STR(name='geodeticInformation', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GeodeticInformation')), opt=True)
    _LocationInformationEPS_currentLocationRetrieved = NULL(name='currentLocationRetrieved', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LocationInformationEPS_ageOfLocationInformation = INT(name='ageOfLocationInformation', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AgeOfLocationInformation')), opt=True)
    _LocationInformationEPS_mme_Name = OCT_STR(name='mme-Name', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'DiameterIdentity')), opt=True)
    LocationInformationEPS._cont = ASN1Dict([
        ('e-utranCellGlobalIdentity', _LocationInformationEPS_e_utranCellGlobalIdentity),
        ('trackingAreaIdentity', _LocationInformationEPS_trackingAreaIdentity),
        ('extensionContainer', _LocationInformationEPS_extensionContainer),
        ('geographicalInformation', _LocationInformationEPS_geographicalInformation),
        ('geodeticInformation', _LocationInformationEPS_geodeticInformation),
        ('currentLocationRetrieved', _LocationInformationEPS_currentLocationRetrieved),
        ('ageOfLocationInformation', _LocationInformationEPS_ageOfLocationInformation),
        ('mme-Name', _LocationInformationEPS_mme_Name),
        ])
    LocationInformationEPS._ext = ['mme-Name']
    
    #-----< LocationInformationGPRS >-----#
    LocationInformationGPRS = SEQ(name='LocationInformationGPRS', mode=MODE_TYPE)
    _LocationInformationGPRS_cellGlobalIdOrServiceAreaIdOrLAI = CHOICE(name='cellGlobalIdOrServiceAreaIdOrLAI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'CellGlobalIdOrServiceAreaIdOrLAI')), opt=True)
    _LocationInformationGPRS_routeingAreaIdentity = OCT_STR(name='routeingAreaIdentity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'RAIdentity')), opt=True)
    _LocationInformationGPRS_geographicalInformation = OCT_STR(name='geographicalInformation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GeographicalInformation')), opt=True)
    _LocationInformationGPRS_sgsn_Number = OCT_STR(name='sgsn-Number', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _LocationInformationGPRS_selectedLSAIdentity = OCT_STR(name='selectedLSAIdentity', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LSAIdentity')), opt=True)
    _LocationInformationGPRS_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _LocationInformationGPRS_sai_Present = NULL(name='sai-Present', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LocationInformationGPRS_geodeticInformation = OCT_STR(name='geodeticInformation', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GeodeticInformation')), opt=True)
    _LocationInformationGPRS_currentLocationRetrieved = NULL(name='currentLocationRetrieved', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LocationInformationGPRS_ageOfLocationInformation = INT(name='ageOfLocationInformation', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AgeOfLocationInformation')), opt=True)
    _LocationInformationGPRS_userCSGInformation = SEQ(name='userCSGInformation', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'UserCSGInformation')), opt=True)
    LocationInformationGPRS._cont = ASN1Dict([
        ('cellGlobalIdOrServiceAreaIdOrLAI', _LocationInformationGPRS_cellGlobalIdOrServiceAreaIdOrLAI),
        ('routeingAreaIdentity', _LocationInformationGPRS_routeingAreaIdentity),
        ('geographicalInformation', _LocationInformationGPRS_geographicalInformation),
        ('sgsn-Number', _LocationInformationGPRS_sgsn_Number),
        ('selectedLSAIdentity', _LocationInformationGPRS_selectedLSAIdentity),
        ('extensionContainer', _LocationInformationGPRS_extensionContainer),
        ('sai-Present', _LocationInformationGPRS_sai_Present),
        ('geodeticInformation', _LocationInformationGPRS_geodeticInformation),
        ('currentLocationRetrieved', _LocationInformationGPRS_currentLocationRetrieved),
        ('ageOfLocationInformation', _LocationInformationGPRS_ageOfLocationInformation),
        ('userCSGInformation', _LocationInformationGPRS_userCSGInformation),
        ])
    LocationInformationGPRS._ext = ['sai-Present', 'geodeticInformation', 'currentLocationRetrieved', 'ageOfLocationInformation', 'userCSGInformation']
    
    #-----< UserCSGInformation >-----#
    UserCSGInformation = SEQ(name='UserCSGInformation', mode=MODE_TYPE)
    _UserCSGInformation_csg_Id = BIT_STR(name='csg-Id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CSG-Id')))
    _UserCSGInformation_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _UserCSGInformation_accessMode = OCT_STR(name='accessMode', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UserCSGInformation_accessMode._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _UserCSGInformation_cmi = OCT_STR(name='cmi', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UserCSGInformation_cmi._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    UserCSGInformation._cont = ASN1Dict([
        ('csg-Id', _UserCSGInformation_csg_Id),
        ('extensionContainer', _UserCSGInformation_extensionContainer),
        ('accessMode', _UserCSGInformation_accessMode),
        ('cmi', _UserCSGInformation_cmi),
        ])
    UserCSGInformation._ext = ['accessMode', 'cmi']
    
    #-----< GeographicalInformation >-----#
    GeographicalInformation = OCT_STR(name='GeographicalInformation', mode=MODE_TYPE)
    GeographicalInformation._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< GeodeticInformation >-----#
    GeodeticInformation = OCT_STR(name='GeodeticInformation', mode=MODE_TYPE)
    GeodeticInformation._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    
    #-----< LocationNumber >-----#
    LocationNumber = OCT_STR(name='LocationNumber', mode=MODE_TYPE)
    LocationNumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=10)], ev=None, er=[])
    
    #-----< SubscriberState >-----#
    SubscriberState = CHOICE(name='SubscriberState', mode=MODE_TYPE)
    _SubscriberState_assumedIdle = NULL(name='assumedIdle', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SubscriberState_camelBusy = NULL(name='camelBusy', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SubscriberState_netDetNotReachable = ENUM(name='netDetNotReachable', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NotReachableReason')))
    _SubscriberState_notProvidedFromVLR = NULL(name='notProvidedFromVLR', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SubscriberState._cont = ASN1Dict([
        ('assumedIdle', _SubscriberState_assumedIdle),
        ('camelBusy', _SubscriberState_camelBusy),
        ('netDetNotReachable', _SubscriberState_netDetNotReachable),
        ('notProvidedFromVLR', _SubscriberState_notProvidedFromVLR),
        ])
    SubscriberState._ext = None
    
    #-----< PS-SubscriberState >-----#
    PS_SubscriberState = CHOICE(name='PS-SubscriberState', mode=MODE_TYPE)
    _PS_SubscriberState_notProvidedFromSGSNorMME = NULL(name='notProvidedFromSGSNorMME', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PS_SubscriberState_ps_Detached = NULL(name='ps-Detached', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PS_SubscriberState_ps_AttachedNotReachableForPaging = NULL(name='ps-AttachedNotReachableForPaging', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PS_SubscriberState_ps_AttachedReachableForPaging = NULL(name='ps-AttachedReachableForPaging', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PS_SubscriberState_ps_PDP_ActiveNotReachableForPaging = SEQ_OF(name='ps-PDP-ActiveNotReachableForPaging', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-ContextInfoList')))
    _PS_SubscriberState_ps_PDP_ActiveReachableForPaging = SEQ_OF(name='ps-PDP-ActiveReachableForPaging', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-ContextInfoList')))
    _PS_SubscriberState_netDetNotReachable = ENUM(name='netDetNotReachable', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'NotReachableReason')))
    PS_SubscriberState._cont = ASN1Dict([
        ('notProvidedFromSGSNorMME', _PS_SubscriberState_notProvidedFromSGSNorMME),
        ('ps-Detached', _PS_SubscriberState_ps_Detached),
        ('ps-AttachedNotReachableForPaging', _PS_SubscriberState_ps_AttachedNotReachableForPaging),
        ('ps-AttachedReachableForPaging', _PS_SubscriberState_ps_AttachedReachableForPaging),
        ('ps-PDP-ActiveNotReachableForPaging', _PS_SubscriberState_ps_PDP_ActiveNotReachableForPaging),
        ('ps-PDP-ActiveReachableForPaging', _PS_SubscriberState_ps_PDP_ActiveReachableForPaging),
        ('netDetNotReachable', _PS_SubscriberState_netDetNotReachable),
        ])
    PS_SubscriberState._ext = None
    
    #-----< PDP-ContextInfoList >-----#
    PDP_ContextInfoList = SEQ_OF(name='PDP-ContextInfoList', mode=MODE_TYPE)
    _PDP_ContextInfoList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-ContextInfo')))
    PDP_ContextInfoList._cont = _PDP_ContextInfoList__item_
    PDP_ContextInfoList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< PDP-ContextInfo >-----#
    PDP_ContextInfo = SEQ(name='PDP-ContextInfo', mode=MODE_TYPE)
    _PDP_ContextInfo_pdp_ContextIdentifier = INT(name='pdp-ContextIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ContextId')))
    _PDP_ContextInfo_pdp_ContextActive = NULL(name='pdp-ContextActive', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PDP_ContextInfo_pdp_Type = OCT_STR(name='pdp-Type', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Type')))
    _PDP_ContextInfo_pdp_Address = OCT_STR(name='pdp-Address', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Address')), opt=True)
    _PDP_ContextInfo_apn_Subscribed = OCT_STR(name='apn-Subscribed', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN')), opt=True)
    _PDP_ContextInfo_apn_InUse = OCT_STR(name='apn-InUse', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'APN')), opt=True)
    _PDP_ContextInfo_nsapi = INT(name='nsapi', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'NSAPI')), opt=True)
    _PDP_ContextInfo_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TransactionId')), opt=True)
    _PDP_ContextInfo_teid_ForGnAndGp = OCT_STR(name='teid-ForGnAndGp', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TEID')), opt=True)
    _PDP_ContextInfo_teid_ForIu = OCT_STR(name='teid-ForIu', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'TEID')), opt=True)
    _PDP_ContextInfo_ggsn_Address = OCT_STR(name='ggsn-Address', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _PDP_ContextInfo_qos_Subscribed = OCT_STR(name='qos-Subscribed', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos_Requested = OCT_STR(name='qos-Requested', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos_Negotiated = OCT_STR(name='qos-Negotiated', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_chargingId = OCT_STR(name='chargingId', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRSChargingID')), opt=True)
    _PDP_ContextInfo_chargingCharacteristics = OCT_STR(name='chargingCharacteristics', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ChargingCharacteristics')), opt=True)
    _PDP_ContextInfo_rnc_Address = OCT_STR(name='rnc-Address', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _PDP_ContextInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _PDP_ContextInfo_qos2_Subscribed = OCT_STR(name='qos2-Subscribed', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext2-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos2_Requested = OCT_STR(name='qos2-Requested', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext2-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos2_Negotiated = OCT_STR(name='qos2-Negotiated', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext2-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos3_Subscribed = OCT_STR(name='qos3-Subscribed', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext3-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos3_Requested = OCT_STR(name='qos3-Requested', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext3-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos3_Negotiated = OCT_STR(name='qos3-Negotiated', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext3-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos4_Subscribed = OCT_STR(name='qos4-Subscribed', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext4-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos4_Requested = OCT_STR(name='qos4-Requested', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext4-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_qos4_Negotiated = OCT_STR(name='qos4-Negotiated', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext4-QoS-Subscribed')), opt=True)
    _PDP_ContextInfo_ext_pdp_Type = OCT_STR(name='ext-pdp-Type', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-PDP-Type')), opt=True)
    _PDP_ContextInfo_ext_pdp_Address = OCT_STR(name='ext-pdp-Address', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'PDP-Address')), opt=True)
    PDP_ContextInfo._cont = ASN1Dict([
        ('pdp-ContextIdentifier', _PDP_ContextInfo_pdp_ContextIdentifier),
        ('pdp-ContextActive', _PDP_ContextInfo_pdp_ContextActive),
        ('pdp-Type', _PDP_ContextInfo_pdp_Type),
        ('pdp-Address', _PDP_ContextInfo_pdp_Address),
        ('apn-Subscribed', _PDP_ContextInfo_apn_Subscribed),
        ('apn-InUse', _PDP_ContextInfo_apn_InUse),
        ('nsapi', _PDP_ContextInfo_nsapi),
        ('transactionId', _PDP_ContextInfo_transactionId),
        ('teid-ForGnAndGp', _PDP_ContextInfo_teid_ForGnAndGp),
        ('teid-ForIu', _PDP_ContextInfo_teid_ForIu),
        ('ggsn-Address', _PDP_ContextInfo_ggsn_Address),
        ('qos-Subscribed', _PDP_ContextInfo_qos_Subscribed),
        ('qos-Requested', _PDP_ContextInfo_qos_Requested),
        ('qos-Negotiated', _PDP_ContextInfo_qos_Negotiated),
        ('chargingId', _PDP_ContextInfo_chargingId),
        ('chargingCharacteristics', _PDP_ContextInfo_chargingCharacteristics),
        ('rnc-Address', _PDP_ContextInfo_rnc_Address),
        ('extensionContainer', _PDP_ContextInfo_extensionContainer),
        ('qos2-Subscribed', _PDP_ContextInfo_qos2_Subscribed),
        ('qos2-Requested', _PDP_ContextInfo_qos2_Requested),
        ('qos2-Negotiated', _PDP_ContextInfo_qos2_Negotiated),
        ('qos3-Subscribed', _PDP_ContextInfo_qos3_Subscribed),
        ('qos3-Requested', _PDP_ContextInfo_qos3_Requested),
        ('qos3-Negotiated', _PDP_ContextInfo_qos3_Negotiated),
        ('qos4-Subscribed', _PDP_ContextInfo_qos4_Subscribed),
        ('qos4-Requested', _PDP_ContextInfo_qos4_Requested),
        ('qos4-Negotiated', _PDP_ContextInfo_qos4_Negotiated),
        ('ext-pdp-Type', _PDP_ContextInfo_ext_pdp_Type),
        ('ext-pdp-Address', _PDP_ContextInfo_ext_pdp_Address),
        ])
    PDP_ContextInfo._ext = ['qos2-Subscribed', 'qos2-Requested', 'qos2-Negotiated', 'qos3-Subscribed', 'qos3-Requested', 'qos3-Negotiated', 'qos4-Subscribed', 'qos4-Requested', 'qos4-Negotiated', 'ext-pdp-Type', 'ext-pdp-Address']
    
    #-----< NSAPI >-----#
    NSAPI = INT(name='NSAPI', mode=MODE_TYPE)
    NSAPI._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    
    #-----< TransactionId >-----#
    TransactionId = OCT_STR(name='TransactionId', mode=MODE_TYPE)
    TransactionId._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    
    #-----< TEID >-----#
    TEID = OCT_STR(name='TEID', mode=MODE_TYPE)
    TEID._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< GPRSChargingID >-----#
    GPRSChargingID = OCT_STR(name='GPRSChargingID', mode=MODE_TYPE)
    GPRSChargingID._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< NotReachableReason >-----#
    NotReachableReason = ENUM(name='NotReachableReason', mode=MODE_TYPE)
    NotReachableReason._cont = ASN1Dict([('msPurged', 0), ('imsiDetached', 1), ('restrictedArea', 2), ('notRegistered', 3)])
    NotReachableReason._ext = None
    
    #-----< AnyTimeInterrogationArg >-----#
    AnyTimeInterrogationArg = SEQ(name='AnyTimeInterrogationArg', mode=MODE_TYPE)
    _AnyTimeInterrogationArg_subscriberIdentity = CHOICE(name='subscriberIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'SubscriberIdentity')))
    _AnyTimeInterrogationArg_requestedInfo = SEQ(name='requestedInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RequestedInfo')))
    _AnyTimeInterrogationArg_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _AnyTimeInterrogationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    AnyTimeInterrogationArg._cont = ASN1Dict([
        ('subscriberIdentity', _AnyTimeInterrogationArg_subscriberIdentity),
        ('requestedInfo', _AnyTimeInterrogationArg_requestedInfo),
        ('gsmSCF-Address', _AnyTimeInterrogationArg_gsmSCF_Address),
        ('extensionContainer', _AnyTimeInterrogationArg_extensionContainer),
        ])
    AnyTimeInterrogationArg._ext = []
    
    #-----< AnyTimeInterrogationRes >-----#
    AnyTimeInterrogationRes = SEQ(name='AnyTimeInterrogationRes', mode=MODE_TYPE)
    _AnyTimeInterrogationRes_subscriberInfo = SEQ(name='subscriberInfo', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'SubscriberInfo')))
    _AnyTimeInterrogationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    AnyTimeInterrogationRes._cont = ASN1Dict([
        ('subscriberInfo', _AnyTimeInterrogationRes_subscriberInfo),
        ('extensionContainer', _AnyTimeInterrogationRes_extensionContainer),
        ])
    AnyTimeInterrogationRes._ext = []
    
    #-----< AnyTimeSubscriptionInterrogationArg >-----#
    AnyTimeSubscriptionInterrogationArg = SEQ(name='AnyTimeSubscriptionInterrogationArg', mode=MODE_TYPE)
    _AnyTimeSubscriptionInterrogationArg_subscriberIdentity = CHOICE(name='subscriberIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'SubscriberIdentity')))
    _AnyTimeSubscriptionInterrogationArg_requestedSubscriptionInfo = SEQ(name='requestedSubscriptionInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RequestedSubscriptionInfo')))
    _AnyTimeSubscriptionInterrogationArg_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _AnyTimeSubscriptionInterrogationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _AnyTimeSubscriptionInterrogationArg_longFTN_Supported = NULL(name='longFTN-Supported', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    AnyTimeSubscriptionInterrogationArg._cont = ASN1Dict([
        ('subscriberIdentity', _AnyTimeSubscriptionInterrogationArg_subscriberIdentity),
        ('requestedSubscriptionInfo', _AnyTimeSubscriptionInterrogationArg_requestedSubscriptionInfo),
        ('gsmSCF-Address', _AnyTimeSubscriptionInterrogationArg_gsmSCF_Address),
        ('extensionContainer', _AnyTimeSubscriptionInterrogationArg_extensionContainer),
        ('longFTN-Supported', _AnyTimeSubscriptionInterrogationArg_longFTN_Supported),
        ])
    AnyTimeSubscriptionInterrogationArg._ext = []
    
    #-----< AnyTimeSubscriptionInterrogationRes >-----#
    AnyTimeSubscriptionInterrogationRes = SEQ(name='AnyTimeSubscriptionInterrogationRes', mode=MODE_TYPE)
    _AnyTimeSubscriptionInterrogationRes_callForwardingData = SEQ(name='callForwardingData', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CallForwardingData')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_callBarringData = SEQ(name='callBarringData', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CallBarringData')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_odb_Info = SEQ(name='odb-Info', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-Info')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_camel_SubscriptionInfo = SEQ(name='camel-SubscriptionInfo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CAMEL-SubscriptionInfo')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_supportedVLR_CAMEL_Phases = BIT_STR(name='supportedVLR-CAMEL-Phases', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedCamelPhases')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_supportedSGSN_CAMEL_Phases = BIT_STR(name='supportedSGSN-CAMEL-Phases', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedCamelPhases')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_offeredCamel4CSIsInVLR = BIT_STR(name='offeredCamel4CSIsInVLR', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'OfferedCamel4CSIs')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_offeredCamel4CSIsInSGSN = BIT_STR(name='offeredCamel4CSIsInSGSN', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'OfferedCamel4CSIs')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_msisdn_BS_List = SEQ_OF(name='msisdn-BS-List', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MSISDN-BS-List')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_csg_SubscriptionDataList = SEQ_OF(name='csg-SubscriptionDataList', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CSG-SubscriptionDataList')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_cw_Data = SEQ(name='cw-Data', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CallWaitingData')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_ch_Data = SEQ(name='ch-Data', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CallHoldData')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_clip_Data = SEQ(name='clip-Data', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ClipData')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_clir_Data = SEQ(name='clir-Data', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ClirData')), opt=True)
    _AnyTimeSubscriptionInterrogationRes_ect_data = SEQ(name='ect-data', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EctData')), opt=True)
    AnyTimeSubscriptionInterrogationRes._cont = ASN1Dict([
        ('callForwardingData', _AnyTimeSubscriptionInterrogationRes_callForwardingData),
        ('callBarringData', _AnyTimeSubscriptionInterrogationRes_callBarringData),
        ('odb-Info', _AnyTimeSubscriptionInterrogationRes_odb_Info),
        ('camel-SubscriptionInfo', _AnyTimeSubscriptionInterrogationRes_camel_SubscriptionInfo),
        ('supportedVLR-CAMEL-Phases', _AnyTimeSubscriptionInterrogationRes_supportedVLR_CAMEL_Phases),
        ('supportedSGSN-CAMEL-Phases', _AnyTimeSubscriptionInterrogationRes_supportedSGSN_CAMEL_Phases),
        ('extensionContainer', _AnyTimeSubscriptionInterrogationRes_extensionContainer),
        ('offeredCamel4CSIsInVLR', _AnyTimeSubscriptionInterrogationRes_offeredCamel4CSIsInVLR),
        ('offeredCamel4CSIsInSGSN', _AnyTimeSubscriptionInterrogationRes_offeredCamel4CSIsInSGSN),
        ('msisdn-BS-List', _AnyTimeSubscriptionInterrogationRes_msisdn_BS_List),
        ('csg-SubscriptionDataList', _AnyTimeSubscriptionInterrogationRes_csg_SubscriptionDataList),
        ('cw-Data', _AnyTimeSubscriptionInterrogationRes_cw_Data),
        ('ch-Data', _AnyTimeSubscriptionInterrogationRes_ch_Data),
        ('clip-Data', _AnyTimeSubscriptionInterrogationRes_clip_Data),
        ('clir-Data', _AnyTimeSubscriptionInterrogationRes_clir_Data),
        ('ect-data', _AnyTimeSubscriptionInterrogationRes_ect_data),
        ])
    AnyTimeSubscriptionInterrogationRes._ext = ['offeredCamel4CSIsInVLR', 'offeredCamel4CSIsInSGSN', 'msisdn-BS-List', 'csg-SubscriptionDataList', 'cw-Data', 'ch-Data', 'clip-Data', 'clir-Data', 'ect-data']
    
    #-----< CallWaitingData >-----#
    CallWaitingData = SEQ(name='CallWaitingData', mode=MODE_TYPE)
    _CallWaitingData_cwFeatureList = SEQ_OF(name='cwFeatureList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-CwFeatureList')))
    _CallWaitingData_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    CallWaitingData._cont = ASN1Dict([
        ('cwFeatureList', _CallWaitingData_cwFeatureList),
        ('notificationToCSE', _CallWaitingData_notificationToCSE),
        ])
    CallWaitingData._ext = []
    
    #-----< Ext-CwFeatureList >-----#
    Ext_CwFeatureList = SEQ_OF(name='Ext-CwFeatureList', mode=MODE_TYPE)
    _Ext_CwFeatureList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-CwFeature')))
    Ext_CwFeatureList._cont = _Ext_CwFeatureList__item_
    Ext_CwFeatureList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< Ext-CwFeature >-----#
    Ext_CwFeature = SEQ(name='Ext-CwFeature', mode=MODE_TYPE)
    _Ext_CwFeature_basicService = CHOICE(name='basicService', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')))
    _Ext_CwFeature_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    Ext_CwFeature._cont = ASN1Dict([
        ('basicService', _Ext_CwFeature_basicService),
        ('ss-Status', _Ext_CwFeature_ss_Status),
        ])
    Ext_CwFeature._ext = []
    
    #-----< ClipData >-----#
    ClipData = SEQ(name='ClipData', mode=MODE_TYPE)
    _ClipData_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _ClipData_overrideCategory = ENUM(name='overrideCategory', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'OverrideCategory')))
    _ClipData_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ClipData._cont = ASN1Dict([
        ('ss-Status', _ClipData_ss_Status),
        ('overrideCategory', _ClipData_overrideCategory),
        ('notificationToCSE', _ClipData_notificationToCSE),
        ])
    ClipData._ext = []
    
    #-----< ClirData >-----#
    ClirData = SEQ(name='ClirData', mode=MODE_TYPE)
    _ClirData_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _ClirData_cliRestrictionOption = ENUM(name='cliRestrictionOption', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CliRestrictionOption')), opt=True)
    _ClirData_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ClirData._cont = ASN1Dict([
        ('ss-Status', _ClirData_ss_Status),
        ('cliRestrictionOption', _ClirData_cliRestrictionOption),
        ('notificationToCSE', _ClirData_notificationToCSE),
        ])
    ClirData._ext = []
    
    #-----< CallHoldData >-----#
    CallHoldData = SEQ(name='CallHoldData', mode=MODE_TYPE)
    _CallHoldData_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _CallHoldData_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    CallHoldData._cont = ASN1Dict([
        ('ss-Status', _CallHoldData_ss_Status),
        ('notificationToCSE', _CallHoldData_notificationToCSE),
        ])
    CallHoldData._ext = []
    
    #-----< EctData >-----#
    EctData = SEQ(name='EctData', mode=MODE_TYPE)
    _EctData_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')))
    _EctData_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    EctData._cont = ASN1Dict([
        ('ss-Status', _EctData_ss_Status),
        ('notificationToCSE', _EctData_notificationToCSE),
        ])
    EctData._ext = []
    
    #-----< RequestedSubscriptionInfo >-----#
    RequestedSubscriptionInfo = SEQ(name='RequestedSubscriptionInfo', mode=MODE_TYPE)
    _RequestedSubscriptionInfo_requestedSS_Info = SEQ(name='requestedSS-Info', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-ForBS-Code')), opt=True)
    _RequestedSubscriptionInfo_odb = NULL(name='odb', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedSubscriptionInfo_requestedCAMEL_SubscriptionInfo = ENUM(name='requestedCAMEL-SubscriptionInfo', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RequestedCAMEL-SubscriptionInfo')), opt=True)
    _RequestedSubscriptionInfo_supportedVLR_CAMEL_Phases = NULL(name='supportedVLR-CAMEL-Phases', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedSubscriptionInfo_supportedSGSN_CAMEL_Phases = NULL(name='supportedSGSN-CAMEL-Phases', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedSubscriptionInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _RequestedSubscriptionInfo_additionalRequestedCAMEL_SubscriptionInfo = ENUM(name='additionalRequestedCAMEL-SubscriptionInfo', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdditionalRequestedCAMEL-SubscriptionInfo')), opt=True)
    _RequestedSubscriptionInfo_msisdn_BS_List = NULL(name='msisdn-BS-List', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedSubscriptionInfo_csg_SubscriptionDataRequested = NULL(name='csg-SubscriptionDataRequested', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedSubscriptionInfo_cw_Info = NULL(name='cw-Info', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedSubscriptionInfo_clip_Info = NULL(name='clip-Info', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedSubscriptionInfo_clir_Info = NULL(name='clir-Info', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedSubscriptionInfo_hold_Info = NULL(name='hold-Info', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RequestedSubscriptionInfo_ect_Info = NULL(name='ect-Info', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    RequestedSubscriptionInfo._cont = ASN1Dict([
        ('requestedSS-Info', _RequestedSubscriptionInfo_requestedSS_Info),
        ('odb', _RequestedSubscriptionInfo_odb),
        ('requestedCAMEL-SubscriptionInfo', _RequestedSubscriptionInfo_requestedCAMEL_SubscriptionInfo),
        ('supportedVLR-CAMEL-Phases', _RequestedSubscriptionInfo_supportedVLR_CAMEL_Phases),
        ('supportedSGSN-CAMEL-Phases', _RequestedSubscriptionInfo_supportedSGSN_CAMEL_Phases),
        ('extensionContainer', _RequestedSubscriptionInfo_extensionContainer),
        ('additionalRequestedCAMEL-SubscriptionInfo', _RequestedSubscriptionInfo_additionalRequestedCAMEL_SubscriptionInfo),
        ('msisdn-BS-List', _RequestedSubscriptionInfo_msisdn_BS_List),
        ('csg-SubscriptionDataRequested', _RequestedSubscriptionInfo_csg_SubscriptionDataRequested),
        ('cw-Info', _RequestedSubscriptionInfo_cw_Info),
        ('clip-Info', _RequestedSubscriptionInfo_clip_Info),
        ('clir-Info', _RequestedSubscriptionInfo_clir_Info),
        ('hold-Info', _RequestedSubscriptionInfo_hold_Info),
        ('ect-Info', _RequestedSubscriptionInfo_ect_Info),
        ])
    RequestedSubscriptionInfo._ext = ['additionalRequestedCAMEL-SubscriptionInfo', 'msisdn-BS-List', 'csg-SubscriptionDataRequested', 'cw-Info', 'clip-Info', 'clir-Info', 'hold-Info', 'ect-Info']
    
    #-----< MSISDN-BS-List >-----#
    MSISDN_BS_List = SEQ_OF(name='MSISDN-BS-List', mode=MODE_TYPE)
    _MSISDN_BS_List__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'MSISDN-BS')))
    MSISDN_BS_List._cont = _MSISDN_BS_List__item_
    MSISDN_BS_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=50)], ev=None, er=[])
    
    #-----< maxNumOfMSISDN >-----#
    maxNumOfMSISDN = INT(name='maxNumOfMSISDN', mode=MODE_VALUE)
    maxNumOfMSISDN._val = 50
    
    #-----< MSISDN-BS >-----#
    MSISDN_BS = SEQ(name='MSISDN-BS', mode=MODE_TYPE)
    _MSISDN_BS_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _MSISDN_BS_basicServiceList = SEQ_OF(name='basicServiceList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'BasicServiceList')), opt=True)
    _MSISDN_BS_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MSISDN_BS._cont = ASN1Dict([
        ('msisdn', _MSISDN_BS_msisdn),
        ('basicServiceList', _MSISDN_BS_basicServiceList),
        ('extensionContainer', _MSISDN_BS_extensionContainer),
        ])
    MSISDN_BS._ext = []
    
    #-----< RequestedCAMEL-SubscriptionInfo >-----#
    RequestedCAMEL_SubscriptionInfo = ENUM(name='RequestedCAMEL-SubscriptionInfo', mode=MODE_TYPE)
    RequestedCAMEL_SubscriptionInfo._cont = ASN1Dict([('o-CSI', 0), ('t-CSI', 1), ('vt-CSI', 2), ('tif-CSI', 3), ('gprs-CSI', 4), ('mo-sms-CSI', 5), ('ss-CSI', 6), ('m-CSI', 7), ('d-csi', 8)])
    RequestedCAMEL_SubscriptionInfo._ext = None
    
    #-----< AdditionalRequestedCAMEL-SubscriptionInfo >-----#
    AdditionalRequestedCAMEL_SubscriptionInfo = ENUM(name='AdditionalRequestedCAMEL-SubscriptionInfo', mode=MODE_TYPE)
    AdditionalRequestedCAMEL_SubscriptionInfo._cont = ASN1Dict([('mt-sms-CSI', 0), ('mg-csi', 1), ('o-IM-CSI', 2), ('d-IM-CSI', 3), ('vt-IM-CSI', 4)])
    AdditionalRequestedCAMEL_SubscriptionInfo._ext = []
    
    #-----< CallForwardingData >-----#
    CallForwardingData = SEQ(name='CallForwardingData', mode=MODE_TYPE)
    _CallForwardingData_forwardingFeatureList = SEQ_OF(name='forwardingFeatureList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-ForwFeatureList')))
    _CallForwardingData_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, opt=True)
    _CallForwardingData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CallForwardingData._cont = ASN1Dict([
        ('forwardingFeatureList', _CallForwardingData_forwardingFeatureList),
        ('notificationToCSE', _CallForwardingData_notificationToCSE),
        ('extensionContainer', _CallForwardingData_extensionContainer),
        ])
    CallForwardingData._ext = []
    
    #-----< CallBarringData >-----#
    CallBarringData = SEQ(name='CallBarringData', mode=MODE_TYPE)
    _CallBarringData_callBarringFeatureList = SEQ_OF(name='callBarringFeatureList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-CallBarFeatureList')))
    _CallBarringData_password = STR_NUM(name='password', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'Password')), opt=True)
    _CallBarringData_password._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    _CallBarringData_wrongPasswordAttemptsCounter = INT(name='wrongPasswordAttemptsCounter', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'WrongPasswordAttemptsCounter')), opt=True)
    _CallBarringData_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, opt=True)
    _CallBarringData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CallBarringData._cont = ASN1Dict([
        ('callBarringFeatureList', _CallBarringData_callBarringFeatureList),
        ('password', _CallBarringData_password),
        ('wrongPasswordAttemptsCounter', _CallBarringData_wrongPasswordAttemptsCounter),
        ('notificationToCSE', _CallBarringData_notificationToCSE),
        ('extensionContainer', _CallBarringData_extensionContainer),
        ])
    CallBarringData._ext = []
    
    #-----< WrongPasswordAttemptsCounter >-----#
    WrongPasswordAttemptsCounter = INT(name='WrongPasswordAttemptsCounter', mode=MODE_TYPE)
    WrongPasswordAttemptsCounter._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4)], ev=None, er=[])
    
    #-----< ODB-Info >-----#
    ODB_Info = SEQ(name='ODB-Info', mode=MODE_TYPE)
    _ODB_Info_odb_Data = SEQ(name='odb-Data', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-Data')))
    _ODB_Info_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, opt=True)
    _ODB_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ODB_Info._cont = ASN1Dict([
        ('odb-Data', _ODB_Info_odb_Data),
        ('notificationToCSE', _ODB_Info_notificationToCSE),
        ('extensionContainer', _ODB_Info_extensionContainer),
        ])
    ODB_Info._ext = []
    
    #-----< CAMEL-SubscriptionInfo >-----#
    CAMEL_SubscriptionInfo = SEQ(name='CAMEL-SubscriptionInfo', mode=MODE_TYPE)
    _CAMEL_SubscriptionInfo_o_CSI = SEQ(name='o-CSI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_o_BcsmCamelTDP_CriteriaList = SEQ_OF(name='o-BcsmCamelTDP-CriteriaList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-BcsmCamelTDPCriteriaList')), opt=True)
    _CAMEL_SubscriptionInfo_d_CSI = SEQ(name='d-CSI', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'D-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_t_CSI = SEQ(name='t-CSI', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_t_BCSM_CAMEL_TDP_CriteriaList = SEQ_OF(name='t-BCSM-CAMEL-TDP-CriteriaList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-BCSM-CAMEL-TDP-CriteriaList')), opt=True)
    _CAMEL_SubscriptionInfo_vt_CSI = SEQ(name='vt-CSI', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_vt_BCSM_CAMEL_TDP_CriteriaList = SEQ_OF(name='vt-BCSM-CAMEL-TDP-CriteriaList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-BCSM-CAMEL-TDP-CriteriaList')), opt=True)
    _CAMEL_SubscriptionInfo_tif_CSI = NULL(name='tif-CSI', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CAMEL_SubscriptionInfo_tif_CSI_NotificationToCSE = NULL(name='tif-CSI-NotificationToCSE', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CAMEL_SubscriptionInfo_gprs_CSI = SEQ(name='gprs-CSI', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'GPRS-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_mo_sms_CSI = SEQ(name='mo-sms-CSI', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_ss_CSI = SEQ(name='ss-CSI', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SS-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_m_CSI = SEQ(name='m-CSI', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'M-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _CAMEL_SubscriptionInfo_specificCSIDeletedList = BIT_STR(name='specificCSIDeletedList', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SpecificCSI-Withdraw')), opt=True)
    _CAMEL_SubscriptionInfo_mt_sms_CSI = SEQ(name='mt-sms-CSI', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SMS-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_mt_smsCAMELTDP_CriteriaList = SEQ_OF(name='mt-smsCAMELTDP-CriteriaList', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MT-smsCAMELTDP-CriteriaList')), opt=True)
    _CAMEL_SubscriptionInfo_mg_csi = SEQ(name='mg-csi', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MG-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_o_IM_CSI = SEQ(name='o-IM-CSI', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_o_IM_BcsmCamelTDP_CriteriaList = SEQ_OF(name='o-IM-BcsmCamelTDP-CriteriaList', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'O-BcsmCamelTDPCriteriaList')), opt=True)
    _CAMEL_SubscriptionInfo_d_IM_CSI = SEQ(name='d-IM-CSI', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'D-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_vt_IM_CSI = SEQ(name='vt-IM-CSI', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-CSI')), opt=True)
    _CAMEL_SubscriptionInfo_vt_IM_BCSM_CAMEL_TDP_CriteriaList = SEQ_OF(name='vt-IM-BCSM-CAMEL-TDP-CriteriaList', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'T-BCSM-CAMEL-TDP-CriteriaList')), opt=True)
    CAMEL_SubscriptionInfo._cont = ASN1Dict([
        ('o-CSI', _CAMEL_SubscriptionInfo_o_CSI),
        ('o-BcsmCamelTDP-CriteriaList', _CAMEL_SubscriptionInfo_o_BcsmCamelTDP_CriteriaList),
        ('d-CSI', _CAMEL_SubscriptionInfo_d_CSI),
        ('t-CSI', _CAMEL_SubscriptionInfo_t_CSI),
        ('t-BCSM-CAMEL-TDP-CriteriaList', _CAMEL_SubscriptionInfo_t_BCSM_CAMEL_TDP_CriteriaList),
        ('vt-CSI', _CAMEL_SubscriptionInfo_vt_CSI),
        ('vt-BCSM-CAMEL-TDP-CriteriaList', _CAMEL_SubscriptionInfo_vt_BCSM_CAMEL_TDP_CriteriaList),
        ('tif-CSI', _CAMEL_SubscriptionInfo_tif_CSI),
        ('tif-CSI-NotificationToCSE', _CAMEL_SubscriptionInfo_tif_CSI_NotificationToCSE),
        ('gprs-CSI', _CAMEL_SubscriptionInfo_gprs_CSI),
        ('mo-sms-CSI', _CAMEL_SubscriptionInfo_mo_sms_CSI),
        ('ss-CSI', _CAMEL_SubscriptionInfo_ss_CSI),
        ('m-CSI', _CAMEL_SubscriptionInfo_m_CSI),
        ('extensionContainer', _CAMEL_SubscriptionInfo_extensionContainer),
        ('specificCSIDeletedList', _CAMEL_SubscriptionInfo_specificCSIDeletedList),
        ('mt-sms-CSI', _CAMEL_SubscriptionInfo_mt_sms_CSI),
        ('mt-smsCAMELTDP-CriteriaList', _CAMEL_SubscriptionInfo_mt_smsCAMELTDP_CriteriaList),
        ('mg-csi', _CAMEL_SubscriptionInfo_mg_csi),
        ('o-IM-CSI', _CAMEL_SubscriptionInfo_o_IM_CSI),
        ('o-IM-BcsmCamelTDP-CriteriaList', _CAMEL_SubscriptionInfo_o_IM_BcsmCamelTDP_CriteriaList),
        ('d-IM-CSI', _CAMEL_SubscriptionInfo_d_IM_CSI),
        ('vt-IM-CSI', _CAMEL_SubscriptionInfo_vt_IM_CSI),
        ('vt-IM-BCSM-CAMEL-TDP-CriteriaList', _CAMEL_SubscriptionInfo_vt_IM_BCSM_CAMEL_TDP_CriteriaList),
        ])
    CAMEL_SubscriptionInfo._ext = ['specificCSIDeletedList', 'mt-sms-CSI', 'mt-smsCAMELTDP-CriteriaList', 'mg-csi', 'o-IM-CSI', 'o-IM-BcsmCamelTDP-CriteriaList', 'd-IM-CSI', 'vt-IM-CSI', 'vt-IM-BCSM-CAMEL-TDP-CriteriaList']
    
    #-----< AnyTimeModificationArg >-----#
    AnyTimeModificationArg = SEQ(name='AnyTimeModificationArg', mode=MODE_TYPE)
    _AnyTimeModificationArg_subscriberIdentity = CHOICE(name='subscriberIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'SubscriberIdentity')))
    _AnyTimeModificationArg_gsmSCF_Address = OCT_STR(name='gsmSCF-Address', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _AnyTimeModificationArg_modificationRequestFor_CF_Info = SEQ(name='modificationRequestFor-CF-Info', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-CF-Info')), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_CB_Info = SEQ(name='modificationRequestFor-CB-Info', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-CB-Info')), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_CSI = SEQ(name='modificationRequestFor-CSI', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-CSI')), opt=True)
    _AnyTimeModificationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _AnyTimeModificationArg_longFTN_Supported = NULL(name='longFTN-Supported', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_ODB_data = SEQ(name='modificationRequestFor-ODB-data', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-ODB-data')), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_IP_SM_GW_Data = SEQ(name='modificationRequestFor-IP-SM-GW-Data', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-IP-SM-GW-Data')), opt=True)
    _AnyTimeModificationArg_activationRequestForUE_reachability = BIT_STR(name='activationRequestForUE-reachability', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RequestedServingNode')), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_CSG = SEQ(name='modificationRequestFor-CSG', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-CSG')), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_CW_Data = SEQ(name='modificationRequestFor-CW-Data', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-CW-Info')), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_CLIP_Data = SEQ(name='modificationRequestFor-CLIP-Data', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-CLIP-Info')), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_CLIR_Data = SEQ(name='modificationRequestFor-CLIR-Data', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-CLIR-Info')), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_HOLD_Data = SEQ(name='modificationRequestFor-HOLD-Data', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-CH-Info')), opt=True)
    _AnyTimeModificationArg_modificationRequestFor_ECT_Data = SEQ(name='modificationRequestFor-ECT-Data', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationRequestFor-ECT-Info')), opt=True)
    AnyTimeModificationArg._cont = ASN1Dict([
        ('subscriberIdentity', _AnyTimeModificationArg_subscriberIdentity),
        ('gsmSCF-Address', _AnyTimeModificationArg_gsmSCF_Address),
        ('modificationRequestFor-CF-Info', _AnyTimeModificationArg_modificationRequestFor_CF_Info),
        ('modificationRequestFor-CB-Info', _AnyTimeModificationArg_modificationRequestFor_CB_Info),
        ('modificationRequestFor-CSI', _AnyTimeModificationArg_modificationRequestFor_CSI),
        ('extensionContainer', _AnyTimeModificationArg_extensionContainer),
        ('longFTN-Supported', _AnyTimeModificationArg_longFTN_Supported),
        ('modificationRequestFor-ODB-data', _AnyTimeModificationArg_modificationRequestFor_ODB_data),
        ('modificationRequestFor-IP-SM-GW-Data', _AnyTimeModificationArg_modificationRequestFor_IP_SM_GW_Data),
        ('activationRequestForUE-reachability', _AnyTimeModificationArg_activationRequestForUE_reachability),
        ('modificationRequestFor-CSG', _AnyTimeModificationArg_modificationRequestFor_CSG),
        ('modificationRequestFor-CW-Data', _AnyTimeModificationArg_modificationRequestFor_CW_Data),
        ('modificationRequestFor-CLIP-Data', _AnyTimeModificationArg_modificationRequestFor_CLIP_Data),
        ('modificationRequestFor-CLIR-Data', _AnyTimeModificationArg_modificationRequestFor_CLIR_Data),
        ('modificationRequestFor-HOLD-Data', _AnyTimeModificationArg_modificationRequestFor_HOLD_Data),
        ('modificationRequestFor-ECT-Data', _AnyTimeModificationArg_modificationRequestFor_ECT_Data),
        ])
    AnyTimeModificationArg._ext = ['modificationRequestFor-ODB-data', 'modificationRequestFor-IP-SM-GW-Data', 'activationRequestForUE-reachability', 'modificationRequestFor-CSG', 'modificationRequestFor-CW-Data', 'modificationRequestFor-CLIP-Data', 'modificationRequestFor-CLIR-Data', 'modificationRequestFor-HOLD-Data', 'modificationRequestFor-ECT-Data']
    
    #-----< ModificationRequestFor-CW-Info >-----#
    ModificationRequestFor_CW_Info = SEQ(name='ModificationRequestFor-CW-Info', mode=MODE_TYPE)
    _ModificationRequestFor_CW_Info_basicService = CHOICE(name='basicService', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')), opt=True)
    _ModificationRequestFor_CW_Info_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')), opt=True)
    _ModificationRequestFor_CW_Info_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_CW_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ModificationRequestFor_CW_Info._cont = ASN1Dict([
        ('basicService', _ModificationRequestFor_CW_Info_basicService),
        ('ss-Status', _ModificationRequestFor_CW_Info_ss_Status),
        ('modifyNotificationToCSE', _ModificationRequestFor_CW_Info_modifyNotificationToCSE),
        ('extensionContainer', _ModificationRequestFor_CW_Info_extensionContainer),
        ])
    ModificationRequestFor_CW_Info._ext = []
    
    #-----< ModificationRequestFor-CH-Info >-----#
    ModificationRequestFor_CH_Info = SEQ(name='ModificationRequestFor-CH-Info', mode=MODE_TYPE)
    _ModificationRequestFor_CH_Info_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')), opt=True)
    _ModificationRequestFor_CH_Info_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_CH_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ModificationRequestFor_CH_Info._cont = ASN1Dict([
        ('ss-Status', _ModificationRequestFor_CH_Info_ss_Status),
        ('modifyNotificationToCSE', _ModificationRequestFor_CH_Info_modifyNotificationToCSE),
        ('extensionContainer', _ModificationRequestFor_CH_Info_extensionContainer),
        ])
    ModificationRequestFor_CH_Info._ext = []
    
    #-----< ModificationRequestFor-ECT-Info >-----#
    ModificationRequestFor_ECT_Info = SEQ(name='ModificationRequestFor-ECT-Info', mode=MODE_TYPE)
    _ModificationRequestFor_ECT_Info_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')), opt=True)
    _ModificationRequestFor_ECT_Info_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_ECT_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ModificationRequestFor_ECT_Info._cont = ASN1Dict([
        ('ss-Status', _ModificationRequestFor_ECT_Info_ss_Status),
        ('modifyNotificationToCSE', _ModificationRequestFor_ECT_Info_modifyNotificationToCSE),
        ('extensionContainer', _ModificationRequestFor_ECT_Info_extensionContainer),
        ])
    ModificationRequestFor_ECT_Info._ext = []
    
    #-----< ModificationRequestFor-CLIR-Info >-----#
    ModificationRequestFor_CLIR_Info = SEQ(name='ModificationRequestFor-CLIR-Info', mode=MODE_TYPE)
    _ModificationRequestFor_CLIR_Info_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')), opt=True)
    _ModificationRequestFor_CLIR_Info_cliRestrictionOption = ENUM(name='cliRestrictionOption', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CliRestrictionOption')), opt=True)
    _ModificationRequestFor_CLIR_Info_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_CLIR_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ModificationRequestFor_CLIR_Info._cont = ASN1Dict([
        ('ss-Status', _ModificationRequestFor_CLIR_Info_ss_Status),
        ('cliRestrictionOption', _ModificationRequestFor_CLIR_Info_cliRestrictionOption),
        ('modifyNotificationToCSE', _ModificationRequestFor_CLIR_Info_modifyNotificationToCSE),
        ('extensionContainer', _ModificationRequestFor_CLIR_Info_extensionContainer),
        ])
    ModificationRequestFor_CLIR_Info._ext = []
    
    #-----< ModificationRequestFor-CLIP-Info >-----#
    ModificationRequestFor_CLIP_Info = SEQ(name='ModificationRequestFor-CLIP-Info', mode=MODE_TYPE)
    _ModificationRequestFor_CLIP_Info_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')), opt=True)
    _ModificationRequestFor_CLIP_Info_overrideCategory = ENUM(name='overrideCategory', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'OverrideCategory')), opt=True)
    _ModificationRequestFor_CLIP_Info_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_CLIP_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ModificationRequestFor_CLIP_Info._cont = ASN1Dict([
        ('ss-Status', _ModificationRequestFor_CLIP_Info_ss_Status),
        ('overrideCategory', _ModificationRequestFor_CLIP_Info_overrideCategory),
        ('modifyNotificationToCSE', _ModificationRequestFor_CLIP_Info_modifyNotificationToCSE),
        ('extensionContainer', _ModificationRequestFor_CLIP_Info_extensionContainer),
        ])
    ModificationRequestFor_CLIP_Info._ext = []
    
    #-----< ModificationRequestFor-CSG >-----#
    ModificationRequestFor_CSG = SEQ(name='ModificationRequestFor-CSG', mode=MODE_TYPE)
    _ModificationRequestFor_CSG_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_CSG_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ModificationRequestFor_CSG._cont = ASN1Dict([
        ('modifyNotificationToCSE', _ModificationRequestFor_CSG_modifyNotificationToCSE),
        ('extensionContainer', _ModificationRequestFor_CSG_extensionContainer),
        ])
    ModificationRequestFor_CSG._ext = []
    
    #-----< RequestedServingNode >-----#
    RequestedServingNode = BIT_STR(name='RequestedServingNode', mode=MODE_TYPE)
    RequestedServingNode._cont = ASN1Dict([('mmeAndSgsn', 0)])
    RequestedServingNode._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< ServingNode >-----#
    ServingNode = BIT_STR(name='ServingNode', mode=MODE_TYPE)
    ServingNode._cont = ASN1Dict([('mme', 0), ('sgsn', 1)])
    ServingNode._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=8)], ev=None, er=[])
    
    #-----< AnyTimeModificationRes >-----#
    AnyTimeModificationRes = SEQ(name='AnyTimeModificationRes', mode=MODE_TYPE)
    _AnyTimeModificationRes_ss_InfoFor_CSE = CHOICE(name='ss-InfoFor-CSE', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-SS-InfoFor-CSE')), opt=True)
    _AnyTimeModificationRes_camel_SubscriptionInfo = SEQ(name='camel-SubscriptionInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CAMEL-SubscriptionInfo')), opt=True)
    _AnyTimeModificationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _AnyTimeModificationRes_odb_Info = SEQ(name='odb-Info', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-Info')), opt=True)
    _AnyTimeModificationRes_cw_Data = SEQ(name='cw-Data', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CallWaitingData')), opt=True)
    _AnyTimeModificationRes_ch_Data = SEQ(name='ch-Data', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CallHoldData')), opt=True)
    _AnyTimeModificationRes_clip_Data = SEQ(name='clip-Data', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ClipData')), opt=True)
    _AnyTimeModificationRes_clir_Data = SEQ(name='clir-Data', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ClirData')), opt=True)
    _AnyTimeModificationRes_ect_data = SEQ(name='ect-data', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EctData')), opt=True)
    _AnyTimeModificationRes_serviceCentreAddress = OCT_STR(name='serviceCentreAddress', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')), opt=True)
    AnyTimeModificationRes._cont = ASN1Dict([
        ('ss-InfoFor-CSE', _AnyTimeModificationRes_ss_InfoFor_CSE),
        ('camel-SubscriptionInfo', _AnyTimeModificationRes_camel_SubscriptionInfo),
        ('extensionContainer', _AnyTimeModificationRes_extensionContainer),
        ('odb-Info', _AnyTimeModificationRes_odb_Info),
        ('cw-Data', _AnyTimeModificationRes_cw_Data),
        ('ch-Data', _AnyTimeModificationRes_ch_Data),
        ('clip-Data', _AnyTimeModificationRes_clip_Data),
        ('clir-Data', _AnyTimeModificationRes_clir_Data),
        ('ect-data', _AnyTimeModificationRes_ect_data),
        ('serviceCentreAddress', _AnyTimeModificationRes_serviceCentreAddress),
        ])
    AnyTimeModificationRes._ext = ['odb-Info', 'cw-Data', 'ch-Data', 'clip-Data', 'clir-Data', 'ect-data', 'serviceCentreAddress']
    
    #-----< ModificationRequestFor-CF-Info >-----#
    ModificationRequestFor_CF_Info = SEQ(name='ModificationRequestFor-CF-Info', mode=MODE_TYPE)
    _ModificationRequestFor_CF_Info_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _ModificationRequestFor_CF_Info_basicService = CHOICE(name='basicService', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')), opt=True)
    _ModificationRequestFor_CF_Info_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')), opt=True)
    _ModificationRequestFor_CF_Info_forwardedToNumber = OCT_STR(name='forwardedToNumber', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')), opt=True)
    _ModificationRequestFor_CF_Info_forwardedToSubaddress = OCT_STR(name='forwardedToSubaddress', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-SubaddressString')), opt=True)
    _ModificationRequestFor_CF_Info_noReplyConditionTime = INT(name='noReplyConditionTime', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-NoRepCondTime')), opt=True)
    _ModificationRequestFor_CF_Info_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_CF_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ModificationRequestFor_CF_Info._cont = ASN1Dict([
        ('ss-Code', _ModificationRequestFor_CF_Info_ss_Code),
        ('basicService', _ModificationRequestFor_CF_Info_basicService),
        ('ss-Status', _ModificationRequestFor_CF_Info_ss_Status),
        ('forwardedToNumber', _ModificationRequestFor_CF_Info_forwardedToNumber),
        ('forwardedToSubaddress', _ModificationRequestFor_CF_Info_forwardedToSubaddress),
        ('noReplyConditionTime', _ModificationRequestFor_CF_Info_noReplyConditionTime),
        ('modifyNotificationToCSE', _ModificationRequestFor_CF_Info_modifyNotificationToCSE),
        ('extensionContainer', _ModificationRequestFor_CF_Info_extensionContainer),
        ])
    ModificationRequestFor_CF_Info._ext = []
    
    #-----< ModificationRequestFor-CB-Info >-----#
    ModificationRequestFor_CB_Info = SEQ(name='ModificationRequestFor-CB-Info', mode=MODE_TYPE)
    _ModificationRequestFor_CB_Info_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _ModificationRequestFor_CB_Info_basicService = CHOICE(name='basicService', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-BasicServiceCode')), opt=True)
    _ModificationRequestFor_CB_Info_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Ext-SS-Status')), opt=True)
    _ModificationRequestFor_CB_Info_password = STR_NUM(name='password', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'Password')), opt=True)
    _ModificationRequestFor_CB_Info_password._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    _ModificationRequestFor_CB_Info_wrongPasswordAttemptsCounter = INT(name='wrongPasswordAttemptsCounter', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'WrongPasswordAttemptsCounter')), opt=True)
    _ModificationRequestFor_CB_Info_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_CB_Info_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ModificationRequestFor_CB_Info._cont = ASN1Dict([
        ('ss-Code', _ModificationRequestFor_CB_Info_ss_Code),
        ('basicService', _ModificationRequestFor_CB_Info_basicService),
        ('ss-Status', _ModificationRequestFor_CB_Info_ss_Status),
        ('password', _ModificationRequestFor_CB_Info_password),
        ('wrongPasswordAttemptsCounter', _ModificationRequestFor_CB_Info_wrongPasswordAttemptsCounter),
        ('modifyNotificationToCSE', _ModificationRequestFor_CB_Info_modifyNotificationToCSE),
        ('extensionContainer', _ModificationRequestFor_CB_Info_extensionContainer),
        ])
    ModificationRequestFor_CB_Info._ext = []
    
    #-----< ModificationRequestFor-ODB-data >-----#
    ModificationRequestFor_ODB_data = SEQ(name='ModificationRequestFor-ODB-data', mode=MODE_TYPE)
    _ModificationRequestFor_ODB_data_odb_data = SEQ(name='odb-data', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-Data')), opt=True)
    _ModificationRequestFor_ODB_data_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_ODB_data_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ModificationRequestFor_ODB_data._cont = ASN1Dict([
        ('odb-data', _ModificationRequestFor_ODB_data_odb_data),
        ('modifyNotificationToCSE', _ModificationRequestFor_ODB_data_modifyNotificationToCSE),
        ('extensionContainer', _ModificationRequestFor_ODB_data_extensionContainer),
        ])
    ModificationRequestFor_ODB_data._ext = []
    
    #-----< ModificationRequestFor-CSI >-----#
    ModificationRequestFor_CSI = SEQ(name='ModificationRequestFor-CSI', mode=MODE_TYPE)
    _ModificationRequestFor_CSI_requestedCamel_SubscriptionInfo = ENUM(name='requestedCamel-SubscriptionInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'RequestedCAMEL-SubscriptionInfo')))
    _ModificationRequestFor_CSI_modifyNotificationToCSE = ENUM(name='modifyNotificationToCSE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_CSI_modifyCSI_State = ENUM(name='modifyCSI-State', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_CSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ModificationRequestFor_CSI_additionalRequestedCAMEL_SubscriptionInfo = ENUM(name='additionalRequestedCAMEL-SubscriptionInfo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'AdditionalRequestedCAMEL-SubscriptionInfo')), opt=True)
    ModificationRequestFor_CSI._cont = ASN1Dict([
        ('requestedCamel-SubscriptionInfo', _ModificationRequestFor_CSI_requestedCamel_SubscriptionInfo),
        ('modifyNotificationToCSE', _ModificationRequestFor_CSI_modifyNotificationToCSE),
        ('modifyCSI-State', _ModificationRequestFor_CSI_modifyCSI_State),
        ('extensionContainer', _ModificationRequestFor_CSI_extensionContainer),
        ('additionalRequestedCAMEL-SubscriptionInfo', _ModificationRequestFor_CSI_additionalRequestedCAMEL_SubscriptionInfo),
        ])
    ModificationRequestFor_CSI._ext = ['additionalRequestedCAMEL-SubscriptionInfo']
    
    #-----< ModificationRequestFor-IP-SM-GW-Data >-----#
    ModificationRequestFor_IP_SM_GW_Data = SEQ(name='ModificationRequestFor-IP-SM-GW-Data', mode=MODE_TYPE)
    _ModificationRequestFor_IP_SM_GW_Data_modifyRegistrationStatus = ENUM(name='modifyRegistrationStatus', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ModificationInstruction')), opt=True)
    _ModificationRequestFor_IP_SM_GW_Data_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ModificationRequestFor_IP_SM_GW_Data_ip_sm_gw_DiameterAddress = SEQ(name='ip-sm-gw-DiameterAddress', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    ModificationRequestFor_IP_SM_GW_Data._cont = ASN1Dict([
        ('modifyRegistrationStatus', _ModificationRequestFor_IP_SM_GW_Data_modifyRegistrationStatus),
        ('extensionContainer', _ModificationRequestFor_IP_SM_GW_Data_extensionContainer),
        ('ip-sm-gw-DiameterAddress', _ModificationRequestFor_IP_SM_GW_Data_ip_sm_gw_DiameterAddress),
        ])
    ModificationRequestFor_IP_SM_GW_Data._ext = ['ip-sm-gw-DiameterAddress']
    
    #-----< ModificationInstruction >-----#
    ModificationInstruction = ENUM(name='ModificationInstruction', mode=MODE_TYPE)
    ModificationInstruction._cont = ASN1Dict([('deactivate', 0), ('activate', 1)])
    ModificationInstruction._ext = None
    
    #-----< NoteSubscriberDataModifiedArg >-----#
    NoteSubscriberDataModifiedArg = SEQ(name='NoteSubscriberDataModifiedArg', mode=MODE_TYPE)
    _NoteSubscriberDataModifiedArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _NoteSubscriberDataModifiedArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _NoteSubscriberDataModifiedArg_forwardingInfoFor_CSE = SEQ(name='forwardingInfoFor-CSE', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-ForwardingInfoFor-CSE')), opt=True)
    _NoteSubscriberDataModifiedArg_callBarringInfoFor_CSE = SEQ(name='callBarringInfoFor-CSE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-CallBarringInfoFor-CSE')), opt=True)
    _NoteSubscriberDataModifiedArg_odb_Info = SEQ(name='odb-Info', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ODB-Info')), opt=True)
    _NoteSubscriberDataModifiedArg_camel_SubscriptionInfo = SEQ(name='camel-SubscriptionInfo', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CAMEL-SubscriptionInfo')), opt=True)
    _NoteSubscriberDataModifiedArg_allInformationSent = NULL(name='allInformationSent', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _NoteSubscriberDataModifiedArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _NoteSubscriberDataModifiedArg_ue_reachable = BIT_STR(name='ue-reachable', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServingNode')), opt=True)
    _NoteSubscriberDataModifiedArg_csg_SubscriptionDataList = SEQ_OF(name='csg-SubscriptionDataList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CSG-SubscriptionDataList')), opt=True)
    _NoteSubscriberDataModifiedArg_cw_Data = SEQ(name='cw-Data', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CallWaitingData')), opt=True)
    _NoteSubscriberDataModifiedArg_ch_Data = SEQ(name='ch-Data', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'CallHoldData')), opt=True)
    _NoteSubscriberDataModifiedArg_clip_Data = SEQ(name='clip-Data', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ClipData')), opt=True)
    _NoteSubscriberDataModifiedArg_clir_Data = SEQ(name='clir-Data', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'ClirData')), opt=True)
    _NoteSubscriberDataModifiedArg_ect_data = SEQ(name='ect-data', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'EctData')), opt=True)
    NoteSubscriberDataModifiedArg._cont = ASN1Dict([
        ('imsi', _NoteSubscriberDataModifiedArg_imsi),
        ('msisdn', _NoteSubscriberDataModifiedArg_msisdn),
        ('forwardingInfoFor-CSE', _NoteSubscriberDataModifiedArg_forwardingInfoFor_CSE),
        ('callBarringInfoFor-CSE', _NoteSubscriberDataModifiedArg_callBarringInfoFor_CSE),
        ('odb-Info', _NoteSubscriberDataModifiedArg_odb_Info),
        ('camel-SubscriptionInfo', _NoteSubscriberDataModifiedArg_camel_SubscriptionInfo),
        ('allInformationSent', _NoteSubscriberDataModifiedArg_allInformationSent),
        ('extensionContainer', _NoteSubscriberDataModifiedArg_extensionContainer),
        ('ue-reachable', _NoteSubscriberDataModifiedArg_ue_reachable),
        ('csg-SubscriptionDataList', _NoteSubscriberDataModifiedArg_csg_SubscriptionDataList),
        ('cw-Data', _NoteSubscriberDataModifiedArg_cw_Data),
        ('ch-Data', _NoteSubscriberDataModifiedArg_ch_Data),
        ('clip-Data', _NoteSubscriberDataModifiedArg_clip_Data),
        ('clir-Data', _NoteSubscriberDataModifiedArg_clir_Data),
        ('ect-data', _NoteSubscriberDataModifiedArg_ect_data),
        ])
    NoteSubscriberDataModifiedArg._ext = ['ue-reachable', 'csg-SubscriptionDataList', 'cw-Data', 'ch-Data', 'clip-Data', 'clir-Data', 'ect-data']
    
    #-----< NoteSubscriberDataModifiedRes >-----#
    NoteSubscriberDataModifiedRes = SEQ(name='NoteSubscriberDataModifiedRes', mode=MODE_TYPE)
    _NoteSubscriberDataModifiedRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    NoteSubscriberDataModifiedRes._cont = ASN1Dict([
        ('extensionContainer', _NoteSubscriberDataModifiedRes_extensionContainer),
        ])
    NoteSubscriberDataModifiedRes._ext = []
    
    #-----< NoteMM-EventArg >-----#
    NoteMM_EventArg = SEQ(name='NoteMM-EventArg', mode=MODE_TYPE)
    _NoteMM_EventArg_serviceKey = INT(name='serviceKey', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-MS-DataTypes', 'ServiceKey')))
    _NoteMM_EventArg_eventMet = OCT_STR(name='eventMet', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'MM-Code')))
    _NoteMM_EventArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _NoteMM_EventArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _NoteMM_EventArg_locationInformation = SEQ(name='locationInformation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationInformation')), opt=True)
    _NoteMM_EventArg_supportedCAMELPhases = BIT_STR(name='supportedCAMELPhases', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'SupportedCamelPhases')), opt=True)
    _NoteMM_EventArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _NoteMM_EventArg_locationInformationGPRS = SEQ(name='locationInformationGPRS', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'LocationInformationGPRS')), opt=True)
    _NoteMM_EventArg_offeredCamel4Functionalities = BIT_STR(name='offeredCamel4Functionalities', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'OfferedCamel4Functionalities')), opt=True)
    NoteMM_EventArg._cont = ASN1Dict([
        ('serviceKey', _NoteMM_EventArg_serviceKey),
        ('eventMet', _NoteMM_EventArg_eventMet),
        ('imsi', _NoteMM_EventArg_imsi),
        ('msisdn', _NoteMM_EventArg_msisdn),
        ('locationInformation', _NoteMM_EventArg_locationInformation),
        ('supportedCAMELPhases', _NoteMM_EventArg_supportedCAMELPhases),
        ('extensionContainer', _NoteMM_EventArg_extensionContainer),
        ('locationInformationGPRS', _NoteMM_EventArg_locationInformationGPRS),
        ('offeredCamel4Functionalities', _NoteMM_EventArg_offeredCamel4Functionalities),
        ])
    NoteMM_EventArg._ext = ['locationInformationGPRS', 'offeredCamel4Functionalities']
    
    #-----< NoteMM-EventRes >-----#
    NoteMM_EventRes = SEQ(name='NoteMM-EventRes', mode=MODE_TYPE)
    _NoteMM_EventRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    NoteMM_EventRes._cont = ASN1Dict([
        ('extensionContainer', _NoteMM_EventRes_extensionContainer),
        ])
    NoteMM_EventRes._ext = []
    
    #-----< Ext-SS-InfoFor-CSE >-----#
    Ext_SS_InfoFor_CSE = CHOICE(name='Ext-SS-InfoFor-CSE', mode=MODE_TYPE)
    _Ext_SS_InfoFor_CSE_forwardingInfoFor_CSE = SEQ(name='forwardingInfoFor-CSE', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-ForwardingInfoFor-CSE')))
    _Ext_SS_InfoFor_CSE_callBarringInfoFor_CSE = SEQ(name='callBarringInfoFor-CSE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-CallBarringInfoFor-CSE')))
    Ext_SS_InfoFor_CSE._cont = ASN1Dict([
        ('forwardingInfoFor-CSE', _Ext_SS_InfoFor_CSE_forwardingInfoFor_CSE),
        ('callBarringInfoFor-CSE', _Ext_SS_InfoFor_CSE_callBarringInfoFor_CSE),
        ])
    Ext_SS_InfoFor_CSE._ext = None
    
    #-----< Ext-ForwardingInfoFor-CSE >-----#
    Ext_ForwardingInfoFor_CSE = SEQ(name='Ext-ForwardingInfoFor-CSE', mode=MODE_TYPE)
    _Ext_ForwardingInfoFor_CSE_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _Ext_ForwardingInfoFor_CSE_forwardingFeatureList = SEQ_OF(name='forwardingFeatureList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-ForwFeatureList')))
    _Ext_ForwardingInfoFor_CSE_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Ext_ForwardingInfoFor_CSE_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    Ext_ForwardingInfoFor_CSE._cont = ASN1Dict([
        ('ss-Code', _Ext_ForwardingInfoFor_CSE_ss_Code),
        ('forwardingFeatureList', _Ext_ForwardingInfoFor_CSE_forwardingFeatureList),
        ('notificationToCSE', _Ext_ForwardingInfoFor_CSE_notificationToCSE),
        ('extensionContainer', _Ext_ForwardingInfoFor_CSE_extensionContainer),
        ])
    Ext_ForwardingInfoFor_CSE._ext = []
    
    #-----< Ext-CallBarringInfoFor-CSE >-----#
    Ext_CallBarringInfoFor_CSE = SEQ(name='Ext-CallBarringInfoFor-CSE', mode=MODE_TYPE)
    _Ext_CallBarringInfoFor_CSE_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _Ext_CallBarringInfoFor_CSE_callBarringFeatureList = SEQ_OF(name='callBarringFeatureList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'Ext-CallBarFeatureList')))
    _Ext_CallBarringInfoFor_CSE_password = STR_NUM(name='password', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'Password')), opt=True)
    _Ext_CallBarringInfoFor_CSE_password._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    _Ext_CallBarringInfoFor_CSE_wrongPasswordAttemptsCounter = INT(name='wrongPasswordAttemptsCounter', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-MS-DataTypes', 'WrongPasswordAttemptsCounter')), opt=True)
    _Ext_CallBarringInfoFor_CSE_notificationToCSE = NULL(name='notificationToCSE', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Ext_CallBarringInfoFor_CSE_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    Ext_CallBarringInfoFor_CSE._cont = ASN1Dict([
        ('ss-Code', _Ext_CallBarringInfoFor_CSE_ss_Code),
        ('callBarringFeatureList', _Ext_CallBarringInfoFor_CSE_callBarringFeatureList),
        ('password', _Ext_CallBarringInfoFor_CSE_password),
        ('wrongPasswordAttemptsCounter', _Ext_CallBarringInfoFor_CSE_wrongPasswordAttemptsCounter),
        ('notificationToCSE', _Ext_CallBarringInfoFor_CSE_notificationToCSE),
        ('extensionContainer', _Ext_CallBarringInfoFor_CSE_extensionContainer),
        ])
    Ext_CallBarringInfoFor_CSE._ext = []
    
    #-----< UpdateVcsgLocationArg >-----#
    UpdateVcsgLocationArg = SEQ(name='UpdateVcsgLocationArg', mode=MODE_TYPE)
    _UpdateVcsgLocationArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _UpdateVcsgLocationArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _UpdateVcsgLocationArg_vlr_Number = OCT_STR(name='vlr-Number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _UpdateVcsgLocationArg_sgsn_Number = OCT_STR(name='sgsn-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _UpdateVcsgLocationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    UpdateVcsgLocationArg._cont = ASN1Dict([
        ('imsi', _UpdateVcsgLocationArg_imsi),
        ('msisdn', _UpdateVcsgLocationArg_msisdn),
        ('vlr-Number', _UpdateVcsgLocationArg_vlr_Number),
        ('sgsn-Number', _UpdateVcsgLocationArg_sgsn_Number),
        ('extensionContainer', _UpdateVcsgLocationArg_extensionContainer),
        ])
    UpdateVcsgLocationArg._ext = []
    
    #-----< UpdateVcsgLocationRes >-----#
    UpdateVcsgLocationRes = SEQ(name='UpdateVcsgLocationRes', mode=MODE_TYPE)
    _UpdateVcsgLocationRes_temporaryEmptySubscriptiondataIndicator = NULL(name='temporaryEmptySubscriptiondataIndicator', mode=MODE_TYPE, opt=True)
    _UpdateVcsgLocationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    UpdateVcsgLocationRes._cont = ASN1Dict([
        ('temporaryEmptySubscriptiondataIndicator', _UpdateVcsgLocationRes_temporaryEmptySubscriptiondataIndicator),
        ('extensionContainer', _UpdateVcsgLocationRes_extensionContainer),
        ])
    UpdateVcsgLocationRes._ext = []
    
    #-----< CancelVcsgLocationArg >-----#
    CancelVcsgLocationArg = SEQ(name='CancelVcsgLocationArg', mode=MODE_TYPE)
    _CancelVcsgLocationArg_identity = CHOICE(name='identity', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Identity')))
    _CancelVcsgLocationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CancelVcsgLocationArg._cont = ASN1Dict([
        ('identity', _CancelVcsgLocationArg_identity),
        ('extensionContainer', _CancelVcsgLocationArg_extensionContainer),
        ])
    CancelVcsgLocationArg._ext = []
    
    #-----< CancelVcsgLocationRes >-----#
    CancelVcsgLocationRes = SEQ(name='CancelVcsgLocationRes', mode=MODE_TYPE)
    _CancelVcsgLocationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    CancelVcsgLocationRes._cont = ASN1Dict([
        ('extensionContainer', _CancelVcsgLocationRes_extensionContainer),
        ])
    CancelVcsgLocationRes._ext = []
    
    _all_ = [
        _UpdateLocationArg_imsi,
        _UpdateLocationArg_msc_Number,
        _UpdateLocationArg_vlr_Number,
        _UpdateLocationArg_lmsi,
        _UpdateLocationArg_extensionContainer,
        _UpdateLocationArg_vlr_Capability,
        _UpdateLocationArg_informPreviousNetworkEntity,
        _UpdateLocationArg_cs_LCS_NotSupportedByUE,
        _UpdateLocationArg_v_gmlc_Address,
        _UpdateLocationArg_add_info,
        _UpdateLocationArg_pagingArea,
        _UpdateLocationArg_skipSubscriberDataUpdate,
        _UpdateLocationArg_restorationIndicator,
        _UpdateLocationArg_eplmn_List,
        _UpdateLocationArg_mme_DiameterAddress,
        UpdateLocationArg,
        _VLR_Capability_supportedCamelPhases,
        _VLR_Capability_extensionContainer,
        _VLR_Capability_solsaSupportIndicator,
        _VLR_Capability_istSupportIndicator,
        _VLR_Capability_superChargerSupportedInServingNetworkEntity,
        _VLR_Capability_longFTN_Supported,
        _VLR_Capability_supportedLCS_CapabilitySets,
        _VLR_Capability_offeredCamel4CSIs,
        _VLR_Capability_supportedRAT_TypesIndicator,
        _VLR_Capability_longGroupID_Supported,
        _VLR_Capability_mtRoamingForwardingSupported,
        _VLR_Capability_msisdn_lessOperation_Supported,
        VLR_Capability,
        SupportedRAT_Types,
        _SuperChargerInfo_sendSubscriberData,
        _SuperChargerInfo_subscriberDataStored,
        SuperChargerInfo,
        AgeIndicator,
        IST_SupportIndicator,
        SupportedLCS_CapabilitySets,
        _UpdateLocationRes_hlr_Number,
        _UpdateLocationRes_extensionContainer,
        _UpdateLocationRes_add_Capability,
        _UpdateLocationRes_pagingArea_Capability,
        UpdateLocationRes,
        _ADD_Info_imeisv,
        _ADD_Info_skipSubscriberDataUpdate,
        ADD_Info,
        _PagingArea__item_,
        PagingArea,
        _LocationArea_laiFixedLength,
        _LocationArea_lac,
        LocationArea,
        LAC,
        _CancelLocationArg_identity,
        _CancelLocationArg_cancellationType,
        _CancelLocationArg_extensionContainer,
        _CancelLocationArg_typeOfUpdate,
        _CancelLocationArg_mtrf_SupportedAndAuthorized,
        _CancelLocationArg_mtrf_SupportedAndNotAuthorized,
        _CancelLocationArg_newMSC_Number,
        _CancelLocationArg_newVLR_Number,
        _CancelLocationArg_new_lmsi,
        _CancelLocationArg_reattach_Required,
        CancelLocationArg,
        TypeOfUpdate,
        CancellationType,
        _CancelLocationRes_extensionContainer,
        CancelLocationRes,
        _PurgeMS_Arg_imsi,
        _PurgeMS_Arg_vlr_Number,
        _PurgeMS_Arg_sgsn_Number,
        _PurgeMS_Arg_extensionContainer,
        _PurgeMS_Arg_locationInformation,
        _PurgeMS_Arg_locationInformationGPRS,
        _PurgeMS_Arg_locationInformationEPS,
        PurgeMS_Arg,
        _PurgeMS_Res_freezeTMSI,
        _PurgeMS_Res_freezeP_TMSI,
        _PurgeMS_Res_extensionContainer,
        _PurgeMS_Res_freezeM_TMSI,
        PurgeMS_Res,
        _SendIdentificationArg_tmsi,
        _SendIdentificationArg_numberOfRequestedVectors,
        _SendIdentificationArg_segmentationProhibited,
        _SendIdentificationArg_extensionContainer,
        _SendIdentificationArg_msc_Number,
        _SendIdentificationArg_previous_LAI,
        _SendIdentificationArg_hopCounter,
        _SendIdentificationArg_mtRoamingForwardingSupported,
        _SendIdentificationArg_newVLR_Number,
        _SendIdentificationArg_new_lmsi,
        SendIdentificationArg,
        HopCounter,
        _SendIdentificationRes_imsi,
        _SendIdentificationRes_authenticationSetList,
        _SendIdentificationRes_currentSecurityContext,
        _SendIdentificationRes_extensionContainer,
        _SendIdentificationRes_lastUsedLtePLMN_Id,
        _SendIdentificationRes_mtCallPendingFlag,
        SendIdentificationRes,
        _AuthenticationSetList_tripletList,
        _AuthenticationSetList_quintupletList,
        AuthenticationSetList,
        _TripletList__item_,
        TripletList,
        _QuintupletList__item_,
        QuintupletList,
        _AuthenticationTriplet_rand,
        _AuthenticationTriplet_sres,
        _AuthenticationTriplet_kc,
        AuthenticationTriplet,
        _AuthenticationQuintuplet_rand,
        _AuthenticationQuintuplet_xres,
        _AuthenticationQuintuplet_ck,
        _AuthenticationQuintuplet_ik,
        _AuthenticationQuintuplet_autn,
        AuthenticationQuintuplet,
        _CurrentSecurityContext_gsm_SecurityContextData,
        _CurrentSecurityContext_umts_SecurityContextData,
        CurrentSecurityContext,
        _GSM_SecurityContextData_kc,
        _GSM_SecurityContextData_cksn,
        GSM_SecurityContextData,
        _UMTS_SecurityContextData_ck,
        _UMTS_SecurityContextData_ik,
        _UMTS_SecurityContextData_ksi,
        UMTS_SecurityContextData,
        RAND,
        SRES,
        Kc,
        XRES,
        CK,
        IK,
        AUTN,
        AUTS,
        Cksn,
        KSI,
        _AuthenticationFailureReportArg_imsi,
        _AuthenticationFailureReportArg_failureCause,
        _AuthenticationFailureReportArg_extensionContainer,
        _AuthenticationFailureReportArg_re_attempt,
        _AuthenticationFailureReportArg_accessType,
        _AuthenticationFailureReportArg_rand,
        _AuthenticationFailureReportArg_vlr_Number,
        _AuthenticationFailureReportArg_sgsn_Number,
        AuthenticationFailureReportArg,
        AccessType,
        _AuthenticationFailureReportRes_extensionContainer,
        AuthenticationFailureReportRes,
        FailureCause,
        _UpdateGprsLocationArg_imsi,
        _UpdateGprsLocationArg_sgsn_Number,
        _UpdateGprsLocationArg_sgsn_Address,
        _UpdateGprsLocationArg_extensionContainer,
        _UpdateGprsLocationArg_sgsn_Capability,
        _UpdateGprsLocationArg_informPreviousNetworkEntity,
        _UpdateGprsLocationArg_ps_LCS_NotSupportedByUE,
        _UpdateGprsLocationArg_v_gmlc_Address,
        _UpdateGprsLocationArg_add_info,
        _UpdateGprsLocationArg_eps_info,
        _UpdateGprsLocationArg_servingNodeTypeIndicator,
        _UpdateGprsLocationArg_skipSubscriberDataUpdate,
        _UpdateGprsLocationArg_usedRAT_Type,
        _UpdateGprsLocationArg_gprsSubscriptionDataNotNeeded,
        _UpdateGprsLocationArg_nodeTypeIndicator,
        _UpdateGprsLocationArg_areaRestricted,
        _UpdateGprsLocationArg_ue_reachableIndicator,
        _UpdateGprsLocationArg_epsSubscriptionDataNotNeeded,
        _UpdateGprsLocationArg_ue_srvcc_Capability,
        _UpdateGprsLocationArg_eplmn_List,
        _UpdateGprsLocationArg_mmeNumberforMTSMS,
        _UpdateGprsLocationArg_smsRegisterRequest,
        _UpdateGprsLocationArg_sms_Only,
        _UpdateGprsLocationArg_removalofMMERegistrationforSMS,
        _UpdateGprsLocationArg_sgsn_Name,
        _UpdateGprsLocationArg_sgsn_Realm,
        _UpdateGprsLocationArg_lgd_supportIndicator,
        _UpdateGprsLocationArg_adjacentPLMN_List,
        UpdateGprsLocationArg,
        SMSRegisterRequest,
        Used_RAT_Type,
        _EPS_Info_pdn_gw_update,
        _EPS_Info_isr_Information,
        EPS_Info,
        _PDN_GW_Update_apn,
        _PDN_GW_Update_pdn_gw_Identity,
        _PDN_GW_Update_contextId,
        _PDN_GW_Update_extensionContainer,
        PDN_GW_Update,
        ISR_Information,
        _SGSN_Capability_solsaSupportIndicator,
        _SGSN_Capability_extensionContainer,
        _SGSN_Capability_superChargerSupportedInServingNetworkEntity,
        _SGSN_Capability_gprsEnhancementsSupportIndicator,
        _SGSN_Capability_supportedCamelPhases,
        _SGSN_Capability_supportedLCS_CapabilitySets,
        _SGSN_Capability_offeredCamel4CSIs,
        _SGSN_Capability_smsCallBarringSupportIndicator,
        _SGSN_Capability_supportedRAT_TypesIndicator,
        _SGSN_Capability_supportedFeatures,
        _SGSN_Capability_t_adsDataRetrieval,
        _SGSN_Capability_homogeneousSupportOfIMSVoiceOverPSSessions,
        _SGSN_Capability_cancellationTypeInitialAttach,
        _SGSN_Capability_msisdn_lessOperation_Supported,
        _SGSN_Capability_updateofHomogeneousSupportOfIMSVoiceOverPSSessions,
        SGSN_Capability,
        SupportedFeatures,
        UE_SRVCC_Capability,
        _UpdateGprsLocationRes_hlr_Number,
        _UpdateGprsLocationRes_extensionContainer,
        _UpdateGprsLocationRes_add_Capability,
        _UpdateGprsLocationRes_sgsn_mmeSeparationSupported,
        _UpdateGprsLocationRes_mmeRegisteredforSMS,
        UpdateGprsLocationRes,
        _EPLMN_List__item_,
        EPLMN_List,
        _AdjacentPLMN_List__item_,
        AdjacentPLMN_List,
        _ForwardAccessSignalling_Arg_an_APDU,
        _ForwardAccessSignalling_Arg_integrityProtectionInfo,
        _ForwardAccessSignalling_Arg_encryptionInfo,
        _ForwardAccessSignalling_Arg_keyStatus,
        _ForwardAccessSignalling_Arg_allowedGSM_Algorithms,
        _ForwardAccessSignalling_Arg_allowedUMTS_Algorithms,
        _ForwardAccessSignalling_Arg_radioResourceInformation,
        _ForwardAccessSignalling_Arg_extensionContainer,
        _ForwardAccessSignalling_Arg_radioResourceList,
        _ForwardAccessSignalling_Arg_bssmap_ServiceHandover,
        _ForwardAccessSignalling_Arg_ranap_ServiceHandover,
        _ForwardAccessSignalling_Arg_bssmap_ServiceHandoverList,
        _ForwardAccessSignalling_Arg_currentlyUsedCodec,
        _ForwardAccessSignalling_Arg_iuSupportedCodecsList,
        _ForwardAccessSignalling_Arg_rab_ConfigurationIndicator,
        _ForwardAccessSignalling_Arg_iuSelectedCodec,
        _ForwardAccessSignalling_Arg_alternativeChannelType,
        _ForwardAccessSignalling_Arg_tracePropagationList,
        _ForwardAccessSignalling_Arg_aoipSupportedCodecsListAnchor,
        _ForwardAccessSignalling_Arg_aoipSelectedCodecTarget,
        _ForwardAccessSignalling_Arg_uesbi_Iu,
        _ForwardAccessSignalling_Arg_imeisv,
        ForwardAccessSignalling_Arg,
        AllowedGSM_Algorithms,
        _AllowedUMTS_Algorithms_integrityProtectionAlgorithms,
        _AllowedUMTS_Algorithms_encryptionAlgorithms,
        _AllowedUMTS_Algorithms_extensionContainer,
        AllowedUMTS_Algorithms,
        PermittedIntegrityProtectionAlgorithms,
        maxPermittedIntegrityProtectionAlgorithmsLength,
        PermittedEncryptionAlgorithms,
        maxPermittedEncryptionAlgorithmsLength,
        KeyStatus,
        _PrepareHO_Arg_targetCellId,
        _PrepareHO_Arg_ho_NumberNotRequired,
        _PrepareHO_Arg_targetRNCId,
        _PrepareHO_Arg_an_APDU,
        _PrepareHO_Arg_multipleBearerRequested,
        _PrepareHO_Arg_imsi,
        _PrepareHO_Arg_integrityProtectionInfo,
        _PrepareHO_Arg_encryptionInfo,
        _PrepareHO_Arg_radioResourceInformation,
        _PrepareHO_Arg_allowedGSM_Algorithms,
        _PrepareHO_Arg_allowedUMTS_Algorithms,
        _PrepareHO_Arg_radioResourceList,
        _PrepareHO_Arg_extensionContainer,
        _PrepareHO_Arg_rab_Id,
        _PrepareHO_Arg_bssmap_ServiceHandover,
        _PrepareHO_Arg_ranap_ServiceHandover,
        _PrepareHO_Arg_bssmap_ServiceHandoverList,
        _PrepareHO_Arg_asciCallReference,
        _PrepareHO_Arg_geran_classmark,
        _PrepareHO_Arg_iuCurrentlyUsedCodec,
        _PrepareHO_Arg_iuSupportedCodecsList,
        _PrepareHO_Arg_rab_ConfigurationIndicator,
        _PrepareHO_Arg_uesbi_Iu,
        _PrepareHO_Arg_imeisv,
        _PrepareHO_Arg_alternativeChannelType,
        _PrepareHO_Arg_tracePropagationList,
        _PrepareHO_Arg_aoipSupportedCodecsListAnchor,
        _PrepareHO_Arg_regionalSubscriptionData,
        _PrepareHO_Arg_lclsGlobalCallReference,
        _PrepareHO_Arg_lcls_Negotiation,
        _PrepareHO_Arg_lcls_Configuration_Preference,
        _PrepareHO_Arg_csg_SubscriptionDataList,
        PrepareHO_Arg,
        LCLS_GlobalCallReference,
        LCLS_Negotiation,
        LCLS_ConfigurationPreference,
        _BSSMAP_ServiceHandoverList__item_,
        BSSMAP_ServiceHandoverList,
        _BSSMAP_ServiceHandoverInfo_bssmap_ServiceHandover,
        _BSSMAP_ServiceHandoverInfo_rab_Id,
        BSSMAP_ServiceHandoverInfo,
        maxNumOfServiceHandovers,
        BSSMAP_ServiceHandover,
        RANAP_ServiceHandover,
        _RadioResourceList__item_,
        RadioResourceList,
        _RadioResource_radioResourceInformation,
        _RadioResource_rab_Id,
        RadioResource,
        maxNumOfRadioResources,
        _PrepareHO_Res_handoverNumber,
        _PrepareHO_Res_relocationNumberList,
        _PrepareHO_Res_an_APDU,
        _PrepareHO_Res_multicallBearerInfo,
        _PrepareHO_Res_multipleBearerNotSupported,
        _PrepareHO_Res_selectedUMTS_Algorithms,
        _PrepareHO_Res_chosenRadioResourceInformation,
        _PrepareHO_Res_extensionContainer,
        _PrepareHO_Res_iuSelectedCodec,
        _PrepareHO_Res_iuAvailableCodecsList,
        _PrepareHO_Res_aoipSelectedCodecTarget,
        _PrepareHO_Res_aoipAvailableCodecsListMap,
        PrepareHO_Res,
        _SelectedUMTS_Algorithms_integrityProtectionAlgorithm,
        _SelectedUMTS_Algorithms_encryptionAlgorithm,
        _SelectedUMTS_Algorithms_extensionContainer,
        SelectedUMTS_Algorithms,
        ChosenIntegrityProtectionAlgorithm,
        ChosenEncryptionAlgorithm,
        _ChosenRadioResourceInformation_chosenChannelInfo,
        _ChosenRadioResourceInformation_chosenSpeechVersion,
        ChosenRadioResourceInformation,
        ChosenChannelInfo,
        ChosenSpeechVersion,
        _PrepareSubsequentHO_Arg_targetCellId,
        _PrepareSubsequentHO_Arg_targetMSC_Number,
        _PrepareSubsequentHO_Arg_targetRNCId,
        _PrepareSubsequentHO_Arg_an_APDU,
        _PrepareSubsequentHO_Arg_selectedRab_Id,
        _PrepareSubsequentHO_Arg_extensionContainer,
        _PrepareSubsequentHO_Arg_geran_classmark,
        _PrepareSubsequentHO_Arg_rab_ConfigurationIndicator,
        PrepareSubsequentHO_Arg,
        _PrepareSubsequentHO_Res_an_APDU,
        _PrepareSubsequentHO_Res_extensionContainer,
        PrepareSubsequentHO_Res,
        _ProcessAccessSignalling_Arg_an_APDU,
        _ProcessAccessSignalling_Arg_selectedUMTS_Algorithms,
        _ProcessAccessSignalling_Arg_selectedGSM_Algorithm,
        _ProcessAccessSignalling_Arg_chosenRadioResourceInformation,
        _ProcessAccessSignalling_Arg_selectedRab_Id,
        _ProcessAccessSignalling_Arg_extensionContainer,
        _ProcessAccessSignalling_Arg_iUSelectedCodec,
        _ProcessAccessSignalling_Arg_iuAvailableCodecsList,
        _ProcessAccessSignalling_Arg_aoipSelectedCodecTarget,
        _ProcessAccessSignalling_Arg_aoipAvailableCodecsListMap,
        ProcessAccessSignalling_Arg,
        _AoIPCodecsList_codec1,
        _AoIPCodecsList_codec2,
        _AoIPCodecsList_codec3,
        _AoIPCodecsList_codec4,
        _AoIPCodecsList_codec5,
        _AoIPCodecsList_codec6,
        _AoIPCodecsList_codec7,
        _AoIPCodecsList_codec8,
        _AoIPCodecsList_extensionContainer,
        AoIPCodecsList,
        AoIPCodec,
        _SupportedCodecsList_utranCodecList,
        _SupportedCodecsList_geranCodecList,
        _SupportedCodecsList_extensionContainer,
        SupportedCodecsList,
        _CodecList_codec1,
        _CodecList_codec2,
        _CodecList_codec3,
        _CodecList_codec4,
        _CodecList_codec5,
        _CodecList_codec6,
        _CodecList_codec7,
        _CodecList_codec8,
        _CodecList_extensionContainer,
        CodecList,
        Codec,
        GERAN_Classmark,
        SelectedGSM_Algorithm,
        _SendEndSignal_Arg_an_APDU,
        _SendEndSignal_Arg_extensionContainer,
        SendEndSignal_Arg,
        _SendEndSignal_Res_extensionContainer,
        SendEndSignal_Res,
        RNCId,
        _RelocationNumberList__item_,
        RelocationNumberList,
        MulticallBearerInfo,
        _RelocationNumber_handoverNumber,
        _RelocationNumber_rab_Id,
        RelocationNumber,
        RAB_Id,
        maxNrOfRABs,
        maxNumOfRelocationNumber,
        RadioResourceInformation,
        IntegrityProtectionInformation,
        maxNumOfIntegrityInfo,
        EncryptionInformation,
        maxNumOfEncryptionInfo,
        _SendAuthenticationInfoArg_imsi,
        _SendAuthenticationInfoArg_numberOfRequestedVectors,
        _SendAuthenticationInfoArg_segmentationProhibited,
        _SendAuthenticationInfoArg_immediateResponsePreferred,
        _SendAuthenticationInfoArg_re_synchronisationInfo,
        _SendAuthenticationInfoArg_extensionContainer,
        _SendAuthenticationInfoArg_requestingNodeType,
        _SendAuthenticationInfoArg_requestingPLMN_Id,
        _SendAuthenticationInfoArg_numberOfRequestedAdditional_Vectors,
        _SendAuthenticationInfoArg_additionalVectorsAreForEPS,
        _SendAuthenticationInfoArg_ueUsageTypeRequestIndication,
        SendAuthenticationInfoArg,
        NumberOfRequestedVectors,
        _Re_synchronisationInfo_rand,
        _Re_synchronisationInfo_auts,
        Re_synchronisationInfo,
        _SendAuthenticationInfoRes_authenticationSetList,
        _SendAuthenticationInfoRes_extensionContainer,
        _SendAuthenticationInfoRes_eps_AuthenticationSetList,
        _SendAuthenticationInfoRes_ueUsageType,
        SendAuthenticationInfoRes,
        _EPS_AuthenticationSetList__item_,
        EPS_AuthenticationSetList,
        UE_UsageType,
        _EPC_AV_rand,
        _EPC_AV_xres,
        _EPC_AV_autn,
        _EPC_AV_kasme,
        _EPC_AV_extensionContainer,
        EPC_AV,
        KASME,
        RequestingNodeType,
        _CheckIMEI_Arg_imei,
        _CheckIMEI_Arg_requestedEquipmentInfo,
        _CheckIMEI_Arg_extensionContainer,
        CheckIMEI_Arg,
        _CheckIMEI_Res_equipmentStatus,
        _CheckIMEI_Res_bmuef,
        _CheckIMEI_Res_extensionContainer,
        CheckIMEI_Res,
        RequestedEquipmentInfo,
        _UESBI_Iu_uesbi_IuA,
        _UESBI_Iu_uesbi_IuB,
        UESBI_Iu,
        UESBI_IuA,
        UESBI_IuB,
        EquipmentStatus,
        _InsertSubscriberDataArg_imsi,
        _InsertSubscriberDataArg_msisdn,
        _InsertSubscriberDataArg_category,
        _InsertSubscriberDataArg_subscriberStatus,
        _InsertSubscriberDataArg_bearerServiceList,
        _InsertSubscriberDataArg_teleserviceList,
        _InsertSubscriberDataArg_provisionedSS,
        _InsertSubscriberDataArg_odb_Data,
        _InsertSubscriberDataArg_roamingRestrictionDueToUnsupportedFeature,
        _InsertSubscriberDataArg_regionalSubscriptionData,
        _InsertSubscriberDataArg_vbsSubscriptionData,
        _InsertSubscriberDataArg_vgcsSubscriptionData,
        _InsertSubscriberDataArg_vlrCamelSubscriptionInfo,
        _InsertSubscriberDataArg_extensionContainer,
        _InsertSubscriberDataArg_naea_PreferredCI,
        _InsertSubscriberDataArg_gprsSubscriptionData,
        _InsertSubscriberDataArg_roamingRestrictedInSgsnDueToUnsupportedFeature,
        _InsertSubscriberDataArg_networkAccessMode,
        _InsertSubscriberDataArg_lsaInformation,
        _InsertSubscriberDataArg_lmu_Indicator,
        _InsertSubscriberDataArg_lcsInformation,
        _InsertSubscriberDataArg_istAlertTimer,
        _InsertSubscriberDataArg_superChargerSupportedInHLR,
        _InsertSubscriberDataArg_mc_SS_Info,
        _InsertSubscriberDataArg_cs_AllocationRetentionPriority,
        _InsertSubscriberDataArg_sgsn_CAMEL_SubscriptionInfo,
        _InsertSubscriberDataArg_chargingCharacteristics,
        _InsertSubscriberDataArg_accessRestrictionData,
        _InsertSubscriberDataArg_ics_Indicator,
        _InsertSubscriberDataArg_eps_SubscriptionData,
        _InsertSubscriberDataArg_csg_SubscriptionDataList,
        _InsertSubscriberDataArg_ue_ReachabilityRequestIndicator,
        _InsertSubscriberDataArg_sgsn_Number,
        _InsertSubscriberDataArg_mme_Name,
        _InsertSubscriberDataArg_subscribedPeriodicRAUTAUtimer,
        _InsertSubscriberDataArg_vplmnLIPAAllowed,
        _InsertSubscriberDataArg_mdtUserConsent,
        _InsertSubscriberDataArg_subscribedPeriodicLAUtimer,
        _InsertSubscriberDataArg_vplmn_Csg_SubscriptionDataList,
        _InsertSubscriberDataArg_additionalMSISDN,
        _InsertSubscriberDataArg_psAndSMS_OnlyServiceProvision,
        _InsertSubscriberDataArg_smsInSGSNAllowed,
        _InsertSubscriberDataArg_cs_to_ps_SRVCC_Allowed_Indicator,
        _InsertSubscriberDataArg_pcscf_Restoration_Request,
        _InsertSubscriberDataArg_adjacentAccessRestrictionDataList,
        _InsertSubscriberDataArg_imsi_Group_Id_List,
        _InsertSubscriberDataArg_ueUsageType,
        _InsertSubscriberDataArg_userPlaneIntegrityProtectionIndicator,
        InsertSubscriberDataArg,
        Group_Service_ID,
        Local_GroupID,
        _IMSI_GroupIdList__item_,
        IMSI_GroupIdList,
        _IMSI_GroupId_group_Service_Id,
        _IMSI_GroupId_plmnId,
        _IMSI_GroupId_local_Group_ID,
        IMSI_GroupId,
        SubscribedPeriodicRAUTAUtimer,
        SubscribedPeriodicLAUtimer,
        _CSG_SubscriptionDataList__item_,
        CSG_SubscriptionDataList,
        _CSG_SubscriptionData_csg_Id,
        _CSG_SubscriptionData_expirationDate,
        _CSG_SubscriptionData_extensionContainer,
        _CSG_SubscriptionData_lipa_AllowedAPNList,
        _CSG_SubscriptionData_plmn_Id,
        CSG_SubscriptionData,
        _VPLMN_CSG_SubscriptionDataList__item_,
        VPLMN_CSG_SubscriptionDataList,
        CSG_Id,
        _LIPA_AllowedAPNList__item_,
        LIPA_AllowedAPNList,
        maxNumOfLIPAAllowedAPN,
        _EPS_SubscriptionData_apn_oi_Replacement,
        _EPS_SubscriptionData_rfsp_id,
        _EPS_SubscriptionData_ambr,
        _EPS_SubscriptionData_apn_ConfigurationProfile,
        _EPS_SubscriptionData_stn_sr,
        _EPS_SubscriptionData_extensionContainer,
        _EPS_SubscriptionData_mps_CSPriority,
        _EPS_SubscriptionData_mps_EPSPriority,
        _EPS_SubscriptionData_subscribed_vsrvcc,
        EPS_SubscriptionData,
        APN_OI_Replacement,
        RFSP_ID,
        _APN_ConfigurationProfile_defaultContext,
        _APN_ConfigurationProfile_completeDataListIncluded,
        _APN_ConfigurationProfile_epsDataList,
        _APN_ConfigurationProfile_extensionContainer,
        _APN_ConfigurationProfile_additionalDefaultContext,
        APN_ConfigurationProfile,
        _EPS_DataList__item_,
        EPS_DataList,
        maxNumOfAPN_Configurations,
        _APN_Configuration_contextId,
        _APN_Configuration_pdn_Type,
        _APN_Configuration_servedPartyIP_IPv4_Address,
        _APN_Configuration_apn,
        _APN_Configuration_eps_qos_Subscribed,
        _APN_Configuration_pdn_gw_Identity,
        _APN_Configuration_pdn_gw_AllocationType,
        _APN_Configuration_vplmnAddressAllowed,
        _APN_Configuration_chargingCharacteristics,
        _APN_Configuration_ambr,
        _APN_Configuration_specificAPNInfoList,
        _APN_Configuration_extensionContainer,
        _APN_Configuration_servedPartyIP_IPv6_Address,
        _APN_Configuration_apn_oi_Replacement,
        _APN_Configuration_sipto_Permission,
        _APN_Configuration_lipa_Permission,
        _APN_Configuration_restoration_Priority,
        _APN_Configuration_sipto_local_network_Permission,
        _APN_Configuration_wlan_offloadability,
        _APN_Configuration_non_IP_PDN_Type_Indicator,
        _APN_Configuration_nIDD_Mechanism,
        _APN_Configuration_sCEF_ID,
        APN_Configuration,
        NIDD_Mechanism,
        PDN_Type,
        _EPS_QoS_Subscribed_qos_Class_Identifier,
        _EPS_QoS_Subscribed_allocation_Retention_Priority,
        _EPS_QoS_Subscribed_extensionContainer,
        EPS_QoS_Subscribed,
        _AMBR_max_RequestedBandwidth_UL,
        _AMBR_max_RequestedBandwidth_DL,
        _AMBR_extensionContainer,
        AMBR,
        _SpecificAPNInfoList__item_,
        SpecificAPNInfoList,
        maxNumOfSpecificAPNInfos,
        _SpecificAPNInfo_apn,
        _SpecificAPNInfo_pdn_gw_Identity,
        _SpecificAPNInfo_extensionContainer,
        SpecificAPNInfo,
        Bandwidth,
        QoS_Class_Identifier,
        _Allocation_Retention_Priority_priority_level,
        _Allocation_Retention_Priority_pre_emption_capability,
        _Allocation_Retention_Priority_pre_emption_vulnerability,
        _Allocation_Retention_Priority_extensionContainer,
        Allocation_Retention_Priority,
        _PDN_GW_Identity_pdn_gw_ipv4_Address,
        _PDN_GW_Identity_pdn_gw_ipv6_Address,
        _PDN_GW_Identity_pdn_gw_name,
        _PDN_GW_Identity_extensionContainer,
        PDN_GW_Identity,
        FQDN,
        PDN_GW_AllocationType,
        _WLAN_Offloadability_wlan_offloadability_EUTRAN,
        _WLAN_Offloadability_wlan_offloadability_UTRAN,
        _WLAN_Offloadability_extensionContainer,
        WLAN_Offloadability,
        WLAN_Offloadability_Indication,
        AccessRestrictionData,
        _AdjacentAccessRestrictionDataList__item_,
        AdjacentAccessRestrictionDataList,
        _AdjacentAccessRestrictionData_plmnId,
        _AdjacentAccessRestrictionData_accessRestrictionData,
        AdjacentAccessRestrictionData,
        CS_AllocationRetentionPriority,
        IST_AlertTimerValue,
        _LCSInformation_gmlc_List,
        _LCSInformation_lcs_PrivacyExceptionList,
        _LCSInformation_molr_List,
        _LCSInformation_add_lcs_PrivacyExceptionList,
        LCSInformation,
        _GMLC_List__item_,
        GMLC_List,
        maxNumOfGMLC,
        NetworkAccessMode,
        _GPRSDataList__item_,
        GPRSDataList,
        maxNumOfPDP_Contexts,
        _PDP_Context_pdp_ContextId,
        _PDP_Context_pdp_Type,
        _PDP_Context_pdp_Address,
        _PDP_Context_qos_Subscribed,
        _PDP_Context_vplmnAddressAllowed,
        _PDP_Context_apn,
        _PDP_Context_extensionContainer,
        _PDP_Context_ext_QoS_Subscribed,
        _PDP_Context_pdp_ChargingCharacteristics,
        _PDP_Context_ext2_QoS_Subscribed,
        _PDP_Context_ext3_QoS_Subscribed,
        _PDP_Context_ext4_QoS_Subscribed,
        _PDP_Context_apn_oi_Replacement,
        _PDP_Context_ext_pdp_Type,
        _PDP_Context_ext_pdp_Address,
        _PDP_Context_ambr,
        _PDP_Context_sipto_Permission,
        _PDP_Context_lipa_Permission,
        _PDP_Context_restoration_Priority,
        _PDP_Context_sipto_local_network_Permission,
        PDP_Context,
        Restoration_Priority,
        SIPTO_Permission,
        SIPTO_Local_Network_Permission,
        LIPA_Permission,
        ContextId,
        _GPRSSubscriptionData_completeDataListIncluded,
        _GPRSSubscriptionData_gprsDataList,
        _GPRSSubscriptionData_extensionContainer,
        _GPRSSubscriptionData_apn_oi_Replacement,
        GPRSSubscriptionData,
        _SGSN_CAMEL_SubscriptionInfo_gprs_CSI,
        _SGSN_CAMEL_SubscriptionInfo_mo_sms_CSI,
        _SGSN_CAMEL_SubscriptionInfo_extensionContainer,
        _SGSN_CAMEL_SubscriptionInfo_mt_sms_CSI,
        _SGSN_CAMEL_SubscriptionInfo_mt_smsCAMELTDP_CriteriaList,
        _SGSN_CAMEL_SubscriptionInfo_mg_csi,
        SGSN_CAMEL_SubscriptionInfo,
        _GPRS_CSI_gprs_CamelTDPDataList,
        _GPRS_CSI_camelCapabilityHandling,
        _GPRS_CSI_extensionContainer,
        _GPRS_CSI_notificationToCSE,
        _GPRS_CSI_csi_Active,
        GPRS_CSI,
        _GPRS_CamelTDPDataList__item_,
        GPRS_CamelTDPDataList,
        _GPRS_CamelTDPData_gprs_TriggerDetectionPoint,
        _GPRS_CamelTDPData_serviceKey,
        _GPRS_CamelTDPData_gsmSCF_Address,
        _GPRS_CamelTDPData_defaultSessionHandling,
        _GPRS_CamelTDPData_extensionContainer,
        GPRS_CamelTDPData,
        DefaultGPRS_Handling,
        GPRS_TriggerDetectionPoint,
        APN,
        PDP_Type,
        Ext_PDP_Type,
        PDP_Address,
        QoS_Subscribed,
        Ext_QoS_Subscribed,
        Ext2_QoS_Subscribed,
        Ext3_QoS_Subscribed,
        Ext4_QoS_Subscribed,
        ChargingCharacteristics,
        LSAOnlyAccessIndicator,
        _LSADataList__item_,
        LSADataList,
        maxNumOfLSAs,
        _LSAData_lsaIdentity,
        _LSAData_lsaAttributes,
        _LSAData_lsaActiveModeIndicator,
        _LSAData_extensionContainer,
        LSAData,
        _LSAInformation_completeDataListIncluded,
        _LSAInformation_lsaOnlyAccessIndicator,
        _LSAInformation_lsaDataList,
        _LSAInformation_extensionContainer,
        LSAInformation,
        LSAIdentity,
        LSAAttributes,
        _SubscriberData_msisdn,
        _SubscriberData_category,
        _SubscriberData_subscriberStatus,
        _SubscriberData_bearerServiceList,
        _SubscriberData_teleserviceList,
        _SubscriberData_provisionedSS,
        _SubscriberData_odb_Data,
        _SubscriberData_roamingRestrictionDueToUnsupportedFeature,
        _SubscriberData_regionalSubscriptionData,
        _SubscriberData_vbsSubscriptionData,
        _SubscriberData_vgcsSubscriptionData,
        _SubscriberData_vlrCamelSubscriptionInfo,
        SubscriberData,
        Category,
        SubscriberStatus,
        _BearerServiceList__item_,
        BearerServiceList,
        maxNumOfBearerServices,
        _TeleserviceList__item_,
        TeleserviceList,
        maxNumOfTeleservices,
        _ODB_Data_odb_GeneralData,
        _ODB_Data_odb_HPLMN_Data,
        _ODB_Data_extensionContainer,
        ODB_Data,
        ODB_GeneralData,
        ODB_HPLMN_Data,
        _Ext_SS_InfoList__item_,
        Ext_SS_InfoList,
        _Ext_SS_Info_forwardingInfo,
        _Ext_SS_Info_callBarringInfo,
        _Ext_SS_Info_cug_Info,
        _Ext_SS_Info_ss_Data,
        _Ext_SS_Info_emlpp_Info,
        Ext_SS_Info,
        _Ext_ForwInfo_ss_Code,
        _Ext_ForwInfo_forwardingFeatureList,
        _Ext_ForwInfo_extensionContainer,
        Ext_ForwInfo,
        _Ext_ForwFeatureList__item_,
        Ext_ForwFeatureList,
        _Ext_ForwFeature_basicService,
        _Ext_ForwFeature_ss_Status,
        _Ext_ForwFeature_forwardedToNumber,
        _Ext_ForwFeature_forwardedToSubaddress,
        _Ext_ForwFeature_forwardingOptions,
        _Ext_ForwFeature_noReplyConditionTime,
        _Ext_ForwFeature_extensionContainer,
        _Ext_ForwFeature_longForwardedToNumber,
        Ext_ForwFeature,
        Ext_ForwOptions,
        Ext_NoRepCondTime,
        _Ext_CallBarInfo_ss_Code,
        _Ext_CallBarInfo_callBarringFeatureList,
        _Ext_CallBarInfo_extensionContainer,
        Ext_CallBarInfo,
        _Ext_CallBarFeatureList__item_,
        Ext_CallBarFeatureList,
        _Ext_CallBarringFeature_basicService,
        _Ext_CallBarringFeature_ss_Status,
        _Ext_CallBarringFeature_extensionContainer,
        Ext_CallBarringFeature,
        _CUG_Info_cug_SubscriptionList,
        _CUG_Info_cug_FeatureList,
        _CUG_Info_extensionContainer,
        CUG_Info,
        _CUG_SubscriptionList__item_,
        CUG_SubscriptionList,
        _CUG_Subscription_cug_Index,
        _CUG_Subscription_cug_Interlock,
        _CUG_Subscription_intraCUG_Options,
        _CUG_Subscription_basicServiceGroupList,
        _CUG_Subscription_extensionContainer,
        CUG_Subscription,
        CUG_Index,
        CUG_Interlock,
        IntraCUG_Options,
        maxNumOfCUG,
        _CUG_FeatureList__item_,
        CUG_FeatureList,
        _Ext_BasicServiceGroupList__item_,
        Ext_BasicServiceGroupList,
        maxNumOfExt_BasicServiceGroups,
        _CUG_Feature_basicService,
        _CUG_Feature_preferentialCUG_Indicator,
        _CUG_Feature_interCUG_Restrictions,
        _CUG_Feature_extensionContainer,
        CUG_Feature,
        InterCUG_Restrictions,
        _Ext_SS_Data_ss_Code,
        _Ext_SS_Data_ss_Status,
        _Ext_SS_Data_ss_SubscriptionOption,
        _Ext_SS_Data_basicServiceGroupList,
        _Ext_SS_Data_extensionContainer,
        Ext_SS_Data,
        _LCS_PrivacyExceptionList__item_,
        LCS_PrivacyExceptionList,
        maxNumOfPrivacyClass,
        _LCS_PrivacyClass_ss_Code,
        _LCS_PrivacyClass_ss_Status,
        _LCS_PrivacyClass_notificationToMSUser,
        _LCS_PrivacyClass_externalClientList,
        _LCS_PrivacyClass_plmnClientList,
        _LCS_PrivacyClass_extensionContainer,
        _LCS_PrivacyClass_ext_externalClientList,
        _LCS_PrivacyClass_serviceTypeList,
        LCS_PrivacyClass,
        _ExternalClientList__item_,
        ExternalClientList,
        maxNumOfExternalClient,
        _PLMNClientList__item_,
        PLMNClientList,
        maxNumOfPLMNClient,
        _Ext_ExternalClientList__item_,
        Ext_ExternalClientList,
        maxNumOfExt_ExternalClient,
        _ExternalClient_clientIdentity,
        _ExternalClient_gmlc_Restriction,
        _ExternalClient_notificationToMSUser,
        _ExternalClient_extensionContainer,
        ExternalClient,
        GMLC_Restriction,
        NotificationToMSUser,
        _ServiceTypeList__item_,
        ServiceTypeList,
        maxNumOfServiceType,
        _ServiceType_serviceTypeIdentity,
        _ServiceType_gmlc_Restriction,
        _ServiceType_notificationToMSUser,
        _ServiceType_extensionContainer,
        ServiceType,
        _MOLR_List__item_,
        MOLR_List,
        maxNumOfMOLR_Class,
        _MOLR_Class_ss_Code,
        _MOLR_Class_ss_Status,
        _MOLR_Class_extensionContainer,
        MOLR_Class,
        _ZoneCodeList__item_,
        ZoneCodeList,
        ZoneCode,
        maxNumOfZoneCodes,
        _InsertSubscriberDataRes_teleserviceList,
        _InsertSubscriberDataRes_bearerServiceList,
        _InsertSubscriberDataRes_ss_List,
        _InsertSubscriberDataRes_odb_GeneralData,
        _InsertSubscriberDataRes_regionalSubscriptionResponse,
        _InsertSubscriberDataRes_supportedCamelPhases,
        _InsertSubscriberDataRes_extensionContainer,
        _InsertSubscriberDataRes_offeredCamel4CSIs,
        _InsertSubscriberDataRes_supportedFeatures,
        InsertSubscriberDataRes,
        RegionalSubscriptionResponse,
        _DeleteSubscriberDataArg_imsi,
        _DeleteSubscriberDataArg_basicServiceList,
        _DeleteSubscriberDataArg_ss_List,
        _DeleteSubscriberDataArg_roamingRestrictionDueToUnsupportedFeature,
        _DeleteSubscriberDataArg_regionalSubscriptionIdentifier,
        _DeleteSubscriberDataArg_vbsGroupIndication,
        _DeleteSubscriberDataArg_vgcsGroupIndication,
        _DeleteSubscriberDataArg_camelSubscriptionInfoWithdraw,
        _DeleteSubscriberDataArg_extensionContainer,
        _DeleteSubscriberDataArg_gprsSubscriptionDataWithdraw,
        _DeleteSubscriberDataArg_roamingRestrictedInSgsnDueToUnsuppportedFeature,
        _DeleteSubscriberDataArg_lsaInformationWithdraw,
        _DeleteSubscriberDataArg_gmlc_ListWithdraw,
        _DeleteSubscriberDataArg_istInformationWithdraw,
        _DeleteSubscriberDataArg_specificCSI_Withdraw,
        _DeleteSubscriberDataArg_chargingCharacteristicsWithdraw,
        _DeleteSubscriberDataArg_stn_srWithdraw,
        _DeleteSubscriberDataArg_epsSubscriptionDataWithdraw,
        _DeleteSubscriberDataArg_apn_oi_replacementWithdraw,
        _DeleteSubscriberDataArg_csg_SubscriptionDeleted,
        _DeleteSubscriberDataArg_subscribedPeriodicTAU_RAU_TimerWithdraw,
        _DeleteSubscriberDataArg_subscribedPeriodicLAU_TimerWithdraw,
        _DeleteSubscriberDataArg_subscribed_vsrvccWithdraw,
        _DeleteSubscriberDataArg_vplmn_Csg_SubscriptionDeleted,
        _DeleteSubscriberDataArg_additionalMSISDN_Withdraw,
        _DeleteSubscriberDataArg_cs_to_ps_SRVCC_Withdraw,
        _DeleteSubscriberDataArg_imsiGroupIdList_Withdraw,
        _DeleteSubscriberDataArg_userPlaneIntegrityProtectionWithdraw,
        DeleteSubscriberDataArg,
        SpecificCSI_Withdraw,
        _GPRSSubscriptionDataWithdraw_allGPRSData,
        _GPRSSubscriptionDataWithdraw_contextIdList,
        GPRSSubscriptionDataWithdraw,
        _EPS_SubscriptionDataWithdraw_allEPS_Data,
        _EPS_SubscriptionDataWithdraw_contextIdList,
        EPS_SubscriptionDataWithdraw,
        _ContextIdList__item_,
        ContextIdList,
        _LSAInformationWithdraw_allLSAData,
        _LSAInformationWithdraw_lsaIdentityList,
        LSAInformationWithdraw,
        _LSAIdentityList__item_,
        LSAIdentityList,
        _BasicServiceList__item_,
        BasicServiceList,
        maxNumOfBasicServices,
        _DeleteSubscriberDataRes_regionalSubscriptionResponse,
        _DeleteSubscriberDataRes_extensionContainer,
        DeleteSubscriberDataRes,
        _VlrCamelSubscriptionInfo_o_CSI,
        _VlrCamelSubscriptionInfo_extensionContainer,
        _VlrCamelSubscriptionInfo_ss_CSI,
        _VlrCamelSubscriptionInfo_o_BcsmCamelTDP_CriteriaList,
        _VlrCamelSubscriptionInfo_tif_CSI,
        _VlrCamelSubscriptionInfo_m_CSI,
        _VlrCamelSubscriptionInfo_mo_sms_CSI,
        _VlrCamelSubscriptionInfo_vt_CSI,
        _VlrCamelSubscriptionInfo_t_BCSM_CAMEL_TDP_CriteriaList,
        _VlrCamelSubscriptionInfo_d_CSI,
        _VlrCamelSubscriptionInfo_mt_sms_CSI,
        _VlrCamelSubscriptionInfo_mt_smsCAMELTDP_CriteriaList,
        VlrCamelSubscriptionInfo,
        _MT_smsCAMELTDP_CriteriaList__item_,
        MT_smsCAMELTDP_CriteriaList,
        _MT_smsCAMELTDP_Criteria_sms_TriggerDetectionPoint,
        _MT_smsCAMELTDP_Criteria_tpdu_TypeCriterion,
        MT_smsCAMELTDP_Criteria,
        _TPDU_TypeCriterion__item_,
        TPDU_TypeCriterion,
        maxNumOfTPDUTypes,
        MT_SMS_TPDU_Type,
        _D_CSI_dp_AnalysedInfoCriteriaList,
        _D_CSI_camelCapabilityHandling,
        _D_CSI_extensionContainer,
        _D_CSI_notificationToCSE,
        _D_CSI_csi_Active,
        D_CSI,
        _DP_AnalysedInfoCriteriaList__item_,
        DP_AnalysedInfoCriteriaList,
        maxNumOfDP_AnalysedInfoCriteria,
        _DP_AnalysedInfoCriterium_dialledNumber,
        _DP_AnalysedInfoCriterium_serviceKey,
        _DP_AnalysedInfoCriterium_gsmSCF_Address,
        _DP_AnalysedInfoCriterium_defaultCallHandling,
        _DP_AnalysedInfoCriterium_extensionContainer,
        DP_AnalysedInfoCriterium,
        _SS_CSI_ss_CamelData,
        _SS_CSI_extensionContainer,
        _SS_CSI_notificationToCSE,
        _SS_CSI_csi_Active,
        SS_CSI,
        _SS_CamelData_ss_EventList,
        _SS_CamelData_gsmSCF_Address,
        _SS_CamelData_extensionContainer,
        SS_CamelData,
        _SS_EventList__item_,
        SS_EventList,
        maxNumOfCamelSSEvents,
        _O_CSI_o_BcsmCamelTDPDataList,
        _O_CSI_extensionContainer,
        _O_CSI_camelCapabilityHandling,
        _O_CSI_notificationToCSE,
        _O_CSI_csiActive,
        O_CSI,
        _O_BcsmCamelTDPDataList__item_,
        O_BcsmCamelTDPDataList,
        maxNumOfCamelTDPData,
        _O_BcsmCamelTDPData_o_BcsmTriggerDetectionPoint,
        _O_BcsmCamelTDPData_serviceKey,
        _O_BcsmCamelTDPData_gsmSCF_Address,
        _O_BcsmCamelTDPData_defaultCallHandling,
        _O_BcsmCamelTDPData_extensionContainer,
        O_BcsmCamelTDPData,
        ServiceKey,
        O_BcsmTriggerDetectionPoint,
        _O_BcsmCamelTDPCriteriaList__item_,
        O_BcsmCamelTDPCriteriaList,
        _T_BCSM_CAMEL_TDP_CriteriaList__item_,
        T_BCSM_CAMEL_TDP_CriteriaList,
        _O_BcsmCamelTDP_Criteria_o_BcsmTriggerDetectionPoint,
        _O_BcsmCamelTDP_Criteria_destinationNumberCriteria,
        _O_BcsmCamelTDP_Criteria_basicServiceCriteria,
        _O_BcsmCamelTDP_Criteria_callTypeCriteria,
        _O_BcsmCamelTDP_Criteria_o_CauseValueCriteria,
        _O_BcsmCamelTDP_Criteria_extensionContainer,
        O_BcsmCamelTDP_Criteria,
        _T_BCSM_CAMEL_TDP_Criteria_t_BCSM_TriggerDetectionPoint,
        _T_BCSM_CAMEL_TDP_Criteria_basicServiceCriteria,
        _T_BCSM_CAMEL_TDP_Criteria_t_CauseValueCriteria,
        T_BCSM_CAMEL_TDP_Criteria,
        _DestinationNumberCriteria_matchType,
        _DestinationNumberCriteria_destinationNumberList,
        _DestinationNumberCriteria_destinationNumberLengthList,
        DestinationNumberCriteria,
        _DestinationNumberList__item_,
        DestinationNumberList,
        _DestinationNumberLengthList__item_,
        DestinationNumberLengthList,
        _BasicServiceCriteria__item_,
        BasicServiceCriteria,
        maxNumOfISDN_AddressDigits,
        maxNumOfCamelDestinationNumbers,
        maxNumOfCamelDestinationNumberLengths,
        maxNumOfCamelBasicServiceCriteria,
        CallTypeCriteria,
        MatchType,
        _O_CauseValueCriteria__item_,
        O_CauseValueCriteria,
        _T_CauseValueCriteria__item_,
        T_CauseValueCriteria,
        maxNumOfCAMEL_O_CauseValueCriteria,
        maxNumOfCAMEL_T_CauseValueCriteria,
        CauseValue,
        DefaultCallHandling,
        CamelCapabilityHandling,
        SupportedCamelPhases,
        OfferedCamel4CSIs,
        OfferedCamel4Functionalities,
        _SMS_CSI_sms_CAMEL_TDP_DataList,
        _SMS_CSI_camelCapabilityHandling,
        _SMS_CSI_extensionContainer,
        _SMS_CSI_notificationToCSE,
        _SMS_CSI_csi_Active,
        SMS_CSI,
        _SMS_CAMEL_TDP_DataList__item_,
        SMS_CAMEL_TDP_DataList,
        _SMS_CAMEL_TDP_Data_sms_TriggerDetectionPoint,
        _SMS_CAMEL_TDP_Data_serviceKey,
        _SMS_CAMEL_TDP_Data_gsmSCF_Address,
        _SMS_CAMEL_TDP_Data_defaultSMS_Handling,
        _SMS_CAMEL_TDP_Data_extensionContainer,
        SMS_CAMEL_TDP_Data,
        SMS_TriggerDetectionPoint,
        DefaultSMS_Handling,
        _M_CSI_mobilityTriggers,
        _M_CSI_serviceKey,
        _M_CSI_gsmSCF_Address,
        _M_CSI_extensionContainer,
        _M_CSI_notificationToCSE,
        _M_CSI_csi_Active,
        M_CSI,
        _MG_CSI_mobilityTriggers,
        _MG_CSI_serviceKey,
        _MG_CSI_gsmSCF_Address,
        _MG_CSI_extensionContainer,
        _MG_CSI_notificationToCSE,
        _MG_CSI_csi_Active,
        MG_CSI,
        _MobilityTriggers__item_,
        MobilityTriggers,
        maxNumOfMobilityTriggers,
        MM_Code,
        _T_CSI_t_BcsmCamelTDPDataList,
        _T_CSI_extensionContainer,
        _T_CSI_camelCapabilityHandling,
        _T_CSI_notificationToCSE,
        _T_CSI_csi_Active,
        T_CSI,
        _T_BcsmCamelTDPDataList__item_,
        T_BcsmCamelTDPDataList,
        _T_BcsmCamelTDPData_t_BcsmTriggerDetectionPoint,
        _T_BcsmCamelTDPData_serviceKey,
        _T_BcsmCamelTDPData_gsmSCF_Address,
        _T_BcsmCamelTDPData_defaultCallHandling,
        _T_BcsmCamelTDPData_extensionContainer,
        T_BcsmCamelTDPData,
        T_BcsmTriggerDetectionPoint,
        _SendRoutingInfoForGprsArg_imsi,
        _SendRoutingInfoForGprsArg_ggsn_Address,
        _SendRoutingInfoForGprsArg_ggsn_Number,
        _SendRoutingInfoForGprsArg_extensionContainer,
        SendRoutingInfoForGprsArg,
        _SendRoutingInfoForGprsRes_sgsn_Address,
        _SendRoutingInfoForGprsRes_ggsn_Address,
        _SendRoutingInfoForGprsRes_mobileNotReachableReason,
        _SendRoutingInfoForGprsRes_extensionContainer,
        SendRoutingInfoForGprsRes,
        _FailureReportArg_imsi,
        _FailureReportArg_ggsn_Number,
        _FailureReportArg_ggsn_Address,
        _FailureReportArg_extensionContainer,
        FailureReportArg,
        _FailureReportRes_ggsn_Address,
        _FailureReportRes_extensionContainer,
        FailureReportRes,
        _NoteMsPresentForGprsArg_imsi,
        _NoteMsPresentForGprsArg_sgsn_Address,
        _NoteMsPresentForGprsArg_ggsn_Address,
        _NoteMsPresentForGprsArg_extensionContainer,
        NoteMsPresentForGprsArg,
        _NoteMsPresentForGprsRes_extensionContainer,
        NoteMsPresentForGprsRes,
        _ResetArg_sendingNodenumber,
        _ResetArg_hlr_List,
        _ResetArg_extensionContainer,
        ResetArg,
        _SendingNode_Number_hlr_Number,
        _SendingNode_Number_css_Number,
        SendingNode_Number,
        _RestoreDataArg_imsi,
        _RestoreDataArg_lmsi,
        _RestoreDataArg_extensionContainer,
        _RestoreDataArg_vlr_Capability,
        _RestoreDataArg_restorationIndicator,
        RestoreDataArg,
        _RestoreDataRes_hlr_Number,
        _RestoreDataRes_msNotReachable,
        _RestoreDataRes_extensionContainer,
        RestoreDataRes,
        _VBSDataList__item_,
        VBSDataList,
        _VGCSDataList__item_,
        VGCSDataList,
        maxNumOfVBSGroupIds,
        maxNumOfVGCSGroupIds,
        _VoiceGroupCallData_groupId,
        _VoiceGroupCallData_extensionContainer,
        _VoiceGroupCallData_additionalSubscriptions,
        _VoiceGroupCallData_additionalInfo,
        _VoiceGroupCallData_longGroupId,
        VoiceGroupCallData,
        AdditionalInfo,
        AdditionalSubscriptions,
        _VoiceBroadcastData_groupid,
        _VoiceBroadcastData_broadcastInitEntitlement,
        _VoiceBroadcastData_extensionContainer,
        _VoiceBroadcastData_longGroupId,
        VoiceBroadcastData,
        GroupId,
        Long_GroupId,
        _ProvideSubscriberInfoArg_imsi,
        _ProvideSubscriberInfoArg_lmsi,
        _ProvideSubscriberInfoArg_requestedInfo,
        _ProvideSubscriberInfoArg_extensionContainer,
        _ProvideSubscriberInfoArg_callPriority,
        ProvideSubscriberInfoArg,
        _ProvideSubscriberInfoRes_subscriberInfo,
        _ProvideSubscriberInfoRes_extensionContainer,
        ProvideSubscriberInfoRes,
        _SubscriberInfo_locationInformation,
        _SubscriberInfo_subscriberState,
        _SubscriberInfo_extensionContainer,
        _SubscriberInfo_locationInformationGPRS,
        _SubscriberInfo_ps_SubscriberState,
        _SubscriberInfo_imei,
        _SubscriberInfo_ms_Classmark2,
        _SubscriberInfo_gprs_MS_Class,
        _SubscriberInfo_mnpInfoRes,
        _SubscriberInfo_imsVoiceOverPS_SessionsIndication,
        _SubscriberInfo_lastUE_ActivityTime,
        _SubscriberInfo_lastRAT_Type,
        _SubscriberInfo_eps_SubscriberState,
        _SubscriberInfo_locationInformationEPS,
        _SubscriberInfo_timeZone,
        _SubscriberInfo_daylightSavingTime,
        SubscriberInfo,
        IMS_VoiceOverPS_SessionsInd,
        TimeZone,
        DaylightSavingTime,
        _MNPInfoRes_routeingNumber,
        _MNPInfoRes_imsi,
        _MNPInfoRes_msisdn,
        _MNPInfoRes_numberPortabilityStatus,
        _MNPInfoRes_extensionContainer,
        MNPInfoRes,
        RouteingNumber,
        NumberPortabilityStatus,
        MS_Classmark2,
        _GPRSMSClass_mSNetworkCapability,
        _GPRSMSClass_mSRadioAccessCapability,
        GPRSMSClass,
        MSNetworkCapability,
        MSRadioAccessCapability,
        _RequestedInfo_locationInformation,
        _RequestedInfo_subscriberState,
        _RequestedInfo_extensionContainer,
        _RequestedInfo_currentLocation,
        _RequestedInfo_requestedDomain,
        _RequestedInfo_imei,
        _RequestedInfo_ms_classmark,
        _RequestedInfo_mnpRequestedInfo,
        _RequestedInfo_locationInformationEPS_Supported,
        _RequestedInfo_t_adsData,
        _RequestedInfo_requestedNodes,
        _RequestedInfo_servingNodeIndication,
        _RequestedInfo_localTimeZoneRequest,
        RequestedInfo,
        DomainType,
        RequestedNodes,
        _LocationInformation_ageOfLocationInformation,
        _LocationInformation_geographicalInformation,
        _LocationInformation_vlr_number,
        _LocationInformation_locationNumber,
        _LocationInformation_cellGlobalIdOrServiceAreaIdOrLAI,
        _LocationInformation_extensionContainer,
        _LocationInformation_selectedLSA_Id,
        _LocationInformation_msc_Number,
        _LocationInformation_geodeticInformation,
        _LocationInformation_currentLocationRetrieved,
        _LocationInformation_sai_Present,
        _LocationInformation_locationInformationEPS,
        _LocationInformation_userCSGInformation,
        LocationInformation,
        _LocationInformationEPS_e_utranCellGlobalIdentity,
        _LocationInformationEPS_trackingAreaIdentity,
        _LocationInformationEPS_extensionContainer,
        _LocationInformationEPS_geographicalInformation,
        _LocationInformationEPS_geodeticInformation,
        _LocationInformationEPS_currentLocationRetrieved,
        _LocationInformationEPS_ageOfLocationInformation,
        _LocationInformationEPS_mme_Name,
        LocationInformationEPS,
        _LocationInformationGPRS_cellGlobalIdOrServiceAreaIdOrLAI,
        _LocationInformationGPRS_routeingAreaIdentity,
        _LocationInformationGPRS_geographicalInformation,
        _LocationInformationGPRS_sgsn_Number,
        _LocationInformationGPRS_selectedLSAIdentity,
        _LocationInformationGPRS_extensionContainer,
        _LocationInformationGPRS_sai_Present,
        _LocationInformationGPRS_geodeticInformation,
        _LocationInformationGPRS_currentLocationRetrieved,
        _LocationInformationGPRS_ageOfLocationInformation,
        _LocationInformationGPRS_userCSGInformation,
        LocationInformationGPRS,
        _UserCSGInformation_csg_Id,
        _UserCSGInformation_extensionContainer,
        _UserCSGInformation_accessMode,
        _UserCSGInformation_cmi,
        UserCSGInformation,
        GeographicalInformation,
        GeodeticInformation,
        LocationNumber,
        _SubscriberState_assumedIdle,
        _SubscriberState_camelBusy,
        _SubscriberState_netDetNotReachable,
        _SubscriberState_notProvidedFromVLR,
        SubscriberState,
        _PS_SubscriberState_notProvidedFromSGSNorMME,
        _PS_SubscriberState_ps_Detached,
        _PS_SubscriberState_ps_AttachedNotReachableForPaging,
        _PS_SubscriberState_ps_AttachedReachableForPaging,
        _PS_SubscriberState_ps_PDP_ActiveNotReachableForPaging,
        _PS_SubscriberState_ps_PDP_ActiveReachableForPaging,
        _PS_SubscriberState_netDetNotReachable,
        PS_SubscriberState,
        _PDP_ContextInfoList__item_,
        PDP_ContextInfoList,
        _PDP_ContextInfo_pdp_ContextIdentifier,
        _PDP_ContextInfo_pdp_ContextActive,
        _PDP_ContextInfo_pdp_Type,
        _PDP_ContextInfo_pdp_Address,
        _PDP_ContextInfo_apn_Subscribed,
        _PDP_ContextInfo_apn_InUse,
        _PDP_ContextInfo_nsapi,
        _PDP_ContextInfo_transactionId,
        _PDP_ContextInfo_teid_ForGnAndGp,
        _PDP_ContextInfo_teid_ForIu,
        _PDP_ContextInfo_ggsn_Address,
        _PDP_ContextInfo_qos_Subscribed,
        _PDP_ContextInfo_qos_Requested,
        _PDP_ContextInfo_qos_Negotiated,
        _PDP_ContextInfo_chargingId,
        _PDP_ContextInfo_chargingCharacteristics,
        _PDP_ContextInfo_rnc_Address,
        _PDP_ContextInfo_extensionContainer,
        _PDP_ContextInfo_qos2_Subscribed,
        _PDP_ContextInfo_qos2_Requested,
        _PDP_ContextInfo_qos2_Negotiated,
        _PDP_ContextInfo_qos3_Subscribed,
        _PDP_ContextInfo_qos3_Requested,
        _PDP_ContextInfo_qos3_Negotiated,
        _PDP_ContextInfo_qos4_Subscribed,
        _PDP_ContextInfo_qos4_Requested,
        _PDP_ContextInfo_qos4_Negotiated,
        _PDP_ContextInfo_ext_pdp_Type,
        _PDP_ContextInfo_ext_pdp_Address,
        PDP_ContextInfo,
        NSAPI,
        TransactionId,
        TEID,
        GPRSChargingID,
        NotReachableReason,
        _AnyTimeInterrogationArg_subscriberIdentity,
        _AnyTimeInterrogationArg_requestedInfo,
        _AnyTimeInterrogationArg_gsmSCF_Address,
        _AnyTimeInterrogationArg_extensionContainer,
        AnyTimeInterrogationArg,
        _AnyTimeInterrogationRes_subscriberInfo,
        _AnyTimeInterrogationRes_extensionContainer,
        AnyTimeInterrogationRes,
        _AnyTimeSubscriptionInterrogationArg_subscriberIdentity,
        _AnyTimeSubscriptionInterrogationArg_requestedSubscriptionInfo,
        _AnyTimeSubscriptionInterrogationArg_gsmSCF_Address,
        _AnyTimeSubscriptionInterrogationArg_extensionContainer,
        _AnyTimeSubscriptionInterrogationArg_longFTN_Supported,
        AnyTimeSubscriptionInterrogationArg,
        _AnyTimeSubscriptionInterrogationRes_callForwardingData,
        _AnyTimeSubscriptionInterrogationRes_callBarringData,
        _AnyTimeSubscriptionInterrogationRes_odb_Info,
        _AnyTimeSubscriptionInterrogationRes_camel_SubscriptionInfo,
        _AnyTimeSubscriptionInterrogationRes_supportedVLR_CAMEL_Phases,
        _AnyTimeSubscriptionInterrogationRes_supportedSGSN_CAMEL_Phases,
        _AnyTimeSubscriptionInterrogationRes_extensionContainer,
        _AnyTimeSubscriptionInterrogationRes_offeredCamel4CSIsInVLR,
        _AnyTimeSubscriptionInterrogationRes_offeredCamel4CSIsInSGSN,
        _AnyTimeSubscriptionInterrogationRes_msisdn_BS_List,
        _AnyTimeSubscriptionInterrogationRes_csg_SubscriptionDataList,
        _AnyTimeSubscriptionInterrogationRes_cw_Data,
        _AnyTimeSubscriptionInterrogationRes_ch_Data,
        _AnyTimeSubscriptionInterrogationRes_clip_Data,
        _AnyTimeSubscriptionInterrogationRes_clir_Data,
        _AnyTimeSubscriptionInterrogationRes_ect_data,
        AnyTimeSubscriptionInterrogationRes,
        _CallWaitingData_cwFeatureList,
        _CallWaitingData_notificationToCSE,
        CallWaitingData,
        _Ext_CwFeatureList__item_,
        Ext_CwFeatureList,
        _Ext_CwFeature_basicService,
        _Ext_CwFeature_ss_Status,
        Ext_CwFeature,
        _ClipData_ss_Status,
        _ClipData_overrideCategory,
        _ClipData_notificationToCSE,
        ClipData,
        _ClirData_ss_Status,
        _ClirData_cliRestrictionOption,
        _ClirData_notificationToCSE,
        ClirData,
        _CallHoldData_ss_Status,
        _CallHoldData_notificationToCSE,
        CallHoldData,
        _EctData_ss_Status,
        _EctData_notificationToCSE,
        EctData,
        _RequestedSubscriptionInfo_requestedSS_Info,
        _RequestedSubscriptionInfo_odb,
        _RequestedSubscriptionInfo_requestedCAMEL_SubscriptionInfo,
        _RequestedSubscriptionInfo_supportedVLR_CAMEL_Phases,
        _RequestedSubscriptionInfo_supportedSGSN_CAMEL_Phases,
        _RequestedSubscriptionInfo_extensionContainer,
        _RequestedSubscriptionInfo_additionalRequestedCAMEL_SubscriptionInfo,
        _RequestedSubscriptionInfo_msisdn_BS_List,
        _RequestedSubscriptionInfo_csg_SubscriptionDataRequested,
        _RequestedSubscriptionInfo_cw_Info,
        _RequestedSubscriptionInfo_clip_Info,
        _RequestedSubscriptionInfo_clir_Info,
        _RequestedSubscriptionInfo_hold_Info,
        _RequestedSubscriptionInfo_ect_Info,
        RequestedSubscriptionInfo,
        _MSISDN_BS_List__item_,
        MSISDN_BS_List,
        maxNumOfMSISDN,
        _MSISDN_BS_msisdn,
        _MSISDN_BS_basicServiceList,
        _MSISDN_BS_extensionContainer,
        MSISDN_BS,
        RequestedCAMEL_SubscriptionInfo,
        AdditionalRequestedCAMEL_SubscriptionInfo,
        _CallForwardingData_forwardingFeatureList,
        _CallForwardingData_notificationToCSE,
        _CallForwardingData_extensionContainer,
        CallForwardingData,
        _CallBarringData_callBarringFeatureList,
        _CallBarringData_password,
        _CallBarringData_wrongPasswordAttemptsCounter,
        _CallBarringData_notificationToCSE,
        _CallBarringData_extensionContainer,
        CallBarringData,
        WrongPasswordAttemptsCounter,
        _ODB_Info_odb_Data,
        _ODB_Info_notificationToCSE,
        _ODB_Info_extensionContainer,
        ODB_Info,
        _CAMEL_SubscriptionInfo_o_CSI,
        _CAMEL_SubscriptionInfo_o_BcsmCamelTDP_CriteriaList,
        _CAMEL_SubscriptionInfo_d_CSI,
        _CAMEL_SubscriptionInfo_t_CSI,
        _CAMEL_SubscriptionInfo_t_BCSM_CAMEL_TDP_CriteriaList,
        _CAMEL_SubscriptionInfo_vt_CSI,
        _CAMEL_SubscriptionInfo_vt_BCSM_CAMEL_TDP_CriteriaList,
        _CAMEL_SubscriptionInfo_tif_CSI,
        _CAMEL_SubscriptionInfo_tif_CSI_NotificationToCSE,
        _CAMEL_SubscriptionInfo_gprs_CSI,
        _CAMEL_SubscriptionInfo_mo_sms_CSI,
        _CAMEL_SubscriptionInfo_ss_CSI,
        _CAMEL_SubscriptionInfo_m_CSI,
        _CAMEL_SubscriptionInfo_extensionContainer,
        _CAMEL_SubscriptionInfo_specificCSIDeletedList,
        _CAMEL_SubscriptionInfo_mt_sms_CSI,
        _CAMEL_SubscriptionInfo_mt_smsCAMELTDP_CriteriaList,
        _CAMEL_SubscriptionInfo_mg_csi,
        _CAMEL_SubscriptionInfo_o_IM_CSI,
        _CAMEL_SubscriptionInfo_o_IM_BcsmCamelTDP_CriteriaList,
        _CAMEL_SubscriptionInfo_d_IM_CSI,
        _CAMEL_SubscriptionInfo_vt_IM_CSI,
        _CAMEL_SubscriptionInfo_vt_IM_BCSM_CAMEL_TDP_CriteriaList,
        CAMEL_SubscriptionInfo,
        _AnyTimeModificationArg_subscriberIdentity,
        _AnyTimeModificationArg_gsmSCF_Address,
        _AnyTimeModificationArg_modificationRequestFor_CF_Info,
        _AnyTimeModificationArg_modificationRequestFor_CB_Info,
        _AnyTimeModificationArg_modificationRequestFor_CSI,
        _AnyTimeModificationArg_extensionContainer,
        _AnyTimeModificationArg_longFTN_Supported,
        _AnyTimeModificationArg_modificationRequestFor_ODB_data,
        _AnyTimeModificationArg_modificationRequestFor_IP_SM_GW_Data,
        _AnyTimeModificationArg_activationRequestForUE_reachability,
        _AnyTimeModificationArg_modificationRequestFor_CSG,
        _AnyTimeModificationArg_modificationRequestFor_CW_Data,
        _AnyTimeModificationArg_modificationRequestFor_CLIP_Data,
        _AnyTimeModificationArg_modificationRequestFor_CLIR_Data,
        _AnyTimeModificationArg_modificationRequestFor_HOLD_Data,
        _AnyTimeModificationArg_modificationRequestFor_ECT_Data,
        AnyTimeModificationArg,
        _ModificationRequestFor_CW_Info_basicService,
        _ModificationRequestFor_CW_Info_ss_Status,
        _ModificationRequestFor_CW_Info_modifyNotificationToCSE,
        _ModificationRequestFor_CW_Info_extensionContainer,
        ModificationRequestFor_CW_Info,
        _ModificationRequestFor_CH_Info_ss_Status,
        _ModificationRequestFor_CH_Info_modifyNotificationToCSE,
        _ModificationRequestFor_CH_Info_extensionContainer,
        ModificationRequestFor_CH_Info,
        _ModificationRequestFor_ECT_Info_ss_Status,
        _ModificationRequestFor_ECT_Info_modifyNotificationToCSE,
        _ModificationRequestFor_ECT_Info_extensionContainer,
        ModificationRequestFor_ECT_Info,
        _ModificationRequestFor_CLIR_Info_ss_Status,
        _ModificationRequestFor_CLIR_Info_cliRestrictionOption,
        _ModificationRequestFor_CLIR_Info_modifyNotificationToCSE,
        _ModificationRequestFor_CLIR_Info_extensionContainer,
        ModificationRequestFor_CLIR_Info,
        _ModificationRequestFor_CLIP_Info_ss_Status,
        _ModificationRequestFor_CLIP_Info_overrideCategory,
        _ModificationRequestFor_CLIP_Info_modifyNotificationToCSE,
        _ModificationRequestFor_CLIP_Info_extensionContainer,
        ModificationRequestFor_CLIP_Info,
        _ModificationRequestFor_CSG_modifyNotificationToCSE,
        _ModificationRequestFor_CSG_extensionContainer,
        ModificationRequestFor_CSG,
        RequestedServingNode,
        ServingNode,
        _AnyTimeModificationRes_ss_InfoFor_CSE,
        _AnyTimeModificationRes_camel_SubscriptionInfo,
        _AnyTimeModificationRes_extensionContainer,
        _AnyTimeModificationRes_odb_Info,
        _AnyTimeModificationRes_cw_Data,
        _AnyTimeModificationRes_ch_Data,
        _AnyTimeModificationRes_clip_Data,
        _AnyTimeModificationRes_clir_Data,
        _AnyTimeModificationRes_ect_data,
        _AnyTimeModificationRes_serviceCentreAddress,
        AnyTimeModificationRes,
        _ModificationRequestFor_CF_Info_ss_Code,
        _ModificationRequestFor_CF_Info_basicService,
        _ModificationRequestFor_CF_Info_ss_Status,
        _ModificationRequestFor_CF_Info_forwardedToNumber,
        _ModificationRequestFor_CF_Info_forwardedToSubaddress,
        _ModificationRequestFor_CF_Info_noReplyConditionTime,
        _ModificationRequestFor_CF_Info_modifyNotificationToCSE,
        _ModificationRequestFor_CF_Info_extensionContainer,
        ModificationRequestFor_CF_Info,
        _ModificationRequestFor_CB_Info_ss_Code,
        _ModificationRequestFor_CB_Info_basicService,
        _ModificationRequestFor_CB_Info_ss_Status,
        _ModificationRequestFor_CB_Info_password,
        _ModificationRequestFor_CB_Info_wrongPasswordAttemptsCounter,
        _ModificationRequestFor_CB_Info_modifyNotificationToCSE,
        _ModificationRequestFor_CB_Info_extensionContainer,
        ModificationRequestFor_CB_Info,
        _ModificationRequestFor_ODB_data_odb_data,
        _ModificationRequestFor_ODB_data_modifyNotificationToCSE,
        _ModificationRequestFor_ODB_data_extensionContainer,
        ModificationRequestFor_ODB_data,
        _ModificationRequestFor_CSI_requestedCamel_SubscriptionInfo,
        _ModificationRequestFor_CSI_modifyNotificationToCSE,
        _ModificationRequestFor_CSI_modifyCSI_State,
        _ModificationRequestFor_CSI_extensionContainer,
        _ModificationRequestFor_CSI_additionalRequestedCAMEL_SubscriptionInfo,
        ModificationRequestFor_CSI,
        _ModificationRequestFor_IP_SM_GW_Data_modifyRegistrationStatus,
        _ModificationRequestFor_IP_SM_GW_Data_extensionContainer,
        _ModificationRequestFor_IP_SM_GW_Data_ip_sm_gw_DiameterAddress,
        ModificationRequestFor_IP_SM_GW_Data,
        ModificationInstruction,
        _NoteSubscriberDataModifiedArg_imsi,
        _NoteSubscriberDataModifiedArg_msisdn,
        _NoteSubscriberDataModifiedArg_forwardingInfoFor_CSE,
        _NoteSubscriberDataModifiedArg_callBarringInfoFor_CSE,
        _NoteSubscriberDataModifiedArg_odb_Info,
        _NoteSubscriberDataModifiedArg_camel_SubscriptionInfo,
        _NoteSubscriberDataModifiedArg_allInformationSent,
        _NoteSubscriberDataModifiedArg_extensionContainer,
        _NoteSubscriberDataModifiedArg_ue_reachable,
        _NoteSubscriberDataModifiedArg_csg_SubscriptionDataList,
        _NoteSubscriberDataModifiedArg_cw_Data,
        _NoteSubscriberDataModifiedArg_ch_Data,
        _NoteSubscriberDataModifiedArg_clip_Data,
        _NoteSubscriberDataModifiedArg_clir_Data,
        _NoteSubscriberDataModifiedArg_ect_data,
        NoteSubscriberDataModifiedArg,
        _NoteSubscriberDataModifiedRes_extensionContainer,
        NoteSubscriberDataModifiedRes,
        _NoteMM_EventArg_serviceKey,
        _NoteMM_EventArg_eventMet,
        _NoteMM_EventArg_imsi,
        _NoteMM_EventArg_msisdn,
        _NoteMM_EventArg_locationInformation,
        _NoteMM_EventArg_supportedCAMELPhases,
        _NoteMM_EventArg_extensionContainer,
        _NoteMM_EventArg_locationInformationGPRS,
        _NoteMM_EventArg_offeredCamel4Functionalities,
        NoteMM_EventArg,
        _NoteMM_EventRes_extensionContainer,
        NoteMM_EventRes,
        _Ext_SS_InfoFor_CSE_forwardingInfoFor_CSE,
        _Ext_SS_InfoFor_CSE_callBarringInfoFor_CSE,
        Ext_SS_InfoFor_CSE,
        _Ext_ForwardingInfoFor_CSE_ss_Code,
        _Ext_ForwardingInfoFor_CSE_forwardingFeatureList,
        _Ext_ForwardingInfoFor_CSE_notificationToCSE,
        _Ext_ForwardingInfoFor_CSE_extensionContainer,
        Ext_ForwardingInfoFor_CSE,
        _Ext_CallBarringInfoFor_CSE_ss_Code,
        _Ext_CallBarringInfoFor_CSE_callBarringFeatureList,
        _Ext_CallBarringInfoFor_CSE_password,
        _Ext_CallBarringInfoFor_CSE_wrongPasswordAttemptsCounter,
        _Ext_CallBarringInfoFor_CSE_notificationToCSE,
        _Ext_CallBarringInfoFor_CSE_extensionContainer,
        Ext_CallBarringInfoFor_CSE,
        _UpdateVcsgLocationArg_imsi,
        _UpdateVcsgLocationArg_msisdn,
        _UpdateVcsgLocationArg_vlr_Number,
        _UpdateVcsgLocationArg_sgsn_Number,
        _UpdateVcsgLocationArg_extensionContainer,
        UpdateVcsgLocationArg,
        _UpdateVcsgLocationRes_temporaryEmptySubscriptiondataIndicator,
        _UpdateVcsgLocationRes_extensionContainer,
        UpdateVcsgLocationRes,
        _CancelVcsgLocationArg_identity,
        _CancelVcsgLocationArg_extensionContainer,
        CancelVcsgLocationArg,
        _CancelVcsgLocationRes_extensionContainer,
        CancelVcsgLocationRes,
    ]

class MAP_OM_DataTypes:

    _name_  = 'MAP-OM-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 12, 16]
    
    _obj_ = [
        'ActivateTraceModeArg',
        'MDT-Configuration',
        'MDT-Allowed-PLMNId-List',
        'PeriodUMTS',
        'PeriodLTE',
        'PositioningMethod',
        'MeasurementQuantity',
        'EventThreshold1F',
        'EventThreshold1I',
        'JobType',
        'AreaScope',
        'CGI-List',
        'E-UTRAN-CGI-List',
        'RoutingAreaId-List',
        'LocationAreaId-List',
        'TrackingAreaId-List',
        'ListOfMeasurements',
        'ReportingTrigger',
        'ReportInterval',
        'ReportAmount',
        'EventThresholdRSRP',
        'EventThresholdRSRQ',
        'LoggingInterval',
        'LoggingDuration',
        'TraceReference',
        'TraceReference2',
        'TraceRecordingSessionReference',
        'TraceType',
        'TraceDepthList',
        'TraceDepth',
        'TraceDepthExtension',
        'TraceNE-TypeList',
        'TraceInterfaceList',
        'MSC-S-InterfaceList',
        'MGW-InterfaceList',
        'SGSN-InterfaceList',
        'GGSN-InterfaceList',
        'RNC-InterfaceList',
        'BMSC-InterfaceList',
        'MME-InterfaceList',
        'SGW-InterfaceList',
        'PGW-InterfaceList',
        'ENB-InterfaceList',
        'TraceEventList',
        'MSC-S-EventList',
        'MGW-EventList',
        'SGSN-EventList',
        'GGSN-EventList',
        'BMSC-EventList',
        'MME-EventList',
        'SGW-EventList',
        'PGW-EventList',
        'TracePropagationList',
        'ActivateTraceModeRes',
        'DeactivateTraceModeArg',
        'DeactivateTraceModeRes',
        ]
    _type_ = [
        'ActivateTraceModeArg',
        'MDT-Configuration',
        'MDT-Allowed-PLMNId-List',
        'PeriodUMTS',
        'PeriodLTE',
        'PositioningMethod',
        'MeasurementQuantity',
        'EventThreshold1F',
        'EventThreshold1I',
        'JobType',
        'AreaScope',
        'CGI-List',
        'E-UTRAN-CGI-List',
        'RoutingAreaId-List',
        'LocationAreaId-List',
        'TrackingAreaId-List',
        'ListOfMeasurements',
        'ReportingTrigger',
        'ReportInterval',
        'ReportAmount',
        'EventThresholdRSRP',
        'EventThresholdRSRQ',
        'LoggingInterval',
        'LoggingDuration',
        'TraceReference',
        'TraceReference2',
        'TraceRecordingSessionReference',
        'TraceType',
        'TraceDepthList',
        'TraceDepth',
        'TraceDepthExtension',
        'TraceNE-TypeList',
        'TraceInterfaceList',
        'MSC-S-InterfaceList',
        'MGW-InterfaceList',
        'SGSN-InterfaceList',
        'GGSN-InterfaceList',
        'RNC-InterfaceList',
        'BMSC-InterfaceList',
        'MME-InterfaceList',
        'SGW-InterfaceList',
        'PGW-InterfaceList',
        'ENB-InterfaceList',
        'TraceEventList',
        'MSC-S-EventList',
        'MGW-EventList',
        'SGSN-EventList',
        'GGSN-EventList',
        'BMSC-EventList',
        'MME-EventList',
        'SGW-EventList',
        'PGW-EventList',
        'TracePropagationList',
        'ActivateTraceModeRes',
        'DeactivateTraceModeArg',
        'DeactivateTraceModeRes',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< ActivateTraceModeArg >-----#
    ActivateTraceModeArg = SEQ(name='ActivateTraceModeArg', mode=MODE_TYPE)
    _ActivateTraceModeArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _ActivateTraceModeArg_traceReference = OCT_STR(name='traceReference', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceReference')))
    _ActivateTraceModeArg_traceType = INT(name='traceType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceType')))
    _ActivateTraceModeArg_omc_Id = OCT_STR(name='omc-Id', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')), opt=True)
    _ActivateTraceModeArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ActivateTraceModeArg_traceReference2 = OCT_STR(name='traceReference2', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceReference2')), opt=True)
    _ActivateTraceModeArg_traceDepthList = SEQ(name='traceDepthList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthList')), opt=True)
    _ActivateTraceModeArg_traceNE_TypeList = BIT_STR(name='traceNE-TypeList', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceNE-TypeList')), opt=True)
    _ActivateTraceModeArg_traceInterfaceList = SEQ(name='traceInterfaceList', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceInterfaceList')), opt=True)
    _ActivateTraceModeArg_traceEventList = SEQ(name='traceEventList', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceEventList')), opt=True)
    _ActivateTraceModeArg_traceCollectionEntity = OCT_STR(name='traceCollectionEntity', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'GSN-Address')), opt=True)
    _ActivateTraceModeArg_mdt_Configuration = SEQ(name='mdt-Configuration', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MDT-Configuration')), opt=True)
    ActivateTraceModeArg._cont = ASN1Dict([
        ('imsi', _ActivateTraceModeArg_imsi),
        ('traceReference', _ActivateTraceModeArg_traceReference),
        ('traceType', _ActivateTraceModeArg_traceType),
        ('omc-Id', _ActivateTraceModeArg_omc_Id),
        ('extensionContainer', _ActivateTraceModeArg_extensionContainer),
        ('traceReference2', _ActivateTraceModeArg_traceReference2),
        ('traceDepthList', _ActivateTraceModeArg_traceDepthList),
        ('traceNE-TypeList', _ActivateTraceModeArg_traceNE_TypeList),
        ('traceInterfaceList', _ActivateTraceModeArg_traceInterfaceList),
        ('traceEventList', _ActivateTraceModeArg_traceEventList),
        ('traceCollectionEntity', _ActivateTraceModeArg_traceCollectionEntity),
        ('mdt-Configuration', _ActivateTraceModeArg_mdt_Configuration),
        ])
    ActivateTraceModeArg._ext = ['traceReference2', 'traceDepthList', 'traceNE-TypeList', 'traceInterfaceList', 'traceEventList', 'traceCollectionEntity', 'mdt-Configuration']
    
    #-----< MDT-Configuration >-----#
    MDT_Configuration = SEQ(name='MDT-Configuration', mode=MODE_TYPE)
    _MDT_Configuration_jobType = ENUM(name='jobType', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'JobType')))
    _MDT_Configuration_areaScope = SEQ(name='areaScope', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'AreaScope')), opt=True)
    _MDT_Configuration_listOfMeasurements = OCT_STR(name='listOfMeasurements', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'ListOfMeasurements')), opt=True)
    _MDT_Configuration_reportingTrigger = OCT_STR(name='reportingTrigger', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'ReportingTrigger')), opt=True)
    _MDT_Configuration_reportInterval = ENUM(name='reportInterval', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'ReportInterval')), opt=True)
    _MDT_Configuration_reportAmount = ENUM(name='reportAmount', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'ReportAmount')), opt=True)
    _MDT_Configuration_eventThresholdRSRP = INT(name='eventThresholdRSRP', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-OM-DataTypes', 'EventThresholdRSRP')), opt=True)
    _MDT_Configuration_eventThresholdRSRQ = INT(name='eventThresholdRSRQ', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'EventThresholdRSRQ')), opt=True)
    _MDT_Configuration_loggingInterval = ENUM(name='loggingInterval', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'LoggingInterval')), opt=True)
    _MDT_Configuration_loggingDuration = ENUM(name='loggingDuration', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'LoggingDuration')), opt=True)
    _MDT_Configuration_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _MDT_Configuration_measurementPeriodUMTS = ENUM(name='measurementPeriodUMTS', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'PeriodUMTS')), opt=True)
    _MDT_Configuration_measurementPeriodLTE = ENUM(name='measurementPeriodLTE', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'PeriodLTE')), opt=True)
    _MDT_Configuration_collectionPeriodRRM_UMTS = ENUM(name='collectionPeriodRRM-UMTS', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'PeriodUMTS')), opt=True)
    _MDT_Configuration_collectionPeriodRRM_LTE = ENUM(name='collectionPeriodRRM-LTE', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'PeriodLTE')), opt=True)
    _MDT_Configuration_positioningMethod = OCT_STR(name='positioningMethod', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'PositioningMethod')), opt=True)
    _MDT_Configuration_measurementQuantity = OCT_STR(name='measurementQuantity', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MeasurementQuantity')), opt=True)
    _MDT_Configuration_eventThreshold1F = INT(name='eventThreshold1F', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'EventThreshold1F')), opt=True)
    _MDT_Configuration_eventThreshold1I = INT(name='eventThreshold1I', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'EventThreshold1I')), opt=True)
    _MDT_Configuration_mdt_Allowed_PLMN_List = SEQ_OF(name='mdt-Allowed-PLMN-List', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MDT-Allowed-PLMNId-List')), opt=True)
    MDT_Configuration._cont = ASN1Dict([
        ('jobType', _MDT_Configuration_jobType),
        ('areaScope', _MDT_Configuration_areaScope),
        ('listOfMeasurements', _MDT_Configuration_listOfMeasurements),
        ('reportingTrigger', _MDT_Configuration_reportingTrigger),
        ('reportInterval', _MDT_Configuration_reportInterval),
        ('reportAmount', _MDT_Configuration_reportAmount),
        ('eventThresholdRSRP', _MDT_Configuration_eventThresholdRSRP),
        ('eventThresholdRSRQ', _MDT_Configuration_eventThresholdRSRQ),
        ('loggingInterval', _MDT_Configuration_loggingInterval),
        ('loggingDuration', _MDT_Configuration_loggingDuration),
        ('extensionContainer', _MDT_Configuration_extensionContainer),
        ('measurementPeriodUMTS', _MDT_Configuration_measurementPeriodUMTS),
        ('measurementPeriodLTE', _MDT_Configuration_measurementPeriodLTE),
        ('collectionPeriodRRM-UMTS', _MDT_Configuration_collectionPeriodRRM_UMTS),
        ('collectionPeriodRRM-LTE', _MDT_Configuration_collectionPeriodRRM_LTE),
        ('positioningMethod', _MDT_Configuration_positioningMethod),
        ('measurementQuantity', _MDT_Configuration_measurementQuantity),
        ('eventThreshold1F', _MDT_Configuration_eventThreshold1F),
        ('eventThreshold1I', _MDT_Configuration_eventThreshold1I),
        ('mdt-Allowed-PLMN-List', _MDT_Configuration_mdt_Allowed_PLMN_List),
        ])
    MDT_Configuration._ext = ['measurementPeriodUMTS', 'measurementPeriodLTE', 'collectionPeriodRRM-UMTS', 'collectionPeriodRRM-LTE', 'positioningMethod', 'measurementQuantity', 'eventThreshold1F', 'eventThreshold1I', 'mdt-Allowed-PLMN-List']
    
    #-----< MDT-Allowed-PLMNId-List >-----#
    MDT_Allowed_PLMNId_List = SEQ_OF(name='MDT-Allowed-PLMNId-List', mode=MODE_TYPE)
    _MDT_Allowed_PLMNId_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'PLMN-Id')))
    MDT_Allowed_PLMNId_List._cont = _MDT_Allowed_PLMNId_List__item_
    MDT_Allowed_PLMNId_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< PeriodUMTS >-----#
    PeriodUMTS = ENUM(name='PeriodUMTS', mode=MODE_TYPE)
    PeriodUMTS._cont = ASN1Dict([('d250ms', 0), ('d500ms', 1), ('d1000ms', 2), ('d2000ms', 3), ('d3000ms', 4), ('d4000ms', 5), ('d6000ms', 6), ('d8000ms', 7), ('d12000ms', 8), ('d16000ms', 9), ('d20000ms', 10), ('d24000ms', 11), ('d28000ms', 12), ('d32000ms', 13), ('d64000ms', 14)])
    PeriodUMTS._ext = None
    
    #-----< PeriodLTE >-----#
    PeriodLTE = ENUM(name='PeriodLTE', mode=MODE_TYPE)
    PeriodLTE._cont = ASN1Dict([('d1024ms', 0), ('d1280ms', 1), ('d2048ms', 2), ('d2560ms', 3), ('d5120ms', 4), ('d10240ms', 5), ('d1min', 6)])
    PeriodLTE._ext = None
    
    #-----< PositioningMethod >-----#
    PositioningMethod = OCT_STR(name='PositioningMethod', mode=MODE_TYPE)
    PositioningMethod._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< MeasurementQuantity >-----#
    MeasurementQuantity = OCT_STR(name='MeasurementQuantity', mode=MODE_TYPE)
    MeasurementQuantity._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< EventThreshold1F >-----#
    EventThreshold1F = INT(name='EventThreshold1F', mode=MODE_TYPE)
    EventThreshold1F._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-120, ub=165)], ev=None, er=[])
    
    #-----< EventThreshold1I >-----#
    EventThreshold1I = INT(name='EventThreshold1I', mode=MODE_TYPE)
    EventThreshold1I._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-120, ub=-25)], ev=None, er=[])
    
    #-----< JobType >-----#
    JobType = ENUM(name='JobType', mode=MODE_TYPE)
    JobType._cont = ASN1Dict([('immediate-MDT-only', 0), ('logged-MDT-only', 1), ('trace-only', 2), ('immediate-MDT-and-trace', 3)])
    JobType._ext = None
    
    #-----< AreaScope >-----#
    AreaScope = SEQ(name='AreaScope', mode=MODE_TYPE)
    _AreaScope_cgi_List = SEQ_OF(name='cgi-List', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'CGI-List')), opt=True)
    _AreaScope_e_utran_cgi_List = SEQ_OF(name='e-utran-cgi-List', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'E-UTRAN-CGI-List')), opt=True)
    _AreaScope_routingAreaId_List = SEQ_OF(name='routingAreaId-List', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'RoutingAreaId-List')), opt=True)
    _AreaScope_locationAreaId_List = SEQ_OF(name='locationAreaId-List', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'LocationAreaId-List')), opt=True)
    _AreaScope_trackingAreaId_List = SEQ_OF(name='trackingAreaId-List', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TrackingAreaId-List')), opt=True)
    _AreaScope_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    AreaScope._cont = ASN1Dict([
        ('cgi-List', _AreaScope_cgi_List),
        ('e-utran-cgi-List', _AreaScope_e_utran_cgi_List),
        ('routingAreaId-List', _AreaScope_routingAreaId_List),
        ('locationAreaId-List', _AreaScope_locationAreaId_List),
        ('trackingAreaId-List', _AreaScope_trackingAreaId_List),
        ('extensionContainer', _AreaScope_extensionContainer),
        ])
    AreaScope._ext = []
    
    #-----< CGI-List >-----#
    CGI_List = SEQ_OF(name='CGI-List', mode=MODE_TYPE)
    _CGI_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'GlobalCellId')))
    CGI_List._cont = _CGI_List__item_
    CGI_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< E-UTRAN-CGI-List >-----#
    E_UTRAN_CGI_List = SEQ_OF(name='E-UTRAN-CGI-List', mode=MODE_TYPE)
    _E_UTRAN_CGI_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'E-UTRAN-CGI')))
    E_UTRAN_CGI_List._cont = _E_UTRAN_CGI_List__item_
    E_UTRAN_CGI_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< RoutingAreaId-List >-----#
    RoutingAreaId_List = SEQ_OF(name='RoutingAreaId-List', mode=MODE_TYPE)
    _RoutingAreaId_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'RAIdentity')))
    RoutingAreaId_List._cont = _RoutingAreaId_List__item_
    RoutingAreaId_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< LocationAreaId-List >-----#
    LocationAreaId_List = SEQ_OF(name='LocationAreaId-List', mode=MODE_TYPE)
    _LocationAreaId_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LAIFixedLength')))
    LocationAreaId_List._cont = _LocationAreaId_List__item_
    LocationAreaId_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< TrackingAreaId-List >-----#
    TrackingAreaId_List = SEQ_OF(name='TrackingAreaId-List', mode=MODE_TYPE)
    _TrackingAreaId_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'TA-Id')))
    TrackingAreaId_List._cont = _TrackingAreaId_List__item_
    TrackingAreaId_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< ListOfMeasurements >-----#
    ListOfMeasurements = OCT_STR(name='ListOfMeasurements', mode=MODE_TYPE)
    ListOfMeasurements._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< ReportingTrigger >-----#
    ReportingTrigger = OCT_STR(name='ReportingTrigger', mode=MODE_TYPE)
    ReportingTrigger._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< ReportInterval >-----#
    ReportInterval = ENUM(name='ReportInterval', mode=MODE_TYPE)
    ReportInterval._cont = ASN1Dict([('umts250ms', 0), ('umts500ms', 1), ('umts1000ms', 2), ('umts2000ms', 3), ('umts3000ms', 4), ('umts4000ms', 5), ('umts6000ms', 6), ('umts8000ms', 7), ('umts12000ms', 8), ('umts16000ms', 9), ('umts20000ms', 10), ('umts24000ms', 11), ('umts28000ms', 12), ('umts32000ms', 13), ('umts64000ms', 14), ('lte120ms', 15), ('lte240ms', 16), ('lte480ms', 17), ('lte640ms', 18), ('lte1024ms', 19), ('lte2048ms', 20), ('lte5120ms', 21), ('lte10240ms', 22), ('lte1min', 23), ('lte6min', 24), ('lte12min', 25), ('lte30min', 26), ('lte60min', 27)])
    ReportInterval._ext = None
    
    #-----< ReportAmount >-----#
    ReportAmount = ENUM(name='ReportAmount', mode=MODE_TYPE)
    ReportAmount._cont = ASN1Dict([('d1', 0), ('d2', 1), ('d4', 2), ('d8', 3), ('d16', 4), ('d32', 5), ('d64', 6), ('infinity', 7)])
    ReportAmount._ext = None
    
    #-----< EventThresholdRSRP >-----#
    EventThresholdRSRP = INT(name='EventThresholdRSRP', mode=MODE_TYPE)
    EventThresholdRSRP._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=97)], ev=None, er=[])
    
    #-----< EventThresholdRSRQ >-----#
    EventThresholdRSRQ = INT(name='EventThresholdRSRQ', mode=MODE_TYPE)
    EventThresholdRSRQ._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=34)], ev=None, er=[])
    
    #-----< LoggingInterval >-----#
    LoggingInterval = ENUM(name='LoggingInterval', mode=MODE_TYPE)
    LoggingInterval._cont = ASN1Dict([('d1dot28', 0), ('d2dot56', 1), ('d5dot12', 2), ('d10dot24', 3), ('d20dot48', 4), ('d30dot72', 5), ('d40dot96', 6), ('d61dot44', 7)])
    LoggingInterval._ext = None
    
    #-----< LoggingDuration >-----#
    LoggingDuration = ENUM(name='LoggingDuration', mode=MODE_TYPE)
    LoggingDuration._cont = ASN1Dict([('d600sec', 0), ('d1200sec', 1), ('d2400sec', 2), ('d3600sec', 3), ('d5400sec', 4), ('d7200sec', 5)])
    LoggingDuration._ext = None
    
    #-----< TraceReference >-----#
    TraceReference = OCT_STR(name='TraceReference', mode=MODE_TYPE)
    TraceReference._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    
    #-----< TraceReference2 >-----#
    TraceReference2 = OCT_STR(name='TraceReference2', mode=MODE_TYPE)
    TraceReference2._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< TraceRecordingSessionReference >-----#
    TraceRecordingSessionReference = OCT_STR(name='TraceRecordingSessionReference', mode=MODE_TYPE)
    TraceRecordingSessionReference._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< TraceType >-----#
    TraceType = INT(name='TraceType', mode=MODE_TYPE)
    TraceType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< TraceDepthList >-----#
    TraceDepthList = SEQ(name='TraceDepthList', mode=MODE_TYPE)
    _TraceDepthList_msc_s_TraceDepth = ENUM(name='msc-s-TraceDepth', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_mgw_TraceDepth = ENUM(name='mgw-TraceDepth', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_sgsn_TraceDepth = ENUM(name='sgsn-TraceDepth', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_ggsn_TraceDepth = ENUM(name='ggsn-TraceDepth', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_rnc_TraceDepth = ENUM(name='rnc-TraceDepth', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_bmsc_TraceDepth = ENUM(name='bmsc-TraceDepth', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_mme_TraceDepth = ENUM(name='mme-TraceDepth', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_sgw_TraceDepth = ENUM(name='sgw-TraceDepth', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_pgw_TraceDepth = ENUM(name='pgw-TraceDepth', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_eNB_TraceDepth = ENUM(name='eNB-TraceDepth', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TraceDepthList_msc_s_TraceDepthExtension = ENUM(name='msc-s-TraceDepthExtension', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TraceDepthList_mgw_TraceDepthExtension = ENUM(name='mgw-TraceDepthExtension', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TraceDepthList_sgsn_TraceDepthExtension = ENUM(name='sgsn-TraceDepthExtension', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TraceDepthList_ggsn_TraceDepthExtension = ENUM(name='ggsn-TraceDepthExtension', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TraceDepthList_rnc_TraceDepthExtension = ENUM(name='rnc-TraceDepthExtension', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TraceDepthList_bmsc_TraceDepthExtension = ENUM(name='bmsc-TraceDepthExtension', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TraceDepthList_mme_TraceDepthExtension = ENUM(name='mme-TraceDepthExtension', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TraceDepthList_sgw_TraceDepthExtension = ENUM(name='sgw-TraceDepthExtension', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TraceDepthList_pgw_TraceDepthExtension = ENUM(name='pgw-TraceDepthExtension', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TraceDepthList_eNB_TraceDepthExtension = ENUM(name='eNB-TraceDepthExtension', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    TraceDepthList._cont = ASN1Dict([
        ('msc-s-TraceDepth', _TraceDepthList_msc_s_TraceDepth),
        ('mgw-TraceDepth', _TraceDepthList_mgw_TraceDepth),
        ('sgsn-TraceDepth', _TraceDepthList_sgsn_TraceDepth),
        ('ggsn-TraceDepth', _TraceDepthList_ggsn_TraceDepth),
        ('rnc-TraceDepth', _TraceDepthList_rnc_TraceDepth),
        ('bmsc-TraceDepth', _TraceDepthList_bmsc_TraceDepth),
        ('mme-TraceDepth', _TraceDepthList_mme_TraceDepth),
        ('sgw-TraceDepth', _TraceDepthList_sgw_TraceDepth),
        ('pgw-TraceDepth', _TraceDepthList_pgw_TraceDepth),
        ('eNB-TraceDepth', _TraceDepthList_eNB_TraceDepth),
        ('msc-s-TraceDepthExtension', _TraceDepthList_msc_s_TraceDepthExtension),
        ('mgw-TraceDepthExtension', _TraceDepthList_mgw_TraceDepthExtension),
        ('sgsn-TraceDepthExtension', _TraceDepthList_sgsn_TraceDepthExtension),
        ('ggsn-TraceDepthExtension', _TraceDepthList_ggsn_TraceDepthExtension),
        ('rnc-TraceDepthExtension', _TraceDepthList_rnc_TraceDepthExtension),
        ('bmsc-TraceDepthExtension', _TraceDepthList_bmsc_TraceDepthExtension),
        ('mme-TraceDepthExtension', _TraceDepthList_mme_TraceDepthExtension),
        ('sgw-TraceDepthExtension', _TraceDepthList_sgw_TraceDepthExtension),
        ('pgw-TraceDepthExtension', _TraceDepthList_pgw_TraceDepthExtension),
        ('eNB-TraceDepthExtension', _TraceDepthList_eNB_TraceDepthExtension),
        ])
    TraceDepthList._ext = ['mme-TraceDepth', 'sgw-TraceDepth', 'pgw-TraceDepth', 'eNB-TraceDepth', 'msc-s-TraceDepthExtension', 'mgw-TraceDepthExtension', 'sgsn-TraceDepthExtension', 'ggsn-TraceDepthExtension', 'rnc-TraceDepthExtension', 'bmsc-TraceDepthExtension', 'mme-TraceDepthExtension', 'sgw-TraceDepthExtension', 'pgw-TraceDepthExtension', 'eNB-TraceDepthExtension']
    
    #-----< TraceDepth >-----#
    TraceDepth = ENUM(name='TraceDepth', mode=MODE_TYPE)
    TraceDepth._cont = ASN1Dict([('minimum', 0), ('medium', 1), ('maximum', 2)])
    TraceDepth._ext = []
    
    #-----< TraceDepthExtension >-----#
    TraceDepthExtension = ENUM(name='TraceDepthExtension', mode=MODE_TYPE)
    TraceDepthExtension._cont = ASN1Dict([('minimumWithoutVendorSpecificExtension', 0), ('mediumWithoutVendorSpecificExtension', 1), ('maximumWithoutVendorSpecificExtension', 2)])
    TraceDepthExtension._ext = []
    
    #-----< TraceNE-TypeList >-----#
    TraceNE_TypeList = BIT_STR(name='TraceNE-TypeList', mode=MODE_TYPE)
    TraceNE_TypeList._cont = ASN1Dict([('msc-s', 0), ('mgw', 1), ('sgsn', 2), ('ggsn', 3), ('rnc', 4), ('bm-sc', 5), ('mme', 6), ('sgw', 7), ('pgw', 8), ('eNB', 9)])
    TraceNE_TypeList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=6, ub=16)], ev=None, er=[])
    
    #-----< TraceInterfaceList >-----#
    TraceInterfaceList = SEQ(name='TraceInterfaceList', mode=MODE_TYPE)
    _TraceInterfaceList_msc_s_List = BIT_STR(name='msc-s-List', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MSC-S-InterfaceList')), opt=True)
    _TraceInterfaceList_mgw_List = BIT_STR(name='mgw-List', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MGW-InterfaceList')), opt=True)
    _TraceInterfaceList_sgsn_List = BIT_STR(name='sgsn-List', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'SGSN-InterfaceList')), opt=True)
    _TraceInterfaceList_ggsn_List = BIT_STR(name='ggsn-List', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'GGSN-InterfaceList')), opt=True)
    _TraceInterfaceList_rnc_List = BIT_STR(name='rnc-List', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'RNC-InterfaceList')), opt=True)
    _TraceInterfaceList_bmsc_List = BIT_STR(name='bmsc-List', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'BMSC-InterfaceList')), opt=True)
    _TraceInterfaceList_mme_List = BIT_STR(name='mme-List', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MME-InterfaceList')), opt=True)
    _TraceInterfaceList_sgw_List = BIT_STR(name='sgw-List', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'SGW-InterfaceList')), opt=True)
    _TraceInterfaceList_pgw_List = BIT_STR(name='pgw-List', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'PGW-InterfaceList')), opt=True)
    _TraceInterfaceList_eNB_List = BIT_STR(name='eNB-List', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'ENB-InterfaceList')), opt=True)
    TraceInterfaceList._cont = ASN1Dict([
        ('msc-s-List', _TraceInterfaceList_msc_s_List),
        ('mgw-List', _TraceInterfaceList_mgw_List),
        ('sgsn-List', _TraceInterfaceList_sgsn_List),
        ('ggsn-List', _TraceInterfaceList_ggsn_List),
        ('rnc-List', _TraceInterfaceList_rnc_List),
        ('bmsc-List', _TraceInterfaceList_bmsc_List),
        ('mme-List', _TraceInterfaceList_mme_List),
        ('sgw-List', _TraceInterfaceList_sgw_List),
        ('pgw-List', _TraceInterfaceList_pgw_List),
        ('eNB-List', _TraceInterfaceList_eNB_List),
        ])
    TraceInterfaceList._ext = ['mme-List', 'sgw-List', 'pgw-List', 'eNB-List']
    
    #-----< MSC-S-InterfaceList >-----#
    MSC_S_InterfaceList = BIT_STR(name='MSC-S-InterfaceList', mode=MODE_TYPE)
    MSC_S_InterfaceList._cont = ASN1Dict([('a', 0), ('iu', 1), ('mc', 2), ('map-g', 3), ('map-b', 4), ('map-e', 5), ('map-f', 6), ('cap', 7), ('map-d', 8), ('map-c', 9)])
    MSC_S_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=10, ub=16)], ev=None, er=[])
    
    #-----< MGW-InterfaceList >-----#
    MGW_InterfaceList = BIT_STR(name='MGW-InterfaceList', mode=MODE_TYPE)
    MGW_InterfaceList._cont = ASN1Dict([('mc', 0), ('nb-up', 1), ('iu-up', 2)])
    MGW_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    
    #-----< SGSN-InterfaceList >-----#
    SGSN_InterfaceList = BIT_STR(name='SGSN-InterfaceList', mode=MODE_TYPE)
    SGSN_InterfaceList._cont = ASN1Dict([('gb', 0), ('iu', 1), ('gn', 2), ('map-gr', 3), ('map-gd', 4), ('map-gf', 5), ('gs', 6), ('ge', 7), ('s3', 8), ('s4', 9), ('s6d', 10)])
    SGSN_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=8, ub=16)], ev=None, er=[])
    
    #-----< GGSN-InterfaceList >-----#
    GGSN_InterfaceList = BIT_STR(name='GGSN-InterfaceList', mode=MODE_TYPE)
    GGSN_InterfaceList._cont = ASN1Dict([('gn', 0), ('gi', 1), ('gmb', 2)])
    GGSN_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    
    #-----< RNC-InterfaceList >-----#
    RNC_InterfaceList = BIT_STR(name='RNC-InterfaceList', mode=MODE_TYPE)
    RNC_InterfaceList._cont = ASN1Dict([('iu', 0), ('iur', 1), ('iub', 2), ('uu', 3)])
    RNC_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=4, ub=8)], ev=None, er=[])
    
    #-----< BMSC-InterfaceList >-----#
    BMSC_InterfaceList = BIT_STR(name='BMSC-InterfaceList', mode=MODE_TYPE)
    BMSC_InterfaceList._cont = ASN1Dict([('gmb', 0)])
    BMSC_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< MME-InterfaceList >-----#
    MME_InterfaceList = BIT_STR(name='MME-InterfaceList', mode=MODE_TYPE)
    MME_InterfaceList._cont = ASN1Dict([('s1-mme', 0), ('s3', 1), ('s6a', 2), ('s10', 3), ('s11', 4)])
    MME_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=8)], ev=None, er=[])
    
    #-----< SGW-InterfaceList >-----#
    SGW_InterfaceList = BIT_STR(name='SGW-InterfaceList', mode=MODE_TYPE)
    SGW_InterfaceList._cont = ASN1Dict([('s4', 0), ('s5', 1), ('s8b', 2), ('s11', 3), ('gxc', 4)])
    SGW_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=8)], ev=None, er=[])
    
    #-----< PGW-InterfaceList >-----#
    PGW_InterfaceList = BIT_STR(name='PGW-InterfaceList', mode=MODE_TYPE)
    PGW_InterfaceList._cont = ASN1Dict([('s2a', 0), ('s2b', 1), ('s2c', 2), ('s5', 3), ('s6b', 4), ('gx', 5), ('s8b', 6), ('sgi', 7)])
    PGW_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=8, ub=16)], ev=None, er=[])
    
    #-----< ENB-InterfaceList >-----#
    ENB_InterfaceList = BIT_STR(name='ENB-InterfaceList', mode=MODE_TYPE)
    ENB_InterfaceList._cont = ASN1Dict([('s1-mme', 0), ('x2', 1), ('uu', 2)])
    ENB_InterfaceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    
    #-----< TraceEventList >-----#
    TraceEventList = SEQ(name='TraceEventList', mode=MODE_TYPE)
    _TraceEventList_msc_s_List = BIT_STR(name='msc-s-List', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MSC-S-EventList')), opt=True)
    _TraceEventList_mgw_List = BIT_STR(name='mgw-List', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MGW-EventList')), opt=True)
    _TraceEventList_sgsn_List = BIT_STR(name='sgsn-List', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'SGSN-EventList')), opt=True)
    _TraceEventList_ggsn_List = BIT_STR(name='ggsn-List', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'GGSN-EventList')), opt=True)
    _TraceEventList_bmsc_List = BIT_STR(name='bmsc-List', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'BMSC-EventList')), opt=True)
    _TraceEventList_mme_List = BIT_STR(name='mme-List', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MME-EventList')), opt=True)
    _TraceEventList_sgw_List = BIT_STR(name='sgw-List', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'SGW-EventList')), opt=True)
    _TraceEventList_pgw_List = BIT_STR(name='pgw-List', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'PGW-EventList')), opt=True)
    TraceEventList._cont = ASN1Dict([
        ('msc-s-List', _TraceEventList_msc_s_List),
        ('mgw-List', _TraceEventList_mgw_List),
        ('sgsn-List', _TraceEventList_sgsn_List),
        ('ggsn-List', _TraceEventList_ggsn_List),
        ('bmsc-List', _TraceEventList_bmsc_List),
        ('mme-List', _TraceEventList_mme_List),
        ('sgw-List', _TraceEventList_sgw_List),
        ('pgw-List', _TraceEventList_pgw_List),
        ])
    TraceEventList._ext = ['mme-List', 'sgw-List', 'pgw-List']
    
    #-----< MSC-S-EventList >-----#
    MSC_S_EventList = BIT_STR(name='MSC-S-EventList', mode=MODE_TYPE)
    MSC_S_EventList._cont = ASN1Dict([('mo-mtCall', 0), ('mo-mt-sms', 1), ('lu-imsiAttach-imsiDetach', 2), ('handovers', 3), ('ss', 4)])
    MSC_S_EventList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=16)], ev=None, er=[])
    
    #-----< MGW-EventList >-----#
    MGW_EventList = BIT_STR(name='MGW-EventList', mode=MODE_TYPE)
    MGW_EventList._cont = ASN1Dict([('context', 0)])
    MGW_EventList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< SGSN-EventList >-----#
    SGSN_EventList = BIT_STR(name='SGSN-EventList', mode=MODE_TYPE)
    SGSN_EventList._cont = ASN1Dict([('pdpContext', 0), ('mo-mt-sms', 1), ('rau-gprsAttach-gprsDetach', 2), ('mbmsContext', 3)])
    SGSN_EventList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=4, ub=16)], ev=None, er=[])
    
    #-----< GGSN-EventList >-----#
    GGSN_EventList = BIT_STR(name='GGSN-EventList', mode=MODE_TYPE)
    GGSN_EventList._cont = ASN1Dict([('pdpContext', 0), ('mbmsContext', 1)])
    GGSN_EventList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=8)], ev=None, er=[])
    
    #-----< BMSC-EventList >-----#
    BMSC_EventList = BIT_STR(name='BMSC-EventList', mode=MODE_TYPE)
    BMSC_EventList._cont = ASN1Dict([('mbmsMulticastServiceActivation', 0)])
    BMSC_EventList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< MME-EventList >-----#
    MME_EventList = BIT_STR(name='MME-EventList', mode=MODE_TYPE)
    MME_EventList._cont = ASN1Dict([('ue-initiatedPDNconectivityRequest', 0), ('serviceRequestts', 1), ('initialAttachTrackingAreaUpdateDetach', 2), ('ue-initiatedPDNdisconnection', 3), ('bearerActivationModificationDeletion', 4), ('handover', 5)])
    MME_EventList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=6, ub=8)], ev=None, er=[])
    
    #-----< SGW-EventList >-----#
    SGW_EventList = BIT_STR(name='SGW-EventList', mode=MODE_TYPE)
    SGW_EventList._cont = ASN1Dict([('pdn-connectionCreation', 0), ('pdn-connectionTermination', 1), ('bearerActivationModificationDeletion', 2)])
    SGW_EventList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    
    #-----< PGW-EventList >-----#
    PGW_EventList = BIT_STR(name='PGW-EventList', mode=MODE_TYPE)
    PGW_EventList._cont = ASN1Dict([('pdn-connectionCreation', 0), ('pdn-connectionTermination', 1), ('bearerActivationModificationDeletion', 2)])
    PGW_EventList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=8)], ev=None, er=[])
    
    #-----< TracePropagationList >-----#
    TracePropagationList = SEQ(name='TracePropagationList', mode=MODE_TYPE)
    _TracePropagationList_traceReference = OCT_STR(name='traceReference', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceReference')), opt=True)
    _TracePropagationList_traceType = INT(name='traceType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceType')), opt=True)
    _TracePropagationList_traceReference2 = OCT_STR(name='traceReference2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceReference2')), opt=True)
    _TracePropagationList_traceRecordingSessionReference = OCT_STR(name='traceRecordingSessionReference', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceRecordingSessionReference')), opt=True)
    _TracePropagationList_rnc_TraceDepth = ENUM(name='rnc-TraceDepth', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TracePropagationList_rnc_InterfaceList = BIT_STR(name='rnc-InterfaceList', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'RNC-InterfaceList')), opt=True)
    _TracePropagationList_msc_s_TraceDepth = ENUM(name='msc-s-TraceDepth', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TracePropagationList_msc_s_InterfaceList = BIT_STR(name='msc-s-InterfaceList', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MSC-S-InterfaceList')), opt=True)
    _TracePropagationList_msc_s_EventList = BIT_STR(name='msc-s-EventList', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MSC-S-EventList')), opt=True)
    _TracePropagationList_mgw_TraceDepth = ENUM(name='mgw-TraceDepth', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepth')), opt=True)
    _TracePropagationList_mgw_InterfaceList = BIT_STR(name='mgw-InterfaceList', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MGW-InterfaceList')), opt=True)
    _TracePropagationList_mgw_EventList = BIT_STR(name='mgw-EventList', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'MGW-EventList')), opt=True)
    _TracePropagationList_rnc_TraceDepthExtension = ENUM(name='rnc-TraceDepthExtension', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TracePropagationList_msc_s_TraceDepthExtension = ENUM(name='msc-s-TraceDepthExtension', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    _TracePropagationList_mgw_TraceDepthExtension = ENUM(name='mgw-TraceDepthExtension', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceDepthExtension')), opt=True)
    TracePropagationList._cont = ASN1Dict([
        ('traceReference', _TracePropagationList_traceReference),
        ('traceType', _TracePropagationList_traceType),
        ('traceReference2', _TracePropagationList_traceReference2),
        ('traceRecordingSessionReference', _TracePropagationList_traceRecordingSessionReference),
        ('rnc-TraceDepth', _TracePropagationList_rnc_TraceDepth),
        ('rnc-InterfaceList', _TracePropagationList_rnc_InterfaceList),
        ('msc-s-TraceDepth', _TracePropagationList_msc_s_TraceDepth),
        ('msc-s-InterfaceList', _TracePropagationList_msc_s_InterfaceList),
        ('msc-s-EventList', _TracePropagationList_msc_s_EventList),
        ('mgw-TraceDepth', _TracePropagationList_mgw_TraceDepth),
        ('mgw-InterfaceList', _TracePropagationList_mgw_InterfaceList),
        ('mgw-EventList', _TracePropagationList_mgw_EventList),
        ('rnc-TraceDepthExtension', _TracePropagationList_rnc_TraceDepthExtension),
        ('msc-s-TraceDepthExtension', _TracePropagationList_msc_s_TraceDepthExtension),
        ('mgw-TraceDepthExtension', _TracePropagationList_mgw_TraceDepthExtension),
        ])
    TracePropagationList._ext = ['rnc-TraceDepthExtension', 'msc-s-TraceDepthExtension', 'mgw-TraceDepthExtension']
    
    #-----< ActivateTraceModeRes >-----#
    ActivateTraceModeRes = SEQ(name='ActivateTraceModeRes', mode=MODE_TYPE)
    _ActivateTraceModeRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ActivateTraceModeRes_traceSupportIndicator = NULL(name='traceSupportIndicator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ActivateTraceModeRes._cont = ASN1Dict([
        ('extensionContainer', _ActivateTraceModeRes_extensionContainer),
        ('traceSupportIndicator', _ActivateTraceModeRes_traceSupportIndicator),
        ])
    ActivateTraceModeRes._ext = ['traceSupportIndicator']
    
    #-----< DeactivateTraceModeArg >-----#
    DeactivateTraceModeArg = SEQ(name='DeactivateTraceModeArg', mode=MODE_TYPE)
    _DeactivateTraceModeArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _DeactivateTraceModeArg_traceReference = OCT_STR(name='traceReference', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceReference')))
    _DeactivateTraceModeArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _DeactivateTraceModeArg_traceReference2 = OCT_STR(name='traceReference2', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-OM-DataTypes', 'TraceReference2')), opt=True)
    DeactivateTraceModeArg._cont = ASN1Dict([
        ('imsi', _DeactivateTraceModeArg_imsi),
        ('traceReference', _DeactivateTraceModeArg_traceReference),
        ('extensionContainer', _DeactivateTraceModeArg_extensionContainer),
        ('traceReference2', _DeactivateTraceModeArg_traceReference2),
        ])
    DeactivateTraceModeArg._ext = ['traceReference2']
    
    #-----< DeactivateTraceModeRes >-----#
    DeactivateTraceModeRes = SEQ(name='DeactivateTraceModeRes', mode=MODE_TYPE)
    _DeactivateTraceModeRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    DeactivateTraceModeRes._cont = ASN1Dict([
        ('extensionContainer', _DeactivateTraceModeRes_extensionContainer),
        ])
    DeactivateTraceModeRes._ext = []
    
    _all_ = [
        _ActivateTraceModeArg_imsi,
        _ActivateTraceModeArg_traceReference,
        _ActivateTraceModeArg_traceType,
        _ActivateTraceModeArg_omc_Id,
        _ActivateTraceModeArg_extensionContainer,
        _ActivateTraceModeArg_traceReference2,
        _ActivateTraceModeArg_traceDepthList,
        _ActivateTraceModeArg_traceNE_TypeList,
        _ActivateTraceModeArg_traceInterfaceList,
        _ActivateTraceModeArg_traceEventList,
        _ActivateTraceModeArg_traceCollectionEntity,
        _ActivateTraceModeArg_mdt_Configuration,
        ActivateTraceModeArg,
        _MDT_Configuration_jobType,
        _MDT_Configuration_areaScope,
        _MDT_Configuration_listOfMeasurements,
        _MDT_Configuration_reportingTrigger,
        _MDT_Configuration_reportInterval,
        _MDT_Configuration_reportAmount,
        _MDT_Configuration_eventThresholdRSRP,
        _MDT_Configuration_eventThresholdRSRQ,
        _MDT_Configuration_loggingInterval,
        _MDT_Configuration_loggingDuration,
        _MDT_Configuration_extensionContainer,
        _MDT_Configuration_measurementPeriodUMTS,
        _MDT_Configuration_measurementPeriodLTE,
        _MDT_Configuration_collectionPeriodRRM_UMTS,
        _MDT_Configuration_collectionPeriodRRM_LTE,
        _MDT_Configuration_positioningMethod,
        _MDT_Configuration_measurementQuantity,
        _MDT_Configuration_eventThreshold1F,
        _MDT_Configuration_eventThreshold1I,
        _MDT_Configuration_mdt_Allowed_PLMN_List,
        MDT_Configuration,
        _MDT_Allowed_PLMNId_List__item_,
        MDT_Allowed_PLMNId_List,
        PeriodUMTS,
        PeriodLTE,
        PositioningMethod,
        MeasurementQuantity,
        EventThreshold1F,
        EventThreshold1I,
        JobType,
        _AreaScope_cgi_List,
        _AreaScope_e_utran_cgi_List,
        _AreaScope_routingAreaId_List,
        _AreaScope_locationAreaId_List,
        _AreaScope_trackingAreaId_List,
        _AreaScope_extensionContainer,
        AreaScope,
        _CGI_List__item_,
        CGI_List,
        _E_UTRAN_CGI_List__item_,
        E_UTRAN_CGI_List,
        _RoutingAreaId_List__item_,
        RoutingAreaId_List,
        _LocationAreaId_List__item_,
        LocationAreaId_List,
        _TrackingAreaId_List__item_,
        TrackingAreaId_List,
        ListOfMeasurements,
        ReportingTrigger,
        ReportInterval,
        ReportAmount,
        EventThresholdRSRP,
        EventThresholdRSRQ,
        LoggingInterval,
        LoggingDuration,
        TraceReference,
        TraceReference2,
        TraceRecordingSessionReference,
        TraceType,
        _TraceDepthList_msc_s_TraceDepth,
        _TraceDepthList_mgw_TraceDepth,
        _TraceDepthList_sgsn_TraceDepth,
        _TraceDepthList_ggsn_TraceDepth,
        _TraceDepthList_rnc_TraceDepth,
        _TraceDepthList_bmsc_TraceDepth,
        _TraceDepthList_mme_TraceDepth,
        _TraceDepthList_sgw_TraceDepth,
        _TraceDepthList_pgw_TraceDepth,
        _TraceDepthList_eNB_TraceDepth,
        _TraceDepthList_msc_s_TraceDepthExtension,
        _TraceDepthList_mgw_TraceDepthExtension,
        _TraceDepthList_sgsn_TraceDepthExtension,
        _TraceDepthList_ggsn_TraceDepthExtension,
        _TraceDepthList_rnc_TraceDepthExtension,
        _TraceDepthList_bmsc_TraceDepthExtension,
        _TraceDepthList_mme_TraceDepthExtension,
        _TraceDepthList_sgw_TraceDepthExtension,
        _TraceDepthList_pgw_TraceDepthExtension,
        _TraceDepthList_eNB_TraceDepthExtension,
        TraceDepthList,
        TraceDepth,
        TraceDepthExtension,
        TraceNE_TypeList,
        _TraceInterfaceList_msc_s_List,
        _TraceInterfaceList_mgw_List,
        _TraceInterfaceList_sgsn_List,
        _TraceInterfaceList_ggsn_List,
        _TraceInterfaceList_rnc_List,
        _TraceInterfaceList_bmsc_List,
        _TraceInterfaceList_mme_List,
        _TraceInterfaceList_sgw_List,
        _TraceInterfaceList_pgw_List,
        _TraceInterfaceList_eNB_List,
        TraceInterfaceList,
        MSC_S_InterfaceList,
        MGW_InterfaceList,
        SGSN_InterfaceList,
        GGSN_InterfaceList,
        RNC_InterfaceList,
        BMSC_InterfaceList,
        MME_InterfaceList,
        SGW_InterfaceList,
        PGW_InterfaceList,
        ENB_InterfaceList,
        _TraceEventList_msc_s_List,
        _TraceEventList_mgw_List,
        _TraceEventList_sgsn_List,
        _TraceEventList_ggsn_List,
        _TraceEventList_bmsc_List,
        _TraceEventList_mme_List,
        _TraceEventList_sgw_List,
        _TraceEventList_pgw_List,
        TraceEventList,
        MSC_S_EventList,
        MGW_EventList,
        SGSN_EventList,
        GGSN_EventList,
        BMSC_EventList,
        MME_EventList,
        SGW_EventList,
        PGW_EventList,
        _TracePropagationList_traceReference,
        _TracePropagationList_traceType,
        _TracePropagationList_traceReference2,
        _TracePropagationList_traceRecordingSessionReference,
        _TracePropagationList_rnc_TraceDepth,
        _TracePropagationList_rnc_InterfaceList,
        _TracePropagationList_msc_s_TraceDepth,
        _TracePropagationList_msc_s_InterfaceList,
        _TracePropagationList_msc_s_EventList,
        _TracePropagationList_mgw_TraceDepth,
        _TracePropagationList_mgw_InterfaceList,
        _TracePropagationList_mgw_EventList,
        _TracePropagationList_rnc_TraceDepthExtension,
        _TracePropagationList_msc_s_TraceDepthExtension,
        _TracePropagationList_mgw_TraceDepthExtension,
        TracePropagationList,
        _ActivateTraceModeRes_extensionContainer,
        _ActivateTraceModeRes_traceSupportIndicator,
        ActivateTraceModeRes,
        _DeactivateTraceModeArg_imsi,
        _DeactivateTraceModeArg_traceReference,
        _DeactivateTraceModeArg_extensionContainer,
        _DeactivateTraceModeArg_traceReference2,
        DeactivateTraceModeArg,
        _DeactivateTraceModeRes_extensionContainer,
        DeactivateTraceModeRes,
    ]

class MAP_SM_DataTypes:

    _name_  = 'MAP-SM-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 16, 16]
    
    _obj_ = [
        'RoutingInfoForSM-Arg',
        'SM-DeliveryNotIntended',
        'SM-RP-MTI',
        'SM-RP-SMEA',
        'RoutingInfoForSM-Res',
        'IP-SM-GW-Guidance',
        'LocationInfoWithLMSI',
        'Additional-Number',
        'MO-ForwardSM-Arg',
        'MO-ForwardSM-Res',
        'MT-ForwardSM-Arg',
        'CorrelationID',
        'SIP-URI',
        'MT-ForwardSM-Res',
        'SM-RP-DA',
        'SM-RP-OA',
        'SM-DeliveryTimerValue',
        'ReportSM-DeliveryStatusArg',
        'SM-DeliveryOutcome',
        'ReportSM-DeliveryStatusRes',
        'AlertServiceCentreArg',
        'SmsGmsc-Alert-Event',
        'InformServiceCentreArg',
        'MW-Status',
        'ReadyForSM-Arg',
        'ReadyForSM-Res',
        'AlertReason',
        'MT-ForwardSM-VGCS-Arg',
        'MT-ForwardSM-VGCS-Res',
        'DispatcherList',
        'maxNumOfDispatchers',
        'AdditionalDispatcherList',
        'maxNumOfAdditionalDispatchers',
        ]
    _type_ = [
        'RoutingInfoForSM-Arg',
        'SM-DeliveryNotIntended',
        'SM-RP-MTI',
        'SM-RP-SMEA',
        'RoutingInfoForSM-Res',
        'IP-SM-GW-Guidance',
        'LocationInfoWithLMSI',
        'Additional-Number',
        'MO-ForwardSM-Arg',
        'MO-ForwardSM-Res',
        'MT-ForwardSM-Arg',
        'CorrelationID',
        'SIP-URI',
        'MT-ForwardSM-Res',
        'SM-RP-DA',
        'SM-RP-OA',
        'SM-DeliveryTimerValue',
        'ReportSM-DeliveryStatusArg',
        'SM-DeliveryOutcome',
        'ReportSM-DeliveryStatusRes',
        'AlertServiceCentreArg',
        'SmsGmsc-Alert-Event',
        'InformServiceCentreArg',
        'MW-Status',
        'ReadyForSM-Arg',
        'ReadyForSM-Res',
        'AlertReason',
        'MT-ForwardSM-VGCS-Arg',
        'MT-ForwardSM-VGCS-Res',
        'DispatcherList',
        'AdditionalDispatcherList',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxNumOfDispatchers',
        'maxNumOfAdditionalDispatchers',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< RoutingInfoForSM-Arg >-----#
    RoutingInfoForSM_Arg = SEQ(name='RoutingInfoForSM-Arg', mode=MODE_TYPE)
    _RoutingInfoForSM_Arg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _RoutingInfoForSM_Arg_sm_RP_PRI = BOOL(name='sm-RP-PRI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RoutingInfoForSM_Arg_serviceCentreAddress = OCT_STR(name='serviceCentreAddress', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')))
    _RoutingInfoForSM_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _RoutingInfoForSM_Arg_gprsSupportIndicator = NULL(name='gprsSupportIndicator', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RoutingInfoForSM_Arg_sm_RP_MTI = INT(name='sm-RP-MTI', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-RP-MTI')), opt=True)
    _RoutingInfoForSM_Arg_sm_RP_SMEA = OCT_STR(name='sm-RP-SMEA', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-RP-SMEA')), opt=True)
    _RoutingInfoForSM_Arg_sm_deliveryNotIntended = ENUM(name='sm-deliveryNotIntended', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-DeliveryNotIntended')), opt=True)
    _RoutingInfoForSM_Arg_ip_sm_gwGuidanceIndicator = NULL(name='ip-sm-gwGuidanceIndicator', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RoutingInfoForSM_Arg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _RoutingInfoForSM_Arg_t4_Trigger_Indicator = NULL(name='t4-Trigger-Indicator', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RoutingInfoForSM_Arg_singleAttemptDelivery = NULL(name='singleAttemptDelivery', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RoutingInfoForSM_Arg_correlationID = SEQ(name='correlationID', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'CorrelationID')), opt=True)
    RoutingInfoForSM_Arg._cont = ASN1Dict([
        ('msisdn', _RoutingInfoForSM_Arg_msisdn),
        ('sm-RP-PRI', _RoutingInfoForSM_Arg_sm_RP_PRI),
        ('serviceCentreAddress', _RoutingInfoForSM_Arg_serviceCentreAddress),
        ('extensionContainer', _RoutingInfoForSM_Arg_extensionContainer),
        ('gprsSupportIndicator', _RoutingInfoForSM_Arg_gprsSupportIndicator),
        ('sm-RP-MTI', _RoutingInfoForSM_Arg_sm_RP_MTI),
        ('sm-RP-SMEA', _RoutingInfoForSM_Arg_sm_RP_SMEA),
        ('sm-deliveryNotIntended', _RoutingInfoForSM_Arg_sm_deliveryNotIntended),
        ('ip-sm-gwGuidanceIndicator', _RoutingInfoForSM_Arg_ip_sm_gwGuidanceIndicator),
        ('imsi', _RoutingInfoForSM_Arg_imsi),
        ('t4-Trigger-Indicator', _RoutingInfoForSM_Arg_t4_Trigger_Indicator),
        ('singleAttemptDelivery', _RoutingInfoForSM_Arg_singleAttemptDelivery),
        ('correlationID', _RoutingInfoForSM_Arg_correlationID),
        ])
    RoutingInfoForSM_Arg._ext = ['gprsSupportIndicator', 'sm-RP-MTI', 'sm-RP-SMEA', 'sm-deliveryNotIntended', 'ip-sm-gwGuidanceIndicator', 'imsi', 't4-Trigger-Indicator', 'singleAttemptDelivery', 'correlationID']
    
    #-----< SM-DeliveryNotIntended >-----#
    SM_DeliveryNotIntended = ENUM(name='SM-DeliveryNotIntended', mode=MODE_TYPE)
    SM_DeliveryNotIntended._cont = ASN1Dict([('onlyIMSI-requested', 0), ('onlyMCC-MNC-requested', 1)])
    SM_DeliveryNotIntended._ext = []
    
    #-----< SM-RP-MTI >-----#
    SM_RP_MTI = INT(name='SM-RP-MTI', mode=MODE_TYPE)
    SM_RP_MTI._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=10)], ev=None, er=[])
    
    #-----< SM-RP-SMEA >-----#
    SM_RP_SMEA = OCT_STR(name='SM-RP-SMEA', mode=MODE_TYPE)
    SM_RP_SMEA._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=12)], ev=None, er=[])
    
    #-----< RoutingInfoForSM-Res >-----#
    RoutingInfoForSM_Res = SEQ(name='RoutingInfoForSM-Res', mode=MODE_TYPE)
    _RoutingInfoForSM_Res_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _RoutingInfoForSM_Res_locationInfoWithLMSI = SEQ(name='locationInfoWithLMSI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'LocationInfoWithLMSI')))
    _RoutingInfoForSM_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _RoutingInfoForSM_Res_ip_sm_gwGuidance = SEQ(name='ip-sm-gwGuidance', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'IP-SM-GW-Guidance')), opt=True)
    RoutingInfoForSM_Res._cont = ASN1Dict([
        ('imsi', _RoutingInfoForSM_Res_imsi),
        ('locationInfoWithLMSI', _RoutingInfoForSM_Res_locationInfoWithLMSI),
        ('extensionContainer', _RoutingInfoForSM_Res_extensionContainer),
        ('ip-sm-gwGuidance', _RoutingInfoForSM_Res_ip_sm_gwGuidance),
        ])
    RoutingInfoForSM_Res._ext = ['ip-sm-gwGuidance']
    
    #-----< IP-SM-GW-Guidance >-----#
    IP_SM_GW_Guidance = SEQ(name='IP-SM-GW-Guidance', mode=MODE_TYPE)
    _IP_SM_GW_Guidance_minimumDeliveryTimeValue = INT(name='minimumDeliveryTimeValue', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-DeliveryTimerValue')))
    _IP_SM_GW_Guidance_recommendedDeliveryTimeValue = INT(name='recommendedDeliveryTimeValue', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-DeliveryTimerValue')))
    _IP_SM_GW_Guidance_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    IP_SM_GW_Guidance._cont = ASN1Dict([
        ('minimumDeliveryTimeValue', _IP_SM_GW_Guidance_minimumDeliveryTimeValue),
        ('recommendedDeliveryTimeValue', _IP_SM_GW_Guidance_recommendedDeliveryTimeValue),
        ('extensionContainer', _IP_SM_GW_Guidance_extensionContainer),
        ])
    IP_SM_GW_Guidance._ext = []
    
    #-----< LocationInfoWithLMSI >-----#
    LocationInfoWithLMSI = SEQ(name='LocationInfoWithLMSI', mode=MODE_TYPE)
    _LocationInfoWithLMSI_networkNode_Number = OCT_STR(name='networkNode-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _LocationInfoWithLMSI_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')), opt=True)
    _LocationInfoWithLMSI_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _LocationInfoWithLMSI_gprsNodeIndicator = NULL(name='gprsNodeIndicator', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LocationInfoWithLMSI_additional_Number = CHOICE(name='additional-Number', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'Additional-Number')), opt=True)
    _LocationInfoWithLMSI_networkNodeDiameterAddress = SEQ(name='networkNodeDiameterAddress', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    _LocationInfoWithLMSI_additionalNetworkNodeDiameterAddress = SEQ(name='additionalNetworkNodeDiameterAddress', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    _LocationInfoWithLMSI_thirdNumber = CHOICE(name='thirdNumber', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'Additional-Number')), opt=True)
    _LocationInfoWithLMSI_thirdNetworkNodeDiameterAddress = SEQ(name='thirdNetworkNodeDiameterAddress', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    _LocationInfoWithLMSI_imsNodeIndicator = NULL(name='imsNodeIndicator', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    LocationInfoWithLMSI._cont = ASN1Dict([
        ('networkNode-Number', _LocationInfoWithLMSI_networkNode_Number),
        ('lmsi', _LocationInfoWithLMSI_lmsi),
        ('extensionContainer', _LocationInfoWithLMSI_extensionContainer),
        ('gprsNodeIndicator', _LocationInfoWithLMSI_gprsNodeIndicator),
        ('additional-Number', _LocationInfoWithLMSI_additional_Number),
        ('networkNodeDiameterAddress', _LocationInfoWithLMSI_networkNodeDiameterAddress),
        ('additionalNetworkNodeDiameterAddress', _LocationInfoWithLMSI_additionalNetworkNodeDiameterAddress),
        ('thirdNumber', _LocationInfoWithLMSI_thirdNumber),
        ('thirdNetworkNodeDiameterAddress', _LocationInfoWithLMSI_thirdNetworkNodeDiameterAddress),
        ('imsNodeIndicator', _LocationInfoWithLMSI_imsNodeIndicator),
        ])
    LocationInfoWithLMSI._ext = ['gprsNodeIndicator', 'additional-Number', 'networkNodeDiameterAddress', 'additionalNetworkNodeDiameterAddress', 'thirdNumber', 'thirdNetworkNodeDiameterAddress', 'imsNodeIndicator']
    
    #-----< Additional-Number >-----#
    Additional_Number = CHOICE(name='Additional-Number', mode=MODE_TYPE)
    _Additional_Number_msc_Number = OCT_STR(name='msc-Number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _Additional_Number_sgsn_Number = OCT_STR(name='sgsn-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    Additional_Number._cont = ASN1Dict([
        ('msc-Number', _Additional_Number_msc_Number),
        ('sgsn-Number', _Additional_Number_sgsn_Number),
        ])
    Additional_Number._ext = None
    
    #-----< MO-ForwardSM-Arg >-----#
    MO_ForwardSM_Arg = SEQ(name='MO-ForwardSM-Arg', mode=MODE_TYPE)
    _MO_ForwardSM_Arg_sm_RP_DA = CHOICE(name='sm-RP-DA', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-RP-DA')))
    _MO_ForwardSM_Arg_sm_RP_OA = CHOICE(name='sm-RP-OA', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-RP-OA')))
    _MO_ForwardSM_Arg_sm_RP_UI = OCT_STR(name='sm-RP-UI', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')))
    _MO_ForwardSM_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _MO_ForwardSM_Arg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _MO_ForwardSM_Arg_correlationID = SEQ(name='correlationID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'CorrelationID')), opt=True)
    _MO_ForwardSM_Arg_sm_DeliveryOutcome = ENUM(name='sm-DeliveryOutcome', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-DeliveryOutcome')), opt=True)
    MO_ForwardSM_Arg._cont = ASN1Dict([
        ('sm-RP-DA', _MO_ForwardSM_Arg_sm_RP_DA),
        ('sm-RP-OA', _MO_ForwardSM_Arg_sm_RP_OA),
        ('sm-RP-UI', _MO_ForwardSM_Arg_sm_RP_UI),
        ('extensionContainer', _MO_ForwardSM_Arg_extensionContainer),
        ('imsi', _MO_ForwardSM_Arg_imsi),
        ('correlationID', _MO_ForwardSM_Arg_correlationID),
        ('sm-DeliveryOutcome', _MO_ForwardSM_Arg_sm_DeliveryOutcome),
        ])
    MO_ForwardSM_Arg._ext = ['imsi', 'correlationID', 'sm-DeliveryOutcome']
    
    #-----< MO-ForwardSM-Res >-----#
    MO_ForwardSM_Res = SEQ(name='MO-ForwardSM-Res', mode=MODE_TYPE)
    _MO_ForwardSM_Res_sm_RP_UI = OCT_STR(name='sm-RP-UI', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')), opt=True)
    _MO_ForwardSM_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MO_ForwardSM_Res._cont = ASN1Dict([
        ('sm-RP-UI', _MO_ForwardSM_Res_sm_RP_UI),
        ('extensionContainer', _MO_ForwardSM_Res_extensionContainer),
        ])
    MO_ForwardSM_Res._ext = []
    
    #-----< MT-ForwardSM-Arg >-----#
    MT_ForwardSM_Arg = SEQ(name='MT-ForwardSM-Arg', mode=MODE_TYPE)
    _MT_ForwardSM_Arg_sm_RP_DA = CHOICE(name='sm-RP-DA', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-RP-DA')))
    _MT_ForwardSM_Arg_sm_RP_OA = CHOICE(name='sm-RP-OA', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-RP-OA')))
    _MT_ForwardSM_Arg_sm_RP_UI = OCT_STR(name='sm-RP-UI', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')))
    _MT_ForwardSM_Arg_moreMessagesToSend = NULL(name='moreMessagesToSend', mode=MODE_TYPE, opt=True)
    _MT_ForwardSM_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _MT_ForwardSM_Arg_smDeliveryTimer = INT(name='smDeliveryTimer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-DeliveryTimerValue')), opt=True)
    _MT_ForwardSM_Arg_smDeliveryStartTime = OCT_STR(name='smDeliveryStartTime', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Time')), opt=True)
    _MT_ForwardSM_Arg_smsOverIP_OnlyIndicator = NULL(name='smsOverIP-OnlyIndicator', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MT_ForwardSM_Arg_correlationID = SEQ(name='correlationID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'CorrelationID')), opt=True)
    _MT_ForwardSM_Arg_maximumRetransmissionTime = OCT_STR(name='maximumRetransmissionTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Time')), opt=True)
    _MT_ForwardSM_Arg_smsGmscAddress = OCT_STR(name='smsGmscAddress', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _MT_ForwardSM_Arg_smsGmscDiameterAddress = SEQ(name='smsGmscDiameterAddress', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    MT_ForwardSM_Arg._cont = ASN1Dict([
        ('sm-RP-DA', _MT_ForwardSM_Arg_sm_RP_DA),
        ('sm-RP-OA', _MT_ForwardSM_Arg_sm_RP_OA),
        ('sm-RP-UI', _MT_ForwardSM_Arg_sm_RP_UI),
        ('moreMessagesToSend', _MT_ForwardSM_Arg_moreMessagesToSend),
        ('extensionContainer', _MT_ForwardSM_Arg_extensionContainer),
        ('smDeliveryTimer', _MT_ForwardSM_Arg_smDeliveryTimer),
        ('smDeliveryStartTime', _MT_ForwardSM_Arg_smDeliveryStartTime),
        ('smsOverIP-OnlyIndicator', _MT_ForwardSM_Arg_smsOverIP_OnlyIndicator),
        ('correlationID', _MT_ForwardSM_Arg_correlationID),
        ('maximumRetransmissionTime', _MT_ForwardSM_Arg_maximumRetransmissionTime),
        ('smsGmscAddress', _MT_ForwardSM_Arg_smsGmscAddress),
        ('smsGmscDiameterAddress', _MT_ForwardSM_Arg_smsGmscDiameterAddress),
        ])
    MT_ForwardSM_Arg._ext = ['smDeliveryTimer', 'smDeliveryStartTime', 'smsOverIP-OnlyIndicator', 'correlationID', 'maximumRetransmissionTime', 'smsGmscAddress', 'smsGmscDiameterAddress']
    
    #-----< CorrelationID >-----#
    CorrelationID = SEQ(name='CorrelationID', mode=MODE_TYPE)
    _CorrelationID_hlr_id = OCT_STR(name='hlr-id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'HLR-Id')), opt=True)
    _CorrelationID_sip_uri_A = OCT_STR(name='sip-uri-A', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SIP-URI')), opt=True)
    _CorrelationID_sip_uri_B = OCT_STR(name='sip-uri-B', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SIP-URI')))
    CorrelationID._cont = ASN1Dict([
        ('hlr-id', _CorrelationID_hlr_id),
        ('sip-uri-A', _CorrelationID_sip_uri_A),
        ('sip-uri-B', _CorrelationID_sip_uri_B),
        ])
    CorrelationID._ext = None
    
    #-----< SIP-URI >-----#
    SIP_URI = OCT_STR(name='SIP-URI', mode=MODE_TYPE)
    
    #-----< MT-ForwardSM-Res >-----#
    MT_ForwardSM_Res = SEQ(name='MT-ForwardSM-Res', mode=MODE_TYPE)
    _MT_ForwardSM_Res_sm_RP_UI = OCT_STR(name='sm-RP-UI', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')), opt=True)
    _MT_ForwardSM_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MT_ForwardSM_Res._cont = ASN1Dict([
        ('sm-RP-UI', _MT_ForwardSM_Res_sm_RP_UI),
        ('extensionContainer', _MT_ForwardSM_Res_extensionContainer),
        ])
    MT_ForwardSM_Res._ext = []
    
    #-----< SM-RP-DA >-----#
    SM_RP_DA = CHOICE(name='SM-RP-DA', mode=MODE_TYPE)
    _SM_RP_DA_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _SM_RP_DA_lmsi = OCT_STR(name='lmsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'LMSI')))
    _SM_RP_DA_serviceCentreAddressDA = OCT_STR(name='serviceCentreAddressDA', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')))
    _SM_RP_DA_noSM_RP_DA = NULL(name='noSM-RP-DA', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SM_RP_DA._cont = ASN1Dict([
        ('imsi', _SM_RP_DA_imsi),
        ('lmsi', _SM_RP_DA_lmsi),
        ('serviceCentreAddressDA', _SM_RP_DA_serviceCentreAddressDA),
        ('noSM-RP-DA', _SM_RP_DA_noSM_RP_DA),
        ])
    SM_RP_DA._ext = None
    
    #-----< SM-RP-OA >-----#
    SM_RP_OA = CHOICE(name='SM-RP-OA', mode=MODE_TYPE)
    _SM_RP_OA_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _SM_RP_OA_serviceCentreAddressOA = OCT_STR(name='serviceCentreAddressOA', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')))
    _SM_RP_OA_noSM_RP_OA = NULL(name='noSM-RP-OA', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SM_RP_OA._cont = ASN1Dict([
        ('msisdn', _SM_RP_OA_msisdn),
        ('serviceCentreAddressOA', _SM_RP_OA_serviceCentreAddressOA),
        ('noSM-RP-OA', _SM_RP_OA_noSM_RP_OA),
        ])
    SM_RP_OA._ext = None
    
    #-----< SM-DeliveryTimerValue >-----#
    SM_DeliveryTimerValue = INT(name='SM-DeliveryTimerValue', mode=MODE_TYPE)
    SM_DeliveryTimerValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=30, ub=600)], ev=None, er=[])
    
    #-----< ReportSM-DeliveryStatusArg >-----#
    ReportSM_DeliveryStatusArg = SEQ(name='ReportSM-DeliveryStatusArg', mode=MODE_TYPE)
    _ReportSM_DeliveryStatusArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _ReportSM_DeliveryStatusArg_serviceCentreAddress = OCT_STR(name='serviceCentreAddress', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')))
    _ReportSM_DeliveryStatusArg_sm_DeliveryOutcome = ENUM(name='sm-DeliveryOutcome', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-DeliveryOutcome')))
    _ReportSM_DeliveryStatusArg_absentSubscriberDiagnosticSM = INT(name='absentSubscriberDiagnosticSM', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    _ReportSM_DeliveryStatusArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ReportSM_DeliveryStatusArg_gprsSupportIndicator = NULL(name='gprsSupportIndicator', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ReportSM_DeliveryStatusArg_deliveryOutcomeIndicator = NULL(name='deliveryOutcomeIndicator', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ReportSM_DeliveryStatusArg_additionalSM_DeliveryOutcome = ENUM(name='additionalSM-DeliveryOutcome', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-DeliveryOutcome')), opt=True)
    _ReportSM_DeliveryStatusArg_additionalAbsentSubscriberDiagnosticSM = INT(name='additionalAbsentSubscriberDiagnosticSM', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    _ReportSM_DeliveryStatusArg_ip_sm_gw_Indicator = NULL(name='ip-sm-gw-Indicator', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ReportSM_DeliveryStatusArg_ip_sm_gw_sm_deliveryOutcome = ENUM(name='ip-sm-gw-sm-deliveryOutcome', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-DeliveryOutcome')), opt=True)
    _ReportSM_DeliveryStatusArg_ip_sm_gw_absentSubscriberDiagnosticSM = INT(name='ip-sm-gw-absentSubscriberDiagnosticSM', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    _ReportSM_DeliveryStatusArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _ReportSM_DeliveryStatusArg_singleAttemptDelivery = NULL(name='singleAttemptDelivery', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ReportSM_DeliveryStatusArg_correlationID = SEQ(name='correlationID', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'CorrelationID')), opt=True)
    ReportSM_DeliveryStatusArg._cont = ASN1Dict([
        ('msisdn', _ReportSM_DeliveryStatusArg_msisdn),
        ('serviceCentreAddress', _ReportSM_DeliveryStatusArg_serviceCentreAddress),
        ('sm-DeliveryOutcome', _ReportSM_DeliveryStatusArg_sm_DeliveryOutcome),
        ('absentSubscriberDiagnosticSM', _ReportSM_DeliveryStatusArg_absentSubscriberDiagnosticSM),
        ('extensionContainer', _ReportSM_DeliveryStatusArg_extensionContainer),
        ('gprsSupportIndicator', _ReportSM_DeliveryStatusArg_gprsSupportIndicator),
        ('deliveryOutcomeIndicator', _ReportSM_DeliveryStatusArg_deliveryOutcomeIndicator),
        ('additionalSM-DeliveryOutcome', _ReportSM_DeliveryStatusArg_additionalSM_DeliveryOutcome),
        ('additionalAbsentSubscriberDiagnosticSM', _ReportSM_DeliveryStatusArg_additionalAbsentSubscriberDiagnosticSM),
        ('ip-sm-gw-Indicator', _ReportSM_DeliveryStatusArg_ip_sm_gw_Indicator),
        ('ip-sm-gw-sm-deliveryOutcome', _ReportSM_DeliveryStatusArg_ip_sm_gw_sm_deliveryOutcome),
        ('ip-sm-gw-absentSubscriberDiagnosticSM', _ReportSM_DeliveryStatusArg_ip_sm_gw_absentSubscriberDiagnosticSM),
        ('imsi', _ReportSM_DeliveryStatusArg_imsi),
        ('singleAttemptDelivery', _ReportSM_DeliveryStatusArg_singleAttemptDelivery),
        ('correlationID', _ReportSM_DeliveryStatusArg_correlationID),
        ])
    ReportSM_DeliveryStatusArg._ext = ['gprsSupportIndicator', 'deliveryOutcomeIndicator', 'additionalSM-DeliveryOutcome', 'additionalAbsentSubscriberDiagnosticSM', 'ip-sm-gw-Indicator', 'ip-sm-gw-sm-deliveryOutcome', 'ip-sm-gw-absentSubscriberDiagnosticSM', 'imsi', 'singleAttemptDelivery', 'correlationID']
    
    #-----< SM-DeliveryOutcome >-----#
    SM_DeliveryOutcome = ENUM(name='SM-DeliveryOutcome', mode=MODE_TYPE)
    SM_DeliveryOutcome._cont = ASN1Dict([('memoryCapacityExceeded', 0), ('absentSubscriber', 1), ('successfulTransfer', 2)])
    SM_DeliveryOutcome._ext = None
    
    #-----< ReportSM-DeliveryStatusRes >-----#
    ReportSM_DeliveryStatusRes = SEQ(name='ReportSM-DeliveryStatusRes', mode=MODE_TYPE)
    _ReportSM_DeliveryStatusRes_storedMSISDN = OCT_STR(name='storedMSISDN', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _ReportSM_DeliveryStatusRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ReportSM_DeliveryStatusRes._cont = ASN1Dict([
        ('storedMSISDN', _ReportSM_DeliveryStatusRes_storedMSISDN),
        ('extensionContainer', _ReportSM_DeliveryStatusRes_extensionContainer),
        ])
    ReportSM_DeliveryStatusRes._ext = []
    
    #-----< AlertServiceCentreArg >-----#
    AlertServiceCentreArg = SEQ(name='AlertServiceCentreArg', mode=MODE_TYPE)
    _AlertServiceCentreArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _AlertServiceCentreArg_serviceCentreAddress = OCT_STR(name='serviceCentreAddress', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')))
    _AlertServiceCentreArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')), opt=True)
    _AlertServiceCentreArg_correlationID = SEQ(name='correlationID', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'CorrelationID')), opt=True)
    _AlertServiceCentreArg_maximumUeAvailabilityTime = OCT_STR(name='maximumUeAvailabilityTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'Time')), opt=True)
    _AlertServiceCentreArg_smsGmscAlertEvent = ENUM(name='smsGmscAlertEvent', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'SmsGmsc-Alert-Event')), opt=True)
    _AlertServiceCentreArg_smsGmscDiameterAddress = SEQ(name='smsGmscDiameterAddress', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    _AlertServiceCentreArg_newSGSNNumber = OCT_STR(name='newSGSNNumber', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _AlertServiceCentreArg_newSGSNDiameterAddress = SEQ(name='newSGSNDiameterAddress', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    _AlertServiceCentreArg_newMMENumber = OCT_STR(name='newMMENumber', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _AlertServiceCentreArg_newMMEDiameterAddress = SEQ(name='newMMEDiameterAddress', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'NetworkNodeDiameterAddress')), opt=True)
    AlertServiceCentreArg._cont = ASN1Dict([
        ('msisdn', _AlertServiceCentreArg_msisdn),
        ('serviceCentreAddress', _AlertServiceCentreArg_serviceCentreAddress),
        ('imsi', _AlertServiceCentreArg_imsi),
        ('correlationID', _AlertServiceCentreArg_correlationID),
        ('maximumUeAvailabilityTime', _AlertServiceCentreArg_maximumUeAvailabilityTime),
        ('smsGmscAlertEvent', _AlertServiceCentreArg_smsGmscAlertEvent),
        ('smsGmscDiameterAddress', _AlertServiceCentreArg_smsGmscDiameterAddress),
        ('newSGSNNumber', _AlertServiceCentreArg_newSGSNNumber),
        ('newSGSNDiameterAddress', _AlertServiceCentreArg_newSGSNDiameterAddress),
        ('newMMENumber', _AlertServiceCentreArg_newMMENumber),
        ('newMMEDiameterAddress', _AlertServiceCentreArg_newMMEDiameterAddress),
        ])
    AlertServiceCentreArg._ext = ['imsi', 'correlationID', 'maximumUeAvailabilityTime', 'smsGmscAlertEvent', 'smsGmscDiameterAddress', 'newSGSNNumber', 'newSGSNDiameterAddress', 'newMMENumber', 'newMMEDiameterAddress']
    
    #-----< SmsGmsc-Alert-Event >-----#
    SmsGmsc_Alert_Event = ENUM(name='SmsGmsc-Alert-Event', mode=MODE_TYPE)
    SmsGmsc_Alert_Event._cont = ASN1Dict([('msAvailableForMtSms', 0), ('msUnderNewServingNode', 1)])
    SmsGmsc_Alert_Event._ext = None
    
    #-----< InformServiceCentreArg >-----#
    InformServiceCentreArg = SEQ(name='InformServiceCentreArg', mode=MODE_TYPE)
    _InformServiceCentreArg_storedMSISDN = OCT_STR(name='storedMSISDN', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _InformServiceCentreArg_mw_Status = BIT_STR(name='mw-Status', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'MW-Status')), opt=True)
    _InformServiceCentreArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _InformServiceCentreArg_absentSubscriberDiagnosticSM = INT(name='absentSubscriberDiagnosticSM', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    _InformServiceCentreArg_additionalAbsentSubscriberDiagnosticSM = INT(name='additionalAbsentSubscriberDiagnosticSM', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ER-DataTypes', 'AbsentSubscriberDiagnosticSM')), opt=True)
    InformServiceCentreArg._cont = ASN1Dict([
        ('storedMSISDN', _InformServiceCentreArg_storedMSISDN),
        ('mw-Status', _InformServiceCentreArg_mw_Status),
        ('extensionContainer', _InformServiceCentreArg_extensionContainer),
        ('absentSubscriberDiagnosticSM', _InformServiceCentreArg_absentSubscriberDiagnosticSM),
        ('additionalAbsentSubscriberDiagnosticSM', _InformServiceCentreArg_additionalAbsentSubscriberDiagnosticSM),
        ])
    InformServiceCentreArg._ext = ['absentSubscriberDiagnosticSM', 'additionalAbsentSubscriberDiagnosticSM']
    
    #-----< MW-Status >-----#
    MW_Status = BIT_STR(name='MW-Status', mode=MODE_TYPE)
    MW_Status._cont = ASN1Dict([('sc-AddressNotIncluded', 0), ('mnrf-Set', 1), ('mcef-Set', 2), ('mnrg-Set', 3)])
    MW_Status._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=6, ub=16)], ev=None, er=[])
    
    #-----< ReadyForSM-Arg >-----#
    ReadyForSM_Arg = SEQ(name='ReadyForSM-Arg', mode=MODE_TYPE)
    _ReadyForSM_Arg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _ReadyForSM_Arg_alertReason = ENUM(name='alertReason', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'AlertReason')))
    _ReadyForSM_Arg_alertReasonIndicator = NULL(name='alertReasonIndicator', mode=MODE_TYPE, opt=True)
    _ReadyForSM_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ReadyForSM_Arg_additionalAlertReasonIndicator = NULL(name='additionalAlertReasonIndicator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ReadyForSM_Arg_maximumUeAvailabilityTime = OCT_STR(name='maximumUeAvailabilityTime', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'Time')), opt=True)
    ReadyForSM_Arg._cont = ASN1Dict([
        ('imsi', _ReadyForSM_Arg_imsi),
        ('alertReason', _ReadyForSM_Arg_alertReason),
        ('alertReasonIndicator', _ReadyForSM_Arg_alertReasonIndicator),
        ('extensionContainer', _ReadyForSM_Arg_extensionContainer),
        ('additionalAlertReasonIndicator', _ReadyForSM_Arg_additionalAlertReasonIndicator),
        ('maximumUeAvailabilityTime', _ReadyForSM_Arg_maximumUeAvailabilityTime),
        ])
    ReadyForSM_Arg._ext = ['additionalAlertReasonIndicator', 'maximumUeAvailabilityTime']
    
    #-----< ReadyForSM-Res >-----#
    ReadyForSM_Res = SEQ(name='ReadyForSM-Res', mode=MODE_TYPE)
    _ReadyForSM_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    ReadyForSM_Res._cont = ASN1Dict([
        ('extensionContainer', _ReadyForSM_Res_extensionContainer),
        ])
    ReadyForSM_Res._ext = []
    
    #-----< AlertReason >-----#
    AlertReason = ENUM(name='AlertReason', mode=MODE_TYPE)
    AlertReason._cont = ASN1Dict([('ms-Present', 0), ('memoryAvailable', 1)])
    AlertReason._ext = None
    
    #-----< MT-ForwardSM-VGCS-Arg >-----#
    MT_ForwardSM_VGCS_Arg = SEQ(name='MT-ForwardSM-VGCS-Arg', mode=MODE_TYPE)
    _MT_ForwardSM_VGCS_Arg_asciCallReference = OCT_STR(name='asciCallReference', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ASCI-CallReference')))
    _MT_ForwardSM_VGCS_Arg_sm_RP_OA = CHOICE(name='sm-RP-OA', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SM-DataTypes', 'SM-RP-OA')))
    _MT_ForwardSM_VGCS_Arg_sm_RP_UI = OCT_STR(name='sm-RP-UI', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')))
    _MT_ForwardSM_VGCS_Arg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    MT_ForwardSM_VGCS_Arg._cont = ASN1Dict([
        ('asciCallReference', _MT_ForwardSM_VGCS_Arg_asciCallReference),
        ('sm-RP-OA', _MT_ForwardSM_VGCS_Arg_sm_RP_OA),
        ('sm-RP-UI', _MT_ForwardSM_VGCS_Arg_sm_RP_UI),
        ('extensionContainer', _MT_ForwardSM_VGCS_Arg_extensionContainer),
        ])
    MT_ForwardSM_VGCS_Arg._ext = []
    
    #-----< MT-ForwardSM-VGCS-Res >-----#
    MT_ForwardSM_VGCS_Res = SEQ(name='MT-ForwardSM-VGCS-Res', mode=MODE_TYPE)
    _MT_ForwardSM_VGCS_Res_sm_RP_UI = OCT_STR(name='sm-RP-UI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'SignalInfo')), opt=True)
    _MT_ForwardSM_VGCS_Res_dispatcherList = SEQ_OF(name='dispatcherList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'DispatcherList')), opt=True)
    _MT_ForwardSM_VGCS_Res_ongoingCall = NULL(name='ongoingCall', mode=MODE_TYPE, opt=True)
    _MT_ForwardSM_VGCS_Res_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _MT_ForwardSM_VGCS_Res_additionalDispatcherList = SEQ_OF(name='additionalDispatcherList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SM-DataTypes', 'AdditionalDispatcherList')), opt=True)
    MT_ForwardSM_VGCS_Res._cont = ASN1Dict([
        ('sm-RP-UI', _MT_ForwardSM_VGCS_Res_sm_RP_UI),
        ('dispatcherList', _MT_ForwardSM_VGCS_Res_dispatcherList),
        ('ongoingCall', _MT_ForwardSM_VGCS_Res_ongoingCall),
        ('extensionContainer', _MT_ForwardSM_VGCS_Res_extensionContainer),
        ('additionalDispatcherList', _MT_ForwardSM_VGCS_Res_additionalDispatcherList),
        ])
    MT_ForwardSM_VGCS_Res._ext = ['additionalDispatcherList']
    
    #-----< DispatcherList >-----#
    DispatcherList = SEQ_OF(name='DispatcherList', mode=MODE_TYPE)
    _DispatcherList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    DispatcherList._cont = _DispatcherList__item_
    DispatcherList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< maxNumOfDispatchers >-----#
    maxNumOfDispatchers = INT(name='maxNumOfDispatchers', mode=MODE_VALUE)
    maxNumOfDispatchers._val = 5
    
    #-----< AdditionalDispatcherList >-----#
    AdditionalDispatcherList = SEQ_OF(name='AdditionalDispatcherList', mode=MODE_TYPE)
    _AdditionalDispatcherList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    AdditionalDispatcherList._cont = _AdditionalDispatcherList__item_
    AdditionalDispatcherList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    
    #-----< maxNumOfAdditionalDispatchers >-----#
    maxNumOfAdditionalDispatchers = INT(name='maxNumOfAdditionalDispatchers', mode=MODE_VALUE)
    maxNumOfAdditionalDispatchers._val = 15
    
    _all_ = [
        _RoutingInfoForSM_Arg_msisdn,
        _RoutingInfoForSM_Arg_sm_RP_PRI,
        _RoutingInfoForSM_Arg_serviceCentreAddress,
        _RoutingInfoForSM_Arg_extensionContainer,
        _RoutingInfoForSM_Arg_gprsSupportIndicator,
        _RoutingInfoForSM_Arg_sm_RP_MTI,
        _RoutingInfoForSM_Arg_sm_RP_SMEA,
        _RoutingInfoForSM_Arg_sm_deliveryNotIntended,
        _RoutingInfoForSM_Arg_ip_sm_gwGuidanceIndicator,
        _RoutingInfoForSM_Arg_imsi,
        _RoutingInfoForSM_Arg_t4_Trigger_Indicator,
        _RoutingInfoForSM_Arg_singleAttemptDelivery,
        _RoutingInfoForSM_Arg_correlationID,
        RoutingInfoForSM_Arg,
        SM_DeliveryNotIntended,
        SM_RP_MTI,
        SM_RP_SMEA,
        _RoutingInfoForSM_Res_imsi,
        _RoutingInfoForSM_Res_locationInfoWithLMSI,
        _RoutingInfoForSM_Res_extensionContainer,
        _RoutingInfoForSM_Res_ip_sm_gwGuidance,
        RoutingInfoForSM_Res,
        _IP_SM_GW_Guidance_minimumDeliveryTimeValue,
        _IP_SM_GW_Guidance_recommendedDeliveryTimeValue,
        _IP_SM_GW_Guidance_extensionContainer,
        IP_SM_GW_Guidance,
        _LocationInfoWithLMSI_networkNode_Number,
        _LocationInfoWithLMSI_lmsi,
        _LocationInfoWithLMSI_extensionContainer,
        _LocationInfoWithLMSI_gprsNodeIndicator,
        _LocationInfoWithLMSI_additional_Number,
        _LocationInfoWithLMSI_networkNodeDiameterAddress,
        _LocationInfoWithLMSI_additionalNetworkNodeDiameterAddress,
        _LocationInfoWithLMSI_thirdNumber,
        _LocationInfoWithLMSI_thirdNetworkNodeDiameterAddress,
        _LocationInfoWithLMSI_imsNodeIndicator,
        LocationInfoWithLMSI,
        _Additional_Number_msc_Number,
        _Additional_Number_sgsn_Number,
        Additional_Number,
        _MO_ForwardSM_Arg_sm_RP_DA,
        _MO_ForwardSM_Arg_sm_RP_OA,
        _MO_ForwardSM_Arg_sm_RP_UI,
        _MO_ForwardSM_Arg_extensionContainer,
        _MO_ForwardSM_Arg_imsi,
        _MO_ForwardSM_Arg_correlationID,
        _MO_ForwardSM_Arg_sm_DeliveryOutcome,
        MO_ForwardSM_Arg,
        _MO_ForwardSM_Res_sm_RP_UI,
        _MO_ForwardSM_Res_extensionContainer,
        MO_ForwardSM_Res,
        _MT_ForwardSM_Arg_sm_RP_DA,
        _MT_ForwardSM_Arg_sm_RP_OA,
        _MT_ForwardSM_Arg_sm_RP_UI,
        _MT_ForwardSM_Arg_moreMessagesToSend,
        _MT_ForwardSM_Arg_extensionContainer,
        _MT_ForwardSM_Arg_smDeliveryTimer,
        _MT_ForwardSM_Arg_smDeliveryStartTime,
        _MT_ForwardSM_Arg_smsOverIP_OnlyIndicator,
        _MT_ForwardSM_Arg_correlationID,
        _MT_ForwardSM_Arg_maximumRetransmissionTime,
        _MT_ForwardSM_Arg_smsGmscAddress,
        _MT_ForwardSM_Arg_smsGmscDiameterAddress,
        MT_ForwardSM_Arg,
        _CorrelationID_hlr_id,
        _CorrelationID_sip_uri_A,
        _CorrelationID_sip_uri_B,
        CorrelationID,
        SIP_URI,
        _MT_ForwardSM_Res_sm_RP_UI,
        _MT_ForwardSM_Res_extensionContainer,
        MT_ForwardSM_Res,
        _SM_RP_DA_imsi,
        _SM_RP_DA_lmsi,
        _SM_RP_DA_serviceCentreAddressDA,
        _SM_RP_DA_noSM_RP_DA,
        SM_RP_DA,
        _SM_RP_OA_msisdn,
        _SM_RP_OA_serviceCentreAddressOA,
        _SM_RP_OA_noSM_RP_OA,
        SM_RP_OA,
        SM_DeliveryTimerValue,
        _ReportSM_DeliveryStatusArg_msisdn,
        _ReportSM_DeliveryStatusArg_serviceCentreAddress,
        _ReportSM_DeliveryStatusArg_sm_DeliveryOutcome,
        _ReportSM_DeliveryStatusArg_absentSubscriberDiagnosticSM,
        _ReportSM_DeliveryStatusArg_extensionContainer,
        _ReportSM_DeliveryStatusArg_gprsSupportIndicator,
        _ReportSM_DeliveryStatusArg_deliveryOutcomeIndicator,
        _ReportSM_DeliveryStatusArg_additionalSM_DeliveryOutcome,
        _ReportSM_DeliveryStatusArg_additionalAbsentSubscriberDiagnosticSM,
        _ReportSM_DeliveryStatusArg_ip_sm_gw_Indicator,
        _ReportSM_DeliveryStatusArg_ip_sm_gw_sm_deliveryOutcome,
        _ReportSM_DeliveryStatusArg_ip_sm_gw_absentSubscriberDiagnosticSM,
        _ReportSM_DeliveryStatusArg_imsi,
        _ReportSM_DeliveryStatusArg_singleAttemptDelivery,
        _ReportSM_DeliveryStatusArg_correlationID,
        ReportSM_DeliveryStatusArg,
        SM_DeliveryOutcome,
        _ReportSM_DeliveryStatusRes_storedMSISDN,
        _ReportSM_DeliveryStatusRes_extensionContainer,
        ReportSM_DeliveryStatusRes,
        _AlertServiceCentreArg_msisdn,
        _AlertServiceCentreArg_serviceCentreAddress,
        _AlertServiceCentreArg_imsi,
        _AlertServiceCentreArg_correlationID,
        _AlertServiceCentreArg_maximumUeAvailabilityTime,
        _AlertServiceCentreArg_smsGmscAlertEvent,
        _AlertServiceCentreArg_smsGmscDiameterAddress,
        _AlertServiceCentreArg_newSGSNNumber,
        _AlertServiceCentreArg_newSGSNDiameterAddress,
        _AlertServiceCentreArg_newMMENumber,
        _AlertServiceCentreArg_newMMEDiameterAddress,
        AlertServiceCentreArg,
        SmsGmsc_Alert_Event,
        _InformServiceCentreArg_storedMSISDN,
        _InformServiceCentreArg_mw_Status,
        _InformServiceCentreArg_extensionContainer,
        _InformServiceCentreArg_absentSubscriberDiagnosticSM,
        _InformServiceCentreArg_additionalAbsentSubscriberDiagnosticSM,
        InformServiceCentreArg,
        MW_Status,
        _ReadyForSM_Arg_imsi,
        _ReadyForSM_Arg_alertReason,
        _ReadyForSM_Arg_alertReasonIndicator,
        _ReadyForSM_Arg_extensionContainer,
        _ReadyForSM_Arg_additionalAlertReasonIndicator,
        _ReadyForSM_Arg_maximumUeAvailabilityTime,
        ReadyForSM_Arg,
        _ReadyForSM_Res_extensionContainer,
        ReadyForSM_Res,
        AlertReason,
        _MT_ForwardSM_VGCS_Arg_asciCallReference,
        _MT_ForwardSM_VGCS_Arg_sm_RP_OA,
        _MT_ForwardSM_VGCS_Arg_sm_RP_UI,
        _MT_ForwardSM_VGCS_Arg_extensionContainer,
        MT_ForwardSM_VGCS_Arg,
        _MT_ForwardSM_VGCS_Res_sm_RP_UI,
        _MT_ForwardSM_VGCS_Res_dispatcherList,
        _MT_ForwardSM_VGCS_Res_ongoingCall,
        _MT_ForwardSM_VGCS_Res_extensionContainer,
        _MT_ForwardSM_VGCS_Res_additionalDispatcherList,
        MT_ForwardSM_VGCS_Res,
        _DispatcherList__item_,
        DispatcherList,
        maxNumOfDispatchers,
        _AdditionalDispatcherList__item_,
        AdditionalDispatcherList,
        maxNumOfAdditionalDispatchers,
    ]

class MAP_SS_DataTypes:

    _name_  = 'MAP-SS-DataTypes'
    _oid_   = [0, 4, 0, 0, 1, 3, 14, 16]
    
    _obj_ = [
        'RegisterSS-Arg',
        'NoReplyConditionTime',
        'SS-Info',
        'ForwardingInfo',
        'ForwardingFeatureList',
        'ForwardingFeature',
        'SS-Status',
        'ForwardingOptions',
        'CallBarringInfo',
        'CallBarringFeatureList',
        'CallBarringFeature',
        'SS-Data',
        'SS-SubscriptionOption',
        'CliRestrictionOption',
        'OverrideCategory',
        'SS-ForBS-Code',
        'GenericServiceInfo',
        'CCBS-FeatureList',
        'maxNumOfCCBS-Requests',
        'CCBS-Feature',
        'CCBS-Index',
        'InterrogateSS-Res',
        'USSD-Arg',
        'USSD-Res',
        'USSD-DataCodingScheme',
        'USSD-String',
        'maxUSSD-StringLength',
        'Password',
        'GuidanceInfo',
        'SS-List',
        'maxNumOfSS',
        'SS-InfoList',
        'BasicServiceGroupList',
        'maxNumOfBasicServiceGroups',
        'SS-InvocationNotificationArg',
        'CCBS-RequestState',
        'SS-InvocationNotificationRes',
        'SS-EventSpecification',
        'maxEventSpecification',
        'RegisterCC-EntryArg',
        'CCBS-Data',
        'ServiceIndicator',
        'RegisterCC-EntryRes',
        'EraseCC-EntryArg',
        'EraseCC-EntryRes',
        ]
    _type_ = [
        'RegisterSS-Arg',
        'NoReplyConditionTime',
        'SS-Info',
        'ForwardingInfo',
        'ForwardingFeatureList',
        'ForwardingFeature',
        'SS-Status',
        'ForwardingOptions',
        'CallBarringInfo',
        'CallBarringFeatureList',
        'CallBarringFeature',
        'SS-Data',
        'SS-SubscriptionOption',
        'CliRestrictionOption',
        'OverrideCategory',
        'SS-ForBS-Code',
        'GenericServiceInfo',
        'CCBS-FeatureList',
        'CCBS-Feature',
        'CCBS-Index',
        'InterrogateSS-Res',
        'USSD-Arg',
        'USSD-Res',
        'USSD-DataCodingScheme',
        'USSD-String',
        'Password',
        'GuidanceInfo',
        'SS-List',
        'SS-InfoList',
        'BasicServiceGroupList',
        'SS-InvocationNotificationArg',
        'CCBS-RequestState',
        'SS-InvocationNotificationRes',
        'SS-EventSpecification',
        'RegisterCC-EntryArg',
        'CCBS-Data',
        'ServiceIndicator',
        'RegisterCC-EntryRes',
        'EraseCC-EntryArg',
        'EraseCC-EntryRes',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxNumOfCCBS-Requests',
        'maxUSSD-StringLength',
        'maxNumOfSS',
        'maxNumOfBasicServiceGroups',
        'maxEventSpecification',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< RegisterSS-Arg >-----#
    RegisterSS_Arg = SEQ(name='RegisterSS-Arg', mode=MODE_TYPE)
    _RegisterSS_Arg_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _RegisterSS_Arg_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'BasicServiceCode')), opt=True)
    _RegisterSS_Arg_forwardedToNumber = OCT_STR(name='forwardedToNumber', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')), opt=True)
    _RegisterSS_Arg_forwardedToSubaddress = OCT_STR(name='forwardedToSubaddress', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-SubaddressString')), opt=True)
    _RegisterSS_Arg_noReplyConditionTime = INT(name='noReplyConditionTime', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'NoReplyConditionTime')), opt=True)
    _RegisterSS_Arg_defaultPriority = INT(name='defaultPriority', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')), opt=True)
    _RegisterSS_Arg_nbrUser = INT(name='nbrUser', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'MC-Bearers')), opt=True)
    _RegisterSS_Arg_longFTN_Supported = NULL(name='longFTN-Supported', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    RegisterSS_Arg._cont = ASN1Dict([
        ('ss-Code', _RegisterSS_Arg_ss_Code),
        ('basicService', _RegisterSS_Arg_basicService),
        ('forwardedToNumber', _RegisterSS_Arg_forwardedToNumber),
        ('forwardedToSubaddress', _RegisterSS_Arg_forwardedToSubaddress),
        ('noReplyConditionTime', _RegisterSS_Arg_noReplyConditionTime),
        ('defaultPriority', _RegisterSS_Arg_defaultPriority),
        ('nbrUser', _RegisterSS_Arg_nbrUser),
        ('longFTN-Supported', _RegisterSS_Arg_longFTN_Supported),
        ])
    RegisterSS_Arg._ext = ['defaultPriority', 'nbrUser', 'longFTN-Supported']
    
    #-----< NoReplyConditionTime >-----#
    NoReplyConditionTime = INT(name='NoReplyConditionTime', mode=MODE_TYPE)
    NoReplyConditionTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=30)], ev=None, er=[])
    
    #-----< SS-Info >-----#
    SS_Info = CHOICE(name='SS-Info', mode=MODE_TYPE)
    _SS_Info_forwardingInfo = SEQ(name='forwardingInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'ForwardingInfo')))
    _SS_Info_callBarringInfo = SEQ(name='callBarringInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CallBarringInfo')))
    _SS_Info_ss_Data = SEQ(name='ss-Data', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Data')))
    SS_Info._cont = ASN1Dict([
        ('forwardingInfo', _SS_Info_forwardingInfo),
        ('callBarringInfo', _SS_Info_callBarringInfo),
        ('ss-Data', _SS_Info_ss_Data),
        ])
    SS_Info._ext = None
    
    #-----< ForwardingInfo >-----#
    ForwardingInfo = SEQ(name='ForwardingInfo', mode=MODE_TYPE)
    _ForwardingInfo_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')), opt=True)
    _ForwardingInfo_forwardingFeatureList = SEQ_OF(name='forwardingFeatureList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'ForwardingFeatureList')))
    ForwardingInfo._cont = ASN1Dict([
        ('ss-Code', _ForwardingInfo_ss_Code),
        ('forwardingFeatureList', _ForwardingInfo_forwardingFeatureList),
        ])
    ForwardingInfo._ext = []
    
    #-----< ForwardingFeatureList >-----#
    ForwardingFeatureList = SEQ_OF(name='ForwardingFeatureList', mode=MODE_TYPE)
    _ForwardingFeatureList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'ForwardingFeature')))
    ForwardingFeatureList._cont = _ForwardingFeatureList__item_
    ForwardingFeatureList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=13)], ev=None, er=[])
    
    #-----< ForwardingFeature >-----#
    ForwardingFeature = SEQ(name='ForwardingFeature', mode=MODE_TYPE)
    _ForwardingFeature_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'BasicServiceCode')), opt=True)
    _ForwardingFeature_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')), opt=True)
    _ForwardingFeature_forwardedToNumber = OCT_STR(name='forwardedToNumber', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _ForwardingFeature_forwardedToSubaddress = OCT_STR(name='forwardedToSubaddress', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-SubaddressString')), opt=True)
    _ForwardingFeature_forwardingOptions = OCT_STR(name='forwardingOptions', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'ForwardingOptions')), opt=True)
    _ForwardingFeature_noReplyConditionTime = INT(name='noReplyConditionTime', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'NoReplyConditionTime')), opt=True)
    _ForwardingFeature_longForwardedToNumber = OCT_STR(name='longForwardedToNumber', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'FTN-AddressString')), opt=True)
    ForwardingFeature._cont = ASN1Dict([
        ('basicService', _ForwardingFeature_basicService),
        ('ss-Status', _ForwardingFeature_ss_Status),
        ('forwardedToNumber', _ForwardingFeature_forwardedToNumber),
        ('forwardedToSubaddress', _ForwardingFeature_forwardedToSubaddress),
        ('forwardingOptions', _ForwardingFeature_forwardingOptions),
        ('noReplyConditionTime', _ForwardingFeature_noReplyConditionTime),
        ('longForwardedToNumber', _ForwardingFeature_longForwardedToNumber),
        ])
    ForwardingFeature._ext = ['longForwardedToNumber']
    
    #-----< SS-Status >-----#
    SS_Status = OCT_STR(name='SS-Status', mode=MODE_TYPE)
    SS_Status._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< ForwardingOptions >-----#
    ForwardingOptions = OCT_STR(name='ForwardingOptions', mode=MODE_TYPE)
    ForwardingOptions._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< CallBarringInfo >-----#
    CallBarringInfo = SEQ(name='CallBarringInfo', mode=MODE_TYPE)
    _CallBarringInfo_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')), opt=True)
    _CallBarringInfo_callBarringFeatureList = SEQ_OF(name='callBarringFeatureList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'CallBarringFeatureList')))
    CallBarringInfo._cont = ASN1Dict([
        ('ss-Code', _CallBarringInfo_ss_Code),
        ('callBarringFeatureList', _CallBarringInfo_callBarringFeatureList),
        ])
    CallBarringInfo._ext = []
    
    #-----< CallBarringFeatureList >-----#
    CallBarringFeatureList = SEQ_OF(name='CallBarringFeatureList', mode=MODE_TYPE)
    _CallBarringFeatureList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'CallBarringFeature')))
    CallBarringFeatureList._cont = _CallBarringFeatureList__item_
    CallBarringFeatureList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=13)], ev=None, er=[])
    
    #-----< CallBarringFeature >-----#
    CallBarringFeature = SEQ(name='CallBarringFeature', mode=MODE_TYPE)
    _CallBarringFeature_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'BasicServiceCode')), opt=True)
    _CallBarringFeature_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')), opt=True)
    CallBarringFeature._cont = ASN1Dict([
        ('basicService', _CallBarringFeature_basicService),
        ('ss-Status', _CallBarringFeature_ss_Status),
        ])
    CallBarringFeature._ext = []
    
    #-----< SS-Data >-----#
    SS_Data = SEQ(name='SS-Data', mode=MODE_TYPE)
    _SS_Data_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')), opt=True)
    _SS_Data_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')), opt=True)
    _SS_Data_ss_SubscriptionOption = CHOICE(name='ss-SubscriptionOption', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-SubscriptionOption')), opt=True)
    _SS_Data_basicServiceGroupList = SEQ_OF(name='basicServiceGroupList', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'BasicServiceGroupList')), opt=True)
    _SS_Data_defaultPriority = INT(name='defaultPriority', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')), opt=True)
    _SS_Data_nbrUser = INT(name='nbrUser', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'MC-Bearers')), opt=True)
    SS_Data._cont = ASN1Dict([
        ('ss-Code', _SS_Data_ss_Code),
        ('ss-Status', _SS_Data_ss_Status),
        ('ss-SubscriptionOption', _SS_Data_ss_SubscriptionOption),
        ('basicServiceGroupList', _SS_Data_basicServiceGroupList),
        ('defaultPriority', _SS_Data_defaultPriority),
        ('nbrUser', _SS_Data_nbrUser),
        ])
    SS_Data._ext = ['defaultPriority', 'nbrUser']
    
    #-----< SS-SubscriptionOption >-----#
    SS_SubscriptionOption = CHOICE(name='SS-SubscriptionOption', mode=MODE_TYPE)
    _SS_SubscriptionOption_cliRestrictionOption = ENUM(name='cliRestrictionOption', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CliRestrictionOption')))
    _SS_SubscriptionOption_overrideCategory = ENUM(name='overrideCategory', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'OverrideCategory')))
    SS_SubscriptionOption._cont = ASN1Dict([
        ('cliRestrictionOption', _SS_SubscriptionOption_cliRestrictionOption),
        ('overrideCategory', _SS_SubscriptionOption_overrideCategory),
        ])
    SS_SubscriptionOption._ext = None
    
    #-----< CliRestrictionOption >-----#
    CliRestrictionOption = ENUM(name='CliRestrictionOption', mode=MODE_TYPE)
    CliRestrictionOption._cont = ASN1Dict([('permanent', 0), ('temporaryDefaultRestricted', 1), ('temporaryDefaultAllowed', 2)])
    CliRestrictionOption._ext = None
    
    #-----< OverrideCategory >-----#
    OverrideCategory = ENUM(name='OverrideCategory', mode=MODE_TYPE)
    OverrideCategory._cont = ASN1Dict([('overrideEnabled', 0), ('overrideDisabled', 1)])
    OverrideCategory._ext = None
    
    #-----< SS-ForBS-Code >-----#
    SS_ForBS_Code = SEQ(name='SS-ForBS-Code', mode=MODE_TYPE)
    _SS_ForBS_Code_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _SS_ForBS_Code_basicService = CHOICE(name='basicService', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'BasicServiceCode')), opt=True)
    _SS_ForBS_Code_longFTN_Supported = NULL(name='longFTN-Supported', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    SS_ForBS_Code._cont = ASN1Dict([
        ('ss-Code', _SS_ForBS_Code_ss_Code),
        ('basicService', _SS_ForBS_Code_basicService),
        ('longFTN-Supported', _SS_ForBS_Code_longFTN_Supported),
        ])
    SS_ForBS_Code._ext = ['longFTN-Supported']
    
    #-----< GenericServiceInfo >-----#
    GenericServiceInfo = SEQ(name='GenericServiceInfo', mode=MODE_TYPE)
    _GenericServiceInfo_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    _GenericServiceInfo_cliRestrictionOption = ENUM(name='cliRestrictionOption', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'CliRestrictionOption')), opt=True)
    _GenericServiceInfo_maximumEntitledPriority = INT(name='maximumEntitledPriority', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')), opt=True)
    _GenericServiceInfo_defaultPriority = INT(name='defaultPriority', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'EMLPP-Priority')), opt=True)
    _GenericServiceInfo_ccbs_FeatureList = SEQ_OF(name='ccbs-FeatureList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CCBS-FeatureList')), opt=True)
    _GenericServiceInfo_nbrSB = INT(name='nbrSB', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'MaxMC-Bearers')), opt=True)
    _GenericServiceInfo_nbrUser = INT(name='nbrUser', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'MC-Bearers')), opt=True)
    _GenericServiceInfo_nbrSN = INT(name='nbrSN', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'MC-Bearers')), opt=True)
    GenericServiceInfo._cont = ASN1Dict([
        ('ss-Status', _GenericServiceInfo_ss_Status),
        ('cliRestrictionOption', _GenericServiceInfo_cliRestrictionOption),
        ('maximumEntitledPriority', _GenericServiceInfo_maximumEntitledPriority),
        ('defaultPriority', _GenericServiceInfo_defaultPriority),
        ('ccbs-FeatureList', _GenericServiceInfo_ccbs_FeatureList),
        ('nbrSB', _GenericServiceInfo_nbrSB),
        ('nbrUser', _GenericServiceInfo_nbrUser),
        ('nbrSN', _GenericServiceInfo_nbrSN),
        ])
    GenericServiceInfo._ext = ['maximumEntitledPriority', 'defaultPriority', 'ccbs-FeatureList', 'nbrSB', 'nbrUser', 'nbrSN']
    
    #-----< CCBS-FeatureList >-----#
    CCBS_FeatureList = SEQ_OF(name='CCBS-FeatureList', mode=MODE_TYPE)
    _CCBS_FeatureList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'CCBS-Feature')))
    CCBS_FeatureList._cont = _CCBS_FeatureList__item_
    CCBS_FeatureList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< maxNumOfCCBS-Requests >-----#
    maxNumOfCCBS_Requests = INT(name='maxNumOfCCBS-Requests', mode=MODE_VALUE)
    maxNumOfCCBS_Requests._val = 5
    
    #-----< CCBS-Feature >-----#
    CCBS_Feature = SEQ(name='CCBS-Feature', mode=MODE_TYPE)
    _CCBS_Feature_ccbs_Index = INT(name='ccbs-Index', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CCBS-Index')), opt=True)
    _CCBS_Feature_b_subscriberNumber = OCT_STR(name='b-subscriberNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _CCBS_Feature_b_subscriberSubaddress = OCT_STR(name='b-subscriberSubaddress', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-SubaddressString')), opt=True)
    _CCBS_Feature_basicServiceGroup = CHOICE(name='basicServiceGroup', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'BasicServiceCode')), opt=True)
    CCBS_Feature._cont = ASN1Dict([
        ('ccbs-Index', _CCBS_Feature_ccbs_Index),
        ('b-subscriberNumber', _CCBS_Feature_b_subscriberNumber),
        ('b-subscriberSubaddress', _CCBS_Feature_b_subscriberSubaddress),
        ('basicServiceGroup', _CCBS_Feature_basicServiceGroup),
        ])
    CCBS_Feature._ext = []
    
    #-----< CCBS-Index >-----#
    CCBS_Index = INT(name='CCBS-Index', mode=MODE_TYPE)
    CCBS_Index._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< InterrogateSS-Res >-----#
    InterrogateSS_Res = CHOICE(name='InterrogateSS-Res', mode=MODE_TYPE)
    _InterrogateSS_Res_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')))
    _InterrogateSS_Res_basicServiceGroupList = SEQ_OF(name='basicServiceGroupList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'BasicServiceGroupList')))
    _InterrogateSS_Res_forwardingFeatureList = SEQ_OF(name='forwardingFeatureList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'ForwardingFeatureList')))
    _InterrogateSS_Res_genericServiceInfo = SEQ(name='genericServiceInfo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'GenericServiceInfo')))
    InterrogateSS_Res._cont = ASN1Dict([
        ('ss-Status', _InterrogateSS_Res_ss_Status),
        ('basicServiceGroupList', _InterrogateSS_Res_basicServiceGroupList),
        ('forwardingFeatureList', _InterrogateSS_Res_forwardingFeatureList),
        ('genericServiceInfo', _InterrogateSS_Res_genericServiceInfo),
        ])
    InterrogateSS_Res._ext = None
    
    #-----< USSD-Arg >-----#
    USSD_Arg = SEQ(name='USSD-Arg', mode=MODE_TYPE)
    _USSD_Arg_ussd_DataCodingScheme = OCT_STR(name='ussd-DataCodingScheme', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-DataCodingScheme')))
    _USSD_Arg_ussd_String = OCT_STR(name='ussd-String', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-String')))
    _USSD_Arg_alertingPattern = OCT_STR(name='alertingPattern', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AlertingPattern')), opt=True)
    _USSD_Arg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    USSD_Arg._cont = ASN1Dict([
        ('ussd-DataCodingScheme', _USSD_Arg_ussd_DataCodingScheme),
        ('ussd-String', _USSD_Arg_ussd_String),
        ('alertingPattern', _USSD_Arg_alertingPattern),
        ('msisdn', _USSD_Arg_msisdn),
        ])
    USSD_Arg._ext = ['alertingPattern', 'msisdn']
    
    #-----< USSD-Res >-----#
    USSD_Res = SEQ(name='USSD-Res', mode=MODE_TYPE)
    _USSD_Res_ussd_DataCodingScheme = OCT_STR(name='ussd-DataCodingScheme', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-DataCodingScheme')))
    _USSD_Res_ussd_String = OCT_STR(name='ussd-String', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'USSD-String')))
    USSD_Res._cont = ASN1Dict([
        ('ussd-DataCodingScheme', _USSD_Res_ussd_DataCodingScheme),
        ('ussd-String', _USSD_Res_ussd_String),
        ])
    USSD_Res._ext = []
    
    #-----< USSD-DataCodingScheme >-----#
    USSD_DataCodingScheme = OCT_STR(name='USSD-DataCodingScheme', mode=MODE_TYPE)
    USSD_DataCodingScheme._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< USSD-String >-----#
    USSD_String = OCT_STR(name='USSD-String', mode=MODE_TYPE)
    USSD_String._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=160)], ev=None, er=[])
    
    #-----< maxUSSD-StringLength >-----#
    maxUSSD_StringLength = INT(name='maxUSSD-StringLength', mode=MODE_VALUE)
    maxUSSD_StringLength._val = 160
    
    #-----< Password >-----#
    Password = STR_NUM(name='Password', mode=MODE_TYPE)
    Password._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    Password._const_alpha = ASN1Set(rv=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rr=[], ev=None, er=[])
    
    #-----< GuidanceInfo >-----#
    GuidanceInfo = ENUM(name='GuidanceInfo', mode=MODE_TYPE)
    GuidanceInfo._cont = ASN1Dict([('enterPW', 0), ('enterNewPW', 1), ('enterNewPW-Again', 2)])
    GuidanceInfo._ext = None
    
    #-----< SS-List >-----#
    SS_List = SEQ_OF(name='SS-List', mode=MODE_TYPE)
    _SS_List__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    SS_List._cont = _SS_List__item_
    SS_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=30)], ev=None, er=[])
    
    #-----< maxNumOfSS >-----#
    maxNumOfSS = INT(name='maxNumOfSS', mode=MODE_VALUE)
    maxNumOfSS._val = 30
    
    #-----< SS-InfoList >-----#
    SS_InfoList = SEQ_OF(name='SS-InfoList', mode=MODE_TYPE)
    _SS_InfoList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Info')))
    SS_InfoList._cont = _SS_InfoList__item_
    SS_InfoList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=30)], ev=None, er=[])
    
    #-----< BasicServiceGroupList >-----#
    BasicServiceGroupList = SEQ_OF(name='BasicServiceGroupList', mode=MODE_TYPE)
    _BasicServiceGroupList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'BasicServiceCode')))
    BasicServiceGroupList._cont = _BasicServiceGroupList__item_
    BasicServiceGroupList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=13)], ev=None, er=[])
    
    #-----< maxNumOfBasicServiceGroups >-----#
    maxNumOfBasicServiceGroups = INT(name='maxNumOfBasicServiceGroups', mode=MODE_VALUE)
    maxNumOfBasicServiceGroups._val = 13
    
    #-----< SS-InvocationNotificationArg >-----#
    SS_InvocationNotificationArg = SEQ(name='SS-InvocationNotificationArg', mode=MODE_TYPE)
    _SS_InvocationNotificationArg_imsi = OCT_STR(name='imsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'IMSI')))
    _SS_InvocationNotificationArg_msisdn = OCT_STR(name='msisdn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _SS_InvocationNotificationArg_ss_Event = OCT_STR(name='ss-Event', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _SS_InvocationNotificationArg_ss_EventSpecification = SEQ_OF(name='ss-EventSpecification', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-EventSpecification')), opt=True)
    _SS_InvocationNotificationArg_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _SS_InvocationNotificationArg_b_subscriberNumber = OCT_STR(name='b-subscriberNumber', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')), opt=True)
    _SS_InvocationNotificationArg_ccbs_RequestState = ENUM(name='ccbs-RequestState', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CCBS-RequestState')), opt=True)
    SS_InvocationNotificationArg._cont = ASN1Dict([
        ('imsi', _SS_InvocationNotificationArg_imsi),
        ('msisdn', _SS_InvocationNotificationArg_msisdn),
        ('ss-Event', _SS_InvocationNotificationArg_ss_Event),
        ('ss-EventSpecification', _SS_InvocationNotificationArg_ss_EventSpecification),
        ('extensionContainer', _SS_InvocationNotificationArg_extensionContainer),
        ('b-subscriberNumber', _SS_InvocationNotificationArg_b_subscriberNumber),
        ('ccbs-RequestState', _SS_InvocationNotificationArg_ccbs_RequestState),
        ])
    SS_InvocationNotificationArg._ext = ['b-subscriberNumber', 'ccbs-RequestState']
    
    #-----< CCBS-RequestState >-----#
    CCBS_RequestState = ENUM(name='CCBS-RequestState', mode=MODE_TYPE)
    CCBS_RequestState._cont = ASN1Dict([('request', 0), ('recall', 1), ('active', 2), ('completed', 3), ('suspended', 4), ('frozen', 5), ('deleted', 6)])
    CCBS_RequestState._ext = None
    
    #-----< SS-InvocationNotificationRes >-----#
    SS_InvocationNotificationRes = SEQ(name='SS-InvocationNotificationRes', mode=MODE_TYPE)
    _SS_InvocationNotificationRes_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    SS_InvocationNotificationRes._cont = ASN1Dict([
        ('extensionContainer', _SS_InvocationNotificationRes_extensionContainer),
        ])
    SS_InvocationNotificationRes._ext = []
    
    #-----< SS-EventSpecification >-----#
    SS_EventSpecification = SEQ_OF(name='SS-EventSpecification', mode=MODE_TYPE)
    _SS_EventSpecification__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-CommonDataTypes', 'AddressString')))
    SS_EventSpecification._cont = _SS_EventSpecification__item_
    SS_EventSpecification._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    
    #-----< maxEventSpecification >-----#
    maxEventSpecification = INT(name='maxEventSpecification', mode=MODE_VALUE)
    maxEventSpecification._val = 2
    
    #-----< RegisterCC-EntryArg >-----#
    RegisterCC_EntryArg = SEQ(name='RegisterCC-EntryArg', mode=MODE_TYPE)
    _RegisterCC_EntryArg_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _RegisterCC_EntryArg_ccbs_Data = SEQ(name='ccbs-Data', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CCBS-Data')), opt=True)
    RegisterCC_EntryArg._cont = ASN1Dict([
        ('ss-Code', _RegisterCC_EntryArg_ss_Code),
        ('ccbs-Data', _RegisterCC_EntryArg_ccbs_Data),
        ])
    RegisterCC_EntryArg._ext = []
    
    #-----< CCBS-Data >-----#
    CCBS_Data = SEQ(name='CCBS-Data', mode=MODE_TYPE)
    _CCBS_Data_ccbs_Feature = SEQ(name='ccbs-Feature', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CCBS-Feature')))
    _CCBS_Data_translatedB_Number = OCT_STR(name='translatedB-Number', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ISDN-AddressString')))
    _CCBS_Data_serviceIndicator = BIT_STR(name='serviceIndicator', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'ServiceIndicator')), opt=True)
    _CCBS_Data_callInfo = SEQ(name='callInfo', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ExternalSignalInfo')))
    _CCBS_Data_networkSignalInfo = SEQ(name='networkSignalInfo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-CommonDataTypes', 'ExternalSignalInfo')))
    CCBS_Data._cont = ASN1Dict([
        ('ccbs-Feature', _CCBS_Data_ccbs_Feature),
        ('translatedB-Number', _CCBS_Data_translatedB_Number),
        ('serviceIndicator', _CCBS_Data_serviceIndicator),
        ('callInfo', _CCBS_Data_callInfo),
        ('networkSignalInfo', _CCBS_Data_networkSignalInfo),
        ])
    CCBS_Data._ext = []
    
    #-----< ServiceIndicator >-----#
    ServiceIndicator = BIT_STR(name='ServiceIndicator', mode=MODE_TYPE)
    ServiceIndicator._cont = ASN1Dict([('clir-invoked', 0), ('camel-invoked', 1)])
    ServiceIndicator._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=32)], ev=None, er=[])
    
    #-----< RegisterCC-EntryRes >-----#
    RegisterCC_EntryRes = SEQ(name='RegisterCC-EntryRes', mode=MODE_TYPE)
    _RegisterCC_EntryRes_ccbs_Feature = SEQ(name='ccbs-Feature', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CCBS-Feature')), opt=True)
    RegisterCC_EntryRes._cont = ASN1Dict([
        ('ccbs-Feature', _RegisterCC_EntryRes_ccbs_Feature),
        ])
    RegisterCC_EntryRes._ext = []
    
    #-----< EraseCC-EntryArg >-----#
    EraseCC_EntryArg = SEQ(name='EraseCC-EntryArg', mode=MODE_TYPE)
    _EraseCC_EntryArg_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _EraseCC_EntryArg_ccbs_Index = INT(name='ccbs-Index', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'CCBS-Index')), opt=True)
    EraseCC_EntryArg._cont = ASN1Dict([
        ('ss-Code', _EraseCC_EntryArg_ss_Code),
        ('ccbs-Index', _EraseCC_EntryArg_ccbs_Index),
        ])
    EraseCC_EntryArg._ext = []
    
    #-----< EraseCC-EntryRes >-----#
    EraseCC_EntryRes = SEQ(name='EraseCC-EntryRes', mode=MODE_TYPE)
    _EraseCC_EntryRes_ss_Code = OCT_STR(name='ss-Code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-Code', 'SS-Code')))
    _EraseCC_EntryRes_ss_Status = OCT_STR(name='ss-Status', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-SS-DataTypes', 'SS-Status')), opt=True)
    EraseCC_EntryRes._cont = ASN1Dict([
        ('ss-Code', _EraseCC_EntryRes_ss_Code),
        ('ss-Status', _EraseCC_EntryRes_ss_Status),
        ])
    EraseCC_EntryRes._ext = []
    
    _all_ = [
        _RegisterSS_Arg_ss_Code,
        _RegisterSS_Arg_basicService,
        _RegisterSS_Arg_forwardedToNumber,
        _RegisterSS_Arg_forwardedToSubaddress,
        _RegisterSS_Arg_noReplyConditionTime,
        _RegisterSS_Arg_defaultPriority,
        _RegisterSS_Arg_nbrUser,
        _RegisterSS_Arg_longFTN_Supported,
        RegisterSS_Arg,
        NoReplyConditionTime,
        _SS_Info_forwardingInfo,
        _SS_Info_callBarringInfo,
        _SS_Info_ss_Data,
        SS_Info,
        _ForwardingInfo_ss_Code,
        _ForwardingInfo_forwardingFeatureList,
        ForwardingInfo,
        _ForwardingFeatureList__item_,
        ForwardingFeatureList,
        _ForwardingFeature_basicService,
        _ForwardingFeature_ss_Status,
        _ForwardingFeature_forwardedToNumber,
        _ForwardingFeature_forwardedToSubaddress,
        _ForwardingFeature_forwardingOptions,
        _ForwardingFeature_noReplyConditionTime,
        _ForwardingFeature_longForwardedToNumber,
        ForwardingFeature,
        SS_Status,
        ForwardingOptions,
        _CallBarringInfo_ss_Code,
        _CallBarringInfo_callBarringFeatureList,
        CallBarringInfo,
        _CallBarringFeatureList__item_,
        CallBarringFeatureList,
        _CallBarringFeature_basicService,
        _CallBarringFeature_ss_Status,
        CallBarringFeature,
        _SS_Data_ss_Code,
        _SS_Data_ss_Status,
        _SS_Data_ss_SubscriptionOption,
        _SS_Data_basicServiceGroupList,
        _SS_Data_defaultPriority,
        _SS_Data_nbrUser,
        SS_Data,
        _SS_SubscriptionOption_cliRestrictionOption,
        _SS_SubscriptionOption_overrideCategory,
        SS_SubscriptionOption,
        CliRestrictionOption,
        OverrideCategory,
        _SS_ForBS_Code_ss_Code,
        _SS_ForBS_Code_basicService,
        _SS_ForBS_Code_longFTN_Supported,
        SS_ForBS_Code,
        _GenericServiceInfo_ss_Status,
        _GenericServiceInfo_cliRestrictionOption,
        _GenericServiceInfo_maximumEntitledPriority,
        _GenericServiceInfo_defaultPriority,
        _GenericServiceInfo_ccbs_FeatureList,
        _GenericServiceInfo_nbrSB,
        _GenericServiceInfo_nbrUser,
        _GenericServiceInfo_nbrSN,
        GenericServiceInfo,
        _CCBS_FeatureList__item_,
        CCBS_FeatureList,
        maxNumOfCCBS_Requests,
        _CCBS_Feature_ccbs_Index,
        _CCBS_Feature_b_subscriberNumber,
        _CCBS_Feature_b_subscriberSubaddress,
        _CCBS_Feature_basicServiceGroup,
        CCBS_Feature,
        CCBS_Index,
        _InterrogateSS_Res_ss_Status,
        _InterrogateSS_Res_basicServiceGroupList,
        _InterrogateSS_Res_forwardingFeatureList,
        _InterrogateSS_Res_genericServiceInfo,
        InterrogateSS_Res,
        _USSD_Arg_ussd_DataCodingScheme,
        _USSD_Arg_ussd_String,
        _USSD_Arg_alertingPattern,
        _USSD_Arg_msisdn,
        USSD_Arg,
        _USSD_Res_ussd_DataCodingScheme,
        _USSD_Res_ussd_String,
        USSD_Res,
        USSD_DataCodingScheme,
        USSD_String,
        maxUSSD_StringLength,
        Password,
        GuidanceInfo,
        _SS_List__item_,
        SS_List,
        maxNumOfSS,
        _SS_InfoList__item_,
        SS_InfoList,
        _BasicServiceGroupList__item_,
        BasicServiceGroupList,
        maxNumOfBasicServiceGroups,
        _SS_InvocationNotificationArg_imsi,
        _SS_InvocationNotificationArg_msisdn,
        _SS_InvocationNotificationArg_ss_Event,
        _SS_InvocationNotificationArg_ss_EventSpecification,
        _SS_InvocationNotificationArg_extensionContainer,
        _SS_InvocationNotificationArg_b_subscriberNumber,
        _SS_InvocationNotificationArg_ccbs_RequestState,
        SS_InvocationNotificationArg,
        CCBS_RequestState,
        _SS_InvocationNotificationRes_extensionContainer,
        SS_InvocationNotificationRes,
        _SS_EventSpecification__item_,
        SS_EventSpecification,
        maxEventSpecification,
        _RegisterCC_EntryArg_ss_Code,
        _RegisterCC_EntryArg_ccbs_Data,
        RegisterCC_EntryArg,
        _CCBS_Data_ccbs_Feature,
        _CCBS_Data_translatedB_Number,
        _CCBS_Data_serviceIndicator,
        _CCBS_Data_callInfo,
        _CCBS_Data_networkSignalInfo,
        CCBS_Data,
        ServiceIndicator,
        _RegisterCC_EntryRes_ccbs_Feature,
        RegisterCC_EntryRes,
        _EraseCC_EntryArg_ss_Code,
        _EraseCC_EntryArg_ccbs_Index,
        EraseCC_EntryArg,
        _EraseCC_EntryRes_ss_Code,
        _EraseCC_EntryRes_ss_Status,
        EraseCC_EntryRes,
    ]

class RRLP_Components:

    _name_  = 'RRLP-Components'
    _oid_   = []
    
    _obj_ = [
        'MsrPosition-Req',
        'MsrPosition-Rsp',
        'AssistanceData',
        'ProtocolError',
        'PosCapability-Req',
        'PosCapability-Rsp',
        'PositionInstruct',
        'MethodType',
        'AccuracyOpt',
        'Accuracy',
        'PositionMethod',
        'MeasureResponseTime',
        'UseMultipleSets',
        'EnvironmentCharacter',
        'ReferenceAssistData',
        'BTSPosition',
        'BCCHCarrier',
        'BSIC',
        'TimeSlotScheme',
        'ModuloTimeSlot',
        'MsrAssistData',
        'SeqOfMsrAssistBTS',
        'MsrAssistBTS',
        'MultiFrameOffset',
        'RoughRTD',
        'SystemInfoAssistData',
        'SeqOfSystemInfoAssistBTS',
        'SystemInfoAssistBTS',
        'AssistBTSData',
        'CalcAssistanceBTS',
        'ReferenceWGS84',
        'FineRTD',
        'RelDistance',
        'RelativeAlt',
        'MultipleSets',
        'ReferenceRelation',
        'ReferenceIdentity',
        'SeqOfReferenceIdentityType',
        'ReferenceIdentityType',
        'BSICAndCarrier',
        'RequestIndex',
        'SystemInfoIndex',
        'CellIDAndLAC',
        'CellID',
        'LAC',
        'OTD-MeasureInfo',
        'SeqOfOTD-MsrElementRest',
        'OTD-MsrElementFirst',
        'SeqOfOTD-FirstSetMsrs',
        'OTD-MsrElementRest',
        'SeqOfOTD-MsrsOfOtherSets',
        'TOA-MeasurementsOfRef',
        'RefQuality',
        'NumOfMeasurements',
        'StdResolution',
        'OTD-FirstSetMsrs',
        'OTD-MsrsOfOtherSets',
        'OTD-Measurement',
        'OTD-MeasurementWithID',
        'EOTDQuality',
        'NeighborIdentity',
        'MultiFrameCarrier',
        'OTDValue',
        'LocationInfo',
        'FixType',
        'GPS-MeasureInfo',
        'SeqOfGPS-MsrSetElement',
        'GPS-MsrSetElement',
        'GPSTOW24b',
        'SeqOfGPS-MsrElement',
        'GPS-MsrElement',
        'MpathIndic',
        'LocationError',
        'LocErrorReason',
        'AdditionalAssistanceData',
        'GPSAssistanceData',
        'maxGPSAssistanceData',
        'GANSSAssistanceData',
        'maxGANSSAssistanceData',
        'ErrorCodes',
        'GPS-AssistData',
        'MoreAssDataToBeSent',
        'ControlHeader',
        'ReferenceTime',
        'GPSTime',
        'GPSTOW23b',
        'GPSWeek',
        'GPSTOWAssist',
        'GPSTOWAssistElement',
        'TLMWord',
        'AntiSpoofFlag',
        'AlertFlag',
        'TLMReservedBits',
        'GSMTime',
        'FrameNumber',
        'TimeSlot',
        'BitNumber',
        'RefLocation',
        'DGPSCorrections',
        'SeqOfSatElement',
        'SatElement',
        'SatelliteID',
        'NavigationModel',
        'SeqOfNavModelElement',
        'NavModelElement',
        'SatStatus',
        'UncompressedEphemeris',
        'EphemerisSubframe1Reserved',
        'IonosphericModel',
        'UTCModel',
        'Almanac',
        'SeqOfAlmanacElement',
        'AlmanacElement',
        'AcquisAssist',
        'SeqOfAcquisElement',
        'TimeRelation',
        'AcquisElement',
        'AddionalDopplerFields',
        'AddionalAngleFields',
        'SeqOf-BadSatelliteSet',
        'Rel98-MsrPosition-Req-Extension',
        'Rel98-AssistanceData-Extension',
        'Rel98-Ext-ExpOTD',
        'MsrAssistData-R98-ExpOTD',
        'SeqOfMsrAssistBTS-R98-ExpOTD',
        'MsrAssistBTS-R98-ExpOTD',
        'SystemInfoAssistData-R98-ExpOTD',
        'SeqOfSystemInfoAssistBTS-R98-ExpOTD',
        'SystemInfoAssistBTS-R98-ExpOTD',
        'AssistBTSData-R98-ExpOTD',
        'ExpectedOTD',
        'ExpOTDUncertainty',
        'GPSReferenceTimeUncertainty',
        'GPSTimeAssistanceMeasurements',
        'Rel-98-MsrPosition-Rsp-Extension',
        'OTD-MeasureInfo-R98-Ext',
        'OTD-MsrElementFirst-R98-Ext',
        'SeqOfOTD-FirstSetMsrs-R98-Ext',
        'Rel-5-MsrPosition-Rsp-Extension',
        'Extended-reference',
        'OTD-MeasureInfo-5-Ext',
        'UlPseudoSegInd',
        'Rel5-MsrPosition-Req-Extension',
        'Rel5-AssistanceData-Extension',
        'Rel-5-ProtocolError-Extension',
        'Rel7-MsrPosition-Req-Extension',
        'GANSSPositioningMethod',
        'GANSS-AssistData',
        'GANSS-ControlHeader',
        'GANSSCommonAssistData',
        'SeqOfGANSSGenericAssistDataElement',
        'GANSSGenericAssistDataElement',
        'GANSSReferenceTime',
        'GANSSRefTimeInfo',
        'GANSSTOD',
        'GANSSTODUncertainty',
        'GANSSReferenceTime-R10-Ext',
        'GANSSTOD-GSMTimeAssociation',
        'FrameDrift',
        'GANSSRefLocation',
        'GANSSIonosphericModel',
        'GANSSIonosphereModel',
        'GANSSIonoStormFlags',
        'GANSSAddIonosphericModel',
        'GANSSEarthOrientParam',
        'SeqOfGANSSTimeModel',
        'GANSSTimeModelElement',
        'TA0',
        'TA1',
        'TA2',
        'SeqOfGANSSTimeModel-R10-Ext',
        'GANSSTimeModelElement-R10-Ext',
        'GANSSDiffCorrections',
        'SeqOfSgnTypeElement',
        'SgnTypeElement',
        'GANSSSignalID',
        'SeqOfDGANSSSgnElement',
        'DGANSSSgnElement',
        'SVID',
        'GANSSNavModel',
        'SeqOfGANSSSatelliteElement',
        'GANSSSatelliteElement',
        'GANSSOrbitModel',
        'NavModel-KeplerianSet',
        'NavModel-NAVKeplerianSet',
        'NavModel-CNAVKeplerianSet',
        'NavModel-GLONASSecef',
        'NavModel-SBASecef',
        'NavModel-BDSKeplerianSet-r12',
        'GANSSClockModel',
        'SeqOfStandardClockModelElement',
        'StandardClockModelElement',
        'NAVclockModel',
        'CNAVclockModel',
        'GLONASSclockModel',
        'SBASclockModel',
        'BDSClockModel-r12',
        'GANSSRealTimeIntegrity',
        'SeqOfBadSignalElement',
        'BadSignalElement',
        'GANSSDataBitAssist',
        'SeqOfGanssDataBitsElement',
        'GanssDataBitsElement',
        'Seq-OfGANSSDataBitsSgn',
        'GANSSDataBitsSgnElement',
        'SeqOf-GANSSDataBits',
        'GANSSDataBit',
        'GANSSRefMeasurementAssist',
        'SeqOfGANSSRefMeasurementElement',
        'GANSSRefMeasurementElement',
        'AdditionalDopplerFields',
        'GANSSRefMeasurementAssist-R10-Ext',
        'GANSSRefMeasurement-R10-Ext-Element',
        'GANSSRefMeasurementAssist-R12-Ext',
        'SeqOfGANSSRefMeasurementElement-R12',
        'GANSSRefMeasurement-R12-Ext-Element',
        'GANSSAlmanacModel',
        'SeqOfGANSSAlmanacElement',
        'GANSSAlmanacElement',
        'Almanac-KeplerianSet',
        'Almanac-NAVKeplerianSet',
        'Almanac-ReducedKeplerianSet',
        'Almanac-MidiAlmanacSet',
        'Almanac-GlonassAlmanacSet',
        'Almanac-ECEFsbasAlmanacSet',
        'Almanac-BDSAlmanacSet-r12',
        'GANSSAlmanacModel-R10-Ext',
        'GANSSAlmanacModel-R12-Ext',
        'GANSSUTCModel',
        'GANSSEphemerisExtension',
        'GANSSEphemerisExtensionHeader',
        'GANSSEphemerisExtensionTime',
        'ReferenceNavModel',
        'SeqOfGANSSRefOrbit',
        'GANSSReferenceOrbit',
        'GANSSEphemerisDeltaMatrix',
        'GANSSEphemerisDeltaEpoch',
        'GANSSDeltaEpochHeader',
        'GANSSDeltaElementList',
        'GANSSEphemerisDeltaBitSizes',
        'GANSSEphemerisDeltaScales',
        'GANSSEphemerisExtensionCheck',
        'GANSSSatEventsInfo',
        'GANSSAddUTCModel',
        'UTCmodelSet2',
        'UTCmodelSet3',
        'UTCmodelSet4',
        'UTCmodelSet5-r12',
        'GANSSAuxiliaryInformation',
        'GANSS-ID1',
        'GANSS-ID1-element',
        'GANSS-ID3',
        'GANSS-ID3-element',
        'GANSSDiffCorrectionsValidityPeriod',
        'DGANSSExtensionSgnTypeElement',
        'SeqOfDGANSSExtensionSgnElement',
        'DGANSSExtensionSgnElement',
        'RequiredResponseTime',
        'Add-GPS-AssistData',
        'Add-GPS-ControlHeader',
        'GPSClockModel',
        'GPSEphemerisExtension',
        'GPSEphemerisExtensionHeader',
        'GPSEphemerisExtensionTime',
        'SeqOfGPSRefOrbit',
        'GPSReferenceOrbit',
        'GPSEphemerisDeltaMatrix',
        'GPSEphemerisDeltaEpoch',
        'GPSDeltaEpochHeader',
        'GPSDeltaElementList',
        'GPSEphemerisDeltaBitSizes',
        'GPSEphemerisDeltaScales',
        'GPSEphemerisExtensionCheck',
        'GPSSatEventsInfo',
        'DGPSCorrectionsValidityPeriod',
        'DGPSExtensionSatElement',
        'GPSReferenceTime-R10-Ext',
        'GPSAcquisAssist-R10-Ext',
        'GPSAcquisAssist-R10-Ext-Element',
        'GPSAcquisAssist-R12-Ext',
        'SeqOfGPSAcquisAssist-R12-Ext',
        'GPSAcquisAssist-R12-Ext-Element',
        'GPSAlmanac-R10-Ext',
        'Rel-7-MsrPosition-Rsp-Extension',
        'GANSSLocationInfo',
        'PositionData',
        'GANSSTODm',
        'ReferenceFrame',
        'GANSSMeasureInfo',
        'SeqOfGANSS-MsrSetElement',
        'GANSS-MsrSetElement',
        'SeqOfGANSS-MsrElement',
        'GANSS-MsrElement',
        'SeqOfGANSS-SgnTypeElement',
        'GANSS-SgnTypeElement',
        'SeqOfGANSS-SgnElement',
        'GANSS-SgnElement',
        'Rel7-AssistanceData-Extension',
        'BDS-DiffCorrections-r12',
        'BDS-SgnTypeList-r12',
        'BDS-SgnTypeElement-r12',
        'DBDS-CorrectionList-r12',
        'DBDS-CorrectionElement-r12',
        'BDS-GridModelParameter-r12',
        'GridIonList-r12',
        'GridIonElement-r12',
        'PosCapabilities',
        'NonGANSSPositionMethods',
        'GANSSPositionMethods',
        'GANSSPositionMethod',
        'GANSSPositioningMethodTypes',
        'GANSSSignals',
        'SBASID',
        'MultipleMeasurementSets',
        'AssistanceSupported',
        'GPSAssistance',
        'GANSSAssistanceSet',
        'CommonGANSSAssistance',
        'SpecificGANSSAssistance',
        'GANSSAssistanceForOneGANSS',
        'GANSSAssistance',
        'GANSSAdditionalAssistanceChoices',
        'GANSSAdditionalAssistanceChoicesForOneGANSS',
        'GANSSModelID',
        'AssistanceNeeded',
        ]
    _type_ = [
        'MsrPosition-Req',
        'MsrPosition-Rsp',
        'AssistanceData',
        'ProtocolError',
        'PosCapability-Req',
        'PosCapability-Rsp',
        'PositionInstruct',
        'MethodType',
        'AccuracyOpt',
        'Accuracy',
        'PositionMethod',
        'MeasureResponseTime',
        'UseMultipleSets',
        'EnvironmentCharacter',
        'ReferenceAssistData',
        'BTSPosition',
        'BCCHCarrier',
        'BSIC',
        'TimeSlotScheme',
        'ModuloTimeSlot',
        'MsrAssistData',
        'SeqOfMsrAssistBTS',
        'MsrAssistBTS',
        'MultiFrameOffset',
        'RoughRTD',
        'SystemInfoAssistData',
        'SeqOfSystemInfoAssistBTS',
        'SystemInfoAssistBTS',
        'AssistBTSData',
        'CalcAssistanceBTS',
        'ReferenceWGS84',
        'FineRTD',
        'RelDistance',
        'RelativeAlt',
        'MultipleSets',
        'ReferenceRelation',
        'ReferenceIdentity',
        'SeqOfReferenceIdentityType',
        'ReferenceIdentityType',
        'BSICAndCarrier',
        'RequestIndex',
        'SystemInfoIndex',
        'CellIDAndLAC',
        'CellID',
        'LAC',
        'OTD-MeasureInfo',
        'SeqOfOTD-MsrElementRest',
        'OTD-MsrElementFirst',
        'SeqOfOTD-FirstSetMsrs',
        'OTD-MsrElementRest',
        'SeqOfOTD-MsrsOfOtherSets',
        'TOA-MeasurementsOfRef',
        'RefQuality',
        'NumOfMeasurements',
        'StdResolution',
        'OTD-FirstSetMsrs',
        'OTD-MsrsOfOtherSets',
        'OTD-Measurement',
        'OTD-MeasurementWithID',
        'EOTDQuality',
        'NeighborIdentity',
        'MultiFrameCarrier',
        'OTDValue',
        'LocationInfo',
        'FixType',
        'GPS-MeasureInfo',
        'SeqOfGPS-MsrSetElement',
        'GPS-MsrSetElement',
        'GPSTOW24b',
        'SeqOfGPS-MsrElement',
        'GPS-MsrElement',
        'MpathIndic',
        'LocationError',
        'LocErrorReason',
        'AdditionalAssistanceData',
        'GPSAssistanceData',
        'GANSSAssistanceData',
        'ErrorCodes',
        'GPS-AssistData',
        'MoreAssDataToBeSent',
        'ControlHeader',
        'ReferenceTime',
        'GPSTime',
        'GPSTOW23b',
        'GPSWeek',
        'GPSTOWAssist',
        'GPSTOWAssistElement',
        'TLMWord',
        'AntiSpoofFlag',
        'AlertFlag',
        'TLMReservedBits',
        'GSMTime',
        'FrameNumber',
        'TimeSlot',
        'BitNumber',
        'RefLocation',
        'DGPSCorrections',
        'SeqOfSatElement',
        'SatElement',
        'SatelliteID',
        'NavigationModel',
        'SeqOfNavModelElement',
        'NavModelElement',
        'SatStatus',
        'UncompressedEphemeris',
        'EphemerisSubframe1Reserved',
        'IonosphericModel',
        'UTCModel',
        'Almanac',
        'SeqOfAlmanacElement',
        'AlmanacElement',
        'AcquisAssist',
        'SeqOfAcquisElement',
        'TimeRelation',
        'AcquisElement',
        'AddionalDopplerFields',
        'AddionalAngleFields',
        'SeqOf-BadSatelliteSet',
        'Rel98-MsrPosition-Req-Extension',
        'Rel98-AssistanceData-Extension',
        'Rel98-Ext-ExpOTD',
        'MsrAssistData-R98-ExpOTD',
        'SeqOfMsrAssistBTS-R98-ExpOTD',
        'MsrAssistBTS-R98-ExpOTD',
        'SystemInfoAssistData-R98-ExpOTD',
        'SeqOfSystemInfoAssistBTS-R98-ExpOTD',
        'SystemInfoAssistBTS-R98-ExpOTD',
        'AssistBTSData-R98-ExpOTD',
        'ExpectedOTD',
        'ExpOTDUncertainty',
        'GPSReferenceTimeUncertainty',
        'GPSTimeAssistanceMeasurements',
        'Rel-98-MsrPosition-Rsp-Extension',
        'OTD-MeasureInfo-R98-Ext',
        'OTD-MsrElementFirst-R98-Ext',
        'SeqOfOTD-FirstSetMsrs-R98-Ext',
        'Rel-5-MsrPosition-Rsp-Extension',
        'Extended-reference',
        'OTD-MeasureInfo-5-Ext',
        'UlPseudoSegInd',
        'Rel5-MsrPosition-Req-Extension',
        'Rel5-AssistanceData-Extension',
        'Rel-5-ProtocolError-Extension',
        'Rel7-MsrPosition-Req-Extension',
        'GANSSPositioningMethod',
        'GANSS-AssistData',
        'GANSS-ControlHeader',
        'GANSSCommonAssistData',
        'SeqOfGANSSGenericAssistDataElement',
        'GANSSGenericAssistDataElement',
        'GANSSReferenceTime',
        'GANSSRefTimeInfo',
        'GANSSTOD',
        'GANSSTODUncertainty',
        'GANSSReferenceTime-R10-Ext',
        'GANSSTOD-GSMTimeAssociation',
        'FrameDrift',
        'GANSSRefLocation',
        'GANSSIonosphericModel',
        'GANSSIonosphereModel',
        'GANSSIonoStormFlags',
        'GANSSAddIonosphericModel',
        'GANSSEarthOrientParam',
        'SeqOfGANSSTimeModel',
        'GANSSTimeModelElement',
        'TA0',
        'TA1',
        'TA2',
        'SeqOfGANSSTimeModel-R10-Ext',
        'GANSSTimeModelElement-R10-Ext',
        'GANSSDiffCorrections',
        'SeqOfSgnTypeElement',
        'SgnTypeElement',
        'GANSSSignalID',
        'SeqOfDGANSSSgnElement',
        'DGANSSSgnElement',
        'SVID',
        'GANSSNavModel',
        'SeqOfGANSSSatelliteElement',
        'GANSSSatelliteElement',
        'GANSSOrbitModel',
        'NavModel-KeplerianSet',
        'NavModel-NAVKeplerianSet',
        'NavModel-CNAVKeplerianSet',
        'NavModel-GLONASSecef',
        'NavModel-SBASecef',
        'NavModel-BDSKeplerianSet-r12',
        'GANSSClockModel',
        'SeqOfStandardClockModelElement',
        'StandardClockModelElement',
        'NAVclockModel',
        'CNAVclockModel',
        'GLONASSclockModel',
        'SBASclockModel',
        'BDSClockModel-r12',
        'GANSSRealTimeIntegrity',
        'SeqOfBadSignalElement',
        'BadSignalElement',
        'GANSSDataBitAssist',
        'SeqOfGanssDataBitsElement',
        'GanssDataBitsElement',
        'Seq-OfGANSSDataBitsSgn',
        'GANSSDataBitsSgnElement',
        'SeqOf-GANSSDataBits',
        'GANSSDataBit',
        'GANSSRefMeasurementAssist',
        'SeqOfGANSSRefMeasurementElement',
        'GANSSRefMeasurementElement',
        'AdditionalDopplerFields',
        'GANSSRefMeasurementAssist-R10-Ext',
        'GANSSRefMeasurement-R10-Ext-Element',
        'GANSSRefMeasurementAssist-R12-Ext',
        'SeqOfGANSSRefMeasurementElement-R12',
        'GANSSRefMeasurement-R12-Ext-Element',
        'GANSSAlmanacModel',
        'SeqOfGANSSAlmanacElement',
        'GANSSAlmanacElement',
        'Almanac-KeplerianSet',
        'Almanac-NAVKeplerianSet',
        'Almanac-ReducedKeplerianSet',
        'Almanac-MidiAlmanacSet',
        'Almanac-GlonassAlmanacSet',
        'Almanac-ECEFsbasAlmanacSet',
        'Almanac-BDSAlmanacSet-r12',
        'GANSSAlmanacModel-R10-Ext',
        'GANSSAlmanacModel-R12-Ext',
        'GANSSUTCModel',
        'GANSSEphemerisExtension',
        'GANSSEphemerisExtensionHeader',
        'GANSSEphemerisExtensionTime',
        'ReferenceNavModel',
        'SeqOfGANSSRefOrbit',
        'GANSSReferenceOrbit',
        'GANSSEphemerisDeltaMatrix',
        'GANSSEphemerisDeltaEpoch',
        'GANSSDeltaEpochHeader',
        'GANSSDeltaElementList',
        'GANSSEphemerisDeltaBitSizes',
        'GANSSEphemerisDeltaScales',
        'GANSSEphemerisExtensionCheck',
        'GANSSSatEventsInfo',
        'GANSSAddUTCModel',
        'UTCmodelSet2',
        'UTCmodelSet3',
        'UTCmodelSet4',
        'UTCmodelSet5-r12',
        'GANSSAuxiliaryInformation',
        'GANSS-ID1',
        'GANSS-ID1-element',
        'GANSS-ID3',
        'GANSS-ID3-element',
        'GANSSDiffCorrectionsValidityPeriod',
        'DGANSSExtensionSgnTypeElement',
        'SeqOfDGANSSExtensionSgnElement',
        'DGANSSExtensionSgnElement',
        'RequiredResponseTime',
        'Add-GPS-AssistData',
        'Add-GPS-ControlHeader',
        'GPSClockModel',
        'GPSEphemerisExtension',
        'GPSEphemerisExtensionHeader',
        'GPSEphemerisExtensionTime',
        'SeqOfGPSRefOrbit',
        'GPSReferenceOrbit',
        'GPSEphemerisDeltaMatrix',
        'GPSEphemerisDeltaEpoch',
        'GPSDeltaEpochHeader',
        'GPSDeltaElementList',
        'GPSEphemerisDeltaBitSizes',
        'GPSEphemerisDeltaScales',
        'GPSEphemerisExtensionCheck',
        'GPSSatEventsInfo',
        'DGPSCorrectionsValidityPeriod',
        'DGPSExtensionSatElement',
        'GPSReferenceTime-R10-Ext',
        'GPSAcquisAssist-R10-Ext',
        'GPSAcquisAssist-R10-Ext-Element',
        'GPSAcquisAssist-R12-Ext',
        'SeqOfGPSAcquisAssist-R12-Ext',
        'GPSAcquisAssist-R12-Ext-Element',
        'GPSAlmanac-R10-Ext',
        'Rel-7-MsrPosition-Rsp-Extension',
        'GANSSLocationInfo',
        'PositionData',
        'GANSSTODm',
        'ReferenceFrame',
        'GANSSMeasureInfo',
        'SeqOfGANSS-MsrSetElement',
        'GANSS-MsrSetElement',
        'SeqOfGANSS-MsrElement',
        'GANSS-MsrElement',
        'SeqOfGANSS-SgnTypeElement',
        'GANSS-SgnTypeElement',
        'SeqOfGANSS-SgnElement',
        'GANSS-SgnElement',
        'Rel7-AssistanceData-Extension',
        'BDS-DiffCorrections-r12',
        'BDS-SgnTypeList-r12',
        'BDS-SgnTypeElement-r12',
        'DBDS-CorrectionList-r12',
        'DBDS-CorrectionElement-r12',
        'BDS-GridModelParameter-r12',
        'GridIonList-r12',
        'GridIonElement-r12',
        'PosCapabilities',
        'NonGANSSPositionMethods',
        'GANSSPositionMethods',
        'GANSSPositionMethod',
        'GANSSPositioningMethodTypes',
        'GANSSSignals',
        'SBASID',
        'MultipleMeasurementSets',
        'AssistanceSupported',
        'GPSAssistance',
        'GANSSAssistanceSet',
        'CommonGANSSAssistance',
        'SpecificGANSSAssistance',
        'GANSSAssistanceForOneGANSS',
        'GANSSAssistance',
        'GANSSAdditionalAssistanceChoices',
        'GANSSAdditionalAssistanceChoicesForOneGANSS',
        'GANSSModelID',
        'AssistanceNeeded',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxGPSAssistanceData',
        'maxGANSSAssistanceData',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< MsrPosition-Req >-----#
    MsrPosition_Req = SEQ(name='MsrPosition-Req', mode=MODE_TYPE)
    _MsrPosition_Req_positionInstruct = SEQ(name='positionInstruct', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'PositionInstruct')))
    _MsrPosition_Req_referenceAssistData = SEQ(name='referenceAssistData', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ReferenceAssistData')), opt=True)
    _MsrPosition_Req_msrAssistData = SEQ(name='msrAssistData', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'MsrAssistData')), opt=True)
    _MsrPosition_Req_systemInfoAssistData = SEQ(name='systemInfoAssistData', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SystemInfoAssistData')), opt=True)
    _MsrPosition_Req_gps_AssistData = SEQ(name='gps-AssistData', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPS-AssistData')), opt=True)
    _MsrPosition_Req_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _MsrPosition_Req_rel98_MsrPosition_Req_extension = SEQ(name='rel98-MsrPosition-Req-extension', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Rel98-MsrPosition-Req-Extension')), opt=True)
    _MsrPosition_Req_rel5_MsrPosition_Req_extension = SEQ(name='rel5-MsrPosition-Req-extension', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Rel5-MsrPosition-Req-Extension')), opt=True)
    _MsrPosition_Req_rel7_MsrPosition_Req_extension = SEQ(name='rel7-MsrPosition-Req-extension', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Rel7-MsrPosition-Req-Extension')), opt=True)
    MsrPosition_Req._cont = ASN1Dict([
        ('positionInstruct', _MsrPosition_Req_positionInstruct),
        ('referenceAssistData', _MsrPosition_Req_referenceAssistData),
        ('msrAssistData', _MsrPosition_Req_msrAssistData),
        ('systemInfoAssistData', _MsrPosition_Req_systemInfoAssistData),
        ('gps-AssistData', _MsrPosition_Req_gps_AssistData),
        ('extensionContainer', _MsrPosition_Req_extensionContainer),
        ('rel98-MsrPosition-Req-extension', _MsrPosition_Req_rel98_MsrPosition_Req_extension),
        ('rel5-MsrPosition-Req-extension', _MsrPosition_Req_rel5_MsrPosition_Req_extension),
        ('rel7-MsrPosition-Req-extension', _MsrPosition_Req_rel7_MsrPosition_Req_extension),
        ])
    MsrPosition_Req._ext = ['rel98-MsrPosition-Req-extension', 'rel5-MsrPosition-Req-extension', 'rel7-MsrPosition-Req-extension']
    
    #-----< MsrPosition-Rsp >-----#
    MsrPosition_Rsp = SEQ(name='MsrPosition-Rsp', mode=MODE_TYPE)
    _MsrPosition_Rsp_multipleSets = SEQ(name='multipleSets', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'MultipleSets')), opt=True)
    _MsrPosition_Rsp_referenceIdentity = SEQ(name='referenceIdentity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ReferenceIdentity')), opt=True)
    _MsrPosition_Rsp_otd_MeasureInfo = SEQ(name='otd-MeasureInfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'OTD-MeasureInfo')), opt=True)
    _MsrPosition_Rsp_locationInfo = SEQ(name='locationInfo', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'LocationInfo')), opt=True)
    _MsrPosition_Rsp_gps_MeasureInfo = SEQ(name='gps-MeasureInfo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPS-MeasureInfo')), opt=True)
    _MsrPosition_Rsp_locationError = SEQ(name='locationError', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'LocationError')), opt=True)
    _MsrPosition_Rsp_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _MsrPosition_Rsp_rel_98_MsrPosition_Rsp_Extension = SEQ(name='rel-98-MsrPosition-Rsp-Extension', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Rel-98-MsrPosition-Rsp-Extension')), opt=True)
    _MsrPosition_Rsp_rel_5_MsrPosition_Rsp_Extension = SEQ(name='rel-5-MsrPosition-Rsp-Extension', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Rel-5-MsrPosition-Rsp-Extension')), opt=True)
    _MsrPosition_Rsp_rel_7_MsrPosition_Rsp_Extension = SEQ(name='rel-7-MsrPosition-Rsp-Extension', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Rel-7-MsrPosition-Rsp-Extension')), opt=True)
    MsrPosition_Rsp._cont = ASN1Dict([
        ('multipleSets', _MsrPosition_Rsp_multipleSets),
        ('referenceIdentity', _MsrPosition_Rsp_referenceIdentity),
        ('otd-MeasureInfo', _MsrPosition_Rsp_otd_MeasureInfo),
        ('locationInfo', _MsrPosition_Rsp_locationInfo),
        ('gps-MeasureInfo', _MsrPosition_Rsp_gps_MeasureInfo),
        ('locationError', _MsrPosition_Rsp_locationError),
        ('extensionContainer', _MsrPosition_Rsp_extensionContainer),
        ('rel-98-MsrPosition-Rsp-Extension', _MsrPosition_Rsp_rel_98_MsrPosition_Rsp_Extension),
        ('rel-5-MsrPosition-Rsp-Extension', _MsrPosition_Rsp_rel_5_MsrPosition_Rsp_Extension),
        ('rel-7-MsrPosition-Rsp-Extension', _MsrPosition_Rsp_rel_7_MsrPosition_Rsp_Extension),
        ])
    MsrPosition_Rsp._ext = ['rel-98-MsrPosition-Rsp-Extension', 'rel-5-MsrPosition-Rsp-Extension', 'rel-7-MsrPosition-Rsp-Extension']
    
    #-----< AssistanceData >-----#
    AssistanceData = SEQ(name='AssistanceData', mode=MODE_TYPE)
    _AssistanceData_referenceAssistData = SEQ(name='referenceAssistData', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ReferenceAssistData')), opt=True)
    _AssistanceData_msrAssistData = SEQ(name='msrAssistData', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'MsrAssistData')), opt=True)
    _AssistanceData_systemInfoAssistData = SEQ(name='systemInfoAssistData', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SystemInfoAssistData')), opt=True)
    _AssistanceData_gps_AssistData = SEQ(name='gps-AssistData', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPS-AssistData')), opt=True)
    _AssistanceData_moreAssDataToBeSent = ENUM(name='moreAssDataToBeSent', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'MoreAssDataToBeSent')), opt=True)
    _AssistanceData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _AssistanceData_rel98_AssistanceData_Extension = SEQ(name='rel98-AssistanceData-Extension', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Rel98-AssistanceData-Extension')), opt=True)
    _AssistanceData_rel5_AssistanceData_Extension = SEQ(name='rel5-AssistanceData-Extension', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Rel5-AssistanceData-Extension')), opt=True)
    _AssistanceData_rel7_AssistanceData_Extension = SEQ(name='rel7-AssistanceData-Extension', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Rel7-AssistanceData-Extension')), opt=True)
    AssistanceData._cont = ASN1Dict([
        ('referenceAssistData', _AssistanceData_referenceAssistData),
        ('msrAssistData', _AssistanceData_msrAssistData),
        ('systemInfoAssistData', _AssistanceData_systemInfoAssistData),
        ('gps-AssistData', _AssistanceData_gps_AssistData),
        ('moreAssDataToBeSent', _AssistanceData_moreAssDataToBeSent),
        ('extensionContainer', _AssistanceData_extensionContainer),
        ('rel98-AssistanceData-Extension', _AssistanceData_rel98_AssistanceData_Extension),
        ('rel5-AssistanceData-Extension', _AssistanceData_rel5_AssistanceData_Extension),
        ('rel7-AssistanceData-Extension', _AssistanceData_rel7_AssistanceData_Extension),
        ])
    AssistanceData._ext = ['rel98-AssistanceData-Extension', 'rel5-AssistanceData-Extension', 'rel7-AssistanceData-Extension']
    
    #-----< ProtocolError >-----#
    ProtocolError = SEQ(name='ProtocolError', mode=MODE_TYPE)
    _ProtocolError_errorCause = ENUM(name='errorCause', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ErrorCodes')))
    _ProtocolError_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _ProtocolError_rel_5_ProtocolError_Extension = SEQ(name='rel-5-ProtocolError-Extension', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Rel-5-ProtocolError-Extension')), opt=True)
    ProtocolError._cont = ASN1Dict([
        ('errorCause', _ProtocolError_errorCause),
        ('extensionContainer', _ProtocolError_extensionContainer),
        ('rel-5-ProtocolError-Extension', _ProtocolError_rel_5_ProtocolError_Extension),
        ])
    ProtocolError._ext = ['rel-5-ProtocolError-Extension']
    
    #-----< PosCapability-Req >-----#
    PosCapability_Req = SEQ(name='PosCapability-Req', mode=MODE_TYPE)
    _PosCapability_Req_extended_reference = SEQ(name='extended-reference', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Extended-reference')))
    _PosCapability_Req_gANSSPositionMethods = SEQ_OF(name='gANSSPositionMethods', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSPositionMethods')), opt=True)
    _PosCapability_Req_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    PosCapability_Req._cont = ASN1Dict([
        ('extended-reference', _PosCapability_Req_extended_reference),
        ('gANSSPositionMethods', _PosCapability_Req_gANSSPositionMethods),
        ('extensionContainer', _PosCapability_Req_extensionContainer),
        ])
    PosCapability_Req._ext = []
    
    #-----< PosCapability-Rsp >-----#
    PosCapability_Rsp = SEQ(name='PosCapability-Rsp', mode=MODE_TYPE)
    _PosCapability_Rsp_extended_reference = SEQ(name='extended-reference', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Extended-reference')))
    _PosCapability_Rsp_posCapabilities = SEQ(name='posCapabilities', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'PosCapabilities')))
    _PosCapability_Rsp_assistanceSupported = SEQ(name='assistanceSupported', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'AssistanceSupported')), opt=True)
    _PosCapability_Rsp_assistanceNeeded = SEQ(name='assistanceNeeded', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'AssistanceNeeded')), opt=True)
    _PosCapability_Rsp_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    PosCapability_Rsp._cont = ASN1Dict([
        ('extended-reference', _PosCapability_Rsp_extended_reference),
        ('posCapabilities', _PosCapability_Rsp_posCapabilities),
        ('assistanceSupported', _PosCapability_Rsp_assistanceSupported),
        ('assistanceNeeded', _PosCapability_Rsp_assistanceNeeded),
        ('extensionContainer', _PosCapability_Rsp_extensionContainer),
        ])
    PosCapability_Rsp._ext = []
    
    #-----< PositionInstruct >-----#
    PositionInstruct = SEQ(name='PositionInstruct', mode=MODE_TYPE)
    _PositionInstruct_methodType = CHOICE(name='methodType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('RRLP-Components', 'MethodType')))
    _PositionInstruct_positionMethod = ENUM(name='positionMethod', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'PositionMethod')))
    _PositionInstruct_measureResponseTime = INT(name='measureResponseTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'MeasureResponseTime')))
    _PositionInstruct_useMultipleSets = ENUM(name='useMultipleSets', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'UseMultipleSets')))
    _PositionInstruct_environmentCharacter = ENUM(name='environmentCharacter', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'EnvironmentCharacter')), opt=True)
    PositionInstruct._cont = ASN1Dict([
        ('methodType', _PositionInstruct_methodType),
        ('positionMethod', _PositionInstruct_positionMethod),
        ('measureResponseTime', _PositionInstruct_measureResponseTime),
        ('useMultipleSets', _PositionInstruct_useMultipleSets),
        ('environmentCharacter', _PositionInstruct_environmentCharacter),
        ])
    PositionInstruct._ext = None
    
    #-----< MethodType >-----#
    MethodType = CHOICE(name='MethodType', mode=MODE_TYPE)
    _MethodType_msAssisted = SEQ(name='msAssisted', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'AccuracyOpt')))
    _MethodType_msBased = INT(name='msBased', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Accuracy')))
    _MethodType_msBasedPref = INT(name='msBasedPref', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Accuracy')))
    _MethodType_msAssistedPref = INT(name='msAssistedPref', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Accuracy')))
    MethodType._cont = ASN1Dict([
        ('msAssisted', _MethodType_msAssisted),
        ('msBased', _MethodType_msBased),
        ('msBasedPref', _MethodType_msBasedPref),
        ('msAssistedPref', _MethodType_msAssistedPref),
        ])
    MethodType._ext = None
    
    #-----< AccuracyOpt >-----#
    AccuracyOpt = SEQ(name='AccuracyOpt', mode=MODE_TYPE)
    _AccuracyOpt_accuracy = INT(name='accuracy', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Accuracy')), opt=True)
    AccuracyOpt._cont = ASN1Dict([
        ('accuracy', _AccuracyOpt_accuracy),
        ])
    AccuracyOpt._ext = None
    
    #-----< Accuracy >-----#
    Accuracy = INT(name='Accuracy', mode=MODE_TYPE)
    Accuracy._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< PositionMethod >-----#
    PositionMethod = ENUM(name='PositionMethod', mode=MODE_TYPE)
    PositionMethod._cont = ASN1Dict([('eotd', 0), ('gps', 1), ('gpsOrEOTD', 2)])
    PositionMethod._ext = None
    
    #-----< MeasureResponseTime >-----#
    MeasureResponseTime = INT(name='MeasureResponseTime', mode=MODE_TYPE)
    MeasureResponseTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< UseMultipleSets >-----#
    UseMultipleSets = ENUM(name='UseMultipleSets', mode=MODE_TYPE)
    UseMultipleSets._cont = ASN1Dict([('multipleSets', 0), ('oneSet', 1)])
    UseMultipleSets._ext = None
    
    #-----< EnvironmentCharacter >-----#
    EnvironmentCharacter = ENUM(name='EnvironmentCharacter', mode=MODE_TYPE)
    EnvironmentCharacter._cont = ASN1Dict([('badArea', 0), ('notBadArea', 1), ('mixedArea', 2)])
    EnvironmentCharacter._ext = []
    
    #-----< ReferenceAssistData >-----#
    ReferenceAssistData = SEQ(name='ReferenceAssistData', mode=MODE_TYPE)
    _ReferenceAssistData_bcchCarrier = INT(name='bcchCarrier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BCCHCarrier')))
    _ReferenceAssistData_bsic = INT(name='bsic', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BSIC')))
    _ReferenceAssistData_timeSlotScheme = ENUM(name='timeSlotScheme', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'TimeSlotScheme')))
    _ReferenceAssistData_btsPosition = OCT_STR(name='btsPosition', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BTSPosition')), opt=True)
    ReferenceAssistData._cont = ASN1Dict([
        ('bcchCarrier', _ReferenceAssistData_bcchCarrier),
        ('bsic', _ReferenceAssistData_bsic),
        ('timeSlotScheme', _ReferenceAssistData_timeSlotScheme),
        ('btsPosition', _ReferenceAssistData_btsPosition),
        ])
    ReferenceAssistData._ext = None
    
    #-----< BTSPosition >-----#
    BTSPosition = OCT_STR(name='BTSPosition', mode=MODE_TYPE, typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Ext-GeographicalInformation')))
    
    #-----< BCCHCarrier >-----#
    BCCHCarrier = INT(name='BCCHCarrier', mode=MODE_TYPE)
    BCCHCarrier._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    
    #-----< BSIC >-----#
    BSIC = INT(name='BSIC', mode=MODE_TYPE)
    BSIC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    
    #-----< TimeSlotScheme >-----#
    TimeSlotScheme = ENUM(name='TimeSlotScheme', mode=MODE_TYPE)
    TimeSlotScheme._cont = ASN1Dict([('equalLength', 0), ('variousLength', 1)])
    TimeSlotScheme._ext = None
    
    #-----< ModuloTimeSlot >-----#
    ModuloTimeSlot = INT(name='ModuloTimeSlot', mode=MODE_TYPE)
    ModuloTimeSlot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    
    #-----< MsrAssistData >-----#
    MsrAssistData = SEQ(name='MsrAssistData', mode=MODE_TYPE)
    _MsrAssistData_msrAssistList = SEQ_OF(name='msrAssistList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfMsrAssistBTS')))
    MsrAssistData._cont = ASN1Dict([
        ('msrAssistList', _MsrAssistData_msrAssistList),
        ])
    MsrAssistData._ext = None
    
    #-----< SeqOfMsrAssistBTS >-----#
    SeqOfMsrAssistBTS = SEQ_OF(name='SeqOfMsrAssistBTS', mode=MODE_TYPE)
    _SeqOfMsrAssistBTS__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'MsrAssistBTS')))
    SeqOfMsrAssistBTS._cont = _SeqOfMsrAssistBTS__item_
    SeqOfMsrAssistBTS._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    
    #-----< MsrAssistBTS >-----#
    MsrAssistBTS = SEQ(name='MsrAssistBTS', mode=MODE_TYPE)
    _MsrAssistBTS_bcchCarrier = INT(name='bcchCarrier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BCCHCarrier')))
    _MsrAssistBTS_bsic = INT(name='bsic', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BSIC')))
    _MsrAssistBTS_multiFrameOffset = INT(name='multiFrameOffset', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'MultiFrameOffset')))
    _MsrAssistBTS_timeSlotScheme = ENUM(name='timeSlotScheme', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'TimeSlotScheme')))
    _MsrAssistBTS_roughRTD = INT(name='roughRTD', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'RoughRTD')))
    _MsrAssistBTS_calcAssistanceBTS = SEQ(name='calcAssistanceBTS', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'CalcAssistanceBTS')), opt=True)
    MsrAssistBTS._cont = ASN1Dict([
        ('bcchCarrier', _MsrAssistBTS_bcchCarrier),
        ('bsic', _MsrAssistBTS_bsic),
        ('multiFrameOffset', _MsrAssistBTS_multiFrameOffset),
        ('timeSlotScheme', _MsrAssistBTS_timeSlotScheme),
        ('roughRTD', _MsrAssistBTS_roughRTD),
        ('calcAssistanceBTS', _MsrAssistBTS_calcAssistanceBTS),
        ])
    MsrAssistBTS._ext = None
    
    #-----< MultiFrameOffset >-----#
    MultiFrameOffset = INT(name='MultiFrameOffset', mode=MODE_TYPE)
    MultiFrameOffset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=51)], ev=None, er=[])
    
    #-----< RoughRTD >-----#
    RoughRTD = INT(name='RoughRTD', mode=MODE_TYPE)
    RoughRTD._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1250)], ev=None, er=[])
    
    #-----< SystemInfoAssistData >-----#
    SystemInfoAssistData = SEQ(name='SystemInfoAssistData', mode=MODE_TYPE)
    _SystemInfoAssistData_systemInfoAssistList = SEQ_OF(name='systemInfoAssistList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfSystemInfoAssistBTS')))
    SystemInfoAssistData._cont = ASN1Dict([
        ('systemInfoAssistList', _SystemInfoAssistData_systemInfoAssistList),
        ])
    SystemInfoAssistData._ext = None
    
    #-----< SeqOfSystemInfoAssistBTS >-----#
    SeqOfSystemInfoAssistBTS = SEQ_OF(name='SeqOfSystemInfoAssistBTS', mode=MODE_TYPE)
    _SeqOfSystemInfoAssistBTS__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'SystemInfoAssistBTS')))
    SeqOfSystemInfoAssistBTS._cont = _SeqOfSystemInfoAssistBTS__item_
    SeqOfSystemInfoAssistBTS._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< SystemInfoAssistBTS >-----#
    SystemInfoAssistBTS = CHOICE(name='SystemInfoAssistBTS', mode=MODE_TYPE)
    _SystemInfoAssistBTS_notPresent = NULL(name='notPresent', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SystemInfoAssistBTS_present = SEQ(name='present', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'AssistBTSData')))
    SystemInfoAssistBTS._cont = ASN1Dict([
        ('notPresent', _SystemInfoAssistBTS_notPresent),
        ('present', _SystemInfoAssistBTS_present),
        ])
    SystemInfoAssistBTS._ext = None
    
    #-----< AssistBTSData >-----#
    AssistBTSData = SEQ(name='AssistBTSData', mode=MODE_TYPE)
    _AssistBTSData_bsic = INT(name='bsic', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BSIC')))
    _AssistBTSData_multiFrameOffset = INT(name='multiFrameOffset', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'MultiFrameOffset')))
    _AssistBTSData_timeSlotScheme = ENUM(name='timeSlotScheme', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'TimeSlotScheme')))
    _AssistBTSData_roughRTD = INT(name='roughRTD', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'RoughRTD')))
    _AssistBTSData_calcAssistanceBTS = SEQ(name='calcAssistanceBTS', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'CalcAssistanceBTS')), opt=True)
    AssistBTSData._cont = ASN1Dict([
        ('bsic', _AssistBTSData_bsic),
        ('multiFrameOffset', _AssistBTSData_multiFrameOffset),
        ('timeSlotScheme', _AssistBTSData_timeSlotScheme),
        ('roughRTD', _AssistBTSData_roughRTD),
        ('calcAssistanceBTS', _AssistBTSData_calcAssistanceBTS),
        ])
    AssistBTSData._ext = None
    
    #-----< CalcAssistanceBTS >-----#
    CalcAssistanceBTS = SEQ(name='CalcAssistanceBTS', mode=MODE_TYPE)
    _CalcAssistanceBTS_fineRTD = INT(name='fineRTD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'FineRTD')))
    _CalcAssistanceBTS_referenceWGS84 = SEQ(name='referenceWGS84', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ReferenceWGS84')))
    CalcAssistanceBTS._cont = ASN1Dict([
        ('fineRTD', _CalcAssistanceBTS_fineRTD),
        ('referenceWGS84', _CalcAssistanceBTS_referenceWGS84),
        ])
    CalcAssistanceBTS._ext = None
    
    #-----< ReferenceWGS84 >-----#
    ReferenceWGS84 = SEQ(name='ReferenceWGS84', mode=MODE_TYPE)
    _ReferenceWGS84_relativeNorth = INT(name='relativeNorth', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'RelDistance')))
    _ReferenceWGS84_relativeEast = INT(name='relativeEast', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'RelDistance')))
    _ReferenceWGS84_relativeAlt = INT(name='relativeAlt', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'RelativeAlt')), opt=True)
    ReferenceWGS84._cont = ASN1Dict([
        ('relativeNorth', _ReferenceWGS84_relativeNorth),
        ('relativeEast', _ReferenceWGS84_relativeEast),
        ('relativeAlt', _ReferenceWGS84_relativeAlt),
        ])
    ReferenceWGS84._ext = None
    
    #-----< FineRTD >-----#
    FineRTD = INT(name='FineRTD', mode=MODE_TYPE)
    FineRTD._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< RelDistance >-----#
    RelDistance = INT(name='RelDistance', mode=MODE_TYPE)
    RelDistance._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-200000, ub=200000)], ev=None, er=[])
    
    #-----< RelativeAlt >-----#
    RelativeAlt = INT(name='RelativeAlt', mode=MODE_TYPE)
    RelativeAlt._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4000, ub=4000)], ev=None, er=[])
    
    #-----< MultipleSets >-----#
    MultipleSets = SEQ(name='MultipleSets', mode=MODE_TYPE)
    _MultipleSets_nbrOfSets = INT(name='nbrOfSets', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MultipleSets_nbrOfSets._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=3)], ev=None, er=[])
    _MultipleSets_nbrOfReferenceBTSs = INT(name='nbrOfReferenceBTSs', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MultipleSets_nbrOfReferenceBTSs._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    _MultipleSets_referenceRelation = ENUM(name='referenceRelation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ReferenceRelation')), opt=True)
    MultipleSets._cont = ASN1Dict([
        ('nbrOfSets', _MultipleSets_nbrOfSets),
        ('nbrOfReferenceBTSs', _MultipleSets_nbrOfReferenceBTSs),
        ('referenceRelation', _MultipleSets_referenceRelation),
        ])
    MultipleSets._ext = None
    
    #-----< ReferenceRelation >-----#
    ReferenceRelation = ENUM(name='ReferenceRelation', mode=MODE_TYPE)
    ReferenceRelation._cont = ASN1Dict([('secondBTSThirdSet', 0), ('secondBTSSecondSet', 1), ('firstBTSFirstSet', 2)])
    ReferenceRelation._ext = None
    
    #-----< ReferenceIdentity >-----#
    ReferenceIdentity = SEQ(name='ReferenceIdentity', mode=MODE_TYPE)
    _ReferenceIdentity_refBTSList = SEQ_OF(name='refBTSList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfReferenceIdentityType')))
    ReferenceIdentity._cont = ASN1Dict([
        ('refBTSList', _ReferenceIdentity_refBTSList),
        ])
    ReferenceIdentity._ext = None
    
    #-----< SeqOfReferenceIdentityType >-----#
    SeqOfReferenceIdentityType = SEQ_OF(name='SeqOfReferenceIdentityType', mode=MODE_TYPE)
    _SeqOfReferenceIdentityType__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'ReferenceIdentityType')))
    SeqOfReferenceIdentityType._cont = _SeqOfReferenceIdentityType__item_
    SeqOfReferenceIdentityType._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< ReferenceIdentityType >-----#
    ReferenceIdentityType = CHOICE(name='ReferenceIdentityType', mode=MODE_TYPE)
    _ReferenceIdentityType_bsicAndCarrier = SEQ(name='bsicAndCarrier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BSICAndCarrier')))
    _ReferenceIdentityType_ci = INT(name='ci', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'CellID')))
    _ReferenceIdentityType_requestIndex = INT(name='requestIndex', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'RequestIndex')))
    _ReferenceIdentityType_systemInfoIndex = INT(name='systemInfoIndex', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SystemInfoIndex')))
    _ReferenceIdentityType_ciAndLAC = SEQ(name='ciAndLAC', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'CellIDAndLAC')))
    ReferenceIdentityType._cont = ASN1Dict([
        ('bsicAndCarrier', _ReferenceIdentityType_bsicAndCarrier),
        ('ci', _ReferenceIdentityType_ci),
        ('requestIndex', _ReferenceIdentityType_requestIndex),
        ('systemInfoIndex', _ReferenceIdentityType_systemInfoIndex),
        ('ciAndLAC', _ReferenceIdentityType_ciAndLAC),
        ])
    ReferenceIdentityType._ext = None
    
    #-----< BSICAndCarrier >-----#
    BSICAndCarrier = SEQ(name='BSICAndCarrier', mode=MODE_TYPE)
    _BSICAndCarrier_carrier = INT(name='carrier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BCCHCarrier')))
    _BSICAndCarrier_bsic = INT(name='bsic', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BSIC')))
    BSICAndCarrier._cont = ASN1Dict([
        ('carrier', _BSICAndCarrier_carrier),
        ('bsic', _BSICAndCarrier_bsic),
        ])
    BSICAndCarrier._ext = None
    
    #-----< RequestIndex >-----#
    RequestIndex = INT(name='RequestIndex', mode=MODE_TYPE)
    RequestIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< SystemInfoIndex >-----#
    SystemInfoIndex = INT(name='SystemInfoIndex', mode=MODE_TYPE)
    SystemInfoIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< CellIDAndLAC >-----#
    CellIDAndLAC = SEQ(name='CellIDAndLAC', mode=MODE_TYPE)
    _CellIDAndLAC_referenceLAC = INT(name='referenceLAC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'LAC')))
    _CellIDAndLAC_referenceCI = INT(name='referenceCI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'CellID')))
    CellIDAndLAC._cont = ASN1Dict([
        ('referenceLAC', _CellIDAndLAC_referenceLAC),
        ('referenceCI', _CellIDAndLAC_referenceCI),
        ])
    CellIDAndLAC._ext = None
    
    #-----< CellID >-----#
    CellID = INT(name='CellID', mode=MODE_TYPE)
    CellID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< LAC >-----#
    LAC = INT(name='LAC', mode=MODE_TYPE)
    LAC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< OTD-MeasureInfo >-----#
    OTD_MeasureInfo = SEQ(name='OTD-MeasureInfo', mode=MODE_TYPE)
    _OTD_MeasureInfo_otdMsrFirstSets = SEQ(name='otdMsrFirstSets', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'OTD-MsrElementFirst')))
    _OTD_MeasureInfo_otdMsrRestSets = SEQ_OF(name='otdMsrRestSets', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfOTD-MsrElementRest')), opt=True)
    OTD_MeasureInfo._cont = ASN1Dict([
        ('otdMsrFirstSets', _OTD_MeasureInfo_otdMsrFirstSets),
        ('otdMsrRestSets', _OTD_MeasureInfo_otdMsrRestSets),
        ])
    OTD_MeasureInfo._ext = None
    
    #-----< SeqOfOTD-MsrElementRest >-----#
    SeqOfOTD_MsrElementRest = SEQ_OF(name='SeqOfOTD-MsrElementRest', mode=MODE_TYPE)
    _SeqOfOTD_MsrElementRest__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'OTD-MsrElementRest')))
    SeqOfOTD_MsrElementRest._cont = _SeqOfOTD_MsrElementRest__item_
    SeqOfOTD_MsrElementRest._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    
    #-----< OTD-MsrElementFirst >-----#
    OTD_MsrElementFirst = SEQ(name='OTD-MsrElementFirst', mode=MODE_TYPE)
    _OTD_MsrElementFirst_refFrameNumber = INT(name='refFrameNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _OTD_MsrElementFirst_refFrameNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=42431)], ev=None, er=[])
    _OTD_MsrElementFirst_referenceTimeSlot = INT(name='referenceTimeSlot', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ModuloTimeSlot')))
    _OTD_MsrElementFirst_toaMeasurementsOfRef = SEQ(name='toaMeasurementsOfRef', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'TOA-MeasurementsOfRef')), opt=True)
    _OTD_MsrElementFirst_stdResolution = INT(name='stdResolution', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'StdResolution')))
    _OTD_MsrElementFirst_taCorrection = INT(name='taCorrection', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _OTD_MsrElementFirst_taCorrection._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=960)], ev=None, er=[])
    _OTD_MsrElementFirst_otd_FirstSetMsrs = SEQ_OF(name='otd-FirstSetMsrs', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfOTD-FirstSetMsrs')), opt=True)
    OTD_MsrElementFirst._cont = ASN1Dict([
        ('refFrameNumber', _OTD_MsrElementFirst_refFrameNumber),
        ('referenceTimeSlot', _OTD_MsrElementFirst_referenceTimeSlot),
        ('toaMeasurementsOfRef', _OTD_MsrElementFirst_toaMeasurementsOfRef),
        ('stdResolution', _OTD_MsrElementFirst_stdResolution),
        ('taCorrection', _OTD_MsrElementFirst_taCorrection),
        ('otd-FirstSetMsrs', _OTD_MsrElementFirst_otd_FirstSetMsrs),
        ])
    OTD_MsrElementFirst._ext = None
    
    #-----< SeqOfOTD-FirstSetMsrs >-----#
    SeqOfOTD_FirstSetMsrs = SEQ_OF(name='SeqOfOTD-FirstSetMsrs', mode=MODE_TYPE)
    _SeqOfOTD_FirstSetMsrs__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'OTD-FirstSetMsrs')))
    SeqOfOTD_FirstSetMsrs._cont = _SeqOfOTD_FirstSetMsrs__item_
    SeqOfOTD_FirstSetMsrs._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< OTD-MsrElementRest >-----#
    OTD_MsrElementRest = SEQ(name='OTD-MsrElementRest', mode=MODE_TYPE)
    _OTD_MsrElementRest_refFrameNumber = INT(name='refFrameNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _OTD_MsrElementRest_refFrameNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=42431)], ev=None, er=[])
    _OTD_MsrElementRest_referenceTimeSlot = INT(name='referenceTimeSlot', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ModuloTimeSlot')))
    _OTD_MsrElementRest_toaMeasurementsOfRef = SEQ(name='toaMeasurementsOfRef', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'TOA-MeasurementsOfRef')), opt=True)
    _OTD_MsrElementRest_stdResolution = INT(name='stdResolution', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'StdResolution')))
    _OTD_MsrElementRest_taCorrection = INT(name='taCorrection', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _OTD_MsrElementRest_taCorrection._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=960)], ev=None, er=[])
    _OTD_MsrElementRest_otd_MsrsOfOtherSets = SEQ_OF(name='otd-MsrsOfOtherSets', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfOTD-MsrsOfOtherSets')), opt=True)
    OTD_MsrElementRest._cont = ASN1Dict([
        ('refFrameNumber', _OTD_MsrElementRest_refFrameNumber),
        ('referenceTimeSlot', _OTD_MsrElementRest_referenceTimeSlot),
        ('toaMeasurementsOfRef', _OTD_MsrElementRest_toaMeasurementsOfRef),
        ('stdResolution', _OTD_MsrElementRest_stdResolution),
        ('taCorrection', _OTD_MsrElementRest_taCorrection),
        ('otd-MsrsOfOtherSets', _OTD_MsrElementRest_otd_MsrsOfOtherSets),
        ])
    OTD_MsrElementRest._ext = None
    
    #-----< SeqOfOTD-MsrsOfOtherSets >-----#
    SeqOfOTD_MsrsOfOtherSets = SEQ_OF(name='SeqOfOTD-MsrsOfOtherSets', mode=MODE_TYPE)
    _SeqOfOTD_MsrsOfOtherSets__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'OTD-MsrsOfOtherSets')))
    SeqOfOTD_MsrsOfOtherSets._cont = _SeqOfOTD_MsrsOfOtherSets__item_
    SeqOfOTD_MsrsOfOtherSets._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< TOA-MeasurementsOfRef >-----#
    TOA_MeasurementsOfRef = SEQ(name='TOA-MeasurementsOfRef', mode=MODE_TYPE)
    _TOA_MeasurementsOfRef_refQuality = INT(name='refQuality', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'RefQuality')))
    _TOA_MeasurementsOfRef_numOfMeasurements = INT(name='numOfMeasurements', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'NumOfMeasurements')))
    TOA_MeasurementsOfRef._cont = ASN1Dict([
        ('refQuality', _TOA_MeasurementsOfRef_refQuality),
        ('numOfMeasurements', _TOA_MeasurementsOfRef_numOfMeasurements),
        ])
    TOA_MeasurementsOfRef._ext = None
    
    #-----< RefQuality >-----#
    RefQuality = INT(name='RefQuality', mode=MODE_TYPE)
    RefQuality._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    
    #-----< NumOfMeasurements >-----#
    NumOfMeasurements = INT(name='NumOfMeasurements', mode=MODE_TYPE)
    NumOfMeasurements._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< StdResolution >-----#
    StdResolution = INT(name='StdResolution', mode=MODE_TYPE)
    StdResolution._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    
    #-----< OTD-FirstSetMsrs >-----#
    OTD_FirstSetMsrs = SEQ(name='OTD-FirstSetMsrs', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'OTD-MeasurementWithID')))
    
    #-----< OTD-MsrsOfOtherSets >-----#
    OTD_MsrsOfOtherSets = CHOICE(name='OTD-MsrsOfOtherSets', mode=MODE_TYPE)
    _OTD_MsrsOfOtherSets_identityNotPresent = SEQ(name='identityNotPresent', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'OTD-Measurement')))
    _OTD_MsrsOfOtherSets_identityPresent = SEQ(name='identityPresent', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'OTD-MeasurementWithID')))
    OTD_MsrsOfOtherSets._cont = ASN1Dict([
        ('identityNotPresent', _OTD_MsrsOfOtherSets_identityNotPresent),
        ('identityPresent', _OTD_MsrsOfOtherSets_identityPresent),
        ])
    OTD_MsrsOfOtherSets._ext = None
    
    #-----< OTD-Measurement >-----#
    OTD_Measurement = SEQ(name='OTD-Measurement', mode=MODE_TYPE)
    _OTD_Measurement_nborTimeSlot = INT(name='nborTimeSlot', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ModuloTimeSlot')))
    _OTD_Measurement_eotdQuality = SEQ(name='eotdQuality', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'EOTDQuality')))
    _OTD_Measurement_otdValue = INT(name='otdValue', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'OTDValue')))
    OTD_Measurement._cont = ASN1Dict([
        ('nborTimeSlot', _OTD_Measurement_nborTimeSlot),
        ('eotdQuality', _OTD_Measurement_eotdQuality),
        ('otdValue', _OTD_Measurement_otdValue),
        ])
    OTD_Measurement._ext = None
    
    #-----< OTD-MeasurementWithID >-----#
    OTD_MeasurementWithID = SEQ(name='OTD-MeasurementWithID', mode=MODE_TYPE)
    _OTD_MeasurementWithID_neighborIdentity = CHOICE(name='neighborIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('RRLP-Components', 'NeighborIdentity')))
    _OTD_MeasurementWithID_nborTimeSlot = INT(name='nborTimeSlot', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ModuloTimeSlot')))
    _OTD_MeasurementWithID_eotdQuality = SEQ(name='eotdQuality', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'EOTDQuality')))
    _OTD_MeasurementWithID_otdValue = INT(name='otdValue', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'OTDValue')))
    OTD_MeasurementWithID._cont = ASN1Dict([
        ('neighborIdentity', _OTD_MeasurementWithID_neighborIdentity),
        ('nborTimeSlot', _OTD_MeasurementWithID_nborTimeSlot),
        ('eotdQuality', _OTD_MeasurementWithID_eotdQuality),
        ('otdValue', _OTD_MeasurementWithID_otdValue),
        ])
    OTD_MeasurementWithID._ext = None
    
    #-----< EOTDQuality >-----#
    EOTDQuality = SEQ(name='EOTDQuality', mode=MODE_TYPE)
    _EOTDQuality_nbrOfMeasurements = INT(name='nbrOfMeasurements', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EOTDQuality_nbrOfMeasurements._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _EOTDQuality_stdOfEOTD = INT(name='stdOfEOTD', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EOTDQuality_stdOfEOTD._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    EOTDQuality._cont = ASN1Dict([
        ('nbrOfMeasurements', _EOTDQuality_nbrOfMeasurements),
        ('stdOfEOTD', _EOTDQuality_stdOfEOTD),
        ])
    EOTDQuality._ext = None
    
    #-----< NeighborIdentity >-----#
    NeighborIdentity = CHOICE(name='NeighborIdentity', mode=MODE_TYPE)
    _NeighborIdentity_bsicAndCarrier = SEQ(name='bsicAndCarrier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BSICAndCarrier')))
    _NeighborIdentity_ci = INT(name='ci', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'CellID')))
    _NeighborIdentity_multiFrameCarrier = SEQ(name='multiFrameCarrier', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'MultiFrameCarrier')))
    _NeighborIdentity_requestIndex = INT(name='requestIndex', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'RequestIndex')))
    _NeighborIdentity_systemInfoIndex = INT(name='systemInfoIndex', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SystemInfoIndex')))
    _NeighborIdentity_ciAndLAC = SEQ(name='ciAndLAC', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'CellIDAndLAC')))
    NeighborIdentity._cont = ASN1Dict([
        ('bsicAndCarrier', _NeighborIdentity_bsicAndCarrier),
        ('ci', _NeighborIdentity_ci),
        ('multiFrameCarrier', _NeighborIdentity_multiFrameCarrier),
        ('requestIndex', _NeighborIdentity_requestIndex),
        ('systemInfoIndex', _NeighborIdentity_systemInfoIndex),
        ('ciAndLAC', _NeighborIdentity_ciAndLAC),
        ])
    NeighborIdentity._ext = None
    
    #-----< MultiFrameCarrier >-----#
    MultiFrameCarrier = SEQ(name='MultiFrameCarrier', mode=MODE_TYPE)
    _MultiFrameCarrier_bcchCarrier = INT(name='bcchCarrier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BCCHCarrier')))
    _MultiFrameCarrier_multiFrameOffset = INT(name='multiFrameOffset', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'MultiFrameOffset')))
    MultiFrameCarrier._cont = ASN1Dict([
        ('bcchCarrier', _MultiFrameCarrier_bcchCarrier),
        ('multiFrameOffset', _MultiFrameCarrier_multiFrameOffset),
        ])
    MultiFrameCarrier._ext = None
    
    #-----< OTDValue >-----#
    OTDValue = INT(name='OTDValue', mode=MODE_TYPE)
    OTDValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=39999)], ev=None, er=[])
    
    #-----< LocationInfo >-----#
    LocationInfo = SEQ(name='LocationInfo', mode=MODE_TYPE)
    _LocationInfo_refFrame = INT(name='refFrame', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LocationInfo_refFrame._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _LocationInfo_gpsTOW = INT(name='gpsTOW', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _LocationInfo_gpsTOW._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=14399999)], ev=None, er=[])
    _LocationInfo_fixType = INT(name='fixType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'FixType')))
    _LocationInfo_posEstimate = OCT_STR(name='posEstimate', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Ext-GeographicalInformation')))
    LocationInfo._cont = ASN1Dict([
        ('refFrame', _LocationInfo_refFrame),
        ('gpsTOW', _LocationInfo_gpsTOW),
        ('fixType', _LocationInfo_fixType),
        ('posEstimate', _LocationInfo_posEstimate),
        ])
    LocationInfo._ext = None
    
    #-----< FixType >-----#
    FixType = INT(name='FixType', mode=MODE_TYPE)
    FixType._cont = ASN1Dict([('twoDFix', 0), ('threeDFix', 1)])
    FixType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    
    #-----< GPS-MeasureInfo >-----#
    GPS_MeasureInfo = SEQ(name='GPS-MeasureInfo', mode=MODE_TYPE)
    _GPS_MeasureInfo_gpsMsrSetList = SEQ_OF(name='gpsMsrSetList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfGPS-MsrSetElement')))
    GPS_MeasureInfo._cont = ASN1Dict([
        ('gpsMsrSetList', _GPS_MeasureInfo_gpsMsrSetList),
        ])
    GPS_MeasureInfo._ext = None
    
    #-----< SeqOfGPS-MsrSetElement >-----#
    SeqOfGPS_MsrSetElement = SEQ_OF(name='SeqOfGPS-MsrSetElement', mode=MODE_TYPE)
    _SeqOfGPS_MsrSetElement__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GPS-MsrSetElement')))
    SeqOfGPS_MsrSetElement._cont = _SeqOfGPS_MsrSetElement__item_
    SeqOfGPS_MsrSetElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< GPS-MsrSetElement >-----#
    GPS_MsrSetElement = SEQ(name='GPS-MsrSetElement', mode=MODE_TYPE)
    _GPS_MsrSetElement_refFrame = INT(name='refFrame', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GPS_MsrSetElement_refFrame._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _GPS_MsrSetElement_gpsTOW = INT(name='gpsTOW', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSTOW24b')))
    _GPS_MsrSetElement_gps_msrList = SEQ_OF(name='gps-msrList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfGPS-MsrElement')))
    GPS_MsrSetElement._cont = ASN1Dict([
        ('refFrame', _GPS_MsrSetElement_refFrame),
        ('gpsTOW', _GPS_MsrSetElement_gpsTOW),
        ('gps-msrList', _GPS_MsrSetElement_gps_msrList),
        ])
    GPS_MsrSetElement._ext = None
    
    #-----< GPSTOW24b >-----#
    GPSTOW24b = INT(name='GPSTOW24b', mode=MODE_TYPE)
    GPSTOW24b._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=14399999)], ev=None, er=[])
    
    #-----< SeqOfGPS-MsrElement >-----#
    SeqOfGPS_MsrElement = SEQ_OF(name='SeqOfGPS-MsrElement', mode=MODE_TYPE)
    _SeqOfGPS_MsrElement__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GPS-MsrElement')))
    SeqOfGPS_MsrElement._cont = _SeqOfGPS_MsrElement__item_
    SeqOfGPS_MsrElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GPS-MsrElement >-----#
    GPS_MsrElement = SEQ(name='GPS-MsrElement', mode=MODE_TYPE)
    _GPS_MsrElement_satelliteID = INT(name='satelliteID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SatelliteID')))
    _GPS_MsrElement_cNo = INT(name='cNo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPS_MsrElement_cNo._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _GPS_MsrElement_doppler = INT(name='doppler', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPS_MsrElement_doppler._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _GPS_MsrElement_wholeChips = INT(name='wholeChips', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPS_MsrElement_wholeChips._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1022)], ev=None, er=[])
    _GPS_MsrElement_fracChips = INT(name='fracChips', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPS_MsrElement_fracChips._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1024)], ev=None, er=[])
    _GPS_MsrElement_mpathIndic = ENUM(name='mpathIndic', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'MpathIndic')))
    _GPS_MsrElement_pseuRangeRMSErr = INT(name='pseuRangeRMSErr', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPS_MsrElement_pseuRangeRMSErr._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    GPS_MsrElement._cont = ASN1Dict([
        ('satelliteID', _GPS_MsrElement_satelliteID),
        ('cNo', _GPS_MsrElement_cNo),
        ('doppler', _GPS_MsrElement_doppler),
        ('wholeChips', _GPS_MsrElement_wholeChips),
        ('fracChips', _GPS_MsrElement_fracChips),
        ('mpathIndic', _GPS_MsrElement_mpathIndic),
        ('pseuRangeRMSErr', _GPS_MsrElement_pseuRangeRMSErr),
        ])
    GPS_MsrElement._ext = None
    
    #-----< MpathIndic >-----#
    MpathIndic = ENUM(name='MpathIndic', mode=MODE_TYPE)
    MpathIndic._cont = ASN1Dict([('notMeasured', 0), ('low', 1), ('medium', 2), ('high', 3)])
    MpathIndic._ext = None
    
    #-----< LocationError >-----#
    LocationError = SEQ(name='LocationError', mode=MODE_TYPE)
    _LocationError_locErrorReason = ENUM(name='locErrorReason', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'LocErrorReason')))
    _LocationError_additionalAssistanceData = SEQ(name='additionalAssistanceData', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'AdditionalAssistanceData')), opt=True)
    LocationError._cont = ASN1Dict([
        ('locErrorReason', _LocationError_locErrorReason),
        ('additionalAssistanceData', _LocationError_additionalAssistanceData),
        ])
    LocationError._ext = []
    
    #-----< LocErrorReason >-----#
    LocErrorReason = ENUM(name='LocErrorReason', mode=MODE_TYPE)
    LocErrorReason._cont = ASN1Dict([('unDefined', 0), ('notEnoughBTSs', 1), ('notEnoughSats', 2), ('eotdLocCalAssDataMissing', 3), ('eotdAssDataMissing', 4), ('gpsLocCalAssDataMissing', 5), ('gpsAssDataMissing', 6), ('methodNotSupported', 7), ('notProcessed', 8), ('refBTSForGPSNotServingBTS', 9), ('refBTSForEOTDNotServingBTS', 10), ('notEnoughGANSSSats', 11), ('ganssAssDataMissing', 12), ('refBTSForGANSSNotServingBTS', 13)])
    LocErrorReason._ext = ['notEnoughGANSSSats', 'ganssAssDataMissing', 'refBTSForGANSSNotServingBTS']
    
    #-----< AdditionalAssistanceData >-----#
    AdditionalAssistanceData = SEQ(name='AdditionalAssistanceData', mode=MODE_TYPE)
    _AdditionalAssistanceData_gpsAssistanceData = OCT_STR(name='gpsAssistanceData', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSAssistanceData')), opt=True)
    _AdditionalAssistanceData_extensionContainer = SEQ(name='extensionContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-ExtensionDataTypes', 'ExtensionContainer')), opt=True)
    _AdditionalAssistanceData_ganssAssistanceData = OCT_STR(name='ganssAssistanceData', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSAssistanceData')), opt=True)
    AdditionalAssistanceData._cont = ASN1Dict([
        ('gpsAssistanceData', _AdditionalAssistanceData_gpsAssistanceData),
        ('extensionContainer', _AdditionalAssistanceData_extensionContainer),
        ('ganssAssistanceData', _AdditionalAssistanceData_ganssAssistanceData),
        ])
    AdditionalAssistanceData._ext = ['ganssAssistanceData']
    
    #-----< GPSAssistanceData >-----#
    GPSAssistanceData = OCT_STR(name='GPSAssistanceData', mode=MODE_TYPE)
    GPSAssistanceData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=40)], ev=None, er=[])
    
    #-----< maxGPSAssistanceData >-----#
    maxGPSAssistanceData = INT(name='maxGPSAssistanceData', mode=MODE_VALUE)
    maxGPSAssistanceData._val = 40
    
    #-----< GANSSAssistanceData >-----#
    GANSSAssistanceData = OCT_STR(name='GANSSAssistanceData', mode=MODE_TYPE)
    GANSSAssistanceData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=40)], ev=None, er=[])
    
    #-----< maxGANSSAssistanceData >-----#
    maxGANSSAssistanceData = INT(name='maxGANSSAssistanceData', mode=MODE_VALUE)
    maxGANSSAssistanceData._val = 40
    
    #-----< ErrorCodes >-----#
    ErrorCodes = ENUM(name='ErrorCodes', mode=MODE_TYPE)
    ErrorCodes._cont = ASN1Dict([('unDefined', 0), ('missingComponet', 1), ('incorrectData', 2), ('missingIEorComponentElement', 3), ('messageTooShort', 4), ('unknowReferenceNumber', 5)])
    ErrorCodes._ext = []
    
    #-----< GPS-AssistData >-----#
    GPS_AssistData = SEQ(name='GPS-AssistData', mode=MODE_TYPE)
    _GPS_AssistData_controlHeader = SEQ(name='controlHeader', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ControlHeader')))
    GPS_AssistData._cont = ASN1Dict([
        ('controlHeader', _GPS_AssistData_controlHeader),
        ])
    GPS_AssistData._ext = None
    
    #-----< MoreAssDataToBeSent >-----#
    MoreAssDataToBeSent = ENUM(name='MoreAssDataToBeSent', mode=MODE_TYPE)
    MoreAssDataToBeSent._cont = ASN1Dict([('noMoreMessages', 0), ('moreMessagesOnTheWay', 1)])
    MoreAssDataToBeSent._ext = None
    
    #-----< ControlHeader >-----#
    ControlHeader = SEQ(name='ControlHeader', mode=MODE_TYPE)
    _ControlHeader_referenceTime = SEQ(name='referenceTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ReferenceTime')), opt=True)
    _ControlHeader_refLocation = SEQ(name='refLocation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'RefLocation')), opt=True)
    _ControlHeader_dgpsCorrections = SEQ(name='dgpsCorrections', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'DGPSCorrections')), opt=True)
    _ControlHeader_navigationModel = SEQ(name='navigationModel', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'NavigationModel')), opt=True)
    _ControlHeader_ionosphericModel = SEQ(name='ionosphericModel', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'IonosphericModel')), opt=True)
    _ControlHeader_utcModel = SEQ(name='utcModel', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'UTCModel')), opt=True)
    _ControlHeader_almanac = SEQ(name='almanac', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Almanac')), opt=True)
    _ControlHeader_acquisAssist = SEQ(name='acquisAssist', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'AcquisAssist')), opt=True)
    _ControlHeader_realTimeIntegrity = SEQ_OF(name='realTimeIntegrity', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOf-BadSatelliteSet')), opt=True)
    ControlHeader._cont = ASN1Dict([
        ('referenceTime', _ControlHeader_referenceTime),
        ('refLocation', _ControlHeader_refLocation),
        ('dgpsCorrections', _ControlHeader_dgpsCorrections),
        ('navigationModel', _ControlHeader_navigationModel),
        ('ionosphericModel', _ControlHeader_ionosphericModel),
        ('utcModel', _ControlHeader_utcModel),
        ('almanac', _ControlHeader_almanac),
        ('acquisAssist', _ControlHeader_acquisAssist),
        ('realTimeIntegrity', _ControlHeader_realTimeIntegrity),
        ])
    ControlHeader._ext = None
    
    #-----< ReferenceTime >-----#
    ReferenceTime = SEQ(name='ReferenceTime', mode=MODE_TYPE)
    _ReferenceTime_gpsTime = SEQ(name='gpsTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSTime')))
    _ReferenceTime_gsmTime = SEQ(name='gsmTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GSMTime')), opt=True)
    _ReferenceTime_gpsTowAssist = SEQ_OF(name='gpsTowAssist', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSTOWAssist')), opt=True)
    ReferenceTime._cont = ASN1Dict([
        ('gpsTime', _ReferenceTime_gpsTime),
        ('gsmTime', _ReferenceTime_gsmTime),
        ('gpsTowAssist', _ReferenceTime_gpsTowAssist),
        ])
    ReferenceTime._ext = None
    
    #-----< GPSTime >-----#
    GPSTime = SEQ(name='GPSTime', mode=MODE_TYPE)
    _GPSTime_gpsTOW23b = INT(name='gpsTOW23b', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSTOW23b')))
    _GPSTime_gpsWeek = INT(name='gpsWeek', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSWeek')))
    GPSTime._cont = ASN1Dict([
        ('gpsTOW23b', _GPSTime_gpsTOW23b),
        ('gpsWeek', _GPSTime_gpsWeek),
        ])
    GPSTime._ext = None
    
    #-----< GPSTOW23b >-----#
    GPSTOW23b = INT(name='GPSTOW23b', mode=MODE_TYPE)
    GPSTOW23b._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7559999)], ev=None, er=[])
    
    #-----< GPSWeek >-----#
    GPSWeek = INT(name='GPSWeek', mode=MODE_TYPE)
    GPSWeek._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    
    #-----< GPSTOWAssist >-----#
    GPSTOWAssist = SEQ_OF(name='GPSTOWAssist', mode=MODE_TYPE)
    _GPSTOWAssist__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GPSTOWAssistElement')))
    GPSTOWAssist._cont = _GPSTOWAssist__item_
    GPSTOWAssist._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=12)], ev=None, er=[])
    
    #-----< GPSTOWAssistElement >-----#
    GPSTOWAssistElement = SEQ(name='GPSTOWAssistElement', mode=MODE_TYPE)
    _GPSTOWAssistElement_satelliteID = INT(name='satelliteID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SatelliteID')))
    _GPSTOWAssistElement_tlmWord = INT(name='tlmWord', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'TLMWord')))
    _GPSTOWAssistElement_antiSpoof = INT(name='antiSpoof', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'AntiSpoofFlag')))
    _GPSTOWAssistElement_alert = INT(name='alert', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'AlertFlag')))
    _GPSTOWAssistElement_tlmRsvdBits = INT(name='tlmRsvdBits', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'TLMReservedBits')))
    GPSTOWAssistElement._cont = ASN1Dict([
        ('satelliteID', _GPSTOWAssistElement_satelliteID),
        ('tlmWord', _GPSTOWAssistElement_tlmWord),
        ('antiSpoof', _GPSTOWAssistElement_antiSpoof),
        ('alert', _GPSTOWAssistElement_alert),
        ('tlmRsvdBits', _GPSTOWAssistElement_tlmRsvdBits),
        ])
    GPSTOWAssistElement._ext = None
    
    #-----< TLMWord >-----#
    TLMWord = INT(name='TLMWord', mode=MODE_TYPE)
    TLMWord._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16383)], ev=None, er=[])
    
    #-----< AntiSpoofFlag >-----#
    AntiSpoofFlag = INT(name='AntiSpoofFlag', mode=MODE_TYPE)
    AntiSpoofFlag._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    
    #-----< AlertFlag >-----#
    AlertFlag = INT(name='AlertFlag', mode=MODE_TYPE)
    AlertFlag._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    
    #-----< TLMReservedBits >-----#
    TLMReservedBits = INT(name='TLMReservedBits', mode=MODE_TYPE)
    TLMReservedBits._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    
    #-----< GSMTime >-----#
    GSMTime = SEQ(name='GSMTime', mode=MODE_TYPE)
    _GSMTime_bcchCarrier = INT(name='bcchCarrier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BCCHCarrier')))
    _GSMTime_bsic = INT(name='bsic', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BSIC')))
    _GSMTime_frameNumber = INT(name='frameNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'FrameNumber')))
    _GSMTime_timeSlot = INT(name='timeSlot', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'TimeSlot')))
    _GSMTime_bitNumber = INT(name='bitNumber', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BitNumber')))
    GSMTime._cont = ASN1Dict([
        ('bcchCarrier', _GSMTime_bcchCarrier),
        ('bsic', _GSMTime_bsic),
        ('frameNumber', _GSMTime_frameNumber),
        ('timeSlot', _GSMTime_timeSlot),
        ('bitNumber', _GSMTime_bitNumber),
        ])
    GSMTime._ext = None
    
    #-----< FrameNumber >-----#
    FrameNumber = INT(name='FrameNumber', mode=MODE_TYPE)
    FrameNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2097151)], ev=None, er=[])
    
    #-----< TimeSlot >-----#
    TimeSlot = INT(name='TimeSlot', mode=MODE_TYPE)
    TimeSlot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< BitNumber >-----#
    BitNumber = INT(name='BitNumber', mode=MODE_TYPE)
    BitNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=156)], ev=None, er=[])
    
    #-----< RefLocation >-----#
    RefLocation = SEQ(name='RefLocation', mode=MODE_TYPE)
    _RefLocation_threeDLocation = OCT_STR(name='threeDLocation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Ext-GeographicalInformation')))
    RefLocation._cont = ASN1Dict([
        ('threeDLocation', _RefLocation_threeDLocation),
        ])
    RefLocation._ext = None
    
    #-----< DGPSCorrections >-----#
    DGPSCorrections = SEQ(name='DGPSCorrections', mode=MODE_TYPE)
    _DGPSCorrections_gpsTOW = INT(name='gpsTOW', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DGPSCorrections_gpsTOW._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=604799)], ev=None, er=[])
    _DGPSCorrections_status = INT(name='status', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DGPSCorrections_status._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _DGPSCorrections_satList = SEQ_OF(name='satList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfSatElement')))
    DGPSCorrections._cont = ASN1Dict([
        ('gpsTOW', _DGPSCorrections_gpsTOW),
        ('status', _DGPSCorrections_status),
        ('satList', _DGPSCorrections_satList),
        ])
    DGPSCorrections._ext = None
    
    #-----< SeqOfSatElement >-----#
    SeqOfSatElement = SEQ_OF(name='SeqOfSatElement', mode=MODE_TYPE)
    _SeqOfSatElement__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'SatElement')))
    SeqOfSatElement._cont = _SeqOfSatElement__item_
    SeqOfSatElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< SatElement >-----#
    SatElement = SEQ(name='SatElement', mode=MODE_TYPE)
    _SatElement_satelliteID = INT(name='satelliteID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SatelliteID')))
    _SatElement_iode = INT(name='iode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SatElement_iode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=239)], ev=None, er=[])
    _SatElement_udre = INT(name='udre', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SatElement_udre._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    _SatElement_pseudoRangeCor = INT(name='pseudoRangeCor', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SatElement_pseudoRangeCor._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2047, ub=2047)], ev=None, er=[])
    _SatElement_rangeRateCor = INT(name='rangeRateCor', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SatElement_rangeRateCor._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=127)], ev=None, er=[])
    _SatElement_deltaPseudoRangeCor2 = INT(name='deltaPseudoRangeCor2', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SatElement_deltaPseudoRangeCor2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=127)], ev=None, er=[])
    _SatElement_deltaRangeRateCor2 = INT(name='deltaRangeRateCor2', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SatElement_deltaRangeRateCor2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-7, ub=7)], ev=None, er=[])
    _SatElement_deltaPseudoRangeCor3 = INT(name='deltaPseudoRangeCor3', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SatElement_deltaPseudoRangeCor3._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=127)], ev=None, er=[])
    _SatElement_deltaRangeRateCor3 = INT(name='deltaRangeRateCor3', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SatElement_deltaRangeRateCor3._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-7, ub=7)], ev=None, er=[])
    SatElement._cont = ASN1Dict([
        ('satelliteID', _SatElement_satelliteID),
        ('iode', _SatElement_iode),
        ('udre', _SatElement_udre),
        ('pseudoRangeCor', _SatElement_pseudoRangeCor),
        ('rangeRateCor', _SatElement_rangeRateCor),
        ('deltaPseudoRangeCor2', _SatElement_deltaPseudoRangeCor2),
        ('deltaRangeRateCor2', _SatElement_deltaRangeRateCor2),
        ('deltaPseudoRangeCor3', _SatElement_deltaPseudoRangeCor3),
        ('deltaRangeRateCor3', _SatElement_deltaRangeRateCor3),
        ])
    SatElement._ext = None
    
    #-----< SatelliteID >-----#
    SatelliteID = INT(name='SatelliteID', mode=MODE_TYPE)
    SatelliteID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    
    #-----< NavigationModel >-----#
    NavigationModel = SEQ(name='NavigationModel', mode=MODE_TYPE)
    _NavigationModel_navModelList = SEQ_OF(name='navModelList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfNavModelElement')))
    NavigationModel._cont = ASN1Dict([
        ('navModelList', _NavigationModel_navModelList),
        ])
    NavigationModel._ext = None
    
    #-----< SeqOfNavModelElement >-----#
    SeqOfNavModelElement = SEQ_OF(name='SeqOfNavModelElement', mode=MODE_TYPE)
    _SeqOfNavModelElement__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'NavModelElement')))
    SeqOfNavModelElement._cont = _SeqOfNavModelElement__item_
    SeqOfNavModelElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< NavModelElement >-----#
    NavModelElement = SEQ(name='NavModelElement', mode=MODE_TYPE)
    _NavModelElement_satelliteID = INT(name='satelliteID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SatelliteID')))
    _NavModelElement_satStatus = CHOICE(name='satStatus', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SatStatus')))
    NavModelElement._cont = ASN1Dict([
        ('satelliteID', _NavModelElement_satelliteID),
        ('satStatus', _NavModelElement_satStatus),
        ])
    NavModelElement._ext = None
    
    #-----< SatStatus >-----#
    SatStatus = CHOICE(name='SatStatus', mode=MODE_TYPE)
    _SatStatus_newSatelliteAndModelUC = SEQ(name='newSatelliteAndModelUC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'UncompressedEphemeris')))
    _SatStatus_oldSatelliteAndModel = NULL(name='oldSatelliteAndModel', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SatStatus_newNaviModelUC = SEQ(name='newNaviModelUC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'UncompressedEphemeris')))
    SatStatus._cont = ASN1Dict([
        ('newSatelliteAndModelUC', _SatStatus_newSatelliteAndModelUC),
        ('oldSatelliteAndModel', _SatStatus_oldSatelliteAndModel),
        ('newNaviModelUC', _SatStatus_newNaviModelUC),
        ])
    SatStatus._ext = []
    
    #-----< UncompressedEphemeris >-----#
    UncompressedEphemeris = SEQ(name='UncompressedEphemeris', mode=MODE_TYPE)
    _UncompressedEphemeris_ephemCodeOnL2 = INT(name='ephemCodeOnL2', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemCodeOnL2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    _UncompressedEphemeris_ephemURA = INT(name='ephemURA', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemURA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _UncompressedEphemeris_ephemSVhealth = INT(name='ephemSVhealth', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemSVhealth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _UncompressedEphemeris_ephemIODC = INT(name='ephemIODC', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemIODC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    _UncompressedEphemeris_ephemL2Pflag = INT(name='ephemL2Pflag', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemL2Pflag._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _UncompressedEphemeris_ephemSF1Rsvd = SEQ(name='ephemSF1Rsvd', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'EphemerisSubframe1Reserved')))
    _UncompressedEphemeris_ephemTgd = INT(name='ephemTgd', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemTgd._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _UncompressedEphemeris_ephemToc = INT(name='ephemToc', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemToc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=37799)], ev=None, er=[])
    _UncompressedEphemeris_ephemAF2 = INT(name='ephemAF2', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemAF2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _UncompressedEphemeris_ephemAF1 = INT(name='ephemAF1', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemAF1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _UncompressedEphemeris_ephemAF0 = INT(name='ephemAF0', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemAF0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2097152, ub=2097151)], ev=None, er=[])
    _UncompressedEphemeris_ephemCrs = INT(name='ephemCrs', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemCrs._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _UncompressedEphemeris_ephemDeltaN = INT(name='ephemDeltaN', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemDeltaN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _UncompressedEphemeris_ephemM0 = INT(name='ephemM0', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemM0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _UncompressedEphemeris_ephemCuc = INT(name='ephemCuc', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemCuc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _UncompressedEphemeris_ephemE = INT(name='ephemE', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemE._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    _UncompressedEphemeris_ephemCus = INT(name='ephemCus', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemCus._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _UncompressedEphemeris_ephemAPowerHalf = INT(name='ephemAPowerHalf', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemAPowerHalf._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    _UncompressedEphemeris_ephemToe = INT(name='ephemToe', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemToe._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=37799)], ev=None, er=[])
    _UncompressedEphemeris_ephemFitFlag = INT(name='ephemFitFlag', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemFitFlag._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _UncompressedEphemeris_ephemAODA = INT(name='ephemAODA', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemAODA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _UncompressedEphemeris_ephemCic = INT(name='ephemCic', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemCic._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _UncompressedEphemeris_ephemOmegaA0 = INT(name='ephemOmegaA0', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemOmegaA0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _UncompressedEphemeris_ephemCis = INT(name='ephemCis', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemCis._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _UncompressedEphemeris_ephemI0 = INT(name='ephemI0', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemI0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _UncompressedEphemeris_ephemCrc = INT(name='ephemCrc', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemCrc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _UncompressedEphemeris_ephemW = INT(name='ephemW', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemW._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _UncompressedEphemeris_ephemOmegaADot = INT(name='ephemOmegaADot', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemOmegaADot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _UncompressedEphemeris_ephemIDot = INT(name='ephemIDot', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UncompressedEphemeris_ephemIDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8192, ub=8191)], ev=None, er=[])
    UncompressedEphemeris._cont = ASN1Dict([
        ('ephemCodeOnL2', _UncompressedEphemeris_ephemCodeOnL2),
        ('ephemURA', _UncompressedEphemeris_ephemURA),
        ('ephemSVhealth', _UncompressedEphemeris_ephemSVhealth),
        ('ephemIODC', _UncompressedEphemeris_ephemIODC),
        ('ephemL2Pflag', _UncompressedEphemeris_ephemL2Pflag),
        ('ephemSF1Rsvd', _UncompressedEphemeris_ephemSF1Rsvd),
        ('ephemTgd', _UncompressedEphemeris_ephemTgd),
        ('ephemToc', _UncompressedEphemeris_ephemToc),
        ('ephemAF2', _UncompressedEphemeris_ephemAF2),
        ('ephemAF1', _UncompressedEphemeris_ephemAF1),
        ('ephemAF0', _UncompressedEphemeris_ephemAF0),
        ('ephemCrs', _UncompressedEphemeris_ephemCrs),
        ('ephemDeltaN', _UncompressedEphemeris_ephemDeltaN),
        ('ephemM0', _UncompressedEphemeris_ephemM0),
        ('ephemCuc', _UncompressedEphemeris_ephemCuc),
        ('ephemE', _UncompressedEphemeris_ephemE),
        ('ephemCus', _UncompressedEphemeris_ephemCus),
        ('ephemAPowerHalf', _UncompressedEphemeris_ephemAPowerHalf),
        ('ephemToe', _UncompressedEphemeris_ephemToe),
        ('ephemFitFlag', _UncompressedEphemeris_ephemFitFlag),
        ('ephemAODA', _UncompressedEphemeris_ephemAODA),
        ('ephemCic', _UncompressedEphemeris_ephemCic),
        ('ephemOmegaA0', _UncompressedEphemeris_ephemOmegaA0),
        ('ephemCis', _UncompressedEphemeris_ephemCis),
        ('ephemI0', _UncompressedEphemeris_ephemI0),
        ('ephemCrc', _UncompressedEphemeris_ephemCrc),
        ('ephemW', _UncompressedEphemeris_ephemW),
        ('ephemOmegaADot', _UncompressedEphemeris_ephemOmegaADot),
        ('ephemIDot', _UncompressedEphemeris_ephemIDot),
        ])
    UncompressedEphemeris._ext = None
    
    #-----< EphemerisSubframe1Reserved >-----#
    EphemerisSubframe1Reserved = SEQ(name='EphemerisSubframe1Reserved', mode=MODE_TYPE)
    _EphemerisSubframe1Reserved_reserved1 = INT(name='reserved1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EphemerisSubframe1Reserved_reserved1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8388607)], ev=None, er=[])
    _EphemerisSubframe1Reserved_reserved2 = INT(name='reserved2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EphemerisSubframe1Reserved_reserved2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16777215)], ev=None, er=[])
    _EphemerisSubframe1Reserved_reserved3 = INT(name='reserved3', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EphemerisSubframe1Reserved_reserved3._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16777215)], ev=None, er=[])
    _EphemerisSubframe1Reserved_reserved4 = INT(name='reserved4', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EphemerisSubframe1Reserved_reserved4._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    EphemerisSubframe1Reserved._cont = ASN1Dict([
        ('reserved1', _EphemerisSubframe1Reserved_reserved1),
        ('reserved2', _EphemerisSubframe1Reserved_reserved2),
        ('reserved3', _EphemerisSubframe1Reserved_reserved3),
        ('reserved4', _EphemerisSubframe1Reserved_reserved4),
        ])
    EphemerisSubframe1Reserved._ext = None
    
    #-----< IonosphericModel >-----#
    IonosphericModel = SEQ(name='IonosphericModel', mode=MODE_TYPE)
    _IonosphericModel_alfa0 = INT(name='alfa0', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IonosphericModel_alfa0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _IonosphericModel_alfa1 = INT(name='alfa1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IonosphericModel_alfa1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _IonosphericModel_alfa2 = INT(name='alfa2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IonosphericModel_alfa2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _IonosphericModel_alfa3 = INT(name='alfa3', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IonosphericModel_alfa3._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _IonosphericModel_beta0 = INT(name='beta0', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IonosphericModel_beta0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _IonosphericModel_beta1 = INT(name='beta1', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IonosphericModel_beta1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _IonosphericModel_beta2 = INT(name='beta2', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IonosphericModel_beta2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _IonosphericModel_beta3 = INT(name='beta3', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IonosphericModel_beta3._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    IonosphericModel._cont = ASN1Dict([
        ('alfa0', _IonosphericModel_alfa0),
        ('alfa1', _IonosphericModel_alfa1),
        ('alfa2', _IonosphericModel_alfa2),
        ('alfa3', _IonosphericModel_alfa3),
        ('beta0', _IonosphericModel_beta0),
        ('beta1', _IonosphericModel_beta1),
        ('beta2', _IonosphericModel_beta2),
        ('beta3', _IonosphericModel_beta3),
        ])
    IonosphericModel._ext = None
    
    #-----< UTCModel >-----#
    UTCModel = SEQ(name='UTCModel', mode=MODE_TYPE)
    _UTCModel_utcA1 = INT(name='utcA1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCModel_utcA1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _UTCModel_utcA0 = INT(name='utcA0', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCModel_utcA0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _UTCModel_utcTot = INT(name='utcTot', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCModel_utcTot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _UTCModel_utcWNt = INT(name='utcWNt', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCModel_utcWNt._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _UTCModel_utcDeltaTls = INT(name='utcDeltaTls', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCModel_utcDeltaTls._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _UTCModel_utcWNlsf = INT(name='utcWNlsf', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCModel_utcWNlsf._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _UTCModel_utcDN = INT(name='utcDN', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCModel_utcDN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _UTCModel_utcDeltaTlsf = INT(name='utcDeltaTlsf', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCModel_utcDeltaTlsf._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    UTCModel._cont = ASN1Dict([
        ('utcA1', _UTCModel_utcA1),
        ('utcA0', _UTCModel_utcA0),
        ('utcTot', _UTCModel_utcTot),
        ('utcWNt', _UTCModel_utcWNt),
        ('utcDeltaTls', _UTCModel_utcDeltaTls),
        ('utcWNlsf', _UTCModel_utcWNlsf),
        ('utcDN', _UTCModel_utcDN),
        ('utcDeltaTlsf', _UTCModel_utcDeltaTlsf),
        ])
    UTCModel._ext = None
    
    #-----< Almanac >-----#
    Almanac = SEQ(name='Almanac', mode=MODE_TYPE)
    _Almanac_alamanacWNa = INT(name='alamanacWNa', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_alamanacWNa._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _Almanac_almanacList = SEQ_OF(name='almanacList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfAlmanacElement')))
    Almanac._cont = ASN1Dict([
        ('alamanacWNa', _Almanac_alamanacWNa),
        ('almanacList', _Almanac_almanacList),
        ])
    Almanac._ext = None
    
    #-----< SeqOfAlmanacElement >-----#
    SeqOfAlmanacElement = SEQ_OF(name='SeqOfAlmanacElement', mode=MODE_TYPE)
    _SeqOfAlmanacElement__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'AlmanacElement')))
    SeqOfAlmanacElement._cont = _SeqOfAlmanacElement__item_
    SeqOfAlmanacElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< AlmanacElement >-----#
    AlmanacElement = SEQ(name='AlmanacElement', mode=MODE_TYPE)
    _AlmanacElement_satelliteID = INT(name='satelliteID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SatelliteID')))
    _AlmanacElement_almanacE = INT(name='almanacE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AlmanacElement_almanacE._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _AlmanacElement_alamanacToa = INT(name='alamanacToa', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AlmanacElement_alamanacToa._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _AlmanacElement_almanacKsii = INT(name='almanacKsii', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AlmanacElement_almanacKsii._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _AlmanacElement_almanacOmegaDot = INT(name='almanacOmegaDot', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AlmanacElement_almanacOmegaDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _AlmanacElement_almanacSVhealth = INT(name='almanacSVhealth', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AlmanacElement_almanacSVhealth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _AlmanacElement_almanacAPowerHalf = INT(name='almanacAPowerHalf', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AlmanacElement_almanacAPowerHalf._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16777215)], ev=None, er=[])
    _AlmanacElement_almanacOmega0 = INT(name='almanacOmega0', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AlmanacElement_almanacOmega0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _AlmanacElement_almanacW = INT(name='almanacW', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AlmanacElement_almanacW._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _AlmanacElement_almanacM0 = INT(name='almanacM0', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AlmanacElement_almanacM0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _AlmanacElement_almanacAF0 = INT(name='almanacAF0', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AlmanacElement_almanacAF0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1024, ub=1023)], ev=None, er=[])
    _AlmanacElement_almanacAF1 = INT(name='almanacAF1', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AlmanacElement_almanacAF1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1024, ub=1023)], ev=None, er=[])
    AlmanacElement._cont = ASN1Dict([
        ('satelliteID', _AlmanacElement_satelliteID),
        ('almanacE', _AlmanacElement_almanacE),
        ('alamanacToa', _AlmanacElement_alamanacToa),
        ('almanacKsii', _AlmanacElement_almanacKsii),
        ('almanacOmegaDot', _AlmanacElement_almanacOmegaDot),
        ('almanacSVhealth', _AlmanacElement_almanacSVhealth),
        ('almanacAPowerHalf', _AlmanacElement_almanacAPowerHalf),
        ('almanacOmega0', _AlmanacElement_almanacOmega0),
        ('almanacW', _AlmanacElement_almanacW),
        ('almanacM0', _AlmanacElement_almanacM0),
        ('almanacAF0', _AlmanacElement_almanacAF0),
        ('almanacAF1', _AlmanacElement_almanacAF1),
        ])
    AlmanacElement._ext = None
    
    #-----< AcquisAssist >-----#
    AcquisAssist = SEQ(name='AcquisAssist', mode=MODE_TYPE)
    _AcquisAssist_timeRelation = SEQ(name='timeRelation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'TimeRelation')))
    _AcquisAssist_acquisList = SEQ_OF(name='acquisList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfAcquisElement')))
    AcquisAssist._cont = ASN1Dict([
        ('timeRelation', _AcquisAssist_timeRelation),
        ('acquisList', _AcquisAssist_acquisList),
        ])
    AcquisAssist._ext = None
    
    #-----< SeqOfAcquisElement >-----#
    SeqOfAcquisElement = SEQ_OF(name='SeqOfAcquisElement', mode=MODE_TYPE)
    _SeqOfAcquisElement__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'AcquisElement')))
    SeqOfAcquisElement._cont = _SeqOfAcquisElement__item_
    SeqOfAcquisElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< TimeRelation >-----#
    TimeRelation = SEQ(name='TimeRelation', mode=MODE_TYPE)
    _TimeRelation_gpsTOW = INT(name='gpsTOW', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSTOW23b')))
    _TimeRelation_gsmTime = SEQ(name='gsmTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GSMTime')), opt=True)
    TimeRelation._cont = ASN1Dict([
        ('gpsTOW', _TimeRelation_gpsTOW),
        ('gsmTime', _TimeRelation_gsmTime),
        ])
    TimeRelation._ext = None
    
    #-----< AcquisElement >-----#
    AcquisElement = SEQ(name='AcquisElement', mode=MODE_TYPE)
    _AcquisElement_svid = INT(name='svid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SatelliteID')))
    _AcquisElement_doppler0 = INT(name='doppler0', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AcquisElement_doppler0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2048, ub=2047)], ev=None, er=[])
    _AcquisElement_addionalDoppler = SEQ(name='addionalDoppler', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'AddionalDopplerFields')), opt=True)
    _AcquisElement_codePhase = INT(name='codePhase', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AcquisElement_codePhase._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1022)], ev=None, er=[])
    _AcquisElement_intCodePhase = INT(name='intCodePhase', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AcquisElement_intCodePhase._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=19)], ev=None, er=[])
    _AcquisElement_gpsBitNumber = INT(name='gpsBitNumber', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AcquisElement_gpsBitNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    _AcquisElement_codePhaseSearchWindow = INT(name='codePhaseSearchWindow', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AcquisElement_codePhaseSearchWindow._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _AcquisElement_addionalAngle = SEQ(name='addionalAngle', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'AddionalAngleFields')), opt=True)
    AcquisElement._cont = ASN1Dict([
        ('svid', _AcquisElement_svid),
        ('doppler0', _AcquisElement_doppler0),
        ('addionalDoppler', _AcquisElement_addionalDoppler),
        ('codePhase', _AcquisElement_codePhase),
        ('intCodePhase', _AcquisElement_intCodePhase),
        ('gpsBitNumber', _AcquisElement_gpsBitNumber),
        ('codePhaseSearchWindow', _AcquisElement_codePhaseSearchWindow),
        ('addionalAngle', _AcquisElement_addionalAngle),
        ])
    AcquisElement._ext = None
    
    #-----< AddionalDopplerFields >-----#
    AddionalDopplerFields = SEQ(name='AddionalDopplerFields', mode=MODE_TYPE)
    _AddionalDopplerFields_doppler1 = INT(name='doppler1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AddionalDopplerFields_doppler1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _AddionalDopplerFields_dopplerUncertainty = INT(name='dopplerUncertainty', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AddionalDopplerFields_dopplerUncertainty._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    AddionalDopplerFields._cont = ASN1Dict([
        ('doppler1', _AddionalDopplerFields_doppler1),
        ('dopplerUncertainty', _AddionalDopplerFields_dopplerUncertainty),
        ])
    AddionalDopplerFields._ext = None
    
    #-----< AddionalAngleFields >-----#
    AddionalAngleFields = SEQ(name='AddionalAngleFields', mode=MODE_TYPE)
    _AddionalAngleFields_azimuth = INT(name='azimuth', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AddionalAngleFields_azimuth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _AddionalAngleFields_elevation = INT(name='elevation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AddionalAngleFields_elevation._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    AddionalAngleFields._cont = ASN1Dict([
        ('azimuth', _AddionalAngleFields_azimuth),
        ('elevation', _AddionalAngleFields_elevation),
        ])
    AddionalAngleFields._ext = None
    
    #-----< SeqOf-BadSatelliteSet >-----#
    SeqOf_BadSatelliteSet = SEQ_OF(name='SeqOf-BadSatelliteSet', mode=MODE_TYPE)
    _SeqOf_BadSatelliteSet__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'SatelliteID')))
    SeqOf_BadSatelliteSet._cont = _SeqOf_BadSatelliteSet__item_
    SeqOf_BadSatelliteSet._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< Rel98-MsrPosition-Req-Extension >-----#
    Rel98_MsrPosition_Req_Extension = SEQ(name='Rel98-MsrPosition-Req-Extension', mode=MODE_TYPE)
    _Rel98_MsrPosition_Req_Extension_rel98_Ext_ExpOTD = SEQ(name='rel98-Ext-ExpOTD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Rel98-Ext-ExpOTD')), opt=True)
    _Rel98_MsrPosition_Req_Extension_gpsTimeAssistanceMeasurementRequest = NULL(name='gpsTimeAssistanceMeasurementRequest', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Rel98_MsrPosition_Req_Extension_gpsReferenceTimeUncertainty = INT(name='gpsReferenceTimeUncertainty', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSReferenceTimeUncertainty')), opt=True)
    Rel98_MsrPosition_Req_Extension._cont = ASN1Dict([
        ('rel98-Ext-ExpOTD', _Rel98_MsrPosition_Req_Extension_rel98_Ext_ExpOTD),
        ('gpsTimeAssistanceMeasurementRequest', _Rel98_MsrPosition_Req_Extension_gpsTimeAssistanceMeasurementRequest),
        ('gpsReferenceTimeUncertainty', _Rel98_MsrPosition_Req_Extension_gpsReferenceTimeUncertainty),
        ])
    Rel98_MsrPosition_Req_Extension._ext = ['gpsTimeAssistanceMeasurementRequest', 'gpsReferenceTimeUncertainty']
    
    #-----< Rel98-AssistanceData-Extension >-----#
    Rel98_AssistanceData_Extension = SEQ(name='Rel98-AssistanceData-Extension', mode=MODE_TYPE)
    _Rel98_AssistanceData_Extension_rel98_Ext_ExpOTD = SEQ(name='rel98-Ext-ExpOTD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Rel98-Ext-ExpOTD')), opt=True)
    _Rel98_AssistanceData_Extension_gpsTimeAssistanceMeasurementRequest = NULL(name='gpsTimeAssistanceMeasurementRequest', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Rel98_AssistanceData_Extension_gpsReferenceTimeUncertainty = INT(name='gpsReferenceTimeUncertainty', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSReferenceTimeUncertainty')), opt=True)
    Rel98_AssistanceData_Extension._cont = ASN1Dict([
        ('rel98-Ext-ExpOTD', _Rel98_AssistanceData_Extension_rel98_Ext_ExpOTD),
        ('gpsTimeAssistanceMeasurementRequest', _Rel98_AssistanceData_Extension_gpsTimeAssistanceMeasurementRequest),
        ('gpsReferenceTimeUncertainty', _Rel98_AssistanceData_Extension_gpsReferenceTimeUncertainty),
        ])
    Rel98_AssistanceData_Extension._ext = ['gpsTimeAssistanceMeasurementRequest', 'gpsReferenceTimeUncertainty']
    
    #-----< Rel98-Ext-ExpOTD >-----#
    Rel98_Ext_ExpOTD = SEQ(name='Rel98-Ext-ExpOTD', mode=MODE_TYPE)
    _Rel98_Ext_ExpOTD_msrAssistData_R98_ExpOTD = SEQ(name='msrAssistData-R98-ExpOTD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'MsrAssistData-R98-ExpOTD')), opt=True)
    _Rel98_Ext_ExpOTD_systemInfoAssistData_R98_ExpOTD = SEQ(name='systemInfoAssistData-R98-ExpOTD', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SystemInfoAssistData-R98-ExpOTD')), opt=True)
    Rel98_Ext_ExpOTD._cont = ASN1Dict([
        ('msrAssistData-R98-ExpOTD', _Rel98_Ext_ExpOTD_msrAssistData_R98_ExpOTD),
        ('systemInfoAssistData-R98-ExpOTD', _Rel98_Ext_ExpOTD_systemInfoAssistData_R98_ExpOTD),
        ])
    Rel98_Ext_ExpOTD._ext = None
    
    #-----< MsrAssistData-R98-ExpOTD >-----#
    MsrAssistData_R98_ExpOTD = SEQ(name='MsrAssistData-R98-ExpOTD', mode=MODE_TYPE)
    _MsrAssistData_R98_ExpOTD_msrAssistList_R98_ExpOTD = SEQ_OF(name='msrAssistList-R98-ExpOTD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfMsrAssistBTS-R98-ExpOTD')))
    MsrAssistData_R98_ExpOTD._cont = ASN1Dict([
        ('msrAssistList-R98-ExpOTD', _MsrAssistData_R98_ExpOTD_msrAssistList_R98_ExpOTD),
        ])
    MsrAssistData_R98_ExpOTD._ext = None
    
    #-----< SeqOfMsrAssistBTS-R98-ExpOTD >-----#
    SeqOfMsrAssistBTS_R98_ExpOTD = SEQ_OF(name='SeqOfMsrAssistBTS-R98-ExpOTD', mode=MODE_TYPE)
    _SeqOfMsrAssistBTS_R98_ExpOTD__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'MsrAssistBTS-R98-ExpOTD')))
    SeqOfMsrAssistBTS_R98_ExpOTD._cont = _SeqOfMsrAssistBTS_R98_ExpOTD__item_
    SeqOfMsrAssistBTS_R98_ExpOTD._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    
    #-----< MsrAssistBTS-R98-ExpOTD >-----#
    MsrAssistBTS_R98_ExpOTD = SEQ(name='MsrAssistBTS-R98-ExpOTD', mode=MODE_TYPE)
    _MsrAssistBTS_R98_ExpOTD_expectedOTD = INT(name='expectedOTD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ExpectedOTD')))
    _MsrAssistBTS_R98_ExpOTD_expOTDUncertainty = INT(name='expOTDUncertainty', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ExpOTDUncertainty')))
    MsrAssistBTS_R98_ExpOTD._cont = ASN1Dict([
        ('expectedOTD', _MsrAssistBTS_R98_ExpOTD_expectedOTD),
        ('expOTDUncertainty', _MsrAssistBTS_R98_ExpOTD_expOTDUncertainty),
        ])
    MsrAssistBTS_R98_ExpOTD._ext = None
    
    #-----< SystemInfoAssistData-R98-ExpOTD >-----#
    SystemInfoAssistData_R98_ExpOTD = SEQ(name='SystemInfoAssistData-R98-ExpOTD', mode=MODE_TYPE)
    _SystemInfoAssistData_R98_ExpOTD_systemInfoAssistListR98_ExpOTD = SEQ_OF(name='systemInfoAssistListR98-ExpOTD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfSystemInfoAssistBTS-R98-ExpOTD')))
    SystemInfoAssistData_R98_ExpOTD._cont = ASN1Dict([
        ('systemInfoAssistListR98-ExpOTD', _SystemInfoAssistData_R98_ExpOTD_systemInfoAssistListR98_ExpOTD),
        ])
    SystemInfoAssistData_R98_ExpOTD._ext = None
    
    #-----< SeqOfSystemInfoAssistBTS-R98-ExpOTD >-----#
    SeqOfSystemInfoAssistBTS_R98_ExpOTD = SEQ_OF(name='SeqOfSystemInfoAssistBTS-R98-ExpOTD', mode=MODE_TYPE)
    _SeqOfSystemInfoAssistBTS_R98_ExpOTD__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'SystemInfoAssistBTS-R98-ExpOTD')))
    SeqOfSystemInfoAssistBTS_R98_ExpOTD._cont = _SeqOfSystemInfoAssistBTS_R98_ExpOTD__item_
    SeqOfSystemInfoAssistBTS_R98_ExpOTD._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< SystemInfoAssistBTS-R98-ExpOTD >-----#
    SystemInfoAssistBTS_R98_ExpOTD = CHOICE(name='SystemInfoAssistBTS-R98-ExpOTD', mode=MODE_TYPE)
    _SystemInfoAssistBTS_R98_ExpOTD_notPresent = NULL(name='notPresent', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SystemInfoAssistBTS_R98_ExpOTD_present = SEQ(name='present', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'AssistBTSData-R98-ExpOTD')))
    SystemInfoAssistBTS_R98_ExpOTD._cont = ASN1Dict([
        ('notPresent', _SystemInfoAssistBTS_R98_ExpOTD_notPresent),
        ('present', _SystemInfoAssistBTS_R98_ExpOTD_present),
        ])
    SystemInfoAssistBTS_R98_ExpOTD._ext = None
    
    #-----< AssistBTSData-R98-ExpOTD >-----#
    AssistBTSData_R98_ExpOTD = SEQ(name='AssistBTSData-R98-ExpOTD', mode=MODE_TYPE)
    _AssistBTSData_R98_ExpOTD_expectedOTD = INT(name='expectedOTD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ExpectedOTD')))
    _AssistBTSData_R98_ExpOTD_expOTDuncertainty = INT(name='expOTDuncertainty', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ExpOTDUncertainty')))
    AssistBTSData_R98_ExpOTD._cont = ASN1Dict([
        ('expectedOTD', _AssistBTSData_R98_ExpOTD_expectedOTD),
        ('expOTDuncertainty', _AssistBTSData_R98_ExpOTD_expOTDuncertainty),
        ])
    AssistBTSData_R98_ExpOTD._ext = None
    
    #-----< ExpectedOTD >-----#
    ExpectedOTD = INT(name='ExpectedOTD', mode=MODE_TYPE)
    ExpectedOTD._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1250)], ev=None, er=[])
    
    #-----< ExpOTDUncertainty >-----#
    ExpOTDUncertainty = INT(name='ExpOTDUncertainty', mode=MODE_TYPE)
    ExpOTDUncertainty._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< GPSReferenceTimeUncertainty >-----#
    GPSReferenceTimeUncertainty = INT(name='GPSReferenceTimeUncertainty', mode=MODE_TYPE)
    GPSReferenceTimeUncertainty._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< GPSTimeAssistanceMeasurements >-----#
    GPSTimeAssistanceMeasurements = SEQ(name='GPSTimeAssistanceMeasurements', mode=MODE_TYPE)
    _GPSTimeAssistanceMeasurements_referenceFrameMSB = INT(name='referenceFrameMSB', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GPSTimeAssistanceMeasurements_referenceFrameMSB._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _GPSTimeAssistanceMeasurements_gpsTowSubms = INT(name='gpsTowSubms', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GPSTimeAssistanceMeasurements_gpsTowSubms._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9999)], ev=None, er=[])
    _GPSTimeAssistanceMeasurements_deltaTow = INT(name='deltaTow', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GPSTimeAssistanceMeasurements_deltaTow._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    _GPSTimeAssistanceMeasurements_gpsReferenceTimeUncertainty = INT(name='gpsReferenceTimeUncertainty', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSReferenceTimeUncertainty')), opt=True)
    GPSTimeAssistanceMeasurements._cont = ASN1Dict([
        ('referenceFrameMSB', _GPSTimeAssistanceMeasurements_referenceFrameMSB),
        ('gpsTowSubms', _GPSTimeAssistanceMeasurements_gpsTowSubms),
        ('deltaTow', _GPSTimeAssistanceMeasurements_deltaTow),
        ('gpsReferenceTimeUncertainty', _GPSTimeAssistanceMeasurements_gpsReferenceTimeUncertainty),
        ])
    GPSTimeAssistanceMeasurements._ext = None
    
    #-----< Rel-98-MsrPosition-Rsp-Extension >-----#
    Rel_98_MsrPosition_Rsp_Extension = SEQ(name='Rel-98-MsrPosition-Rsp-Extension', mode=MODE_TYPE)
    _Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo = SEQ(name='rel-98-Ext-MeasureInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo_otd_MeasureInfo_R98_Ext = SEQ(name='otd-MeasureInfo-R98-Ext', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'OTD-MeasureInfo-R98-Ext')), opt=True)
    _Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo._cont = ASN1Dict([
        ('otd-MeasureInfo-R98-Ext', __Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo_otd_MeasureInfo_R98_Ext),
        ])
    _Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo._ext = None
    _Rel_98_MsrPosition_Rsp_Extension_timeAssistanceMeasurements = SEQ(name='timeAssistanceMeasurements', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSTimeAssistanceMeasurements')), opt=True)
    Rel_98_MsrPosition_Rsp_Extension._cont = ASN1Dict([
        ('rel-98-Ext-MeasureInfo', _Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo),
        ('timeAssistanceMeasurements', _Rel_98_MsrPosition_Rsp_Extension_timeAssistanceMeasurements),
        ])
    Rel_98_MsrPosition_Rsp_Extension._ext = ['timeAssistanceMeasurements']
    
    #-----< OTD-MeasureInfo-R98-Ext >-----#
    OTD_MeasureInfo_R98_Ext = SEQ(name='OTD-MeasureInfo-R98-Ext', mode=MODE_TYPE)
    _OTD_MeasureInfo_R98_Ext_otdMsrFirstSets_R98_Ext = SEQ(name='otdMsrFirstSets-R98-Ext', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'OTD-MsrElementFirst-R98-Ext')))
    OTD_MeasureInfo_R98_Ext._cont = ASN1Dict([
        ('otdMsrFirstSets-R98-Ext', _OTD_MeasureInfo_R98_Ext_otdMsrFirstSets_R98_Ext),
        ])
    OTD_MeasureInfo_R98_Ext._ext = None
    
    #-----< OTD-MsrElementFirst-R98-Ext >-----#
    OTD_MsrElementFirst_R98_Ext = SEQ(name='OTD-MsrElementFirst-R98-Ext', mode=MODE_TYPE)
    _OTD_MsrElementFirst_R98_Ext_otd_FirstSetMsrs_R98_Ext = SEQ_OF(name='otd-FirstSetMsrs-R98-Ext', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfOTD-FirstSetMsrs-R98-Ext')), opt=True)
    OTD_MsrElementFirst_R98_Ext._cont = ASN1Dict([
        ('otd-FirstSetMsrs-R98-Ext', _OTD_MsrElementFirst_R98_Ext_otd_FirstSetMsrs_R98_Ext),
        ])
    OTD_MsrElementFirst_R98_Ext._ext = None
    
    #-----< SeqOfOTD-FirstSetMsrs-R98-Ext >-----#
    SeqOfOTD_FirstSetMsrs_R98_Ext = SEQ_OF(name='SeqOfOTD-FirstSetMsrs-R98-Ext', mode=MODE_TYPE)
    _SeqOfOTD_FirstSetMsrs_R98_Ext__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'OTD-FirstSetMsrs')))
    SeqOfOTD_FirstSetMsrs_R98_Ext._cont = _SeqOfOTD_FirstSetMsrs_R98_Ext__item_
    SeqOfOTD_FirstSetMsrs_R98_Ext._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< Rel-5-MsrPosition-Rsp-Extension >-----#
    Rel_5_MsrPosition_Rsp_Extension = SEQ(name='Rel-5-MsrPosition-Rsp-Extension', mode=MODE_TYPE)
    _Rel_5_MsrPosition_Rsp_Extension_extended_reference = SEQ(name='extended-reference', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Extended-reference')), opt=True)
    _Rel_5_MsrPosition_Rsp_Extension_otd_MeasureInfo_5_Ext = SEQ_OF(name='otd-MeasureInfo-5-Ext', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'OTD-MeasureInfo-5-Ext')), opt=True)
    _Rel_5_MsrPosition_Rsp_Extension_ulPseudoSegInd = ENUM(name='ulPseudoSegInd', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'UlPseudoSegInd')), opt=True)
    Rel_5_MsrPosition_Rsp_Extension._cont = ASN1Dict([
        ('extended-reference', _Rel_5_MsrPosition_Rsp_Extension_extended_reference),
        ('otd-MeasureInfo-5-Ext', _Rel_5_MsrPosition_Rsp_Extension_otd_MeasureInfo_5_Ext),
        ('ulPseudoSegInd', _Rel_5_MsrPosition_Rsp_Extension_ulPseudoSegInd),
        ])
    Rel_5_MsrPosition_Rsp_Extension._ext = []
    
    #-----< Extended-reference >-----#
    Extended_reference = SEQ(name='Extended-reference', mode=MODE_TYPE)
    _Extended_reference_smlc_code = INT(name='smlc-code', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Extended_reference_smlc_code._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _Extended_reference_transaction_ID = INT(name='transaction-ID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Extended_reference_transaction_ID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=262143)], ev=None, er=[])
    Extended_reference._cont = ASN1Dict([
        ('smlc-code', _Extended_reference_smlc_code),
        ('transaction-ID', _Extended_reference_transaction_ID),
        ])
    Extended_reference._ext = None
    
    #-----< OTD-MeasureInfo-5-Ext >-----#
    OTD_MeasureInfo_5_Ext = SEQ_OF(name='OTD-MeasureInfo-5-Ext', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'SeqOfOTD-MsrElementRest')))
    
    #-----< UlPseudoSegInd >-----#
    UlPseudoSegInd = ENUM(name='UlPseudoSegInd', mode=MODE_TYPE)
    UlPseudoSegInd._cont = ASN1Dict([('firstOfMany', 0), ('secondOfMany', 1)])
    UlPseudoSegInd._ext = None
    
    #-----< Rel5-MsrPosition-Req-Extension >-----#
    Rel5_MsrPosition_Req_Extension = SEQ(name='Rel5-MsrPosition-Req-Extension', mode=MODE_TYPE)
    _Rel5_MsrPosition_Req_Extension_extended_reference = SEQ(name='extended-reference', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Extended-reference')))
    Rel5_MsrPosition_Req_Extension._cont = ASN1Dict([
        ('extended-reference', _Rel5_MsrPosition_Req_Extension_extended_reference),
        ])
    Rel5_MsrPosition_Req_Extension._ext = []
    
    #-----< Rel5-AssistanceData-Extension >-----#
    Rel5_AssistanceData_Extension = SEQ(name='Rel5-AssistanceData-Extension', mode=MODE_TYPE)
    _Rel5_AssistanceData_Extension_extended_reference = SEQ(name='extended-reference', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Extended-reference')))
    Rel5_AssistanceData_Extension._cont = ASN1Dict([
        ('extended-reference', _Rel5_AssistanceData_Extension_extended_reference),
        ])
    Rel5_AssistanceData_Extension._ext = []
    
    #-----< Rel-5-ProtocolError-Extension >-----#
    Rel_5_ProtocolError_Extension = SEQ(name='Rel-5-ProtocolError-Extension', mode=MODE_TYPE)
    _Rel_5_ProtocolError_Extension_extended_reference = SEQ(name='extended-reference', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Extended-reference')), opt=True)
    Rel_5_ProtocolError_Extension._cont = ASN1Dict([
        ('extended-reference', _Rel_5_ProtocolError_Extension_extended_reference),
        ])
    Rel_5_ProtocolError_Extension._ext = []
    
    #-----< Rel7-MsrPosition-Req-Extension >-----#
    Rel7_MsrPosition_Req_Extension = SEQ(name='Rel7-MsrPosition-Req-Extension', mode=MODE_TYPE)
    _Rel7_MsrPosition_Req_Extension_velocityRequested = NULL(name='velocityRequested', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Rel7_MsrPosition_Req_Extension_ganssPositionMethod = BIT_STR(name='ganssPositionMethod', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSPositioningMethod')), opt=True)
    _Rel7_MsrPosition_Req_Extension_ganss_AssistData = SEQ(name='ganss-AssistData', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSS-AssistData')), opt=True)
    _Rel7_MsrPosition_Req_Extension_ganssCarrierPhaseMeasurementRequest = NULL(name='ganssCarrierPhaseMeasurementRequest', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Rel7_MsrPosition_Req_Extension_ganssTODGSMTimeAssociationMeasurementRequest = NULL(name='ganssTODGSMTimeAssociationMeasurementRequest', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Rel7_MsrPosition_Req_Extension_requiredResponseTime = INT(name='requiredResponseTime', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'RequiredResponseTime')), opt=True)
    _Rel7_MsrPosition_Req_Extension_add_GPS_AssistData = SEQ(name='add-GPS-AssistData', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Add-GPS-AssistData')), opt=True)
    _Rel7_MsrPosition_Req_Extension_ganssMultiFreqMeasurementRequest = NULL(name='ganssMultiFreqMeasurementRequest', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    Rel7_MsrPosition_Req_Extension._cont = ASN1Dict([
        ('velocityRequested', _Rel7_MsrPosition_Req_Extension_velocityRequested),
        ('ganssPositionMethod', _Rel7_MsrPosition_Req_Extension_ganssPositionMethod),
        ('ganss-AssistData', _Rel7_MsrPosition_Req_Extension_ganss_AssistData),
        ('ganssCarrierPhaseMeasurementRequest', _Rel7_MsrPosition_Req_Extension_ganssCarrierPhaseMeasurementRequest),
        ('ganssTODGSMTimeAssociationMeasurementRequest', _Rel7_MsrPosition_Req_Extension_ganssTODGSMTimeAssociationMeasurementRequest),
        ('requiredResponseTime', _Rel7_MsrPosition_Req_Extension_requiredResponseTime),
        ('add-GPS-AssistData', _Rel7_MsrPosition_Req_Extension_add_GPS_AssistData),
        ('ganssMultiFreqMeasurementRequest', _Rel7_MsrPosition_Req_Extension_ganssMultiFreqMeasurementRequest),
        ])
    Rel7_MsrPosition_Req_Extension._ext = []
    
    #-----< GANSSPositioningMethod >-----#
    GANSSPositioningMethod = BIT_STR(name='GANSSPositioningMethod', mode=MODE_TYPE)
    GANSSPositioningMethod._cont = ASN1Dict([('gps', 0), ('galileo', 1), ('sbas', 2), ('modernizedGPS', 3), ('qzss', 4), ('glonass', 5), ('bds', 6)])
    GANSSPositioningMethod._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=16)], ev=None, er=[])
    
    #-----< GANSS-AssistData >-----#
    GANSS_AssistData = SEQ(name='GANSS-AssistData', mode=MODE_TYPE)
    _GANSS_AssistData_ganss_controlHeader = SEQ(name='ganss-controlHeader', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSS-ControlHeader')))
    GANSS_AssistData._cont = ASN1Dict([
        ('ganss-controlHeader', _GANSS_AssistData_ganss_controlHeader),
        ])
    GANSS_AssistData._ext = None
    
    #-----< GANSS-ControlHeader >-----#
    GANSS_ControlHeader = SEQ(name='GANSS-ControlHeader', mode=MODE_TYPE)
    _GANSS_ControlHeader_ganssCommonAssistData = SEQ(name='ganssCommonAssistData', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSCommonAssistData')), opt=True)
    _GANSS_ControlHeader_ganssGenericAssistDataList = SEQ_OF(name='ganssGenericAssistDataList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfGANSSGenericAssistDataElement')), opt=True)
    GANSS_ControlHeader._cont = ASN1Dict([
        ('ganssCommonAssistData', _GANSS_ControlHeader_ganssCommonAssistData),
        ('ganssGenericAssistDataList', _GANSS_ControlHeader_ganssGenericAssistDataList),
        ])
    GANSS_ControlHeader._ext = None
    
    #-----< GANSSCommonAssistData >-----#
    GANSSCommonAssistData = SEQ(name='GANSSCommonAssistData', mode=MODE_TYPE)
    _GANSSCommonAssistData_ganssReferenceTime = SEQ(name='ganssReferenceTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSReferenceTime')), opt=True)
    _GANSSCommonAssistData_ganssRefLocation = SEQ(name='ganssRefLocation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSRefLocation')), opt=True)
    _GANSSCommonAssistData_ganssIonosphericModel = SEQ(name='ganssIonosphericModel', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSIonosphericModel')), opt=True)
    _GANSSCommonAssistData_ganssAddIonosphericModel = SEQ(name='ganssAddIonosphericModel', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSAddIonosphericModel')), opt=True)
    _GANSSCommonAssistData_ganssEarthOrientParam = SEQ(name='ganssEarthOrientParam', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSEarthOrientParam')), opt=True)
    _GANSSCommonAssistData_ganssReferenceTime_R10_Ext = SEQ(name='ganssReferenceTime-R10-Ext', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSReferenceTime-R10-Ext')), opt=True)
    GANSSCommonAssistData._cont = ASN1Dict([
        ('ganssReferenceTime', _GANSSCommonAssistData_ganssReferenceTime),
        ('ganssRefLocation', _GANSSCommonAssistData_ganssRefLocation),
        ('ganssIonosphericModel', _GANSSCommonAssistData_ganssIonosphericModel),
        ('ganssAddIonosphericModel', _GANSSCommonAssistData_ganssAddIonosphericModel),
        ('ganssEarthOrientParam', _GANSSCommonAssistData_ganssEarthOrientParam),
        ('ganssReferenceTime-R10-Ext', _GANSSCommonAssistData_ganssReferenceTime_R10_Ext),
        ])
    GANSSCommonAssistData._ext = ['ganssAddIonosphericModel', 'ganssEarthOrientParam', 'ganssReferenceTime-R10-Ext']
    
    #-----< SeqOfGANSSGenericAssistDataElement >-----#
    SeqOfGANSSGenericAssistDataElement = SEQ_OF(name='SeqOfGANSSGenericAssistDataElement', mode=MODE_TYPE)
    _SeqOfGANSSGenericAssistDataElement__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSSGenericAssistDataElement')))
    SeqOfGANSSGenericAssistDataElement._cont = _SeqOfGANSSGenericAssistDataElement__item_
    SeqOfGANSSGenericAssistDataElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< GANSSGenericAssistDataElement >-----#
    GANSSGenericAssistDataElement = SEQ(name='GANSSGenericAssistDataElement', mode=MODE_TYPE)
    _GANSSGenericAssistDataElement_ganssID = INT(name='ganssID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSGenericAssistDataElement_ganssID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _GANSSGenericAssistDataElement_ganssTimeModel = SEQ_OF(name='ganssTimeModel', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfGANSSTimeModel')), opt=True)
    _GANSSGenericAssistDataElement_ganssDiffCorrections = SEQ(name='ganssDiffCorrections', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSDiffCorrections')), opt=True)
    _GANSSGenericAssistDataElement_ganssNavigationModel = SEQ(name='ganssNavigationModel', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSNavModel')), opt=True)
    _GANSSGenericAssistDataElement_ganssRealTimeIntegrity = SEQ(name='ganssRealTimeIntegrity', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSRealTimeIntegrity')), opt=True)
    _GANSSGenericAssistDataElement_ganssDataBitAssist = SEQ(name='ganssDataBitAssist', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSDataBitAssist')), opt=True)
    _GANSSGenericAssistDataElement_ganssRefMeasurementAssist = SEQ(name='ganssRefMeasurementAssist', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSRefMeasurementAssist')), opt=True)
    _GANSSGenericAssistDataElement_ganssAlmanacModel = SEQ(name='ganssAlmanacModel', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSAlmanacModel')), opt=True)
    _GANSSGenericAssistDataElement_ganssUTCModel = SEQ(name='ganssUTCModel', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSUTCModel')), opt=True)
    _GANSSGenericAssistDataElement_ganssEphemerisExtension = SEQ(name='ganssEphemerisExtension', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSEphemerisExtension')), opt=True)
    _GANSSGenericAssistDataElement_ganssEphemerisExtCheck = SEQ(name='ganssEphemerisExtCheck', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSEphemerisExtensionCheck')), opt=True)
    _GANSSGenericAssistDataElement_sbasID = INT(name='sbasID', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSGenericAssistDataElement_sbasID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _GANSSGenericAssistDataElement_ganssAddUTCModel = CHOICE(name='ganssAddUTCModel', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSAddUTCModel')), opt=True)
    _GANSSGenericAssistDataElement_ganssAuxiliaryInfo = CHOICE(name='ganssAuxiliaryInfo', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSAuxiliaryInformation')), opt=True)
    _GANSSGenericAssistDataElement_ganssDiffCorrectionsValidityPeriod = SEQ_OF(name='ganssDiffCorrectionsValidityPeriod', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSDiffCorrectionsValidityPeriod')), opt=True)
    _GANSSGenericAssistDataElement_ganssTimeModel_R10_Ext = SEQ_OF(name='ganssTimeModel-R10-Ext', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfGANSSTimeModel-R10-Ext')), opt=True)
    _GANSSGenericAssistDataElement_ganssRefMeasurementAssist_R10_Ext = SEQ_OF(name='ganssRefMeasurementAssist-R10-Ext', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSRefMeasurementAssist-R10-Ext')), opt=True)
    _GANSSGenericAssistDataElement_ganssAlmanacModel_R10_Ext = SEQ(name='ganssAlmanacModel-R10-Ext', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSAlmanacModel-R10-Ext')), opt=True)
    _GANSSGenericAssistDataElement_ganssAlmanacModel_R12_Ext = SEQ(name='ganssAlmanacModel-R12-Ext', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSAlmanacModel-R12-Ext')), opt=True)
    _GANSSGenericAssistDataElement_ganssRefMeasurementAssist_R12_Ext = SEQ(name='ganssRefMeasurementAssist-R12-Ext', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSRefMeasurementAssist-R12-Ext')), opt=True)
    _GANSSGenericAssistDataElement_bdsDifferentialCorrections_r12 = SEQ(name='bdsDifferentialCorrections-r12', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BDS-DiffCorrections-r12')), opt=True)
    _GANSSGenericAssistDataElement_bdsGridModel_r12 = SEQ(name='bdsGridModel-r12', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BDS-GridModelParameter-r12')), opt=True)
    GANSSGenericAssistDataElement._cont = ASN1Dict([
        ('ganssID', _GANSSGenericAssistDataElement_ganssID),
        ('ganssTimeModel', _GANSSGenericAssistDataElement_ganssTimeModel),
        ('ganssDiffCorrections', _GANSSGenericAssistDataElement_ganssDiffCorrections),
        ('ganssNavigationModel', _GANSSGenericAssistDataElement_ganssNavigationModel),
        ('ganssRealTimeIntegrity', _GANSSGenericAssistDataElement_ganssRealTimeIntegrity),
        ('ganssDataBitAssist', _GANSSGenericAssistDataElement_ganssDataBitAssist),
        ('ganssRefMeasurementAssist', _GANSSGenericAssistDataElement_ganssRefMeasurementAssist),
        ('ganssAlmanacModel', _GANSSGenericAssistDataElement_ganssAlmanacModel),
        ('ganssUTCModel', _GANSSGenericAssistDataElement_ganssUTCModel),
        ('ganssEphemerisExtension', _GANSSGenericAssistDataElement_ganssEphemerisExtension),
        ('ganssEphemerisExtCheck', _GANSSGenericAssistDataElement_ganssEphemerisExtCheck),
        ('sbasID', _GANSSGenericAssistDataElement_sbasID),
        ('ganssAddUTCModel', _GANSSGenericAssistDataElement_ganssAddUTCModel),
        ('ganssAuxiliaryInfo', _GANSSGenericAssistDataElement_ganssAuxiliaryInfo),
        ('ganssDiffCorrectionsValidityPeriod', _GANSSGenericAssistDataElement_ganssDiffCorrectionsValidityPeriod),
        ('ganssTimeModel-R10-Ext', _GANSSGenericAssistDataElement_ganssTimeModel_R10_Ext),
        ('ganssRefMeasurementAssist-R10-Ext', _GANSSGenericAssistDataElement_ganssRefMeasurementAssist_R10_Ext),
        ('ganssAlmanacModel-R10-Ext', _GANSSGenericAssistDataElement_ganssAlmanacModel_R10_Ext),
        ('ganssAlmanacModel-R12-Ext', _GANSSGenericAssistDataElement_ganssAlmanacModel_R12_Ext),
        ('ganssRefMeasurementAssist-R12-Ext', _GANSSGenericAssistDataElement_ganssRefMeasurementAssist_R12_Ext),
        ('bdsDifferentialCorrections-r12', _GANSSGenericAssistDataElement_bdsDifferentialCorrections_r12),
        ('bdsGridModel-r12', _GANSSGenericAssistDataElement_bdsGridModel_r12),
        ])
    GANSSGenericAssistDataElement._ext = ['sbasID', 'ganssAddUTCModel', 'ganssAuxiliaryInfo', 'ganssDiffCorrectionsValidityPeriod', 'ganssTimeModel-R10-Ext', 'ganssRefMeasurementAssist-R10-Ext', 'ganssAlmanacModel-R10-Ext', 'ganssAlmanacModel-R12-Ext', 'ganssRefMeasurementAssist-R12-Ext', 'bdsDifferentialCorrections-r12', 'bdsGridModel-r12']
    
    #-----< GANSSReferenceTime >-----#
    GANSSReferenceTime = SEQ(name='GANSSReferenceTime', mode=MODE_TYPE)
    _GANSSReferenceTime_ganssRefTimeInfo = SEQ(name='ganssRefTimeInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSRefTimeInfo')))
    _GANSSReferenceTime_ganssTOD_GSMTimeAssociation = SEQ(name='ganssTOD-GSMTimeAssociation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSTOD-GSMTimeAssociation')), opt=True)
    GANSSReferenceTime._cont = ASN1Dict([
        ('ganssRefTimeInfo', _GANSSReferenceTime_ganssRefTimeInfo),
        ('ganssTOD-GSMTimeAssociation', _GANSSReferenceTime_ganssTOD_GSMTimeAssociation),
        ])
    GANSSReferenceTime._ext = None
    
    #-----< GANSSRefTimeInfo >-----#
    GANSSRefTimeInfo = SEQ(name='GANSSRefTimeInfo', mode=MODE_TYPE)
    _GANSSRefTimeInfo_ganssDay = INT(name='ganssDay', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSRefTimeInfo_ganssDay._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8191)], ev=None, er=[])
    _GANSSRefTimeInfo_ganssTOD = INT(name='ganssTOD', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSTOD')))
    _GANSSRefTimeInfo_ganssTODUncertainty = INT(name='ganssTODUncertainty', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSTODUncertainty')), opt=True)
    _GANSSRefTimeInfo_ganssTimeID = INT(name='ganssTimeID', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSRefTimeInfo_ganssTimeID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    GANSSRefTimeInfo._cont = ASN1Dict([
        ('ganssDay', _GANSSRefTimeInfo_ganssDay),
        ('ganssTOD', _GANSSRefTimeInfo_ganssTOD),
        ('ganssTODUncertainty', _GANSSRefTimeInfo_ganssTODUncertainty),
        ('ganssTimeID', _GANSSRefTimeInfo_ganssTimeID),
        ])
    GANSSRefTimeInfo._ext = None
    
    #-----< GANSSTOD >-----#
    GANSSTOD = INT(name='GANSSTOD', mode=MODE_TYPE)
    GANSSTOD._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=86399)], ev=None, er=[])
    
    #-----< GANSSTODUncertainty >-----#
    GANSSTODUncertainty = INT(name='GANSSTODUncertainty', mode=MODE_TYPE)
    GANSSTODUncertainty._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< GANSSReferenceTime-R10-Ext >-----#
    GANSSReferenceTime_R10_Ext = SEQ(name='GANSSReferenceTime-R10-Ext', mode=MODE_TYPE)
    _GANSSReferenceTime_R10_Ext_ganssDayCycleNumber = INT(name='ganssDayCycleNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSReferenceTime_R10_Ext_ganssDayCycleNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    GANSSReferenceTime_R10_Ext._cont = ASN1Dict([
        ('ganssDayCycleNumber', _GANSSReferenceTime_R10_Ext_ganssDayCycleNumber),
        ])
    GANSSReferenceTime_R10_Ext._ext = None
    
    #-----< GANSSTOD-GSMTimeAssociation >-----#
    GANSSTOD_GSMTimeAssociation = SEQ(name='GANSSTOD-GSMTimeAssociation', mode=MODE_TYPE)
    _GANSSTOD_GSMTimeAssociation_bcchCarrier = INT(name='bcchCarrier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BCCHCarrier')))
    _GANSSTOD_GSMTimeAssociation_bsic = INT(name='bsic', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BSIC')))
    _GANSSTOD_GSMTimeAssociation_frameNumber = INT(name='frameNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'FrameNumber')))
    _GANSSTOD_GSMTimeAssociation_timeSlot = INT(name='timeSlot', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'TimeSlot')))
    _GANSSTOD_GSMTimeAssociation_bitNumber = INT(name='bitNumber', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BitNumber')))
    _GANSSTOD_GSMTimeAssociation_frameDrift = INT(name='frameDrift', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'FrameDrift')), opt=True)
    GANSSTOD_GSMTimeAssociation._cont = ASN1Dict([
        ('bcchCarrier', _GANSSTOD_GSMTimeAssociation_bcchCarrier),
        ('bsic', _GANSSTOD_GSMTimeAssociation_bsic),
        ('frameNumber', _GANSSTOD_GSMTimeAssociation_frameNumber),
        ('timeSlot', _GANSSTOD_GSMTimeAssociation_timeSlot),
        ('bitNumber', _GANSSTOD_GSMTimeAssociation_bitNumber),
        ('frameDrift', _GANSSTOD_GSMTimeAssociation_frameDrift),
        ])
    GANSSTOD_GSMTimeAssociation._ext = None
    
    #-----< FrameDrift >-----#
    FrameDrift = INT(name='FrameDrift', mode=MODE_TYPE)
    FrameDrift._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-64, ub=63)], ev=None, er=[])
    
    #-----< GANSSRefLocation >-----#
    GANSSRefLocation = SEQ(name='GANSSRefLocation', mode=MODE_TYPE)
    _GANSSRefLocation_threeDLocation = OCT_STR(name='threeDLocation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Ext-GeographicalInformation')))
    GANSSRefLocation._cont = ASN1Dict([
        ('threeDLocation', _GANSSRefLocation_threeDLocation),
        ])
    GANSSRefLocation._ext = None
    
    #-----< GANSSIonosphericModel >-----#
    GANSSIonosphericModel = SEQ(name='GANSSIonosphericModel', mode=MODE_TYPE)
    _GANSSIonosphericModel_ganssIonoModel = SEQ(name='ganssIonoModel', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSIonosphereModel')))
    _GANSSIonosphericModel_ganssIonoStormFlags = SEQ(name='ganssIonoStormFlags', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSIonoStormFlags')), opt=True)
    GANSSIonosphericModel._cont = ASN1Dict([
        ('ganssIonoModel', _GANSSIonosphericModel_ganssIonoModel),
        ('ganssIonoStormFlags', _GANSSIonosphericModel_ganssIonoStormFlags),
        ])
    GANSSIonosphericModel._ext = []
    
    #-----< GANSSIonosphereModel >-----#
    GANSSIonosphereModel = SEQ(name='GANSSIonosphereModel', mode=MODE_TYPE)
    _GANSSIonosphereModel_ai0 = INT(name='ai0', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSIonosphereModel_ai0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2047)], ev=None, er=[])
    _GANSSIonosphereModel_ai1 = INT(name='ai1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSIonosphereModel_ai1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1024, ub=1023)], ev=None, er=[])
    _GANSSIonosphereModel_ai2 = INT(name='ai2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSIonosphereModel_ai2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8192, ub=8191)], ev=None, er=[])
    GANSSIonosphereModel._cont = ASN1Dict([
        ('ai0', _GANSSIonosphereModel_ai0),
        ('ai1', _GANSSIonosphereModel_ai1),
        ('ai2', _GANSSIonosphereModel_ai2),
        ])
    GANSSIonosphereModel._ext = None
    
    #-----< GANSSIonoStormFlags >-----#
    GANSSIonoStormFlags = SEQ(name='GANSSIonoStormFlags', mode=MODE_TYPE)
    _GANSSIonoStormFlags_ionoStormFlag1 = INT(name='ionoStormFlag1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSIonoStormFlags_ionoStormFlag1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _GANSSIonoStormFlags_ionoStormFlag2 = INT(name='ionoStormFlag2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSIonoStormFlags_ionoStormFlag2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _GANSSIonoStormFlags_ionoStormFlag3 = INT(name='ionoStormFlag3', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSIonoStormFlags_ionoStormFlag3._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _GANSSIonoStormFlags_ionoStormFlag4 = INT(name='ionoStormFlag4', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSIonoStormFlags_ionoStormFlag4._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _GANSSIonoStormFlags_ionoStormFlag5 = INT(name='ionoStormFlag5', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSIonoStormFlags_ionoStormFlag5._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    GANSSIonoStormFlags._cont = ASN1Dict([
        ('ionoStormFlag1', _GANSSIonoStormFlags_ionoStormFlag1),
        ('ionoStormFlag2', _GANSSIonoStormFlags_ionoStormFlag2),
        ('ionoStormFlag3', _GANSSIonoStormFlags_ionoStormFlag3),
        ('ionoStormFlag4', _GANSSIonoStormFlags_ionoStormFlag4),
        ('ionoStormFlag5', _GANSSIonoStormFlags_ionoStormFlag5),
        ])
    GANSSIonoStormFlags._ext = None
    
    #-----< GANSSAddIonosphericModel >-----#
    GANSSAddIonosphericModel = SEQ(name='GANSSAddIonosphericModel', mode=MODE_TYPE)
    _GANSSAddIonosphericModel_dataID = BIT_STR(name='dataID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSAddIonosphericModel_dataID._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _GANSSAddIonosphericModel_ionoModel = SEQ(name='ionoModel', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'IonosphericModel')))
    GANSSAddIonosphericModel._cont = ASN1Dict([
        ('dataID', _GANSSAddIonosphericModel_dataID),
        ('ionoModel', _GANSSAddIonosphericModel_ionoModel),
        ])
    GANSSAddIonosphericModel._ext = None
    
    #-----< GANSSEarthOrientParam >-----#
    GANSSEarthOrientParam = SEQ(name='GANSSEarthOrientParam', mode=MODE_TYPE)
    _GANSSEarthOrientParam_teop = INT(name='teop', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEarthOrientParam_teop._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _GANSSEarthOrientParam_pmX = INT(name='pmX', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEarthOrientParam_pmX._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1048576, ub=1048575)], ev=None, er=[])
    _GANSSEarthOrientParam_pmXdot = INT(name='pmXdot', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEarthOrientParam_pmXdot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16384, ub=16383)], ev=None, er=[])
    _GANSSEarthOrientParam_pmY = INT(name='pmY', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEarthOrientParam_pmY._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1048576, ub=1048575)], ev=None, er=[])
    _GANSSEarthOrientParam_pmYdot = INT(name='pmYdot', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEarthOrientParam_pmYdot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16384, ub=16383)], ev=None, er=[])
    _GANSSEarthOrientParam_deltaUT1 = INT(name='deltaUT1', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEarthOrientParam_deltaUT1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1073741824, ub=1073741823)], ev=None, er=[])
    _GANSSEarthOrientParam_deltaUT1dot = INT(name='deltaUT1dot', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEarthOrientParam_deltaUT1dot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-262144, ub=262143)], ev=None, er=[])
    GANSSEarthOrientParam._cont = ASN1Dict([
        ('teop', _GANSSEarthOrientParam_teop),
        ('pmX', _GANSSEarthOrientParam_pmX),
        ('pmXdot', _GANSSEarthOrientParam_pmXdot),
        ('pmY', _GANSSEarthOrientParam_pmY),
        ('pmYdot', _GANSSEarthOrientParam_pmYdot),
        ('deltaUT1', _GANSSEarthOrientParam_deltaUT1),
        ('deltaUT1dot', _GANSSEarthOrientParam_deltaUT1dot),
        ])
    GANSSEarthOrientParam._ext = None
    
    #-----< SeqOfGANSSTimeModel >-----#
    SeqOfGANSSTimeModel = SEQ_OF(name='SeqOfGANSSTimeModel', mode=MODE_TYPE)
    _SeqOfGANSSTimeModel__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSSTimeModelElement')))
    SeqOfGANSSTimeModel._cont = _SeqOfGANSSTimeModel__item_
    SeqOfGANSSTimeModel._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=7)], ev=None, er=[])
    
    #-----< GANSSTimeModelElement >-----#
    GANSSTimeModelElement = SEQ(name='GANSSTimeModelElement', mode=MODE_TYPE)
    _GANSSTimeModelElement_ganssTimeModelRefTime = INT(name='ganssTimeModelRefTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSTimeModelElement_ganssTimeModelRefTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _GANSSTimeModelElement_tA0 = INT(name='tA0', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'TA0')))
    _GANSSTimeModelElement_tA1 = INT(name='tA1', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'TA1')), opt=True)
    _GANSSTimeModelElement_tA2 = INT(name='tA2', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'TA2')), opt=True)
    _GANSSTimeModelElement_gnssTOID = INT(name='gnssTOID', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSTimeModelElement_gnssTOID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _GANSSTimeModelElement_weekNumber = INT(name='weekNumber', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSTimeModelElement_weekNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8191)], ev=None, er=[])
    GANSSTimeModelElement._cont = ASN1Dict([
        ('ganssTimeModelRefTime', _GANSSTimeModelElement_ganssTimeModelRefTime),
        ('tA0', _GANSSTimeModelElement_tA0),
        ('tA1', _GANSSTimeModelElement_tA1),
        ('tA2', _GANSSTimeModelElement_tA2),
        ('gnssTOID', _GANSSTimeModelElement_gnssTOID),
        ('weekNumber', _GANSSTimeModelElement_weekNumber),
        ])
    GANSSTimeModelElement._ext = None
    
    #-----< TA0 >-----#
    TA0 = INT(name='TA0', mode=MODE_TYPE)
    TA0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    
    #-----< TA1 >-----#
    TA1 = INT(name='TA1', mode=MODE_TYPE)
    TA1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    
    #-----< TA2 >-----#
    TA2 = INT(name='TA2', mode=MODE_TYPE)
    TA2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-64, ub=63)], ev=None, er=[])
    
    #-----< SeqOfGANSSTimeModel-R10-Ext >-----#
    SeqOfGANSSTimeModel_R10_Ext = SEQ_OF(name='SeqOfGANSSTimeModel-R10-Ext', mode=MODE_TYPE)
    _SeqOfGANSSTimeModel_R10_Ext__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSSTimeModelElement-R10-Ext')))
    SeqOfGANSSTimeModel_R10_Ext._cont = _SeqOfGANSSTimeModel_R10_Ext__item_
    SeqOfGANSSTimeModel_R10_Ext._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=7)], ev=None, er=[])
    
    #-----< GANSSTimeModelElement-R10-Ext >-----#
    GANSSTimeModelElement_R10_Ext = SEQ(name='GANSSTimeModelElement-R10-Ext', mode=MODE_TYPE)
    _GANSSTimeModelElement_R10_Ext_gnssTOID = INT(name='gnssTOID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSTimeModelElement_R10_Ext_gnssTOID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _GANSSTimeModelElement_R10_Ext_deltaT = INT(name='deltaT', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSTimeModelElement_R10_Ext_deltaT._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    GANSSTimeModelElement_R10_Ext._cont = ASN1Dict([
        ('gnssTOID', _GANSSTimeModelElement_R10_Ext_gnssTOID),
        ('deltaT', _GANSSTimeModelElement_R10_Ext_deltaT),
        ])
    GANSSTimeModelElement_R10_Ext._ext = None
    
    #-----< GANSSDiffCorrections >-----#
    GANSSDiffCorrections = SEQ(name='GANSSDiffCorrections', mode=MODE_TYPE)
    _GANSSDiffCorrections_dganssRefTime = INT(name='dganssRefTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSDiffCorrections_dganssRefTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=119)], ev=None, er=[])
    _GANSSDiffCorrections_sgnTypeList = SEQ_OF(name='sgnTypeList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfSgnTypeElement')))
    GANSSDiffCorrections._cont = ASN1Dict([
        ('dganssRefTime', _GANSSDiffCorrections_dganssRefTime),
        ('sgnTypeList', _GANSSDiffCorrections_sgnTypeList),
        ])
    GANSSDiffCorrections._ext = None
    
    #-----< SeqOfSgnTypeElement >-----#
    SeqOfSgnTypeElement = SEQ_OF(name='SeqOfSgnTypeElement', mode=MODE_TYPE)
    _SeqOfSgnTypeElement__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'SgnTypeElement')))
    SeqOfSgnTypeElement._cont = _SeqOfSgnTypeElement__item_
    SeqOfSgnTypeElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< SgnTypeElement >-----#
    SgnTypeElement = SEQ(name='SgnTypeElement', mode=MODE_TYPE)
    _SgnTypeElement_ganssSignalID = INT(name='ganssSignalID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSSignalID')))
    _SgnTypeElement_ganssStatusHealth = INT(name='ganssStatusHealth', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SgnTypeElement_ganssStatusHealth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _SgnTypeElement_dganssSgnList = SEQ_OF(name='dganssSgnList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfDGANSSSgnElement')))
    SgnTypeElement._cont = ASN1Dict([
        ('ganssSignalID', _SgnTypeElement_ganssSignalID),
        ('ganssStatusHealth', _SgnTypeElement_ganssStatusHealth),
        ('dganssSgnList', _SgnTypeElement_dganssSgnList),
        ])
    SgnTypeElement._ext = None
    
    #-----< GANSSSignalID >-----#
    GANSSSignalID = INT(name='GANSSSignalID', mode=MODE_TYPE)
    GANSSSignalID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< SeqOfDGANSSSgnElement >-----#
    SeqOfDGANSSSgnElement = SEQ_OF(name='SeqOfDGANSSSgnElement', mode=MODE_TYPE)
    _SeqOfDGANSSSgnElement__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'DGANSSSgnElement')))
    SeqOfDGANSSSgnElement._cont = _SeqOfDGANSSSgnElement__item_
    SeqOfDGANSSSgnElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< DGANSSSgnElement >-----#
    DGANSSSgnElement = SEQ(name='DGANSSSgnElement', mode=MODE_TYPE)
    _DGANSSSgnElement_svID = INT(name='svID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _DGANSSSgnElement_iod = INT(name='iod', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DGANSSSgnElement_iod._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    _DGANSSSgnElement_udre = INT(name='udre', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DGANSSSgnElement_udre._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    _DGANSSSgnElement_pseudoRangeCor = INT(name='pseudoRangeCor', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DGANSSSgnElement_pseudoRangeCor._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2047, ub=2047)], ev=None, er=[])
    _DGANSSSgnElement_rangeRateCor = INT(name='rangeRateCor', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DGANSSSgnElement_rangeRateCor._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=127)], ev=None, er=[])
    DGANSSSgnElement._cont = ASN1Dict([
        ('svID', _DGANSSSgnElement_svID),
        ('iod', _DGANSSSgnElement_iod),
        ('udre', _DGANSSSgnElement_udre),
        ('pseudoRangeCor', _DGANSSSgnElement_pseudoRangeCor),
        ('rangeRateCor', _DGANSSSgnElement_rangeRateCor),
        ])
    DGANSSSgnElement._ext = None
    
    #-----< SVID >-----#
    SVID = INT(name='SVID', mode=MODE_TYPE)
    SVID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    
    #-----< GANSSNavModel >-----#
    GANSSNavModel = SEQ(name='GANSSNavModel', mode=MODE_TYPE)
    _GANSSNavModel_nonBroadcastIndFlag = INT(name='nonBroadcastIndFlag', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSNavModel_nonBroadcastIndFlag._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _GANSSNavModel_ganssSatelliteList = SEQ_OF(name='ganssSatelliteList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfGANSSSatelliteElement')))
    GANSSNavModel._cont = ASN1Dict([
        ('nonBroadcastIndFlag', _GANSSNavModel_nonBroadcastIndFlag),
        ('ganssSatelliteList', _GANSSNavModel_ganssSatelliteList),
        ])
    GANSSNavModel._ext = None
    
    #-----< SeqOfGANSSSatelliteElement >-----#
    SeqOfGANSSSatelliteElement = SEQ_OF(name='SeqOfGANSSSatelliteElement', mode=MODE_TYPE)
    _SeqOfGANSSSatelliteElement__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSSSatelliteElement')))
    SeqOfGANSSSatelliteElement._cont = _SeqOfGANSSSatelliteElement__item_
    SeqOfGANSSSatelliteElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< GANSSSatelliteElement >-----#
    GANSSSatelliteElement = SEQ(name='GANSSSatelliteElement', mode=MODE_TYPE)
    _GANSSSatelliteElement_svID = INT(name='svID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _GANSSSatelliteElement_svHealth = BIT_STR(name='svHealth', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSSatelliteElement_svHealth._const_sz = ASN1Set(rv=[5], rr=[], ev=None, er=[])
    _GANSSSatelliteElement_iod = INT(name='iod', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSSatelliteElement_iod._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    _GANSSSatelliteElement_ganssClockModel = CHOICE(name='ganssClockModel', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSClockModel')))
    _GANSSSatelliteElement_ganssOrbitModel = CHOICE(name='ganssOrbitModel', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSOrbitModel')))
    _GANSSSatelliteElement_svHealthMSB = BIT_STR(name='svHealthMSB', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSSatelliteElement_svHealthMSB._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _GANSSSatelliteElement_iodMSB = INT(name='iodMSB', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSSatelliteElement_iodMSB._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _GANSSSatelliteElement_svHealthExt = BIT_STR(name='svHealthExt', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSSatelliteElement_svHealthExt._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    GANSSSatelliteElement._cont = ASN1Dict([
        ('svID', _GANSSSatelliteElement_svID),
        ('svHealth', _GANSSSatelliteElement_svHealth),
        ('iod', _GANSSSatelliteElement_iod),
        ('ganssClockModel', _GANSSSatelliteElement_ganssClockModel),
        ('ganssOrbitModel', _GANSSSatelliteElement_ganssOrbitModel),
        ('svHealthMSB', _GANSSSatelliteElement_svHealthMSB),
        ('iodMSB', _GANSSSatelliteElement_iodMSB),
        ('svHealthExt', _GANSSSatelliteElement_svHealthExt),
        ])
    GANSSSatelliteElement._ext = ['svHealthMSB', 'iodMSB', 'svHealthExt']
    
    #-----< GANSSOrbitModel >-----#
    GANSSOrbitModel = CHOICE(name='GANSSOrbitModel', mode=MODE_TYPE)
    _GANSSOrbitModel_keplerianSet = SEQ(name='keplerianSet', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'NavModel-KeplerianSet')))
    _GANSSOrbitModel_navKeplerianSet = SEQ(name='navKeplerianSet', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'NavModel-NAVKeplerianSet')))
    _GANSSOrbitModel_cnavKeplerianSet = SEQ(name='cnavKeplerianSet', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'NavModel-CNAVKeplerianSet')))
    _GANSSOrbitModel_glonassECEF = SEQ(name='glonassECEF', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'NavModel-GLONASSecef')))
    _GANSSOrbitModel_sbasECEF = SEQ(name='sbasECEF', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'NavModel-SBASecef')))
    _GANSSOrbitModel_bdsKeplerianSet_r12 = SEQ(name='bdsKeplerianSet-r12', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'NavModel-BDSKeplerianSet-r12')))
    GANSSOrbitModel._cont = ASN1Dict([
        ('keplerianSet', _GANSSOrbitModel_keplerianSet),
        ('navKeplerianSet', _GANSSOrbitModel_navKeplerianSet),
        ('cnavKeplerianSet', _GANSSOrbitModel_cnavKeplerianSet),
        ('glonassECEF', _GANSSOrbitModel_glonassECEF),
        ('sbasECEF', _GANSSOrbitModel_sbasECEF),
        ('bdsKeplerianSet-r12', _GANSSOrbitModel_bdsKeplerianSet_r12),
        ])
    GANSSOrbitModel._ext = ['navKeplerianSet', 'cnavKeplerianSet', 'glonassECEF', 'sbasECEF', 'bdsKeplerianSet-r12']
    
    #-----< NavModel-KeplerianSet >-----#
    NavModel_KeplerianSet = SEQ(name='NavModel-KeplerianSet', mode=MODE_TYPE)
    _NavModel_KeplerianSet_keplerToe = INT(name='keplerToe', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_KeplerianSet_keplerToe._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16383)], ev=None, er=[])
    _NavModel_KeplerianSet_keplerW = INT(name='keplerW', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_KeplerianSet_keplerW._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _NavModel_KeplerianSet_keplerDeltaN = INT(name='keplerDeltaN', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_KeplerianSet_keplerDeltaN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _NavModel_KeplerianSet_keplerM0 = INT(name='keplerM0', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_KeplerianSet_keplerM0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _NavModel_KeplerianSet_keplerOmegaDot = INT(name='keplerOmegaDot', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_KeplerianSet_keplerOmegaDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _NavModel_KeplerianSet_keplerE = INT(name='keplerE', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_KeplerianSet_keplerE._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    _NavModel_KeplerianSet_keplerIDot = INT(name='keplerIDot', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_KeplerianSet_keplerIDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8192, ub=8191)], ev=None, er=[])
    _NavModel_KeplerianSet_keplerAPowerHalf = INT(name='keplerAPowerHalf', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_KeplerianSet_keplerAPowerHalf._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    _NavModel_KeplerianSet_keplerI0 = INT(name='keplerI0', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_KeplerianSet_keplerI0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _NavModel_KeplerianSet_keplerOmega0 = INT(name='keplerOmega0', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_KeplerianSet_keplerOmega0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _NavModel_KeplerianSet_keplerCrs = INT(name='keplerCrs', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_KeplerianSet_keplerCrs._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _NavModel_KeplerianSet_keplerCis = INT(name='keplerCis', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_KeplerianSet_keplerCis._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _NavModel_KeplerianSet_keplerCus = INT(name='keplerCus', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_KeplerianSet_keplerCus._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _NavModel_KeplerianSet_keplerCrc = INT(name='keplerCrc', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_KeplerianSet_keplerCrc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _NavModel_KeplerianSet_keplerCic = INT(name='keplerCic', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_KeplerianSet_keplerCic._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _NavModel_KeplerianSet_keplerCuc = INT(name='keplerCuc', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_KeplerianSet_keplerCuc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    NavModel_KeplerianSet._cont = ASN1Dict([
        ('keplerToe', _NavModel_KeplerianSet_keplerToe),
        ('keplerW', _NavModel_KeplerianSet_keplerW),
        ('keplerDeltaN', _NavModel_KeplerianSet_keplerDeltaN),
        ('keplerM0', _NavModel_KeplerianSet_keplerM0),
        ('keplerOmegaDot', _NavModel_KeplerianSet_keplerOmegaDot),
        ('keplerE', _NavModel_KeplerianSet_keplerE),
        ('keplerIDot', _NavModel_KeplerianSet_keplerIDot),
        ('keplerAPowerHalf', _NavModel_KeplerianSet_keplerAPowerHalf),
        ('keplerI0', _NavModel_KeplerianSet_keplerI0),
        ('keplerOmega0', _NavModel_KeplerianSet_keplerOmega0),
        ('keplerCrs', _NavModel_KeplerianSet_keplerCrs),
        ('keplerCis', _NavModel_KeplerianSet_keplerCis),
        ('keplerCus', _NavModel_KeplerianSet_keplerCus),
        ('keplerCrc', _NavModel_KeplerianSet_keplerCrc),
        ('keplerCic', _NavModel_KeplerianSet_keplerCic),
        ('keplerCuc', _NavModel_KeplerianSet_keplerCuc),
        ])
    NavModel_KeplerianSet._ext = None
    
    #-----< NavModel-NAVKeplerianSet >-----#
    NavModel_NAVKeplerianSet = SEQ(name='NavModel-NAVKeplerianSet', mode=MODE_TYPE)
    _NavModel_NAVKeplerianSet_navURA = INT(name='navURA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_NAVKeplerianSet_navURA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _NavModel_NAVKeplerianSet_navFitFlag = INT(name='navFitFlag', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_NAVKeplerianSet_navFitFlag._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _NavModel_NAVKeplerianSet_navToe = INT(name='navToe', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_NAVKeplerianSet_navToe._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=37799)], ev=None, er=[])
    _NavModel_NAVKeplerianSet_navOmega = INT(name='navOmega', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_NAVKeplerianSet_navOmega._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _NavModel_NAVKeplerianSet_navDeltaN = INT(name='navDeltaN', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_NAVKeplerianSet_navDeltaN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _NavModel_NAVKeplerianSet_navM0 = INT(name='navM0', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_NAVKeplerianSet_navM0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _NavModel_NAVKeplerianSet_navOmegaADot = INT(name='navOmegaADot', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_NAVKeplerianSet_navOmegaADot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _NavModel_NAVKeplerianSet_navE = INT(name='navE', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_NAVKeplerianSet_navE._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    _NavModel_NAVKeplerianSet_navIDot = INT(name='navIDot', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_NAVKeplerianSet_navIDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8192, ub=8191)], ev=None, er=[])
    _NavModel_NAVKeplerianSet_navAPowerHalf = INT(name='navAPowerHalf', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_NAVKeplerianSet_navAPowerHalf._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    _NavModel_NAVKeplerianSet_navI0 = INT(name='navI0', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_NAVKeplerianSet_navI0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _NavModel_NAVKeplerianSet_navOmegaA0 = INT(name='navOmegaA0', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_NAVKeplerianSet_navOmegaA0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _NavModel_NAVKeplerianSet_navCrs = INT(name='navCrs', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_NAVKeplerianSet_navCrs._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _NavModel_NAVKeplerianSet_navCis = INT(name='navCis', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_NAVKeplerianSet_navCis._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _NavModel_NAVKeplerianSet_navCus = INT(name='navCus', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_NAVKeplerianSet_navCus._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _NavModel_NAVKeplerianSet_navCrc = INT(name='navCrc', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_NAVKeplerianSet_navCrc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _NavModel_NAVKeplerianSet_navCic = INT(name='navCic', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_NAVKeplerianSet_navCic._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _NavModel_NAVKeplerianSet_navCuc = INT(name='navCuc', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_NAVKeplerianSet_navCuc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    NavModel_NAVKeplerianSet._cont = ASN1Dict([
        ('navURA', _NavModel_NAVKeplerianSet_navURA),
        ('navFitFlag', _NavModel_NAVKeplerianSet_navFitFlag),
        ('navToe', _NavModel_NAVKeplerianSet_navToe),
        ('navOmega', _NavModel_NAVKeplerianSet_navOmega),
        ('navDeltaN', _NavModel_NAVKeplerianSet_navDeltaN),
        ('navM0', _NavModel_NAVKeplerianSet_navM0),
        ('navOmegaADot', _NavModel_NAVKeplerianSet_navOmegaADot),
        ('navE', _NavModel_NAVKeplerianSet_navE),
        ('navIDot', _NavModel_NAVKeplerianSet_navIDot),
        ('navAPowerHalf', _NavModel_NAVKeplerianSet_navAPowerHalf),
        ('navI0', _NavModel_NAVKeplerianSet_navI0),
        ('navOmegaA0', _NavModel_NAVKeplerianSet_navOmegaA0),
        ('navCrs', _NavModel_NAVKeplerianSet_navCrs),
        ('navCis', _NavModel_NAVKeplerianSet_navCis),
        ('navCus', _NavModel_NAVKeplerianSet_navCus),
        ('navCrc', _NavModel_NAVKeplerianSet_navCrc),
        ('navCic', _NavModel_NAVKeplerianSet_navCic),
        ('navCuc', _NavModel_NAVKeplerianSet_navCuc),
        ])
    NavModel_NAVKeplerianSet._ext = None
    
    #-----< NavModel-CNAVKeplerianSet >-----#
    NavModel_CNAVKeplerianSet = SEQ(name='NavModel-CNAVKeplerianSet', mode=MODE_TYPE)
    _NavModel_CNAVKeplerianSet_cnavTop = INT(name='cnavTop', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_CNAVKeplerianSet_cnavTop._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2015)], ev=None, er=[])
    _NavModel_CNAVKeplerianSet_cnavURAindex = INT(name='cnavURAindex', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_CNAVKeplerianSet_cnavURAindex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _NavModel_CNAVKeplerianSet_cnavDeltaA = INT(name='cnavDeltaA', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_CNAVKeplerianSet_cnavDeltaA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-33554432, ub=33554431)], ev=None, er=[])
    _NavModel_CNAVKeplerianSet_cnavAdot = INT(name='cnavAdot', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_CNAVKeplerianSet_cnavAdot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16777216, ub=16777215)], ev=None, er=[])
    _NavModel_CNAVKeplerianSet_cnavDeltaNo = INT(name='cnavDeltaNo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_CNAVKeplerianSet_cnavDeltaNo._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-65536, ub=65535)], ev=None, er=[])
    _NavModel_CNAVKeplerianSet_cnavDeltaNoDot = INT(name='cnavDeltaNoDot', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_CNAVKeplerianSet_cnavDeltaNoDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4194304, ub=4194303)], ev=None, er=[])
    _NavModel_CNAVKeplerianSet_cnavMo = INT(name='cnavMo', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_CNAVKeplerianSet_cnavMo._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4294967296, ub=4294967295)], ev=None, er=[])
    _NavModel_CNAVKeplerianSet_cnavE = INT(name='cnavE', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_CNAVKeplerianSet_cnavE._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8589934591)], ev=None, er=[])
    _NavModel_CNAVKeplerianSet_cnavOmega = INT(name='cnavOmega', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_CNAVKeplerianSet_cnavOmega._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4294967296, ub=4294967295)], ev=None, er=[])
    _NavModel_CNAVKeplerianSet_cnavOMEGA0 = INT(name='cnavOMEGA0', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_CNAVKeplerianSet_cnavOMEGA0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4294967296, ub=4294967295)], ev=None, er=[])
    _NavModel_CNAVKeplerianSet_cnavDeltaOmegaDot = INT(name='cnavDeltaOmegaDot', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_CNAVKeplerianSet_cnavDeltaOmegaDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-65536, ub=65535)], ev=None, er=[])
    _NavModel_CNAVKeplerianSet_cnavIo = INT(name='cnavIo', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_CNAVKeplerianSet_cnavIo._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4294967296, ub=4294967295)], ev=None, er=[])
    _NavModel_CNAVKeplerianSet_cnavIoDot = INT(name='cnavIoDot', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_CNAVKeplerianSet_cnavIoDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16384, ub=16383)], ev=None, er=[])
    _NavModel_CNAVKeplerianSet_cnavCis = INT(name='cnavCis', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_CNAVKeplerianSet_cnavCis._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _NavModel_CNAVKeplerianSet_cnavCic = INT(name='cnavCic', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_CNAVKeplerianSet_cnavCic._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _NavModel_CNAVKeplerianSet_cnavCrs = INT(name='cnavCrs', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_CNAVKeplerianSet_cnavCrs._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _NavModel_CNAVKeplerianSet_cnavCrc = INT(name='cnavCrc', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_CNAVKeplerianSet_cnavCrc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _NavModel_CNAVKeplerianSet_cnavCus = INT(name='cnavCus', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_CNAVKeplerianSet_cnavCus._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1048576, ub=1048575)], ev=None, er=[])
    _NavModel_CNAVKeplerianSet_cnavCuc = INT(name='cnavCuc', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_CNAVKeplerianSet_cnavCuc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1048576, ub=1048575)], ev=None, er=[])
    NavModel_CNAVKeplerianSet._cont = ASN1Dict([
        ('cnavTop', _NavModel_CNAVKeplerianSet_cnavTop),
        ('cnavURAindex', _NavModel_CNAVKeplerianSet_cnavURAindex),
        ('cnavDeltaA', _NavModel_CNAVKeplerianSet_cnavDeltaA),
        ('cnavAdot', _NavModel_CNAVKeplerianSet_cnavAdot),
        ('cnavDeltaNo', _NavModel_CNAVKeplerianSet_cnavDeltaNo),
        ('cnavDeltaNoDot', _NavModel_CNAVKeplerianSet_cnavDeltaNoDot),
        ('cnavMo', _NavModel_CNAVKeplerianSet_cnavMo),
        ('cnavE', _NavModel_CNAVKeplerianSet_cnavE),
        ('cnavOmega', _NavModel_CNAVKeplerianSet_cnavOmega),
        ('cnavOMEGA0', _NavModel_CNAVKeplerianSet_cnavOMEGA0),
        ('cnavDeltaOmegaDot', _NavModel_CNAVKeplerianSet_cnavDeltaOmegaDot),
        ('cnavIo', _NavModel_CNAVKeplerianSet_cnavIo),
        ('cnavIoDot', _NavModel_CNAVKeplerianSet_cnavIoDot),
        ('cnavCis', _NavModel_CNAVKeplerianSet_cnavCis),
        ('cnavCic', _NavModel_CNAVKeplerianSet_cnavCic),
        ('cnavCrs', _NavModel_CNAVKeplerianSet_cnavCrs),
        ('cnavCrc', _NavModel_CNAVKeplerianSet_cnavCrc),
        ('cnavCus', _NavModel_CNAVKeplerianSet_cnavCus),
        ('cnavCuc', _NavModel_CNAVKeplerianSet_cnavCuc),
        ])
    NavModel_CNAVKeplerianSet._ext = None
    
    #-----< NavModel-GLONASSecef >-----#
    NavModel_GLONASSecef = SEQ(name='NavModel-GLONASSecef', mode=MODE_TYPE)
    _NavModel_GLONASSecef_gloEn = INT(name='gloEn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_GLONASSecef_gloEn._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _NavModel_GLONASSecef_gloP1 = BIT_STR(name='gloP1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_GLONASSecef_gloP1._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _NavModel_GLONASSecef_gloP2 = BOOL(name='gloP2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_GLONASSecef_gloM = INT(name='gloM', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_GLONASSecef_gloM._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    _NavModel_GLONASSecef_gloX = INT(name='gloX', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_GLONASSecef_gloX._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-67108864, ub=67108863)], ev=None, er=[])
    _NavModel_GLONASSecef_gloXdot = INT(name='gloXdot', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_GLONASSecef_gloXdot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _NavModel_GLONASSecef_gloXdotdot = INT(name='gloXdotdot', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_GLONASSecef_gloXdotdot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _NavModel_GLONASSecef_gloY = INT(name='gloY', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_GLONASSecef_gloY._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-67108864, ub=67108863)], ev=None, er=[])
    _NavModel_GLONASSecef_gloYdot = INT(name='gloYdot', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_GLONASSecef_gloYdot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _NavModel_GLONASSecef_gloYdotdot = INT(name='gloYdotdot', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_GLONASSecef_gloYdotdot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _NavModel_GLONASSecef_gloZ = INT(name='gloZ', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_GLONASSecef_gloZ._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-67108864, ub=67108863)], ev=None, er=[])
    _NavModel_GLONASSecef_gloZdot = INT(name='gloZdot', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_GLONASSecef_gloZdot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _NavModel_GLONASSecef_gloZdotdot = INT(name='gloZdotdot', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_GLONASSecef_gloZdotdot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    NavModel_GLONASSecef._cont = ASN1Dict([
        ('gloEn', _NavModel_GLONASSecef_gloEn),
        ('gloP1', _NavModel_GLONASSecef_gloP1),
        ('gloP2', _NavModel_GLONASSecef_gloP2),
        ('gloM', _NavModel_GLONASSecef_gloM),
        ('gloX', _NavModel_GLONASSecef_gloX),
        ('gloXdot', _NavModel_GLONASSecef_gloXdot),
        ('gloXdotdot', _NavModel_GLONASSecef_gloXdotdot),
        ('gloY', _NavModel_GLONASSecef_gloY),
        ('gloYdot', _NavModel_GLONASSecef_gloYdot),
        ('gloYdotdot', _NavModel_GLONASSecef_gloYdotdot),
        ('gloZ', _NavModel_GLONASSecef_gloZ),
        ('gloZdot', _NavModel_GLONASSecef_gloZdot),
        ('gloZdotdot', _NavModel_GLONASSecef_gloZdotdot),
        ])
    NavModel_GLONASSecef._ext = None
    
    #-----< NavModel-SBASecef >-----#
    NavModel_SBASecef = SEQ(name='NavModel-SBASecef', mode=MODE_TYPE)
    _NavModel_SBASecef_sbasTo = INT(name='sbasTo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _NavModel_SBASecef_sbasTo._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=5399)], ev=None, er=[])
    _NavModel_SBASecef_sbasAccuracy = BIT_STR(name='sbasAccuracy', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_SBASecef_sbasAccuracy._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _NavModel_SBASecef_sbasXg = INT(name='sbasXg', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_SBASecef_sbasXg._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-536870912, ub=536870911)], ev=None, er=[])
    _NavModel_SBASecef_sbasYg = INT(name='sbasYg', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_SBASecef_sbasYg._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-536870912, ub=536870911)], ev=None, er=[])
    _NavModel_SBASecef_sbasZg = INT(name='sbasZg', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_SBASecef_sbasZg._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16777216, ub=16777215)], ev=None, er=[])
    _NavModel_SBASecef_sbasXgDot = INT(name='sbasXgDot', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_SBASecef_sbasXgDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-65536, ub=65535)], ev=None, er=[])
    _NavModel_SBASecef_sbasYgDot = INT(name='sbasYgDot', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_SBASecef_sbasYgDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-65536, ub=65535)], ev=None, er=[])
    _NavModel_SBASecef_sbasZgDot = INT(name='sbasZgDot', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_SBASecef_sbasZgDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-131072, ub=131071)], ev=None, er=[])
    _NavModel_SBASecef_sbasXgDotDot = INT(name='sbasXgDotDot', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_SBASecef_sbasXgDotDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-512, ub=511)], ev=None, er=[])
    _NavModel_SBASecef_sbagYgDotDot = INT(name='sbagYgDotDot', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_SBASecef_sbagYgDotDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-512, ub=511)], ev=None, er=[])
    _NavModel_SBASecef_sbasZgDotDot = INT(name='sbasZgDotDot', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_SBASecef_sbasZgDotDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-512, ub=511)], ev=None, er=[])
    NavModel_SBASecef._cont = ASN1Dict([
        ('sbasTo', _NavModel_SBASecef_sbasTo),
        ('sbasAccuracy', _NavModel_SBASecef_sbasAccuracy),
        ('sbasXg', _NavModel_SBASecef_sbasXg),
        ('sbasYg', _NavModel_SBASecef_sbasYg),
        ('sbasZg', _NavModel_SBASecef_sbasZg),
        ('sbasXgDot', _NavModel_SBASecef_sbasXgDot),
        ('sbasYgDot', _NavModel_SBASecef_sbasYgDot),
        ('sbasZgDot', _NavModel_SBASecef_sbasZgDot),
        ('sbasXgDotDot', _NavModel_SBASecef_sbasXgDotDot),
        ('sbagYgDotDot', _NavModel_SBASecef_sbagYgDotDot),
        ('sbasZgDotDot', _NavModel_SBASecef_sbasZgDotDot),
        ])
    NavModel_SBASecef._ext = None
    
    #-----< NavModel-BDSKeplerianSet-r12 >-----#
    NavModel_BDSKeplerianSet_r12 = SEQ(name='NavModel-BDSKeplerianSet-r12', mode=MODE_TYPE)
    _NavModel_BDSKeplerianSet_r12_bdsAODE_r12 = INT(name='bdsAODE-r12', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_BDSKeplerianSet_r12_bdsAODE_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _NavModel_BDSKeplerianSet_r12_bdsURAI_r12 = INT(name='bdsURAI-r12', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_BDSKeplerianSet_r12_bdsURAI_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _NavModel_BDSKeplerianSet_r12_bdsToe_r12 = INT(name='bdsToe-r12', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_BDSKeplerianSet_r12_bdsToe_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=131071)], ev=None, er=[])
    _NavModel_BDSKeplerianSet_r12_bdsAPowerHalf_r12 = INT(name='bdsAPowerHalf-r12', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_BDSKeplerianSet_r12_bdsAPowerHalf_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    _NavModel_BDSKeplerianSet_r12_bdsE_r12 = INT(name='bdsE-r12', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_BDSKeplerianSet_r12_bdsE_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    _NavModel_BDSKeplerianSet_r12_bdsW_r12 = INT(name='bdsW-r12', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_BDSKeplerianSet_r12_bdsW_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _NavModel_BDSKeplerianSet_r12_bdsDeltaN_r12 = INT(name='bdsDeltaN-r12', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_BDSKeplerianSet_r12_bdsDeltaN_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _NavModel_BDSKeplerianSet_r12_bdsM0_r12 = INT(name='bdsM0-r12', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_BDSKeplerianSet_r12_bdsM0_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _NavModel_BDSKeplerianSet_r12_bdsOmega0_r12 = INT(name='bdsOmega0-r12', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_BDSKeplerianSet_r12_bdsOmega0_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _NavModel_BDSKeplerianSet_r12_bdsOmegaDot_r12 = INT(name='bdsOmegaDot-r12', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_BDSKeplerianSet_r12_bdsOmegaDot_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _NavModel_BDSKeplerianSet_r12_bdsI0_r12 = INT(name='bdsI0-r12', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_BDSKeplerianSet_r12_bdsI0_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _NavModel_BDSKeplerianSet_r12_bdsIDot_r12 = INT(name='bdsIDot-r12', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_BDSKeplerianSet_r12_bdsIDot_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8192, ub=8191)], ev=None, er=[])
    _NavModel_BDSKeplerianSet_r12_bdsCuc_r12 = INT(name='bdsCuc-r12', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_BDSKeplerianSet_r12_bdsCuc_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-131072, ub=131071)], ev=None, er=[])
    _NavModel_BDSKeplerianSet_r12_bdsCus_r12 = INT(name='bdsCus-r12', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_BDSKeplerianSet_r12_bdsCus_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-131072, ub=131071)], ev=None, er=[])
    _NavModel_BDSKeplerianSet_r12_bdsCrc_r12 = INT(name='bdsCrc-r12', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_BDSKeplerianSet_r12_bdsCrc_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-131072, ub=131071)], ev=None, er=[])
    _NavModel_BDSKeplerianSet_r12_bdsCrs_r12 = INT(name='bdsCrs-r12', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_BDSKeplerianSet_r12_bdsCrs_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-131072, ub=131071)], ev=None, er=[])
    _NavModel_BDSKeplerianSet_r12_bdsCic_r12 = INT(name='bdsCic-r12', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_BDSKeplerianSet_r12_bdsCic_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-131072, ub=131071)], ev=None, er=[])
    _NavModel_BDSKeplerianSet_r12_bdsCis_r12 = INT(name='bdsCis-r12', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NavModel_BDSKeplerianSet_r12_bdsCis_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-131072, ub=131071)], ev=None, er=[])
    NavModel_BDSKeplerianSet_r12._cont = ASN1Dict([
        ('bdsAODE-r12', _NavModel_BDSKeplerianSet_r12_bdsAODE_r12),
        ('bdsURAI-r12', _NavModel_BDSKeplerianSet_r12_bdsURAI_r12),
        ('bdsToe-r12', _NavModel_BDSKeplerianSet_r12_bdsToe_r12),
        ('bdsAPowerHalf-r12', _NavModel_BDSKeplerianSet_r12_bdsAPowerHalf_r12),
        ('bdsE-r12', _NavModel_BDSKeplerianSet_r12_bdsE_r12),
        ('bdsW-r12', _NavModel_BDSKeplerianSet_r12_bdsW_r12),
        ('bdsDeltaN-r12', _NavModel_BDSKeplerianSet_r12_bdsDeltaN_r12),
        ('bdsM0-r12', _NavModel_BDSKeplerianSet_r12_bdsM0_r12),
        ('bdsOmega0-r12', _NavModel_BDSKeplerianSet_r12_bdsOmega0_r12),
        ('bdsOmegaDot-r12', _NavModel_BDSKeplerianSet_r12_bdsOmegaDot_r12),
        ('bdsI0-r12', _NavModel_BDSKeplerianSet_r12_bdsI0_r12),
        ('bdsIDot-r12', _NavModel_BDSKeplerianSet_r12_bdsIDot_r12),
        ('bdsCuc-r12', _NavModel_BDSKeplerianSet_r12_bdsCuc_r12),
        ('bdsCus-r12', _NavModel_BDSKeplerianSet_r12_bdsCus_r12),
        ('bdsCrc-r12', _NavModel_BDSKeplerianSet_r12_bdsCrc_r12),
        ('bdsCrs-r12', _NavModel_BDSKeplerianSet_r12_bdsCrs_r12),
        ('bdsCic-r12', _NavModel_BDSKeplerianSet_r12_bdsCic_r12),
        ('bdsCis-r12', _NavModel_BDSKeplerianSet_r12_bdsCis_r12),
        ])
    NavModel_BDSKeplerianSet_r12._ext = None
    
    #-----< GANSSClockModel >-----#
    GANSSClockModel = CHOICE(name='GANSSClockModel', mode=MODE_TYPE)
    _GANSSClockModel_standardClockModelList = SEQ_OF(name='standardClockModelList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfStandardClockModelElement')))
    _GANSSClockModel_navClockModel = SEQ(name='navClockModel', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'NAVclockModel')))
    _GANSSClockModel_cnavClockModel = SEQ(name='cnavClockModel', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'CNAVclockModel')))
    _GANSSClockModel_glonassClockModel = SEQ(name='glonassClockModel', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GLONASSclockModel')))
    _GANSSClockModel_sbasClockModel = SEQ(name='sbasClockModel', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SBASclockModel')))
    _GANSSClockModel_bdsClockModel_r12 = SEQ(name='bdsClockModel-r12', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BDSClockModel-r12')))
    GANSSClockModel._cont = ASN1Dict([
        ('standardClockModelList', _GANSSClockModel_standardClockModelList),
        ('navClockModel', _GANSSClockModel_navClockModel),
        ('cnavClockModel', _GANSSClockModel_cnavClockModel),
        ('glonassClockModel', _GANSSClockModel_glonassClockModel),
        ('sbasClockModel', _GANSSClockModel_sbasClockModel),
        ('bdsClockModel-r12', _GANSSClockModel_bdsClockModel_r12),
        ])
    GANSSClockModel._ext = ['navClockModel', 'cnavClockModel', 'glonassClockModel', 'sbasClockModel', 'bdsClockModel-r12']
    
    #-----< SeqOfStandardClockModelElement >-----#
    SeqOfStandardClockModelElement = SEQ_OF(name='SeqOfStandardClockModelElement', mode=MODE_TYPE)
    _SeqOfStandardClockModelElement__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'StandardClockModelElement')))
    SeqOfStandardClockModelElement._cont = _SeqOfStandardClockModelElement__item_
    SeqOfStandardClockModelElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    
    #-----< StandardClockModelElement >-----#
    StandardClockModelElement = SEQ(name='StandardClockModelElement', mode=MODE_TYPE)
    _StandardClockModelElement_stanClockToc = INT(name='stanClockToc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _StandardClockModelElement_stanClockToc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16383)], ev=None, er=[])
    _StandardClockModelElement_stanClockAF2 = INT(name='stanClockAF2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _StandardClockModelElement_stanClockAF2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32, ub=31)], ev=None, er=[])
    _StandardClockModelElement_stanClockAF1 = INT(name='stanClockAF1', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _StandardClockModelElement_stanClockAF1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1048576, ub=1048575)], ev=None, er=[])
    _StandardClockModelElement_stanClockAF0 = INT(name='stanClockAF0', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _StandardClockModelElement_stanClockAF0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1073741824, ub=1073741823)], ev=None, er=[])
    _StandardClockModelElement_stanClockTgd = INT(name='stanClockTgd', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _StandardClockModelElement_stanClockTgd._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-512, ub=511)], ev=None, er=[])
    _StandardClockModelElement_stanModelID = INT(name='stanModelID', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _StandardClockModelElement_stanModelID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    StandardClockModelElement._cont = ASN1Dict([
        ('stanClockToc', _StandardClockModelElement_stanClockToc),
        ('stanClockAF2', _StandardClockModelElement_stanClockAF2),
        ('stanClockAF1', _StandardClockModelElement_stanClockAF1),
        ('stanClockAF0', _StandardClockModelElement_stanClockAF0),
        ('stanClockTgd', _StandardClockModelElement_stanClockTgd),
        ('stanModelID', _StandardClockModelElement_stanModelID),
        ])
    StandardClockModelElement._ext = []
    
    #-----< NAVclockModel >-----#
    NAVclockModel = SEQ(name='NAVclockModel', mode=MODE_TYPE)
    _NAVclockModel_navToc = INT(name='navToc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NAVclockModel_navToc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=37799)], ev=None, er=[])
    _NAVclockModel_navaf2 = INT(name='navaf2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NAVclockModel_navaf2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _NAVclockModel_navaf1 = INT(name='navaf1', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NAVclockModel_navaf1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _NAVclockModel_navaf0 = INT(name='navaf0', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NAVclockModel_navaf0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2097152, ub=2097151)], ev=None, er=[])
    _NAVclockModel_navTgd = INT(name='navTgd', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NAVclockModel_navTgd._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    NAVclockModel._cont = ASN1Dict([
        ('navToc', _NAVclockModel_navToc),
        ('navaf2', _NAVclockModel_navaf2),
        ('navaf1', _NAVclockModel_navaf1),
        ('navaf0', _NAVclockModel_navaf0),
        ('navTgd', _NAVclockModel_navTgd),
        ])
    NAVclockModel._ext = None
    
    #-----< CNAVclockModel >-----#
    CNAVclockModel = SEQ(name='CNAVclockModel', mode=MODE_TYPE)
    _CNAVclockModel_cnavToc = INT(name='cnavToc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CNAVclockModel_cnavToc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2015)], ev=None, er=[])
    _CNAVclockModel_cnavTop = INT(name='cnavTop', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CNAVclockModel_cnavTop._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2015)], ev=None, er=[])
    _CNAVclockModel_cnavURA0 = INT(name='cnavURA0', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CNAVclockModel_cnavURA0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _CNAVclockModel_cnavURA1 = INT(name='cnavURA1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CNAVclockModel_cnavURA1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _CNAVclockModel_cnavURA2 = INT(name='cnavURA2', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CNAVclockModel_cnavURA2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _CNAVclockModel_cnavAf2 = INT(name='cnavAf2', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CNAVclockModel_cnavAf2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-512, ub=511)], ev=None, er=[])
    _CNAVclockModel_cnavAf1 = INT(name='cnavAf1', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CNAVclockModel_cnavAf1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-524288, ub=524287)], ev=None, er=[])
    _CNAVclockModel_cnavAf0 = INT(name='cnavAf0', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CNAVclockModel_cnavAf0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-33554432, ub=33554431)], ev=None, er=[])
    _CNAVclockModel_cnavTgd = INT(name='cnavTgd', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CNAVclockModel_cnavTgd._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4096, ub=4095)], ev=None, er=[])
    _CNAVclockModel_cnavISCl1cp = INT(name='cnavISCl1cp', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CNAVclockModel_cnavISCl1cp._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4096, ub=4095)], ev=None, er=[])
    _CNAVclockModel_cnavISCl1cd = INT(name='cnavISCl1cd', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CNAVclockModel_cnavISCl1cd._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4096, ub=4095)], ev=None, er=[])
    _CNAVclockModel_cnavISCl1ca = INT(name='cnavISCl1ca', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CNAVclockModel_cnavISCl1ca._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4096, ub=4095)], ev=None, er=[])
    _CNAVclockModel_cnavISCl2c = INT(name='cnavISCl2c', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CNAVclockModel_cnavISCl2c._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4096, ub=4095)], ev=None, er=[])
    _CNAVclockModel_cnavISCl5i5 = INT(name='cnavISCl5i5', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CNAVclockModel_cnavISCl5i5._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4096, ub=4095)], ev=None, er=[])
    _CNAVclockModel_cnavISCl5q5 = INT(name='cnavISCl5q5', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CNAVclockModel_cnavISCl5q5._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4096, ub=4095)], ev=None, er=[])
    CNAVclockModel._cont = ASN1Dict([
        ('cnavToc', _CNAVclockModel_cnavToc),
        ('cnavTop', _CNAVclockModel_cnavTop),
        ('cnavURA0', _CNAVclockModel_cnavURA0),
        ('cnavURA1', _CNAVclockModel_cnavURA1),
        ('cnavURA2', _CNAVclockModel_cnavURA2),
        ('cnavAf2', _CNAVclockModel_cnavAf2),
        ('cnavAf1', _CNAVclockModel_cnavAf1),
        ('cnavAf0', _CNAVclockModel_cnavAf0),
        ('cnavTgd', _CNAVclockModel_cnavTgd),
        ('cnavISCl1cp', _CNAVclockModel_cnavISCl1cp),
        ('cnavISCl1cd', _CNAVclockModel_cnavISCl1cd),
        ('cnavISCl1ca', _CNAVclockModel_cnavISCl1ca),
        ('cnavISCl2c', _CNAVclockModel_cnavISCl2c),
        ('cnavISCl5i5', _CNAVclockModel_cnavISCl5i5),
        ('cnavISCl5q5', _CNAVclockModel_cnavISCl5q5),
        ])
    CNAVclockModel._ext = None
    
    #-----< GLONASSclockModel >-----#
    GLONASSclockModel = SEQ(name='GLONASSclockModel', mode=MODE_TYPE)
    _GLONASSclockModel_gloTau = INT(name='gloTau', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GLONASSclockModel_gloTau._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2097152, ub=2097151)], ev=None, er=[])
    _GLONASSclockModel_gloGamma = INT(name='gloGamma', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GLONASSclockModel_gloGamma._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1024, ub=1023)], ev=None, er=[])
    _GLONASSclockModel_gloDeltaTau = INT(name='gloDeltaTau', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GLONASSclockModel_gloDeltaTau._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    GLONASSclockModel._cont = ASN1Dict([
        ('gloTau', _GLONASSclockModel_gloTau),
        ('gloGamma', _GLONASSclockModel_gloGamma),
        ('gloDeltaTau', _GLONASSclockModel_gloDeltaTau),
        ])
    GLONASSclockModel._ext = None
    
    #-----< SBASclockModel >-----#
    SBASclockModel = SEQ(name='SBASclockModel', mode=MODE_TYPE)
    _SBASclockModel_sbasTo = INT(name='sbasTo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SBASclockModel_sbasTo._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=5399)], ev=None, er=[])
    _SBASclockModel_sbasAgfo = INT(name='sbasAgfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SBASclockModel_sbasAgfo._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2048, ub=2047)], ev=None, er=[])
    _SBASclockModel_sbasAgf1 = INT(name='sbasAgf1', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SBASclockModel_sbasAgf1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    SBASclockModel._cont = ASN1Dict([
        ('sbasTo', _SBASclockModel_sbasTo),
        ('sbasAgfo', _SBASclockModel_sbasAgfo),
        ('sbasAgf1', _SBASclockModel_sbasAgf1),
        ])
    SBASclockModel._ext = None
    
    #-----< BDSClockModel-r12 >-----#
    BDSClockModel_r12 = SEQ(name='BDSClockModel-r12', mode=MODE_TYPE)
    _BDSClockModel_r12_bdsAODC_r12 = INT(name='bdsAODC-r12', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BDSClockModel_r12_bdsAODC_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _BDSClockModel_r12_bdsToc_r12 = INT(name='bdsToc-r12', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BDSClockModel_r12_bdsToc_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=131071)], ev=None, er=[])
    _BDSClockModel_r12_bdsA0_r12 = INT(name='bdsA0-r12', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BDSClockModel_r12_bdsA0_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _BDSClockModel_r12_bdsA1_r12 = INT(name='bdsA1-r12', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BDSClockModel_r12_bdsA1_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2097152, ub=2097151)], ev=None, er=[])
    _BDSClockModel_r12_bdsA2_r12 = INT(name='bdsA2-r12', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BDSClockModel_r12_bdsA2_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1024, ub=1023)], ev=None, er=[])
    _BDSClockModel_r12_bdsTgd1_r12 = INT(name='bdsTgd1-r12', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BDSClockModel_r12_bdsTgd1_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-512, ub=511)], ev=None, er=[])
    BDSClockModel_r12._cont = ASN1Dict([
        ('bdsAODC-r12', _BDSClockModel_r12_bdsAODC_r12),
        ('bdsToc-r12', _BDSClockModel_r12_bdsToc_r12),
        ('bdsA0-r12', _BDSClockModel_r12_bdsA0_r12),
        ('bdsA1-r12', _BDSClockModel_r12_bdsA1_r12),
        ('bdsA2-r12', _BDSClockModel_r12_bdsA2_r12),
        ('bdsTgd1-r12', _BDSClockModel_r12_bdsTgd1_r12),
        ])
    BDSClockModel_r12._ext = None
    
    #-----< GANSSRealTimeIntegrity >-----#
    GANSSRealTimeIntegrity = SEQ(name='GANSSRealTimeIntegrity', mode=MODE_TYPE)
    _GANSSRealTimeIntegrity_ganssBadSignalList = SEQ_OF(name='ganssBadSignalList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfBadSignalElement')))
    GANSSRealTimeIntegrity._cont = ASN1Dict([
        ('ganssBadSignalList', _GANSSRealTimeIntegrity_ganssBadSignalList),
        ])
    GANSSRealTimeIntegrity._ext = None
    
    #-----< SeqOfBadSignalElement >-----#
    SeqOfBadSignalElement = SEQ_OF(name='SeqOfBadSignalElement', mode=MODE_TYPE)
    _SeqOfBadSignalElement__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'BadSignalElement')))
    SeqOfBadSignalElement._cont = _SeqOfBadSignalElement__item_
    SeqOfBadSignalElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< BadSignalElement >-----#
    BadSignalElement = SEQ(name='BadSignalElement', mode=MODE_TYPE)
    _BadSignalElement_badSVID = INT(name='badSVID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _BadSignalElement_badSignalID = BIT_STR(name='badSignalID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSSignals')), opt=True)
    BadSignalElement._cont = ASN1Dict([
        ('badSVID', _BadSignalElement_badSVID),
        ('badSignalID', _BadSignalElement_badSignalID),
        ])
    BadSignalElement._ext = None
    
    #-----< GANSSDataBitAssist >-----#
    GANSSDataBitAssist = SEQ(name='GANSSDataBitAssist', mode=MODE_TYPE)
    _GANSSDataBitAssist_ganssTOD = INT(name='ganssTOD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSDataBitAssist_ganssTOD._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=59)], ev=None, er=[])
    _GANSSDataBitAssist_ganssDataBitsSatList = SEQ_OF(name='ganssDataBitsSatList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfGanssDataBitsElement')))
    GANSSDataBitAssist._cont = ASN1Dict([
        ('ganssTOD', _GANSSDataBitAssist_ganssTOD),
        ('ganssDataBitsSatList', _GANSSDataBitAssist_ganssDataBitsSatList),
        ])
    GANSSDataBitAssist._ext = []
    
    #-----< SeqOfGanssDataBitsElement >-----#
    SeqOfGanssDataBitsElement = SEQ_OF(name='SeqOfGanssDataBitsElement', mode=MODE_TYPE)
    _SeqOfGanssDataBitsElement__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GanssDataBitsElement')))
    SeqOfGanssDataBitsElement._cont = _SeqOfGanssDataBitsElement__item_
    SeqOfGanssDataBitsElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< GanssDataBitsElement >-----#
    GanssDataBitsElement = SEQ(name='GanssDataBitsElement', mode=MODE_TYPE)
    _GanssDataBitsElement_svID = INT(name='svID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _GanssDataBitsElement_ganssDataBitsSgnList = SEQ_OF(name='ganssDataBitsSgnList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Seq-OfGANSSDataBitsSgn')))
    GanssDataBitsElement._cont = ASN1Dict([
        ('svID', _GanssDataBitsElement_svID),
        ('ganssDataBitsSgnList', _GanssDataBitsElement_ganssDataBitsSgnList),
        ])
    GanssDataBitsElement._ext = []
    
    #-----< Seq-OfGANSSDataBitsSgn >-----#
    Seq_OfGANSSDataBitsSgn = SEQ_OF(name='Seq-OfGANSSDataBitsSgn', mode=MODE_TYPE)
    _Seq_OfGANSSDataBitsSgn__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSSDataBitsSgnElement')))
    Seq_OfGANSSDataBitsSgn._cont = _Seq_OfGANSSDataBitsSgn__item_
    Seq_OfGANSSDataBitsSgn._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< GANSSDataBitsSgnElement >-----#
    GANSSDataBitsSgnElement = SEQ(name='GANSSDataBitsSgnElement', mode=MODE_TYPE)
    _GANSSDataBitsSgnElement_ganssSignalType = INT(name='ganssSignalType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSSignalID')))
    _GANSSDataBitsSgnElement_ganssDataBits = SEQ_OF(name='ganssDataBits', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOf-GANSSDataBits')))
    GANSSDataBitsSgnElement._cont = ASN1Dict([
        ('ganssSignalType', _GANSSDataBitsSgnElement_ganssSignalType),
        ('ganssDataBits', _GANSSDataBitsSgnElement_ganssDataBits),
        ])
    GANSSDataBitsSgnElement._ext = []
    
    #-----< SeqOf-GANSSDataBits >-----#
    SeqOf_GANSSDataBits = SEQ_OF(name='SeqOf-GANSSDataBits', mode=MODE_TYPE)
    _SeqOf_GANSSDataBits__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSSDataBit')))
    SeqOf_GANSSDataBits._cont = _SeqOf_GANSSDataBits__item_
    SeqOf_GANSSDataBits._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1024)], ev=None, er=[])
    
    #-----< GANSSDataBit >-----#
    GANSSDataBit = INT(name='GANSSDataBit', mode=MODE_TYPE)
    GANSSDataBit._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    
    #-----< GANSSRefMeasurementAssist >-----#
    GANSSRefMeasurementAssist = SEQ(name='GANSSRefMeasurementAssist', mode=MODE_TYPE)
    _GANSSRefMeasurementAssist_ganssSignalID = INT(name='ganssSignalID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSSignalID')))
    _GANSSRefMeasurementAssist_ganssRefMeasAssistList = SEQ_OF(name='ganssRefMeasAssistList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfGANSSRefMeasurementElement')))
    GANSSRefMeasurementAssist._cont = ASN1Dict([
        ('ganssSignalID', _GANSSRefMeasurementAssist_ganssSignalID),
        ('ganssRefMeasAssistList', _GANSSRefMeasurementAssist_ganssRefMeasAssistList),
        ])
    GANSSRefMeasurementAssist._ext = None
    
    #-----< SeqOfGANSSRefMeasurementElement >-----#
    SeqOfGANSSRefMeasurementElement = SEQ_OF(name='SeqOfGANSSRefMeasurementElement', mode=MODE_TYPE)
    _SeqOfGANSSRefMeasurementElement__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSSRefMeasurementElement')))
    SeqOfGANSSRefMeasurementElement._cont = _SeqOfGANSSRefMeasurementElement__item_
    SeqOfGANSSRefMeasurementElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GANSSRefMeasurementElement >-----#
    GANSSRefMeasurementElement = SEQ(name='GANSSRefMeasurementElement', mode=MODE_TYPE)
    _GANSSRefMeasurementElement_svID = INT(name='svID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _GANSSRefMeasurementElement_doppler0 = INT(name='doppler0', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSRefMeasurementElement_doppler0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2048, ub=2047)], ev=None, er=[])
    _GANSSRefMeasurementElement_additionalDoppler = SEQ(name='additionalDoppler', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'AdditionalDopplerFields')), opt=True)
    _GANSSRefMeasurementElement_codePhase = INT(name='codePhase', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSRefMeasurementElement_codePhase._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1022)], ev=None, er=[])
    _GANSSRefMeasurementElement_intCodePhase = INT(name='intCodePhase', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSRefMeasurementElement_intCodePhase._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    _GANSSRefMeasurementElement_codePhaseSearchWindow = INT(name='codePhaseSearchWindow', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSRefMeasurementElement_codePhaseSearchWindow._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _GANSSRefMeasurementElement_additionalAngle = SEQ(name='additionalAngle', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'AddionalAngleFields')), opt=True)
    _GANSSRefMeasurementElement_codePhase1023 = BOOL(name='codePhase1023', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    GANSSRefMeasurementElement._cont = ASN1Dict([
        ('svID', _GANSSRefMeasurementElement_svID),
        ('doppler0', _GANSSRefMeasurementElement_doppler0),
        ('additionalDoppler', _GANSSRefMeasurementElement_additionalDoppler),
        ('codePhase', _GANSSRefMeasurementElement_codePhase),
        ('intCodePhase', _GANSSRefMeasurementElement_intCodePhase),
        ('codePhaseSearchWindow', _GANSSRefMeasurementElement_codePhaseSearchWindow),
        ('additionalAngle', _GANSSRefMeasurementElement_additionalAngle),
        ('codePhase1023', _GANSSRefMeasurementElement_codePhase1023),
        ])
    GANSSRefMeasurementElement._ext = ['codePhase1023']
    
    #-----< AdditionalDopplerFields >-----#
    AdditionalDopplerFields = SEQ(name='AdditionalDopplerFields', mode=MODE_TYPE)
    _AdditionalDopplerFields_doppler1 = INT(name='doppler1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AdditionalDopplerFields_doppler1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _AdditionalDopplerFields_dopplerUncertainty = INT(name='dopplerUncertainty', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AdditionalDopplerFields_dopplerUncertainty._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4)], ev=None, er=[])
    AdditionalDopplerFields._cont = ASN1Dict([
        ('doppler1', _AdditionalDopplerFields_doppler1),
        ('dopplerUncertainty', _AdditionalDopplerFields_dopplerUncertainty),
        ])
    AdditionalDopplerFields._ext = None
    
    #-----< GANSSRefMeasurementAssist-R10-Ext >-----#
    GANSSRefMeasurementAssist_R10_Ext = SEQ_OF(name='GANSSRefMeasurementAssist-R10-Ext', mode=MODE_TYPE)
    _GANSSRefMeasurementAssist_R10_Ext__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSSRefMeasurement-R10-Ext-Element')))
    GANSSRefMeasurementAssist_R10_Ext._cont = _GANSSRefMeasurementAssist_R10_Ext__item_
    GANSSRefMeasurementAssist_R10_Ext._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GANSSRefMeasurement-R10-Ext-Element >-----#
    GANSSRefMeasurement_R10_Ext_Element = SEQ(name='GANSSRefMeasurement-R10-Ext-Element', mode=MODE_TYPE)
    _GANSSRefMeasurement_R10_Ext_Element_svID = INT(name='svID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _GANSSRefMeasurement_R10_Ext_Element_azimuthLSB = INT(name='azimuthLSB', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSRefMeasurement_R10_Ext_Element_azimuthLSB._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _GANSSRefMeasurement_R10_Ext_Element_elevationLSB = INT(name='elevationLSB', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSRefMeasurement_R10_Ext_Element_elevationLSB._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    GANSSRefMeasurement_R10_Ext_Element._cont = ASN1Dict([
        ('svID', _GANSSRefMeasurement_R10_Ext_Element_svID),
        ('azimuthLSB', _GANSSRefMeasurement_R10_Ext_Element_azimuthLSB),
        ('elevationLSB', _GANSSRefMeasurement_R10_Ext_Element_elevationLSB),
        ])
    GANSSRefMeasurement_R10_Ext_Element._ext = None
    
    #-----< GANSSRefMeasurementAssist-R12-Ext >-----#
    GANSSRefMeasurementAssist_R12_Ext = SEQ(name='GANSSRefMeasurementAssist-R12-Ext', mode=MODE_TYPE)
    _GANSSRefMeasurementAssist_R12_Ext_ganssSignalID = INT(name='ganssSignalID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSSignalID')))
    _GANSSRefMeasurementAssist_R12_Ext_confidence = INT(name='confidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSRefMeasurementAssist_R12_Ext_confidence._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=100)], ev=None, er=[])
    _GANSSRefMeasurementAssist_R12_Ext_ganssRefMeasAssistList = SEQ_OF(name='ganssRefMeasAssistList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfGANSSRefMeasurementElement-R12')), opt=True)
    GANSSRefMeasurementAssist_R12_Ext._cont = ASN1Dict([
        ('ganssSignalID', _GANSSRefMeasurementAssist_R12_Ext_ganssSignalID),
        ('confidence', _GANSSRefMeasurementAssist_R12_Ext_confidence),
        ('ganssRefMeasAssistList', _GANSSRefMeasurementAssist_R12_Ext_ganssRefMeasAssistList),
        ])
    GANSSRefMeasurementAssist_R12_Ext._ext = None
    
    #-----< SeqOfGANSSRefMeasurementElement-R12 >-----#
    SeqOfGANSSRefMeasurementElement_R12 = SEQ_OF(name='SeqOfGANSSRefMeasurementElement-R12', mode=MODE_TYPE)
    _SeqOfGANSSRefMeasurementElement_R12__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSSRefMeasurement-R12-Ext-Element')))
    SeqOfGANSSRefMeasurementElement_R12._cont = _SeqOfGANSSRefMeasurementElement_R12__item_
    SeqOfGANSSRefMeasurementElement_R12._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GANSSRefMeasurement-R12-Ext-Element >-----#
    GANSSRefMeasurement_R12_Ext_Element = SEQ(name='GANSSRefMeasurement-R12-Ext-Element', mode=MODE_TYPE)
    _GANSSRefMeasurement_R12_Ext_Element_svID = INT(name='svID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt = ENUM(name='dopplerUncertaintyExt', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt._cont = ASN1Dict([('d60', 0), ('d80', 1), ('d100', 2), ('d120', 3), ('noInformation', 4)])
    _GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt._ext = []
    GANSSRefMeasurement_R12_Ext_Element._cont = ASN1Dict([
        ('svID', _GANSSRefMeasurement_R12_Ext_Element_svID),
        ('dopplerUncertaintyExt', _GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt),
        ])
    GANSSRefMeasurement_R12_Ext_Element._ext = None
    
    #-----< GANSSAlmanacModel >-----#
    GANSSAlmanacModel = SEQ(name='GANSSAlmanacModel', mode=MODE_TYPE)
    _GANSSAlmanacModel_weekNumber = INT(name='weekNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSAlmanacModel_weekNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _GANSSAlmanacModel_toa = INT(name='toa', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSAlmanacModel_toa._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _GANSSAlmanacModel_ioda = INT(name='ioda', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSAlmanacModel_ioda._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    _GANSSAlmanacModel_ganssAlmanacList = SEQ_OF(name='ganssAlmanacList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfGANSSAlmanacElement')))
    GANSSAlmanacModel._cont = ASN1Dict([
        ('weekNumber', _GANSSAlmanacModel_weekNumber),
        ('toa', _GANSSAlmanacModel_toa),
        ('ioda', _GANSSAlmanacModel_ioda),
        ('ganssAlmanacList', _GANSSAlmanacModel_ganssAlmanacList),
        ])
    GANSSAlmanacModel._ext = None
    
    #-----< SeqOfGANSSAlmanacElement >-----#
    SeqOfGANSSAlmanacElement = SEQ_OF(name='SeqOfGANSSAlmanacElement', mode=MODE_TYPE)
    _SeqOfGANSSAlmanacElement__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSSAlmanacElement')))
    SeqOfGANSSAlmanacElement._cont = _SeqOfGANSSAlmanacElement__item_
    SeqOfGANSSAlmanacElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=36)], ev=None, er=[])
    
    #-----< GANSSAlmanacElement >-----#
    GANSSAlmanacElement = CHOICE(name='GANSSAlmanacElement', mode=MODE_TYPE)
    _GANSSAlmanacElement_keplerianAlmanacSet = SEQ(name='keplerianAlmanacSet', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Almanac-KeplerianSet')))
    _GANSSAlmanacElement_keplerianNAVAlmanac = SEQ(name='keplerianNAVAlmanac', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Almanac-NAVKeplerianSet')))
    _GANSSAlmanacElement_keplerianReducedAlmanac = SEQ(name='keplerianReducedAlmanac', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Almanac-ReducedKeplerianSet')))
    _GANSSAlmanacElement_keplerianMidiAlmanac = SEQ(name='keplerianMidiAlmanac', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Almanac-MidiAlmanacSet')))
    _GANSSAlmanacElement_keplerianGLONASS = SEQ(name='keplerianGLONASS', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Almanac-GlonassAlmanacSet')))
    _GANSSAlmanacElement_ecefSBASAlmanac = SEQ(name='ecefSBASAlmanac', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Almanac-ECEFsbasAlmanacSet')))
    _GANSSAlmanacElement_keplerianBDSAlmanac_r12 = SEQ(name='keplerianBDSAlmanac-r12', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Almanac-BDSAlmanacSet-r12')))
    GANSSAlmanacElement._cont = ASN1Dict([
        ('keplerianAlmanacSet', _GANSSAlmanacElement_keplerianAlmanacSet),
        ('keplerianNAVAlmanac', _GANSSAlmanacElement_keplerianNAVAlmanac),
        ('keplerianReducedAlmanac', _GANSSAlmanacElement_keplerianReducedAlmanac),
        ('keplerianMidiAlmanac', _GANSSAlmanacElement_keplerianMidiAlmanac),
        ('keplerianGLONASS', _GANSSAlmanacElement_keplerianGLONASS),
        ('ecefSBASAlmanac', _GANSSAlmanacElement_ecefSBASAlmanac),
        ('keplerianBDSAlmanac-r12', _GANSSAlmanacElement_keplerianBDSAlmanac_r12),
        ])
    GANSSAlmanacElement._ext = ['keplerianNAVAlmanac', 'keplerianReducedAlmanac', 'keplerianMidiAlmanac', 'keplerianGLONASS', 'ecefSBASAlmanac', 'keplerianBDSAlmanac-r12']
    
    #-----< Almanac-KeplerianSet >-----#
    Almanac_KeplerianSet = SEQ(name='Almanac-KeplerianSet', mode=MODE_TYPE)
    _Almanac_KeplerianSet_svID = INT(name='svID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _Almanac_KeplerianSet_kepAlmanacE = INT(name='kepAlmanacE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_KeplerianSet_kepAlmanacE._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2047)], ev=None, er=[])
    _Almanac_KeplerianSet_kepAlmanacDeltaI = INT(name='kepAlmanacDeltaI', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_KeplerianSet_kepAlmanacDeltaI._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1024, ub=1023)], ev=None, er=[])
    _Almanac_KeplerianSet_kepAlmanacOmegaDot = INT(name='kepAlmanacOmegaDot', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_KeplerianSet_kepAlmanacOmegaDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1024, ub=1023)], ev=None, er=[])
    _Almanac_KeplerianSet_kepSVStatusINAV = BIT_STR(name='kepSVStatusINAV', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_KeplerianSet_kepSVStatusINAV._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _Almanac_KeplerianSet_kepSVStatusFNAV = BIT_STR(name='kepSVStatusFNAV', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Almanac_KeplerianSet_kepSVStatusFNAV._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _Almanac_KeplerianSet_kepAlmanacAPowerHalf = INT(name='kepAlmanacAPowerHalf', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_KeplerianSet_kepAlmanacAPowerHalf._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4096, ub=4095)], ev=None, er=[])
    _Almanac_KeplerianSet_kepAlmanacOmega0 = INT(name='kepAlmanacOmega0', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_KeplerianSet_kepAlmanacOmega0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _Almanac_KeplerianSet_kepAlmanacW = INT(name='kepAlmanacW', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_KeplerianSet_kepAlmanacW._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _Almanac_KeplerianSet_kepAlmanacM0 = INT(name='kepAlmanacM0', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_KeplerianSet_kepAlmanacM0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _Almanac_KeplerianSet_kepAlmanacAF0 = INT(name='kepAlmanacAF0', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_KeplerianSet_kepAlmanacAF0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _Almanac_KeplerianSet_kepAlmanacAF1 = INT(name='kepAlmanacAF1', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_KeplerianSet_kepAlmanacAF1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4096, ub=4095)], ev=None, er=[])
    Almanac_KeplerianSet._cont = ASN1Dict([
        ('svID', _Almanac_KeplerianSet_svID),
        ('kepAlmanacE', _Almanac_KeplerianSet_kepAlmanacE),
        ('kepAlmanacDeltaI', _Almanac_KeplerianSet_kepAlmanacDeltaI),
        ('kepAlmanacOmegaDot', _Almanac_KeplerianSet_kepAlmanacOmegaDot),
        ('kepSVStatusINAV', _Almanac_KeplerianSet_kepSVStatusINAV),
        ('kepSVStatusFNAV', _Almanac_KeplerianSet_kepSVStatusFNAV),
        ('kepAlmanacAPowerHalf', _Almanac_KeplerianSet_kepAlmanacAPowerHalf),
        ('kepAlmanacOmega0', _Almanac_KeplerianSet_kepAlmanacOmega0),
        ('kepAlmanacW', _Almanac_KeplerianSet_kepAlmanacW),
        ('kepAlmanacM0', _Almanac_KeplerianSet_kepAlmanacM0),
        ('kepAlmanacAF0', _Almanac_KeplerianSet_kepAlmanacAF0),
        ('kepAlmanacAF1', _Almanac_KeplerianSet_kepAlmanacAF1),
        ])
    Almanac_KeplerianSet._ext = None
    
    #-----< Almanac-NAVKeplerianSet >-----#
    Almanac_NAVKeplerianSet = SEQ(name='Almanac-NAVKeplerianSet', mode=MODE_TYPE)
    _Almanac_NAVKeplerianSet_svID = INT(name='svID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _Almanac_NAVKeplerianSet_navAlmE = INT(name='navAlmE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_NAVKeplerianSet_navAlmE._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _Almanac_NAVKeplerianSet_navAlmDeltaI = INT(name='navAlmDeltaI', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_NAVKeplerianSet_navAlmDeltaI._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _Almanac_NAVKeplerianSet_navAlmOMEGADOT = INT(name='navAlmOMEGADOT', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_NAVKeplerianSet_navAlmOMEGADOT._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _Almanac_NAVKeplerianSet_navAlmSVHealth = INT(name='navAlmSVHealth', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_NAVKeplerianSet_navAlmSVHealth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _Almanac_NAVKeplerianSet_navAlmSqrtA = INT(name='navAlmSqrtA', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_NAVKeplerianSet_navAlmSqrtA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16777215)], ev=None, er=[])
    _Almanac_NAVKeplerianSet_navAlmOMEGAo = INT(name='navAlmOMEGAo', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_NAVKeplerianSet_navAlmOMEGAo._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _Almanac_NAVKeplerianSet_navAlmOmega = INT(name='navAlmOmega', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_NAVKeplerianSet_navAlmOmega._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _Almanac_NAVKeplerianSet_navAlmMo = INT(name='navAlmMo', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_NAVKeplerianSet_navAlmMo._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _Almanac_NAVKeplerianSet_navAlmaf0 = INT(name='navAlmaf0', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_NAVKeplerianSet_navAlmaf0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1024, ub=1023)], ev=None, er=[])
    _Almanac_NAVKeplerianSet_navAlmaf1 = INT(name='navAlmaf1', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_NAVKeplerianSet_navAlmaf1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1024, ub=1023)], ev=None, er=[])
    Almanac_NAVKeplerianSet._cont = ASN1Dict([
        ('svID', _Almanac_NAVKeplerianSet_svID),
        ('navAlmE', _Almanac_NAVKeplerianSet_navAlmE),
        ('navAlmDeltaI', _Almanac_NAVKeplerianSet_navAlmDeltaI),
        ('navAlmOMEGADOT', _Almanac_NAVKeplerianSet_navAlmOMEGADOT),
        ('navAlmSVHealth', _Almanac_NAVKeplerianSet_navAlmSVHealth),
        ('navAlmSqrtA', _Almanac_NAVKeplerianSet_navAlmSqrtA),
        ('navAlmOMEGAo', _Almanac_NAVKeplerianSet_navAlmOMEGAo),
        ('navAlmOmega', _Almanac_NAVKeplerianSet_navAlmOmega),
        ('navAlmMo', _Almanac_NAVKeplerianSet_navAlmMo),
        ('navAlmaf0', _Almanac_NAVKeplerianSet_navAlmaf0),
        ('navAlmaf1', _Almanac_NAVKeplerianSet_navAlmaf1),
        ])
    Almanac_NAVKeplerianSet._ext = None
    
    #-----< Almanac-ReducedKeplerianSet >-----#
    Almanac_ReducedKeplerianSet = SEQ(name='Almanac-ReducedKeplerianSet', mode=MODE_TYPE)
    _Almanac_ReducedKeplerianSet_svID = INT(name='svID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _Almanac_ReducedKeplerianSet_redAlmDeltaA = INT(name='redAlmDeltaA', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_ReducedKeplerianSet_redAlmDeltaA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _Almanac_ReducedKeplerianSet_redAlmOmega0 = INT(name='redAlmOmega0', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_ReducedKeplerianSet_redAlmOmega0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-64, ub=63)], ev=None, er=[])
    _Almanac_ReducedKeplerianSet_redAlmPhi0 = INT(name='redAlmPhi0', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_ReducedKeplerianSet_redAlmPhi0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-64, ub=63)], ev=None, er=[])
    _Almanac_ReducedKeplerianSet_redAlmL1Health = BOOL(name='redAlmL1Health', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_ReducedKeplerianSet_redAlmL2Health = BOOL(name='redAlmL2Health', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_ReducedKeplerianSet_redAlmL5Health = BOOL(name='redAlmL5Health', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Almanac_ReducedKeplerianSet._cont = ASN1Dict([
        ('svID', _Almanac_ReducedKeplerianSet_svID),
        ('redAlmDeltaA', _Almanac_ReducedKeplerianSet_redAlmDeltaA),
        ('redAlmOmega0', _Almanac_ReducedKeplerianSet_redAlmOmega0),
        ('redAlmPhi0', _Almanac_ReducedKeplerianSet_redAlmPhi0),
        ('redAlmL1Health', _Almanac_ReducedKeplerianSet_redAlmL1Health),
        ('redAlmL2Health', _Almanac_ReducedKeplerianSet_redAlmL2Health),
        ('redAlmL5Health', _Almanac_ReducedKeplerianSet_redAlmL5Health),
        ])
    Almanac_ReducedKeplerianSet._ext = None
    
    #-----< Almanac-MidiAlmanacSet >-----#
    Almanac_MidiAlmanacSet = SEQ(name='Almanac-MidiAlmanacSet', mode=MODE_TYPE)
    _Almanac_MidiAlmanacSet_svID = INT(name='svID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _Almanac_MidiAlmanacSet_midiAlmE = INT(name='midiAlmE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_MidiAlmanacSet_midiAlmE._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2047)], ev=None, er=[])
    _Almanac_MidiAlmanacSet_midiAlmDeltaI = INT(name='midiAlmDeltaI', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_MidiAlmanacSet_midiAlmDeltaI._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1024, ub=1023)], ev=None, er=[])
    _Almanac_MidiAlmanacSet_midiAlmOmegaDot = INT(name='midiAlmOmegaDot', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_MidiAlmanacSet_midiAlmOmegaDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1024, ub=1023)], ev=None, er=[])
    _Almanac_MidiAlmanacSet_midiAlmSqrtA = INT(name='midiAlmSqrtA', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_MidiAlmanacSet_midiAlmSqrtA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=131071)], ev=None, er=[])
    _Almanac_MidiAlmanacSet_midiAlmOmega0 = INT(name='midiAlmOmega0', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_MidiAlmanacSet_midiAlmOmega0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _Almanac_MidiAlmanacSet_midiAlmOmega = INT(name='midiAlmOmega', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_MidiAlmanacSet_midiAlmOmega._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _Almanac_MidiAlmanacSet_midiAlmMo = INT(name='midiAlmMo', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_MidiAlmanacSet_midiAlmMo._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _Almanac_MidiAlmanacSet_midiAlmaf0 = INT(name='midiAlmaf0', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_MidiAlmanacSet_midiAlmaf0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1024, ub=1023)], ev=None, er=[])
    _Almanac_MidiAlmanacSet_midiAlmaf1 = INT(name='midiAlmaf1', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_MidiAlmanacSet_midiAlmaf1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-512, ub=511)], ev=None, er=[])
    _Almanac_MidiAlmanacSet_midiAlmL1Health = BOOL(name='midiAlmL1Health', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_MidiAlmanacSet_midiAlmL2Health = BOOL(name='midiAlmL2Health', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_MidiAlmanacSet_midiAlmL5Health = BOOL(name='midiAlmL5Health', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Almanac_MidiAlmanacSet._cont = ASN1Dict([
        ('svID', _Almanac_MidiAlmanacSet_svID),
        ('midiAlmE', _Almanac_MidiAlmanacSet_midiAlmE),
        ('midiAlmDeltaI', _Almanac_MidiAlmanacSet_midiAlmDeltaI),
        ('midiAlmOmegaDot', _Almanac_MidiAlmanacSet_midiAlmOmegaDot),
        ('midiAlmSqrtA', _Almanac_MidiAlmanacSet_midiAlmSqrtA),
        ('midiAlmOmega0', _Almanac_MidiAlmanacSet_midiAlmOmega0),
        ('midiAlmOmega', _Almanac_MidiAlmanacSet_midiAlmOmega),
        ('midiAlmMo', _Almanac_MidiAlmanacSet_midiAlmMo),
        ('midiAlmaf0', _Almanac_MidiAlmanacSet_midiAlmaf0),
        ('midiAlmaf1', _Almanac_MidiAlmanacSet_midiAlmaf1),
        ('midiAlmL1Health', _Almanac_MidiAlmanacSet_midiAlmL1Health),
        ('midiAlmL2Health', _Almanac_MidiAlmanacSet_midiAlmL2Health),
        ('midiAlmL5Health', _Almanac_MidiAlmanacSet_midiAlmL5Health),
        ])
    Almanac_MidiAlmanacSet._ext = None
    
    #-----< Almanac-GlonassAlmanacSet >-----#
    Almanac_GlonassAlmanacSet = SEQ(name='Almanac-GlonassAlmanacSet', mode=MODE_TYPE)
    _Almanac_GlonassAlmanacSet_gloAlmNA = INT(name='gloAlmNA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_GlonassAlmanacSet_gloAlmNA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1461)], ev=None, er=[])
    _Almanac_GlonassAlmanacSet_gloAlmnA = INT(name='gloAlmnA', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_GlonassAlmanacSet_gloAlmnA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=24)], ev=None, er=[])
    _Almanac_GlonassAlmanacSet_gloAlmHA = INT(name='gloAlmHA', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_GlonassAlmanacSet_gloAlmHA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _Almanac_GlonassAlmanacSet_gloAlmLambdaA = INT(name='gloAlmLambdaA', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_GlonassAlmanacSet_gloAlmLambdaA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1048576, ub=1048575)], ev=None, er=[])
    _Almanac_GlonassAlmanacSet_gloAlmtlambdaA = INT(name='gloAlmtlambdaA', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_GlonassAlmanacSet_gloAlmtlambdaA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2097151)], ev=None, er=[])
    _Almanac_GlonassAlmanacSet_gloAlmDeltaIa = INT(name='gloAlmDeltaIa', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_GlonassAlmanacSet_gloAlmDeltaIa._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-131072, ub=131071)], ev=None, er=[])
    _Almanac_GlonassAlmanacSet_gloAlmDeltaTA = INT(name='gloAlmDeltaTA', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_GlonassAlmanacSet_gloAlmDeltaTA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2097152, ub=2097151)], ev=None, er=[])
    _Almanac_GlonassAlmanacSet_gloAlmDeltaTdotA = INT(name='gloAlmDeltaTdotA', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_GlonassAlmanacSet_gloAlmDeltaTdotA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-64, ub=63)], ev=None, er=[])
    _Almanac_GlonassAlmanacSet_gloAlmEpsilonA = INT(name='gloAlmEpsilonA', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_GlonassAlmanacSet_gloAlmEpsilonA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    _Almanac_GlonassAlmanacSet_gloAlmOmegaA = INT(name='gloAlmOmegaA', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_GlonassAlmanacSet_gloAlmOmegaA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _Almanac_GlonassAlmanacSet_gloAlmTauA = INT(name='gloAlmTauA', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_GlonassAlmanacSet_gloAlmTauA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-512, ub=511)], ev=None, er=[])
    _Almanac_GlonassAlmanacSet_gloAlmCA = INT(name='gloAlmCA', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_GlonassAlmanacSet_gloAlmCA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _Almanac_GlonassAlmanacSet_gloAlmMA = BIT_STR(name='gloAlmMA', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Almanac_GlonassAlmanacSet_gloAlmMA._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    Almanac_GlonassAlmanacSet._cont = ASN1Dict([
        ('gloAlmNA', _Almanac_GlonassAlmanacSet_gloAlmNA),
        ('gloAlmnA', _Almanac_GlonassAlmanacSet_gloAlmnA),
        ('gloAlmHA', _Almanac_GlonassAlmanacSet_gloAlmHA),
        ('gloAlmLambdaA', _Almanac_GlonassAlmanacSet_gloAlmLambdaA),
        ('gloAlmtlambdaA', _Almanac_GlonassAlmanacSet_gloAlmtlambdaA),
        ('gloAlmDeltaIa', _Almanac_GlonassAlmanacSet_gloAlmDeltaIa),
        ('gloAlmDeltaTA', _Almanac_GlonassAlmanacSet_gloAlmDeltaTA),
        ('gloAlmDeltaTdotA', _Almanac_GlonassAlmanacSet_gloAlmDeltaTdotA),
        ('gloAlmEpsilonA', _Almanac_GlonassAlmanacSet_gloAlmEpsilonA),
        ('gloAlmOmegaA', _Almanac_GlonassAlmanacSet_gloAlmOmegaA),
        ('gloAlmTauA', _Almanac_GlonassAlmanacSet_gloAlmTauA),
        ('gloAlmCA', _Almanac_GlonassAlmanacSet_gloAlmCA),
        ('gloAlmMA', _Almanac_GlonassAlmanacSet_gloAlmMA),
        ])
    Almanac_GlonassAlmanacSet._ext = None
    
    #-----< Almanac-ECEFsbasAlmanacSet >-----#
    Almanac_ECEFsbasAlmanacSet = SEQ(name='Almanac-ECEFsbasAlmanacSet', mode=MODE_TYPE)
    _Almanac_ECEFsbasAlmanacSet_sbasAlmDataID = INT(name='sbasAlmDataID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_ECEFsbasAlmanacSet_sbasAlmDataID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    _Almanac_ECEFsbasAlmanacSet_svID = INT(name='svID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _Almanac_ECEFsbasAlmanacSet_sbasAlmHealth = BIT_STR(name='sbasAlmHealth', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_ECEFsbasAlmanacSet_sbasAlmHealth._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _Almanac_ECEFsbasAlmanacSet_sbasAlmXg = INT(name='sbasAlmXg', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_ECEFsbasAlmanacSet_sbasAlmXg._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16384, ub=16383)], ev=None, er=[])
    _Almanac_ECEFsbasAlmanacSet_sbasAlmYg = INT(name='sbasAlmYg', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_ECEFsbasAlmanacSet_sbasAlmYg._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16384, ub=16383)], ev=None, er=[])
    _Almanac_ECEFsbasAlmanacSet_sbasAlmZg = INT(name='sbasAlmZg', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_ECEFsbasAlmanacSet_sbasAlmZg._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-256, ub=255)], ev=None, er=[])
    _Almanac_ECEFsbasAlmanacSet_sbasAlmXgdot = INT(name='sbasAlmXgdot', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_ECEFsbasAlmanacSet_sbasAlmXgdot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4, ub=3)], ev=None, er=[])
    _Almanac_ECEFsbasAlmanacSet_sbasAlmYgDot = INT(name='sbasAlmYgDot', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_ECEFsbasAlmanacSet_sbasAlmYgDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4, ub=3)], ev=None, er=[])
    _Almanac_ECEFsbasAlmanacSet_sbasAlmZgDot = INT(name='sbasAlmZgDot', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_ECEFsbasAlmanacSet_sbasAlmZgDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8, ub=7)], ev=None, er=[])
    _Almanac_ECEFsbasAlmanacSet_sbasAlmTo = INT(name='sbasAlmTo', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_ECEFsbasAlmanacSet_sbasAlmTo._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2047)], ev=None, er=[])
    Almanac_ECEFsbasAlmanacSet._cont = ASN1Dict([
        ('sbasAlmDataID', _Almanac_ECEFsbasAlmanacSet_sbasAlmDataID),
        ('svID', _Almanac_ECEFsbasAlmanacSet_svID),
        ('sbasAlmHealth', _Almanac_ECEFsbasAlmanacSet_sbasAlmHealth),
        ('sbasAlmXg', _Almanac_ECEFsbasAlmanacSet_sbasAlmXg),
        ('sbasAlmYg', _Almanac_ECEFsbasAlmanacSet_sbasAlmYg),
        ('sbasAlmZg', _Almanac_ECEFsbasAlmanacSet_sbasAlmZg),
        ('sbasAlmXgdot', _Almanac_ECEFsbasAlmanacSet_sbasAlmXgdot),
        ('sbasAlmYgDot', _Almanac_ECEFsbasAlmanacSet_sbasAlmYgDot),
        ('sbasAlmZgDot', _Almanac_ECEFsbasAlmanacSet_sbasAlmZgDot),
        ('sbasAlmTo', _Almanac_ECEFsbasAlmanacSet_sbasAlmTo),
        ])
    Almanac_ECEFsbasAlmanacSet._ext = None
    
    #-----< Almanac-BDSAlmanacSet-r12 >-----#
    Almanac_BDSAlmanacSet_r12 = SEQ(name='Almanac-BDSAlmanacSet-r12', mode=MODE_TYPE)
    _Almanac_BDSAlmanacSet_r12_svID = INT(name='svID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _Almanac_BDSAlmanacSet_r12_bdsAlmToa_r12 = INT(name='bdsAlmToa-r12', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Almanac_BDSAlmanacSet_r12_bdsAlmToa_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _Almanac_BDSAlmanacSet_r12_bdsAlmSqrtA_r12 = INT(name='bdsAlmSqrtA-r12', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_BDSAlmanacSet_r12_bdsAlmSqrtA_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16777215)], ev=None, er=[])
    _Almanac_BDSAlmanacSet_r12_bdsAlmE_r12 = INT(name='bdsAlmE-r12', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_BDSAlmanacSet_r12_bdsAlmE_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=131071)], ev=None, er=[])
    _Almanac_BDSAlmanacSet_r12_bdsAlmW_r12 = INT(name='bdsAlmW-r12', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_BDSAlmanacSet_r12_bdsAlmW_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _Almanac_BDSAlmanacSet_r12_bdsAlmM0_r12 = INT(name='bdsAlmM0-r12', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_BDSAlmanacSet_r12_bdsAlmM0_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _Almanac_BDSAlmanacSet_r12_bdsAlmOmega0_r12 = INT(name='bdsAlmOmega0-r12', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_BDSAlmanacSet_r12_bdsAlmOmega0_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _Almanac_BDSAlmanacSet_r12_bdsAlmOmegaDot_r12 = INT(name='bdsAlmOmegaDot-r12', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_BDSAlmanacSet_r12_bdsAlmOmegaDot_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-65536, ub=65535)], ev=None, er=[])
    _Almanac_BDSAlmanacSet_r12_bdsAlmDeltaI_r12 = INT(name='bdsAlmDeltaI-r12', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_BDSAlmanacSet_r12_bdsAlmDeltaI_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _Almanac_BDSAlmanacSet_r12_bdsAlmA0_r12 = INT(name='bdsAlmA0-r12', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_BDSAlmanacSet_r12_bdsAlmA0_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1024, ub=1023)], ev=None, er=[])
    _Almanac_BDSAlmanacSet_r12_bdsAlmA1_r12 = INT(name='bdsAlmA1-r12', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Almanac_BDSAlmanacSet_r12_bdsAlmA1_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1024, ub=1023)], ev=None, er=[])
    _Almanac_BDSAlmanacSet_r12_bdsSvHealth_r12 = BIT_STR(name='bdsSvHealth-r12', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Almanac_BDSAlmanacSet_r12_bdsSvHealth_r12._const_sz = ASN1Set(rv=[9], rr=[], ev=None, er=[])
    Almanac_BDSAlmanacSet_r12._cont = ASN1Dict([
        ('svID', _Almanac_BDSAlmanacSet_r12_svID),
        ('bdsAlmToa-r12', _Almanac_BDSAlmanacSet_r12_bdsAlmToa_r12),
        ('bdsAlmSqrtA-r12', _Almanac_BDSAlmanacSet_r12_bdsAlmSqrtA_r12),
        ('bdsAlmE-r12', _Almanac_BDSAlmanacSet_r12_bdsAlmE_r12),
        ('bdsAlmW-r12', _Almanac_BDSAlmanacSet_r12_bdsAlmW_r12),
        ('bdsAlmM0-r12', _Almanac_BDSAlmanacSet_r12_bdsAlmM0_r12),
        ('bdsAlmOmega0-r12', _Almanac_BDSAlmanacSet_r12_bdsAlmOmega0_r12),
        ('bdsAlmOmegaDot-r12', _Almanac_BDSAlmanacSet_r12_bdsAlmOmegaDot_r12),
        ('bdsAlmDeltaI-r12', _Almanac_BDSAlmanacSet_r12_bdsAlmDeltaI_r12),
        ('bdsAlmA0-r12', _Almanac_BDSAlmanacSet_r12_bdsAlmA0_r12),
        ('bdsAlmA1-r12', _Almanac_BDSAlmanacSet_r12_bdsAlmA1_r12),
        ('bdsSvHealth-r12', _Almanac_BDSAlmanacSet_r12_bdsSvHealth_r12),
        ])
    Almanac_BDSAlmanacSet_r12._ext = None
    
    #-----< GANSSAlmanacModel-R10-Ext >-----#
    GANSSAlmanacModel_R10_Ext = SEQ(name='GANSSAlmanacModel-R10-Ext', mode=MODE_TYPE)
    _GANSSAlmanacModel_R10_Ext_completeAlmanacProvided = BOOL(name='completeAlmanacProvided', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    GANSSAlmanacModel_R10_Ext._cont = ASN1Dict([
        ('completeAlmanacProvided', _GANSSAlmanacModel_R10_Ext_completeAlmanacProvided),
        ])
    GANSSAlmanacModel_R10_Ext._ext = None
    
    #-----< GANSSAlmanacModel-R12-Ext >-----#
    GANSSAlmanacModel_R12_Ext = SEQ(name='GANSSAlmanacModel-R12-Ext', mode=MODE_TYPE)
    _GANSSAlmanacModel_R12_Ext_toa_ext = INT(name='toa-ext', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSAlmanacModel_R12_Ext_toa_ext._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=256, ub=1023)], ev=None, er=[])
    _GANSSAlmanacModel_R12_Ext_ioda_ext = INT(name='ioda-ext', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSAlmanacModel_R12_Ext_ioda_ext._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=4, ub=15)], ev=None, er=[])
    GANSSAlmanacModel_R12_Ext._cont = ASN1Dict([
        ('toa-ext', _GANSSAlmanacModel_R12_Ext_toa_ext),
        ('ioda-ext', _GANSSAlmanacModel_R12_Ext_ioda_ext),
        ])
    GANSSAlmanacModel_R12_Ext._ext = None
    
    #-----< GANSSUTCModel >-----#
    GANSSUTCModel = SEQ(name='GANSSUTCModel', mode=MODE_TYPE)
    _GANSSUTCModel_ganssUtcA1 = INT(name='ganssUtcA1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSUTCModel_ganssUtcA1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _GANSSUTCModel_ganssUtcA0 = INT(name='ganssUtcA0', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSUTCModel_ganssUtcA0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _GANSSUTCModel_ganssUtcTot = INT(name='ganssUtcTot', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSUTCModel_ganssUtcTot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _GANSSUTCModel_ganssUtcWNt = INT(name='ganssUtcWNt', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSUTCModel_ganssUtcWNt._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _GANSSUTCModel_ganssUtcDeltaTls = INT(name='ganssUtcDeltaTls', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSUTCModel_ganssUtcDeltaTls._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _GANSSUTCModel_ganssUtcWNlsf = INT(name='ganssUtcWNlsf', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSUTCModel_ganssUtcWNlsf._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _GANSSUTCModel_ganssUtcDN = INT(name='ganssUtcDN', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSUTCModel_ganssUtcDN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _GANSSUTCModel_ganssUtcDeltaTlsf = INT(name='ganssUtcDeltaTlsf', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSUTCModel_ganssUtcDeltaTlsf._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    GANSSUTCModel._cont = ASN1Dict([
        ('ganssUtcA1', _GANSSUTCModel_ganssUtcA1),
        ('ganssUtcA0', _GANSSUTCModel_ganssUtcA0),
        ('ganssUtcTot', _GANSSUTCModel_ganssUtcTot),
        ('ganssUtcWNt', _GANSSUTCModel_ganssUtcWNt),
        ('ganssUtcDeltaTls', _GANSSUTCModel_ganssUtcDeltaTls),
        ('ganssUtcWNlsf', _GANSSUTCModel_ganssUtcWNlsf),
        ('ganssUtcDN', _GANSSUTCModel_ganssUtcDN),
        ('ganssUtcDeltaTlsf', _GANSSUTCModel_ganssUtcDeltaTlsf),
        ])
    GANSSUTCModel._ext = None
    
    #-----< GANSSEphemerisExtension >-----#
    GANSSEphemerisExtension = SEQ(name='GANSSEphemerisExtension', mode=MODE_TYPE)
    _GANSSEphemerisExtension_ganssEphemerisHeader = SEQ(name='ganssEphemerisHeader', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSEphemerisExtensionHeader')), opt=True)
    _GANSSEphemerisExtension_ganssReferenceSet = SEQ_OF(name='ganssReferenceSet', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfGANSSRefOrbit')), opt=True)
    _GANSSEphemerisExtension_ganssephemerisDeltasMatrix = SEQ_OF(name='ganssephemerisDeltasMatrix', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSEphemerisDeltaMatrix')), opt=True)
    GANSSEphemerisExtension._cont = ASN1Dict([
        ('ganssEphemerisHeader', _GANSSEphemerisExtension_ganssEphemerisHeader),
        ('ganssReferenceSet', _GANSSEphemerisExtension_ganssReferenceSet),
        ('ganssephemerisDeltasMatrix', _GANSSEphemerisExtension_ganssephemerisDeltasMatrix),
        ])
    GANSSEphemerisExtension._ext = []
    
    #-----< GANSSEphemerisExtensionHeader >-----#
    GANSSEphemerisExtensionHeader = SEQ(name='GANSSEphemerisExtensionHeader', mode=MODE_TYPE)
    _GANSSEphemerisExtensionHeader_timeAtEstimation = SEQ(name='timeAtEstimation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSEphemerisExtensionTime')))
    _GANSSEphemerisExtensionHeader_validityPeriod = INT(name='validityPeriod', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisExtensionHeader_validityPeriod._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _GANSSEphemerisExtensionHeader_ephemerisExtensionDuration = INT(name='ephemerisExtensionDuration', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisExtensionHeader_ephemerisExtensionDuration._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=512)], ev=None, er=[])
    GANSSEphemerisExtensionHeader._cont = ASN1Dict([
        ('timeAtEstimation', _GANSSEphemerisExtensionHeader_timeAtEstimation),
        ('validityPeriod', _GANSSEphemerisExtensionHeader_validityPeriod),
        ('ephemerisExtensionDuration', _GANSSEphemerisExtensionHeader_ephemerisExtensionDuration),
        ])
    GANSSEphemerisExtensionHeader._ext = []
    
    #-----< GANSSEphemerisExtensionTime >-----#
    GANSSEphemerisExtensionTime = SEQ(name='GANSSEphemerisExtensionTime', mode=MODE_TYPE)
    _GANSSEphemerisExtensionTime_ganssEphExtDay = INT(name='ganssEphExtDay', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisExtensionTime_ganssEphExtDay._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8191)], ev=None, er=[])
    _GANSSEphemerisExtensionTime_ganssEphExtTOD = INT(name='ganssEphExtTOD', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSTOD')))
    GANSSEphemerisExtensionTime._cont = ASN1Dict([
        ('ganssEphExtDay', _GANSSEphemerisExtensionTime_ganssEphExtDay),
        ('ganssEphExtTOD', _GANSSEphemerisExtensionTime_ganssEphExtTOD),
        ])
    GANSSEphemerisExtensionTime._ext = []
    
    #-----< ReferenceNavModel >-----#
    ReferenceNavModel = SEQ(name='ReferenceNavModel', mode=MODE_TYPE)
    _ReferenceNavModel_keplerToe = INT(name='keplerToe', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReferenceNavModel_keplerToe._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=37799)], ev=None, er=[])
    _ReferenceNavModel_keplerW = INT(name='keplerW', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReferenceNavModel_keplerW._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _ReferenceNavModel_keplerDeltaN = INT(name='keplerDeltaN', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReferenceNavModel_keplerDeltaN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _ReferenceNavModel_keplerM0 = INT(name='keplerM0', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReferenceNavModel_keplerM0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _ReferenceNavModel_keplerOmegaDot = INT(name='keplerOmegaDot', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReferenceNavModel_keplerOmegaDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _ReferenceNavModel_keplerE = INT(name='keplerE', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReferenceNavModel_keplerE._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    _ReferenceNavModel_keplerIDot = INT(name='keplerIDot', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReferenceNavModel_keplerIDot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8192, ub=8191)], ev=None, er=[])
    _ReferenceNavModel_keplerAPowerHalf = INT(name='keplerAPowerHalf', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReferenceNavModel_keplerAPowerHalf._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    _ReferenceNavModel_keplerI0 = INT(name='keplerI0', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReferenceNavModel_keplerI0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _ReferenceNavModel_keplerOmega0 = INT(name='keplerOmega0', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReferenceNavModel_keplerOmega0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _ReferenceNavModel_keplerCrs = INT(name='keplerCrs', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReferenceNavModel_keplerCrs._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _ReferenceNavModel_keplerCis = INT(name='keplerCis', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReferenceNavModel_keplerCis._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _ReferenceNavModel_keplerCus = INT(name='keplerCus', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReferenceNavModel_keplerCus._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _ReferenceNavModel_keplerCrc = INT(name='keplerCrc', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReferenceNavModel_keplerCrc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _ReferenceNavModel_keplerCic = INT(name='keplerCic', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReferenceNavModel_keplerCic._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _ReferenceNavModel_keplerCuc = INT(name='keplerCuc', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReferenceNavModel_keplerCuc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    ReferenceNavModel._cont = ASN1Dict([
        ('keplerToe', _ReferenceNavModel_keplerToe),
        ('keplerW', _ReferenceNavModel_keplerW),
        ('keplerDeltaN', _ReferenceNavModel_keplerDeltaN),
        ('keplerM0', _ReferenceNavModel_keplerM0),
        ('keplerOmegaDot', _ReferenceNavModel_keplerOmegaDot),
        ('keplerE', _ReferenceNavModel_keplerE),
        ('keplerIDot', _ReferenceNavModel_keplerIDot),
        ('keplerAPowerHalf', _ReferenceNavModel_keplerAPowerHalf),
        ('keplerI0', _ReferenceNavModel_keplerI0),
        ('keplerOmega0', _ReferenceNavModel_keplerOmega0),
        ('keplerCrs', _ReferenceNavModel_keplerCrs),
        ('keplerCis', _ReferenceNavModel_keplerCis),
        ('keplerCus', _ReferenceNavModel_keplerCus),
        ('keplerCrc', _ReferenceNavModel_keplerCrc),
        ('keplerCic', _ReferenceNavModel_keplerCic),
        ('keplerCuc', _ReferenceNavModel_keplerCuc),
        ])
    ReferenceNavModel._ext = None
    
    #-----< SeqOfGANSSRefOrbit >-----#
    SeqOfGANSSRefOrbit = SEQ_OF(name='SeqOfGANSSRefOrbit', mode=MODE_TYPE)
    _SeqOfGANSSRefOrbit__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSSReferenceOrbit')))
    SeqOfGANSSRefOrbit._cont = _SeqOfGANSSRefOrbit__item_
    SeqOfGANSSRefOrbit._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< GANSSReferenceOrbit >-----#
    GANSSReferenceOrbit = SEQ(name='GANSSReferenceOrbit', mode=MODE_TYPE)
    _GANSSReferenceOrbit_svID = INT(name='svID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _GANSSReferenceOrbit_ganssOrbitModel = SEQ(name='ganssOrbitModel', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ReferenceNavModel')))
    _GANSSReferenceOrbit_ganssClockModel = CHOICE(name='ganssClockModel', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSClockModel')))
    GANSSReferenceOrbit._cont = ASN1Dict([
        ('svID', _GANSSReferenceOrbit_svID),
        ('ganssOrbitModel', _GANSSReferenceOrbit_ganssOrbitModel),
        ('ganssClockModel', _GANSSReferenceOrbit_ganssClockModel),
        ])
    GANSSReferenceOrbit._ext = []
    
    #-----< GANSSEphemerisDeltaMatrix >-----#
    GANSSEphemerisDeltaMatrix = SEQ_OF(name='GANSSEphemerisDeltaMatrix', mode=MODE_TYPE)
    _GANSSEphemerisDeltaMatrix__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSSEphemerisDeltaEpoch')))
    GANSSEphemerisDeltaMatrix._cont = _GANSSEphemerisDeltaMatrix__item_
    GANSSEphemerisDeltaMatrix._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    
    #-----< GANSSEphemerisDeltaEpoch >-----#
    GANSSEphemerisDeltaEpoch = SEQ(name='GANSSEphemerisDeltaEpoch', mode=MODE_TYPE)
    _GANSSEphemerisDeltaEpoch_ganssDeltaEpochHeader = SEQ(name='ganssDeltaEpochHeader', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSDeltaEpochHeader')), opt=True)
    _GANSSEphemerisDeltaEpoch_ganssDeltaElementList = SEQ_OF(name='ganssDeltaElementList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSDeltaElementList')))
    GANSSEphemerisDeltaEpoch._cont = ASN1Dict([
        ('ganssDeltaEpochHeader', _GANSSEphemerisDeltaEpoch_ganssDeltaEpochHeader),
        ('ganssDeltaElementList', _GANSSEphemerisDeltaEpoch_ganssDeltaElementList),
        ])
    GANSSEphemerisDeltaEpoch._ext = []
    
    #-----< GANSSDeltaEpochHeader >-----#
    GANSSDeltaEpochHeader = SEQ(name='GANSSDeltaEpochHeader', mode=MODE_TYPE)
    _GANSSDeltaEpochHeader_validityPeriod = INT(name='validityPeriod', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSDeltaEpochHeader_validityPeriod._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _GANSSDeltaEpochHeader_ephemerisDeltaSizes = SEQ(name='ephemerisDeltaSizes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSEphemerisDeltaBitSizes')), opt=True)
    _GANSSDeltaEpochHeader_ephemerisDeltaScales = SEQ(name='ephemerisDeltaScales', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSEphemerisDeltaScales')), opt=True)
    GANSSDeltaEpochHeader._cont = ASN1Dict([
        ('validityPeriod', _GANSSDeltaEpochHeader_validityPeriod),
        ('ephemerisDeltaSizes', _GANSSDeltaEpochHeader_ephemerisDeltaSizes),
        ('ephemerisDeltaScales', _GANSSDeltaEpochHeader_ephemerisDeltaScales),
        ])
    GANSSDeltaEpochHeader._ext = []
    
    #-----< GANSSDeltaElementList >-----#
    GANSSDeltaElementList = SEQ_OF(name='GANSSDeltaElementList', mode=MODE_TYPE)
    _GANSSDeltaElementList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _GANSSDeltaElementList__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=49)], ev=None, er=[])
    GANSSDeltaElementList._cont = _GANSSDeltaElementList__item_
    GANSSDeltaElementList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< GANSSEphemerisDeltaBitSizes >-----#
    GANSSEphemerisDeltaBitSizes = SEQ(name='GANSSEphemerisDeltaBitSizes', mode=MODE_TYPE)
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_omega = INT(name='bitsize-delta-omega', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_omega._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_deltaN = INT(name='bitsize-delta-deltaN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_deltaN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_m0 = INT(name='bitsize-delta-m0', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_m0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_omegadot = INT(name='bitsize-delta-omegadot', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_omegadot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=24)], ev=None, er=[])
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_e = INT(name='bitsize-delta-e', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_e._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_idot = INT(name='bitsize-delta-idot', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_idot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=14)], ev=None, er=[])
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_sqrtA = INT(name='bitsize-delta-sqrtA', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_sqrtA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_i0 = INT(name='bitsize-delta-i0', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_i0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_omega0 = INT(name='bitsize-delta-omega0', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_omega0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_crs = INT(name='bitsize-delta-crs', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_crs._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_cis = INT(name='bitsize-delta-cis', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_cis._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_cus = INT(name='bitsize-delta-cus', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_cus._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_crc = INT(name='bitsize-delta-crc', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_crc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_cic = INT(name='bitsize-delta-cic', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_cic._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_cuc = INT(name='bitsize-delta-cuc', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_cuc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_tgd1 = INT(name='bitsize-delta-tgd1', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_tgd1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_tgd2 = INT(name='bitsize-delta-tgd2', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaBitSizes_bitsize_delta_tgd2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    GANSSEphemerisDeltaBitSizes._cont = ASN1Dict([
        ('bitsize-delta-omega', _GANSSEphemerisDeltaBitSizes_bitsize_delta_omega),
        ('bitsize-delta-deltaN', _GANSSEphemerisDeltaBitSizes_bitsize_delta_deltaN),
        ('bitsize-delta-m0', _GANSSEphemerisDeltaBitSizes_bitsize_delta_m0),
        ('bitsize-delta-omegadot', _GANSSEphemerisDeltaBitSizes_bitsize_delta_omegadot),
        ('bitsize-delta-e', _GANSSEphemerisDeltaBitSizes_bitsize_delta_e),
        ('bitsize-delta-idot', _GANSSEphemerisDeltaBitSizes_bitsize_delta_idot),
        ('bitsize-delta-sqrtA', _GANSSEphemerisDeltaBitSizes_bitsize_delta_sqrtA),
        ('bitsize-delta-i0', _GANSSEphemerisDeltaBitSizes_bitsize_delta_i0),
        ('bitsize-delta-omega0', _GANSSEphemerisDeltaBitSizes_bitsize_delta_omega0),
        ('bitsize-delta-crs', _GANSSEphemerisDeltaBitSizes_bitsize_delta_crs),
        ('bitsize-delta-cis', _GANSSEphemerisDeltaBitSizes_bitsize_delta_cis),
        ('bitsize-delta-cus', _GANSSEphemerisDeltaBitSizes_bitsize_delta_cus),
        ('bitsize-delta-crc', _GANSSEphemerisDeltaBitSizes_bitsize_delta_crc),
        ('bitsize-delta-cic', _GANSSEphemerisDeltaBitSizes_bitsize_delta_cic),
        ('bitsize-delta-cuc', _GANSSEphemerisDeltaBitSizes_bitsize_delta_cuc),
        ('bitsize-delta-tgd1', _GANSSEphemerisDeltaBitSizes_bitsize_delta_tgd1),
        ('bitsize-delta-tgd2', _GANSSEphemerisDeltaBitSizes_bitsize_delta_tgd2),
        ])
    GANSSEphemerisDeltaBitSizes._ext = []
    
    #-----< GANSSEphemerisDeltaScales >-----#
    GANSSEphemerisDeltaScales = SEQ(name='GANSSEphemerisDeltaScales', mode=MODE_TYPE)
    _GANSSEphemerisDeltaScales_scale_delta_omega = INT(name='scale-delta-omega', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaScales_scale_delta_omega._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GANSSEphemerisDeltaScales_scale_delta_deltaN = INT(name='scale-delta-deltaN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaScales_scale_delta_deltaN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GANSSEphemerisDeltaScales_scale_delta_m0 = INT(name='scale-delta-m0', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaScales_scale_delta_m0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GANSSEphemerisDeltaScales_scale_delta_omegadot = INT(name='scale-delta-omegadot', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaScales_scale_delta_omegadot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GANSSEphemerisDeltaScales_scale_delta_e = INT(name='scale-delta-e', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaScales_scale_delta_e._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GANSSEphemerisDeltaScales_scale_delta_idot = INT(name='scale-delta-idot', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaScales_scale_delta_idot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GANSSEphemerisDeltaScales_scale_delta_sqrtA = INT(name='scale-delta-sqrtA', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaScales_scale_delta_sqrtA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GANSSEphemerisDeltaScales_scale_delta_i0 = INT(name='scale-delta-i0', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaScales_scale_delta_i0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GANSSEphemerisDeltaScales_scale_delta_omega0 = INT(name='scale-delta-omega0', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaScales_scale_delta_omega0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GANSSEphemerisDeltaScales_scale_delta_crs = INT(name='scale-delta-crs', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaScales_scale_delta_crs._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GANSSEphemerisDeltaScales_scale_delta_cis = INT(name='scale-delta-cis', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaScales_scale_delta_cis._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GANSSEphemerisDeltaScales_scale_delta_cus = INT(name='scale-delta-cus', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaScales_scale_delta_cus._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GANSSEphemerisDeltaScales_scale_delta_crc = INT(name='scale-delta-crc', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaScales_scale_delta_crc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GANSSEphemerisDeltaScales_scale_delta_cic = INT(name='scale-delta-cic', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaScales_scale_delta_cic._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GANSSEphemerisDeltaScales_scale_delta_cuc = INT(name='scale-delta-cuc', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaScales_scale_delta_cuc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GANSSEphemerisDeltaScales_scale_delta_tgd1 = INT(name='scale-delta-tgd1', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaScales_scale_delta_tgd1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GANSSEphemerisDeltaScales_scale_delta_tgd2 = INT(name='scale-delta-tgd2', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSEphemerisDeltaScales_scale_delta_tgd2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    GANSSEphemerisDeltaScales._cont = ASN1Dict([
        ('scale-delta-omega', _GANSSEphemerisDeltaScales_scale_delta_omega),
        ('scale-delta-deltaN', _GANSSEphemerisDeltaScales_scale_delta_deltaN),
        ('scale-delta-m0', _GANSSEphemerisDeltaScales_scale_delta_m0),
        ('scale-delta-omegadot', _GANSSEphemerisDeltaScales_scale_delta_omegadot),
        ('scale-delta-e', _GANSSEphemerisDeltaScales_scale_delta_e),
        ('scale-delta-idot', _GANSSEphemerisDeltaScales_scale_delta_idot),
        ('scale-delta-sqrtA', _GANSSEphemerisDeltaScales_scale_delta_sqrtA),
        ('scale-delta-i0', _GANSSEphemerisDeltaScales_scale_delta_i0),
        ('scale-delta-omega0', _GANSSEphemerisDeltaScales_scale_delta_omega0),
        ('scale-delta-crs', _GANSSEphemerisDeltaScales_scale_delta_crs),
        ('scale-delta-cis', _GANSSEphemerisDeltaScales_scale_delta_cis),
        ('scale-delta-cus', _GANSSEphemerisDeltaScales_scale_delta_cus),
        ('scale-delta-crc', _GANSSEphemerisDeltaScales_scale_delta_crc),
        ('scale-delta-cic', _GANSSEphemerisDeltaScales_scale_delta_cic),
        ('scale-delta-cuc', _GANSSEphemerisDeltaScales_scale_delta_cuc),
        ('scale-delta-tgd1', _GANSSEphemerisDeltaScales_scale_delta_tgd1),
        ('scale-delta-tgd2', _GANSSEphemerisDeltaScales_scale_delta_tgd2),
        ])
    GANSSEphemerisDeltaScales._ext = []
    
    #-----< GANSSEphemerisExtensionCheck >-----#
    GANSSEphemerisExtensionCheck = SEQ(name='GANSSEphemerisExtensionCheck', mode=MODE_TYPE)
    _GANSSEphemerisExtensionCheck_ganssBeginTime = SEQ(name='ganssBeginTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSEphemerisExtensionTime')))
    _GANSSEphemerisExtensionCheck_ganssEndTime = SEQ(name='ganssEndTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSEphemerisExtensionTime')))
    _GANSSEphemerisExtensionCheck_ganssSatEventsInfo = SEQ(name='ganssSatEventsInfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSSatEventsInfo')))
    GANSSEphemerisExtensionCheck._cont = ASN1Dict([
        ('ganssBeginTime', _GANSSEphemerisExtensionCheck_ganssBeginTime),
        ('ganssEndTime', _GANSSEphemerisExtensionCheck_ganssEndTime),
        ('ganssSatEventsInfo', _GANSSEphemerisExtensionCheck_ganssSatEventsInfo),
        ])
    GANSSEphemerisExtensionCheck._ext = []
    
    #-----< GANSSSatEventsInfo >-----#
    GANSSSatEventsInfo = SEQ(name='GANSSSatEventsInfo', mode=MODE_TYPE)
    _GANSSSatEventsInfo_eventOccured = BIT_STR(name='eventOccured', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSSatEventsInfo_eventOccured._const_sz = ASN1Set(rv=[64], rr=[], ev=None, er=[])
    _GANSSSatEventsInfo_futureEventNoted = BIT_STR(name='futureEventNoted', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSSSatEventsInfo_futureEventNoted._const_sz = ASN1Set(rv=[64], rr=[], ev=None, er=[])
    GANSSSatEventsInfo._cont = ASN1Dict([
        ('eventOccured', _GANSSSatEventsInfo_eventOccured),
        ('futureEventNoted', _GANSSSatEventsInfo_futureEventNoted),
        ])
    GANSSSatEventsInfo._ext = []
    
    #-----< GANSSAddUTCModel >-----#
    GANSSAddUTCModel = CHOICE(name='GANSSAddUTCModel', mode=MODE_TYPE)
    _GANSSAddUTCModel_utcModel2 = SEQ(name='utcModel2', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'UTCmodelSet2')))
    _GANSSAddUTCModel_utcModel3 = SEQ(name='utcModel3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'UTCmodelSet3')))
    _GANSSAddUTCModel_utcModel4 = SEQ(name='utcModel4', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'UTCmodelSet4')))
    _GANSSAddUTCModel_utcModel5_r12 = SEQ(name='utcModel5-r12', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'UTCmodelSet5-r12')))
    GANSSAddUTCModel._cont = ASN1Dict([
        ('utcModel2', _GANSSAddUTCModel_utcModel2),
        ('utcModel3', _GANSSAddUTCModel_utcModel3),
        ('utcModel4', _GANSSAddUTCModel_utcModel4),
        ('utcModel5-r12', _GANSSAddUTCModel_utcModel5_r12),
        ])
    GANSSAddUTCModel._ext = ['utcModel5-r12']
    
    #-----< UTCmodelSet2 >-----#
    UTCmodelSet2 = SEQ(name='UTCmodelSet2', mode=MODE_TYPE)
    _UTCmodelSet2_utcA0 = INT(name='utcA0', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet2_utcA0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _UTCmodelSet2_utcA1 = INT(name='utcA1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet2_utcA1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4096, ub=4095)], ev=None, er=[])
    _UTCmodelSet2_utcA2 = INT(name='utcA2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet2_utcA2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-64, ub=63)], ev=None, er=[])
    _UTCmodelSet2_utcDeltaTls = INT(name='utcDeltaTls', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet2_utcDeltaTls._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _UTCmodelSet2_utcTot = INT(name='utcTot', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet2_utcTot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _UTCmodelSet2_utcWNot = INT(name='utcWNot', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet2_utcWNot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8191)], ev=None, er=[])
    _UTCmodelSet2_utcWNlsf = INT(name='utcWNlsf', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet2_utcWNlsf._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _UTCmodelSet2_utcDN = BIT_STR(name='utcDN', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet2_utcDN._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _UTCmodelSet2_utcDeltaTlsf = INT(name='utcDeltaTlsf', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet2_utcDeltaTlsf._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    UTCmodelSet2._cont = ASN1Dict([
        ('utcA0', _UTCmodelSet2_utcA0),
        ('utcA1', _UTCmodelSet2_utcA1),
        ('utcA2', _UTCmodelSet2_utcA2),
        ('utcDeltaTls', _UTCmodelSet2_utcDeltaTls),
        ('utcTot', _UTCmodelSet2_utcTot),
        ('utcWNot', _UTCmodelSet2_utcWNot),
        ('utcWNlsf', _UTCmodelSet2_utcWNlsf),
        ('utcDN', _UTCmodelSet2_utcDN),
        ('utcDeltaTlsf', _UTCmodelSet2_utcDeltaTlsf),
        ])
    UTCmodelSet2._ext = None
    
    #-----< UTCmodelSet3 >-----#
    UTCmodelSet3 = SEQ(name='UTCmodelSet3', mode=MODE_TYPE)
    _UTCmodelSet3_nA = INT(name='nA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet3_nA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1461)], ev=None, er=[])
    _UTCmodelSet3_tauC = INT(name='tauC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet3_tauC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _UTCmodelSet3_b1 = INT(name='b1', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UTCmodelSet3_b1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1024, ub=1023)], ev=None, er=[])
    _UTCmodelSet3_b2 = INT(name='b2', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UTCmodelSet3_b2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-512, ub=511)], ev=None, er=[])
    _UTCmodelSet3_kp = BIT_STR(name='kp', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UTCmodelSet3_kp._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    UTCmodelSet3._cont = ASN1Dict([
        ('nA', _UTCmodelSet3_nA),
        ('tauC', _UTCmodelSet3_tauC),
        ('b1', _UTCmodelSet3_b1),
        ('b2', _UTCmodelSet3_b2),
        ('kp', _UTCmodelSet3_kp),
        ])
    UTCmodelSet3._ext = None
    
    #-----< UTCmodelSet4 >-----#
    UTCmodelSet4 = SEQ(name='UTCmodelSet4', mode=MODE_TYPE)
    _UTCmodelSet4_utcA1wnt = INT(name='utcA1wnt', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet4_utcA1wnt._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _UTCmodelSet4_utcA0wnt = INT(name='utcA0wnt', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet4_utcA0wnt._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _UTCmodelSet4_utcTot = INT(name='utcTot', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet4_utcTot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _UTCmodelSet4_utcWNt = INT(name='utcWNt', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet4_utcWNt._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _UTCmodelSet4_utcDeltaTls = INT(name='utcDeltaTls', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet4_utcDeltaTls._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _UTCmodelSet4_utcWNlsf = INT(name='utcWNlsf', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet4_utcWNlsf._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _UTCmodelSet4_utcDN = INT(name='utcDN', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet4_utcDN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _UTCmodelSet4_utcDeltaTlsf = INT(name='utcDeltaTlsf', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet4_utcDeltaTlsf._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _UTCmodelSet4_utcStandardID = INT(name='utcStandardID', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet4_utcStandardID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    UTCmodelSet4._cont = ASN1Dict([
        ('utcA1wnt', _UTCmodelSet4_utcA1wnt),
        ('utcA0wnt', _UTCmodelSet4_utcA0wnt),
        ('utcTot', _UTCmodelSet4_utcTot),
        ('utcWNt', _UTCmodelSet4_utcWNt),
        ('utcDeltaTls', _UTCmodelSet4_utcDeltaTls),
        ('utcWNlsf', _UTCmodelSet4_utcWNlsf),
        ('utcDN', _UTCmodelSet4_utcDN),
        ('utcDeltaTlsf', _UTCmodelSet4_utcDeltaTlsf),
        ('utcStandardID', _UTCmodelSet4_utcStandardID),
        ])
    UTCmodelSet4._ext = None
    
    #-----< UTCmodelSet5-r12 >-----#
    UTCmodelSet5_r12 = SEQ(name='UTCmodelSet5-r12', mode=MODE_TYPE)
    _UTCmodelSet5_r12_utcA0_r12 = INT(name='utcA0-r12', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet5_r12_utcA0_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    _UTCmodelSet5_r12_utcA1_r12 = INT(name='utcA1-r12', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet5_r12_utcA1_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    _UTCmodelSet5_r12_utcDeltaTls_r12 = INT(name='utcDeltaTls-r12', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet5_r12_utcDeltaTls_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _UTCmodelSet5_r12_utcWNlsf_r12 = INT(name='utcWNlsf-r12', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet5_r12_utcWNlsf_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _UTCmodelSet5_r12_utcDN_r12 = INT(name='utcDN-r12', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet5_r12_utcDN_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _UTCmodelSet5_r12_utcDeltaTlsf_r12 = INT(name='utcDeltaTlsf-r12', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UTCmodelSet5_r12_utcDeltaTlsf_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    UTCmodelSet5_r12._cont = ASN1Dict([
        ('utcA0-r12', _UTCmodelSet5_r12_utcA0_r12),
        ('utcA1-r12', _UTCmodelSet5_r12_utcA1_r12),
        ('utcDeltaTls-r12', _UTCmodelSet5_r12_utcDeltaTls_r12),
        ('utcWNlsf-r12', _UTCmodelSet5_r12_utcWNlsf_r12),
        ('utcDN-r12', _UTCmodelSet5_r12_utcDN_r12),
        ('utcDeltaTlsf-r12', _UTCmodelSet5_r12_utcDeltaTlsf_r12),
        ])
    UTCmodelSet5_r12._ext = None
    
    #-----< GANSSAuxiliaryInformation >-----#
    GANSSAuxiliaryInformation = CHOICE(name='GANSSAuxiliaryInformation', mode=MODE_TYPE)
    _GANSSAuxiliaryInformation_ganssID1 = SEQ_OF(name='ganssID1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSS-ID1')))
    _GANSSAuxiliaryInformation_ganssID3 = SEQ_OF(name='ganssID3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSS-ID3')))
    GANSSAuxiliaryInformation._cont = ASN1Dict([
        ('ganssID1', _GANSSAuxiliaryInformation_ganssID1),
        ('ganssID3', _GANSSAuxiliaryInformation_ganssID3),
        ])
    GANSSAuxiliaryInformation._ext = []
    
    #-----< GANSS-ID1 >-----#
    GANSS_ID1 = SEQ_OF(name='GANSS-ID1', mode=MODE_TYPE)
    _GANSS_ID1__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSS-ID1-element')))
    GANSS_ID1._cont = _GANSS_ID1__item_
    GANSS_ID1._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< GANSS-ID1-element >-----#
    GANSS_ID1_element = SEQ(name='GANSS-ID1-element', mode=MODE_TYPE)
    _GANSS_ID1_element_svID = INT(name='svID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _GANSS_ID1_element_signalsAvailable = BIT_STR(name='signalsAvailable', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSSignals')))
    GANSS_ID1_element._cont = ASN1Dict([
        ('svID', _GANSS_ID1_element_svID),
        ('signalsAvailable', _GANSS_ID1_element_signalsAvailable),
        ])
    GANSS_ID1_element._ext = []
    
    #-----< GANSS-ID3 >-----#
    GANSS_ID3 = SEQ_OF(name='GANSS-ID3', mode=MODE_TYPE)
    _GANSS_ID3__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSS-ID3-element')))
    GANSS_ID3._cont = _GANSS_ID3__item_
    GANSS_ID3._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< GANSS-ID3-element >-----#
    GANSS_ID3_element = SEQ(name='GANSS-ID3-element', mode=MODE_TYPE)
    _GANSS_ID3_element_svID = INT(name='svID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _GANSS_ID3_element_signalsAvailable = BIT_STR(name='signalsAvailable', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSSignals')))
    _GANSS_ID3_element_channelNumber = INT(name='channelNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSS_ID3_element_channelNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-7, ub=13)], ev=None, er=[])
    GANSS_ID3_element._cont = ASN1Dict([
        ('svID', _GANSS_ID3_element_svID),
        ('signalsAvailable', _GANSS_ID3_element_signalsAvailable),
        ('channelNumber', _GANSS_ID3_element_channelNumber),
        ])
    GANSS_ID3_element._ext = []
    
    #-----< GANSSDiffCorrectionsValidityPeriod >-----#
    GANSSDiffCorrectionsValidityPeriod = SEQ_OF(name='GANSSDiffCorrectionsValidityPeriod', mode=MODE_TYPE)
    _GANSSDiffCorrectionsValidityPeriod__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'DGANSSExtensionSgnTypeElement')))
    GANSSDiffCorrectionsValidityPeriod._cont = _GANSSDiffCorrectionsValidityPeriod__item_
    GANSSDiffCorrectionsValidityPeriod._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< DGANSSExtensionSgnTypeElement >-----#
    DGANSSExtensionSgnTypeElement = SEQ(name='DGANSSExtensionSgnTypeElement', mode=MODE_TYPE)
    _DGANSSExtensionSgnTypeElement_ganssSignalID = INT(name='ganssSignalID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSSignalID')))
    _DGANSSExtensionSgnTypeElement_dganssExtensionSgnList = SEQ_OF(name='dganssExtensionSgnList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfDGANSSExtensionSgnElement')))
    DGANSSExtensionSgnTypeElement._cont = ASN1Dict([
        ('ganssSignalID', _DGANSSExtensionSgnTypeElement_ganssSignalID),
        ('dganssExtensionSgnList', _DGANSSExtensionSgnTypeElement_dganssExtensionSgnList),
        ])
    DGANSSExtensionSgnTypeElement._ext = None
    
    #-----< SeqOfDGANSSExtensionSgnElement >-----#
    SeqOfDGANSSExtensionSgnElement = SEQ_OF(name='SeqOfDGANSSExtensionSgnElement', mode=MODE_TYPE)
    _SeqOfDGANSSExtensionSgnElement__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'DGANSSExtensionSgnElement')))
    SeqOfDGANSSExtensionSgnElement._cont = _SeqOfDGANSSExtensionSgnElement__item_
    SeqOfDGANSSExtensionSgnElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< DGANSSExtensionSgnElement >-----#
    DGANSSExtensionSgnElement = SEQ(name='DGANSSExtensionSgnElement', mode=MODE_TYPE)
    _DGANSSExtensionSgnElement_svID = INT(name='svID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _DGANSSExtensionSgnElement_udreGrowthRate = INT(name='udreGrowthRate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DGANSSExtensionSgnElement_udreGrowthRate._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _DGANSSExtensionSgnElement_udreValidityTime = INT(name='udreValidityTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DGANSSExtensionSgnElement_udreValidityTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    DGANSSExtensionSgnElement._cont = ASN1Dict([
        ('svID', _DGANSSExtensionSgnElement_svID),
        ('udreGrowthRate', _DGANSSExtensionSgnElement_udreGrowthRate),
        ('udreValidityTime', _DGANSSExtensionSgnElement_udreValidityTime),
        ])
    DGANSSExtensionSgnElement._ext = []
    
    #-----< RequiredResponseTime >-----#
    RequiredResponseTime = INT(name='RequiredResponseTime', mode=MODE_TYPE)
    RequiredResponseTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    
    #-----< Add-GPS-AssistData >-----#
    Add_GPS_AssistData = SEQ(name='Add-GPS-AssistData', mode=MODE_TYPE)
    _Add_GPS_AssistData_add_GPS_controlHeader = SEQ(name='add-GPS-controlHeader', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Add-GPS-ControlHeader')))
    Add_GPS_AssistData._cont = ASN1Dict([
        ('add-GPS-controlHeader', _Add_GPS_AssistData_add_GPS_controlHeader),
        ])
    Add_GPS_AssistData._ext = None
    
    #-----< Add-GPS-ControlHeader >-----#
    Add_GPS_ControlHeader = SEQ(name='Add-GPS-ControlHeader', mode=MODE_TYPE)
    _Add_GPS_ControlHeader_gpsEphemerisExtension = SEQ(name='gpsEphemerisExtension', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSEphemerisExtension')), opt=True)
    _Add_GPS_ControlHeader_gpsEphemerisExtensionCheck = SEQ(name='gpsEphemerisExtensionCheck', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSEphemerisExtensionCheck')), opt=True)
    _Add_GPS_ControlHeader_dgpsCorrectionsValidityPeriod = SEQ_OF(name='dgpsCorrectionsValidityPeriod', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'DGPSCorrectionsValidityPeriod')), opt=True)
    _Add_GPS_ControlHeader_gpsReferenceTime_R10_Ext = SEQ(name='gpsReferenceTime-R10-Ext', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSReferenceTime-R10-Ext')), opt=True)
    _Add_GPS_ControlHeader_gpsAcquisAssist_R10_Ext = SEQ_OF(name='gpsAcquisAssist-R10-Ext', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSAcquisAssist-R10-Ext')), opt=True)
    _Add_GPS_ControlHeader_gpsAlmanac_R10_Ext = SEQ(name='gpsAlmanac-R10-Ext', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSAlmanac-R10-Ext')), opt=True)
    _Add_GPS_ControlHeader_gpsAcquisAssist_R12_Ext = SEQ(name='gpsAcquisAssist-R12-Ext', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSAcquisAssist-R12-Ext')), opt=True)
    Add_GPS_ControlHeader._cont = ASN1Dict([
        ('gpsEphemerisExtension', _Add_GPS_ControlHeader_gpsEphemerisExtension),
        ('gpsEphemerisExtensionCheck', _Add_GPS_ControlHeader_gpsEphemerisExtensionCheck),
        ('dgpsCorrectionsValidityPeriod', _Add_GPS_ControlHeader_dgpsCorrectionsValidityPeriod),
        ('gpsReferenceTime-R10-Ext', _Add_GPS_ControlHeader_gpsReferenceTime_R10_Ext),
        ('gpsAcquisAssist-R10-Ext', _Add_GPS_ControlHeader_gpsAcquisAssist_R10_Ext),
        ('gpsAlmanac-R10-Ext', _Add_GPS_ControlHeader_gpsAlmanac_R10_Ext),
        ('gpsAcquisAssist-R12-Ext', _Add_GPS_ControlHeader_gpsAcquisAssist_R12_Ext),
        ])
    Add_GPS_ControlHeader._ext = ['dgpsCorrectionsValidityPeriod', 'gpsReferenceTime-R10-Ext', 'gpsAcquisAssist-R10-Ext', 'gpsAlmanac-R10-Ext', 'gpsAcquisAssist-R12-Ext']
    
    #-----< GPSClockModel >-----#
    GPSClockModel = SEQ(name='GPSClockModel', mode=MODE_TYPE)
    _GPSClockModel_af2 = INT(name='af2', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSClockModel_af2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    _GPSClockModel_af1 = INT(name='af1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSClockModel_af1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _GPSClockModel_af0 = INT(name='af0', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSClockModel_af0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2097152, ub=2097151)], ev=None, er=[])
    _GPSClockModel_tgd = INT(name='tgd', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSClockModel_tgd._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    GPSClockModel._cont = ASN1Dict([
        ('af2', _GPSClockModel_af2),
        ('af1', _GPSClockModel_af1),
        ('af0', _GPSClockModel_af0),
        ('tgd', _GPSClockModel_tgd),
        ])
    GPSClockModel._ext = None
    
    #-----< GPSEphemerisExtension >-----#
    GPSEphemerisExtension = SEQ(name='GPSEphemerisExtension', mode=MODE_TYPE)
    _GPSEphemerisExtension_gpsEphemerisHeader = SEQ(name='gpsEphemerisHeader', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSEphemerisExtensionHeader')), opt=True)
    _GPSEphemerisExtension_gpsReferenceSet = SEQ_OF(name='gpsReferenceSet', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfGPSRefOrbit')), opt=True)
    _GPSEphemerisExtension_gpsephemerisDeltaMatrix = SEQ_OF(name='gpsephemerisDeltaMatrix', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSEphemerisDeltaMatrix')), opt=True)
    GPSEphemerisExtension._cont = ASN1Dict([
        ('gpsEphemerisHeader', _GPSEphemerisExtension_gpsEphemerisHeader),
        ('gpsReferenceSet', _GPSEphemerisExtension_gpsReferenceSet),
        ('gpsephemerisDeltaMatrix', _GPSEphemerisExtension_gpsephemerisDeltaMatrix),
        ])
    GPSEphemerisExtension._ext = []
    
    #-----< GPSEphemerisExtensionHeader >-----#
    GPSEphemerisExtensionHeader = SEQ(name='GPSEphemerisExtensionHeader', mode=MODE_TYPE)
    _GPSEphemerisExtensionHeader_timeofEstimation = SEQ(name='timeofEstimation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSEphemerisExtensionTime')))
    _GPSEphemerisExtensionHeader_validityPeriod = INT(name='validityPeriod', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisExtensionHeader_validityPeriod._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _GPSEphemerisExtensionHeader_ephemerisExtensionDuration = INT(name='ephemerisExtensionDuration', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisExtensionHeader_ephemerisExtensionDuration._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=512)], ev=None, er=[])
    GPSEphemerisExtensionHeader._cont = ASN1Dict([
        ('timeofEstimation', _GPSEphemerisExtensionHeader_timeofEstimation),
        ('validityPeriod', _GPSEphemerisExtensionHeader_validityPeriod),
        ('ephemerisExtensionDuration', _GPSEphemerisExtensionHeader_ephemerisExtensionDuration),
        ])
    GPSEphemerisExtensionHeader._ext = []
    
    #-----< GPSEphemerisExtensionTime >-----#
    GPSEphemerisExtensionTime = SEQ(name='GPSEphemerisExtensionTime', mode=MODE_TYPE)
    _GPSEphemerisExtensionTime_gpsWeek = INT(name='gpsWeek', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSWeek')))
    _GPSEphemerisExtensionTime_gpsTOW = INT(name='gpsTOW', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisExtensionTime_gpsTOW._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=604799)], ev=None, er=[])
    GPSEphemerisExtensionTime._cont = ASN1Dict([
        ('gpsWeek', _GPSEphemerisExtensionTime_gpsWeek),
        ('gpsTOW', _GPSEphemerisExtensionTime_gpsTOW),
        ])
    GPSEphemerisExtensionTime._ext = []
    
    #-----< SeqOfGPSRefOrbit >-----#
    SeqOfGPSRefOrbit = SEQ_OF(name='SeqOfGPSRefOrbit', mode=MODE_TYPE)
    _SeqOfGPSRefOrbit__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GPSReferenceOrbit')))
    SeqOfGPSRefOrbit._cont = _SeqOfGPSRefOrbit__item_
    SeqOfGPSRefOrbit._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< GPSReferenceOrbit >-----#
    GPSReferenceOrbit = SEQ(name='GPSReferenceOrbit', mode=MODE_TYPE)
    _GPSReferenceOrbit_svID = INT(name='svID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _GPSReferenceOrbit_gpsOrbitModel = SEQ(name='gpsOrbitModel', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ReferenceNavModel')))
    _GPSReferenceOrbit_gpsClockModel = SEQ(name='gpsClockModel', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSClockModel')))
    GPSReferenceOrbit._cont = ASN1Dict([
        ('svID', _GPSReferenceOrbit_svID),
        ('gpsOrbitModel', _GPSReferenceOrbit_gpsOrbitModel),
        ('gpsClockModel', _GPSReferenceOrbit_gpsClockModel),
        ])
    GPSReferenceOrbit._ext = []
    
    #-----< GPSEphemerisDeltaMatrix >-----#
    GPSEphemerisDeltaMatrix = SEQ_OF(name='GPSEphemerisDeltaMatrix', mode=MODE_TYPE)
    _GPSEphemerisDeltaMatrix__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GPSEphemerisDeltaEpoch')))
    GPSEphemerisDeltaMatrix._cont = _GPSEphemerisDeltaMatrix__item_
    GPSEphemerisDeltaMatrix._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    
    #-----< GPSEphemerisDeltaEpoch >-----#
    GPSEphemerisDeltaEpoch = SEQ(name='GPSEphemerisDeltaEpoch', mode=MODE_TYPE)
    _GPSEphemerisDeltaEpoch_gpsDeltaEpochHeader = SEQ(name='gpsDeltaEpochHeader', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSDeltaEpochHeader')), opt=True)
    _GPSEphemerisDeltaEpoch_gpsDeltaElementList = SEQ_OF(name='gpsDeltaElementList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSDeltaElementList')))
    GPSEphemerisDeltaEpoch._cont = ASN1Dict([
        ('gpsDeltaEpochHeader', _GPSEphemerisDeltaEpoch_gpsDeltaEpochHeader),
        ('gpsDeltaElementList', _GPSEphemerisDeltaEpoch_gpsDeltaElementList),
        ])
    GPSEphemerisDeltaEpoch._ext = []
    
    #-----< GPSDeltaEpochHeader >-----#
    GPSDeltaEpochHeader = SEQ(name='GPSDeltaEpochHeader', mode=MODE_TYPE)
    _GPSDeltaEpochHeader_validityPeriod = INT(name='validityPeriod', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GPSDeltaEpochHeader_validityPeriod._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _GPSDeltaEpochHeader_ephemerisDeltaSizes = SEQ(name='ephemerisDeltaSizes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSEphemerisDeltaBitSizes')), opt=True)
    _GPSDeltaEpochHeader_ephemerisDeltaScales = SEQ(name='ephemerisDeltaScales', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSEphemerisDeltaScales')), opt=True)
    GPSDeltaEpochHeader._cont = ASN1Dict([
        ('validityPeriod', _GPSDeltaEpochHeader_validityPeriod),
        ('ephemerisDeltaSizes', _GPSDeltaEpochHeader_ephemerisDeltaSizes),
        ('ephemerisDeltaScales', _GPSDeltaEpochHeader_ephemerisDeltaScales),
        ])
    GPSDeltaEpochHeader._ext = []
    
    #-----< GPSDeltaElementList >-----#
    GPSDeltaElementList = SEQ_OF(name='GPSDeltaElementList', mode=MODE_TYPE)
    _GPSDeltaElementList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _GPSDeltaElementList__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=47)], ev=None, er=[])
    GPSDeltaElementList._cont = _GPSDeltaElementList__item_
    GPSDeltaElementList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< GPSEphemerisDeltaBitSizes >-----#
    GPSEphemerisDeltaBitSizes = SEQ(name='GPSEphemerisDeltaBitSizes', mode=MODE_TYPE)
    _GPSEphemerisDeltaBitSizes_bitsize_delta_omega = INT(name='bitsize-delta-omega', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaBitSizes_bitsize_delta_omega._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _GPSEphemerisDeltaBitSizes_bitsize_delta_deltaN = INT(name='bitsize-delta-deltaN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaBitSizes_bitsize_delta_deltaN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _GPSEphemerisDeltaBitSizes_bitsize_delta_m0 = INT(name='bitsize-delta-m0', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaBitSizes_bitsize_delta_m0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _GPSEphemerisDeltaBitSizes_bitsize_delta_omegadot = INT(name='bitsize-delta-omegadot', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaBitSizes_bitsize_delta_omegadot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=24)], ev=None, er=[])
    _GPSEphemerisDeltaBitSizes_bitsize_delta_e = INT(name='bitsize-delta-e', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaBitSizes_bitsize_delta_e._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _GPSEphemerisDeltaBitSizes_bitsize_delta_idot = INT(name='bitsize-delta-idot', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaBitSizes_bitsize_delta_idot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=14)], ev=None, er=[])
    _GPSEphemerisDeltaBitSizes_bitsize_delta_sqrtA = INT(name='bitsize-delta-sqrtA', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaBitSizes_bitsize_delta_sqrtA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _GPSEphemerisDeltaBitSizes_bitsize_delta_i0 = INT(name='bitsize-delta-i0', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaBitSizes_bitsize_delta_i0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _GPSEphemerisDeltaBitSizes_bitsize_delta_omega0 = INT(name='bitsize-delta-omega0', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaBitSizes_bitsize_delta_omega0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _GPSEphemerisDeltaBitSizes_bitsize_delta_crs = INT(name='bitsize-delta-crs', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaBitSizes_bitsize_delta_crs._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _GPSEphemerisDeltaBitSizes_bitsize_delta_cis = INT(name='bitsize-delta-cis', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaBitSizes_bitsize_delta_cis._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _GPSEphemerisDeltaBitSizes_bitsize_delta_cus = INT(name='bitsize-delta-cus', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaBitSizes_bitsize_delta_cus._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _GPSEphemerisDeltaBitSizes_bitsize_delta_crc = INT(name='bitsize-delta-crc', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaBitSizes_bitsize_delta_crc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _GPSEphemerisDeltaBitSizes_bitsize_delta_cic = INT(name='bitsize-delta-cic', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaBitSizes_bitsize_delta_cic._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _GPSEphemerisDeltaBitSizes_bitsize_delta_cuc = INT(name='bitsize-delta-cuc', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaBitSizes_bitsize_delta_cuc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _GPSEphemerisDeltaBitSizes_bitsize_delta_tgd = INT(name='bitsize-delta-tgd', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaBitSizes_bitsize_delta_tgd._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    GPSEphemerisDeltaBitSizes._cont = ASN1Dict([
        ('bitsize-delta-omega', _GPSEphemerisDeltaBitSizes_bitsize_delta_omega),
        ('bitsize-delta-deltaN', _GPSEphemerisDeltaBitSizes_bitsize_delta_deltaN),
        ('bitsize-delta-m0', _GPSEphemerisDeltaBitSizes_bitsize_delta_m0),
        ('bitsize-delta-omegadot', _GPSEphemerisDeltaBitSizes_bitsize_delta_omegadot),
        ('bitsize-delta-e', _GPSEphemerisDeltaBitSizes_bitsize_delta_e),
        ('bitsize-delta-idot', _GPSEphemerisDeltaBitSizes_bitsize_delta_idot),
        ('bitsize-delta-sqrtA', _GPSEphemerisDeltaBitSizes_bitsize_delta_sqrtA),
        ('bitsize-delta-i0', _GPSEphemerisDeltaBitSizes_bitsize_delta_i0),
        ('bitsize-delta-omega0', _GPSEphemerisDeltaBitSizes_bitsize_delta_omega0),
        ('bitsize-delta-crs', _GPSEphemerisDeltaBitSizes_bitsize_delta_crs),
        ('bitsize-delta-cis', _GPSEphemerisDeltaBitSizes_bitsize_delta_cis),
        ('bitsize-delta-cus', _GPSEphemerisDeltaBitSizes_bitsize_delta_cus),
        ('bitsize-delta-crc', _GPSEphemerisDeltaBitSizes_bitsize_delta_crc),
        ('bitsize-delta-cic', _GPSEphemerisDeltaBitSizes_bitsize_delta_cic),
        ('bitsize-delta-cuc', _GPSEphemerisDeltaBitSizes_bitsize_delta_cuc),
        ('bitsize-delta-tgd', _GPSEphemerisDeltaBitSizes_bitsize_delta_tgd),
        ])
    GPSEphemerisDeltaBitSizes._ext = []
    
    #-----< GPSEphemerisDeltaScales >-----#
    GPSEphemerisDeltaScales = SEQ(name='GPSEphemerisDeltaScales', mode=MODE_TYPE)
    _GPSEphemerisDeltaScales_scale_delta_omega = INT(name='scale-delta-omega', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaScales_scale_delta_omega._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GPSEphemerisDeltaScales_scale_delta_deltaN = INT(name='scale-delta-deltaN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaScales_scale_delta_deltaN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GPSEphemerisDeltaScales_scale_delta_m0 = INT(name='scale-delta-m0', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaScales_scale_delta_m0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GPSEphemerisDeltaScales_scale_delta_omegadot = INT(name='scale-delta-omegadot', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaScales_scale_delta_omegadot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GPSEphemerisDeltaScales_scale_delta_e = INT(name='scale-delta-e', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaScales_scale_delta_e._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GPSEphemerisDeltaScales_scale_delta_idot = INT(name='scale-delta-idot', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaScales_scale_delta_idot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GPSEphemerisDeltaScales_scale_delta_sqrtA = INT(name='scale-delta-sqrtA', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaScales_scale_delta_sqrtA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GPSEphemerisDeltaScales_scale_delta_i0 = INT(name='scale-delta-i0', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaScales_scale_delta_i0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GPSEphemerisDeltaScales_scale_delta_omega0 = INT(name='scale-delta-omega0', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaScales_scale_delta_omega0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GPSEphemerisDeltaScales_scale_delta_crs = INT(name='scale-delta-crs', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaScales_scale_delta_crs._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GPSEphemerisDeltaScales_scale_delta_cis = INT(name='scale-delta-cis', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaScales_scale_delta_cis._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GPSEphemerisDeltaScales_scale_delta_cus = INT(name='scale-delta-cus', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaScales_scale_delta_cus._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GPSEphemerisDeltaScales_scale_delta_crc = INT(name='scale-delta-crc', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaScales_scale_delta_crc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GPSEphemerisDeltaScales_scale_delta_cic = INT(name='scale-delta-cic', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaScales_scale_delta_cic._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GPSEphemerisDeltaScales_scale_delta_cuc = INT(name='scale-delta-cuc', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaScales_scale_delta_cuc._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _GPSEphemerisDeltaScales_scale_delta_tgd = INT(name='scale-delta-tgd', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSEphemerisDeltaScales_scale_delta_tgd._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    GPSEphemerisDeltaScales._cont = ASN1Dict([
        ('scale-delta-omega', _GPSEphemerisDeltaScales_scale_delta_omega),
        ('scale-delta-deltaN', _GPSEphemerisDeltaScales_scale_delta_deltaN),
        ('scale-delta-m0', _GPSEphemerisDeltaScales_scale_delta_m0),
        ('scale-delta-omegadot', _GPSEphemerisDeltaScales_scale_delta_omegadot),
        ('scale-delta-e', _GPSEphemerisDeltaScales_scale_delta_e),
        ('scale-delta-idot', _GPSEphemerisDeltaScales_scale_delta_idot),
        ('scale-delta-sqrtA', _GPSEphemerisDeltaScales_scale_delta_sqrtA),
        ('scale-delta-i0', _GPSEphemerisDeltaScales_scale_delta_i0),
        ('scale-delta-omega0', _GPSEphemerisDeltaScales_scale_delta_omega0),
        ('scale-delta-crs', _GPSEphemerisDeltaScales_scale_delta_crs),
        ('scale-delta-cis', _GPSEphemerisDeltaScales_scale_delta_cis),
        ('scale-delta-cus', _GPSEphemerisDeltaScales_scale_delta_cus),
        ('scale-delta-crc', _GPSEphemerisDeltaScales_scale_delta_crc),
        ('scale-delta-cic', _GPSEphemerisDeltaScales_scale_delta_cic),
        ('scale-delta-cuc', _GPSEphemerisDeltaScales_scale_delta_cuc),
        ('scale-delta-tgd', _GPSEphemerisDeltaScales_scale_delta_tgd),
        ])
    GPSEphemerisDeltaScales._ext = []
    
    #-----< GPSEphemerisExtensionCheck >-----#
    GPSEphemerisExtensionCheck = SEQ(name='GPSEphemerisExtensionCheck', mode=MODE_TYPE)
    _GPSEphemerisExtensionCheck_gpsBeginTime = SEQ(name='gpsBeginTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSEphemerisExtensionTime')))
    _GPSEphemerisExtensionCheck_gpsEndTime = SEQ(name='gpsEndTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSEphemerisExtensionTime')))
    _GPSEphemerisExtensionCheck_gpsSatEventsInfo = SEQ(name='gpsSatEventsInfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSSatEventsInfo')))
    GPSEphemerisExtensionCheck._cont = ASN1Dict([
        ('gpsBeginTime', _GPSEphemerisExtensionCheck_gpsBeginTime),
        ('gpsEndTime', _GPSEphemerisExtensionCheck_gpsEndTime),
        ('gpsSatEventsInfo', _GPSEphemerisExtensionCheck_gpsSatEventsInfo),
        ])
    GPSEphemerisExtensionCheck._ext = []
    
    #-----< GPSSatEventsInfo >-----#
    GPSSatEventsInfo = SEQ(name='GPSSatEventsInfo', mode=MODE_TYPE)
    _GPSSatEventsInfo_eventOccured = BIT_STR(name='eventOccured', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSSatEventsInfo_eventOccured._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    _GPSSatEventsInfo_futureEventNoted = BIT_STR(name='futureEventNoted', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSSatEventsInfo_futureEventNoted._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    GPSSatEventsInfo._cont = ASN1Dict([
        ('eventOccured', _GPSSatEventsInfo_eventOccured),
        ('futureEventNoted', _GPSSatEventsInfo_futureEventNoted),
        ])
    GPSSatEventsInfo._ext = []
    
    #-----< DGPSCorrectionsValidityPeriod >-----#
    DGPSCorrectionsValidityPeriod = SEQ_OF(name='DGPSCorrectionsValidityPeriod', mode=MODE_TYPE)
    _DGPSCorrectionsValidityPeriod__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'DGPSExtensionSatElement')))
    DGPSCorrectionsValidityPeriod._cont = _DGPSCorrectionsValidityPeriod__item_
    DGPSCorrectionsValidityPeriod._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< DGPSExtensionSatElement >-----#
    DGPSExtensionSatElement = SEQ(name='DGPSExtensionSatElement', mode=MODE_TYPE)
    _DGPSExtensionSatElement_satelliteID = INT(name='satelliteID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SatelliteID')))
    _DGPSExtensionSatElement_udreGrowthRate = INT(name='udreGrowthRate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DGPSExtensionSatElement_udreGrowthRate._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _DGPSExtensionSatElement_udreValidityTime = INT(name='udreValidityTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DGPSExtensionSatElement_udreValidityTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    DGPSExtensionSatElement._cont = ASN1Dict([
        ('satelliteID', _DGPSExtensionSatElement_satelliteID),
        ('udreGrowthRate', _DGPSExtensionSatElement_udreGrowthRate),
        ('udreValidityTime', _DGPSExtensionSatElement_udreValidityTime),
        ])
    DGPSExtensionSatElement._ext = []
    
    #-----< GPSReferenceTime-R10-Ext >-----#
    GPSReferenceTime_R10_Ext = SEQ(name='GPSReferenceTime-R10-Ext', mode=MODE_TYPE)
    _GPSReferenceTime_R10_Ext_gpsWeekCycleNumber = INT(name='gpsWeekCycleNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSReferenceTime_R10_Ext_gpsWeekCycleNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    GPSReferenceTime_R10_Ext._cont = ASN1Dict([
        ('gpsWeekCycleNumber', _GPSReferenceTime_R10_Ext_gpsWeekCycleNumber),
        ])
    GPSReferenceTime_R10_Ext._ext = None
    
    #-----< GPSAcquisAssist-R10-Ext >-----#
    GPSAcquisAssist_R10_Ext = SEQ_OF(name='GPSAcquisAssist-R10-Ext', mode=MODE_TYPE)
    _GPSAcquisAssist_R10_Ext__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GPSAcquisAssist-R10-Ext-Element')))
    GPSAcquisAssist_R10_Ext._cont = _GPSAcquisAssist_R10_Ext__item_
    GPSAcquisAssist_R10_Ext._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GPSAcquisAssist-R10-Ext-Element >-----#
    GPSAcquisAssist_R10_Ext_Element = SEQ(name='GPSAcquisAssist-R10-Ext-Element', mode=MODE_TYPE)
    _GPSAcquisAssist_R10_Ext_Element_satelliteID = INT(name='satelliteID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SatelliteID')))
    _GPSAcquisAssist_R10_Ext_Element_azimuthLSB = INT(name='azimuthLSB', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSAcquisAssist_R10_Ext_Element_azimuthLSB._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _GPSAcquisAssist_R10_Ext_Element_elevationLSB = INT(name='elevationLSB', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSAcquisAssist_R10_Ext_Element_elevationLSB._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    GPSAcquisAssist_R10_Ext_Element._cont = ASN1Dict([
        ('satelliteID', _GPSAcquisAssist_R10_Ext_Element_satelliteID),
        ('azimuthLSB', _GPSAcquisAssist_R10_Ext_Element_azimuthLSB),
        ('elevationLSB', _GPSAcquisAssist_R10_Ext_Element_elevationLSB),
        ])
    GPSAcquisAssist_R10_Ext_Element._ext = None
    
    #-----< GPSAcquisAssist-R12-Ext >-----#
    GPSAcquisAssist_R12_Ext = SEQ(name='GPSAcquisAssist-R12-Ext', mode=MODE_TYPE)
    _GPSAcquisAssist_R12_Ext_confidence = INT(name='confidence', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GPSAcquisAssist_R12_Ext_confidence._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=100)], ev=None, er=[])
    _GPSAcquisAssist_R12_Ext_acquisList = SEQ_OF(name='acquisList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfGPSAcquisAssist-R12-Ext')), opt=True)
    GPSAcquisAssist_R12_Ext._cont = ASN1Dict([
        ('confidence', _GPSAcquisAssist_R12_Ext_confidence),
        ('acquisList', _GPSAcquisAssist_R12_Ext_acquisList),
        ])
    GPSAcquisAssist_R12_Ext._ext = None
    
    #-----< SeqOfGPSAcquisAssist-R12-Ext >-----#
    SeqOfGPSAcquisAssist_R12_Ext = SEQ_OF(name='SeqOfGPSAcquisAssist-R12-Ext', mode=MODE_TYPE)
    _SeqOfGPSAcquisAssist_R12_Ext__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GPSAcquisAssist-R12-Ext-Element')))
    SeqOfGPSAcquisAssist_R12_Ext._cont = _SeqOfGPSAcquisAssist_R12_Ext__item_
    SeqOfGPSAcquisAssist_R12_Ext._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GPSAcquisAssist-R12-Ext-Element >-----#
    GPSAcquisAssist_R12_Ext_Element = SEQ(name='GPSAcquisAssist-R12-Ext-Element', mode=MODE_TYPE)
    _GPSAcquisAssist_R12_Ext_Element_satelliteID = INT(name='satelliteID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SatelliteID')))
    _GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt = ENUM(name='dopplerUncertaintyExt', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt._cont = ASN1Dict([('d300', 0), ('d400', 1), ('d500', 2), ('d600', 3), ('noInformation', 4)])
    _GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt._ext = []
    GPSAcquisAssist_R12_Ext_Element._cont = ASN1Dict([
        ('satelliteID', _GPSAcquisAssist_R12_Ext_Element_satelliteID),
        ('dopplerUncertaintyExt', _GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt),
        ])
    GPSAcquisAssist_R12_Ext_Element._ext = None
    
    #-----< GPSAlmanac-R10-Ext >-----#
    GPSAlmanac_R10_Ext = SEQ(name='GPSAlmanac-R10-Ext', mode=MODE_TYPE)
    _GPSAlmanac_R10_Ext_completeAlmanacProvided = BOOL(name='completeAlmanacProvided', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    GPSAlmanac_R10_Ext._cont = ASN1Dict([
        ('completeAlmanacProvided', _GPSAlmanac_R10_Ext_completeAlmanacProvided),
        ])
    GPSAlmanac_R10_Ext._ext = None
    
    #-----< Rel-7-MsrPosition-Rsp-Extension >-----#
    Rel_7_MsrPosition_Rsp_Extension = SEQ(name='Rel-7-MsrPosition-Rsp-Extension', mode=MODE_TYPE)
    _Rel_7_MsrPosition_Rsp_Extension_velEstimate = OCT_STR(name='velEstimate', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'VelocityEstimate')), opt=True)
    _Rel_7_MsrPosition_Rsp_Extension_ganssLocationInfo = SEQ(name='ganssLocationInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSLocationInfo')), opt=True)
    _Rel_7_MsrPosition_Rsp_Extension_ganssMeasureInfo = SEQ(name='ganssMeasureInfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSMeasureInfo')), opt=True)
    Rel_7_MsrPosition_Rsp_Extension._cont = ASN1Dict([
        ('velEstimate', _Rel_7_MsrPosition_Rsp_Extension_velEstimate),
        ('ganssLocationInfo', _Rel_7_MsrPosition_Rsp_Extension_ganssLocationInfo),
        ('ganssMeasureInfo', _Rel_7_MsrPosition_Rsp_Extension_ganssMeasureInfo),
        ])
    Rel_7_MsrPosition_Rsp_Extension._ext = []
    
    #-----< GANSSLocationInfo >-----#
    GANSSLocationInfo = SEQ(name='GANSSLocationInfo', mode=MODE_TYPE)
    _GANSSLocationInfo_referenceFrame = SEQ(name='referenceFrame', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ReferenceFrame')), opt=True)
    _GANSSLocationInfo_ganssTODm = INT(name='ganssTODm', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSTODm')), opt=True)
    _GANSSLocationInfo_ganssTODFrac = INT(name='ganssTODFrac', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSLocationInfo_ganssTODFrac._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16384)], ev=None, er=[])
    _GANSSLocationInfo_ganssTODUncertainty = INT(name='ganssTODUncertainty', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSTODUncertainty')), opt=True)
    _GANSSLocationInfo_ganssTimeID = INT(name='ganssTimeID', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSLocationInfo_ganssTimeID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _GANSSLocationInfo_fixType = INT(name='fixType', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'FixType')))
    _GANSSLocationInfo_posData = BIT_STR(name='posData', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'PositionData')))
    _GANSSLocationInfo_stationaryIndication = INT(name='stationaryIndication', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSLocationInfo_stationaryIndication._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _GANSSLocationInfo_posEstimate = OCT_STR(name='posEstimate', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MAP-LCS-DataTypes', 'Ext-GeographicalInformation')))
    GANSSLocationInfo._cont = ASN1Dict([
        ('referenceFrame', _GANSSLocationInfo_referenceFrame),
        ('ganssTODm', _GANSSLocationInfo_ganssTODm),
        ('ganssTODFrac', _GANSSLocationInfo_ganssTODFrac),
        ('ganssTODUncertainty', _GANSSLocationInfo_ganssTODUncertainty),
        ('ganssTimeID', _GANSSLocationInfo_ganssTimeID),
        ('fixType', _GANSSLocationInfo_fixType),
        ('posData', _GANSSLocationInfo_posData),
        ('stationaryIndication', _GANSSLocationInfo_stationaryIndication),
        ('posEstimate', _GANSSLocationInfo_posEstimate),
        ])
    GANSSLocationInfo._ext = []
    
    #-----< PositionData >-----#
    PositionData = BIT_STR(name='PositionData', mode=MODE_TYPE)
    PositionData._cont = ASN1Dict([('e-otd', 0), ('gps', 1), ('galileo', 2), ('sbas', 3), ('modernizedGPS', 4), ('qzss', 5), ('glonass', 6), ('bds', 7)])
    PositionData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=16)], ev=None, er=[])
    
    #-----< GANSSTODm >-----#
    GANSSTODm = INT(name='GANSSTODm', mode=MODE_TYPE)
    GANSSTODm._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3599999)], ev=None, er=[])
    
    #-----< ReferenceFrame >-----#
    ReferenceFrame = SEQ(name='ReferenceFrame', mode=MODE_TYPE)
    _ReferenceFrame_referenceFN = INT(name='referenceFN', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReferenceFrame_referenceFN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _ReferenceFrame_referenceFNMSB = INT(name='referenceFNMSB', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ReferenceFrame_referenceFNMSB._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    ReferenceFrame._cont = ASN1Dict([
        ('referenceFN', _ReferenceFrame_referenceFN),
        ('referenceFNMSB', _ReferenceFrame_referenceFNMSB),
        ])
    ReferenceFrame._ext = None
    
    #-----< GANSSMeasureInfo >-----#
    GANSSMeasureInfo = SEQ(name='GANSSMeasureInfo', mode=MODE_TYPE)
    _GANSSMeasureInfo_ganssMsrSetList = SEQ_OF(name='ganssMsrSetList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfGANSS-MsrSetElement')))
    GANSSMeasureInfo._cont = ASN1Dict([
        ('ganssMsrSetList', _GANSSMeasureInfo_ganssMsrSetList),
        ])
    GANSSMeasureInfo._ext = None
    
    #-----< SeqOfGANSS-MsrSetElement >-----#
    SeqOfGANSS_MsrSetElement = SEQ_OF(name='SeqOfGANSS-MsrSetElement', mode=MODE_TYPE)
    _SeqOfGANSS_MsrSetElement__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSS-MsrSetElement')))
    SeqOfGANSS_MsrSetElement._cont = _SeqOfGANSS_MsrSetElement__item_
    SeqOfGANSS_MsrSetElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< GANSS-MsrSetElement >-----#
    GANSS_MsrSetElement = SEQ(name='GANSS-MsrSetElement', mode=MODE_TYPE)
    _GANSS_MsrSetElement_referenceFrame = SEQ(name='referenceFrame', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ReferenceFrame')), opt=True)
    _GANSS_MsrSetElement_ganssTODm = INT(name='ganssTODm', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSTODm')), opt=True)
    _GANSS_MsrSetElement_deltaGANSSTOD = INT(name='deltaGANSSTOD', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSS_MsrSetElement_deltaGANSSTOD._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    _GANSS_MsrSetElement_ganssTODUncertainty = INT(name='ganssTODUncertainty', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSTODUncertainty')), opt=True)
    _GANSS_MsrSetElement_ganss_MsrElementList = SEQ_OF(name='ganss-MsrElementList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfGANSS-MsrElement')))
    GANSS_MsrSetElement._cont = ASN1Dict([
        ('referenceFrame', _GANSS_MsrSetElement_referenceFrame),
        ('ganssTODm', _GANSS_MsrSetElement_ganssTODm),
        ('deltaGANSSTOD', _GANSS_MsrSetElement_deltaGANSSTOD),
        ('ganssTODUncertainty', _GANSS_MsrSetElement_ganssTODUncertainty),
        ('ganss-MsrElementList', _GANSS_MsrSetElement_ganss_MsrElementList),
        ])
    GANSS_MsrSetElement._ext = None
    
    #-----< SeqOfGANSS-MsrElement >-----#
    SeqOfGANSS_MsrElement = SEQ_OF(name='SeqOfGANSS-MsrElement', mode=MODE_TYPE)
    _SeqOfGANSS_MsrElement__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSS-MsrElement')))
    SeqOfGANSS_MsrElement._cont = _SeqOfGANSS_MsrElement__item_
    SeqOfGANSS_MsrElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< GANSS-MsrElement >-----#
    GANSS_MsrElement = SEQ(name='GANSS-MsrElement', mode=MODE_TYPE)
    _GANSS_MsrElement_ganssID = INT(name='ganssID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSS_MsrElement_ganssID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _GANSS_MsrElement_ganss_SgnTypeList = SEQ_OF(name='ganss-SgnTypeList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfGANSS-SgnTypeElement')))
    GANSS_MsrElement._cont = ASN1Dict([
        ('ganssID', _GANSS_MsrElement_ganssID),
        ('ganss-SgnTypeList', _GANSS_MsrElement_ganss_SgnTypeList),
        ])
    GANSS_MsrElement._ext = None
    
    #-----< SeqOfGANSS-SgnTypeElement >-----#
    SeqOfGANSS_SgnTypeElement = SEQ_OF(name='SeqOfGANSS-SgnTypeElement', mode=MODE_TYPE)
    _SeqOfGANSS_SgnTypeElement__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSS-SgnTypeElement')))
    SeqOfGANSS_SgnTypeElement._cont = _SeqOfGANSS_SgnTypeElement__item_
    SeqOfGANSS_SgnTypeElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< GANSS-SgnTypeElement >-----#
    GANSS_SgnTypeElement = SEQ(name='GANSS-SgnTypeElement', mode=MODE_TYPE)
    _GANSS_SgnTypeElement_ganssSignalID = INT(name='ganssSignalID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSSignalID')))
    _GANSS_SgnTypeElement_ganssCodePhaseAmbiguity = INT(name='ganssCodePhaseAmbiguity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSS_SgnTypeElement_ganssCodePhaseAmbiguity._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    _GANSS_SgnTypeElement_ganss_SgnList = SEQ_OF(name='ganss-SgnList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SeqOfGANSS-SgnElement')))
    GANSS_SgnTypeElement._cont = ASN1Dict([
        ('ganssSignalID', _GANSS_SgnTypeElement_ganssSignalID),
        ('ganssCodePhaseAmbiguity', _GANSS_SgnTypeElement_ganssCodePhaseAmbiguity),
        ('ganss-SgnList', _GANSS_SgnTypeElement_ganss_SgnList),
        ])
    GANSS_SgnTypeElement._ext = []
    
    #-----< SeqOfGANSS-SgnElement >-----#
    SeqOfGANSS_SgnElement = SEQ_OF(name='SeqOfGANSS-SgnElement', mode=MODE_TYPE)
    _SeqOfGANSS_SgnElement__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSS-SgnElement')))
    SeqOfGANSS_SgnElement._cont = _SeqOfGANSS_SgnElement__item_
    SeqOfGANSS_SgnElement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GANSS-SgnElement >-----#
    GANSS_SgnElement = SEQ(name='GANSS-SgnElement', mode=MODE_TYPE)
    _GANSS_SgnElement_svID = INT(name='svID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _GANSS_SgnElement_cNo = INT(name='cNo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSS_SgnElement_cNo._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _GANSS_SgnElement_mpathDet = ENUM(name='mpathDet', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'MpathIndic')))
    _GANSS_SgnElement_carrierQualityInd = INT(name='carrierQualityInd', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSS_SgnElement_carrierQualityInd._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    _GANSS_SgnElement_codePhase = INT(name='codePhase', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSS_SgnElement_codePhase._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2097151)], ev=None, er=[])
    _GANSS_SgnElement_integerCodePhase = INT(name='integerCodePhase', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSS_SgnElement_integerCodePhase._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    _GANSS_SgnElement_codePhaseRMSError = INT(name='codePhaseRMSError', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GANSS_SgnElement_codePhaseRMSError._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _GANSS_SgnElement_doppler = INT(name='doppler', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSS_SgnElement_doppler._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    _GANSS_SgnElement_adr = INT(name='adr', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSS_SgnElement_adr._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=33554431)], ev=None, er=[])
    GANSS_SgnElement._cont = ASN1Dict([
        ('svID', _GANSS_SgnElement_svID),
        ('cNo', _GANSS_SgnElement_cNo),
        ('mpathDet', _GANSS_SgnElement_mpathDet),
        ('carrierQualityInd', _GANSS_SgnElement_carrierQualityInd),
        ('codePhase', _GANSS_SgnElement_codePhase),
        ('integerCodePhase', _GANSS_SgnElement_integerCodePhase),
        ('codePhaseRMSError', _GANSS_SgnElement_codePhaseRMSError),
        ('doppler', _GANSS_SgnElement_doppler),
        ('adr', _GANSS_SgnElement_adr),
        ])
    GANSS_SgnElement._ext = None
    
    #-----< Rel7-AssistanceData-Extension >-----#
    Rel7_AssistanceData_Extension = SEQ(name='Rel7-AssistanceData-Extension', mode=MODE_TYPE)
    _Rel7_AssistanceData_Extension_ganss_AssistData = SEQ(name='ganss-AssistData', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSS-AssistData')), opt=True)
    _Rel7_AssistanceData_Extension_ganssCarrierPhaseMeasurementRequest = NULL(name='ganssCarrierPhaseMeasurementRequest', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Rel7_AssistanceData_Extension_ganssTODGSMTimeAssociationMeasurementRequest = NULL(name='ganssTODGSMTimeAssociationMeasurementRequest', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Rel7_AssistanceData_Extension_add_GPS_AssistData = SEQ(name='add-GPS-AssistData', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'Add-GPS-AssistData')), opt=True)
    Rel7_AssistanceData_Extension._cont = ASN1Dict([
        ('ganss-AssistData', _Rel7_AssistanceData_Extension_ganss_AssistData),
        ('ganssCarrierPhaseMeasurementRequest', _Rel7_AssistanceData_Extension_ganssCarrierPhaseMeasurementRequest),
        ('ganssTODGSMTimeAssociationMeasurementRequest', _Rel7_AssistanceData_Extension_ganssTODGSMTimeAssociationMeasurementRequest),
        ('add-GPS-AssistData', _Rel7_AssistanceData_Extension_add_GPS_AssistData),
        ])
    Rel7_AssistanceData_Extension._ext = []
    
    #-----< BDS-DiffCorrections-r12 >-----#
    BDS_DiffCorrections_r12 = SEQ(name='BDS-DiffCorrections-r12', mode=MODE_TYPE)
    _BDS_DiffCorrections_r12_dbds_RefTime_r12 = INT(name='dbds-RefTime-r12', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BDS_DiffCorrections_r12_dbds_RefTime_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3599)], ev=None, er=[])
    _BDS_DiffCorrections_r12_bds_SgnTypeList_r12 = SEQ_OF(name='bds-SgnTypeList-r12', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'BDS-SgnTypeList-r12')))
    BDS_DiffCorrections_r12._cont = ASN1Dict([
        ('dbds-RefTime-r12', _BDS_DiffCorrections_r12_dbds_RefTime_r12),
        ('bds-SgnTypeList-r12', _BDS_DiffCorrections_r12_bds_SgnTypeList_r12),
        ])
    BDS_DiffCorrections_r12._ext = []
    
    #-----< BDS-SgnTypeList-r12 >-----#
    BDS_SgnTypeList_r12 = SEQ_OF(name='BDS-SgnTypeList-r12', mode=MODE_TYPE)
    _BDS_SgnTypeList_r12__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'BDS-SgnTypeElement-r12')))
    BDS_SgnTypeList_r12._cont = _BDS_SgnTypeList_r12__item_
    BDS_SgnTypeList_r12._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< BDS-SgnTypeElement-r12 >-----#
    BDS_SgnTypeElement_r12 = SEQ(name='BDS-SgnTypeElement-r12', mode=MODE_TYPE)
    _BDS_SgnTypeElement_r12_ganssSignalID = INT(name='ganssSignalID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSSignalID')), opt=True)
    _BDS_SgnTypeElement_r12_dbds_CorrectionList_r12 = SEQ_OF(name='dbds-CorrectionList-r12', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'DBDS-CorrectionList-r12')))
    BDS_SgnTypeElement_r12._cont = ASN1Dict([
        ('ganssSignalID', _BDS_SgnTypeElement_r12_ganssSignalID),
        ('dbds-CorrectionList-r12', _BDS_SgnTypeElement_r12_dbds_CorrectionList_r12),
        ])
    BDS_SgnTypeElement_r12._ext = []
    
    #-----< DBDS-CorrectionList-r12 >-----#
    DBDS_CorrectionList_r12 = SEQ_OF(name='DBDS-CorrectionList-r12', mode=MODE_TYPE)
    _DBDS_CorrectionList_r12__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'DBDS-CorrectionElement-r12')))
    DBDS_CorrectionList_r12._cont = _DBDS_CorrectionList_r12__item_
    DBDS_CorrectionList_r12._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< DBDS-CorrectionElement-r12 >-----#
    DBDS_CorrectionElement_r12 = SEQ(name='DBDS-CorrectionElement-r12', mode=MODE_TYPE)
    _DBDS_CorrectionElement_r12_svID = INT(name='svID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SVID')))
    _DBDS_CorrectionElement_r12_bds_UDREI_r12 = INT(name='bds-UDREI-r12', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DBDS_CorrectionElement_r12_bds_UDREI_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _DBDS_CorrectionElement_r12_bds_RURAI_r12 = INT(name='bds-RURAI-r12', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DBDS_CorrectionElement_r12_bds_RURAI_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _DBDS_CorrectionElement_r12_bds_ECC_DeltaT_r12 = INT(name='bds-ECC-DeltaT-r12', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DBDS_CorrectionElement_r12_bds_ECC_DeltaT_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4096, ub=4095)], ev=None, er=[])
    DBDS_CorrectionElement_r12._cont = ASN1Dict([
        ('svID', _DBDS_CorrectionElement_r12_svID),
        ('bds-UDREI-r12', _DBDS_CorrectionElement_r12_bds_UDREI_r12),
        ('bds-RURAI-r12', _DBDS_CorrectionElement_r12_bds_RURAI_r12),
        ('bds-ECC-DeltaT-r12', _DBDS_CorrectionElement_r12_bds_ECC_DeltaT_r12),
        ])
    DBDS_CorrectionElement_r12._ext = []
    
    #-----< BDS-GridModelParameter-r12 >-----#
    BDS_GridModelParameter_r12 = SEQ(name='BDS-GridModelParameter-r12', mode=MODE_TYPE)
    _BDS_GridModelParameter_r12_bds_RefTime_r12 = INT(name='bds-RefTime-r12', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BDS_GridModelParameter_r12_bds_RefTime_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3599)], ev=None, er=[])
    _BDS_GridModelParameter_r12_gridIonList_r12 = SEQ_OF(name='gridIonList-r12', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GridIonList-r12')))
    BDS_GridModelParameter_r12._cont = ASN1Dict([
        ('bds-RefTime-r12', _BDS_GridModelParameter_r12_bds_RefTime_r12),
        ('gridIonList-r12', _BDS_GridModelParameter_r12_gridIonList_r12),
        ])
    BDS_GridModelParameter_r12._ext = []
    
    #-----< GridIonList-r12 >-----#
    GridIonList_r12 = SEQ_OF(name='GridIonList-r12', mode=MODE_TYPE)
    _GridIonList_r12__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GridIonElement-r12')))
    GridIonList_r12._cont = _GridIonList_r12__item_
    GridIonList_r12._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=320)], ev=None, er=[])
    
    #-----< GridIonElement-r12 >-----#
    GridIonElement_r12 = SEQ(name='GridIonElement-r12', mode=MODE_TYPE)
    _GridIonElement_r12_igp_ID_r12 = INT(name='igp-ID-r12', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GridIonElement_r12_igp_ID_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=320)], ev=None, er=[])
    _GridIonElement_r12_dt_r12 = INT(name='dt-r12', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GridIonElement_r12_dt_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=511)], ev=None, er=[])
    _GridIonElement_r12_givei_r12 = INT(name='givei-r12', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GridIonElement_r12_givei_r12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    GridIonElement_r12._cont = ASN1Dict([
        ('igp-ID-r12', _GridIonElement_r12_igp_ID_r12),
        ('dt-r12', _GridIonElement_r12_dt_r12),
        ('givei-r12', _GridIonElement_r12_givei_r12),
        ])
    GridIonElement_r12._ext = []
    
    #-----< PosCapabilities >-----#
    PosCapabilities = SEQ(name='PosCapabilities', mode=MODE_TYPE)
    _PosCapabilities_nonGANSSpositionMethods = BIT_STR(name='nonGANSSpositionMethods', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'NonGANSSPositionMethods')), opt=True)
    _PosCapabilities_gANSSPositionMethods = SEQ_OF(name='gANSSPositionMethods', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSPositionMethods')), opt=True)
    _PosCapabilities_multipleMeasurementSets = BIT_STR(name='multipleMeasurementSets', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'MultipleMeasurementSets')), opt=True)
    PosCapabilities._cont = ASN1Dict([
        ('nonGANSSpositionMethods', _PosCapabilities_nonGANSSpositionMethods),
        ('gANSSPositionMethods', _PosCapabilities_gANSSPositionMethods),
        ('multipleMeasurementSets', _PosCapabilities_multipleMeasurementSets),
        ])
    PosCapabilities._ext = []
    
    #-----< NonGANSSPositionMethods >-----#
    NonGANSSPositionMethods = BIT_STR(name='NonGANSSPositionMethods', mode=MODE_TYPE)
    NonGANSSPositionMethods._cont = ASN1Dict([('msAssistedEOTD', 0), ('msBasedEOTD', 1), ('msAssistedGPS', 2), ('msBasedGPS', 3), ('standaloneGPS', 4)])
    NonGANSSPositionMethods._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GANSSPositionMethods >-----#
    GANSSPositionMethods = SEQ_OF(name='GANSSPositionMethods', mode=MODE_TYPE)
    _GANSSPositionMethods__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSSPositionMethod')))
    GANSSPositionMethods._cont = _GANSSPositionMethods__item_
    GANSSPositionMethods._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GANSSPositionMethod >-----#
    GANSSPositionMethod = SEQ(name='GANSSPositionMethod', mode=MODE_TYPE)
    _GANSSPositionMethod_ganssID = INT(name='ganssID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSPositionMethod_ganssID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _GANSSPositionMethod_gANSSPositioningMethodTypes = BIT_STR(name='gANSSPositioningMethodTypes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSPositioningMethodTypes')), opt=True)
    _GANSSPositionMethod_gANSSSignals = BIT_STR(name='gANSSSignals', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSSignals')))
    _GANSSPositionMethod_sbasID = BIT_STR(name='sbasID', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SBASID')), opt=True)
    GANSSPositionMethod._cont = ASN1Dict([
        ('ganssID', _GANSSPositionMethod_ganssID),
        ('gANSSPositioningMethodTypes', _GANSSPositionMethod_gANSSPositioningMethodTypes),
        ('gANSSSignals', _GANSSPositionMethod_gANSSSignals),
        ('sbasID', _GANSSPositionMethod_sbasID),
        ])
    GANSSPositionMethod._ext = ['sbasID']
    
    #-----< GANSSPositioningMethodTypes >-----#
    GANSSPositioningMethodTypes = BIT_STR(name='GANSSPositioningMethodTypes', mode=MODE_TYPE)
    GANSSPositioningMethodTypes._cont = ASN1Dict([('msAssisted', 0), ('msBased', 1), ('standalone', 2)])
    GANSSPositioningMethodTypes._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< GANSSSignals >-----#
    GANSSSignals = BIT_STR(name='GANSSSignals', mode=MODE_TYPE)
    GANSSSignals._cont = ASN1Dict([('signal1', 0), ('signal2', 1), ('signal3', 2), ('signal4', 3), ('signal5', 4), ('signal6', 5), ('signal7', 6), ('signal8', 7)])
    GANSSSignals._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< SBASID >-----#
    SBASID = BIT_STR(name='SBASID', mode=MODE_TYPE)
    SBASID._cont = ASN1Dict([('waas', 0), ('egnos', 1), ('masas', 2), ('gagan', 3)])
    SBASID._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< MultipleMeasurementSets >-----#
    MultipleMeasurementSets = BIT_STR(name='MultipleMeasurementSets', mode=MODE_TYPE)
    MultipleMeasurementSets._cont = ASN1Dict([('eotd', 0), ('gps', 1), ('ganss', 2)])
    MultipleMeasurementSets._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< AssistanceSupported >-----#
    AssistanceSupported = SEQ(name='AssistanceSupported', mode=MODE_TYPE)
    _AssistanceSupported_gpsAssistance = BIT_STR(name='gpsAssistance', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSAssistance')), opt=True)
    _AssistanceSupported_gANSSAssistanceSet = SEQ(name='gANSSAssistanceSet', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSAssistanceSet')), opt=True)
    _AssistanceSupported_gANSSAdditionalAssistanceChoices = SEQ_OF(name='gANSSAdditionalAssistanceChoices', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSAdditionalAssistanceChoices')), opt=True)
    AssistanceSupported._cont = ASN1Dict([
        ('gpsAssistance', _AssistanceSupported_gpsAssistance),
        ('gANSSAssistanceSet', _AssistanceSupported_gANSSAssistanceSet),
        ('gANSSAdditionalAssistanceChoices', _AssistanceSupported_gANSSAdditionalAssistanceChoices),
        ])
    AssistanceSupported._ext = ['gANSSAdditionalAssistanceChoices']
    
    #-----< GPSAssistance >-----#
    GPSAssistance = BIT_STR(name='GPSAssistance', mode=MODE_TYPE)
    GPSAssistance._cont = ASN1Dict([('almanac', 0), ('uTCmodel', 1), ('ionosphericModel', 2), ('navigationmodel', 3), ('dGPScorrections', 4), ('referenceLocation', 5), ('referenceTime', 6), ('acquisitionAssistance', 7), ('realTimeIntegrity', 8), ('ephemerisExtension', 9), ('ephemerisExtensionCheck', 10), ('gPSAcquisAssist-R12-Ext', 11)])
    GPSAssistance._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GANSSAssistanceSet >-----#
    GANSSAssistanceSet = SEQ(name='GANSSAssistanceSet', mode=MODE_TYPE)
    _GANSSAssistanceSet_commonGANSSAssistance = BIT_STR(name='commonGANSSAssistance', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'CommonGANSSAssistance')))
    _GANSSAssistanceSet_specificGANSSAssistance = SEQ_OF(name='specificGANSSAssistance', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'SpecificGANSSAssistance')))
    GANSSAssistanceSet._cont = ASN1Dict([
        ('commonGANSSAssistance', _GANSSAssistanceSet_commonGANSSAssistance),
        ('specificGANSSAssistance', _GANSSAssistanceSet_specificGANSSAssistance),
        ])
    GANSSAssistanceSet._ext = []
    
    #-----< CommonGANSSAssistance >-----#
    CommonGANSSAssistance = BIT_STR(name='CommonGANSSAssistance', mode=MODE_TYPE)
    CommonGANSSAssistance._cont = ASN1Dict([('referenceTime', 0), ('referenceLocation', 1), ('ionosphericModel', 3), ('addIonosphericModel', 4), ('earthOrientationParam', 5)])
    CommonGANSSAssistance._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< SpecificGANSSAssistance >-----#
    SpecificGANSSAssistance = SEQ_OF(name='SpecificGANSSAssistance', mode=MODE_TYPE)
    _SpecificGANSSAssistance__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSSAssistanceForOneGANSS')))
    SpecificGANSSAssistance._cont = _SpecificGANSSAssistance__item_
    SpecificGANSSAssistance._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GANSSAssistanceForOneGANSS >-----#
    GANSSAssistanceForOneGANSS = SEQ(name='GANSSAssistanceForOneGANSS', mode=MODE_TYPE)
    _GANSSAssistanceForOneGANSS_ganssID = INT(name='ganssID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSAssistanceForOneGANSS_ganssID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _GANSSAssistanceForOneGANSS_gANSSAssistance = BIT_STR(name='gANSSAssistance', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSAssistance')))
    GANSSAssistanceForOneGANSS._cont = ASN1Dict([
        ('ganssID', _GANSSAssistanceForOneGANSS_ganssID),
        ('gANSSAssistance', _GANSSAssistanceForOneGANSS_gANSSAssistance),
        ])
    GANSSAssistanceForOneGANSS._ext = []
    
    #-----< GANSSAssistance >-----#
    GANSSAssistance = BIT_STR(name='GANSSAssistance', mode=MODE_TYPE)
    GANSSAssistance._cont = ASN1Dict([('realTimeIntegrity', 0), ('differentialCorrections', 1), ('almanac', 2), ('referenceMeasurementInformation', 3), ('navigationModel', 4), ('timeModelGNSS-UTC', 5), ('timeModelGNSS-GNSS', 6), ('databitassistance', 7), ('ephemerisExtension', 8), ('ephemerisExtensionCheck', 9), ('addUTCmodel', 10), ('auxiliaryInformation', 11), ('gANSSRefMeasurementAssist-R12-Ext', 12), ('bdsDifferentialCorrections-r12', 13), ('bdsGridModel-r12', 14)])
    GANSSAssistance._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GANSSAdditionalAssistanceChoices >-----#
    GANSSAdditionalAssistanceChoices = SEQ_OF(name='GANSSAdditionalAssistanceChoices', mode=MODE_TYPE)
    _GANSSAdditionalAssistanceChoices__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RRLP-Components', 'GANSSAdditionalAssistanceChoicesForOneGANSS')))
    GANSSAdditionalAssistanceChoices._cont = _GANSSAdditionalAssistanceChoices__item_
    GANSSAdditionalAssistanceChoices._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GANSSAdditionalAssistanceChoicesForOneGANSS >-----#
    GANSSAdditionalAssistanceChoicesForOneGANSS = SEQ(name='GANSSAdditionalAssistanceChoicesForOneGANSS', mode=MODE_TYPE)
    _GANSSAdditionalAssistanceChoicesForOneGANSS_ganssID = INT(name='ganssID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GANSSAdditionalAssistanceChoicesForOneGANSS_ganssID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _GANSSAdditionalAssistanceChoicesForOneGANSS_ganssClockModelChoice = BIT_STR(name='ganssClockModelChoice', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSModelID')), opt=True)
    _GANSSAdditionalAssistanceChoicesForOneGANSS_gannsOrbitModelChoice = BIT_STR(name='gannsOrbitModelChoice', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSModelID')), opt=True)
    _GANSSAdditionalAssistanceChoicesForOneGANSS_ganssAlmanacModelChoice = BIT_STR(name='ganssAlmanacModelChoice', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSModelID')), opt=True)
    _GANSSAdditionalAssistanceChoicesForOneGANSS_ganssAdditionalUTCModelChoice = BIT_STR(name='ganssAdditionalUTCModelChoice', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSModelID')), opt=True)
    GANSSAdditionalAssistanceChoicesForOneGANSS._cont = ASN1Dict([
        ('ganssID', _GANSSAdditionalAssistanceChoicesForOneGANSS_ganssID),
        ('ganssClockModelChoice', _GANSSAdditionalAssistanceChoicesForOneGANSS_ganssClockModelChoice),
        ('gannsOrbitModelChoice', _GANSSAdditionalAssistanceChoicesForOneGANSS_gannsOrbitModelChoice),
        ('ganssAlmanacModelChoice', _GANSSAdditionalAssistanceChoicesForOneGANSS_ganssAlmanacModelChoice),
        ('ganssAdditionalUTCModelChoice', _GANSSAdditionalAssistanceChoicesForOneGANSS_ganssAdditionalUTCModelChoice),
        ])
    GANSSAdditionalAssistanceChoicesForOneGANSS._ext = []
    
    #-----< GANSSModelID >-----#
    GANSSModelID = BIT_STR(name='GANSSModelID', mode=MODE_TYPE)
    GANSSModelID._cont = ASN1Dict([('model1', 0), ('model2', 1), ('model3', 2), ('model4', 3), ('model5', 4), ('model6', 5), ('model7', 6), ('model8', 7)])
    GANSSModelID._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< AssistanceNeeded >-----#
    AssistanceNeeded = SEQ(name='AssistanceNeeded', mode=MODE_TYPE)
    _AssistanceNeeded_gpsAssistanceData = OCT_STR(name='gpsAssistanceData', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GPSAssistanceData')), opt=True)
    _AssistanceNeeded_ganssAssistanceData = OCT_STR(name='ganssAssistanceData', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'GANSSAssistanceData')), opt=True)
    AssistanceNeeded._cont = ASN1Dict([
        ('gpsAssistanceData', _AssistanceNeeded_gpsAssistanceData),
        ('ganssAssistanceData', _AssistanceNeeded_ganssAssistanceData),
        ])
    AssistanceNeeded._ext = []
    
    _all_ = [
        _MsrPosition_Req_positionInstruct,
        _MsrPosition_Req_referenceAssistData,
        _MsrPosition_Req_msrAssistData,
        _MsrPosition_Req_systemInfoAssistData,
        _MsrPosition_Req_gps_AssistData,
        _MsrPosition_Req_extensionContainer,
        _MsrPosition_Req_rel98_MsrPosition_Req_extension,
        _MsrPosition_Req_rel5_MsrPosition_Req_extension,
        _MsrPosition_Req_rel7_MsrPosition_Req_extension,
        MsrPosition_Req,
        _MsrPosition_Rsp_multipleSets,
        _MsrPosition_Rsp_referenceIdentity,
        _MsrPosition_Rsp_otd_MeasureInfo,
        _MsrPosition_Rsp_locationInfo,
        _MsrPosition_Rsp_gps_MeasureInfo,
        _MsrPosition_Rsp_locationError,
        _MsrPosition_Rsp_extensionContainer,
        _MsrPosition_Rsp_rel_98_MsrPosition_Rsp_Extension,
        _MsrPosition_Rsp_rel_5_MsrPosition_Rsp_Extension,
        _MsrPosition_Rsp_rel_7_MsrPosition_Rsp_Extension,
        MsrPosition_Rsp,
        _AssistanceData_referenceAssistData,
        _AssistanceData_msrAssistData,
        _AssistanceData_systemInfoAssistData,
        _AssistanceData_gps_AssistData,
        _AssistanceData_moreAssDataToBeSent,
        _AssistanceData_extensionContainer,
        _AssistanceData_rel98_AssistanceData_Extension,
        _AssistanceData_rel5_AssistanceData_Extension,
        _AssistanceData_rel7_AssistanceData_Extension,
        AssistanceData,
        _ProtocolError_errorCause,
        _ProtocolError_extensionContainer,
        _ProtocolError_rel_5_ProtocolError_Extension,
        ProtocolError,
        _PosCapability_Req_extended_reference,
        _PosCapability_Req_gANSSPositionMethods,
        _PosCapability_Req_extensionContainer,
        PosCapability_Req,
        _PosCapability_Rsp_extended_reference,
        _PosCapability_Rsp_posCapabilities,
        _PosCapability_Rsp_assistanceSupported,
        _PosCapability_Rsp_assistanceNeeded,
        _PosCapability_Rsp_extensionContainer,
        PosCapability_Rsp,
        _PositionInstruct_methodType,
        _PositionInstruct_positionMethod,
        _PositionInstruct_measureResponseTime,
        _PositionInstruct_useMultipleSets,
        _PositionInstruct_environmentCharacter,
        PositionInstruct,
        _MethodType_msAssisted,
        _MethodType_msBased,
        _MethodType_msBasedPref,
        _MethodType_msAssistedPref,
        MethodType,
        _AccuracyOpt_accuracy,
        AccuracyOpt,
        Accuracy,
        PositionMethod,
        MeasureResponseTime,
        UseMultipleSets,
        EnvironmentCharacter,
        _ReferenceAssistData_bcchCarrier,
        _ReferenceAssistData_bsic,
        _ReferenceAssistData_timeSlotScheme,
        _ReferenceAssistData_btsPosition,
        ReferenceAssistData,
        BTSPosition,
        BCCHCarrier,
        BSIC,
        TimeSlotScheme,
        ModuloTimeSlot,
        _MsrAssistData_msrAssistList,
        MsrAssistData,
        _SeqOfMsrAssistBTS__item_,
        SeqOfMsrAssistBTS,
        _MsrAssistBTS_bcchCarrier,
        _MsrAssistBTS_bsic,
        _MsrAssistBTS_multiFrameOffset,
        _MsrAssistBTS_timeSlotScheme,
        _MsrAssistBTS_roughRTD,
        _MsrAssistBTS_calcAssistanceBTS,
        MsrAssistBTS,
        MultiFrameOffset,
        RoughRTD,
        _SystemInfoAssistData_systemInfoAssistList,
        SystemInfoAssistData,
        _SeqOfSystemInfoAssistBTS__item_,
        SeqOfSystemInfoAssistBTS,
        _SystemInfoAssistBTS_notPresent,
        _SystemInfoAssistBTS_present,
        SystemInfoAssistBTS,
        _AssistBTSData_bsic,
        _AssistBTSData_multiFrameOffset,
        _AssistBTSData_timeSlotScheme,
        _AssistBTSData_roughRTD,
        _AssistBTSData_calcAssistanceBTS,
        AssistBTSData,
        _CalcAssistanceBTS_fineRTD,
        _CalcAssistanceBTS_referenceWGS84,
        CalcAssistanceBTS,
        _ReferenceWGS84_relativeNorth,
        _ReferenceWGS84_relativeEast,
        _ReferenceWGS84_relativeAlt,
        ReferenceWGS84,
        FineRTD,
        RelDistance,
        RelativeAlt,
        _MultipleSets_nbrOfSets,
        _MultipleSets_nbrOfReferenceBTSs,
        _MultipleSets_referenceRelation,
        MultipleSets,
        ReferenceRelation,
        _ReferenceIdentity_refBTSList,
        ReferenceIdentity,
        _SeqOfReferenceIdentityType__item_,
        SeqOfReferenceIdentityType,
        _ReferenceIdentityType_bsicAndCarrier,
        _ReferenceIdentityType_ci,
        _ReferenceIdentityType_requestIndex,
        _ReferenceIdentityType_systemInfoIndex,
        _ReferenceIdentityType_ciAndLAC,
        ReferenceIdentityType,
        _BSICAndCarrier_carrier,
        _BSICAndCarrier_bsic,
        BSICAndCarrier,
        RequestIndex,
        SystemInfoIndex,
        _CellIDAndLAC_referenceLAC,
        _CellIDAndLAC_referenceCI,
        CellIDAndLAC,
        CellID,
        LAC,
        _OTD_MeasureInfo_otdMsrFirstSets,
        _OTD_MeasureInfo_otdMsrRestSets,
        OTD_MeasureInfo,
        _SeqOfOTD_MsrElementRest__item_,
        SeqOfOTD_MsrElementRest,
        _OTD_MsrElementFirst_refFrameNumber,
        _OTD_MsrElementFirst_referenceTimeSlot,
        _OTD_MsrElementFirst_toaMeasurementsOfRef,
        _OTD_MsrElementFirst_stdResolution,
        _OTD_MsrElementFirst_taCorrection,
        _OTD_MsrElementFirst_otd_FirstSetMsrs,
        OTD_MsrElementFirst,
        _SeqOfOTD_FirstSetMsrs__item_,
        SeqOfOTD_FirstSetMsrs,
        _OTD_MsrElementRest_refFrameNumber,
        _OTD_MsrElementRest_referenceTimeSlot,
        _OTD_MsrElementRest_toaMeasurementsOfRef,
        _OTD_MsrElementRest_stdResolution,
        _OTD_MsrElementRest_taCorrection,
        _OTD_MsrElementRest_otd_MsrsOfOtherSets,
        OTD_MsrElementRest,
        _SeqOfOTD_MsrsOfOtherSets__item_,
        SeqOfOTD_MsrsOfOtherSets,
        _TOA_MeasurementsOfRef_refQuality,
        _TOA_MeasurementsOfRef_numOfMeasurements,
        TOA_MeasurementsOfRef,
        RefQuality,
        NumOfMeasurements,
        StdResolution,
        OTD_FirstSetMsrs,
        _OTD_MsrsOfOtherSets_identityNotPresent,
        _OTD_MsrsOfOtherSets_identityPresent,
        OTD_MsrsOfOtherSets,
        _OTD_Measurement_nborTimeSlot,
        _OTD_Measurement_eotdQuality,
        _OTD_Measurement_otdValue,
        OTD_Measurement,
        _OTD_MeasurementWithID_neighborIdentity,
        _OTD_MeasurementWithID_nborTimeSlot,
        _OTD_MeasurementWithID_eotdQuality,
        _OTD_MeasurementWithID_otdValue,
        OTD_MeasurementWithID,
        _EOTDQuality_nbrOfMeasurements,
        _EOTDQuality_stdOfEOTD,
        EOTDQuality,
        _NeighborIdentity_bsicAndCarrier,
        _NeighborIdentity_ci,
        _NeighborIdentity_multiFrameCarrier,
        _NeighborIdentity_requestIndex,
        _NeighborIdentity_systemInfoIndex,
        _NeighborIdentity_ciAndLAC,
        NeighborIdentity,
        _MultiFrameCarrier_bcchCarrier,
        _MultiFrameCarrier_multiFrameOffset,
        MultiFrameCarrier,
        OTDValue,
        _LocationInfo_refFrame,
        _LocationInfo_gpsTOW,
        _LocationInfo_fixType,
        _LocationInfo_posEstimate,
        LocationInfo,
        FixType,
        _GPS_MeasureInfo_gpsMsrSetList,
        GPS_MeasureInfo,
        _SeqOfGPS_MsrSetElement__item_,
        SeqOfGPS_MsrSetElement,
        _GPS_MsrSetElement_refFrame,
        _GPS_MsrSetElement_gpsTOW,
        _GPS_MsrSetElement_gps_msrList,
        GPS_MsrSetElement,
        GPSTOW24b,
        _SeqOfGPS_MsrElement__item_,
        SeqOfGPS_MsrElement,
        _GPS_MsrElement_satelliteID,
        _GPS_MsrElement_cNo,
        _GPS_MsrElement_doppler,
        _GPS_MsrElement_wholeChips,
        _GPS_MsrElement_fracChips,
        _GPS_MsrElement_mpathIndic,
        _GPS_MsrElement_pseuRangeRMSErr,
        GPS_MsrElement,
        MpathIndic,
        _LocationError_locErrorReason,
        _LocationError_additionalAssistanceData,
        LocationError,
        LocErrorReason,
        _AdditionalAssistanceData_gpsAssistanceData,
        _AdditionalAssistanceData_extensionContainer,
        _AdditionalAssistanceData_ganssAssistanceData,
        AdditionalAssistanceData,
        GPSAssistanceData,
        maxGPSAssistanceData,
        GANSSAssistanceData,
        maxGANSSAssistanceData,
        ErrorCodes,
        _GPS_AssistData_controlHeader,
        GPS_AssistData,
        MoreAssDataToBeSent,
        _ControlHeader_referenceTime,
        _ControlHeader_refLocation,
        _ControlHeader_dgpsCorrections,
        _ControlHeader_navigationModel,
        _ControlHeader_ionosphericModel,
        _ControlHeader_utcModel,
        _ControlHeader_almanac,
        _ControlHeader_acquisAssist,
        _ControlHeader_realTimeIntegrity,
        ControlHeader,
        _ReferenceTime_gpsTime,
        _ReferenceTime_gsmTime,
        _ReferenceTime_gpsTowAssist,
        ReferenceTime,
        _GPSTime_gpsTOW23b,
        _GPSTime_gpsWeek,
        GPSTime,
        GPSTOW23b,
        GPSWeek,
        _GPSTOWAssist__item_,
        GPSTOWAssist,
        _GPSTOWAssistElement_satelliteID,
        _GPSTOWAssistElement_tlmWord,
        _GPSTOWAssistElement_antiSpoof,
        _GPSTOWAssistElement_alert,
        _GPSTOWAssistElement_tlmRsvdBits,
        GPSTOWAssistElement,
        TLMWord,
        AntiSpoofFlag,
        AlertFlag,
        TLMReservedBits,
        _GSMTime_bcchCarrier,
        _GSMTime_bsic,
        _GSMTime_frameNumber,
        _GSMTime_timeSlot,
        _GSMTime_bitNumber,
        GSMTime,
        FrameNumber,
        TimeSlot,
        BitNumber,
        _RefLocation_threeDLocation,
        RefLocation,
        _DGPSCorrections_gpsTOW,
        _DGPSCorrections_status,
        _DGPSCorrections_satList,
        DGPSCorrections,
        _SeqOfSatElement__item_,
        SeqOfSatElement,
        _SatElement_satelliteID,
        _SatElement_iode,
        _SatElement_udre,
        _SatElement_pseudoRangeCor,
        _SatElement_rangeRateCor,
        _SatElement_deltaPseudoRangeCor2,
        _SatElement_deltaRangeRateCor2,
        _SatElement_deltaPseudoRangeCor3,
        _SatElement_deltaRangeRateCor3,
        SatElement,
        SatelliteID,
        _NavigationModel_navModelList,
        NavigationModel,
        _SeqOfNavModelElement__item_,
        SeqOfNavModelElement,
        _NavModelElement_satelliteID,
        _NavModelElement_satStatus,
        NavModelElement,
        _SatStatus_newSatelliteAndModelUC,
        _SatStatus_oldSatelliteAndModel,
        _SatStatus_newNaviModelUC,
        SatStatus,
        _UncompressedEphemeris_ephemCodeOnL2,
        _UncompressedEphemeris_ephemURA,
        _UncompressedEphemeris_ephemSVhealth,
        _UncompressedEphemeris_ephemIODC,
        _UncompressedEphemeris_ephemL2Pflag,
        _UncompressedEphemeris_ephemSF1Rsvd,
        _UncompressedEphemeris_ephemTgd,
        _UncompressedEphemeris_ephemToc,
        _UncompressedEphemeris_ephemAF2,
        _UncompressedEphemeris_ephemAF1,
        _UncompressedEphemeris_ephemAF0,
        _UncompressedEphemeris_ephemCrs,
        _UncompressedEphemeris_ephemDeltaN,
        _UncompressedEphemeris_ephemM0,
        _UncompressedEphemeris_ephemCuc,
        _UncompressedEphemeris_ephemE,
        _UncompressedEphemeris_ephemCus,
        _UncompressedEphemeris_ephemAPowerHalf,
        _UncompressedEphemeris_ephemToe,
        _UncompressedEphemeris_ephemFitFlag,
        _UncompressedEphemeris_ephemAODA,
        _UncompressedEphemeris_ephemCic,
        _UncompressedEphemeris_ephemOmegaA0,
        _UncompressedEphemeris_ephemCis,
        _UncompressedEphemeris_ephemI0,
        _UncompressedEphemeris_ephemCrc,
        _UncompressedEphemeris_ephemW,
        _UncompressedEphemeris_ephemOmegaADot,
        _UncompressedEphemeris_ephemIDot,
        UncompressedEphemeris,
        _EphemerisSubframe1Reserved_reserved1,
        _EphemerisSubframe1Reserved_reserved2,
        _EphemerisSubframe1Reserved_reserved3,
        _EphemerisSubframe1Reserved_reserved4,
        EphemerisSubframe1Reserved,
        _IonosphericModel_alfa0,
        _IonosphericModel_alfa1,
        _IonosphericModel_alfa2,
        _IonosphericModel_alfa3,
        _IonosphericModel_beta0,
        _IonosphericModel_beta1,
        _IonosphericModel_beta2,
        _IonosphericModel_beta3,
        IonosphericModel,
        _UTCModel_utcA1,
        _UTCModel_utcA0,
        _UTCModel_utcTot,
        _UTCModel_utcWNt,
        _UTCModel_utcDeltaTls,
        _UTCModel_utcWNlsf,
        _UTCModel_utcDN,
        _UTCModel_utcDeltaTlsf,
        UTCModel,
        _Almanac_alamanacWNa,
        _Almanac_almanacList,
        Almanac,
        _SeqOfAlmanacElement__item_,
        SeqOfAlmanacElement,
        _AlmanacElement_satelliteID,
        _AlmanacElement_almanacE,
        _AlmanacElement_alamanacToa,
        _AlmanacElement_almanacKsii,
        _AlmanacElement_almanacOmegaDot,
        _AlmanacElement_almanacSVhealth,
        _AlmanacElement_almanacAPowerHalf,
        _AlmanacElement_almanacOmega0,
        _AlmanacElement_almanacW,
        _AlmanacElement_almanacM0,
        _AlmanacElement_almanacAF0,
        _AlmanacElement_almanacAF1,
        AlmanacElement,
        _AcquisAssist_timeRelation,
        _AcquisAssist_acquisList,
        AcquisAssist,
        _SeqOfAcquisElement__item_,
        SeqOfAcquisElement,
        _TimeRelation_gpsTOW,
        _TimeRelation_gsmTime,
        TimeRelation,
        _AcquisElement_svid,
        _AcquisElement_doppler0,
        _AcquisElement_addionalDoppler,
        _AcquisElement_codePhase,
        _AcquisElement_intCodePhase,
        _AcquisElement_gpsBitNumber,
        _AcquisElement_codePhaseSearchWindow,
        _AcquisElement_addionalAngle,
        AcquisElement,
        _AddionalDopplerFields_doppler1,
        _AddionalDopplerFields_dopplerUncertainty,
        AddionalDopplerFields,
        _AddionalAngleFields_azimuth,
        _AddionalAngleFields_elevation,
        AddionalAngleFields,
        _SeqOf_BadSatelliteSet__item_,
        SeqOf_BadSatelliteSet,
        _Rel98_MsrPosition_Req_Extension_rel98_Ext_ExpOTD,
        _Rel98_MsrPosition_Req_Extension_gpsTimeAssistanceMeasurementRequest,
        _Rel98_MsrPosition_Req_Extension_gpsReferenceTimeUncertainty,
        Rel98_MsrPosition_Req_Extension,
        _Rel98_AssistanceData_Extension_rel98_Ext_ExpOTD,
        _Rel98_AssistanceData_Extension_gpsTimeAssistanceMeasurementRequest,
        _Rel98_AssistanceData_Extension_gpsReferenceTimeUncertainty,
        Rel98_AssistanceData_Extension,
        _Rel98_Ext_ExpOTD_msrAssistData_R98_ExpOTD,
        _Rel98_Ext_ExpOTD_systemInfoAssistData_R98_ExpOTD,
        Rel98_Ext_ExpOTD,
        _MsrAssistData_R98_ExpOTD_msrAssistList_R98_ExpOTD,
        MsrAssistData_R98_ExpOTD,
        _SeqOfMsrAssistBTS_R98_ExpOTD__item_,
        SeqOfMsrAssistBTS_R98_ExpOTD,
        _MsrAssistBTS_R98_ExpOTD_expectedOTD,
        _MsrAssistBTS_R98_ExpOTD_expOTDUncertainty,
        MsrAssistBTS_R98_ExpOTD,
        _SystemInfoAssistData_R98_ExpOTD_systemInfoAssistListR98_ExpOTD,
        SystemInfoAssistData_R98_ExpOTD,
        _SeqOfSystemInfoAssistBTS_R98_ExpOTD__item_,
        SeqOfSystemInfoAssistBTS_R98_ExpOTD,
        _SystemInfoAssistBTS_R98_ExpOTD_notPresent,
        _SystemInfoAssistBTS_R98_ExpOTD_present,
        SystemInfoAssistBTS_R98_ExpOTD,
        _AssistBTSData_R98_ExpOTD_expectedOTD,
        _AssistBTSData_R98_ExpOTD_expOTDuncertainty,
        AssistBTSData_R98_ExpOTD,
        ExpectedOTD,
        ExpOTDUncertainty,
        GPSReferenceTimeUncertainty,
        _GPSTimeAssistanceMeasurements_referenceFrameMSB,
        _GPSTimeAssistanceMeasurements_gpsTowSubms,
        _GPSTimeAssistanceMeasurements_deltaTow,
        _GPSTimeAssistanceMeasurements_gpsReferenceTimeUncertainty,
        GPSTimeAssistanceMeasurements,
        __Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo_otd_MeasureInfo_R98_Ext,
        _Rel_98_MsrPosition_Rsp_Extension_rel_98_Ext_MeasureInfo,
        _Rel_98_MsrPosition_Rsp_Extension_timeAssistanceMeasurements,
        Rel_98_MsrPosition_Rsp_Extension,
        _OTD_MeasureInfo_R98_Ext_otdMsrFirstSets_R98_Ext,
        OTD_MeasureInfo_R98_Ext,
        _OTD_MsrElementFirst_R98_Ext_otd_FirstSetMsrs_R98_Ext,
        OTD_MsrElementFirst_R98_Ext,
        _SeqOfOTD_FirstSetMsrs_R98_Ext__item_,
        SeqOfOTD_FirstSetMsrs_R98_Ext,
        _Rel_5_MsrPosition_Rsp_Extension_extended_reference,
        _Rel_5_MsrPosition_Rsp_Extension_otd_MeasureInfo_5_Ext,
        _Rel_5_MsrPosition_Rsp_Extension_ulPseudoSegInd,
        Rel_5_MsrPosition_Rsp_Extension,
        _Extended_reference_smlc_code,
        _Extended_reference_transaction_ID,
        Extended_reference,
        OTD_MeasureInfo_5_Ext,
        UlPseudoSegInd,
        _Rel5_MsrPosition_Req_Extension_extended_reference,
        Rel5_MsrPosition_Req_Extension,
        _Rel5_AssistanceData_Extension_extended_reference,
        Rel5_AssistanceData_Extension,
        _Rel_5_ProtocolError_Extension_extended_reference,
        Rel_5_ProtocolError_Extension,
        _Rel7_MsrPosition_Req_Extension_velocityRequested,
        _Rel7_MsrPosition_Req_Extension_ganssPositionMethod,
        _Rel7_MsrPosition_Req_Extension_ganss_AssistData,
        _Rel7_MsrPosition_Req_Extension_ganssCarrierPhaseMeasurementRequest,
        _Rel7_MsrPosition_Req_Extension_ganssTODGSMTimeAssociationMeasurementRequest,
        _Rel7_MsrPosition_Req_Extension_requiredResponseTime,
        _Rel7_MsrPosition_Req_Extension_add_GPS_AssistData,
        _Rel7_MsrPosition_Req_Extension_ganssMultiFreqMeasurementRequest,
        Rel7_MsrPosition_Req_Extension,
        GANSSPositioningMethod,
        _GANSS_AssistData_ganss_controlHeader,
        GANSS_AssistData,
        _GANSS_ControlHeader_ganssCommonAssistData,
        _GANSS_ControlHeader_ganssGenericAssistDataList,
        GANSS_ControlHeader,
        _GANSSCommonAssistData_ganssReferenceTime,
        _GANSSCommonAssistData_ganssRefLocation,
        _GANSSCommonAssistData_ganssIonosphericModel,
        _GANSSCommonAssistData_ganssAddIonosphericModel,
        _GANSSCommonAssistData_ganssEarthOrientParam,
        _GANSSCommonAssistData_ganssReferenceTime_R10_Ext,
        GANSSCommonAssistData,
        _SeqOfGANSSGenericAssistDataElement__item_,
        SeqOfGANSSGenericAssistDataElement,
        _GANSSGenericAssistDataElement_ganssID,
        _GANSSGenericAssistDataElement_ganssTimeModel,
        _GANSSGenericAssistDataElement_ganssDiffCorrections,
        _GANSSGenericAssistDataElement_ganssNavigationModel,
        _GANSSGenericAssistDataElement_ganssRealTimeIntegrity,
        _GANSSGenericAssistDataElement_ganssDataBitAssist,
        _GANSSGenericAssistDataElement_ganssRefMeasurementAssist,
        _GANSSGenericAssistDataElement_ganssAlmanacModel,
        _GANSSGenericAssistDataElement_ganssUTCModel,
        _GANSSGenericAssistDataElement_ganssEphemerisExtension,
        _GANSSGenericAssistDataElement_ganssEphemerisExtCheck,
        _GANSSGenericAssistDataElement_sbasID,
        _GANSSGenericAssistDataElement_ganssAddUTCModel,
        _GANSSGenericAssistDataElement_ganssAuxiliaryInfo,
        _GANSSGenericAssistDataElement_ganssDiffCorrectionsValidityPeriod,
        _GANSSGenericAssistDataElement_ganssTimeModel_R10_Ext,
        _GANSSGenericAssistDataElement_ganssRefMeasurementAssist_R10_Ext,
        _GANSSGenericAssistDataElement_ganssAlmanacModel_R10_Ext,
        _GANSSGenericAssistDataElement_ganssAlmanacModel_R12_Ext,
        _GANSSGenericAssistDataElement_ganssRefMeasurementAssist_R12_Ext,
        _GANSSGenericAssistDataElement_bdsDifferentialCorrections_r12,
        _GANSSGenericAssistDataElement_bdsGridModel_r12,
        GANSSGenericAssistDataElement,
        _GANSSReferenceTime_ganssRefTimeInfo,
        _GANSSReferenceTime_ganssTOD_GSMTimeAssociation,
        GANSSReferenceTime,
        _GANSSRefTimeInfo_ganssDay,
        _GANSSRefTimeInfo_ganssTOD,
        _GANSSRefTimeInfo_ganssTODUncertainty,
        _GANSSRefTimeInfo_ganssTimeID,
        GANSSRefTimeInfo,
        GANSSTOD,
        GANSSTODUncertainty,
        _GANSSReferenceTime_R10_Ext_ganssDayCycleNumber,
        GANSSReferenceTime_R10_Ext,
        _GANSSTOD_GSMTimeAssociation_bcchCarrier,
        _GANSSTOD_GSMTimeAssociation_bsic,
        _GANSSTOD_GSMTimeAssociation_frameNumber,
        _GANSSTOD_GSMTimeAssociation_timeSlot,
        _GANSSTOD_GSMTimeAssociation_bitNumber,
        _GANSSTOD_GSMTimeAssociation_frameDrift,
        GANSSTOD_GSMTimeAssociation,
        FrameDrift,
        _GANSSRefLocation_threeDLocation,
        GANSSRefLocation,
        _GANSSIonosphericModel_ganssIonoModel,
        _GANSSIonosphericModel_ganssIonoStormFlags,
        GANSSIonosphericModel,
        _GANSSIonosphereModel_ai0,
        _GANSSIonosphereModel_ai1,
        _GANSSIonosphereModel_ai2,
        GANSSIonosphereModel,
        _GANSSIonoStormFlags_ionoStormFlag1,
        _GANSSIonoStormFlags_ionoStormFlag2,
        _GANSSIonoStormFlags_ionoStormFlag3,
        _GANSSIonoStormFlags_ionoStormFlag4,
        _GANSSIonoStormFlags_ionoStormFlag5,
        GANSSIonoStormFlags,
        _GANSSAddIonosphericModel_dataID,
        _GANSSAddIonosphericModel_ionoModel,
        GANSSAddIonosphericModel,
        _GANSSEarthOrientParam_teop,
        _GANSSEarthOrientParam_pmX,
        _GANSSEarthOrientParam_pmXdot,
        _GANSSEarthOrientParam_pmY,
        _GANSSEarthOrientParam_pmYdot,
        _GANSSEarthOrientParam_deltaUT1,
        _GANSSEarthOrientParam_deltaUT1dot,
        GANSSEarthOrientParam,
        _SeqOfGANSSTimeModel__item_,
        SeqOfGANSSTimeModel,
        _GANSSTimeModelElement_ganssTimeModelRefTime,
        _GANSSTimeModelElement_tA0,
        _GANSSTimeModelElement_tA1,
        _GANSSTimeModelElement_tA2,
        _GANSSTimeModelElement_gnssTOID,
        _GANSSTimeModelElement_weekNumber,
        GANSSTimeModelElement,
        TA0,
        TA1,
        TA2,
        _SeqOfGANSSTimeModel_R10_Ext__item_,
        SeqOfGANSSTimeModel_R10_Ext,
        _GANSSTimeModelElement_R10_Ext_gnssTOID,
        _GANSSTimeModelElement_R10_Ext_deltaT,
        GANSSTimeModelElement_R10_Ext,
        _GANSSDiffCorrections_dganssRefTime,
        _GANSSDiffCorrections_sgnTypeList,
        GANSSDiffCorrections,
        _SeqOfSgnTypeElement__item_,
        SeqOfSgnTypeElement,
        _SgnTypeElement_ganssSignalID,
        _SgnTypeElement_ganssStatusHealth,
        _SgnTypeElement_dganssSgnList,
        SgnTypeElement,
        GANSSSignalID,
        _SeqOfDGANSSSgnElement__item_,
        SeqOfDGANSSSgnElement,
        _DGANSSSgnElement_svID,
        _DGANSSSgnElement_iod,
        _DGANSSSgnElement_udre,
        _DGANSSSgnElement_pseudoRangeCor,
        _DGANSSSgnElement_rangeRateCor,
        DGANSSSgnElement,
        SVID,
        _GANSSNavModel_nonBroadcastIndFlag,
        _GANSSNavModel_ganssSatelliteList,
        GANSSNavModel,
        _SeqOfGANSSSatelliteElement__item_,
        SeqOfGANSSSatelliteElement,
        _GANSSSatelliteElement_svID,
        _GANSSSatelliteElement_svHealth,
        _GANSSSatelliteElement_iod,
        _GANSSSatelliteElement_ganssClockModel,
        _GANSSSatelliteElement_ganssOrbitModel,
        _GANSSSatelliteElement_svHealthMSB,
        _GANSSSatelliteElement_iodMSB,
        _GANSSSatelliteElement_svHealthExt,
        GANSSSatelliteElement,
        _GANSSOrbitModel_keplerianSet,
        _GANSSOrbitModel_navKeplerianSet,
        _GANSSOrbitModel_cnavKeplerianSet,
        _GANSSOrbitModel_glonassECEF,
        _GANSSOrbitModel_sbasECEF,
        _GANSSOrbitModel_bdsKeplerianSet_r12,
        GANSSOrbitModel,
        _NavModel_KeplerianSet_keplerToe,
        _NavModel_KeplerianSet_keplerW,
        _NavModel_KeplerianSet_keplerDeltaN,
        _NavModel_KeplerianSet_keplerM0,
        _NavModel_KeplerianSet_keplerOmegaDot,
        _NavModel_KeplerianSet_keplerE,
        _NavModel_KeplerianSet_keplerIDot,
        _NavModel_KeplerianSet_keplerAPowerHalf,
        _NavModel_KeplerianSet_keplerI0,
        _NavModel_KeplerianSet_keplerOmega0,
        _NavModel_KeplerianSet_keplerCrs,
        _NavModel_KeplerianSet_keplerCis,
        _NavModel_KeplerianSet_keplerCus,
        _NavModel_KeplerianSet_keplerCrc,
        _NavModel_KeplerianSet_keplerCic,
        _NavModel_KeplerianSet_keplerCuc,
        NavModel_KeplerianSet,
        _NavModel_NAVKeplerianSet_navURA,
        _NavModel_NAVKeplerianSet_navFitFlag,
        _NavModel_NAVKeplerianSet_navToe,
        _NavModel_NAVKeplerianSet_navOmega,
        _NavModel_NAVKeplerianSet_navDeltaN,
        _NavModel_NAVKeplerianSet_navM0,
        _NavModel_NAVKeplerianSet_navOmegaADot,
        _NavModel_NAVKeplerianSet_navE,
        _NavModel_NAVKeplerianSet_navIDot,
        _NavModel_NAVKeplerianSet_navAPowerHalf,
        _NavModel_NAVKeplerianSet_navI0,
        _NavModel_NAVKeplerianSet_navOmegaA0,
        _NavModel_NAVKeplerianSet_navCrs,
        _NavModel_NAVKeplerianSet_navCis,
        _NavModel_NAVKeplerianSet_navCus,
        _NavModel_NAVKeplerianSet_navCrc,
        _NavModel_NAVKeplerianSet_navCic,
        _NavModel_NAVKeplerianSet_navCuc,
        NavModel_NAVKeplerianSet,
        _NavModel_CNAVKeplerianSet_cnavTop,
        _NavModel_CNAVKeplerianSet_cnavURAindex,
        _NavModel_CNAVKeplerianSet_cnavDeltaA,
        _NavModel_CNAVKeplerianSet_cnavAdot,
        _NavModel_CNAVKeplerianSet_cnavDeltaNo,
        _NavModel_CNAVKeplerianSet_cnavDeltaNoDot,
        _NavModel_CNAVKeplerianSet_cnavMo,
        _NavModel_CNAVKeplerianSet_cnavE,
        _NavModel_CNAVKeplerianSet_cnavOmega,
        _NavModel_CNAVKeplerianSet_cnavOMEGA0,
        _NavModel_CNAVKeplerianSet_cnavDeltaOmegaDot,
        _NavModel_CNAVKeplerianSet_cnavIo,
        _NavModel_CNAVKeplerianSet_cnavIoDot,
        _NavModel_CNAVKeplerianSet_cnavCis,
        _NavModel_CNAVKeplerianSet_cnavCic,
        _NavModel_CNAVKeplerianSet_cnavCrs,
        _NavModel_CNAVKeplerianSet_cnavCrc,
        _NavModel_CNAVKeplerianSet_cnavCus,
        _NavModel_CNAVKeplerianSet_cnavCuc,
        NavModel_CNAVKeplerianSet,
        _NavModel_GLONASSecef_gloEn,
        _NavModel_GLONASSecef_gloP1,
        _NavModel_GLONASSecef_gloP2,
        _NavModel_GLONASSecef_gloM,
        _NavModel_GLONASSecef_gloX,
        _NavModel_GLONASSecef_gloXdot,
        _NavModel_GLONASSecef_gloXdotdot,
        _NavModel_GLONASSecef_gloY,
        _NavModel_GLONASSecef_gloYdot,
        _NavModel_GLONASSecef_gloYdotdot,
        _NavModel_GLONASSecef_gloZ,
        _NavModel_GLONASSecef_gloZdot,
        _NavModel_GLONASSecef_gloZdotdot,
        NavModel_GLONASSecef,
        _NavModel_SBASecef_sbasTo,
        _NavModel_SBASecef_sbasAccuracy,
        _NavModel_SBASecef_sbasXg,
        _NavModel_SBASecef_sbasYg,
        _NavModel_SBASecef_sbasZg,
        _NavModel_SBASecef_sbasXgDot,
        _NavModel_SBASecef_sbasYgDot,
        _NavModel_SBASecef_sbasZgDot,
        _NavModel_SBASecef_sbasXgDotDot,
        _NavModel_SBASecef_sbagYgDotDot,
        _NavModel_SBASecef_sbasZgDotDot,
        NavModel_SBASecef,
        _NavModel_BDSKeplerianSet_r12_bdsAODE_r12,
        _NavModel_BDSKeplerianSet_r12_bdsURAI_r12,
        _NavModel_BDSKeplerianSet_r12_bdsToe_r12,
        _NavModel_BDSKeplerianSet_r12_bdsAPowerHalf_r12,
        _NavModel_BDSKeplerianSet_r12_bdsE_r12,
        _NavModel_BDSKeplerianSet_r12_bdsW_r12,
        _NavModel_BDSKeplerianSet_r12_bdsDeltaN_r12,
        _NavModel_BDSKeplerianSet_r12_bdsM0_r12,
        _NavModel_BDSKeplerianSet_r12_bdsOmega0_r12,
        _NavModel_BDSKeplerianSet_r12_bdsOmegaDot_r12,
        _NavModel_BDSKeplerianSet_r12_bdsI0_r12,
        _NavModel_BDSKeplerianSet_r12_bdsIDot_r12,
        _NavModel_BDSKeplerianSet_r12_bdsCuc_r12,
        _NavModel_BDSKeplerianSet_r12_bdsCus_r12,
        _NavModel_BDSKeplerianSet_r12_bdsCrc_r12,
        _NavModel_BDSKeplerianSet_r12_bdsCrs_r12,
        _NavModel_BDSKeplerianSet_r12_bdsCic_r12,
        _NavModel_BDSKeplerianSet_r12_bdsCis_r12,
        NavModel_BDSKeplerianSet_r12,
        _GANSSClockModel_standardClockModelList,
        _GANSSClockModel_navClockModel,
        _GANSSClockModel_cnavClockModel,
        _GANSSClockModel_glonassClockModel,
        _GANSSClockModel_sbasClockModel,
        _GANSSClockModel_bdsClockModel_r12,
        GANSSClockModel,
        _SeqOfStandardClockModelElement__item_,
        SeqOfStandardClockModelElement,
        _StandardClockModelElement_stanClockToc,
        _StandardClockModelElement_stanClockAF2,
        _StandardClockModelElement_stanClockAF1,
        _StandardClockModelElement_stanClockAF0,
        _StandardClockModelElement_stanClockTgd,
        _StandardClockModelElement_stanModelID,
        StandardClockModelElement,
        _NAVclockModel_navToc,
        _NAVclockModel_navaf2,
        _NAVclockModel_navaf1,
        _NAVclockModel_navaf0,
        _NAVclockModel_navTgd,
        NAVclockModel,
        _CNAVclockModel_cnavToc,
        _CNAVclockModel_cnavTop,
        _CNAVclockModel_cnavURA0,
        _CNAVclockModel_cnavURA1,
        _CNAVclockModel_cnavURA2,
        _CNAVclockModel_cnavAf2,
        _CNAVclockModel_cnavAf1,
        _CNAVclockModel_cnavAf0,
        _CNAVclockModel_cnavTgd,
        _CNAVclockModel_cnavISCl1cp,
        _CNAVclockModel_cnavISCl1cd,
        _CNAVclockModel_cnavISCl1ca,
        _CNAVclockModel_cnavISCl2c,
        _CNAVclockModel_cnavISCl5i5,
        _CNAVclockModel_cnavISCl5q5,
        CNAVclockModel,
        _GLONASSclockModel_gloTau,
        _GLONASSclockModel_gloGamma,
        _GLONASSclockModel_gloDeltaTau,
        GLONASSclockModel,
        _SBASclockModel_sbasTo,
        _SBASclockModel_sbasAgfo,
        _SBASclockModel_sbasAgf1,
        SBASclockModel,
        _BDSClockModel_r12_bdsAODC_r12,
        _BDSClockModel_r12_bdsToc_r12,
        _BDSClockModel_r12_bdsA0_r12,
        _BDSClockModel_r12_bdsA1_r12,
        _BDSClockModel_r12_bdsA2_r12,
        _BDSClockModel_r12_bdsTgd1_r12,
        BDSClockModel_r12,
        _GANSSRealTimeIntegrity_ganssBadSignalList,
        GANSSRealTimeIntegrity,
        _SeqOfBadSignalElement__item_,
        SeqOfBadSignalElement,
        _BadSignalElement_badSVID,
        _BadSignalElement_badSignalID,
        BadSignalElement,
        _GANSSDataBitAssist_ganssTOD,
        _GANSSDataBitAssist_ganssDataBitsSatList,
        GANSSDataBitAssist,
        _SeqOfGanssDataBitsElement__item_,
        SeqOfGanssDataBitsElement,
        _GanssDataBitsElement_svID,
        _GanssDataBitsElement_ganssDataBitsSgnList,
        GanssDataBitsElement,
        _Seq_OfGANSSDataBitsSgn__item_,
        Seq_OfGANSSDataBitsSgn,
        _GANSSDataBitsSgnElement_ganssSignalType,
        _GANSSDataBitsSgnElement_ganssDataBits,
        GANSSDataBitsSgnElement,
        _SeqOf_GANSSDataBits__item_,
        SeqOf_GANSSDataBits,
        GANSSDataBit,
        _GANSSRefMeasurementAssist_ganssSignalID,
        _GANSSRefMeasurementAssist_ganssRefMeasAssistList,
        GANSSRefMeasurementAssist,
        _SeqOfGANSSRefMeasurementElement__item_,
        SeqOfGANSSRefMeasurementElement,
        _GANSSRefMeasurementElement_svID,
        _GANSSRefMeasurementElement_doppler0,
        _GANSSRefMeasurementElement_additionalDoppler,
        _GANSSRefMeasurementElement_codePhase,
        _GANSSRefMeasurementElement_intCodePhase,
        _GANSSRefMeasurementElement_codePhaseSearchWindow,
        _GANSSRefMeasurementElement_additionalAngle,
        _GANSSRefMeasurementElement_codePhase1023,
        GANSSRefMeasurementElement,
        _AdditionalDopplerFields_doppler1,
        _AdditionalDopplerFields_dopplerUncertainty,
        AdditionalDopplerFields,
        _GANSSRefMeasurementAssist_R10_Ext__item_,
        GANSSRefMeasurementAssist_R10_Ext,
        _GANSSRefMeasurement_R10_Ext_Element_svID,
        _GANSSRefMeasurement_R10_Ext_Element_azimuthLSB,
        _GANSSRefMeasurement_R10_Ext_Element_elevationLSB,
        GANSSRefMeasurement_R10_Ext_Element,
        _GANSSRefMeasurementAssist_R12_Ext_ganssSignalID,
        _GANSSRefMeasurementAssist_R12_Ext_confidence,
        _GANSSRefMeasurementAssist_R12_Ext_ganssRefMeasAssistList,
        GANSSRefMeasurementAssist_R12_Ext,
        _SeqOfGANSSRefMeasurementElement_R12__item_,
        SeqOfGANSSRefMeasurementElement_R12,
        _GANSSRefMeasurement_R12_Ext_Element_svID,
        _GANSSRefMeasurement_R12_Ext_Element_dopplerUncertaintyExt,
        GANSSRefMeasurement_R12_Ext_Element,
        _GANSSAlmanacModel_weekNumber,
        _GANSSAlmanacModel_toa,
        _GANSSAlmanacModel_ioda,
        _GANSSAlmanacModel_ganssAlmanacList,
        GANSSAlmanacModel,
        _SeqOfGANSSAlmanacElement__item_,
        SeqOfGANSSAlmanacElement,
        _GANSSAlmanacElement_keplerianAlmanacSet,
        _GANSSAlmanacElement_keplerianNAVAlmanac,
        _GANSSAlmanacElement_keplerianReducedAlmanac,
        _GANSSAlmanacElement_keplerianMidiAlmanac,
        _GANSSAlmanacElement_keplerianGLONASS,
        _GANSSAlmanacElement_ecefSBASAlmanac,
        _GANSSAlmanacElement_keplerianBDSAlmanac_r12,
        GANSSAlmanacElement,
        _Almanac_KeplerianSet_svID,
        _Almanac_KeplerianSet_kepAlmanacE,
        _Almanac_KeplerianSet_kepAlmanacDeltaI,
        _Almanac_KeplerianSet_kepAlmanacOmegaDot,
        _Almanac_KeplerianSet_kepSVStatusINAV,
        _Almanac_KeplerianSet_kepSVStatusFNAV,
        _Almanac_KeplerianSet_kepAlmanacAPowerHalf,
        _Almanac_KeplerianSet_kepAlmanacOmega0,
        _Almanac_KeplerianSet_kepAlmanacW,
        _Almanac_KeplerianSet_kepAlmanacM0,
        _Almanac_KeplerianSet_kepAlmanacAF0,
        _Almanac_KeplerianSet_kepAlmanacAF1,
        Almanac_KeplerianSet,
        _Almanac_NAVKeplerianSet_svID,
        _Almanac_NAVKeplerianSet_navAlmE,
        _Almanac_NAVKeplerianSet_navAlmDeltaI,
        _Almanac_NAVKeplerianSet_navAlmOMEGADOT,
        _Almanac_NAVKeplerianSet_navAlmSVHealth,
        _Almanac_NAVKeplerianSet_navAlmSqrtA,
        _Almanac_NAVKeplerianSet_navAlmOMEGAo,
        _Almanac_NAVKeplerianSet_navAlmOmega,
        _Almanac_NAVKeplerianSet_navAlmMo,
        _Almanac_NAVKeplerianSet_navAlmaf0,
        _Almanac_NAVKeplerianSet_navAlmaf1,
        Almanac_NAVKeplerianSet,
        _Almanac_ReducedKeplerianSet_svID,
        _Almanac_ReducedKeplerianSet_redAlmDeltaA,
        _Almanac_ReducedKeplerianSet_redAlmOmega0,
        _Almanac_ReducedKeplerianSet_redAlmPhi0,
        _Almanac_ReducedKeplerianSet_redAlmL1Health,
        _Almanac_ReducedKeplerianSet_redAlmL2Health,
        _Almanac_ReducedKeplerianSet_redAlmL5Health,
        Almanac_ReducedKeplerianSet,
        _Almanac_MidiAlmanacSet_svID,
        _Almanac_MidiAlmanacSet_midiAlmE,
        _Almanac_MidiAlmanacSet_midiAlmDeltaI,
        _Almanac_MidiAlmanacSet_midiAlmOmegaDot,
        _Almanac_MidiAlmanacSet_midiAlmSqrtA,
        _Almanac_MidiAlmanacSet_midiAlmOmega0,
        _Almanac_MidiAlmanacSet_midiAlmOmega,
        _Almanac_MidiAlmanacSet_midiAlmMo,
        _Almanac_MidiAlmanacSet_midiAlmaf0,
        _Almanac_MidiAlmanacSet_midiAlmaf1,
        _Almanac_MidiAlmanacSet_midiAlmL1Health,
        _Almanac_MidiAlmanacSet_midiAlmL2Health,
        _Almanac_MidiAlmanacSet_midiAlmL5Health,
        Almanac_MidiAlmanacSet,
        _Almanac_GlonassAlmanacSet_gloAlmNA,
        _Almanac_GlonassAlmanacSet_gloAlmnA,
        _Almanac_GlonassAlmanacSet_gloAlmHA,
        _Almanac_GlonassAlmanacSet_gloAlmLambdaA,
        _Almanac_GlonassAlmanacSet_gloAlmtlambdaA,
        _Almanac_GlonassAlmanacSet_gloAlmDeltaIa,
        _Almanac_GlonassAlmanacSet_gloAlmDeltaTA,
        _Almanac_GlonassAlmanacSet_gloAlmDeltaTdotA,
        _Almanac_GlonassAlmanacSet_gloAlmEpsilonA,
        _Almanac_GlonassAlmanacSet_gloAlmOmegaA,
        _Almanac_GlonassAlmanacSet_gloAlmTauA,
        _Almanac_GlonassAlmanacSet_gloAlmCA,
        _Almanac_GlonassAlmanacSet_gloAlmMA,
        Almanac_GlonassAlmanacSet,
        _Almanac_ECEFsbasAlmanacSet_sbasAlmDataID,
        _Almanac_ECEFsbasAlmanacSet_svID,
        _Almanac_ECEFsbasAlmanacSet_sbasAlmHealth,
        _Almanac_ECEFsbasAlmanacSet_sbasAlmXg,
        _Almanac_ECEFsbasAlmanacSet_sbasAlmYg,
        _Almanac_ECEFsbasAlmanacSet_sbasAlmZg,
        _Almanac_ECEFsbasAlmanacSet_sbasAlmXgdot,
        _Almanac_ECEFsbasAlmanacSet_sbasAlmYgDot,
        _Almanac_ECEFsbasAlmanacSet_sbasAlmZgDot,
        _Almanac_ECEFsbasAlmanacSet_sbasAlmTo,
        Almanac_ECEFsbasAlmanacSet,
        _Almanac_BDSAlmanacSet_r12_svID,
        _Almanac_BDSAlmanacSet_r12_bdsAlmToa_r12,
        _Almanac_BDSAlmanacSet_r12_bdsAlmSqrtA_r12,
        _Almanac_BDSAlmanacSet_r12_bdsAlmE_r12,
        _Almanac_BDSAlmanacSet_r12_bdsAlmW_r12,
        _Almanac_BDSAlmanacSet_r12_bdsAlmM0_r12,
        _Almanac_BDSAlmanacSet_r12_bdsAlmOmega0_r12,
        _Almanac_BDSAlmanacSet_r12_bdsAlmOmegaDot_r12,
        _Almanac_BDSAlmanacSet_r12_bdsAlmDeltaI_r12,
        _Almanac_BDSAlmanacSet_r12_bdsAlmA0_r12,
        _Almanac_BDSAlmanacSet_r12_bdsAlmA1_r12,
        _Almanac_BDSAlmanacSet_r12_bdsSvHealth_r12,
        Almanac_BDSAlmanacSet_r12,
        _GANSSAlmanacModel_R10_Ext_completeAlmanacProvided,
        GANSSAlmanacModel_R10_Ext,
        _GANSSAlmanacModel_R12_Ext_toa_ext,
        _GANSSAlmanacModel_R12_Ext_ioda_ext,
        GANSSAlmanacModel_R12_Ext,
        _GANSSUTCModel_ganssUtcA1,
        _GANSSUTCModel_ganssUtcA0,
        _GANSSUTCModel_ganssUtcTot,
        _GANSSUTCModel_ganssUtcWNt,
        _GANSSUTCModel_ganssUtcDeltaTls,
        _GANSSUTCModel_ganssUtcWNlsf,
        _GANSSUTCModel_ganssUtcDN,
        _GANSSUTCModel_ganssUtcDeltaTlsf,
        GANSSUTCModel,
        _GANSSEphemerisExtension_ganssEphemerisHeader,
        _GANSSEphemerisExtension_ganssReferenceSet,
        _GANSSEphemerisExtension_ganssephemerisDeltasMatrix,
        GANSSEphemerisExtension,
        _GANSSEphemerisExtensionHeader_timeAtEstimation,
        _GANSSEphemerisExtensionHeader_validityPeriod,
        _GANSSEphemerisExtensionHeader_ephemerisExtensionDuration,
        GANSSEphemerisExtensionHeader,
        _GANSSEphemerisExtensionTime_ganssEphExtDay,
        _GANSSEphemerisExtensionTime_ganssEphExtTOD,
        GANSSEphemerisExtensionTime,
        _ReferenceNavModel_keplerToe,
        _ReferenceNavModel_keplerW,
        _ReferenceNavModel_keplerDeltaN,
        _ReferenceNavModel_keplerM0,
        _ReferenceNavModel_keplerOmegaDot,
        _ReferenceNavModel_keplerE,
        _ReferenceNavModel_keplerIDot,
        _ReferenceNavModel_keplerAPowerHalf,
        _ReferenceNavModel_keplerI0,
        _ReferenceNavModel_keplerOmega0,
        _ReferenceNavModel_keplerCrs,
        _ReferenceNavModel_keplerCis,
        _ReferenceNavModel_keplerCus,
        _ReferenceNavModel_keplerCrc,
        _ReferenceNavModel_keplerCic,
        _ReferenceNavModel_keplerCuc,
        ReferenceNavModel,
        _SeqOfGANSSRefOrbit__item_,
        SeqOfGANSSRefOrbit,
        _GANSSReferenceOrbit_svID,
        _GANSSReferenceOrbit_ganssOrbitModel,
        _GANSSReferenceOrbit_ganssClockModel,
        GANSSReferenceOrbit,
        _GANSSEphemerisDeltaMatrix__item_,
        GANSSEphemerisDeltaMatrix,
        _GANSSEphemerisDeltaEpoch_ganssDeltaEpochHeader,
        _GANSSEphemerisDeltaEpoch_ganssDeltaElementList,
        GANSSEphemerisDeltaEpoch,
        _GANSSDeltaEpochHeader_validityPeriod,
        _GANSSDeltaEpochHeader_ephemerisDeltaSizes,
        _GANSSDeltaEpochHeader_ephemerisDeltaScales,
        GANSSDeltaEpochHeader,
        _GANSSDeltaElementList__item_,
        GANSSDeltaElementList,
        _GANSSEphemerisDeltaBitSizes_bitsize_delta_omega,
        _GANSSEphemerisDeltaBitSizes_bitsize_delta_deltaN,
        _GANSSEphemerisDeltaBitSizes_bitsize_delta_m0,
        _GANSSEphemerisDeltaBitSizes_bitsize_delta_omegadot,
        _GANSSEphemerisDeltaBitSizes_bitsize_delta_e,
        _GANSSEphemerisDeltaBitSizes_bitsize_delta_idot,
        _GANSSEphemerisDeltaBitSizes_bitsize_delta_sqrtA,
        _GANSSEphemerisDeltaBitSizes_bitsize_delta_i0,
        _GANSSEphemerisDeltaBitSizes_bitsize_delta_omega0,
        _GANSSEphemerisDeltaBitSizes_bitsize_delta_crs,
        _GANSSEphemerisDeltaBitSizes_bitsize_delta_cis,
        _GANSSEphemerisDeltaBitSizes_bitsize_delta_cus,
        _GANSSEphemerisDeltaBitSizes_bitsize_delta_crc,
        _GANSSEphemerisDeltaBitSizes_bitsize_delta_cic,
        _GANSSEphemerisDeltaBitSizes_bitsize_delta_cuc,
        _GANSSEphemerisDeltaBitSizes_bitsize_delta_tgd1,
        _GANSSEphemerisDeltaBitSizes_bitsize_delta_tgd2,
        GANSSEphemerisDeltaBitSizes,
        _GANSSEphemerisDeltaScales_scale_delta_omega,
        _GANSSEphemerisDeltaScales_scale_delta_deltaN,
        _GANSSEphemerisDeltaScales_scale_delta_m0,
        _GANSSEphemerisDeltaScales_scale_delta_omegadot,
        _GANSSEphemerisDeltaScales_scale_delta_e,
        _GANSSEphemerisDeltaScales_scale_delta_idot,
        _GANSSEphemerisDeltaScales_scale_delta_sqrtA,
        _GANSSEphemerisDeltaScales_scale_delta_i0,
        _GANSSEphemerisDeltaScales_scale_delta_omega0,
        _GANSSEphemerisDeltaScales_scale_delta_crs,
        _GANSSEphemerisDeltaScales_scale_delta_cis,
        _GANSSEphemerisDeltaScales_scale_delta_cus,
        _GANSSEphemerisDeltaScales_scale_delta_crc,
        _GANSSEphemerisDeltaScales_scale_delta_cic,
        _GANSSEphemerisDeltaScales_scale_delta_cuc,
        _GANSSEphemerisDeltaScales_scale_delta_tgd1,
        _GANSSEphemerisDeltaScales_scale_delta_tgd2,
        GANSSEphemerisDeltaScales,
        _GANSSEphemerisExtensionCheck_ganssBeginTime,
        _GANSSEphemerisExtensionCheck_ganssEndTime,
        _GANSSEphemerisExtensionCheck_ganssSatEventsInfo,
        GANSSEphemerisExtensionCheck,
        _GANSSSatEventsInfo_eventOccured,
        _GANSSSatEventsInfo_futureEventNoted,
        GANSSSatEventsInfo,
        _GANSSAddUTCModel_utcModel2,
        _GANSSAddUTCModel_utcModel3,
        _GANSSAddUTCModel_utcModel4,
        _GANSSAddUTCModel_utcModel5_r12,
        GANSSAddUTCModel,
        _UTCmodelSet2_utcA0,
        _UTCmodelSet2_utcA1,
        _UTCmodelSet2_utcA2,
        _UTCmodelSet2_utcDeltaTls,
        _UTCmodelSet2_utcTot,
        _UTCmodelSet2_utcWNot,
        _UTCmodelSet2_utcWNlsf,
        _UTCmodelSet2_utcDN,
        _UTCmodelSet2_utcDeltaTlsf,
        UTCmodelSet2,
        _UTCmodelSet3_nA,
        _UTCmodelSet3_tauC,
        _UTCmodelSet3_b1,
        _UTCmodelSet3_b2,
        _UTCmodelSet3_kp,
        UTCmodelSet3,
        _UTCmodelSet4_utcA1wnt,
        _UTCmodelSet4_utcA0wnt,
        _UTCmodelSet4_utcTot,
        _UTCmodelSet4_utcWNt,
        _UTCmodelSet4_utcDeltaTls,
        _UTCmodelSet4_utcWNlsf,
        _UTCmodelSet4_utcDN,
        _UTCmodelSet4_utcDeltaTlsf,
        _UTCmodelSet4_utcStandardID,
        UTCmodelSet4,
        _UTCmodelSet5_r12_utcA0_r12,
        _UTCmodelSet5_r12_utcA1_r12,
        _UTCmodelSet5_r12_utcDeltaTls_r12,
        _UTCmodelSet5_r12_utcWNlsf_r12,
        _UTCmodelSet5_r12_utcDN_r12,
        _UTCmodelSet5_r12_utcDeltaTlsf_r12,
        UTCmodelSet5_r12,
        _GANSSAuxiliaryInformation_ganssID1,
        _GANSSAuxiliaryInformation_ganssID3,
        GANSSAuxiliaryInformation,
        _GANSS_ID1__item_,
        GANSS_ID1,
        _GANSS_ID1_element_svID,
        _GANSS_ID1_element_signalsAvailable,
        GANSS_ID1_element,
        _GANSS_ID3__item_,
        GANSS_ID3,
        _GANSS_ID3_element_svID,
        _GANSS_ID3_element_signalsAvailable,
        _GANSS_ID3_element_channelNumber,
        GANSS_ID3_element,
        _GANSSDiffCorrectionsValidityPeriod__item_,
        GANSSDiffCorrectionsValidityPeriod,
        _DGANSSExtensionSgnTypeElement_ganssSignalID,
        _DGANSSExtensionSgnTypeElement_dganssExtensionSgnList,
        DGANSSExtensionSgnTypeElement,
        _SeqOfDGANSSExtensionSgnElement__item_,
        SeqOfDGANSSExtensionSgnElement,
        _DGANSSExtensionSgnElement_svID,
        _DGANSSExtensionSgnElement_udreGrowthRate,
        _DGANSSExtensionSgnElement_udreValidityTime,
        DGANSSExtensionSgnElement,
        RequiredResponseTime,
        _Add_GPS_AssistData_add_GPS_controlHeader,
        Add_GPS_AssistData,
        _Add_GPS_ControlHeader_gpsEphemerisExtension,
        _Add_GPS_ControlHeader_gpsEphemerisExtensionCheck,
        _Add_GPS_ControlHeader_dgpsCorrectionsValidityPeriod,
        _Add_GPS_ControlHeader_gpsReferenceTime_R10_Ext,
        _Add_GPS_ControlHeader_gpsAcquisAssist_R10_Ext,
        _Add_GPS_ControlHeader_gpsAlmanac_R10_Ext,
        _Add_GPS_ControlHeader_gpsAcquisAssist_R12_Ext,
        Add_GPS_ControlHeader,
        _GPSClockModel_af2,
        _GPSClockModel_af1,
        _GPSClockModel_af0,
        _GPSClockModel_tgd,
        GPSClockModel,
        _GPSEphemerisExtension_gpsEphemerisHeader,
        _GPSEphemerisExtension_gpsReferenceSet,
        _GPSEphemerisExtension_gpsephemerisDeltaMatrix,
        GPSEphemerisExtension,
        _GPSEphemerisExtensionHeader_timeofEstimation,
        _GPSEphemerisExtensionHeader_validityPeriod,
        _GPSEphemerisExtensionHeader_ephemerisExtensionDuration,
        GPSEphemerisExtensionHeader,
        _GPSEphemerisExtensionTime_gpsWeek,
        _GPSEphemerisExtensionTime_gpsTOW,
        GPSEphemerisExtensionTime,
        _SeqOfGPSRefOrbit__item_,
        SeqOfGPSRefOrbit,
        _GPSReferenceOrbit_svID,
        _GPSReferenceOrbit_gpsOrbitModel,
        _GPSReferenceOrbit_gpsClockModel,
        GPSReferenceOrbit,
        _GPSEphemerisDeltaMatrix__item_,
        GPSEphemerisDeltaMatrix,
        _GPSEphemerisDeltaEpoch_gpsDeltaEpochHeader,
        _GPSEphemerisDeltaEpoch_gpsDeltaElementList,
        GPSEphemerisDeltaEpoch,
        _GPSDeltaEpochHeader_validityPeriod,
        _GPSDeltaEpochHeader_ephemerisDeltaSizes,
        _GPSDeltaEpochHeader_ephemerisDeltaScales,
        GPSDeltaEpochHeader,
        _GPSDeltaElementList__item_,
        GPSDeltaElementList,
        _GPSEphemerisDeltaBitSizes_bitsize_delta_omega,
        _GPSEphemerisDeltaBitSizes_bitsize_delta_deltaN,
        _GPSEphemerisDeltaBitSizes_bitsize_delta_m0,
        _GPSEphemerisDeltaBitSizes_bitsize_delta_omegadot,
        _GPSEphemerisDeltaBitSizes_bitsize_delta_e,
        _GPSEphemerisDeltaBitSizes_bitsize_delta_idot,
        _GPSEphemerisDeltaBitSizes_bitsize_delta_sqrtA,
        _GPSEphemerisDeltaBitSizes_bitsize_delta_i0,
        _GPSEphemerisDeltaBitSizes_bitsize_delta_omega0,
        _GPSEphemerisDeltaBitSizes_bitsize_delta_crs,
        _GPSEphemerisDeltaBitSizes_bitsize_delta_cis,
        _GPSEphemerisDeltaBitSizes_bitsize_delta_cus,
        _GPSEphemerisDeltaBitSizes_bitsize_delta_crc,
        _GPSEphemerisDeltaBitSizes_bitsize_delta_cic,
        _GPSEphemerisDeltaBitSizes_bitsize_delta_cuc,
        _GPSEphemerisDeltaBitSizes_bitsize_delta_tgd,
        GPSEphemerisDeltaBitSizes,
        _GPSEphemerisDeltaScales_scale_delta_omega,
        _GPSEphemerisDeltaScales_scale_delta_deltaN,
        _GPSEphemerisDeltaScales_scale_delta_m0,
        _GPSEphemerisDeltaScales_scale_delta_omegadot,
        _GPSEphemerisDeltaScales_scale_delta_e,
        _GPSEphemerisDeltaScales_scale_delta_idot,
        _GPSEphemerisDeltaScales_scale_delta_sqrtA,
        _GPSEphemerisDeltaScales_scale_delta_i0,
        _GPSEphemerisDeltaScales_scale_delta_omega0,
        _GPSEphemerisDeltaScales_scale_delta_crs,
        _GPSEphemerisDeltaScales_scale_delta_cis,
        _GPSEphemerisDeltaScales_scale_delta_cus,
        _GPSEphemerisDeltaScales_scale_delta_crc,
        _GPSEphemerisDeltaScales_scale_delta_cic,
        _GPSEphemerisDeltaScales_scale_delta_cuc,
        _GPSEphemerisDeltaScales_scale_delta_tgd,
        GPSEphemerisDeltaScales,
        _GPSEphemerisExtensionCheck_gpsBeginTime,
        _GPSEphemerisExtensionCheck_gpsEndTime,
        _GPSEphemerisExtensionCheck_gpsSatEventsInfo,
        GPSEphemerisExtensionCheck,
        _GPSSatEventsInfo_eventOccured,
        _GPSSatEventsInfo_futureEventNoted,
        GPSSatEventsInfo,
        _DGPSCorrectionsValidityPeriod__item_,
        DGPSCorrectionsValidityPeriod,
        _DGPSExtensionSatElement_satelliteID,
        _DGPSExtensionSatElement_udreGrowthRate,
        _DGPSExtensionSatElement_udreValidityTime,
        DGPSExtensionSatElement,
        _GPSReferenceTime_R10_Ext_gpsWeekCycleNumber,
        GPSReferenceTime_R10_Ext,
        _GPSAcquisAssist_R10_Ext__item_,
        GPSAcquisAssist_R10_Ext,
        _GPSAcquisAssist_R10_Ext_Element_satelliteID,
        _GPSAcquisAssist_R10_Ext_Element_azimuthLSB,
        _GPSAcquisAssist_R10_Ext_Element_elevationLSB,
        GPSAcquisAssist_R10_Ext_Element,
        _GPSAcquisAssist_R12_Ext_confidence,
        _GPSAcquisAssist_R12_Ext_acquisList,
        GPSAcquisAssist_R12_Ext,
        _SeqOfGPSAcquisAssist_R12_Ext__item_,
        SeqOfGPSAcquisAssist_R12_Ext,
        _GPSAcquisAssist_R12_Ext_Element_satelliteID,
        _GPSAcquisAssist_R12_Ext_Element_dopplerUncertaintyExt,
        GPSAcquisAssist_R12_Ext_Element,
        _GPSAlmanac_R10_Ext_completeAlmanacProvided,
        GPSAlmanac_R10_Ext,
        _Rel_7_MsrPosition_Rsp_Extension_velEstimate,
        _Rel_7_MsrPosition_Rsp_Extension_ganssLocationInfo,
        _Rel_7_MsrPosition_Rsp_Extension_ganssMeasureInfo,
        Rel_7_MsrPosition_Rsp_Extension,
        _GANSSLocationInfo_referenceFrame,
        _GANSSLocationInfo_ganssTODm,
        _GANSSLocationInfo_ganssTODFrac,
        _GANSSLocationInfo_ganssTODUncertainty,
        _GANSSLocationInfo_ganssTimeID,
        _GANSSLocationInfo_fixType,
        _GANSSLocationInfo_posData,
        _GANSSLocationInfo_stationaryIndication,
        _GANSSLocationInfo_posEstimate,
        GANSSLocationInfo,
        PositionData,
        GANSSTODm,
        _ReferenceFrame_referenceFN,
        _ReferenceFrame_referenceFNMSB,
        ReferenceFrame,
        _GANSSMeasureInfo_ganssMsrSetList,
        GANSSMeasureInfo,
        _SeqOfGANSS_MsrSetElement__item_,
        SeqOfGANSS_MsrSetElement,
        _GANSS_MsrSetElement_referenceFrame,
        _GANSS_MsrSetElement_ganssTODm,
        _GANSS_MsrSetElement_deltaGANSSTOD,
        _GANSS_MsrSetElement_ganssTODUncertainty,
        _GANSS_MsrSetElement_ganss_MsrElementList,
        GANSS_MsrSetElement,
        _SeqOfGANSS_MsrElement__item_,
        SeqOfGANSS_MsrElement,
        _GANSS_MsrElement_ganssID,
        _GANSS_MsrElement_ganss_SgnTypeList,
        GANSS_MsrElement,
        _SeqOfGANSS_SgnTypeElement__item_,
        SeqOfGANSS_SgnTypeElement,
        _GANSS_SgnTypeElement_ganssSignalID,
        _GANSS_SgnTypeElement_ganssCodePhaseAmbiguity,
        _GANSS_SgnTypeElement_ganss_SgnList,
        GANSS_SgnTypeElement,
        _SeqOfGANSS_SgnElement__item_,
        SeqOfGANSS_SgnElement,
        _GANSS_SgnElement_svID,
        _GANSS_SgnElement_cNo,
        _GANSS_SgnElement_mpathDet,
        _GANSS_SgnElement_carrierQualityInd,
        _GANSS_SgnElement_codePhase,
        _GANSS_SgnElement_integerCodePhase,
        _GANSS_SgnElement_codePhaseRMSError,
        _GANSS_SgnElement_doppler,
        _GANSS_SgnElement_adr,
        GANSS_SgnElement,
        _Rel7_AssistanceData_Extension_ganss_AssistData,
        _Rel7_AssistanceData_Extension_ganssCarrierPhaseMeasurementRequest,
        _Rel7_AssistanceData_Extension_ganssTODGSMTimeAssociationMeasurementRequest,
        _Rel7_AssistanceData_Extension_add_GPS_AssistData,
        Rel7_AssistanceData_Extension,
        _BDS_DiffCorrections_r12_dbds_RefTime_r12,
        _BDS_DiffCorrections_r12_bds_SgnTypeList_r12,
        BDS_DiffCorrections_r12,
        _BDS_SgnTypeList_r12__item_,
        BDS_SgnTypeList_r12,
        _BDS_SgnTypeElement_r12_ganssSignalID,
        _BDS_SgnTypeElement_r12_dbds_CorrectionList_r12,
        BDS_SgnTypeElement_r12,
        _DBDS_CorrectionList_r12__item_,
        DBDS_CorrectionList_r12,
        _DBDS_CorrectionElement_r12_svID,
        _DBDS_CorrectionElement_r12_bds_UDREI_r12,
        _DBDS_CorrectionElement_r12_bds_RURAI_r12,
        _DBDS_CorrectionElement_r12_bds_ECC_DeltaT_r12,
        DBDS_CorrectionElement_r12,
        _BDS_GridModelParameter_r12_bds_RefTime_r12,
        _BDS_GridModelParameter_r12_gridIonList_r12,
        BDS_GridModelParameter_r12,
        _GridIonList_r12__item_,
        GridIonList_r12,
        _GridIonElement_r12_igp_ID_r12,
        _GridIonElement_r12_dt_r12,
        _GridIonElement_r12_givei_r12,
        GridIonElement_r12,
        _PosCapabilities_nonGANSSpositionMethods,
        _PosCapabilities_gANSSPositionMethods,
        _PosCapabilities_multipleMeasurementSets,
        PosCapabilities,
        NonGANSSPositionMethods,
        _GANSSPositionMethods__item_,
        GANSSPositionMethods,
        _GANSSPositionMethod_ganssID,
        _GANSSPositionMethod_gANSSPositioningMethodTypes,
        _GANSSPositionMethod_gANSSSignals,
        _GANSSPositionMethod_sbasID,
        GANSSPositionMethod,
        GANSSPositioningMethodTypes,
        GANSSSignals,
        SBASID,
        MultipleMeasurementSets,
        _AssistanceSupported_gpsAssistance,
        _AssistanceSupported_gANSSAssistanceSet,
        _AssistanceSupported_gANSSAdditionalAssistanceChoices,
        AssistanceSupported,
        GPSAssistance,
        _GANSSAssistanceSet_commonGANSSAssistance,
        _GANSSAssistanceSet_specificGANSSAssistance,
        GANSSAssistanceSet,
        CommonGANSSAssistance,
        _SpecificGANSSAssistance__item_,
        SpecificGANSSAssistance,
        _GANSSAssistanceForOneGANSS_ganssID,
        _GANSSAssistanceForOneGANSS_gANSSAssistance,
        GANSSAssistanceForOneGANSS,
        GANSSAssistance,
        _GANSSAdditionalAssistanceChoices__item_,
        GANSSAdditionalAssistanceChoices,
        _GANSSAdditionalAssistanceChoicesForOneGANSS_ganssID,
        _GANSSAdditionalAssistanceChoicesForOneGANSS_ganssClockModelChoice,
        _GANSSAdditionalAssistanceChoicesForOneGANSS_gannsOrbitModelChoice,
        _GANSSAdditionalAssistanceChoicesForOneGANSS_ganssAlmanacModelChoice,
        _GANSSAdditionalAssistanceChoicesForOneGANSS_ganssAdditionalUTCModelChoice,
        GANSSAdditionalAssistanceChoicesForOneGANSS,
        GANSSModelID,
        _AssistanceNeeded_gpsAssistanceData,
        _AssistanceNeeded_ganssAssistanceData,
        AssistanceNeeded,
    ]

class RRLP_messages:

    _name_  = 'RRLP-messages'
    _oid_   = []
    
    _obj_ = [
        'PDU',
        'RRLP-Component',
        ]
    _type_ = [
        'PDU',
        'RRLP-Component',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< PDU >-----#
    PDU = SEQ(name='PDU', mode=MODE_TYPE)
    _PDU_referenceNumber = INT(name='referenceNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PDU_referenceNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _PDU_component = CHOICE(name='component', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('RRLP-messages', 'RRLP-Component')))
    PDU._cont = ASN1Dict([
        ('referenceNumber', _PDU_referenceNumber),
        ('component', _PDU_component),
        ])
    PDU._ext = None
    
    #-----< RRLP-Component >-----#
    RRLP_Component = CHOICE(name='RRLP-Component', mode=MODE_TYPE)
    _RRLP_Component_msrPositionReq = SEQ(name='msrPositionReq', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'MsrPosition-Req')))
    _RRLP_Component_msrPositionRsp = SEQ(name='msrPositionRsp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'MsrPosition-Rsp')))
    _RRLP_Component_assistanceData = SEQ(name='assistanceData', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'AssistanceData')))
    _RRLP_Component_assistanceDataAck = NULL(name='assistanceDataAck', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RRLP_Component_protocolError = SEQ(name='protocolError', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'ProtocolError')))
    _RRLP_Component_posCapabilityReq = SEQ(name='posCapabilityReq', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'PosCapability-Req')))
    _RRLP_Component_posCapabilityRsp = SEQ(name='posCapabilityRsp', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RRLP-Components', 'PosCapability-Rsp')))
    RRLP_Component._cont = ASN1Dict([
        ('msrPositionReq', _RRLP_Component_msrPositionReq),
        ('msrPositionRsp', _RRLP_Component_msrPositionRsp),
        ('assistanceData', _RRLP_Component_assistanceData),
        ('assistanceDataAck', _RRLP_Component_assistanceDataAck),
        ('protocolError', _RRLP_Component_protocolError),
        ('posCapabilityReq', _RRLP_Component_posCapabilityReq),
        ('posCapabilityRsp', _RRLP_Component_posCapabilityRsp),
        ])
    RRLP_Component._ext = ['posCapabilityReq', 'posCapabilityRsp']
    
    _all_ = [
        _PDU_referenceNumber,
        _PDU_component,
        PDU,
        _RRLP_Component_msrPositionReq,
        _RRLP_Component_msrPositionRsp,
        _RRLP_Component_assistanceData,
        _RRLP_Component_assistanceDataAck,
        _RRLP_Component_protocolError,
        _RRLP_Component_posCapabilityReq,
        _RRLP_Component_posCapabilityRsp,
        RRLP_Component,
    ]

init_modules(MAP_SS_Code, MAP_TS_Code, MAP_BS_Code, MAP_CommonDataTypes, MAP_ER_DataTypes, MAP_ExtensionDataTypes, MAP_LCS_DataTypes, MAP_MS_DataTypes, MAP_OM_DataTypes, MAP_SM_DataTypes, MAP_SS_DataTypes, RRLP_Components, RRLP_messages)
